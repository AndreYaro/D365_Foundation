<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInventJournalTransMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjInventJournalTransMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a dimension set that can be applied to the ProjInventJournalTransMap.dimension field.
    /// The method ensures that potential linked dimensions are not overwritten.
    /// </summary>
    /// <param name="_dimension">
    /// A dimension set that should be applied to the ProjInventJournalTransMap.dimension field.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A dimensionCopy object previously instantiated using the current ProjInventJournalTransMap buffer; optional.
    /// </param>
    /// <returns>
    /// Dimension set that can be applied to the ProjInventJournalTransMap.dimension field.
    /// </returns>
    public DimensionDefault copyDimension(DimensionDefault _dimension, DimensionCopy _dimensionCopy = DimensionCopy::newFromCommon(this, CompanyInfo::findDataArea(curext()).RecId))
    {
        return _dimensionCopy.copy(_dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventDim</c> record that is related to the current item.
    /// </summary>
    /// <param name="_forUpdate">A boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A <c>InventDim</c> record; otherwise, an empty buffer.</returns>
    public InventDim inventDim(boolean _update = false)
    {
        return InventDim::find(this.InventDimId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInventDim2Dimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defaults ProjInventJournalTransMap.dimension values based on the InventDim record buffer values.
    /// </summary>
    /// <param name="_currentInventDim">
    /// The <c>InventDim</c> record buffer linked to the current record buffer.
    /// </param>
    /// <param name="_parentInventDim">
    /// The <c>InventDim</c> record buffer that was previously linked to the current record buffer.
    /// </param>
    public void linkInventDim2Dimension(InventDim _currentInventDim, InventDim _parentInventDim)
    {
        _currentInventDim.modifiedInventSiteFromParent(_parentInventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies the InventDimId parameter to the ProjInventJournalTransMap.inventDimId field and defaults values based on the new inventory dimensions.
    /// </summary>
    /// <param name="_inventDimId">
    /// The InventDimId value that should be applied to the ProjInventJournalTransMap.InventDimId field.
    /// </param>
    /// <param name="_inventDim">
    /// The InventDim record buffer related to the InventDimId parameters; optional.
    /// </param>
    public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
    {
        this.InventDimId = _inventDimId;
        this.linkInventDim2Dimension(_inventDim, this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimIdFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or create an InventDimId for the InventDim parameter and applies the found InventDimId to the ProjInventJournalTransMap.inventDimId field.
    /// </summary>
    /// <param name="_inventDim">
    /// An InventDim record buffer that should be referenced by the current ProjInventJournalTransMap record buffer.
    /// </param>
    public void setInventDimIdFromInventDim(InventDim _inventDim)
    {
        InventDim   inventDim = InventDim::findOrCreate(_inventDim);
        this.setInventDimId(inventDim.InventDimId, inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnitField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies the unit parameter to the <c>ProjInventJournalTransMap</c> record by using the mapped table.
    /// </summary>
    /// <param name="_unit">
    ///    The <c>PurchUnit</c> value to apply to the <c>ProjInventJournalTransMap.ProjSalesUnitId</c> field
    ///    or <c>ProjInventJournalTransMap.UnitOfMeasure</c> field.
    /// </param>
    public void setUnitField(PurchUnit _unit)
    {
        if (this.TableId == tableNum(PurchReqLine))
        {
            this.UnitOfMeasure = UnitOfMeasure::unitOfMeasureIdBySymbol(_unit);
        }
        else
        {
            this.ProjSalesUnitId = _unit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitOfMeasureSymbol</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol unitOfMeasureSymbol()
    {
        return (this.TableId == tableNum(PurchReqLine)) ? UnitOfMeasure::find(this.UnitOfMeasure).Symbol : this.ProjSalesUnitId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS321142</DeveloperDocumentation>
	<Label>@SYS81925</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ActivityNumber</Name>
			<ExtendedDataType>smmActivityNumber</ExtendedDataType>
			<StringSize>50</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>EcoResCategory</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimId</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjCategoryId</Name>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<StringSize>30</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ProjCostAmount</Name>
			<ExtendedDataType>CostAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ProjCostMarkup</Name>
			<ExtendedDataType>CostMarkup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ProjCostPrice</Name>
			<ExtendedDataType>ItemCostPrice</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjId</Name>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjLinePropertyId</Name>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ProjPriceUnit</Name>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjSalesCurrencyId</Name>
			<ExtendedDataType>ProjSalesCurrencyCode</ExtendedDataType>
			<StringSize>3</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ProjSalesPrice</Name>
			<ExtendedDataType>ProjSalesPriceCost</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjSalesUnitId</Name>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjTaxGroupId</Name>
			<ExtendedDataType>ProjTaxGroup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjTaxItemGroupId</Name>
			<ExtendedDataType>ProjTaxItemGroup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProjTransId</Name>
			<ExtendedDataType>ProjItemTransId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>Qty</Name>
			<ExtendedDataType>InventQtyJournal</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>JournalTransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>UnitOfMeasure</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>BudgetReservationLine_PSN</Name>
			<ExtendedDataType>BudgetReservationRecId_PSN</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>