<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesDocumentD365SalesEntitySpecificMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class SalesDocumentD365SalesEntitySpecificMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapLogisticsPostalAddressBaseEntityDataSourceToEntity</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void mapLogisticsPostalAddressBaseEntityDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.isDatabaseOperationInsertOrUpdate())
        {
            if (_entityCtx.isDatabaseOperationInsert())
            {
                // Enable insert of logistics address when location id is blank but has a delivery address description
                if (!this.DeliveryAddressLocationId && this.DeliveryAddressDescription)
                {
                    // Update address fields state to Set. Otherwise, those fields value cannot be assigned to the new address.
                    _dataSourceCtx.setFieldStateForAllFields(FieldState::Set);
                    this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, DeliveryAddressLocationId), FieldState::NotSet); // Create new record.
                }
                else
                {
                    this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, DeliveryAddressLocationId), FieldState::Set); // Prevent creating new record.
                }
            }
            else if (_entityCtx.isDatabaseOperationUpdate())
            {
                // Enable insert of logistics address when location id is blank.
                if (!this.DeliveryAddressLocationId)
                {
                    // New location Id will be generated in TradeEntitySpecificDeliveryAddress.mapLogisticsPostalAddressBaseEntityDataSourceToEntity().
                    this.DeliveryAddressLocationId = this.orig().DeliveryAddressLocationId;

                    // Update address fields state to Set. Otherwise, those fields value cannot be assigned to the new address.
                    _dataSourceCtx.setFieldStateForAllFields(FieldState::Set);
                    this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, DeliveryAddressLocationId), FieldState::NotSet); // Create new record.
                }
                else
                {
                    this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, DeliveryAddressLocationId), FieldState::Set); // Prevent creating new record.
                }
            }
            
            this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, IsDeliveryAddressOrderSpecific), FieldState::Set); // Let new logistics location is associated with party.
        }
        
        this.SalesDocumentD365SalesEntitySpecificMap::mappedFieldState(fieldNum(SalesDocumentD365SalesEntitySpecificMap, FormattedDeliveryAddress), FieldState::NotSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mappedFieldState</Name>
				<Source><![CDATA[
    private boolean mappedFieldState(FieldId _mapFieldId, FieldState _state = FieldState::Defaulted)
    {   
        FieldId fieldId = SysDictField::findMappedFieldId(tablenum(SalesDocumentD365SalesEntitySpecificMap), _mapFieldId, this.tableId);

        if (fieldId)
        {
            if (prmIsDefault(_state))
            {
                return this.fieldState(fieldId);
            }
            else
            {
                return this.fieldState(fieldId, _state);
            }
        }

        return FieldState::NotSet;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<Visible>No</Visible>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>DeliveryAddressLocationId</Name>
			<ExtendedDataType>LogisticsLocationId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>DeliveryAddressDescription</Name>
			<ExtendedDataType>LogisticsDescription</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>FormattedDeliveryAddress</Name>
			<ExtendedDataType>LogisticsAddressing</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>