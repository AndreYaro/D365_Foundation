<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventoryOnHandEntityMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The inventory on hand entity map.
/// </summary>
public class InventoryOnHandEntityMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        changecompany(this.DataAreaId)
        {
            this.InventoryOnHandEntityMap::setAreWarehouseManagementProcessesUsed();

            // Set unmapped quantity fields:
            this.InventoryOnHandEntityMap::setUnmappedQuantities();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAreWarehouseManagementProcessesUsed</Name>
				<Source><![CDATA[
    private void setAreWarehouseManagementProcessesUsed()
    {
        if (this.AreWarehouseManagementProcessesUsed == NoYes::Yes)
        {
            // If WHS configuration key is disabled, then disregard warehouse management processes:
            if (!isConfigurationkeyEnabled(configurationKeyNum(WHSandTMS)))
            {
                this.AreWarehouseManagementProcessesUsed = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnmappedQuantities</Name>
				<Source><![CDATA[
    private void setUnmappedQuantities()
    {
        WHSInventReserveQty wHSInventReserveQty = this.InventoryOnHandEntityMap::wHSInventReserveQty();
        boolean areWarehouseManagementProcessesUsed = this.AreWarehouseManagementProcessesUsed == NoYes::Yes;

        // Quantity values should be set in the specified order as they depend on each other:
        this.InventoryOnHandEntityMap::setReservedOnHandQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);
        this.InventoryOnHandEntityMap::setPdsCWReservedOnHandQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);
        this.InventoryOnHandEntityMap::setAvailableOnHandQuantity();
        this.InventoryOnHandEntityMap::setPdsCWAvailableOnHandQuantity();
        this.InventoryOnHandEntityMap::setOrderedQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);
        this.InventoryOnHandEntityMap::setPdsCWOrderedQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);
        this.InventoryOnHandEntityMap::setReservedOrderedQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);
        this.InventoryOnHandEntityMap::setPdsCWReservedOrderedQuantity(wHSInventReserveQty, areWarehouseManagementProcessesUsed);        
        this.InventoryOnHandEntityMap::setAvailableOrderedQuantity();
        this.InventoryOnHandEntityMap::setPdsCWAvailableOrderedQuantity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReservedOnHandQuantity</Name>
				<Source><![CDATA[
    private void setReservedOnHandQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        this.ReservedOnHandQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.reservPhysical() : this.ReservedOnHandQuantityMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWReservedOnHandQuantity</Name>
				<Source><![CDATA[
    private void setPdsCWReservedOnHandQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        if (SysDictField::isFieldMapped(tableId2Name(tablenum(InventoryOnHandEntityMap)), tableId2Name(this.tableId), fieldId2Name(tablenum(InventoryOnHandEntityMap), fieldNum(InventoryOnHandEntityMap, PdsCWReservOnHandQuantity))))
        {
            this.PdsCWReservOnHandQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.pdsCWReservPhysical() : this.PdsCWReservOnHandQuantityMapped;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAvailableOnHandQuantity</Name>
				<Source><![CDATA[
    private void setAvailableOnHandQuantity()
    {
        this.AvailableOnHandQuantity = this.OnHandQuantity - this.ReservedOnHandQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWAvailableOnHandQuantity</Name>
				<Source><![CDATA[
    private void setPdsCWAvailableOnHandQuantity()
    {
        if (SysDictField::isFieldMapped(tableId2Name(tablenum(InventoryOnHandEntityMap)), tableId2Name(this.tableId), fieldId2Name(tablenum(InventoryOnHandEntityMap), fieldNum(InventoryOnHandEntityMap, PdsCWAvailableOnHandQuantity))))
        {
            this.PdsCWAvailableOnHandQuantity = this.PdsCWOnHandQuantity - this.PdsCWReservOnHandQuantity;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderedQuantity</Name>
				<Source><![CDATA[
    private void setOrderedQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        this.OrderedQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.orderedSum() : this.OrderedQuantityMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWOrderedQuantity</Name>
				<Source><![CDATA[
    private void setPdsCWOrderedQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        if (SysDictField::isFieldMapped(tableId2Name(tablenum(InventoryOnHandEntityMap)), tableId2Name(this.tableId), fieldId2Name(tablenum(InventoryOnHandEntityMap), fieldNum(InventoryOnHandEntityMap, PdsCWOrderedQuantity))))
        {
            this.PdsCWOrderedQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.pdsCWOrderedSum() : this.PdsCWOrderedQuantityMapped;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReservedOrderedQuantity</Name>
				<Source><![CDATA[
    private void setReservedOrderedQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        this.ReservedOrderedQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.reservOrdered() : this.ReservedOrderedQuantityMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWReservedOrderedQuantity</Name>
				<Source><![CDATA[
    private void setPdsCWReservedOrderedQuantity(WHSInventReserveQty _wHSInventReserveQty, boolean _areWarehouseManagementProcessesUsed)
    {
        if (SysDictField::isFieldMapped(tableId2Name(tablenum(InventoryOnHandEntityMap)), tableId2Name(this.tableId), fieldId2Name(tablenum(InventoryOnHandEntityMap), fieldNum(InventoryOnHandEntityMap, PdsCWReservedOrderedQuantity))))
        {
            this.PdsCWReservedOrderedQuantity = _areWarehouseManagementProcessesUsed ?
            _wHSInventReserveQty.pdsCWReservOrdered() : this.PdsCWReservedOrderedQuantityMapped;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAvailableOrderedQuantity</Name>
				<Source><![CDATA[
    private void setAvailableOrderedQuantity()
    {
        this.AvailableOrderedQuantity = this.OrderedQuantity - this.ReservedOrderedQuantity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWAvailableOrderedQuantity</Name>
				<Source><![CDATA[
    private void setPdsCWAvailableOrderedQuantity()
    {
        if (SysDictField::isFieldMapped(tableId2Name(tablenum(InventoryOnHandEntityMap)), tableId2Name(this.tableId), fieldId2Name(tablenum(InventoryOnHandEntityMap), fieldNum(InventoryOnHandEntityMap, PdsCWAvailableOrderedQuantity))))
        {
            this.PdsCWAvailableOrderedQuantity = this.PdsCWOrderedQuantity - this.PdsCWReservedOrderedQuantity;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>wHSInventReserveQty</Name>
				<Source><![CDATA[
    private WHSInventReserveQty wHSInventReserveQty()
    {
        InventTable inventTable = this.InventoryOnHandEntityMap::inventTable();
        InventDim inventDim = this.InventoryOnHandEntityMap::inventDim();

        InventDimParm inventDimParm;
        inventDimParm.initFromInventDim(inventDim);

        WHSInventReserveQty wHSInventReserveQty = WHSInventReserveQty::newFromParms(
            inventTable,
            inventDim,
            inventDimParm);

        return wHSInventReserveQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    protected InventDim inventDim()
    {
        #inventDimDevelop

        int mapNum = tablenum(InventoryOnHandEntityMap);
        TableName mapName = tableId2Name(mapNum);
        TableName mappedTableName = tableId2Name(this.tableId);

        InventDim inventDimCriteria;

        inventDimCriteria.configId = this.ProductConfigurationId;
        inventDimCriteria.InventColorId = this.ProductColorId;
        inventDimCriteria.InventSizeId = this.ProductSizeId;
        inventDimCriteria.InventStyleId = this.ProductStyleId;
        inventDimCriteria.InventSiteId = this.InventorySiteId;

        if (SysDictField::isFieldMapped(mapName, mappedTableName, fieldId2Name(mapNum, fieldNum(InventoryOnHandEntityMap, ProductVersionId))))
        {
            inventDimCriteria.InventVersionId = this.ProductVersionId;
        }

        if (SysDictField::isFieldMapped(mapName, mappedTableName, fieldId2Name(mapNum, fieldNum(InventoryOnHandEntityMap, InventoryWarehouseId))))
        {
            inventDimCriteria.InventLocationId = this.InventoryWarehouseId;
        }

        if (SysDictField::isFieldMapped(mapName, mappedTableName, fieldId2Name(mapNum, fieldNum(InventoryOnHandEntityMap, InventoryStatusId))))
        {
            inventDimCriteria.InventStatusId = this.InventoryStatusId;
        }

        return inventDimCriteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    private InventTable inventTable()
    {
        InventTable inventTable = InventTable::find(this.ItemNumber);

        return inventTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<TableGroup>Transaction</TableGroup>
	<Visible>No</Visible>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemNumber</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProductColorId</Name>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProductVersionId</Name>
			<ExtendedDataType>EcoResItemVersionName</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProductConfigurationId</Name>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProductSizeId</Name>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProductStyleId</Name>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventorySiteId</Name>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventoryWarehouseId</Name>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventoryStatusId</Name>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OnHandQuantity</Name>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWOnHandQuantity</Name>
			<ExtendedDataType>PdsCWPhysicalInvent</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReservedOnHandQuantityMapped</Name>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWReservOnHandQuantityMapped</Name>
			<ExtendedDataType>PdsCWReservPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReservedOnHandQuantity</Name>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWReservOnHandQuantity</Name>
			<ExtendedDataType>PdsCWReservPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>AvailableOnHandQuantity</Name>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWAvailableOnHandQuantity</Name>
			<ExtendedDataType>PdsCWAvailPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OrderedQuantityMapped</Name>
			<ExtendedDataType>inventQtyOrderedSum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWOrderedQuantityMapped</Name>
			<ExtendedDataType>PdsCWInventQtyOrderedSum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OrderedQuantity</Name>
			<ExtendedDataType>inventQtyOrderedSum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWOrderedQuantity</Name>
			<ExtendedDataType>PdsCWInventQtyOrderedSum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReservedOrderedQuantity</Name>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWReservedOrderedQuantity</Name>
			<ExtendedDataType>PdsCWReservOrdered</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReservedOrderedQuantityMapped</Name>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWReservedOrderedQuantityMapped</Name>
			<ExtendedDataType>PdsCWReservOrdered</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>AvailableOrderedQuantity</Name>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWAvailableOrderedQuantity</Name>
			<ExtendedDataType>PdsCWAvailPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OnOrderQuantity</Name>
			<ExtendedDataType>InventQtyOnOrder</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWOnorderQuantity</Name>
			<ExtendedDataType>PdsCWOnOrder</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>TotalAvailableQuantity</Name>
			<ExtendedDataType>InventQtyTotal</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWTotalAvailableQuantity</Name>
			<ExtendedDataType>PdsCWQty</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>AreWarehouseManagementProcessesUsed</Name>
			<ExtendedDataType>WHSIsItemWHSEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>