<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormletterJournalTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FormletterJournalTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLinePrefix</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a string to be used as a prefix for the current line.
    /// </summary>
    /// <returns>
    ///    A prefix to be used as a prefix for the current line.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The method is not updated to support categories for the mapped table.
    /// </exception>
    str getLinePrefix()
    {
        FieldId     fieldId;
        str         ret;
        InventDim   inventDim;

        if (this.ItemId)
        {
            inventDim = this.inventDim();
            ret = #PreFixField(this, ItemId)  + ' ';

            if (inventDim.anyProductDimensionSpecified())
            {
                ret += inventDim.preFixProductDim(EcoResProductDimGroupSetup::newItemId(this.ItemId));
            }
        }
        else
        {
            fieldId = this.FormletterJournalTrans::categoryFieldId();

            if (!fieldId)
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }

            ret = fieldLabelValue(this.TableId, fieldId, EcoResCategory::find(this.Category).Name);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>FieldId</c> value to be used in the label.
    /// </summary>
    /// <returns>
    /// The <c>FieldId</c> value to be used in the label.
    /// </returns>
    protected FieldId categoryFieldId()
    {
        FieldId fieldId;

        switch (this.TableId)
        {
            case tableNum(CustConfirmTrans):
                fieldId = fieldNum(CustConfirmTrans, SalesCategory);
                break;

            case tableNum(CustInvoiceTrans):
                fieldId = fieldNum(CustInvoiceTrans, SalesCategory);
                break;

            case tableNum(CustPackingSlipTrans):
                fieldId = fieldNum(CustPackingSlipTrans, SalesCategory);
                break;

            case tableNum(PurchLine):
                fieldId = fieldNum(PurchLine, ProcurementCategory);
                break;

            case tableNum(PurchParmLine):
                fieldId = fieldNum(PurchParmLine, ProcurementCategory);
                break;

            case tableNum(SalesParmLine):
                fieldId = fieldNum(SalesParmLine, SalesCategory);
                break;

            case tableNum(VendInvoiceTrans):
                fieldId = fieldNum(VendInvoiceTrans, ProcurementCategory);
                break;

            case tableNum(VendPackingSlipTrans):
                fieldId = fieldNum(VendPackingSlipTrans, ProcurementCategory);
                break;

            case tableNum(VendReceiptsListTrans):
                fieldId = fieldNum(VendReceiptsListTrans, ProcurementCategory);
                break;

            case tableNum(VendRFQTrans):
                fieldId = fieldNum(VendRFQTrans, CategoryId);
                break;

                // <GEERU>
            case tableNum(CustInvoice4PaymTrans_RU):
                fieldId = fieldNum(CustInvoice4PaymTrans_RU, Category);
                break;

            case tableNum(VendInvoice4PaymTrans_RU):
                fieldId = fieldNum(VendInvoice4PaymTrans_RU, Category);
                break;
                // </GEERU>

            case tableNum(CustomsVendBOETrans_IN):
                fieldId = fieldNum(CustomsVendBOETrans_IN, ProcurementCategory);
                break;
        }
        return fieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim(boolean  _update = false)
    {
        return InventDim::find(this.InventDimId, _update);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS318111</DeveloperDocumentation>
	<Label>@SYS23470</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>Category</Name>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InternalJournalId</Name>
			<ExtendedDataType>Num</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimId</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventTransId</Name>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>JournalId</Name>
			<ExtendedDataType>Num</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>NumberSequenceGroup</Name>
			<ExtendedDataType>NumberSequenceGroupId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OrderId</Name>
			<ExtendedDataType>Num</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OrigOrderId</Name>
			<ExtendedDataType>Num</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>