<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendDocumentLineMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendDocumentLineMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>vendDocumentLineInterface</Name>
				<Source><![CDATA[
    public VendDocumentLineInterface vendDocumentLineInterface()
    {
        return VendDocumentLineInterface::createInstance(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExclTax</Name>
				<Source><![CDATA[
    public AmountCur amountExclTax(AmountCur _amountCur, Qty _qty, TransDate _transDate, Tax _tax = null, boolean _skipRounding = false, boolean _useRoundedTaxOrigin = true)
    {
        return this.vendDocumentLineInterface().amountExcludingTax(_amountCur, _qty, _transDate, _tax, null, false, _skipRounding);
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountExcludingTax</Name>
				<Source><![CDATA[
    public AmountCur amountExcludingTax(AmountCur _amountCur, Qty _qty, TransDate _transDate, Tax _tax = null, VendDocumentTableMap _parmTable = null, boolean _keepEndDisc = false, boolean _skipRounding = false)
    {
        return this.vendDocumentLineInterface().amountExcludingTax(_amountCur, _qty, _transDate, _tax, _parmTable, _keepEndDisc, _skipRounding);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateLineAmount</Name>
				<Source><![CDATA[
    public AmountCur calculateLineAmount(Qty _qty = this.ReceiveNow, PurchLine _purchLine = null)
    {
        return this.vendDocumentLineInterface().calculatePrice2LineAmount(_qty, false, _purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineAmountForced</Name>
				<Source><![CDATA[
    public AmountCur calcLineAmountForced(Qty _qty = this.ReceiveNow, PriceDiscPolicyCheckPolicy _checkPolicy = null)
    {
        return this.vendDocumentLineInterface().calculatePrice2LineAmount(_qty, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculatePrice2LineAmount</Name>
				<Source><![CDATA[
    public AmountCur calculatePrice2LineAmount(Qty _qty, boolean _forceLineAmountCalculation, PurchLine _purchLine = null)
    {
        return this.vendDocumentLineInterface().calculatePrice2LineAmount(_qty, _forceLineAmountCalculation, _purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies default value to a field.
    /// </summary>
    /// <param name="_fieldId">
    /// The field ID.
    /// </param>
    /// <param name="_sourceDocumentLine">
    /// Source document line table record, used to copy values from; optional.
    /// </param>
    public void defaultField(FieldId _fieldId, Common _sourceDocumentLine = null)
    {
        this.vendDocumentLineInterface().defaultField(_fieldId, _sourceDocumentLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies default values to all fields.
    /// </summary>
    /// <param name="_purchLine">
    /// A <c>PurchLine</c> table record, used to copy values from; optional.
    /// </param>
    /// <param name="_purchParmUpdate">
    /// An <c>PurchParmUpdate</c> table record, used to copy values from; optional.
    /// </param>
    /// <param name="_receiveNow">
    /// A purchasing quantity; optional.
    /// </param>
    /// <param name="_inventNow">
    /// An inventory quantity; optional.
    /// </param>
    /// <param name="_cwReceiveNow">
    /// A catch weight quantity; optional.
    /// </param>
    /// <param name="_specQty">
    /// A quantity defaulting method; optional.
    /// </param>
    public void defaultRow(
        PurchLine		_purchLine			= null,
        PurchParmUpdate _purchParmUpdate	= null,
        PurchQty		_receiveNow			= naReal(),
        InventQty		_inventNow			= naReal(),
        PdsCWInventQty	_cwReceiveNow		= naReal(),
        Set				_tableToLineFields	= null,
        PurchUpdate		_specQty			= _purchParmUpdate.SpecQty
        )
    {
        this.vendDocumentLineInterface().defaultRow(_purchLine, _purchParmUpdate, _receiveNow, _inventNow, _cwReceiveNow, _tableToLineFields, _specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    public LogisticsAddressing deliveryAddress()
    {
        return this.vendDocumentLineInterface().deliveryAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    public DiscAmount discAmount()
    {
        return this.vendDocumentLineInterface().discAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>discPercent</Name>
				<Source><![CDATA[
    public DiscPct discPercent()
    {
        return this.vendDocumentLineInterface().discPercent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets and sets the reason code by using a <c>ReasonCodeMap</c> object.
    /// </summary>
    /// <param name="_set">
    ///    A Boolean value that specifies whether the reason code is set.
    /// </param>
    /// <param name="_reasonCode">
    ///    The new reason code when the <paramref name="_set" /> parameter is true.
    /// </param>
    /// <returns>
    ///    The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public ReasonCode editReasonCode(boolean _set, ReasonCode _reasonCode)
    {
        return this.vendDocumentLineInterface().editReasonCode(_set, _reasonCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets and sets the reason comment using a <c>ReasonCodeMap</c> object.
    /// </summary>
    /// <param name="_set">
    ///    a Boolean value that specifies whether the reason comment is set.
    /// </param>
    /// <param name="_reasonComment">
    ///    The new reason comment the when <paramref name="_set" /> parameter is true.
    /// </param>
    /// <returns>
    ///    The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public ReasonComment editReasonComment(boolean _set, ReasonComment _reasonComment)
    {
        return this.vendDocumentLineInterface().editReasonComment(_set, _reasonComment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdvancedPricingInvoiceCalculationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the attribute-based calculation ID in the table buffer mapped.
    /// </summary>
    /// <returns>
    /// The ID of the attribute-based calculation used.
    /// </returns>
    public PDSCalculationId getAdvancedPricingInvoiceCalculationId()
    {
        return this.vendDocumentLineInterface().getAdvancedPricingInvoiceCalculationId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>ItemType</c> value for the item.
    /// </summary>
    /// <returns>
    ///    The <c>ItemType</c> value for the item.
    /// </returns>
    public ItemType getItemType()
    {
        return this.vendDocumentLineInterface().getItemType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>grossAmount</Name>
				<Source><![CDATA[
    public AmountCur grossAmount()
    {
        return this.vendDocumentLineInterface().grossAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether this invoice line includes tax in the line amount.
    /// </summary>
    /// <param name="_purchTable">
    /// Corresponding purchase order header record; optional.
    /// </param>
    /// <param name="_header">
    /// Corresponding document header record; optional.
    /// </param>
    /// <returns>
    /// True if the line is tax included; otherwise, false.
    /// </returns>
    public boolean includeTax(PurchTable _purchTable = null, Common _header = null)
    {
        return this.vendDocumentLineInterface().includeTax(_purchTable, _header);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultAdvancedPricingCalculationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the default value of attribute-based calculation ID in the table buffer mapped.
    /// </summary>
    public void initDefaultAdvancedPricingCalculationId()
    {
        this.vendDocumentLineInterface().initDefaultAdvancedPricingCalculationId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    void initFromPurchLine(PurchLine purchLine)
    {
        this.vendDocumentLineInterface().initFromPurchLine(purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean _update = false)
    {
        return this.vendDocumentLineInterface().inventDim(_update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoried</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the item is tracked in inventory.
    /// </summary>
    /// <returns>
    ///    <c>NoYes::Yes</c> if the object is tracked in inventory; otherwise, <c>NoYes::No</c>.
    /// </returns>
    public NoYes inventoried()
    {
        return this.vendDocumentLineInterface().inventoried();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    public InventTable inventTable(ItemId _itemId = this.ItemId, boolean _update = false)
    {
        return this.vendDocumentLineInterface().inventTable(_itemId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdvance</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an invoice is advance.
    /// </summary>
    /// <returns>
    ///    true if the invoice is advance; otherwise, false.
    /// </returns>
    public boolean isAdvance()
    {
        return this.vendDocumentLineInterface().isAdvance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNonPO</Name>
				<Source><![CDATA[
    public boolean isNonPO()
    {
        return this.vendDocumentLineInterface().isNonPO();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrepaymentApplication</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if an invoice is prepayment application or not.
    /// </summary>
    /// <returns>
    /// true if invoice is prepayment application; otherwise, false.
    /// </returns>
    public boolean isPrepaymentApplication()
    {
        return this.vendDocumentLineInterface().isPrepaymentApplication();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    public PurchLineShowItemName itemName()
    {
        return this.vendDocumentLineInterface().itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountExcludingTax</Name>
				<Source><![CDATA[
    public AmountCur lineAmountExcludingTax(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), Tax _tax = null, VendDocumentTableMap _parmTable = null, boolean _keepEndDisc = false)
    {
        return this.vendDocumentLineInterface().lineAmountExcludingTax(_transDate, _tax, _parmTable, _keepEndDisc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountInclTax_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return line amount including taxes
    /// </summary>
    /// <param name="_transDate">
    /// Date on which taxes are calculated
    /// </param>
    /// <returns>
    /// Line amount including taxes
    /// </returns>
    public AmountCur lineAmountInclTax_RU(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        return this.vendDocumentLineInterface().lineAmountInclTax_RU(_transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAsset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the asset line record that corresponds to the purchase document line record.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the asset line record should be retrieved for update.
    /// </param>
    /// <returns>
    ///    An asset line record that corresponds to the line record.
    /// </returns>
    public VendDocumentLineAssetMap lineAsset(boolean _forUpdate)
    {
        return this.vendDocumentLineInterface().lineAsset(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDiscExclTax</Name>
				<Source><![CDATA[
    public DiscAmount lineDiscExclTax(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), Tax _tax = null)
    {
        return this.vendDocumentLineInterface().lineDiscExclTax(_transDate, _tax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedClosed</Name>
				<Source><![CDATA[
    public void modifiedClosed()
    {
        this.vendDocumentLineInterface().modifiedClosed();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedReceiveNow</Name>
				<Source><![CDATA[
    public void modifiedReceiveNow(boolean _setCWQuantities = false)
    {
        this.vendDocumentLineInterface().modifiedReceiveNow(_setCWQuantities);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedReceiveNow_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the record just received.
    /// </summary>
    public void modifiedReceiveNow_IN()
    {
        this.vendDocumentLineInterface().modifiedReceiveNow_IN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the name field from the order line because this is relevant for category based lines.
    /// </summary>
    /// <returns>
    ///    The name field from the order line.
    /// </returns>
    public display ItemFreeTxt name()
    {
        return this.vendDocumentLineInterface().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValue_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>AssessableValue_IN</c> field.
    /// </summary>
    /// <param name="_assessableValue_IN">
    /// The value of <c>AssessableValue_IN</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>AssessableValue_IN</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public PurchLineAmount parmAssessableValue_IN(PurchLineAmount _assessableValue_IN = 0)
    {
        if (prmisDefault(_assessableValue_IN))
        {
            return this.vendDocumentLineInterface().parmAssessableValue_IN();
        }
        else
        {
            return this.vendDocumentLineInterface().parmAssessableValue_IN(_assessableValue_IN);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAssessableValueAccountingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>AssessableValue_IN</c> field.
    /// </summary>
    /// <param name="_assessableValueAccountingCurrency">
    /// The value of <c>AssessableValueAccountingCurrency</c> field to set.
    /// </param>
    /// <returns>
    /// <c>AssessableValueAccountingCurrency</c> from table
    /// </returns>
    public AmountMST parmAssessableValueAccountingCurrency(AmountMST _assessableValueAccountingCurrency)
    {
        return this.vendDocumentLineInterface().parmAssessableValueAccountingCurrency(_assessableValueAccountingCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCFOPTable_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CFOPTable_BR</c> field.
    /// </summary>
    /// <param name="_cfopTable_BR">
    /// The value of <c>CFOPTable_BR</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CFOPTable_BR</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public RefRecId parmCFOPTable_BR(RefRecId _cfopTable_BR = 0)
    {
        return this.vendDocumentLineInterface().parmCFOPTable_BR(_cfopTable_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightNature_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CFOPTable_BR</c> field.
    /// </summary>
    /// <param name="_cfopTable_BR">
    /// The value of <c>CFOPTable_BR</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CFOPTable_BR</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public FreightNature_BR parmFreightNature_BR(FreightNature_BR _freightNature_BR = FreightNature_BR::Blank)
    {
        return this.vendDocumentLineInterface().parmFreightNature_BR(_freightNature_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryRegionName_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CountryRegionName_RU</c> field.
    /// </summary>
    /// <param name="_countryRegionName_RU">
    /// The value of <c>CountryRegionName_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CountryRegionName_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public AddressCountryRegionName parmCountryRegionName_RU(AddressCountryRegionName _countryRegionName_RU = '')
    {
        return this.vendDocumentLineInterface().parmCountryRegionName_RU(_countryRegionName_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsBillOfEntryNumberTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CustomsBillOfEntryNumberTable_IN</c> field.
    /// </summary>
    /// <param name="_customsBillOfEntryNumberTable_IN">
    /// The value of <c>CustomsBillOfEntryNumberTable_IN</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CustomsBillOfEntryNumberTable_IN</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public RefRecId parmCustomsBillOfEntryNumberTable_IN(RefRecId _customsBillOfEntryNumberTable_IN = 0)
    {
        return this.vendDocumentLineInterface().parmCustomsBillOfEntryNumberTable_IN(_customsBillOfEntryNumberTable_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsImportInvoiceNumberTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CustomsImportInvoiceNumberTable_IN</c> field.
    /// </summary>
    /// <param name="_customsImportInvoiceNumberTable_IN">
    /// The value of <c>CustomsImportInvoiceNumberTable_IN</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CustomsImportInvoiceNumberTable_IN</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public RefRecId parmCustomsImportInvoiceNumberTable_IN(RefRecId _customsImportInvoiceNumberTable_IN = 0)
    {
        return this.vendDocumentLineInterface().parmCustomsImportInvoiceNumberTable_IN(_customsImportInvoiceNumberTable_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsInvoiceRegnRecId_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>CustomsInvoiceRegnRecId_IN</c> field.
    /// </summary>
    /// <param name="_customsInvoiceRegnRecId_IN">
    /// The value of <c>CustomsInvoiceRegnRecId_IN</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>CustomsInvoiceRegnRecId_IN</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public RefRecId parmCustomsInvoiceRegnRecId_IN(RefRecId _customsInvoiceRegnRecId_IN = 0)
    {
        return this.vendDocumentLineInterface().parmCustomsInvoiceRegnRecId_IN(_customsInvoiceRegnRecId_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeviationQty_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>DeviationQty_RU</c> field.
    /// </summary>
    /// <param name="_purchDeviationQty_RU">
    /// The value of <c>DeviationQty_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>DeviationQty_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public PurchDeviationQty_RU parmDeviationQty_RU(PurchDeviationQty_RU _purchDeviationQty_RU = 0)
    {
        return this.vendDocumentLineInterface().parmDeviationQty_RU(_purchDeviationQty_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>IntrastatFulfillmentDate_HU</c> field.
    /// </summary>
    /// <param name="_intrastatFulfillmentDate_HU">
    /// The value of <c>IntrastatFulfillmentDate_HU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>IntrastatFulfillmentDate_HU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public IntrastatFulfillmentDate_HU parmIntrastatFulfillmentDate_HU(IntrastatFulfillmentDate_HU _intrastatFulfillmentDate_HU = dateNull())
    {
        return this.vendDocumentLineInterface().parmIntrastatFulfillmentDate_HU(_intrastatFulfillmentDate_HU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventProfileType_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>InventProfileType_RU</c> field.
    /// </summary>
    /// <param name="_inventProfileType_RU">
    /// The value of <c>InventProfileType_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>InventProfileType_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public InventProfileType_RU parmInventProfileType_RU(InventProfileType_RU _inventProfileType_RU = InventProfileType_RU::NotSpecified)
    {
        return this.vendDocumentLineInterface().parmInventProfileType_RU(_inventProfileType_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceGTDId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>InvoiceGTDId_RU</c> field.
    /// </summary>
    /// <param name="_invoiceGTDId_RU">
    /// The value of <c>InvoiceGTDId_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>InvoiceGTDId_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public CustFreeInvoiceGTDId_RU parmInvoiceGTDId_RU(CustFreeInvoiceGTDId_RU _invoiceGTDId_RU = '')
    {
        return this.vendDocumentLineInterface().parmInvoiceGTDId_RU(_invoiceGTDId_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkupCode_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>MarkupCode_RU</c> field.
    /// </summary>
    /// <param name="_markupCode_RU">
    /// The value of <c>MarkupCode_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>MarkupCode_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public MarkupCodeVend_RU parmMarkupCode_RU(MarkupCodeVend_RU _markupCode_RU = '')
    {
        MarkupCodeVend_RU markupCodeVend_RU;

        if (!prmisDefault(_markupCode_RU))
        {
            markupCodeVend_RU = this.vendDocumentLineInterface().parmMarkupCode_RU(_markupCode_RU);
        }
        else
        {
            markupCodeVend_RU = this.vendDocumentLineInterface().parmMarkupCode_RU();
        }

        return markupCodeVend_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaximumRetailPrice_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>MaximumRetailPrice_IN</c> field.
    /// </summary>
    /// <param name="_maximumRetailPrice_IN">
    /// The value of <c>MaximumRetailPrice_IN</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>MaximumRetailPrice_IN</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public MaximumRetailPrice_IN parmMaximumRetailPrice_IN(MaximumRetailPrice_IN _maximumRetailPrice_IN = 0)
    {
        return this.vendDocumentLineInterface().parmMaximumRetailPrice_IN(_maximumRetailPrice_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>PostingProfile_RU</c> field.
    /// </summary>
    /// <param name="_postingProfile_RU">
    /// The value of <c>PostingProfile_RU</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>PostingProfile_RU</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public VendPostingProfile parmPostingProfile_RU(VendPostingProfile _postingProfile_RU = '')
    {
        return this.vendDocumentLineInterface().parmPostingProfile_RU(_postingProfile_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxServiceCode_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of <c>TaxServiceCode_BR</c> field.
    /// </summary>
    /// <param name="_taxServiceCodeId_BR">
    /// The value of <c>TaxServiceCode_BR</c> field to set, optional.
    /// </param>
    /// <returns>
    /// <c>TaxServiceCode_BR</c> from table <c>VendInvoiceInfoLine_W</c>.
    /// </returns>
    public TaxServiceCodeId_BR parmTaxServiceCode_BR(TaxServiceCodeId_BR _taxServiceCodeId_BR = '')
    {
        return this.vendDocumentLineInterface().parmTaxServiceCode_BR(_taxServiceCodeId_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWSetQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and sets the catch weight quantity fields.
    /// </summary>
    /// <param name="_documentStatus">
    /// The status of the vendor document line.
    /// </param>
    /// <param name="_creditRemaining">
    /// Boolean variable to determine whether the remaining quantity should be credited.
    /// </param>
    public void pdsCWSetQty(DocumentStatus _documentStatus, boolean _creditRemaining)
    {
        this.vendDocumentLineInterface().pdsCWSetQty(_documentStatus, _creditRemaining);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLine</Name>
				<Source><![CDATA[
    public PurchLine purchLine(boolean _forUpdate = false)
    {
        return this.vendDocumentLineInterface().purchLine(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    public PurchTable purchTable(boolean _update = false)
    {
        return this.vendDocumentLineInterface().purchTable(_update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAdvancedPricingInvoiceCalculationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the attribute-based calculation ID in the table buffer mapped.
    /// </summary>
    /// <param name="_calculationId">
    /// The calculation ID to set; optional.
    /// </param>
    public void setAdvancedPricingInvoiceCalculationId(PDSCalculationId _calculationId = '')
    {
        this.vendDocumentLineInterface().setAdvancedPricingInvoiceCalculationId(_calculationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventReceiveNow</Name>
				<Source><![CDATA[
    public void setInventReceiveNow(boolean setInventNow = true)
    {
        this.vendDocumentLineInterface().setInventReceiveNow(setInventNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    public void setLineAmount(Qty _qty = this.ReceiveNow, PurchLine _purchLine = null)
    {
        this.vendDocumentLineInterface().setLineAmount(_qty, _purchLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    public void setQty(DocumentStatus _documentStatus,
        boolean _creditRemaining,
        boolean _setInventNow = true,
        boolean _setInventQtys = true)
    {
        this.vendDocumentLineInterface().setQty(_documentStatus, _creditRemaining, _setInventNow, _setInventQtys);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the quantity information.
    /// </summary>
    /// <param name="documentStatus">
    /// The document status.
    /// </param>
    /// <param name="creditRemaining">
    /// True if there is any credit remaining.
    /// </param>
    /// <param name="setInventNow">
    /// True if the invent should be set now.
    /// </param>
    public void setQty_IN(DocumentStatus documentStatus, boolean creditRemaining, boolean setInventNow = true)
    {
        this.vendDocumentLineInterface().setQty_IN(documentStatus, creditRemaining, setInventNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainAfterInvent</Name>
				<Source><![CDATA[
    public void setRemainAfterInvent()
    {
        this.vendDocumentLineInterface().setRemainAfterInvent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxDate</Name>
				<Source><![CDATA[
    public TransDate taxDate(TransDate transDate)
    {
        return this.vendDocumentLineInterface().taxDate(transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLinkedParmline_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the linked parm line.
    /// </summary>
    /// <param name="_documentStatus">
    /// The document status.
    /// </param>
    /// <param name="_parmId">
    /// The parm id.
    /// </param>
    /// <param name="_purchlineRecId">
    /// The purch line rec id.
    /// </param>
    /// <param name="_tradeLineRefId">
    /// The trade line reference id.
    /// </param>
    /// <param name="_creditRemaining">
    /// True if there is any credit remaining.
    /// </param>
    /// <param name="setInventNow">
    /// True if the invent should be set now.
    /// </param>
    /// <param name="curvendDocumentLineMap">
    /// The current vend document line map.
    /// </param>
    public void updateLinkedParmline_IN(
        DocumentStatus _documentStatus,
        ParmId _parmId,
        RefRecId _purchlineRecId,
        TradeLineRefId _tradeLineRefId,
        boolean _creditRemaining,
        boolean setInventNow = true,
        VendDocumentLineMap curvendDocumentLineMap = null)
    {
        this.vendDocumentLineInterface().updateLinkedParmline_IN(_documentStatus, _parmId, _purchlineRecId, _tradeLineRefId, _creditRemaining, setInventNow, curvendDocumentLineMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQtyAndAmount</Name>
				<Source><![CDATA[
    public boolean validateQtyAndAmount()
    {
        return this.vendDocumentLineInterface().validateQtyAndAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomsVendBOETrans_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the customs vend BOE transaction.
    /// </summary>
    /// <param name="_parmLineRecId">
    /// The parm line rec id.
    /// </param>
    /// <param name="_parmLineParmId">
    /// The parm line parm id.
    /// </param>
    /// <param name="_parmLineTableId">
    /// The parm line table id.
    /// </param>
    /// <returns>
    /// The customs vend BOE transaction.
    /// </returns>
    public static CustomsVendBOETrans_IN getCustomsVendBOETrans_IN(RecId _parmLineRecId, ParmId _parmLineParmId, TableId _parmLineTableId)
    {
        return VendDocumentLineInterface::getCustomsVendBOETrans_IN(_parmLineRecId, _parmLineParmId, _parmLineTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>header</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and returns the <c>VendInvoiceInfoTable</c> or <c>PurchParmTable</c> record for the given
    ///    record.
    /// </summary>
    /// <param name="_vendDocumentLineMap">
    ///    A <c>VendDocumentLineMap</c> record that is used to find a <c>VendInvoiceInfoTable</c> or
    ///    <c>PurchParmTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that specifies whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A single <c>VendInvoiceInfoTable</c> or <c>PurchParmTable</c> record if it exists; otherwise, an
    ///    empty <c>VendInvoiceInfoTable</c> or <c>PurchParmTable</c> record.
    /// </returns>
    public static VendDocumentTableMap header(VendDocumentLineMap _vendDocumentLineMap, boolean _forUpdate = false)
    {
        return _vendDocumentLineMap.vendDocumentLineInterface().header(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransactionRelatedToBOE_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the transaction related to BOE.
    /// </summary>
    /// <param name="_purchTable">
    /// The purch table information.
    /// </param>
    /// <param name="_purchParmUpdate">
    /// The purch parm update information.
    /// </param>
    /// <returns>
    /// Returns true if the transaction is related to BOE.
    /// </returns>
    public static boolean isTransactionRelatedToBOE_IN(PurchTable _purchTable, PurchParmUpdate _purchParmUpdate)
    {        
        return VendDocumentLineInterface::isTransactionRelatedToBOE_IN(_purchTable, _purchParmUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromHeader</Name>
				<Source><![CDATA[
    public static VendDocumentLineMap newFromHeader(VendDocumentTableMap _header)
    {
        return VendDocumentLineInterface::newFromHeader(_header);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsPurchPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or computes the effective purchase price for the line.
    /// </summary>
    /// <param name="_vendLine">
    ///     The <c>VendDocumentLineMap</c> for which to get the effective purchase price.
    /// </param>
    /// <param name="_force">
    ///     Determines whether to force recalculation of the advanced price; optional.
    /// </param>
    /// <returns>
    ///     The effective purchase price for the line.
    /// </returns>
    public static PurchPrice pdsPurchPrice(VendDocumentLineMap _vendLine, boolean _force = false)
    {
        return _vendLine.vendDocumentLineInterface().pdsPurchPrice(_force);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParmUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and returns the <c>PurchParmUpdate</c> record for the given record.
    /// </summary>
    /// <param name="_vendDocumentLineMap">
    ///    A <c>VendDocumentLineMap</c> record that is used to find a <c>PurchParmUpdate</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that specifies whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A <c>PurchParmUpdate</c> record if it exists; otherwise, an empty <c>PurchParmUpdate</c> record.
    /// </returns>
    public static PurchParmUpdate purchParmUpdate(VendDocumentLineMap _vendDocumentLineMap, boolean _forUpdate = false)
    {
       return _vendDocumentLineMap.vendDocumentLineInterface().purchParmUpdate(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and returns the <c>VendInvoiceInfoSubTable</c> or <c>PurchParmSubTable</c> record for the
    ///    given record.
    /// </summary>
    /// <param name="_vendDocumentLineMap">
    ///    A <c>VendDocumentLineMap</c> record that is used to find a <c>VendInvoiceInfoSubTable</c> or
    ///    <c>PurchParmSubTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that specifies whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A single <c>VendInvoiceInfoSubTable</c> or <c>PurchParmSubTable</c> record if it exists; otherwise,
    ///    an empty <c>VendInvoiceInfoSubTable</c> or <c>PurchParmSubTable</c> record.
    /// </returns>
    public static VendDocumentSubTableMap subHeader(VendDocumentLineMap _vendDocumentLineMap, boolean _forUpdate = false)
    {
       return _vendDocumentLineMap.vendDocumentLineInterface().subHeader(_forUpdate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS318113</DeveloperDocumentation>
	<Label>@SYS128589</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>changedManually</Name>
			<Label>@SYS28792</Label>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>closed</Name>
			<Label>@SYS14403</Label>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>currencyCode</Name>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<StringSize>3</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>DeliveryName</Name>
			<ExtendedDataType>VendName</ExtendedDataType>
			<GroupPrompt>@SYS7399</GroupPrompt>
			<Label>@SYS22058</Label>
			<StringSize>100</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>Description</Name>
			<ExtendedDataType>InvoiceLineDescription</ExtendedDataType>
			<StringSize>1000</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>DocumentOrigin</Name>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>DocumentOrigin</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimId</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>InventNow</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS2934</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventTransId</Name>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InvoiceAccount</Name>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LineAmount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS6901</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LineDisc</Name>
			<ExtendedDataType>PurchLineDisc</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LineNum</Name>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LinePercent</Name>
			<ExtendedDataType>PurchLinePercent</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>MultiLnDisc</Name>
			<ExtendedDataType>PurchMultiLnDisc</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>MultiLnPercent</Name>
			<ExtendedDataType>PurchMultiLnPercent</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OrderAccount</Name>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Ordering</Name>
			<Label>@SYS2934</Label>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>DocumentStatus</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OrigPurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>PurchIdOrig</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ParmId</Name>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWReceiveNow</Name>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
			<Label>@PDS84</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWRemainAfter</Name>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
			<Label>@PDS76</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWRemainBefore</Name>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
			<Label>@PDS147</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PriceUnit</Name>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>ProcurementCategory</Name>
			<ExtendedDataType>PurchCategory</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>PurchaseLineLineNumber</Name>
			<ExtendedDataType>TradeLineNumber</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>PurchLineRecId</Name>
			<ExtendedDataType>PurchLineRefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PurchMarkup</Name>
			<ExtendedDataType>PurchMarkup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PurchPrice</Name>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS11770</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>ReasonTableRef</Name>
			<ExtendedDataType>ReasonRefRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReceiveNow</Name>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS2934</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RemainAfter</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS22556</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RemainAfterInvent</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS22556</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RemainBefore</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS8459</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RemainBeforeInvent</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@SYS8459</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RemainBeforeInventPhysical</Name>
			<ExtendedDataType>TradeRemainBeforeInventPhysical</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TableRefId</Name>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TaxGroup</Name>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TaxItemGroup</Name>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<Label>@SYS128442</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>UnitId</Name>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>OverrideSalesTax</Name>
			<ExtendedDataType>TaxIntegrationOverrideSalesTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>FinTag</Name>
			<ExtendedDataType>FinTagRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TaxWithholdGroup</Name>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>TaxWithholdItemGroupHeadingId</Name>
			<ExtendedDataType>TaxWithholdItemGroupId_TH</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>