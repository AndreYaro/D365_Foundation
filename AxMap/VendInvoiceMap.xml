<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendInvoiceMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accDistributionTemplateRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the <c>AccountingDistributionTemplateRecId</c> associated with this invoice.
    /// </summary>
    /// <returns>
    /// Returns the <c>AccountingDistributionTemplateRecId</c> associated with this invoice.
    /// </returns>
    public AccountingDistributionTemplateRecId accDistributionTemplateRecId()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>cashDiscCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the <c>VendCashDiscCode</c> associated with this invoice.
    /// </summary>
    /// <returns>
    ///    Returns the <c>VendCashDiscCode</c> associated with this invoice.
    /// </returns>
    public VendCashDiscCode cashDiscCode()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceJour vendInvoiceJour;
        CashDiscCode cashDiscCode;

        switch (this.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
                vendInvoiceInfoTable = this;
                cashDiscCode = vendInvoiceInfoTable.cashDiscCode();
                break;

            case tableNum(VendInvoiceJour):
                vendInvoiceJour = this;
                cashDiscCode = vendInvoiceJour.CashDiscCode;
                break;

            default:
                throw error(strFmt("@SYS19306", funcName())); // incorrect use
        }

        return cashDiscCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the <c>DefaultDimension</c> associated with this invoice.
    /// </summary>
    /// <returns>
    ///    Returns the <c>DefaultDimension</c> associated with this invoice.
    /// </returns>
    public DimensionDefault defaultDimension()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceJour vendInvoiceJour;
        DimensionDefault defaultDimension;

        switch (this.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
                vendInvoiceInfoTable = this;
                defaultDimension = vendInvoiceInfoTable.defaultDimension();
                break;

            case tableNum(VendInvoiceJour):
                vendInvoiceJour = this;
                defaultDimension = vendInvoiceJour.DefaultDimension;
                break;

            default:
                throw error(strFmt("@SYS19306", funcName())); // incorrect use
        }

        return defaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentDate</Name>
				<Source><![CDATA[
    public DocumentDate documentDate()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceJour vendInvoiceJour;
        DocumentDate documentDate;

        switch (this.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
                vendInvoiceInfoTable = this;
                documentDate = vendInvoiceInfoTable.updateDate();
                break;

            case tableNum(VendInvoiceJour):
                vendInvoiceJour = this;
                documentDate = vendInvoiceJour.InvoiceDate;
                break;

            default:
                throw error(strFmt("@SYS19306", funcName())); // incorrect use
        }

        return documentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineExchangeRateDate</Name>
				<Source><![CDATA[
    public TransDate determineExchangeRateDate()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceJour vendInvoiceJour;
        TransDate exchangeRateDate;

        switch (this.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
                vendInvoiceInfoTable = this;
                exchangeRateDate = vendInvoiceInfoTable.determineExchangeRateDate();
                break;

            case tableNum(VendInvoiceJour):
                vendInvoiceJour = this;
                exchangeRateDate = vendInvoiceJour.InvoiceDate;
                break;

            default:
                throw error(strFmt("@SYS19306", funcName())); // incorrect use
        }

        return exchangeRateDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if this invoice includes tax in the line amount.
    /// </summary>
    /// <param name="_purchTable">
    /// Corresponding purchase order header record; optional.
    /// </param>
    /// <returns>
    /// true if the invoice includes tax; otherwise, false.
    /// </returns>
    public boolean isInclTax(PurchTable _purchTable = null)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNonPO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if this invoice line is associated with a purchase order or not.
    /// </summary>
    /// <returns>
    /// True if the line is not associated with a purchase order; otherwise, false.
    /// </returns>
    public boolean isNonPO()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the <c>LedgerVoucher</c> associated with this invoice.
    /// </summary>
    /// <returns>
    ///    Returns the <c>LedgerVoucher</c> associated with this invoice.
    /// </returns>
    public Voucher ledgerVoucher()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the <c>PostingProfile</c> associated with this invoice.
    /// </summary>
    /// <returns>
    /// Returns the <c>PostingProfile</c> associated with this invoice.
    /// </returns>
    public VendPostingProfile postingProfile()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceJour vendInvoiceJour;
        VendPostingProfile postingProfile;

        switch (this.TableId)
        {
            case tableNum(VendInvoiceInfoTable):
                vendInvoiceInfoTable = this;
                postingProfile = vendInvoiceInfoTable.postingProfile();
                break;

            case tableNum(VendInvoiceJour):
                vendInvoiceJour = this;
                postingProfile = vendInvoiceJour.PostingProfile;
                break;

            default:
                throw error(strFmt("@SYS19306", funcName())); // incorrect use
        }

        return postingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingCurrencyExchangeRate</Name>
				<Source><![CDATA[
    internal ReportingCurrencyExchRate parmReportingCurrencyExchangeRate()
    {
        ReportingCurrencyExchRate exchRate;

        if (this.TableId == tableNum(VendInvoiceJour) || this.TableId == tableNum(VendInvoiceInfoTable))
        {
            exchRate = this.ReportingCurrencyExchangeRate;
        }
        else
        {
            exchRate = 0.0;
        }

        return exchRate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS344923</DeveloperDocumentation>
	<Label>@SYS108835</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>CurrencyCode</Name>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<StringSize>3</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>DocumentDate</Name>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>EndDisc</Name>
			<ExtendedDataType>PurchEndDiscAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchRate</Name>
			<ExtendedDataType>VendExchRate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchRateSecondary</Name>
			<ExtendedDataType>ExchrateSecondary</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InvoiceAccount</Name>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>InvoiceDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InvoiceId</Name>
			<ExtendedDataType>VendInvoiceId</ExtendedDataType>
			<GroupPrompt>@SYS13864</GroupPrompt>
			<Mandatory>Yes</Mandatory>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>InvoiceRoundOff</Name>
			<ExtendedDataType>RoundOff</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OrderAccount</Name>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>PurchId</Name>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<ExtendedDataType>SourceDocumentHeaderRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>SourceDocumentLine</Name>
			<ExtendedDataType>SourceDocumentLineRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReportingCurrencyExchangeRate</Name>
			<ExtendedDataType>ReportingCurrencyExchRate</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>