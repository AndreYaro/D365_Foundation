<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OverdueTurnJournalLine_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class OverdueTurnJournalLine_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromOverdueDebtJournalLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes current record based on records from <c>OverdueDebtJournalLine_W</c> table.
    /// </summary>
    /// <param name="_previousDebtLine">
    /// Record of debt in previous debt journal.
    /// </param>
    /// <param name="_currentDebtLine">
    /// Record of debt in current debt journal.
    /// </param>
    /// <remarks>
    /// Change of debt for last period is calculated and recorded to current line.
    /// Once record is excluded, it means that it was excluded in previous journal, so all debt must be posted, not only its change.
    /// </remarks>
    public void initFromOverdueDebtJournalLines(
        OverdueDebtJournalLine_W    _previousDebtLine,
        OverdueDebtJournalLine_W    _currentDebtLine)
    {
        if (this.Exclude)
        {
            this.OverdueAmountCur    = _currentDebtLine.OverdueAmountCur;
            this.OverdueAmountMST    = _currentDebtLine.OverdueAmountMST;

            if (this.TableId != tableNum(VendOverdueCITPITTurnJournalLine_W))
            {
                this.OverdueTaxAmountCur = _currentDebtLine.OverdueTaxAmountCur;
                this.OverdueTaxAmountMST = _currentDebtLine.OverdueTaxAmountMST;
            }
        }
        else
        {
            this.OverdueAmountCur    = _currentDebtLine.OverdueAmountCur    - _previousDebtLine.OverdueAmountCur;
            this.OverdueAmountMST    = _currentDebtLine.OverdueAmountMST    - _previousDebtLine.OverdueAmountMST;

            if (this.TableId != tableNum(VendOverdueCITPITTurnJournalLine_W))
            {
                this.OverdueTaxAmountCur = _currentDebtLine.OverdueTaxAmountCur - _previousDebtLine.OverdueTaxAmountCur;
                this.OverdueTaxAmountMST = _currentDebtLine.OverdueTaxAmountMST - _previousDebtLine.OverdueTaxAmountMST;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsPostedInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if posted invoices exist for invoice(custVendTrans record id) specified.
    /// </summary>
    /// <param name="_journalType">
    ///  Type of journal to be checked.
    /// </param>
    /// <param name="_transRefRecId">
    /// Record id of custVendTrans.
    /// </param>
    /// <returns>
    /// True if record exists, otherwise false.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If incorrect journal type value has been specified.
    /// </exception>
    public static boolean existsPostedInvoice(OverdueJournalType_W _journalType, RefRecId _transRefRecId)
    {
        CustOverdueVATTurnJournalLine_W custJournalLine;
        CustOverdueVATJournalTable_W    custJournalTable;

        VendOverdueVATTurnJournalLine_W vendJournalLine;
        VendOverdueVATJournalTable_W    vendJournalTable;

        VendOverdueCITPITTurnJournalLine_W  overdueCITPITJournalLine;
        VendOverdueCITPITJournalTable_W     overdueCITPITJournalTable;

        OverdueTurnJournalLine_W    debtJournalLine;
        OverdueJournalTable_W       journalTable;

        switch (_journalType)
        {
            case OverdueJournalType_W::CustVATJournal:
                debtJournalLine = custJournalLine.data();
                journalTable    = custJournalTable.data();

                select firstonly RecId from debtJournalLine
                    where debtJournalLine.TransRefRecId == _transRefRecId &&
                          debtJournalLine.Exclude       == NoYes::No
                exists join journalTable
                    where journalTable.JournalId == debtJournalLine.JournalId &&
                          journalTable.Posted    == NoYes::Yes            &&
                          journalTable.Cancelled == NoYes::No;
                break;

            case OverdueJournalType_W::VendVATJournal:
                debtJournalLine = vendJournalLine.data();
                journalTable    = vendJournalTable.data();

                select firstonly RecId from debtJournalLine
                    where debtJournalLine.TransRefRecId == _transRefRecId &&
                            debtJournalLine.Exclude       == NoYes::No
                exists join journalTable
                    where journalTable.JournalId == debtJournalLine.JournalId &&
                            journalTable.Posted    == NoYes::Yes            &&
                            journalTable.Cancelled == NoYes::No;
                break;

            case OverdueJournalType_W::VendCITPITJournal:
                debtJournalLine = overdueCITPITJournalLine.data();
                journalTable    = overdueCITPITJournalTable.data();

                select firstonly RecId from debtJournalLine
                    where debtJournalLine.TransRefRecId == _transRefRecId
                       && debtJournalLine.Exclude       == NoYes::No
                exists join journalTable
                    where journalTable.JournalId == debtJournalLine.JournalId
                       && journalTable.Approved  == NoYes::Yes;
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return debtJournalLine.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4003569</DeveloperDocumentation>
	<Label>@SYS4003568</Label>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>DueDate</TitleField2>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>DueDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Exclude</Name>
			<ExtendedDataType>Exclude_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>OverdueJournalId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OverdueAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AmountCurDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OverdueAmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OverdueTaxAmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AmountCurDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OverdueTaxAmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>SettingRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>TransRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>VendTransRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>