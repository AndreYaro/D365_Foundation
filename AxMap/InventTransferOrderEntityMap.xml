<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferOrderEntityMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferOrderEntityMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInventTransferParmTable</Name>
				<Source><![CDATA[
    private InventTransferParmTable createInventTransferParmTable(InventTransferUpdateType _transferUpdateType)
    {
        ttsbegin;
        InventTransferParmTable transferParmTable;

        transferParmTable.initParmDefault();
        transferParmTable.ParmId            = RunBaseMultiParm::getSysParmId();
        transferParmTable.UpdateType        = _transferUpdateType;
        transferParmTable.TransferId        = this.TransferOrderNumber;
        transferParmTable.ShipUpdateQty     = this.InventTransferOrderEntityMap::getShippingUpdate();
        transferParmTable.ReceiveUpdateQty  = this.InventTransferOrderEntityMap::getReceivingUpdate();
        transferParmTable.EditLines         = NoYes::Yes;

        transferParmTable.insert(this.InventTransferOrderEntityMap::autoCreateInventTransferParmLine());
        ttscommit;

        this.InventTransferOrderEntityMap::createInventTransferParmLine(transferParmTable);

        return transferParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDateControlFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the shipping and receiving dates based on the delivery date control.
    /// </summary>
    /// <param name = "_record">The record that contains the shipping and receiving dates.</param>
    /// <param name = "_fieldId">The field ID that is changed.</param>
    public void setDeliveryDateControlFields(Common _record, FieldId _fieldId)
    {
        if (this.TransferOrderPromisingMethod != SalesDeliveryDateControlType::None)
        {
            SalesCalcAvailableDlvDates salesCalcAvailableDlvDates = SalesCalcAvailableDlvDates::newCommonSalesDlvDateTypeByEntity(_record, _fieldId);

            salesCalcAvailableDlvDates.modifiedField(_record, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShippingUpdate</Name>
				<Source><![CDATA[
    private InventTransferShipUpdateQty getShippingUpdate()
    {
        InventTransferShipUpdateQty shipUpdate;

        switch (this.TableId)
        {
            case tableNum(InventTransferOrderHeaderEntity):
                shipUpdate = InventTransferShipUpdateQty::All;
                break;

            case tableNum(InventTransferOrderLineEntity):
            case tableNum(InventTransferOrderLineV2Entity):
                shipUpdate = InventTransferShipUpdateQty::ShipNow;
                break;
        }

        return shipUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReceivingUpdate</Name>
				<Source><![CDATA[
    private InventTransferReceiveUpdateQty getReceivingUpdate()
    {
        InventTransferReceiveUpdateQty receiveUpdate;

        switch (this.TableId)
        {
            case tableNum(InventTransferOrderHeaderEntity):
                receiveUpdate = InventTransferReceiveUpdateQty::All;
                break;

            case tableNum(InventTransferOrderLineEntity):
            case tableNum(InventTransferOrderLineV2Entity):
                receiveUpdate = InventTransferReceiveUpdateQty::ReceiveNow;
                break;
        }

        return receiveUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoCreateInventTransferParmLine</Name>
				<Source><![CDATA[
    private boolean autoCreateInventTransferParmLine()
    {
        return this.TableId == tableNum(InventTransferOrderHeaderEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInventTransferParmLine</Name>
				<Source><![CDATA[
    private void createInventTransferParmLine(InventTransferParmTable _inventTransferParmTable)
    {
        switch (this.TableId)
        {
            case tableNum(InventTransferOrderLineEntity):
            case tableNum(InventTransferOrderLineV2Entity):
                InventTransferLine inventTransferLine = InventTransferLine::find(this.TransferOrderNumber, this.LineNumber);

                switch (_inventTransferParmTable.UpdateType)
                {
                    case InventTransferUpdateType::Shipment:
                        InventTransferParmLineCreate::newFromParameters(_inventTransferParmTable).createShipLineWithoutExplodeLines(inventTransferLine.inventTransferTable(), inventTransferLine, inventTransferLine.LineNum, inventTransferLine.QtyTransfer, inventTransferLine.PdsCWQtyTransfer);
                        break;

                    case InventTransferUpdateType::Receive:
                        InventTransferParmLineCreate::newFromParameters(_inventTransferParmTable).createReceiveLineWithoutExplodeLines(inventTransferLine.inventTransferTable(), inventTransferLine, inventTransferLine.LineNum, inventTransferLine.QtyTransfer, inventTransferLine.PdsCWQtyTransfer);
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ships the transfer order.
    /// </summary>
    public void ship()
    {
        ttsbegin;
        InventTransferMultiShip inventTransferMultiShip = InventTransferMultiShip::construct();
        inventTransferMultiShip.runUpdate(this.InventTransferOrderEntityMap::createInventTransferParmTable(InventTransferUpdateType::Shipment));
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>receive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Receives the transfer order.
    /// </summary>
    public void receive()
    {
        ttsbegin;
        InventTransferMultiReceive inventTransferMultiReceive = InventTransferMultiReceive::construct();
        inventTransferMultiReceive.runUpdate(this.InventTransferOrderEntityMap::createInventTransferParmTable(InventTransferUpdateType::Receive));
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TransferOrderNumber</Name>
			<ExtendedDataType>InventTransferId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LineNumber</Name>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>TransferOrderPromisingMethod</Name>
			<EnumType>SalesDeliveryDateControlType</EnumType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>