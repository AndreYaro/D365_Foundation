<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OverdueJournalTable_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class OverdueJournalTable_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for <c>OverdueJournalTable_W</c> record.
    /// </summary>
    /// <param name="_tableId">
    /// Table id of table looked for.
    /// </param>
    /// <param name="_overdueJournalId">
    /// Id of journal.
    /// </param>
    /// <param name="_forUpdate">
    /// Indicates that record must be selected for update.
    /// </param>
    /// <returns>
    /// Found <c>OverdueJournalTable_W</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// if incorrect table id has been specified.
    /// </exception>
    public static OverdueJournalTable_W find(TableId _tableId, OverdueJournalId_W _overdueJournalId, boolean _forUpdate = false)
    {
        OverdueJournalTable_W   overdueJournalTable;
        switch (_tableId)
        {
            case tableNum(CustOverdueVATJournalTable_W):
                overdueJournalTable = CustOverdueVATJournalTable_W::find(_overdueJournalId, _forUpdate);
                break;
            case tableNum(VendOverdueVATJournalTable_W):
                overdueJournalTable = VendOverdueVATJournalTable_W::find(_overdueJournalId, _forUpdate);
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
        return overdueJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for last not canceled <c>OverdueJournalTable_W</c> record.
    /// </summary>
    /// <param name="_journalType">
    /// Type of journal looked for.
    /// </param>
    /// <returns>
    /// <c>OverdueJournalTable_W</c> record found.
    /// </returns>
    /// <exception cref="error(Error::wrongUseOfFunction(funcName())">
    /// If incorrect type of journal has been specified.
    /// </exception>
    public static OverdueJournalTable_W findLast(OverdueJournalType_W _journalType)
    {
        CustOverdueVATJournalTable_W    custJournalTable;
        VendOverdueVATJournalTable_W    vendJournalTable;
        VendOverdueCITPITJournalTable_W overdueCITPITJournalTable;

        OverdueJournalTable_W           overdueJournalTable;

        switch (_journalType)
        {
            case OverdueJournalType_W::CustVATJournal:
                overdueJournalTable = custJournalTable.data();
                select firstonly overdueJournalTable
                    order by TransDate desc, JournalId desc
                    where overdueJournalTable.Cancelled == NoYes::No;
                break;

            case OverdueJournalType_W::VendVATJournal:
                overdueJournalTable = vendJournalTable.data();
                select firstonly overdueJournalTable
                    order by TransDate desc, JournalId desc
                    where overdueJournalTable.Cancelled == NoYes::No;
                break;

            case OverdueJournalType_W::VendCITPITJournal:
                overdueJournalTable = overdueCITPITJournalTable.data();
                select firstonly overdueJournalTable
                    order by TransDate desc, JournalId desc;
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        return overdueJournalTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4003567</DeveloperDocumentation>
	<Label>@SYS4003537</Label>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>TransDate</TitleField2>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Approved</Name>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Cancelled</Name>
			<ExtendedDataType>Cancelled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>OverdueJournalId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>LedgerVoucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Posted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>JournalPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>JournalDataAreaId</Name>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>