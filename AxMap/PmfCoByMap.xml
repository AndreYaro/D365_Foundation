<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfCoByMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PmfCoByMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>coByQty</Name>
				<Source><![CDATA[
        public PmfCoByQty coByQty(Qty _seriesSize = 1)
    {
        // Sign is multiplied later
        Qty  seriesSize = abs(_seriesSize);

        // Calculate using seriesize to avoid rounding later on
        return this.CoByQtySerie
        ? (seriesSize * this.CoByQty) / this.CoByQtySerie
        : seriesSize * this.CoByQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCoByMap</Name>
				<Source><![CDATA[
        public void initFromCoByMap(PmfCoByMap _coByMap)
    {
        this.data(_coByMap);

        if (tableHasInstanceMethod(
            new DictTable(this.TableId),
            tablemethodstr(PmfProdCoBy, setInventDimId)))
        {
            this.InventDimId = '';
            this.setInventDimId(_coByMap.InventDimId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCostAllocationFromTCA</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates cost allocation fields based on the related record usage of the total cost allocation methodology.
    /// </summary>
    /// <param name="_isTCA">
    /// A <c>boolean</c> value indicating whether the related record uses the total cost allocation methodology or not.
    /// </param>
    public void updateCostAllocationFromTCA(boolean _isTCA = false)
    {
        switch (this.ProductType)
        {
            case PmfProductType::By_Product :
                if (_isTCA)
                {
                    this.CostAllocation     = PmfCostAllocationMethod::None;
                    this.CostAllocationPct  = 0;
                }
                break;

            case PmfProductType::Co_Product :
                if (_isTCA)
                {
                    if (this.CostAllocation != PmfCostAllocationMethod::None)
                    {
                        this.CostAllocation     = PmfCostAllocationMethod::TCA;
                    }
                }
                else
                {
                    if ( this.CostAllocationPct > 0)
                    {
                        this.CostAllocation     = PmfCostAllocationMethod::Manual;
                    }
                    else
                    {
                        this.CostAllocation     = PmfCostAllocationMethod::None;
                    }
                }
            break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PMF</ConfigurationKey>
	<DeveloperDocumentation>@PDS1607</DeveloperDocumentation>
	<Label>@SYS22174</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>BOMId</Name>
			<ExtendedDataType>BOMId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>BOMVersionRefRecId</Name>
			<ExtendedDataType>PmfBOMVersionRefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>BurdenType</Name>
			<EnumType>PmfBurdenType</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>CoByQty</Name>
			<ExtendedDataType>PmfCoByQty</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>CoByQtySerie</Name>
			<ExtendedDataType>PmfCoByQtySerie</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>CostAllocation</Name>
			<EnumType>PmfCostAllocationMethod</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>CostAllocationPct</Name>
			<ExtendedDataType>PmfCostAllocationPct</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimId</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LineNum</Name>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>OverheadAmt</Name>
			<ExtendedDataType>PmfOverheadAmt</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PdsCWQty</Name>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ProdId</Name>
			<ExtendedDataType>ProdId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>ProductType</Name>
			<EnumType>PmfProductType</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>RoundUp</Name>
			<EnumType>PmfCoByRoundUp</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>RoundUpQty</Name>
			<ExtendedDataType>PmfRoundUpQty</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>