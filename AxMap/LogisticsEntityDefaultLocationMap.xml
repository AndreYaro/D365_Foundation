<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsEntityDefaultLocationMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsEntityDefaultLocationMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>concatenatedDefaultRolesComputedFieldDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a direct SQL query for the purpose of computing a list of Default roles for a 
    /// given entity.
    /// </summary>
    /// <param name = "_entityName">The name of the entity that has locations and default role associations (e.g. Customer, Vendor)</param>
    /// <param name = "_viewName">The name of the view the computed SQL will reference and join back to.</param>
    /// <param name = "_dataSourceName">The name of the datasource used by the view to join to.</param>
    /// <param name = "_entityFieldName">The name of the field of the entity to join to.</param>
    /// <param name = "_locationFieldName">The name of the field of the location to join to.</param>
    /// <returns></returns>
    public static str concatenatedDefaultRolesComputedFieldDefinition(TableName _entityName, TableName _viewName, DataSourceName _dataSourceName, FieldName _entityFieldName, FieldName _locationFieldName)
    {
        SysDictTable dictEntity = new SysDictTable(tableName2Id(_entityName));
        SysDictTable dictEntityLocation = new SysDictTable(LogisticsEntityLocationMap::findEntityLocationTableId(dictEntity.makeRecord()));
        LogisticsEntityLocationMap entityLocationMap = dictEntityLocation.makeRecord();
        SysDictTable dictEntityLocationRole = new SysDictTable(entityLocationMap.getEntityLocationRoleTableId());
        SysDictTable dictLocationRole = new SysDictTable(tableNum(LogisticsLocationRole));
        SysDictTable dictEntityDefaultLocation = new SysDictTable(LogisticsEntityDefaultLocationMap::findEntityDefaultLocationTableId(dictEntity.makeRecord()));

        str entityLocation = dictEntityLocation.name(DbBackend::Sql);
        str entityLocationRole = dictEntityLocationRole.name(DbBackend::Sql);
        str logisticsLocationRole = dictLocationRole.name(DbBackend::Sql);
        str entityDefaultLocation = dictEntityDefaultLocation.name(DbBackend::Sql);

        str entityLocation_RecId = dictEntityLocation.fieldObject(fieldNum(LogisticsEntityLocationMap, RecId)).name(DbBackend::Sql);
        str entityLocation_Entity = dictEntityLocation.fieldObject(SysDictField::findMappedFieldId(tableNum(LogisticsEntityLocationMap), fieldNum(LogisticsEntityLocationMap, Entity), dictEntityLocation.id())).name(DbBackend::Sql);
        str entityLocation_Location = dictEntityLocation.fieldObject(SysDictField::findMappedFieldId(tableNum(LogisticsEntityLocationMap), fieldNum(LogisticsEntityLocationMap, Location), dictEntityLocation.id())).name(DbBackend::Sql);
        str entityLocationRole_EntityLocation = dictEntityLocationRole.fieldObject(SysDictField::findMappedFieldId(tableNum(LogisticsEntityLocationRoleMap), fieldNum(LogisticsEntityLocationRoleMap, EntityLocation), dictEntityLocationRole.id())).name(DbBackend::Sql);
        str entityLocationRole_LocationRole = dictEntityLocationRole.fieldObject(SysDictField::findMappedFieldId(tableNum(LogisticsEntityLocationRoleMap), fieldNum(LogisticsEntityLocationRoleMap, LocationRole), dictEntityLocationRole.id())).name(DbBackend::Sql);
        str entityLocationRole_RecId = dictEntityLocationRole.fieldObject(fieldNum(LogisticsEntityLocationRoleMap, RecId)).name(DbBackend::Sql);
        str locationRole_RecId = dictLocationRole.fieldObject(fieldNum(LogisticsLocationRole, RecId)).name(DbBackend::Sql);
        str locationRole_Name = dictLocationRole.fieldObject(fieldNum(LogisticsLocationRole, Name)).name(DbBackend::Sql);
        str entityDefaultLocation_PartyLocationRole = dictEntityDefaultLocation.fieldObject(SysDictField::findMappedFieldId(tableNum(LogisticsEntityDefaultLocationMap), fieldNum(LogisticsEntityDefaultLocationMap, PartyLocationRole), dictEntityDefaultLocation.id())).name(DbBackend::Sql);

        /*
        SELECT STUFF((SELECT N';'+ RTRIM(LR.NAME)
            From DirPartyLocation EL
            JOIN DirPartyLocationRole ELR on ELR.PARTYLOCATION = EL.RecId
            join LogisticsLocationRole LR on LR.RecId = ELR.LOCATIONROLE
            join CustDefaultLocation DL on DL.PARTYLOCATIONROLE = ELR.RECID
            WHERE EL.Party = T1.PARTY
            and EL.LOCATION = T1.LOCATION
            and DL.DATAAREAID = T3.DataAreaId
            FOR XML PATH('')),1,1,'')
        */
        
        return 'SELECT STUFF((SELECT ' + SysComputedColumn::returnLiteral(LogisticsEntityLocationMap::concatenatedLocationRolesDelimiter()) +
                '+ RTRIM(LR.' + locationRole_Name +')'+
                ' FROM ' + entityLocation + ' EL' +
                ' JOIN ' + entityLocationRole + ' ELR ON ELR.' + entityLocationRole_EntityLocation +' = EL.' + entityLocation_RecId +
                ' AND ELR.PARTITION = EL.PARTITION' +
                ' JOIN ' + logisticsLocationRole + ' LR ON LR.' + locationRole_RecId + ' = ELR.' + entityLocationRole_LocationRole +
                ' JOIN ' + entityDefaultLocation + ' DL on DL.' + entityDefaultLocation_PartyLocationRole + ' = ELR.' + entityLocationRole_RecId +
                ' WHERE EL.' + entityLocation_Entity +' = ' + SysComputedColumn::returnField(_viewName, _dataSourceName, _entityFieldName) +
                ' AND EL.' + entityLocation_Location + ' = ' + SysComputedColumn::returnField(_viewName, _dataSourceName, _locationFieldName) +
                ' AND DL.DATAAREAID = ' + SysComputedColumn::returnField(_viewName, _entityName, 'DATAAREAID') +
                ' AND EL.PARTITION = ' + SysComputedColumn::returnField(_viewName, _dataSourceName, 'PARTITION') +
                ' ORDER BY LR.' + locationRole_Name +
                ' FOR XML PATH(' + SysComputedColumn::returnLiteral('') + ')),1,1,'+ SysComputedColumn::returnLiteral('') + ')';
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDefaultLocationTableId</Name>
				<Source><![CDATA[
    private static TableId findEntityDefaultLocationTableId(Common _entity)
    {
        LogisticsLocationDefault logisticsLocationDefault = LogisticsLocationDefault::construct(_entity);
        return LogisticsLocationDefault.getLocationDefaultsTableId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultLocationRoles</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the given location as defaults for the roles on the given entity.
    /// </summary>
    /// <param name = "_entity">The entity of the location.</param>
    /// <param name = "_locationRecId">The location to set the as the default.</param>
    /// <param name = "_locationRoleRecIds">The list of roles the location is the default for.</param>
    public static void setDefaultLocationRoles(Common _entity, RecId _locationRecId, container _locationRoleRecIds)
    {
        LogisticsLocationDefault defaults = LogisticsLocationDefault::construct(_entity);

        for (int i = 1; i <= conLen(_locationRoleRecIds); i++)
        {
            defaults.setDefaultLocation(_locationRecId, conPeek(_locationRoleRecIds,i));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>EntityId</Name>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>PartyLocationRole</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>Entity</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>AccountNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>PartyLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>VendDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>AccountNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>PartyLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>smmBusRelDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>BusRelAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>PartyLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventSiteDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>SiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>SiteLogisticsLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventLocationDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>InventLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>LocationLogisticsLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TMSCarrierDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
					<MapFieldTo>CarrierCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>LocationLogisticsLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CompanyDefaultLocation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>EntityId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyLocationRole</MapField>
					<MapFieldTo>PartyLocationRole</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Entity</MapField>
					<MapFieldTo>LegalEntity</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
</AxMap>