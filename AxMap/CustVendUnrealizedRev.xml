<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendUnrealizedRev</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendUnrealizedRev extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the record is <c>VendSettlement</c>
    /// </summary>
    /// <returns>
    /// The record of <c>CustVendSettlement</c>
    /// </returns>
    public CustVendSettlement custVendSettlement()
    {
        VendSettlement      vendSettlement;
        CustVendSettlement  custVendSettlement;

        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev):
                custVendSettlement = vendSettlement;
                break;
        }

        return custVendSettlement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the record is <c>VendTrans</c>
    /// </summary>
    /// <returns>
    /// The record of <c>CustVendTrans</c>
    /// </returns>
    public CustVendTrans custVendTrans()
    {
        VendTrans       vendTrans;
        CustVendTrans   custVendTrans;

        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev):
                custVendTrans = vendTrans;
                break;
        }

        return custVendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the module of current record.
    /// </summary>
    /// <returns>
    /// The module.
    /// </returns>
    public ModuleCustVend getModule()
    {
        if (this.TableId == tableNum(VendUnrealizedRev))
        {
            return ModuleCustVend::Vend;
        }

        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrevPaneTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the previous pane title.
    /// </summary>
    /// <returns>
    /// Returns the title.
    /// </returns>
    public Caption getPrevPaneTitle()
    {
        return strFmt("@SYS330566", this.ReversalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initUnrealizedRevId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes reversal journal number.
    /// </summary>
    /// <returns>
    ///     Returns reversal journal number.
    /// </returns>
    private CustVendUnrealizedRevId initUnrealizedRevId()
    {
        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev)   :
                return NumberSeq::newGetNum(VendParameters::numRefVendUnrealizedRevId()).num();

            default                             :
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.ReversalId   = this.CustVendUnrealizedRev::initUnrealizedRevId();
        this.ReversalDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.Posted       = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxInfoFilled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether tax invoice detail is filled in.
    /// </summary>
    /// <returns>
    /// True if the tax invoice detail is filled in, otherwise false.
    /// </returns>
    public boolean isTaxInfoFilled()
    {
        return (this.TaxInvoiceId && this.TaxInvoiceDate && this.TaxInvoiceReceiptDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the customer/vendor name.
    /// </summary>
    /// <returns>
    /// Customer/vendor name.
    /// </returns>
    public Name name()
    {
        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev)   :
                return VendTable::find(this.AccountNum).name();

            default                             :
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>releaseUnrealizedRev</Name>
				<Source><![CDATA[
    /// <summary>
    /// Releases the unrealized reversal transaction.
    /// </summary>
    public void releaseUnrealizedRev()
    {
        ttsbegin;

        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev) :
                NumberSeq::releaseNumber(VendParameters::numRefVendUnrealizedRevId().NumberSequenceId, this.ReversalId);
                break;

            default:
                ttsabort;
                return;
        }

        this.CustVendUnrealizedRev::releaseVendSettlement();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>releaseVendSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Releases all related vendor settlement transacions by setting reference id with 0.
    /// </summary>
    private void releaseVendSettlement()
    {
        VendSettlementExtensionTH   vendSettlementExtensionTH;

        ttsbegin;
        switch (this.TableId)
        {
            case tableNum(VendUnrealizedRev):
                update_recordset vendSettlementExtensionTH
                    setting VendUnrealizedRev = 0
                    where vendSettlementExtensionTH.VendUnrealizedRev == this.RecId;
                break;
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TaxThailandGovCertification</ConfigurationKey>
	<CountryRegionCodes>TH</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4082879</DeveloperDocumentation>
	<Label>@SYS4082868</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>AccountNum</Name>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>CurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<StringSize>3</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Posted</Name>
			<ExtendedDataType>JournalPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>RealVendName</Name>
			<ExtendedDataType>TaxUnrealizedPurchRealVendName</ExtendedDataType>
			<StringSize>100</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>ReversalDate</Name>
			<ExtendedDataType>CustVendUnrealizedRevDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ReversalId</Name>
			<ExtendedDataType>CustVendUnrealizedRevId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TaxInvoiceDate</Name>
			<ExtendedDataType>TaxUnrealizedPurchTaxInvoiceDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TaxInvoiceId</Name>
			<ExtendedDataType>TaxUnrealizedPurchTaxInvoiceId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TaxInvoiceReceiptDate</Name>
			<ExtendedDataType>TaxUnrealizedPurchTaxInvoiceRcptDate</ExtendedDataType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>