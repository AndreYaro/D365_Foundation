<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendSettlement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendSettlement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendTrans</Name>
				<Source><![CDATA[
    public CustVendTrans custVendTrans(boolean _forUpdate = false)
    {
        return this.custVendSettlementInterface().custVendTrans(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>differenceAmountMST</Name>
				<Source><![CDATA[
    public display AmountMST differenceAmountMST()
    {
        return (this.SettleAmountMST - this.ExchAdjustment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInvoiceAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the invoice amount associated with the settlement invoice, if any.
    /// </summary>
    /// <returns>The invoice amount.</returns>
    public display AmountMST displayInvoiceAmountMST()
    {
        return this.custVendSettlementInterface().custVendTransOffset().AmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInvoiceCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the currency code associated with the settlement invoice, if any.
    /// </summary>
    /// <returns>The invoice currency code.</returns>
    public display CurrencyCode displayInvoiceCurrencyCode()
    {
        return this.custVendSettlementInterface().custVendTransOffset().CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the invoice number associated with the settlement invoice, if any.
    /// </summary>
    /// <returns>The invoice number.</returns>
    public display InvoiceId displayInvoiceId()
    {
        return this.custVendSettlementInterface().custVendTransOffset().Invoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the <c>CustVendSettlement</c> with the given RecId.
    /// </summary>
    /// <param name = "_module">
    ///     The module the <c>CustVendSettlement</c> record is in.
    /// </param>
    /// <param name = "_recId">
    ///     The RecId to find.
    /// </param>
    /// <param name = "_forupdate">
    ///     If true, marks the returned <c>CustVendSettlement</c> for update (optional).
    /// </param>
    /// <returns>
    ///     The <c>CustVendSettlement</c> record with the given RecId.
    /// </returns>
    public static CustVendSettlement findByModule(ModuleCustVend _module, RecId _recId, boolean _forupdate = false)
    {
        return CustVendSettlementInterface::findByModule(_module, _recId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the retrieved table buffer from the query for the concrete table represented by the map.
    /// </summary>
    /// <param name="_queryRun">
    ///    The query that contains the concrete table.
    /// </param>
    /// <returns>
    ///    The retrieved table buffer from the query for the concrete table represented by the map.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public CustVendSettlement getFromQuery(QueryRun _queryRun)
    {
        return this.custVendSettlementInterface().getFromQuery(_queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChangedInQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the concrete table represented by the map has changed in the query.
    /// </summary>
    /// <param name="_queryRun">
    ///    The query that contains the concrete table.
    /// </param>
    /// <returns>
    ///    true if the concrete table represented by the map has changed in the query; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public boolean hasChangedInQuery(QueryRun _queryRun)
    {
        return this.custVendSettlementInterface().hasChangedInQuery(_queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustVendTrans</Name>
				<Source><![CDATA[
    public void initFromCustVendTrans(CustVendTrans _custVendTrans)
    {
        this.custVendSettlementInterface().initFromCustVendTrans(_custVendTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markThisAndRelatedOffsets</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and creates pending settlement reversals relating to the current map instance and its related
    ///    offset records.
    /// </summary>
    /// <param name="_specTransManager">
    ///    The current <c>SpecTransManager</c> instance that contains the marked settlements for reversal.
    /// </param>
    /// <param name="_currencyCode">
    ///    The currency that is used to create marked settlements for reversal.
    /// </param>
    public void markThisAndRelatedOffsets(SpecTransManager _specTransManager, CurrencyCode _currencyCode)
    {
        this.custVendSettlementInterface().markThisAndRelatedOffsets(_specTransManager, _currencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markRelatedTaxWithholdVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks <C>CustVendSettlement</C> that relates to the specified withholding tax voucher.
    /// </summary>
    /// <param name="_specTransManager">
    /// The current <c>SpecTransManager</c> instance that contains the marked settlements for reversal.
    /// </param>
    /// <param name="_voucher">
    /// Withholding tax voucher number.
    /// </param>
    /// <param name="_voucherTransDate">
    /// Withholding tax voucher date.
    /// </param>
    [SysObsoleteAttribute("This method is not called, please call markRelatedTaxWithholdVoucherByLine method", false, 30\6\2020)]
     public void markRelatedTaxWithholdVoucher(
        SpecTransManager    _specTransManager,
        Voucher             _voucher,
        TransDate           _voucherTransDate)
    {
        this.custVendSettlementInterface().markRelatedTaxWithholdVoucherByLine(_specTransManager, _voucher, _voucherTransDate, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>markRelatedTaxWithholdVoucherByLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks <C>CustVendSettlement</C> that relates to the specified withholding tax voucher by invoice journal.
    /// </summary>
    /// <param name="_specTransManager">
    /// The current <c>SpecTransManager</c> instance that contains the marked settlements for reversal.
    /// </param>
    /// <param name="_voucher">
    /// Withholding tax voucher number.
    /// </param>
    /// <param name="_voucherTransDate">
    /// Withholding tax voucher date.
    /// </param>
    /// <param name="_offsetTransVoucher">
    /// Withholding tax OffSet Voucher number.
    /// </param>
    public void markRelatedTaxWithholdVoucherByLine(
        SpecTransManager _specTransManager,
        Voucher _voucher,
        TransDate _voucherTransDate,
        Voucher _offsetTransVoucher)
    {
        this.custVendSettlementInterface().markRelatedTaxWithholdVoucherByLine(_specTransManager, _voucher, _voucherTransDate, _offsetTransVoucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseDate_RU</Name>
				<Source><![CDATA[
    public TransDate reverseDate_RU()
    {
        return this.custVendSettlementInterface().reverseDate_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transBuffer</Name>
				<Source><![CDATA[
    public CustVendTrans transBuffer()
    {
        return this.custVendSettlementInterface().transBuffer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unmarkThisAndRelatedOffsets</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and removes pending settlement reversals that relate to the current map instance and its
    ///    related offset records.
    /// </summary>
    /// <param name="_specTransManager">
    ///    The current <c>SpecTransManager</c> instance that contains marked settlements.
    /// </param>
    public void unmarkThisAndRelatedOffsets(SpecTransManager _specTransManager)
    {
        this.custVendSettlementInterface().unmarkThisAndRelatedOffsets(_specTransManager);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unmarkRelatedTaxWithholdVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unmarks <C>CustVendSettlement</C> that relates to the specified withholding tax voucher.
    /// </summary>
    /// <param name="_specTransManager">
    /// The current <c>SpecTransManager</c> instance that contains the marked settlements for reversal.
    /// </param>
    /// <param name="_voucher">
    /// Withholding tax voucher number.
    /// </param>
    /// <param name="_voucherTransDate">
    /// Withholding tax voucher date.
    /// </param>
    [SysObsoleteAttribute("This method is not called, please call unmarkRelatedTaxWithholdVoucherByLine method", false, 30\6\2020)]
    public void unmarkRelatedTaxWithholdVoucher(
        SpecTransManager    _specTransManager,
        Voucher             _voucher,
        TransDate           _voucherTransDate)
    {
        this.custVendSettlementInterface().unmarkRelatedTaxWithholdVoucherByLine(_specTransManager, _voucher, _voucherTransDate, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>unmarkRelatedTaxWithholdVoucherByLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unmarks <C>CustVendSettlement</C> that relates to the specified withholding tax voucher by invoice journal.
    /// </summary>
    /// <param name="_specTransManager">
    /// The current <c>SpecTransManager</c> instance that contains the marked settlements for reversal.
    /// </param>
    /// <param name="_voucher">
    /// Withholding tax voucher number.
    /// </param>
    /// <param name="_voucherTransDate">
    /// Withholding tax voucher date.
    /// </param>
    /// <param name="_offsetTransVoucher">
    /// Withholding tax OffSet Voucher number.
    /// </param>
    public void unmarkRelatedTaxWithholdVoucherByLine(
        SpecTransManager _specTransManager,
        Voucher _voucher,
        TransDate _voucherTransDate,
        Voucher _offsetTransVoucher)
    {
        this.custVendSettlementInterface().unmarkRelatedTaxWithholdVoucherByLine(_specTransManager, _voucher, _voucherTransDate, _offsetTransVoucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmptyTableBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty table buffer for the concrete table represented by the map.
    /// </summary>
    /// <param name="_moduleCustVend">
    ///    The module consuming the map.
    /// </param>
    /// <returns>
    ///    An empty table buffer for the concrete table represented by the map.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public static CustVendSettlement getEmptyTableBuffer(ModuleCustVend _moduleCustVend)
    {
        return CustVendSettlementInterface::getEmptyTableBuffer(_moduleCustVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>offsetTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds an offset transaction for this settlement.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean parameter specifying whether the transaction must be selected for update.
    /// </param>
    /// <returns>
    /// An offset transaction for this settlement.
    /// </returns>
    public CustVendTrans offsetTrans(boolean _forUpdate = false)
    {
        return this.custVendSettlementInterface().custVendTransOffset(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendSettlementInterface</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CustVendSettlementInterface</c> object associated with the current table record.
    /// </summary>
    /// <returns>
    /// A <c>CustVendSettlementInterface</c> object.
    /// </returns>
    public CustVendSettlementInterface custVendSettlementInterface()
    {
        return CustVendSettlementInterface::createInstance(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS318438</DeveloperDocumentation>
	<Label>@SYS86978</Label>
	<TitleField1>AccountNum</TitleField1>
	<TitleField2>OffsetTransVoucher</TitleField2>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>AccountNum</Name>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>CanBeReversed</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>CashDiscDate</Name>
			<ExtendedDataType>DiscDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>CashDiscountLedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>DefaultDimension</Name>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>DueDate</Name>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchAdjustment</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchAdjustmentReporting</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>FineAmount_BR</Name>
			<ExtendedDataType>FineAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>FineCode_BR</Name>
			<ExtendedDataType>CustFineCode_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>InterestAmount_BR</Name>
			<ExtendedDataType>FinInterestAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InterestCode_BR</Name>
			<ExtendedDataType>CustInterestCode_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>LastInterestDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OffsetAccountNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OffsetCompany</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<StringSize>4</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>OffsetRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>OffsetTransVoucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PennyDiff</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>ReversedRecId_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>ReverseTrans_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>Correct</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>SettleAmountCur</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>SettleAmountMST</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>SettleAmountReporting</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>SettlementGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SysInt64</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>SettlementVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Visible>No</Visible>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>SettleTax1099Amount</Name>
			<ExtendedDataType>SettleTax1099Amount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>SettleTax1099StateAmount</Name>
			<ExtendedDataType>SettleTax1099StateAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TaxVoucher_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ThirdPartyBankAccountId</Name>
			<ExtendedDataType>BankThirdPartyAccountId</ExtendedDataType>
			<GroupPrompt>@SYS8079</GroupPrompt>
			<Label>@SYS88299</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>TransCompany</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<StringSize>4</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>TransRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>UtilizedCashDisc</Name>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>VATTaxAgentAmount_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>VendPaymentGroup</Name>
			<ExtendedDataType>VendPaymentGrouping</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>ReportingDate_RU</Name>
			<ExtendedDataType>ReportingDate_RU</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>ClosedDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>TransOpen</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>TransType</Name>
			<EnumType>LedgerTransType</EnumType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>