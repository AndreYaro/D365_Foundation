<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransOpen</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendTransOpen extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendTransOpenInterface</Name>
				<Source><![CDATA[
    public CustVendTransOpenInterface custVendTransOpenInterface()
    {
        return CustVendTransOpenInterface::createInstance(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendFine_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CustVendFine_BR</c> map associated with this record.
    /// </summary>
    /// <returns>
    /// The <c>CustVendFine_BR</c> map associated with this record.
    /// </returns>
    public CustVendFine_BR custVendFine_BR()
    {
        return this.custVendTransOpenInterface().custVendFine_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendInterest_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CustVendInterest_BR</c> map associated with this record.
    /// </summary>
    /// <returns>
    /// The <c>CustVendInterest_BR</c> map associated with this record.
    /// </returns>
    public CustVendInterest_BR custVendInterest_BR()
    {
        return this.custVendTransOpenInterface().custVendInterest_BR();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the retrieved table buffer from the query for the concrete table represented by the map.
    /// </summary>
    /// <param name="_queryRun">
    ///    The query that contains the concrete table.
    /// </param>
    /// <returns>
    ///    The retrieved table buffer from the query for the concrete table represented by the map.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public CustVendTransOpen getFromQuery(QueryRun _queryRun)
    {
        return this.custVendTransOpenInterface().getFromQuery(_queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets module type.
    /// </summary>
    /// <returns>
    /// The <c>ModuleCustVend</c> module type.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// TableId is not associated with any module type.
    /// </exception>
    public ModuleCustVend getModule()
    {
        return this.custVendTransOpenInterface().getModule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasChangedInQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the concrete table represented by the map has changed in the query.
    /// </summary>
    /// <param name="_queryRun">
    ///    The query that contains the concrete table.
    /// </param>
    /// <returns>
    ///    true if the concrete table represented by the map has changed in the query; otherwise, false.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public boolean hasChangedInQuery(QueryRun _queryRun)
    {
        return this.custVendTransOpenInterface().hasChangedInQuery(_queryRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches <c>CustTransOpen</c> or <c>VendTransOpen</c> by Record ID.
    /// </summary>
    /// <param name="_tableId">
    /// Table id - should be <c>CustTransOpen</c> or <c>VendTransOpen</c>.
    /// </param>
    /// <param name="_recId">
    /// The Record ID to look for.
    /// </param>
    /// <param name="_forupdate">
    /// Determines if record should be selected for update
    /// </param>
    /// <returns>
    /// Found <c>CustTransOpen</c> or <c>VendTransOpen</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If table id is not <c>CustTransOpen</c> or <c>VendTransOpen</c>
    /// </exception>
    public static CustVendTransOpen find_BR(TableId _tableId, RecId _recId, boolean _forupdate = false)
    {
        return CustVendTransOpenInterface::find(_tableId, _recId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches <c>CustTransOpen</c> or <c>VendTransOpen</c> by Record ID.
    /// </summary>
    /// <param name="_tableId">
    /// Table id - should be <c>CustTransOpen</c> or <c>VendTransOpen</c>.
    /// </param>
    /// <param name="_recId">
    /// The Record ID to look for.
    /// </param>
    /// <param name="_forupdate">
    /// Determines if record should be selected for update
    /// </param>
    /// <returns>
    /// Found <c>CustTransOpen</c> or <c>VendTransOpen</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If table id is not <c>CustTransOpen</c> or <c>VendTransOpen</c>
    /// </exception>
    public static CustVendTransOpen find_RU(TableId _tableId, RecId _recId, boolean _forupdate = false)
    {
        return CustVendTransOpenInterface::find(_tableId, _recId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches <c>CustTransOpen</c> or <c>VendTransOpen</c> by reference record ID.
    /// </summary>
    /// <param name="_tableId">
    /// Table id - should be <c>CustTrans</c> or <c>VendTrans</c>.
    /// </param>
    /// <param name="_recId">
    /// The reference record ID to look for.
    /// </param>
    /// <param name="_forupdate">
    /// Determines if record should be selected for update.
    /// </param>
    /// <returns>
    /// Found <c>CustTransOpen</c> or <c>VendTransOpen</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If table id is not <c>CustTrans</c> or <c>VendTrans</c>
    /// </exception>
    public static CustVendTransOpen findRefId(TableId _tableId, RecId _recId, boolean _forupdate = false)
    {
        return CustVendTransOpenInterface::findRefId(_tableId, _recId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches <c>CustTransOpen</c> or <c>VendTransOpen</c> by reference record ID.
    /// </summary>
    /// <param name="_tableId">
    /// Table id - should be <c>CustTrans</c> or <c>VendTrans</c>.
    /// </param>
    /// <param name="_recId">
    /// The reference record ID to look for.
    /// </param>
    /// <param name="_forupdate">
    /// Determines if record should be selected for update.
    /// </param>
    /// <returns>
    /// Found <c>CustTransOpen</c> or <c>VendTransOpen</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// If table id is not <c>CustTrans</c> or <c>VendTrans</c>
    /// </exception>
    [SysObsoleteAttribute('This method is obsolete. Call CustVendTransOpen::findRefId instead', false, 30\6\2020)]
    public static CustVendTransOpen findRefId_RU(TableId _tableId, RecId _recId, boolean _forupdate = false)
    {
        return CustVendTransOpen::findRefId(_tableId, _recId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmptyTableBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty table buffer for the concrete table represented by the map.
    /// </summary>
    /// <param name="_moduleCustVend">
    ///    The module consuming the map.
    /// </param>
    /// <returns>
    ///    An empty table buffer for the concrete table represented by the map.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    ///    The map has not been associated with one of the concrete tables represented by the map.
    /// </exception>
    public static CustVendTransOpen getEmptyTableBuffer(ModuleCustVend _moduleCustVend)
    {
        return CustVendTransOpenInterface::getEmptyTableBuffer(_moduleCustVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustTransOpenOrVendTransOpen</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determine whether the current table is CustTransOpen or VendTransOpen.
    /// </summary>
    /// <param name="_custVendTransOpen">
    ///    The map custVendTransOpen.
    /// </param>
    /// <returns>
    ///    true if CustTransOpen or VendTransOpen; otherwise, false.
    /// </returns>
    public static boolean isCustTransOpenOrVendTransOpen(CustVendTransOpen _custVendTransOpen)
    {
        if (_custVendTransOpen.TableId == tableNum(CustTransOpen) || _custVendTransOpen.TableId == tableNum(VendTransOpen))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS318437</DeveloperDocumentation>
	<Label>@SYS86977</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>AccountNum</Name>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>AmountCur</Name>
			<ExtendedDataType>AmountCurDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>AmountMST</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>BankDiscNoticeDeadline</Name>
			<ExtendedDataType>BankDiscNoticeDeadline</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>BankLCLine</Name>
			<ExtendedDataType>BankLCLineRefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>CashDiscDate</Name>
			<ExtendedDataType>CustCashDiscDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>CashDiscountLedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS75407</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>DueDate</Name>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>EPBarCodeInfo_BR</Name>
			<ExtendedDataType>EPBarCodeInfo_BR</ExtendedDataType>
			<StringSize>50</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchAdjUnrealized</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<Label>@SYS67834</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ExchAdjUnrealizedReporting</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>FineAmount_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>FineAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>FineAmountPaymCur_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>FineAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>FineCode_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>CustFineCode_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>InterestAmount_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>FinInterestAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>InterestAmountPaymCur_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>FinInterestAmount_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InterestCode_BR</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>CustInterestCode_BR</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>LastInterestDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>PossibleCashDisc</Name>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>RefRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>ReportingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
			<Visible>No</Visible>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>Tax1099Amount</Name>
			<ExtendedDataType>Tax1099Amount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>Tax1099StateAmount</Name>
			<ExtendedDataType>Tax1099StateAmount</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>TaxWithholdAmountOrigin_IN</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>TaxWithholdStatus_IN</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>TCSAmount_IN</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>TDSAmount_IN</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ThirdPartyBankAccountId</Name>
			<ExtendedDataType>BankThirdPartyAccountId</ExtendedDataType>
			<GroupPrompt>@SYS8079</GroupPrompt>
			<Label>@SYS88299</Label>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>UseCashDisc</Name>
			<EnumType>UseCashDisc</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>DataArea</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>TaxDistribution</Name>
			<EnumType>PaymSchedTaxDistribution</EnumType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>