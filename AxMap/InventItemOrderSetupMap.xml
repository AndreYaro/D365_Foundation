<?xml version="1.0" encoding="utf-8"?>
<AxMap xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemOrderSetupMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventItemOrderSetupMap extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventItemOrderSetupMapInterface</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the <c>InventItemOrderSetupMapInterface</c> object associated with the current table record.
    /// </summary>
    /// <returns>
    ///     The <c>InventItemOrderSetupMapInterface</c> object.
    /// </returns>
    public InventItemOrderSetupMapInterface inventItemOrderSetupMapInterface()
    {
        return InventItemOrderSetupMapInterface::createInstance(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calendarDays</Name>
				<Source><![CDATA[
    CalendarDays calendarDays()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().calendarDays();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventLocationId</Name>
				<Source><![CDATA[
    boolean checkInventLocationId(
        InventLocationId    _inventLocationId,
        boolean             _mandatoryCheck     = true,
        boolean             _matchSiteCheck     = true,
        InventTable         _inventTable        = null) // set this parameter for better performance
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().checkInventLocationId(_inventLocationId, _mandatoryCheck, _matchSiteCheck, _inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkInventSiteId</Name>
				<Source><![CDATA[
    boolean checkInventSiteId(
        InventSiteId    _inventSiteId,
        boolean         _mandatoryCheck = true,
        InventTable     _inventTable    = null) // set this parameter for better performance
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().checkInventSiteId(_inventSiteId, _mandatoryCheck, _inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNotStopped</Name>
				<Source><![CDATA[
    boolean checkNotStopped(boolean _showSetupType = true)
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().checkNotStopped(_showSetupType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkValid</Name>
				<Source><![CDATA[
    boolean checkValid()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().checkValid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>highestQty</Name>
				<Source><![CDATA[
    QtyHighest highestQty()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().highestQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().inventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimDefault</Name>
				<Source><![CDATA[
    InventDim inventDimDefault()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().inventDimDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLocationId</Name>
				<Source><![CDATA[
    InventLocationId inventLocationId(
        InventLocationId    _inventLocationId   = '',
        InventTable         _inventTable        = null, // set this parameter for better performance
        InventSiteId        _inventSiteIdParent = '')
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().inventLocationId(_inventLocationId, _inventTable, _inventSiteIdParent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteId</Name>
				<Source><![CDATA[
    InventSiteId inventSiteId(
        InventSiteId    _inventSiteId   = '',
        InventTable     _inventTable    = null) // set this parameter for better performance
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().inventSiteId(_inventSiteId, _inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    InventTable inventTable(boolean _forUpdate = false)
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().inventTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    display ItemNameDisplay itemName()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>leadTime</Name>
				<Source><![CDATA[
    LeadTimeDelivery leadTime()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().leadTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lowestQty</Name>
				<Source><![CDATA[
    QtyLowest lowestQty()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().lowestQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>multipleQty</Name>
				<Source><![CDATA[
    QtyMultiples multipleQty()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().multipleQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    void setInventLocationId(InventLocationId _inventLocationId)
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().setInventLocationId(_inventLocationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    void setInventSiteId(InventSiteId _inventSiteId)
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().setInventSiteId(_inventSiteId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupDefaultMap</Name>
				<Source><![CDATA[
    InventItemOrderSetupMap setupDefaultMap()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().setupDefaultMap();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupType</Name>
				<Source><![CDATA[
    InventItemOrderSetupType setupType()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().setupType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardQty</Name>
				<Source><![CDATA[
    QtyStandard standardQty()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().standardQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>explicitStandardQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the standard quantity set on this or the given instance or parent explicitly.
    /// </summary>
    /// <returns>A standard inventory order quantity.</returns>
    public QtyStandard explicitStandardQty()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().explicitStandardQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>stopped</Name>
				<Source><![CDATA[
    ItemStopped stopped()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().stopped();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldInventDimIdDefault</Name>
				<Source><![CDATA[
    public boolean validateFieldInventDimIdDefault()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().validateFieldInventDimIdDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldLeadTime</Name>
				<Source><![CDATA[
    public boolean validateFieldLeadTime()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().validateFieldLeadTime();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUniqueness</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the given default order setting record is unique.
    /// </summary>
    /// <returns>True if the record is unique, otherwise false.</returns>
    public boolean validateUniqueness()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().validateUniqueness();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = super();

        if (ret)
        {
            ret = this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().validateDelete();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().validateWrite(ret);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearNotUsedPrimKeyInventDimensions</Name>
				<Source><![CDATA[
    [SysObsolete('This method should not be used, instead use the new method clearNotUsedPrimKeyInventDimensionsItem that takes product dimensions into account', false, 31\01\2016)]
    public static InventDimId clearNotUsedPrimKeyInventDimensions(InventDimId _inventDimId)
    {
        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearNotUsedPrimKeyInventDimensionsItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the dimensions so only valid search dimensions for the item are left.
    /// </summary>
    /// <param name = "_itemId">The item to clear the dimensions for.</param>
    /// <param name = "_inventDimId">The dimension.</param>
    /// <returns>A cleaned up dimension record.</returns>
    public static InventDim clearNotUsedPrimKeyInventDimensionsItem(ItemId _itemId, InventDimId _inventDimId)
    {
        return InventItemOrderSetupMapInterface::clearNotUsedPrimKeyInventDimensionsItem(_itemId, _inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventItemOrderSetupMap find(
        ItemId                      _itemId,
        InventItemOrderSetupType    _setupType,
        InventDimId                 _inventDimId,
        boolean                     _forUpdate      = false,
        InventTable                 _inventTable    = null) // set this parameter for better performance
    {
        return InventItemOrderSetupMapInterface::find(_itemId, _setupType, _inventDimId, _forUpdate, _inventTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCustomMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calling delegate for finding the appropriate <c>InventItemOrderSetupMap</c>.
    /// </summary>
    /// <param name = "_itemId">An <c>ItemId</c> value.</param>
    /// <param name = "_setupType">A <c>InventItemOrderSetupType</c> value.</param>
    /// <param name = "_inventDimId">An <c>InventDimId</c> value.</param>
    /// <param name = "_forUpdate">A boolean value.</param>
    /// <param name = "_eventHandlerResult">An <c>EventHandlerResult</c> to provide the result.</param>
    internal static void findCustomMap(
        ItemId                      _itemId,
        InventItemOrderSetupType    _setupType,
        InventDimId                 _inventDimId,
        boolean                     _forUpdate,
        EventHandlerResult          _eventHandlerResult)
    {
        InventItemOrderSetupMap::findDelegate(_itemId, _setupType, _inventDimId, _forUpdate, _eventHandlerResult);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for finding the appropriate <c>InventItemOrderSetupMap</c>.
    /// </summary>
    /// <param name = "_itemId">An <c>ItemId</c> value.</param>
    /// <param name = "_setupType">A <c>InventItemOrderSetupType</c> value.</param>
    /// <param name = "_inventDimId">An <c>InventDimId</c> value.</param>
    /// <param name = "_forUpdate">A boolean value.</param>
    /// <param name = "_eventHandlerResult">An <c>EventHandlerResult</c> to provide the result.</param>
    static delegate void findDelegate(
        ItemId                      _itemId,
        InventItemOrderSetupType    _setupType,
        InventDimId                 _inventDimId,
        boolean                     _forUpdate,
        EventHandlerResult          _eventHandlerResult)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the order settings for an item matching search criteria.
    /// </summary>
    /// <param name="_record">
    ///    An empty record of the type of settings to find (e.g. InventItemPurchSetup).
    /// </param>
    /// <param name="_itemId">
    ///    The id of the item for which to find the settings.
    /// </param>
    /// <param name="_inventDimId">
    ///    The inventory dimension ID for the search criteria.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    ///    The order settings of an item.
    /// </returns>
    public static InventItemOrderSetupMap findRecord(
        InventItemOrderSetupMap _record,
        ItemId                  _itemId,
        InventDimId             _inventDimId,
        boolean                 _forUpdate = false)
    {
        return InventItemOrderSetupMapInterface::findRecord(_record, _itemId, _inventDimId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDefault</Name>
				<Source><![CDATA[
    static InventItemOrderSetupMap findDefault(
        ItemId                      _itemId,
        InventItemOrderSetupType    _setupType,
        boolean                     _forUpdate  = false)
    {
        return InventItemOrderSetupMapInterface::findDefault(_itemId,
                                             _setupType,
                                             _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ID of the default warehouse for the specified item in the specified process.
    /// </summary>
    /// <param name="_itemId">The item number.</param>
    /// <param name="_setupType">The process in which the default warehouse is applicable.</param>
    /// <returns>The ID of the default warehouse for the specified item in the specified process.</returns>
    public static InventLocationId defaultInventLocationId(ItemId _itemId, InventItemOrderSetupType _setupType)
    {
        return InventItemOrderSetupMapInterface::defaultInventLocationId(_itemId, _setupType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default warehouse for the specified item in the specified process.
    /// </summary>
    /// <param name="_itemId">The item number.</param>
    /// <param name="_setupType">The process in which the default warehouse is applicable.</param>
    /// <returns>The default warehouse for the specified item in the specified process.</returns>
    public static InventLocation defaultInventLocation(ItemId _itemId, InventItemOrderSetupType _setupType)
    {
        return InventItemOrderSetupMapInterface::defaultInventLocation(_itemId, _setupType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>module2SetupType</Name>
				<Source><![CDATA[
    public static InventItemOrderSetupType module2SetupType(ModuleInventPurchSales _moduleType)
    {
        return InventItemOrderSetupMapInterface::module2SetupType(_moduleType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setup2ModuleType</Name>
				<Source><![CDATA[
    public static ModuleInventPurchSales setup2ModuleType(InventItemOrderSetupType _setupType)
    {
        return InventItemOrderSetupMapInterface::setup2ModuleType(_setupType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setup2ModuleTypeDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for finding the <c>ModuleInventPurchSales</c> for the given <c>InventItemOrderSetupType</c> value.
    /// </summary>
    /// <param name = "_setupType">A <c>InventItemOrderSetupType</c> value.</param>
    /// <param name = "_eventHandlerResult">An <c>EventHandlerResult</c> to provide the result.</param>
    static delegate void setup2ModuleTypeDelegate(
        InventItemOrderSetupType    _setupType,
        EventHandlerResult          _eventHandlerResult)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>customSetup2ModuleTypeDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for finding the <c>ModuleInventPurchSales</c> for the given <c>InventItemOrderSetupType</c> value.
    /// </summary>
    /// <param name = "_setupType">A <c>InventItemOrderSetupType</c> value.</param>
    /// <param name = "_eventHandlerResult">An <c>EventHandlerResult</c> to provide the result.</param>
    internal static void customSetup2ModuleTypeDelegate(
        InventItemOrderSetupType    _setupType,
        EventHandlerResult          _eventHandlerResult)
    {
        InventItemOrderSetupMap::setup2ModuleTypeDelegate(_setupType, _eventHandlerResult);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().modifiedFieldValue(_fieldName, _arrayIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventDimDefaultFromDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>InventDimIdDefault</c> field based on the value of the default record.
    /// </summary>
    /// <param name = "_inventDim">The <c>InventDim</c> of the current record.</param>
    public void initInventDimDefaultFromDefault(InventDim _inventDim)
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().initInventDimDefaultFromDefault(_inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>productDimSpecificRecordsExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if any product dimension specific records exist in the table.
    /// </summary>
    /// <param name = "_recordType">An empty record buffer of the table to check.</param>
    /// <param name = "_excludeRecId">A RecId of any record that should be excluded from the result.</param>
    /// <returns>true if any product dimension specific records exist in the table; otherwise, false.</returns>
    public static boolean productDimSpecificRecordsExist(InventItemOrderSetupMap _recordType, RecId _excludeRecId)
    {
        return InventItemOrderSetupMapInterface::productDimSpecificRecordsExist(_recordType, _excludeRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditDefaultDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the default site/warehouse can be edited by the user.
    /// </summary>
    /// <returns>true if the default site/warehouse is allowed to be edited.</returns>
    public boolean allowEditDefaultDim()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().allowEditDefaultDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSettingsDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if this record is the default record.
    /// </summary>
    /// <returns>true if this record is the default record.</returns>
    public boolean isSettingsDefault()
    {
        return this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().isSettingsDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sequence number of the current record.
    /// </summary>
    /// <param name = "_newSequence">The new sequence number.</param>
    public void updateSequence(InventItemSetupSequence _newSequence)
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().updateSequence(_newSequence);
    }

]]></Source>
			</Method>
			<Method>
				<Name>propagateDefaultSiteWarehouseChanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Propagates changes of default site/warehouse from the default record to the dimension specific records.
    /// </summary>
    public void propagateDefaultSiteWarehouseChanges()
    {
        this.InventItemOrderSetupMap::inventItemOrderSetupMapInterface().propagateDefaultSiteWarehouseChanges();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS325339</DeveloperDocumentation>
	<Label>@SYS110987</Label>
	<FieldGroups />
	<Fields>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>CalendarDays</Name>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>HighestQty</Name>
			<ExtendedDataType>QtyHighest</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimId</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>InventDimIdDefault</Name>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Label>@SYS35094</Label>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt">
			<Name>LeadTime</Name>
			<ExtendedDataType>LeadTimeDelivery</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>LowestQty</Name>
			<ExtendedDataType>QtyLowest</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>MandatoryInventLocation</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS22408</Label>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>MandatoryInventSite</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS110751</Label>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>MultipleQty</Name>
			<ExtendedDataType>QtyMultiples</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Override</Name>
			<ExtendedDataType>Override</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldReal">
			<Name>StandardQty</Name>
			<ExtendedDataType>QtyStandard</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>Stopped</Name>
			<ExtendedDataType>ItemStopped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldInt64">
			<Name>Sequence</Name>
			<ExtendedDataType>InventItemSetupSequence</ExtendedDataType>
		</AxMapBaseField>
		<AxMapBaseField xmlns=""
			i:type="AxMapFieldEnum">
			<Name>OverrideDefaultStorageDimensions</Name>
			<ExtendedDataType>InventItemOverrideDefaultStorageDimensions</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxMapBaseField>
	</Fields>
	<Mappings />
</AxMap>