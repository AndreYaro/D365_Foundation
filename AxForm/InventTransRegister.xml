<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventTransRegister</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/// <summary>
///     ATTENTION: If doing visual design changes on this form ensure the same visual changes are done on TradeNonstockedRegister form.
/// </summary>
[Form]
public class InventTransRegister extends FormRun
{
    [FormObservable]
    InventMovement                  movement;
    [FormObservable]
    InventTransWMS_Register         inventTransWMS_Register;
    InventDimCtrl_Frm_Mov_InventWMS inventDimFormSetup;

    QueryBuildRange                 rangeChildType;
    QueryBuildRange                 rangeChildRefId;

    boolean                         salesReturnMode;
    SalesLine                       salesReturnLine;

    boolean                         tmpTransCreated;
    PdsCWFormCtrl_InventTransRegister   cwFormCtrl;
    boolean                         pdsUseVendUpdated;
    PdsUpdBatchDate                 pdsBlankDateQuest;
    boolean                         pdsUpdBlankBatchDate;

    Common                          callerRecord;
    boolean                         attribValRequired;
    PdsBatchAttrib                  pdsBatchAttrib;

    #ISOCountryRegionCodes
    boolean                         countryRegion_RU;

}
]]></Source>
			</Method>
			<Method>
				<Name>tmpInventTransWMSSetEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate raised after <c>TmpInventTransWMS</c> data source is set to enabled.
    /// </summary>
    /// <param name = "_fromCreate">Indicates whether the data source is set to enabled during creation process.</param>
    delegate void tmpInventTransWMSSetEnabled(boolean _fromCreate)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    public void activate(boolean _active)
    {
        if (#PdsShelfEnabled)
        {
            element.pdsShow();
        }

        super(_active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        if (tmpinventTransWMS.RecId)
        {
            if (Box::yesNo("@SCM:RegistrationNotCompleted",DialogButton::Yes) != DialogButton::Yes)
            {
                return false;
            }
        }
        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doRefresh</Name>
				<Source><![CDATA[
    void doRefresh()
    {
        InventTrans           pmfInventTrans;

        pmfInventTrans = inventTrans.data();
        inventTrans_ds.research();
        inventTrans_ds.positionToRecord(pmfInventTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearch</Name>
				<Source><![CDATA[
    public void doResearch(boolean _resetTmpInventTransWMS = false)
    {
        InventTrans findInventTrans = inventTrans.data();

        inventTrans_ds.research();
        inventTrans_ds.positionToRecord(findInventTrans);

        tmpInventTransWMS_dS.setEnabled(false);

        if (_resetTmpInventTransWMS)
        {
            if (inventTransWMS_Register)
            {
                inventTransWMS_Register.makeTableEmpty();
            }

            tmpInventTransWMS_ds.research();
        }

        ctrlTransactions.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (#PdsCatchWeightEnabled)
        {
            cwFormCtrl = PdsCWFormCtrl_InventTransRegister::constructFromForm(element);
        }
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        super();

        if (!element.args().dataset())
        {
            throw error(strFmt("@SYS22678",element.name()));
        }

        callerRecord = element.args().record();

        this.initSalesReturnMode();
        this.setCatchWeightVisibility();

        // Display warning message if selected disposition code on return order has any charge configured.
        if (element.args().callerName() == formStr(ReturnTable))
        {
            SalesLine salesLine = callerRecord as SalesLine;

            if (salesLine && salesLine.ReturnDispositionCodeId != "" && MarkupAutoLine::isReturnCodeCharged(salesLine.ReturnDispositionCodeId))
            {
                warning ("@Retail:DispositionCodeChargesWarning");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCatchWeightVisibility</Name>
				<Source><![CDATA[
    private void setCatchWeightVisibility()
    {
        InventTable     item            = InventTable::find(this.itemId());
        EcoResProduct   product         = EcoResProduct::find(item.Product);
        boolean         isCatchWeight   = product.PdsCWProduct;

        InventTrans_PdsCWQty.visible(isCatchWeight);
        PdsCWUnitId.visible(isCatchWeight);
        PdsCWOrdered.visible(isCatchWeight);
        pdsCWRegisterRemain.visible(isCatchWeight);
        TmpInventTransWMS_PdsCWQty.visible(isCatchWeight);
        TmpInventTransWMS_PdsCWUnitId.visible(isCatchWeight);
        CatchWeightUnitId.visible(isCatchWeight);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSalesReturnMode</Name>
				<Source><![CDATA[
    private void initSalesReturnMode()
    {
        if (element.args() && element.args().dataset() == tableNum(SalesLine))
        {
            salesReturnLine = element.args().record() as SalesLine;

            if (salesReturnLine.InventTransIdReturn)
            {
                salesReturnMode = true;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransWMS_Register</Name>
				<Source><![CDATA[
    public InventTransWMS_Register inventTransWMS_Register(boolean _forceNew = false)
    {
        if (!inventTransWMS_Register || _forceNew)
        {
            inventTransWMS_Register = InventTransWMS_Register::newStandard(tmpInventTransWMS);
        }

        return inventTransWMS_Register;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId itemId()
    {
        return this.movement().itemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>movement</Name>
				<Source><![CDATA[
    public InventMovement movement()
    {
        if (!movement)
        {
            movement = InventTransWMS_Register::inventMovement(element.args().record());
        }

        return movement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsFieldEnabled</Name>
				<Source><![CDATA[
    public void pdsFieldEnabled()
    {
        FormDataObject  pdsBaseValueObj;
        InventBatch     inventBatch;
        InventTable     inventTable;
        boolean         allowEdit;

        if (#PDSPotencyEnabled)
        {
            pdsBaseValueObj = tmpInventTransWMS_ds.object(fieldNum(TmpInventTransWMS, PDSBaseValue));
            inventBatch     = InventBatch::find(TmpInventDim.inventBatchId, InventTrans.ItemId);
            inventTable     = InventTrans.inventTable();
            allowEdit       = inventTable.PDSBaseAttributeId
                                && ((InventTable.PDSPotencyAttribRecording == PDSPotencyAttribRecordingEnum::PurchProdReceipt)
                                && (!tmpInventDim.inventBatchId       || (!PDSBatchAttributes::exist(InventTrans.ItemId, TmpInventDim.inventBatchId, inventBatch.pdsBaseAttribute()))));

            pdsBaseValueObj.allowEdit(allowEdit);
            pdsBaseValueObj.mandatory(allowedit);
            attribValRequired = allowEdit;

            if (inventTable.pdsBaseAttributeId)
            {
                pdsBatchAttrib = PdsBatchAttrib::find(inventTable.pdsBaseAttributeId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsRAFUpdate</Name>
				<Source><![CDATA[
    public void pdsRAFUpdate()
    {
        ProdParmReportFinished  caller;
        InventDimParm           inventDimParm;

        if (!tmpInventTransWMS.pdsBaseValue
            || element.args().dataset() != tableNum(ProdParmReportFinished))
        {
            return;
        }

        inventDimParm.initFromInventDim(inventTrans.inventDim());

        if (inventDimParm.InventBatchIdFlag == NoYes::No)
        {
            return ;
        }

        caller              = element.args().record();
        caller.pdsBaseValue = tmpInventTransWMS.pdsBaseValue;
        caller.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsShow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if PdsDispositionCode and PdsDispositionStatus are visible based on InventBatchId status.
    /// </summary>
    void pdsShow()
    {
        if (inventoryDimensionsGrid_inventBatchId.visible()==true)
        {
            pdsDispositionCode.visible(true);
            pdsDispositionStatus.visible(true);
        }
        else
        {
            pdsDispositionCode.visible(false);
            pdsDispositionStatus.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsVendBatchInfoUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows for updating of the vendor batch information via <c>VendBatchEditLines</c> form.
    /// </summary>
    /// <remarks>
    /// Determines if the item dimensions include the <c>InventBatchId</c>. If so,
    /// and the transaction is a purchase line, then calls the form to update the vendor
    /// batch information for all purchase line transactions.
    /// </remarks>
    public void pdsVendBatchInfoUpdate()
    {
        PurchLine       purchLine;
        InventTrans     lclInventTrans;
        InventTransOrigin inventTransOrigin = InventTransOrigin::find(inventTrans.InventTransOrigin);

        if (inventTrans.inventTable().modelGroup().PdsReqVendBatchDetail
            && inventTransOrigin.ReferenceCategory == InventTransType::Purch
            && InventDimGroupSetup::newItemId(inventTrans.ItemId).isDimensionActive(fieldNum(InventDim,InventBatchId)))
        {
            purchLine = movement.buffer();

            select firstonly RecId from lclInventTrans
                where  lclInventTrans.StatusReceipt     == StatusReceipt::Registered
                    && lclInventTrans.StatusIssue       == StatusIssue::None
                    && lclInventTrans.InventTransOrigin == inventTransOrigin.RecId;

            if (lclInventTrans.RecId)
            {
                Args args = new Args();
                args.record(movement.buffer());

                FormRun formRun = new MenuFunction(menuitemDisplayStr(PdsVendBatchEditLines), MenuItemType::Display).create(args);
                formRun.run();
                formRun.wait();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        ctrlTransactions.setFocus();

        tmpInventTransWMS_ds.setEnabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(InventDimFormDesignUpdate _mode)
    {
        boolean resize;

        if (!movement)
        {
            return;
        }

        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:
                inventDimFormSetup  = InventDimCtrl_Frm_Mov_InventWMS::newFromFormMovement(element,movement);
                resize = true;
                // do continue
            case InventDimFormDesignUpdate::Active:
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl_Frm_Mov_InventWMS::newFromFormMovement(element,movement);
                }
                this.allowEditingInventoryOwner();
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(),movement,inventTrans);
                inventDimFormSetup.formSetControls(true,resize);
                break;
            default:
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditingInventoryOwner</Name>
				<Source><![CDATA[
    private void allowEditingInventoryOwner()
    {
        // Registration form is shared between different processes. Check the inventory movement to determine
        // if inventory owner is supposed to be editable in the specific process.
        InventDimParm canBeEnabledInventDimParm = inventDimFormSetup.parmDimParmCanBeEnabled();
        if (inventTrans && !inventTrans.inventMovement().hasMandatoryInventoryOwner())
        {
            canBeEnabledInventDimParm.InventOwnerIdFlag_RU = true;
        }

        inventDimFormSetup.parmDimParmCanBeEnabled(canBeEnabledInventDimParm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventDimId_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates inventDimId in inventTrans setting inventProfileId_RU field
    ///     from reference kanban
    /// </summary>
    /// <param name="_inventTrans">
    ///     InventTrans record for update
    /// </param>
    public void updateInventDimId_RU(InventTrans _inventTrans)
    {
        InventDim                       transInventDim;
        InventTransOrigin               inventTransOrigin = InventTransOrigin::find(_inventTrans.InventTransOrigin);
        Kanban                          kanban            = Kanban::findKanbanId(inventTransOrigin.ReferenceId);

        if (kanban)
        {
            transInventDim                      = _inventTrans.inventDim();
            transInventDim.InventProfileId_RU   = kanban.inventDim().InventProfileId_RU;
            transInventDim                      = InventDim::findOrCreate(transInventDim);
            _inventTrans.InventDimId            = transInventDim.InventDimId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoTmpCreate</Name>
				<Source><![CDATA[
    public void autoTmpCreate(InventTrans _inventTrans)
    {
        element.inventTransWMS_Register();

        //<GEERU>
        if (countryRegion_RU)
        {
            element.updateInventDimId_RU(_inventTrans);
        }
        //</GEERU>

        inventTransWMS_Register.createFromInventTrans(_inventTrans, _inventTrans.inventDim());

        tmpInventTransWMS_ds.executeQuery();

        inventTransOriginMovement_DS.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        if (callerRecord && FormDataUtil::getFormDataSource(callerRecord))
        {
            Common callerRecordBuf;
            callerRecordBuf.RecId = callerRecord.RecId;

            FormObjectSet callerDS = FormDataUtil::getFormDataSource(callerRecord);
            callerDS.research(true);
            callerDS.positionToRecord(callerRecordBuf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckExpiryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if expiry date must be checked.
    /// </summary>
    /// <returns>true if expiry date must be checked; otherwise, false.</returns>
    protected boolean mustCheckExpiryDate()
    {
        return #PdsShelfEnabled;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDim</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>inventBatchId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret && element.mustCheckExpiryDate())
                {
                    ret = InventBatch::pdsCheckExpiryDate(
                                        inventdim.InventBatchId,
                                        inventTrans.ItemId,
                                        inventTrans.DateExpected);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                InventBatch             inventBatch;
                PdsStatus               pdsCheck;
                PdsDispositionMaster    pdsDispositionMaster;

                super();

                if (#PdsShelfEnabled)
                {
                    if (inventDim.InventBatchId)
                    {
                        inventBatch = InventBatch::find(inventDim.InventBatchId, inventTrans.ItemId);
                        pdsDispositionMaster = PdsDispositionMaster::find(inventBatch.PdsDispositionCode);
                        pdsCheck = pdsDispositionMaster.Status;
                    }
                    else
                    {
                        pdsCheck = PdsStatus::Available;
                    }
                }

                ctrlInventBatch.enabled(inventDim.InventBatchId != '');
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>inventSerialId</DataField>
						<Methods>
							<Method>
								<Name>resolveAmbiguousReference</Name>
								<Source><![CDATA[
            public str resolveAmbiguousReference(FormControl _formControl)
            {
                if (InventSerialSkipResolveAmbiguousReferenceFlight::instance().isEnabled())
                {
                    FormStringControl formStringControl = _formControl as FormStringControl;
                    if (formStringControl)
                    {
                        return formStringControl.text();
                    }
                }

                return super(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventTrans</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (element.movement().transChildType())
            {
                rangeChildType.value(queryValue(element.movement().transChildType()));
                rangeChildRefId.value(queryValue(element.movement().transChildRefId()));
            }
            else
            {
                rangeChildType.value(queryValue(InventTransChildType::None));
                rangeChildRefId.value(queryValue(''));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbds;

            super();

            qbds = this.query().dataSourceTable(tableNum(InventTrans));
            qbds.addRange(fieldNum(InventTrans,StatusIssue)).value(SysQuery::value(StatusIssue::None));
            qbds.addRange(fieldNum(InventTrans,StatusReceipt)).value(SysQuery::range(StatusReceipt::Registered,StatusReceipt::Ordered));

            qbds.addOrderByField(fieldNum(InventTrans, StatusReceipt), SortOrder::Descending);

            rangeChildType  = qbds.addRange(fieldNum(InventTrans,TransChildType));
            rangeChildRefId = qbds.addRange(fieldNum(InventTrans,TransChildRefId));

            if (cwFormCtrl)
            {
                cwFormCtrl.itemDataSourceInitPost(inventTrans);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesign(InventDimFormDesignUpdate::Active);
            createTransSerialNumber.enabled(inventTransWMS_Register && inventTransWMS_Register.canUpdateTransSerialId(inventTrans, movement, inventTransOriginMovement) ? true : false);
            interCompany.enabled(inventTransWMS_Register && inventTransOriginMovement.interCompanyOrder());
            if (!InventTable::find(movement.itemId()).isItemBatchActivated()
                || inventDim.InventBatchId == '')
            {
                ctrlInventBatch.enabled(false);
            }
            else
            {
                ctrlInventBatch.enabled(inventTrans.RecId);
            }
            if (cwFormCtrl)
            {
                cwFormCtrl.itemDataSourceActivePost();
            }
            ctrlSplitButton.enabled(!PdsGlobal::pdsIsCWItem(inventTrans.ItemId));

            element.pdsFieldEnabled();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TmpInventTransWMS</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (cwFormCtrl)
            {
                cwFormCtrl.dataSourceInitPost(tmpInventTransWMS);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            InventDim   inventDimLocal;
            boolean     result;

            if (!inventTransWMS_Register)
            {
                return;
            }

            if (cwFormCtrl)
            {
                cwFormCtrl.dataSourceWritePre();
            }

            inventDimLocal                =  InventDim::findOrCreate(tmpInventDim);
            tmpInventTransWMS.InventDimId = inventDimLocal.InventDimId;

            result = inventTransWMS_Register.writeTmpInventTransWMS(tmpInventTransWMS,inventTrans,inventDimLocal);

            tmpInventDim.data(inventDimLocal);
            tmpInventDim_ds.write();

            if (result)
            {
                tmpInventTransWMS_ds.reread();

                inventTrans_ds.research(true);

                inventTransOriginMovement_DS.research();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        boolean validateWrite()
        {
            boolean             ret = true;
            InventDimParm       inventDimParm;
            InventDim           inventDimRegistered;
            InventTransIdSum    inventTransIdSum;
            InventTable          inventTable;

            if (tmpInventDim.InventBatchId != '')
            {
                if (InventBatch::pdsCheckNullBatchDate(
                        tmpInventDim.InventBatchId,
                        inventTrans.ItemId)
                    && tmpInventTransWMS.PdsUpdateBatchDate == PdsUpdateBatchDate::None
                    && !TmpInventTransWMS::pdsBatchExist(tmpInventTransWMS))
                {
                    if (Box::yesNo(strFmt(
                                    "@PRO2364",
                                    tmpInventDim.InventBatchId),
                                    DialogButton::Yes,
                                    "@PRO2365") == DialogButton::Yes)
                    {
                        if (!pdsUpdBlankBatchDate)
                        {
                            pdsUpdBlankBatchDate = true;
                        }

                        tmpInventTransWMS.PdsUpdateBatchDate
                                = PdsUpdateBatchDate::Update;
                    }
                    else
                    {
                        tmpInventTransWMS.PdsUpdateBatchDate
                            = PdsUpdateBatchDate::NoUpdate;
                    }
                }
            }

            if (ret && inventTrans.StatusReceipt == StatusReceipt::Registered && PdsGlobal::pdsIsCWItem(tmpInventTransWMS.ItemId))
            {
                if (ret)
                {
                    ret = PdsCatchWeight::validateInventQty(tmpInventTransWMS.ItemId,tmpInventTransWMS.InventQty, tmpInventTransWMS.PdsCWQty);
                }

                if (ret)
                {
                    inventDimRegistered = InventDim::find(tmpInventTransWMS.InventDimId);
                    inventDimParm.initFromInventDim(inventDimRegistered);
                    inventTransIdSum = InventTransIdSum::newTransOriginIdDimension(tmpInventTransWMS.InventTransOrigin, inventDimRegistered, inventDimParm);
                    ret = PdsCatchWeight::validateInventQty(tmpInventTransWMS.ItemId,
                                                            inventTransIdSum.registered() + tmpInventTransWMS.InventQty,
                                                            inventTransIdSum.pdsCWRegistered() + tmpInventTransWMS.PdsCWQty);
                }
            }

            ret = ret && super();

            if (ret && InventTable::isPotencyItem(inventTrans.ItemId))
            {
                inventTable = inventTrans.inventTable();
                if (inventTable.pdsPotencyAttribRecording != PDSPotencyAttribRecordingEnum::Quality)
                {
                    if (!tmpInventTransWMS.pdsBaseValue)
                    {
                        ret = checkFailed("@PSC30");
                    }
                    tmpInventTransWMS_ds.setEnabled(false);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            TmpInventTransWMS   tmpInventTransWMSLocal;

            tmpInventTransWMSLocal.data(tmpInventTransWMS);

            super();

            if (inventTransWMS_Register)
            {
                inventTransWMS_Register.deleteTmp(tmpInventTransWMSLocal);
            }

            inventTrans_ds.research();

            inventTransOriginMovement_DS.research();

            tmpInventTransWMS_ds.setEnabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            if (inventTransWMS_Register)
            {
                inventTransWMS_Register.initFromInventTransInventTransOrigin(tmpInventTransWMS,inventTrans,inventTransOriginMovement);
            }

            //<GEERU>
            if (countryRegion_RU)
            {
                element.updateInventDimId_RU(inventTrans);
            }
            //</GEERU>
            tmpInventDim.data(InventDim::find(inventTrans.InventDimId));
            tmpInventDim_DS.refresh();

            tmpInventTransWMS_ds.setEnabled(true);

            inventTransOriginMovement_DS.research();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int  ret;

            ret = super();

            element.pdsFieldEnabled();

            tmpInventTransWMS_DS.setEnabled(!tmpInventTransWMS.RecId);
            tmpInventDim_DS.active();

            if (cwFormCtrl)
            {
                cwFormCtrl.dataSourceActivePost();
            }

            pdsBlankDateQuest = PdsUpdateBatchDate::None;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>setEnabled</Name>
						<Source><![CDATA[
        public void setEnabled(boolean _fromCreate)
        {
            boolean allowPost = true;

            if (attribValRequired)
            {
                allowPost = (tmpInventTransWMS.pdsBaseValue != '');
            }

            if (_fromCreate)
            {
                createTmpSerialNumber.enabled(inventTransWMS_Register && inventTransWMS_Register.canUpdateTmpSerialId(tmpInventTransWMS, movement, false, true));
                ctrlUpdateButton.enabled(allowPost);
            }
            else
            {
                createTmpSerialNumber.enabled(inventTransWMS_Register && inventTransWMS_Register.canUpdateTmpSerialId(tmpInventTransWMS, movement, false,false));
                ctrlUpdateButton.enabled(allowPost && tmpInventTransWMS.RecId);
            }
            ctrlDeleteButton.enabled(tmpInventTransWMS.RecId || tmpInventTransWMS.InventQty);

            element.tmpInventTransWMSSetEnabled(_fromCreate);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            tmpInventTransWMS.pdsInitFromInventTrans(inventTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InventQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                createTmpSerialNumber.enabled(inventTransWMS_Register && inventTransWMS_Register.canUpdateTmpSerialId(tmpInventTransWMS, movement) && ! tmpInventTransWMS.RecId ? true : false);

                if (cwFormCtrl)
                {
                    cwFormCtrl.fieldModified(fieldNum(TmpInventTransWMS,InventQty));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PDSBaseValue</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret && pdsBatchAttrib.RecId)
                {
                    ret =   pdsBatchAttrib.isValidAttribValueType(tmpInventTransWMS.pdsBaseValue)
                        &&  pdsBatchAttrib.checkAttribCriteria(tmpInventTransWMS.pdsBaseValue, tmpInventTransWMS.ItemId);
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                tmpInventTransWMS_ds.setEnabled(false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsCWQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Complete standard modification logic and then run logic form custom formControl.
            /// </summary>
            public void modified()
            {
                super();

                if (cwFormCtrl)
                {
                    cwFormCtrl.fieldModified(fieldNum(TmpInventTransWMS,PdsCWQty));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsVendBatchDate</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Validate that entered date is before System date.
            /// </summary>
            /// <returns>true if change valid; otherwise false</returns>
            public boolean validate()
            {
                boolean         ret;

                ret = super();

                if (ret && tmpInventTransWMS.PdsVendBatchDate > DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
                {
                    ret = checkFailed("@PRO2230");
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Complete standard modification logic and set PdsUseVendBatchDate.
            /// </summary>
            public void modified()
            {
                super();

                if (!(tmpInventTransWMS.PdsVendBatchDate
                        && InventDim::find(tmpInventTransWMS.InventDimId).InventBatchId))
                {
                    if (!pdsUseVendUpdated)
                    {
                        pdsUseVendUpdated = !pdsUseVendUpdated;

                        if (!tmpInventTransWMS.PdsUseVendBatchDate
                            && tmpInventTransWMS.PdsVendBatchDate != dateNull()
                            && Box::yesNo("@PRO2224",DialogButton::Yes,"@PRO2241")
                               == DialogButton::Yes)
                        {
                            tmpInventTransWMS.PdsUseVendBatchDate = true;
                        }
                        else if (tmpInventTransWMS.PdsUseVendBatchDate
                            && tmpInventTransWMS.PdsVendBatchDate == dateNull())
                        {
                            tmpInventTransWMS.PdsUseVendBatchDate = false;
                        }
                    }

                    pdsUseVendUpdated = !pdsUseVendUpdated;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TmpInventDim</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (inventTransOriginMovement.ReferenceCategory == InventTransType::TransferOrderReceive)
            {
                this.object(fieldNum(InventDim,InventLocationId)).allowEdit(false);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            tmpInventDim.data(InventDim::find(inventTrans.InventDimId));
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>inventBatchId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                InventBatch inventBatch;

                super();

                if (InventTable::isPotencyItem(InventTrans.ItemId))
                {
                    // First determine if the batch attributes exists. If it doesn't, then create one during posting with the Actual value that the user supplies; otherwise, use the Actual value
                    // associated with the batch attributes.
                    inventBatch = InventBatch::find(TmpInventDim.inventBatchId, InventTrans.ItemId);
                    if (PDSBatchAttributes::exist(InventTrans.ItemId, TmpInventDim.inventBatchId, inventBatch.pdsBaseAttribute()))
                    {
                        TmpInventTransWMS.PDSBaseValue = inventBatch.pdsBaseAttributeValue();
                    }
                    element.pdsFieldEnabled();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;

                if (salesReturnMode)
                {
                    ret = InventLookupReturn::validateInventBatchIdReturn(tmpInventDim.InventSerialId,
                                                                          tmpInventDim.InventBatchId,
                                                                          salesReturnLine.InventTransIdReturn,
                                                                          tmpInventTransWMS.ItemId);
                }

                ret = ret && super();

                if (ret && 
                    !salesReturnMode &&
                    element.mustCheckExpiryDate())
                {
                    ret = InventBatch::pdsCheckExpiryDate(
                                    tmpInventdim.InventBatchId,
                                    inventTrans.ItemId,
                                    element.movement().getExpiryCheckDate());
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveAmbiguousReference</Name>
								<Source><![CDATA[
            public str resolveAmbiguousReference(FormControl _formControl)
            {
                FormStringControl formStringControl = _formControl as FormStringControl;
                if (formStringControl)
                {
                    return formStringControl.text();
                }

                return super(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventGtdId_RU</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;

                if (salesReturnMode)
                {
                    ret = InventLookupReturn::validateInventGTDIdReturn(tmpInventDim.InventGtdId_RU,
                                                                        salesReturnLine.InventTransIdReturn,
                                                                        tmpInventTransWMS.ItemId);
                }

                ret = ret && super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventOwnerId_RU</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;

                if (salesReturnMode)
                {
                    ret = InventLookupReturn::validateInventOwnerIdReturn(tmpInventDim.InventOwnerId_RU,
                                                                          salesReturnLine.InventTransIdReturn,
                                                                          tmpInventTransWMS.ItemId);
                }

                ret = ret && super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>inventSerialId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;

                if (salesReturnMode)
                {
                    ret = InventLookupReturn::validateInventSerialIdReturn(tmpInventDim.InventSerialId,
                                                                           tmpInventDim.InventBatchId,
                                                                           salesReturnLine.InventTransIdReturn,
                                                                           tmpInventTransWMS.ItemId);
                }

                ret = ret && super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventTransOriginMovement</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            inventTransOriginMovement_DS.query().dataSourceTable(tableNum(InventTransOrigin)).clearDynalinks();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            movement = null;
            movement = element.movement();

            if (inventTransWMS_Register)
            {
                inventTransWMS_Register.makeTableEmpty();
            }
            element.inventTransWMS_Register(true);

            tmpInventTransWMS_DS.executeQuery();

            element.updateDesign(InventDimFormDesignUpdate::Init);
            createTransSerialNumber.enabled(inventTransWMS_Register && inventTransWMS_Register.canUpdateTransSerialId(inventTrans, movement, inventTransOriginMovement) ? true : false);
            interCompany.enabled(inventTransWMS_Register && inventTransOriginMovement.interCompanyOrder());
            super();

            //The form is closed if the inventTrans record does not exist.
            //This scenario could be invoked when scrolling through - to a non-inventoried purchase order line - on the purchase order form.
            if (!inventTransOriginMovement.RecId)
            {
                element.close();
            }
            if (#PdsShelfEnabled)
            {
                pdsResetDispositionStatus.enabled(InventTable::find(inventTransOriginMovement.ItemId).isItemBatchActivated());
            }

            if (cwFormCtrl)
            {
                cwFormCtrl.itemDataSourceActivePost();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>registerRemain</Name>
						<Source><![CDATA[
        public display InventQtyRegisterRemain registerRemain()
        {
            return inventTransWMS_Register ? (inventTransWMS_Register.registerRemain(movement)) : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>ordered</Name>
						<Source><![CDATA[
        public display InventQtyOrdered ordered()
        {
            return element.movement() ? element.movement().transIdSum().ordered() : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            InventTransferLine      inventTransferLine;
            InventTransferJourLine  inventTransferJourLine;
            QueryBuildDataSource    qbds;
            QueryBuildRange         qbr;

            qbds = inventTransOriginMovement_DS.query().dataSourceTable(tableNum(InventTransOrigin));
            qbr = SysQuery::findOrCreateRange(qbds, fieldNum(InventTransOrigin,RecId));

            switch (element.args().dataset())
            {
                case tableNum(InventTransferLine):
                    inventTransferLine = element.args().record() as InventTransferLine;
                    qbds.clearDynalinks();
                    qbr.value(queryValue(InventTransOriginTransferReceive::findInventTransOriginId(
                        inventTransferLine.DataAreaId,
                        inventTransferLine.TransferId,
                        inventTransferLine.LineNum)));
                    break;
                case tableNum(InventTransferJourLine):
                    inventTransferJourLine = element.args().record() as InventTransferJourLine;
                    qbds.clearDynalinks();
                    qbr.value(queryValue(InventTransOriginJournalTransReceipt::findInventTransOriginId(
                        inventTransferJourLine.DataAreaId,
                        inventTransferJourLine.TransferId,
                        inventTransferLine.LineNum)));
                    break;
                default:
                    InventTransFormHelper::formQueryPreExecute(
                        inventTransOriginMovement_DS,
                        inventTransExists_DS,
                        element.args());
                    break;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWOrdered</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the remaining ordered catch weight quantity
        /// </summary>
        /// <returns>Remaining Catch weight quantity</returns>
        display PdsCWOrdered pdsCWOrdered()
        {
            return movement ? movement.transIdSum().pdsCWOrdered() : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWRegisterRemain</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the remaining registered catch weight quantity
        /// </summary>
        /// <returns>Remaining Catch weight quantity</returns>
        display PdsCWRegisterRemain pdsCWRegisterRemain()
        {
            return inventTransWMS_Register ? (inventTransWMS_Register.registerRemainCW(element.movement())) : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>inventUnit</Name>
						<Source><![CDATA[
        display UnitIDInventory inventUnit()
        {
            return InventTableModule::find(InventTransOriginMovement.ItemId, ModuleInventPurchSales::Invent).UnitId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWUnitId</Name>
						<Source><![CDATA[
        public display PdsCWUnitId pdsCWUnitId()
        {
            return PdsCatchWeight::cwUnitId(InventTransOriginMovement.ItemId);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTransExists</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbds;

            super();

            inventTransExists_DS.query().dataSourceTable(tableNum(InventTrans)).clearDynalinks();

            InventTransFormHelper::formQueryAddDynalink(
                inventTransOriginMovement_DS,
                inventTransExists_DS,
                element.args());

            qbds = this.query().dataSourceTable(tableNum(InventTrans));
            qbds.addRange(fieldNum(InventTrans,StatusIssue)).value('0');

            if (element.args().dataset() == tableNum(InventQuarantineOrder))
            {
                qbds.addRange(fieldNum(InventTrans,StatusReceipt)).value(SysQuery::range(StatusReceipt::Registered,StatusReceipt::QuotationReceipt));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AddRegistrationLinesButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            InventTrans marked = inventTrans_ds.getFirst(1);

            if (marked)
            {
                do
                {
                    element.autoTmpCreate(marked);

                    marked = inventTrans_ds.getNext();
                }
                while (marked);
            }
            else
            {
                element.autoTmpCreate(inventTrans);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateTransSerialNumber</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (   inventTrans
                && inventTransWMS_Register
                && inventTransWMS_Register.updateTransSerialId(inventTrans, movement, inventTransOriginMovement))
            {
                inventDim_ds.reread();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InterCompanyBatchSerialNumbers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            switch (inventTransOriginMovement.ReferenceCategory)
            {
                case InventTransType::Sales:
                    TradeInterCompany::construct(InventTransOriginSalesLine::salesLine(inventTransOriginMovement.RecId)).formRun(formStr(InventTrans));
                    break;
                case InventTransType::Purch:
                    TradeInterCompany::construct(InventTransOriginPurchLine::purchLine(inventTransOriginMovement.RecId)).formRun(formStr(InventTrans));
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlUpdateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            PdsCWUpdateRegister pdsCWUpdateRegister;
            boolean isUpdateInventSucceeded;

            if (   InventTransOriginMovement.ReferenceCategory == InventTransType::Purch
                && PurchLine::findInventTransId(InventTransOriginMovement.InventTransId).SalesPurchLine::isEGAIS_RU())
            {
                throw error("@EGAIS:RegistrationOfTheEgaisAlcoholProductsMustBeImpleme");
            }
 
            if (inventTransWMS_Register)
            {
                if (!bufCmp(tmpInventTransWMS, tmpInventTransWMS.orig()))
                {
                    return; // record wasn't successfully saved
                }

                // There is a small window where the TmpInventTransWMS record is not saved when the Post all button is clicked. If the record is created either by the user clicking Add or
                // by checking the Auto-create box and the user immediately clicks on the Post all button, the record will not be saved as the record was not "touched" by the user.
                // Therefore, the validation that would have been invoked if the record was touched would have certainly failed if the PDSBaseValue field is set to mandatory and no value
                // was entered for it.
                if (!TmpInventTransWMS.PDSBaseValue
                    && TmpInventTransWMS_ds.object(fieldNum(TmpInventTransWMS, PDSBaseValue)).mandatory())
                {
                    // Invoke validation so as to display the mandatory field error.
                    TmpInventTransWMS_ds.validateWrite();

                    return;
                }

                if (pdsUpdBlankBatchDate)
                {
                    InventBatch::pdsUpdateNullBatchDateTrans(
                        tmpInventTransWMS,
                        element.itemId());
                }

                element.pdsRAFUpdate();

                isUpdateInventSucceeded = inventTransWMS_Register.updateInvent(element.args().record());

                if (isUpdateInventSucceeded)
                {
                    movement.transIdSum(true);
                    tmpInventTransWMS_DS.executeQuery();

                    element.doResearch();
                }
                else
                {
                    element.args().record().reread();
                }
            }

            super();

            if (isUpdateInventSucceeded && inventTransWMS_Register)
            {
                if (PdsGlobal::pdsIsCWItem(element.movement().itemId()))
                {
                    pdsCWUpdateRegister = PdsCWUpdateRegister::newBuffer(
                                                element.args().record(),
                                                element.movement());
                    if (pdsCWUpdateRegister)
                    {
                        pdsCWUpdateRegister.parmInventTransWMS(inventTransWMS_Register);
                        pdsCWUpdateRegister.updateRegister();
                    }
                }
            }

            if (movement.transType() == InventTransType::Purch)
            {
                element.pdsVendBatchInfoUpdate();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateTmpSerialNumber</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (inventTransWMS_Register)
            {
                inventTransWMS_Register.updateTmpSerialId(tmpInventTransWMS,movement);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlDeleteButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (inventTransWMS_Register)
            {
                if (inventTransWMS_Register.buttonDeleteTmp(tmpInventTransWMS))
                {
                    element.doResearch();
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTrans</Name>
			<Table>InventTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurAdjustment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPosted_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStdSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosedSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventDimTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimIdSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginDelivery_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkingRefInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PickingRouteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Storno_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpenSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPhysical</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventTransOriginMovement</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpInventTransWMS</Name>
			<Table>TmpInventTransWMS</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSBaseValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCountryOfOrigin1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCountryOfOrigin2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsUpdateBatchDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsUseVendBatchDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsUseVendBatchExp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendBatchDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<CounterField>LineNum</CounterField>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpInventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>TmpInventTransWMS</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransOriginMovement</Name>
			<Table>InventTransOrigin</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemInventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransExists</Name>
			<Table>InventTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurAdjustment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPosted_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStdSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosedSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventDimTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimIdSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginDelivery_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkingRefInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PickingRouteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Storno_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpenSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPhysical</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTransOriginMovement</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS2499</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Height xmlns="">400</Height>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionBar</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ReferenceGroup</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Top>0</Top>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>InventTransOriginMovement_ReferenceCategory</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_InventTransOriginMovement_ReferenceCategory</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ReferenceCategory</DataField>
						<DataSource>InventTransOriginMovement</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventTransOriginMovement_ReferenceId</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_InventTransOriginMovement_ReferenceId</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ReferenceId</DataField>
						<DataSource>InventTransOriginMovement</DataSource>
						<LookupButton>Never</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Ordered</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_Ordered</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>ordered</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RegisterRemain</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_RegisterRemain</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>registerRemain</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>UnitId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>inventUnit</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>PdsCWOrdered</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1946157054</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsCWOrdered</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>pdsCWRegisterRemain</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsCWRegisterRemain</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CatchWeightUnitId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsCWUnitId</DataMethod>
						<DataSource>InventTransOriginMovement</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TransactionsTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AddRegistrationLinesButton</Name>
														<NeededPermission>Delete</NeededPermission>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MultiSelect>Yes</MultiSelect>
														<Text>@SCM:AddRegisterLine</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>CreateTransSerialNumber</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS18245</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ctrlSplitButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<Enabled>No</Enabled>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>InventTrans</DataSource>
														<MenuItemName>InventTransSplit</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuButtonControl">
														<Name>InterCompany</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ConfigurationKey>TradeInterCompany</ConfigurationKey>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS94420</HelpText>
														<Type>MenuButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>InterCompanyBatchSerialNumbers</Name>
																<ConfigurationKey>TradeInterCompany</ConfigurationKey>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@SYS98952</HelpText>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<Text>@SYS98951</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>InterCompanyTransferInventDim</Name>
																<ConfigurationKey>TradeInterCompany</ConfigurationKey>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<DataSource>InventTrans</DataSource>
																<MenuItemName>InterCompanyTransferInventDim</MenuItemName>
																<MenuItemType>Action</MenuItemType>
															</AxFormControl>
														</Controls>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS74106</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PdsResetDispositionStatus</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>InventTrans</DataSource>
														<MenuItemName>PdsResetDispositionStatus</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ctrlInventBatch</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>2080374782</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>InventDim</DataSource>
														<MenuItemName>InventBatch</MenuItemName>
														<Text>@PDS1358</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ctrlTransactions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>InventTrans_StatusReceipt</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_InventTrans_StatusReceipt</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatusReceipt</DataField>
										<DataSource>InventTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensionsGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventBatchId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InventTrans_PdsCWQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1744830462</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsCWQty</DataField>
										<DataSource>InventTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PdsCWUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1767200083</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWUnitId</DataMethod>
										<DataSource>InventTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InventTrans_Qty</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_InventTrans_Qty</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>InventTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryUnitId</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>inventUnit</DataMethod>
										<DataSource>InventTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PdsDispositionCode</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2063597566</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsDispositionCode</DataMethod>
										<DataSource>InventTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PdsDispositionStatus</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsDispositionStatus</DataMethod>
										<DataSource>InventTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>InventTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS1084</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RegistrationsTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneRegisterNow</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTabRegisterNow</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>AddRemoveGroup</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<NeededPermission>Delete</NeededPermission>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@sys60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>TmpInventTransWMS</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>RegistrationActionsGroup</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ctrlUpdateButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS53761</HelpText>
														<NeededPermission>Update</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SCM:ConfirmRegistration</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>CreateTmpSerialNumber</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS400</HelpText>
														<NeededPermission>Update</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS18245</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ctrlDeleteButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS53772</HelpText>
														<NeededPermission>Update</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<SaveRecord>No</SaveRecord>
														<Text>@SCM:RemoveAll</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>TmpInventTransWMS</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Register</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PDSAttribute</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PDSAttribute_PDSBaseValue</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PDSBaseValue</DataField>
												<DataSource>TmpInventTransWMS</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>PDSAttribute</DataGroup>
										<DataSource>TmpInventTransWMS</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>TmpInventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>TmpInventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpInventTransWMS_PdsCWQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177277</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsCWQty</DataField>
										<DataSource>TmpInventTransWMS</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpInventTransWMS_PdsCWUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476395005</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWUnitId</DataMethod>
										<DataSource>TmpInventTransWMS</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpInventTransWMS_InventQty</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:InventTransRegister_TmpInventTransWMS_InventQty</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventQty</DataField>
										<DataSource>TmpInventTransWMS</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpInventTransWMS_UnitId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitId</DataField>
										<DataSource>TmpInventTransWMS</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TmpInventTransWMS</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:RegistrationLines</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>