<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>smmBusRelStatistics</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class smmBusRelStatistics extends FormRun
{
    const str blank = '';
    const str whiteSpace = ' ';

    smmChartController              chartController;

    // Entity
    CustTable                       custTable;
    VendTable                       vendTable;
    smmBusRelTable                  smmBusRelTable;
    DirPartyRecId                   partyRecId;

    smmUpdateBusRelStatistics       updateBusRelStatistics;
    smmBusRelRevenue                smmBusRelRevenue;

    smmPeriodFrom                   curFromDate;
    smmPeriodTo                     curToDate;
    smmPeriodFrom                   prevFromDate;
    smmPeriodTo                     prevToDate;

    boolean                         getDatesFromUser;

    Amount                          curRevenue;
    Amount                          prevRevenue;

}
]]></Source>
			</Method>
			<Method>
				<Name>getPeriodsFromUser</Name>
				<Source><![CDATA[
    boolean getPeriodsFromUser()
    {
        if (!getDatesFromUser && updateBusRelStatistics)
        {
            // User has already supplied dates
            return true;
        }

        updateBusRelStatistics = new smmUpdateBusRelStatistics();
        updateBusRelStatistics.parmParty(partyRecId);

        if (updateBusRelStatistics.prompt())
        {
            curFromDate         = updateBusRelStatistics.parmCurFromDate();
            curToDate           = updateBusRelStatistics.parmCurToDate();

            prevFromDate        = updateBusRelStatistics.parmPrevFromDate();
            prevToDate          = updateBusRelStatistics.parmPrevToDate();

            getDatesFromUser    = false;

            return true;
        }

        // User canceled prompt
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        const str captionSeperator = ' - ';

        super();

        // Validate period is set in parameters
        smmParametersTable smmParametersTable = smmParametersTable::find();
        if (!smmParametersTable.PeriodId)
        {
            // Period must be selected in Sales and marketing parameters.
            throw error("@SYS97163");
        }
        curFromDate = smmParametersTable.PeriodFrom;
        curToDate = smmParametersTable.PeriodTo;

        // Get who to show statistics for
        switch (element.args().dataset())
        {
            case tablenum(CustTable) :
                custTable       = element.args().record();
                partyRecId      = custTable.Party;
                break;

            case tablenum(VendTable) :
                vendTable       = element.args().record();
                partyRecId      = vendTable.Party;
                break;

            case tablenum(smmBusRelTable) :
                smmBusRelTable  = element.args().record();
                partyRecId      = smmBusRelTable.Party;
                break;
        }

        // Is there a customer for the party?
        if (!custTable)
        {
            custTable = CustTable::findByPartyRecId(partyRecId);
            if (!custTable)
            {
                items.enabled(false);
                itemGroup.enabled(false);
            }
        }

        getDatesFromUser = true;

        // Get the busRelRevenue record for this party
        select firstonly smmBusRelRevenue where smmBusRelRevenue.Party == partyRecId;

        // Init form properties
        element.design().caption(element.design().caption() + captionSeperator + DirPartyTable::findRec(partyRecId).Name);

        chartController = new smmChartController();
        chartController.parmChart(Chart);
        chartController.resetChart();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showItemGroupChart</Name>
				<Source><![CDATA[
    void showItemGroupChart()
    {
        boolean found = smmUpdateBusRelStatistics::loadItemGroupData(custTable.AccountNum,
            prevFromDate, prevToDate, curFromDate, curToDate, smmBusRelStatisticsTmp);

        // Chart settings
        chartController.setChartDefaults(smmBusRelStatisticsTmp_DS.name());
        SysBuildChart build = chart.build();

        if (found)
        {
            build.parmText("@SYS4922");
        }
        else
        {
            build.parmText(blank);
        }
        build.parmYAxisTitle("@SYS3494");
        chart.applyBuild();

        smmBusRelStatisticsTmp_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>items</Name>
				<Source><![CDATA[
    void items()
    {
        boolean found = smmUpdateBusRelStatistics::loadItemData(custTable.AccountNum,
            prevFromDate, prevToDate, curFromDate, curToDate, smmBusRelStatisticsTmp);

        // Chart settings
        chartController.setChartDefaults(smmBusRelStatisticsTmp_DS.name());
        SysBuildChart build = chart.build();

        if (found)
        {
            build.parmText("@SYS14428");
        }
        else
        {
            build.parmText(blank);
        }
        build.parmYAxisTitle("@SYS3494");
        chart.applyBuild();

        smmBusRelStatisticsTmp_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPotentialSummaryChart</Name>
				<Source><![CDATA[
    void showPotentialSummaryChart()
    {
        // Chart settings
        chartController.setChartDefaults(smmBusRelStatisticsTmp_DS.name());
        SysBuildChart build = chart.build();
        build.parmText("@SYS80743");
        build.parmYAxisTitle("@SYS3494");
        Chart.applyBuild();

        // Data
        curRevenue  = smmBusRelRevenue.calculateTotalRevenue(curFromDate, curToDate, false);
        prevRevenue = smmBusRelRevenue.calculateTotalRevenue(prevFromDate, prevToDate, false);

        smmUpdateBusRelStatistics::resetBusRelStatisticsTmpData(smmBusRelStatisticsTmp);
        smmBusRelStatisticsTmp::loadData(smmBusRelStatisticsTmp, "@SYS96939", blank, curRevenue);
        smmBusRelStatisticsTmp::loadData(smmBusRelStatisticsTmp, "@SYS96940", blank, prevRevenue);
        smmBusRelStatisticsTmp::loadData(smmBusRelStatisticsTmp, "@SYS15436", blank, smmBusRelRevenue.BudgetYear);
        smmBusRelStatisticsTmp::loadData(smmBusRelStatisticsTmp, "@SYS54063", blank, smmBusRelRevenue.EstimateYear);
        smmBusRelStatisticsTmp::loadData(smmBusRelStatisticsTmp, "@SYS80743", blank, smmBusRelRevenue.PotentialYear);

        smmBusRelStatisticsTmp_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRevenueLastThisChart</Name>
				<Source><![CDATA[
    void showRevenueLastThisChart()
    {
        boolean foundData = smmUpdateBusRelStatistics::loadRevenueLastThisData(partyRecId,
            prevFromDate, prevToDate, curFromDate, curToDate, smmBusRelStatisticsTmp);

        // Chart settings
        chartController.setChartDefaults(smmBusRelStatisticsTmp_DS.name());
        SysBuildChart build = chart.build();

        if (foundData)
        {
            build.parmText("@SYS3583");
        }
        else
        {
            build.parmText(blank);
        }
        build.parmLegendEnabled(true);
        build.parmLegendAlignment(SysChartHorizontalAlignment::Center);
        build.parmLegendPosition(SysChartVerticalAlignment::Bottom);
        build.parmYAxisTitle("@SYS3494");
        Chart.applyBuild();

        smmBusRelStatisticsTmp_DS.research();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Revenues</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (element.getPeriodsFromUser())
            {
                element.showRevenueLastThisChart();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemGroup</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            if (element.getPeriodsFromUser())
            {
                element.showItemGroupChart();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Items</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (element.getPeriodsFromUser())
            {
                element.items();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Potential</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (element.getPeriodsFromUser())
            {
                element.showPotentialSummaryChart();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Update</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            getDatesFromUser = true;

            if (element.getPeriodsFromUser())
            {
                updateBusRelStatistics.runOperation();

                curRevenue  = updateBusRelStatistics.curRevenue();
                prevRevenue = updateBusRelStatistics.prevRevenue();

                // Update complete
                info("@SYS71661");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>smmBusRelStatisticsTmp</Name>
			<Table>smmBusRelStatisticsTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BarLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS326</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>Revenues</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS98267</HelpText>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS3583</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>ItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS98268</HelpText>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS4922</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>Items</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS98269</HelpText>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS50258</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>Potential</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS98270</HelpText>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS80403</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>Update</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS98271</HelpText>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS80754</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS326</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormContainerControl">
				<Name>Chart</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Container</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension>
					<Name>SysChart</Name>
					<ExtensionComponents>
						<AxFormControlExtensionComponent xmlns=""
							i:type="AxFormControlExtensionComponentComposite">
							<Name>parmDataSets</Name>
							<ExtensionComponents />
						</AxFormControlExtensionComponent>
						<AxFormControlExtensionComponent xmlns=""
							i:type="AxFormControlExtensionComponentComposite">
							<Name>parmMeasures</Name>
							<ExtensionComponents />
						</AxFormControlExtensionComponent>
						<AxFormControlExtensionComponent xmlns=""
							i:type="AxFormControlExtensionComponentComposite">
							<Name>parmSecondaryYAxes</Name>
							<ExtensionComponents />
						</AxFormControlExtensionComponent>
					</ExtensionComponents>
					<ExtensionProperties>
						<AxFormControlExtensionProperty>
							<Name>parmLegendEnabled</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmLegendAlignment</Name>
							<Type>Enum</Type>
							<TypeName>SysChartHorizontalAlignment</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmLegendPosition</Name>
							<Type>Enum</Type>
							<TypeName>SysChartVerticalAlignment</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmLegendLayout</Name>
							<Type>Enum</Type>
							<TypeName>SysChartLegendLayout</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmTitleAlignment</Name>
							<Type>Enum</Type>
							<TypeName>SysChartHorizontalAlignment</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmText</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmTitlePosition</Name>
							<Type>Enum</Type>
							<TypeName>SysChartVerticalAlignment</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmYAxisTitle</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmYAxisVisible</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmXAxisTitle</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmClickMenuItemType</Name>
							<Type>Enum</Type>
							<TypeName>MenuItemType</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmClickMenuItemName</Name>
							<Type>ExtendedDataType</Type>
							<TypeName>MenuItemName</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmInteractionsDisabled</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>True</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmToolbarEnabled</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmSerializedButtons</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmYAxisLabelsHidden</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmYAxisMinValue</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmYAxisMaxValue</Name>
							<Type>String</Type>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmZoomLimit</Name>
							<Type>Enum</Type>
							<TypeName>SysChartDateTimeInterval</TypeName>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmPadMargin</Name>
							<Type>Int32</Type>
							<Value>0</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmCrosshairsEnabled</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmTooltipShared</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>parmPlotLineEnabled</Name>
							<Type>Enum</Type>
							<TypeName>boolean</TypeName>
							<Value>False</Value>
						</AxFormControlExtensionProperty>
					</ExtensionProperties>
				</FormControlExtension>
				<Controls />
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
