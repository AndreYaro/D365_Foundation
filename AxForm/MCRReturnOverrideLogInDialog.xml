<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MCRReturnOverrideLogInDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class MCRReturnOverrideLogInDialog extends FormRun
    {
        SalesLine                       salesLine;
        SalesTable                      salesTable;
        MarkupTrans                     markupTrans;

        MCRReturnOverride_MiscCharge     returnOverride_MiscCharge;
        MCRReturnOverride_PaymentMethod  returnOverride_PaymentMethod;

        args                            args;
        boolean                         OverrideUserPermission;

        #define.UserValid('UserValid')
        #define.Cancel('Cancel')
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets appropriate errors and passes back cancel
    ///     to notify calling object that the user did not
    ///     successfully override given permissions.
    /// </summary>
    public void close()
    {
        if (!element.closedOk())
        {
            // call the return override classes so appropriate errors are set.
            returnOverride_MiscCharge = new MCRReturnOverride_MiscCharge();
            returnOverride_MiscCharge.IsUserAllowed(curUserId(), salesTable);

            returnOverride_PaymentMethod = new MCRReturnOverride_PaymentMethod();
            returnOverride_PaymentMethod.IsUserAllowed(curUserId(), salesTable);

            element.args().parm(#Cancel);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        args = element.args();

        // The return sales table record should be passed.
        if (element.args().dataset() == tableNum(SalesTable))
        {
            salesTable = element.args().record();
        }
        else
        {
            throw error(Error::missingRecord(this.name()));
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>UserId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Blanks out the previous password.
        /// </summary>
        /// <returns>
        /// true when the user ID is modified; otherwise, false.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            password.text("");
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
                void clicked()
        {
            NetworkAlias    networkUserId = UserId.valueStr();
            MCRPassword     mcrPassword = Password.valueStr();
            boolean         userValid;
            UserInfo        userInfo;
            if (!NetworkUserId)
            {
                throw error ("@MCR10866");
            }

            // Validate password for user entered.
            MCRReturnOverride::IsUserLogInValid(networkUserId, mcrPassword);

            // Retrieve the UserInfo record so that we have their DAX user id.
            select id from userInfo
                where userInfo.networkAlias == networkUserId;

            returnOverride_MiscCharge = new MCRReturnOverride_MiscCharge();
            userValid = returnOverride_MiscCharge.IsUserAllowed(userInfo.id, salesTable);

            returnOverride_PaymentMethod = new MCRReturnOverride_PaymentMethod();
            userValid = returnOverride_PaymentMethod.IsUserAllowed(userInfo.id, salesTable) && userValid;

            if (!userValid)
            {
                throw Exception::Error;
            }

            // Notify calling object that the user has entered a UID & PW
            // which is valid for the entered payment method and misc. charges.
            element.args().parm(#UserValid);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@MCR4410341</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LogIn</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>UserId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>NetworkAlias</ExtendedDataType>
								<Label>@RET1886</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Password</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>MCRPassword</ExtendedDataType>
								<Label>@SYS30019</Label>
								<PasswordStyle>Yes</PasswordStyle>
							</AxFormControl>
						</Controls>
						<Caption>@MCR4410342</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>