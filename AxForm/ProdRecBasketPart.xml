<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProdRecBasketPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
/// <summary>
///     The <c>ProdRecBasketPart</c> form part activates the selection list for production list pages.
/// </summary>
public class ProdRecBasketPart extends FormRun implements ReqRefreshableFormInterface
{
    ProdRecBasketHandler        prodRecBasketHandler;

    //caller details
    FormRun                     callerFormRun;
    FormDataSource              callerFormRunMainDataSource;
    Query                       callerFormRunQuery;
    QueryBuildDataSource        callerFormRunQueryMainDataSource;
    FormName                    referencedFormName;

    boolean                     refreshNeeded = true;

}
]]></Source>
			</Method>
			<Method>
				<Name>cacheToFilterInParentDatasource</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets a filter on the parent datasource to view the records on the basket.
    /// </summary>
    public void cacheToFilterInParentDatasource()
    {
        ProdRecBasketHandler.setDSFilterByCache(callerFormRunMainDataSource, JoinMode::ExistsJoin);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Method initialized when the form is created.
    /// </summary>
    /// <exception cref="Exception::Error">
    ///     An exception is thrown when the arguments are missing or incorrect.
    /// </exception>
    public void init()
    {
        if (!element.args() || !element.args().caller() || !(element.args().caller() is FormRun))
        {
            throw error(error::wrongUseOfFunction(funcname()));
        }

        callerFormRun               = element.args().Caller();
        callerFormRunMainDataSource = callerFormRun.dataSource();
        callerFormRunQuery          = callerFormRunMainDataSource.query();
        callerFormRunQueryMainDataSource = callerFormRunQuery.dataSourceTable(callerFormRunMainDataSource.table());

        if (isConfigurationkeyEnabled(configurationKeyNum(ProdRecBasket)))
        {
            element.initFromCaller();
        }

        super();
        element.refreshData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCaller</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the basket handler class from the details of the parent form.
    /// </summary>
    public void initFromCaller()
    {
        SysDictTable table;
        SysDictMenu  menuItemReference;
        str          directFormReference;

        prodRecBasketHandler = ProdRecBasketHandler::newFromFormName(callerFormRun.name(), callerFormRunQueryMainDataSource.table());

        table               = new SysDictTable(prodRecBasketHandler.parmContextTableId());
        directFormReference = table.formRef(true);
        menuItemReference   = SysDictMenu::newMenuItem(directFormReference, MenuItemType::Display);

        if (menuItemReference && menuItemReference.menuItem())
        {
            MenuFunction menuFunction = menuItemReference.menuItem();
            if (menuFunction.objectType() == UtilElementType::Form)
            {
                referencedFormName  = menuFunction.object();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Refreshes form part.
    /// </summary>
    /// <param name = "_retainPosition">Indicates whether the position should be retained.</param>
    public void refreshForm(boolean _retainPosition = false)
    {
        this.refreshData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFormRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Refreshes given record on the form part.
    /// </summary>
    /// <param name = "_record">The record that should be refreshed on the caller form.</param>
    public void refreshFormRecord(Common _record)
    {
        this.refreshData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Refreshes the data displayed on the factbox.
    /// </summary>
    public void refreshData()
    {
        boolean enabled         = false;

        if (!isConfigurationkeyEnabled(configurationKeyNum(ProdRecBasket)) || appl.ttsLevel() > 0)
        {
            return;
        }

        refreshNeeded = true;

        if (prodRecBasketRecords_DS)
        {
            prodRecBasketRecords_DS.executeQuery();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProdRecBasketRecords</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Initializes the datasource on the form part.
        /// </summary>
        public void init()
        {
            QueryBuildDataSource    qbds;
            Query                   query;
            SysDictTable            dictTable;
            FieldId                 fieldIdRecId;
            FieldId                 fieldIdTableId;

            super();
            dictTable       = SysDictTable::newTableId(callerFormRunMainDataSource.table());
            fieldIdRecId    = dictTable.fieldName2Id(fieldStr(Common, RecId));
            fieldIdTableId  = dictTable.fieldName2Id(fieldStr(Common, TableId));

            query = this.query();
            qbds  = query.dataSourceTable(tableNum(ProdRecBasketRecords));
            qbds.addOrderByField(fieldNum(ProdRecBasketRecords, CreatedDateTime), SortOrder::Descending);
            qbds.addRange(fieldNum(ProdRecBasketRecords, CacheContextUserId)).value(prodRecBasketHandler.parmContextUserId());
            qbds.addRange(fieldNum(ProdRecBasketRecords, CacheContextDataArea)).value(prodRecBasketHandler.parmContextDataArea());
            qbds.addRange(fieldNum(ProdRecBasketRecords, CacheContextScope)).value(prodRecBasketHandler.getCacheScope());
            qbds.addRange(fieldNum(ProdRecBasketRecords, RefTableId)).value(queryValue(prodRecBasketHandler.parmContextTableId()));

            qbds = qbds.addDataSource(callerFormRunMainDataSource.table());
            qbds.joinMode(JoinMode::ExistsJoin);
            qbds.addLink(fieldNum(ProdRecBasketRecords, RefRecId),   fieldIdRecId);
            qbds.addLink(fieldNum(ProdRecBasketRecords, RefTableId), fieldIdTableId);
            this.query(query);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            // Execute query on the form part is called every time a record is selected on the main form.
            // As this is perfomance heavy operation it should be only called when needed.
            if (refreshNeeded)
            {
                super();

                int64 currentBasketRecords;
                int64 currentNotInBasketRecords;
                [currentBasketRecords, currentNotInBasketRecords] = ProdRecBasketHandler.getCount();

                recordBasketCounterLink.text(strFmt("@SYS4110565", currentBasketRecords));
                recordBasketCounterLink.enabled(currentBasketRecords > 0);

                refreshNeeded = false;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DefaultActionButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args    args = new Args();
            FormRun formRun;

            if (prodRecBasketRecords && referencedFormName)
            {
                args.name(referencedFormName);
                args.lookupRecord(prodRecBasketRecords.relatedRecord());
                args.openMode(OpenMode::View);
                formRun = classFactory.formRunClass(args);
                formRun.run();
                formRun.wait();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RecordBasketCounterLink</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.cacheToFilterInParentDatasource();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProdRecBasketRecords</Name>
			<Table>ProdRecBasketRecords</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CacheContextDataArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CacheContextScope</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CacheContextUserId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS4110574</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">FormPartFactboxGrid</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>GridLastRecordsOnBasket</Name>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<Type>Grid</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GridLastRecordsOnBasket_RefName</Name>
						<AlignControl>No</AlignControl>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RefName</DataField>
						<DataSource>ProdRecBasketRecords</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>DisplayName</DataGroup>
				<DataSource>ProdRecBasketRecords</DataSource>
				<DefaultAction>DefaultActionButton</DefaultAction>
				<HighlightActive>No</HighlightActive>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>SimpleReadOnly</Style>
				<VisibleRows>5</VisibleRows>
				<VisibleRowsMode>Fixed</VisibleRowsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormMenuFunctionButtonControl">
				<Name>DefaultActionButton</Name>
				<Type>MenuFunctionButton</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<DataSource>ProdRecBasketRecords</DataSource>
				<Style>Standard</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>MoreLinkGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>Auto</HeightMode>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>RecordBasketCounterLink</Name>
						<AlignControl>Yes</AlignControl>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS4110561</HelpText>
						<Left>0</Left>
						<LeftMode>RightEdge</LeftMode>
						<Type>Button</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Right</Alignment>
						<Border>None</Border>
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Style>Link</Style>
						<Text>@SYS4110564</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Columns>2</Columns>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
