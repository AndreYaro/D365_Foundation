<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>FBLedgerJournalTransTaxAssessAdj_BR</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class FBLedgerJournalTransTaxAssessAdj_BR extends FormRun implements LedgerILedgerJournalEngineProvider, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    QueryBuildRange                     ledgerJournalTransRange;
    LedgerJournalEngine                 ledgerJournalEngine;
    LedgerJournalCheckPostResults       postingResults_Client;

    LedgerJournalFormTrans              journalFormTrans;

    LedgerJournalTable                  ledgerJournalTable;

    LedgerJournalId                     journalNum;

    ImageListAppl_LedgerJournal         imageListAppl;

    RecId                               currentMainAccountId;
    RecId                               currentOffsetMainAccountId;

}
]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        FormRun callerForm = element.args().caller();

        if (callerForm)
        {
            callerForm.bookRefresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        journalFormTrans.formClosePre();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the editable property of various datasource fields for the form.
    /// </summary>
    void enableFieldsActive()
    {
        boolean isTaxBaseAmountEnabled;
        boolean isTaxValueEnabled;
        boolean isTaxationCodeEnabled;
        boolean isCnpjEnabled;
        boolean isComplementaryDescriptionEnabled;
        boolean isCreditTypeEnabled;
        boolean isTransferredCreditPercentageEnabled;
        boolean isAssessmentPeriodEnabled;
        boolean isCreditBaseSourceEnabled;
        boolean isAdjustmentSourceTypeEnabled;
        boolean isProcessNumEnabled;

        boolean isStateEnabled = FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::ICMSST ||
                                 FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::ICMSDiff;

        if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType  == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
            && FBLedgerJournalTrans_FiscalBooks_BR.TaxType != TaxType_BR::IPI)
        {
            isTaxBaseAmountEnabled = true;
            isTaxValueEnabled      = true;
        }

        if (   (FBLedgerJournalTrans_FiscalBooks_BR.TaxType         == TaxType_BR::PIS
        ||  FBLedgerJournalTrans_FiscalBooks_BR.TaxType         == TaxType_BR::COFINS))
        {
            isComplementaryDescriptionEnabled  = true;

            if (FBLedgerJournalTrans_FiscalBooks_BR.GeneralAdjustmentCode)
            {
                FBGeneralAdjustmentCodePISCOFINS_BR generalAdjustmentCodePisCofins = FBGeneralAdjustmentCode_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.GeneralAdjustmentCode) as FBGeneralAdjustmentCodePISCOFINS_BR;

                isTaxBaseAmountEnabled                  = FBTaxAssessmentAdjustment_BR::isTaxBaseAmountMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isTaxValueEnabled                       = FBTaxAssessmentAdjustment_BR::isTaxValueMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isTaxationCodeEnabled                   = FBTaxAssessmentAdjustment_BR::isTaxationCodeMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isCnpjEnabled                           = FBTaxAssessmentAdjustment_BR::isCnpjMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isCreditTypeEnabled                     = FBTaxAssessmentAdjustment_BR::isCreditTypeMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isTransferredCreditPercentageEnabled    = FBTaxAssessmentAdjustment_BR::isTransferredCreditPercentageMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isAssessmentPeriodEnabled               = FBTaxAssessmentAdjustment_BR::isAssessmentPeriodMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isCreditBaseSourceEnabled               = FBTaxAssessmentAdjustment_BR::isCreditBaseSourceMandatory(generalAdjustmentCodePisCofins.AdjustmentType);
                isProcessNumEnabled = (generalAdjustmentCodePisCofins.AdjustmentType == FBGeneralAdjustmentTypePISCOFINS_BR::CreditIncrease
                    || generalAdjustmentCodePisCofins.AdjustmentType == FBGeneralAdjustmentTypePISCOFINS_BR::CreditDecrease);
            }
        }

        if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI)
        {
            isAdjustmentSourceTypeEnabled = FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General;
            isProcessNumEnabled = FBGeneralAdjustmentCodeIPI_BR::isProcessNumAllowed(FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType);
        }

        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ReverseDate)).allowEdit(ledgerJournalTrans.ReverseEntry ? true : false);

        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, AdjustmentType)).enabled(FBLedgerJournalTrans_FiscalBooks_BR.allowAdjustmentByFiscalDocument());
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, State)).allowEdit(isStateEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, State)).skip(!isStateEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ObservationCodeTable)).enabled(FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ComplementaryDescription)).enabled(isComplementaryDescriptionEnabled);

        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxBaseAmount)).enabled(isTaxBaseAmountEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxValue)).enabled(isTaxValueEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxationCode)).enabled(isTaxationCodeEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, DeductionCnpj)).enabled(isCnpjEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, FBContribCreditType_BR)).enabled(isCreditTypeEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ContribAssessmentPeriod)).enabled(isAssessmentPeriodEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ContribTransferredCreditPercentage)).enabled(isTransferredCreditPercentageEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ContribCreditBaseSource)).enabled(isCreditBaseSourceEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxAdjustmentSourceType)).enabled(isAdjustmentSourceTypeEnabled);
        FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxAdjustmentProcessNum)).enabled(isProcessNumEnabled);

        if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI)
        {
            if (isAdjustmentSourceTypeEnabled)
            {
                if (FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType == FBTaxAdjustmentSourceType_BR::FiscalDocument)
                {
                    FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType = FBTaxAdjustmentSourceType_BR::JudicalProcess;
                }
            }
            else if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General)
            {
                FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType = FBTaxAdjustmentSourceType_BR::JudicalProcess;
            }
            else
            {
                FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType = FBTaxAdjustmentSourceType_BR::FiscalDocument;
            }
        }
        else
        {
            FBLedgerJournalTrans_FiscalBooks_BR.TaxAdjustmentSourceType = 0;
        }

        if (!isProcessNumEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxAdjustmentProcessNum)).setValue("");
        }

        if (!isCreditTypeEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, FBContribCreditType_BR)).setValue(0);
        }

        if (!isTaxationCodeEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxationCode)).setValue("");
        }

        if (!isTaxBaseAmountEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxBaseAmount)).setValue("");
        }

        if (!isTaxValueEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, TaxValue)).setValue(0);
        }

        if (!isCnpjEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, DeductionCnpj)).setValue("");
        }

        if (!isAssessmentPeriodEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ContribAssessmentPeriod)).setValue(dateNull());
        }

        if (!isTransferredCreditPercentageEnabled)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, ContribTransferredCreditPercentage)).setValue(0);
        }

        if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General)
        {
            FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, FiscalDocumentAdjustmentCodeICMS)).setValue(0);
        }
        else if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument)
        {
            if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI)
            {
                FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, FiscalDocumentAdjustmentCodeICMS)).setValue(0);
            }
            else
            {
                FBLedgerJournalTrans_FiscalBooks_BR_ds.object(fieldNum(FBLedgerJournalTrans_FiscalBooks_BR, GeneralAdjustmentCode)).setValue(0);
            }
        }

        FBLedgerJournalTrans_FiscalBooks_BR_ds.rereadReferenceDataSources();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalEstablishment</Name>
				<Source><![CDATA[
    FiscalEstablishment_BR getFiscalEstablishment()
    {
        return FiscalEstablishment_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        journalFormTrans = new LedgerJournalFormTrans(element);

        super();

        LedgerJournalTrans_LedgerDimension.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_AccountNum1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_OffsetLedgerDimension.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        LedgerJournalTrans_OffsetAccount1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));

        LedgerJournalTrans_LedgerDimension.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_AccountNum1.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetLedgerDimension.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetAccount1.parmPostingType(LedgerPostingType::LedgerJournal);

        LedgerJournalTrans_LedgerDimension.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_AccountNum1.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetLedgerDimension.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetAccount1.parmValidateBlockedForManualEntry(true);

        journalFormTrans.parmCtrlCheckJournal(checkJournal);
        journalFormTrans.parmCtrlPostJournal(postJournal);
        journalFormTrans.parmCtrlVoucherGrid(LedgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(identification_Voucher);
        journalFormTrans.parmCtrlLineLogImage(ErrorExist);

        journalFormTrans.formInitPost();

        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable  = element.args().record();
            journalNum          = ledgerJournalTable.JournalNum;

            LedgerJournalTrans_LedgerDimension.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_AccountNum1.parmJournalName(ledgerJournalTable.JournalName);

            LedgerJournalTrans_OffsetLedgerDimension.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_OffsetAccount1.parmJournalName(ledgerJournalTable.JournalName);
            // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                LedgerJournalTrans_OffsetLedgerDimension.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                LedgerJournalTrans_OffsetAccount1.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            }
        }

        imageListAppl   = new ImageListAppl_LedgerJournal();
        errorExist.imageList(imageListAppl.imageList());
        displayJournalLines.selection(LedgerJournalLinesDisplayOption::All);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTable</Name>
				<Source><![CDATA[
    LedgerJournalTable ledgerJournalTable()
    {
        return ledgerJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    void research(Voucher _voucher          = '')
    {
        ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
        ledgerJournalTrans_ds.research();

        if (_voucher)
        {
            element.args().lookupRecord(LedgerJournalTrans);
            ledgerJournalTrans_ds.research(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterJournalLineErrors</Name>
				<Source><![CDATA[
    public void filterJournalLineErrors()
    {
        LedgerPostingMessageLog ledgerPostingMessageCollection;

        QueryBuildDataSource qbds;

        if (journalFormTrans.parmCheckPostResults())
        {
            ledgerPostingMessageCollection = journalFormTrans.parmCheckPostResults().parmLedgerPostingMessageLog();

            if (journalFormTrans.parmCheckPostResults().errorInJournalLine())
            {
                LedgerJournalTrans_Error::createJournalErrorLinks(ledgerJournalTrans.JournalNum, ledgerPostingMessageCollection);
            }

            qbds = LedgerJournalTrans_ds.query().dataSourceTable(tableNum(LedgerJournalTrans_Error));

            if (displayJournalLines.selection() == LedgerJournalLinesDisplayOption::ErrorsOnly)
            {
                if (!qbds)
                {
                    qbds = LedgerJournalTrans_Error::addDataSource(LedgerJournalTrans_ds.query().dataSourceTable(tableNum(LedgerJournalTrans)));
                }
                else
                {
                    qbds.enabled(true);
                }
            }
            else
            {
                this.disableDatasource(qbds);
            }

            LedgerJournalTrans_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableDatasource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the initialized <c>QueryBuildDataSource</c> class object.
    /// </summary>
    /// <param name = "_qbds">
    /// The initialized <c>QueryBuildDataSource</c> class object.
    /// </param>
    protected void disableDatasource(QueryBuildDataSource _qbds)
    {
        if (_qbds)
        {
            _qbds.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No updates to the template settings are required.
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>taxAmountJournal</Name>
						<Source><![CDATA[
        display TaxAmountJournal taxAmountJournal(LedgerJournalTrans _ledgerJournalTrans)
        {
            TaxAmountJournal taxAmountJournal;

            taxAmountJournal = ledgerJournalEngine.taxAmountJournal(_ledgerJournalTrans);

            return taxAmountJournal;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            journalFormTrans.datasourceActivePost();

            LedgerJournalTrans_ds.allowEdit(LedgerJournalTrans.RevRecId == 0);
            FBLedgerJournalTrans_FiscalBooks_BR_ds.allowEdit(LedgerJournalTrans.RevRecId == 0);

            ButtonPostJournal.enabled(BrazilParameters::isFBLedgerIntegrationActivated());

            LedgerJournalTrans_LedgerDimension.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_LedgerDimension.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_LedgerDimension.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);

            LedgerJournalTrans_OffsetLedgerDimension.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetLedgerDimension.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            LedgerJournalTrans_OffsetLedgerDimension.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);

            // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                LedgerJournalTrans_OffsetLedgerDimension.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                LedgerJournalTrans_OffsetAccount1.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            if (ledgerJournalEngine.numberSeqFormHandlerJournal())
            {
                ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
            }

            super();

            ledgerJournalEngine.formMethodDataSourceCreatePost();

            ledgerJournalEngine.initValue(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid;
            LedgerJournalACType     ledgerJournalACType;
            LedgerJournalACType     offsetACType;
            ReasonRefRecID reasonRef = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ReasonRefRecID)).getValue();
            boolean         useOtherAccount;

            isValid = super();

            ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();

            offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,OffsetAccountType)).getValue();

            useOtherAccount = ledgerJournalTrans.parmOffsetLedgerDimension() ? true : false;

            if (isValid && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
            {
                isValid = false;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean _append = false)
        {
            // Insure the record is written before any pre creation methods are called
            // We explictly call leaveRecord to account for scenarios where New is clicked or Ctrl-N is hit on an unsaved record
            // In manual voucher entry scenarios the preCreate method clears form values if the record is not saved
            // An errror is thrown in the line below journalFormTrans.dataSourceCreatePre() if auto assigning of voucher number
            this.leaveRecord();

            try
            {
                journalFormTrans.datasourceCreatePre();

                ledgerJournalEngine.preCreate(ledgerJournalTrans);
                super(_append);
            }
            catch (Exception::UpdateConflict)
            {
                throw Exception::UpdateConflict;
            }
            catch
            {
                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            LedgerJournalTrans ledgerJournalTransCopy;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                ledgerJournalTransCopy = ledgerJournalTrans.data();
                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans, true);

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                super();

                ledgerJournalEngine.delete(ledgerJournalTransCopy);

                ledgerJournalTrans_DS.refresh();

                // Do not commit if the TTS level is 0 because that would generate a stack trace error
                // The TTS level becomes 0 if a display method threw an exception
                if (appl.ttsLevel() > 0)
                {
                    ttscommit;
                }
            }
            catch
            {
                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
        /// </summary>
        /// <remarks>
        /// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c>, <c>LedgerJournalTrans_Asset</c> and <c>LedgerJournalTrans_Project</c>.
        /// </remarks>
        public void write()
        {
            boolean isNewRecord = !ledgerJournalTrans.RecId; // Flag that indicates whether or not this is a new record.

            //sets the release date comment blank if the release date is blank
            if (ledgerJournalTrans.InvoiceReleaseDate == utcDateTimeNull())
            {
                ledgerJournalTrans.ReleaseDateComment = "";
            }

            try
            {
                ttsbegin;

                ledgerJournalEngine.formMethodDataSourceWritePre();

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // If super() is called directly, the client currently refreshes all of the linked datasources,
                // which causes the LedgerJournalTrans_Project datasource to be corrupted. The result is the
                // changes to the LedgerJournalTrans_Project table are not saved.
                // super(); // the next line replaces this one
                ledgerJournalTrans.write();

                ledgerJournalEngine.write(ledgerJournalTrans);

                FBLedgerJournalTrans_FiscalBooks_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);

                ttscommit;

                this.refresh();
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // We need to figure out if the current voucher is used and generate one if it is used.
                ledgerJournalEngine.forceNewVoucher(ledgerJournalTrans.Voucher);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalTransRange   = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
            ledgerJournalTransRange.value(strFmt('%1',0));

            ledgerJournalEngine = new FBLedgerJournalEngine_TaxAssessAdj_BR(element);
            ledgerJournalEngine.ledgerJournalTable(element.args().record());

            journalFormTrans.datasourceInitPost(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            journalFormTrans.datasourceExecuteQueryPost();
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res;
            #resAppl;

            if (postingResults_Client == null)
            {
                postingResults_Client = ledgerJournalEngine.getPostingResults();
            }

            if (postingResults_Client.errorExists(_ledgerJournalTrans.Voucher))
            {
                res = imageListAppl.image(#ImageError);
            }
            else
            {
                res = -1;
            }

            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalNumOfLines</Name>
						<Source><![CDATA[
        display JournalNumOfLines journalNumOfLines(LedgerJournalTrans _ledgerJournalTrans)
        {
            return journalFormTrans.displayJournalNumOfLines(_ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount = ledgerJournalTrans.AmountCurCredit;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount = ledgerJournalTrans.AmountCurDebit;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_LedgerDimension.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
                LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_LedgerDimension.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);

                LedgerJournalTrans_OffsetLedgerDimension.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of main account field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new main account
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method

                ledgerJournalEngine.accountNumModified(ledgerJournalTrans, null);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                ledgerJournalTrans_ds.refresh();

                journalFormTrans.enableButtonsActive();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // Lock the main account segment if "Fixed offset account" is selected in Journal Names
                if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    LedgerJournalTrans_OffsetLedgerDimension.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                    LedgerJournalTrans_OffsetAccount1.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_OffsetLedgerDimension.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_LedgerDimension.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);

                LedgerJournalTrans_OffsetLedgerDimension.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>FBLedgerJournalTrans_FiscalBooks_BR</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR = ledgerJournalTable.ledgerJournalTable_W().FiscalEstablishment_BR;
            FBLedgerJournalTrans_FiscalBooks_BR.TaxType = ledgerJournalTable.ledgerJournalTable_W().TaxType_BR;

            if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType)
            {
                FBLedgerJournalTrans_FiscalBooks_BR.modifiedFieldValue(fieldStr(FBLedgerJournalTrans_FiscalBooks_BR, TaxType));
            }

            if (FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR)
            {
                FBLedgerJournalTrans_FiscalBooks_BR.modifiedFieldValue(fieldStr(FBLedgerJournalTrans_FiscalBooks_BR, FiscalEstablishment_BR));
            }
            element.enableFieldsActive();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initTaxCodeAndMainAccount</Name>
						<Source><![CDATA[
        public void initTaxCodeAndMainAccount()
        {
            LedgerDimensionAccount offsetLedgerDimension;

            if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType != FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                || FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI)
            {
                FBGeneralAdjustmentCodeLedger_BR generalAdjustmentCodeLedger;

                select firstOnly generalAdjustmentCodeLedger
                    where generalAdjustmentCodeLedger.Company == LedgerJournalTrans.company()
                        && generalAdjustmentCodeLedger.FBGeneralAdjustmentCode_BR == FBLedgerJournalTrans_FiscalBooks_BR.GeneralAdjustmentCode;

                LedgerJournalTrans.TaxCode = generalAdjustmentCodeLedger.TaxCode;
                offsetLedgerDimension = generalAdjustmentCodeLedger.LedgerDimension;
            }
            else
            {
                FBFiscalDocAdjustmentCodeICMSLedger_BR fiscalDocAdjustmentCodeICMSLedger;

                select firstOnly fiscalDocAdjustmentCodeICMSLedger
                    where fiscalDocAdjustmentCodeICMSLedger.Company == LedgerJournalTrans.company()
                        && fiscalDocAdjustmentCodeICMSLedger.FBFiscalDocumentAdjustmentCodeICMS_BR == FBLedgerJournalTrans_FiscalBooks_BR.FiscalDocumentAdjustmentCodeICMS;

                LedgerJournalTrans.TaxCode = fiscalDocAdjustmentCodeICMSLedger.TaxCode;
                offsetLedgerDimension = fiscalDocAdjustmentCodeICMSLedger.LedgerDimension;
            }

            if (LedgerJournalTrans.TaxCode)
            {
                LedgerDimensionAccount ledgerDimension;

                if (FBLedgerJournalTrans_FiscalBooks_BR.isTaxDebit())
                {
                    ledgerDimension = TaxLedgerAccountGroup::accountLedgerDimension(LedgerJournalTrans.TaxCode, TaxDirection::OutgoingTax);
                }
                else
                {
                    ledgerDimension = TaxLedgerAccountGroup::accountLedgerDimension(LedgerJournalTrans.TaxCode, TaxDirection::IncomingTax);
                }

                LedgerJournalTrans.LedgerDimension          = FBLedgerJournalTrans_FiscalBooks_BR::getLedgerDimension(ledgerDimension, LedgerJournalTrans, FiscalEstablishment_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR));
                LedgerJournalTrans.OffsetLedgerDimension    = FBLedgerJournalTrans_FiscalBooks_BR::getLedgerDimension(offsetLedgerDimension, LedgerJournalTrans, FiscalEstablishment_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>editAdjustmentCode</Name>
						<Source><![CDATA[
        public edit FBTaxAdjustmentCode_BR editAdjustmentCode(
            boolean _set,
            FBLedgerJournalTrans_FiscalBooks_BR _ledgerJournalTrans_FiscalBooks,
            FBTaxAdjustmentCode_BR _taxAdjustmentCode)
        {
            FBTaxAdjustmentCode_BR taxAdjustmentCode;

            if (_set)
            {
                if (_ledgerJournalTrans_FiscalBooks.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                    && _ledgerJournalTrans_FiscalBooks.TaxType != TaxType_BR::IPI)
                {
                    _ledgerJournalTrans_FiscalBooks.FiscalDocumentAdjustmentCodeICMS = FBFiscalDocumentAdjustmentCodeICMS_BR::findByAdjustmentCode(_taxAdjustmentCode).RecId;
                }
                else
                {
                    _ledgerJournalTrans_FiscalBooks.GeneralAdjustmentCode = FBGeneralAdjustmentCode_BR::findByAdjustmentCode(_taxAdjustmentCode).RecId;
                }

                taxAdjustmentCode = _taxAdjustmentCode;

                FBLedgerJournalTrans_FiscalBooks_BR_ds.setAmountCurDebitCredit();
            }
            else
            {
                if (_ledgerJournalTrans_FiscalBooks.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                    && _ledgerJournalTrans_FiscalBooks.TaxType != TaxType_BR::IPI)
                {
                    taxAdjustmentCode = FBFiscalDocumentAdjustmentCodeICMS_BR::find(_ledgerJournalTrans_FiscalBooks.FiscalDocumentAdjustmentCodeICMS).AdjustmentCode;
                }
                else
                {
                    taxAdjustmentCode = FBGeneralAdjustmentCode_BR::find(_ledgerJournalTrans_FiscalBooks.GeneralAdjustmentCode).AdjustmentCode;
                }
            }

            return  taxAdjustmentCode;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (FBLedgerJournalTrans_FiscalBooks_BR.LedgerJournalTrans)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>editTaxType</Name>
						<Source><![CDATA[
        public edit String15 editTaxType(boolean _set, FBLedgerJournalTrans_FiscalBooks_BR _ledgerjournalTrans, String15 _taxTypeStr)
        {
            String15                taxTypeStr;
            TaxType_BR              taxtype;

            if (_set)
            {
                _ledgerjournalTrans.TaxType  = str2enum(taxtype, _taxTypeStr);

                taxTypeStr = _taxTypeStr;
            }
            else
            {
                taxTypeStr         = enum2str(_ledgerjournalTrans.TaxType);
            }

            return taxTypeStr;
        }

]]></Source>
					</Method>
					<Method>
						<Name>setAmountCurDebitCredit</Name>
						<Source><![CDATA[
        internal void setAmountCurDebitCredit()
        {
            if (FBLedgerJournalTrans_FiscalBooks_BR.isLedgerCredit())
            {
                LedgerJournalTrans.AmountCurCredit = FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount;
                LedgerJournalTrans.AmountCurDebit = 0;
            }
            else
            {
                LedgerJournalTrans.AmountCurDebit = FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount;
                LedgerJournalTrans.AmountCurCredit = 0;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AdjustmentType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableFieldsActive();

                if (FBLedgerJournalTrans_FiscalBooks_BR.isLedgerCredit())
                {
                    LedgerJournalTrans.AmountCurCredit = FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount;
                }
                else
                {
                    LedgerJournalTrans.AmountCurDebit = FBLedgerJournalTrans_FiscalBooks_BR.TaxAmount;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>State</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                #ISOCountryRegionCodes

                if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::ICMSDiff)
                {
                    LogisticsAddressState::lookupStateId(_formControl, SysCountryRegionCode::getCountryRegionIdByIsoCode(#isoBR));
                }
                else
                {
                    FiscalEstablishmentIEPerState_BR::lookupStateId(_formControl, FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR, SysCountryRegionCode::getCountryRegionIdByIsoCode(#isoBR));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxAdjustmentSourceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableFieldsActive();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                FBLedgerJournalTrans_FiscalBooks_BR_ds.setAmountCurDebitCredit();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableFieldsActive();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            catch
            {
                // Swallow the exception because we want finally semantics
                curext(); // suppress compiler warning for empty compound statements
            }

            // finally
            postingResults_Client = ledgerJournalEngine.getPostingResults();

            if (postingResults_Client.errorInJournal())
            {
                errorExist.visible(true);
            }

            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            catch
            {
                // Swallow the exception because we want finally semantics
                curext(); // suppress compiler warning for empty compound statements
            }

            // finally
            postingResults_Client = ledgerJournalEngine.getPostingResults();

            if (postingResults_Client.errorInJournal())
            {
                errorExist.visible(true);
            }

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            catch
            {
                // Swallow the exception because we want finally semantics
                curext(); // suppress compiler warning for empty compound statements
            }

            // finally
            postingResults_Client = ledgerJournalEngine.getPostingResults();

            if (postingResults_Client.errorInJournal())
            {
                errorExist.visible(true);
            }

            element.bookRefresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            catch
            {
                // Swallow the exception because we want finally semantics
                curext(); // suppress compiler warning for empty compound statements
            }

            // finally
            postingResults_Client = ledgerJournalEngine.getPostingResults();

            if (postingResults_Client.errorInJournal())
            {
                errorExist.visible(true);
            }

            element.bookRefresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Functions</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTrans.buttonClickedFunctions(ledgerJournalTrans);

            NewFromInvoicesButton.enabled(FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                                            && !LedgerJournalTrans.ledgerJournalTable().Posted);
            ButtonDeleteTransactions.enabled(FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType != FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                                            && !LedgerJournalTrans.ledgerJournalTable().Posted);
            ButtonCancelVoucher.enabled(FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType != FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                                            && !LedgerJournalTrans.ledgerJournalTable().Posted);
            PisAndCofinsTaxAssessment.enabled(FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType != FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                                            && !LedgerJournalTrans.ledgerJournalTable().Posted);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeleteTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();

            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCancelVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();

            journalFormTrans.researchJournalLines();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NewFromInvoicesButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            LedgerJournalTrans_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DisplayJournalLines</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            element.filterJournalLineErrors();

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editTaxType</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TaxTable::lookupTaxTypeStr(this, FBTaxAssessment_BR::adjustableTaxes());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            FBLedgerJournalTrans_FiscalBooks_BR.modifiedFieldValue(fieldStr(FBLedgerJournalTrans_FiscalBooks_BR, TaxType));

            element.enableFieldsActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            TaxType_BR taxType;

            ret = super();

            taxType = str2enum(taxType, this.text());

            if (conFind(FBTaxAssessment_BR::adjustableTaxes(), taxtype) == 0)
            {
                ret = checkFailed("@SYS119633");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FBLedgerJournalTrans_FiscalBooks_BR_State</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            #ISOCountryRegionCodes

            if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::ICMSDiff)
            {
                LogisticsAddressState::lookupStateId(this, SysCountryRegionCode::getCountryRegionIdByIsoCode(#isoBR));
            }
            else
            {
                FiscalEstablishmentIEPerState_BR::lookupStateId(this, FBLedgerJournalTrans_FiscalBooks_BR.FiscalEstablishment_BR, SysCountryRegionCode::getCountryRegionIdByIsoCode(#isoBR));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FBLedgerJournalTrans_FiscalBooks_BR_AdjustmentType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.enableFieldsActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            FBTaxAssessmentAdjustmentType_BR selectedAdjustmentType = FBLedgerJournalTrans_FiscalBooks_BR_AdjustmentType.selection();

            ret = super();

            switch (FBLedgerJournalTrans_FiscalBooks_BR.TaxType)
            {
                case TaxType_BR::ICMS:
                case TaxType_BR::ICMSST:
                case TaxType_BR::ICMSDiff:
                case TaxType_BR::IPI:
                    if (selectedAdjustmentType != FBTaxAssessmentAdjustmentType_BR::General
                        && selectedAdjustmentType != FBTaxAssessmentAdjustmentType_BR::FiscalDocument)
                    {
                        ret = false;
                    }

                    break;

                case TaxType_BR::PIS:
                case TaxType_BR::COFINS:
                    if (selectedAdjustmentType != FBTaxAssessmentAdjustmentType_BR::General)
                    {
                        ret = false;
                    }

                    break;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editAdjustmentCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            //Call the respective form
            if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General
                || (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                    && FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI))
            {
                FBGeneralAdjustmentCode_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.GeneralAdjustmentCode).jumpRef(FBLedgerJournalTrans_FiscalBooks_BR.TaxType);
            }
            else if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument)
            {
                FBFiscalDocumentAdjustmentCodeICMS_BR::find(FBLedgerJournalTrans_FiscalBooks_BR.FiscalDocumentAdjustmentCodeICMS).jumpRef();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup;
            Query                   query                       = new Query();
            QueryBuildRange         queryBuildRange;
            QueryBuildDataSource    queryBuildDataSource;

            if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument
                && FBLedgerJournalTrans_FiscalBooks_BR.TaxType != TaxType_BR::IPI)
            {
                queryBuildDataSource        = query.addDataSource(tableNum(FBFiscalDocumentAdjustmentCodeICMS_BR));
                sysTableLookup = SysTableLookup::newParameters(tableNum(FBFiscalDocumentAdjustmentCodeICMS_BR), this);

                queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBFiscalDocumentAdjustmentCodeICMS_BR, TaxType));
                queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType));

                queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBFiscalDocumentAdjustmentCodeICMS_BR, State));
                queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.State));

                queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBFiscalDocumentAdjustmentCodeICMS_BR, Table52));
                queryBuildRange.value(enum2Value(NoYes::No));

                sysTableLookup.addLookupfield(fieldNum(FBFiscalDocumentAdjustmentCodeICMS_BR, AdjustmentCode));
                sysTableLookup.addLookupfield(fieldNum(FBFiscalDocumentAdjustmentCodeICMS_BR, Description));
            }
            else
            {
                switch (FBLedgerJournalTrans_FiscalBooks_BR.TaxType)
                {
                    case TaxType_BR::ICMS :
                    case TaxType_BR::ICMSST :
                    case TaxType_BR::ICMSDiff :
                        queryBuildDataSource        = query.addDataSource(tableNum(FBGeneralAdjustmentCodeICMS_BR));
                        sysTableLookup = SysTableLookup::newParameters(tableNum(FBGeneralAdjustmentCodeICMS_BR), this);

                        queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCodeICMS_BR, TaxType));
                        queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType));

                        queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCodeICMS_BR, State));
                        queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.State));
                        break;

                    case TaxType_BR::PIS:
                    case TaxType_BR::COFINS:
                        queryBuildDataSource        = query.addDataSource(tableNum(FBGeneralAdjustmentCodePISCOFINS_BR));
                        sysTableLookup = SysTableLookup::newParameters(tableNum(FBGeneralAdjustmentCodePISCOFINS_BR), this);

                        queryBuildRange             = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCodePISCOFINS_BR, TaxType));
                        queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType));

                        findOrCreateRange_W(queryBuildDataSource, fieldNum(FBGeneralAdjustmentCodePISCOFINS_BR, AdjustmentType), strFmt('!%1,!%2',int2str(FBGeneralAdjustmentTypePISCOFINS_BR::DebitBaseIncrease),int2str(FBGeneralAdjustmentTypePISCOFINS_BR::DebitBaseDecrease))).status(RangeStatus::Locked);
                        break;

                    case TaxType_BR::IPI :
                        queryBuildDataSource = query.addDataSource(tableNum(FBGeneralAdjustmentCodeIPI_BR));
                        sysTableLookup = SysTableLookup::newParameters(tableNum(FBGeneralAdjustmentCodeIPI_BR), this);

                        findOrCreateRange_W(queryBuildDataSource, fieldNum(FBGeneralAdjustmentCodeIPI_BR, TaxType), queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType)).status(RangeStatus::Locked);

                        if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General)
                        {
                            findOrCreateRange_W(queryBuildDataSource, fieldNum(FBGeneralAdjustmentCodeIPI_BR, IsGeneral), queryValue(NoYes::Yes)).status(RangeStatus::Locked);
                        }
                        else if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument)
                        {
                            findOrCreateRange_W(queryBuildDataSource, fieldNum(FBGeneralAdjustmentCodeIPI_BR, IsFiscalDocument), queryValue(NoYes::Yes)).status(RangeStatus::Locked);
                        }
                        break;

                    default :
                        queryBuildDataSource        = query.addDataSource(tableNum(FBGeneralAdjustmentCode_BR));
                        sysTableLookup = SysTableLookup::newParameters(tableNum(FBGeneralAdjustmentCode_BR), this);

                        queryBuildRange = queryBuildDataSource.addRange(fieldNum(FBGeneralAdjustmentCode_BR, TaxType));
                        queryBuildRange.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType));
                }

                sysTableLookup.addLookupfield(fieldNum(FBGeneralAdjustmentCode_BR, AdjustmentCode));
                sysTableLookup.addLookupfield(fieldNum(FBGeneralAdjustmentCode_BR, Description));
            }

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            FBLedgerJournalTrans_FiscalBooks_BR_ds.initTaxCodeAndMainAccount();

            element.enableFieldsActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::General)
            {
                ret = FBLedgerJournalTrans_FiscalBooks_BR.validateGeneralAdjustmentCode(FBGeneralAdjustmentCode_BR::findByAdjustmentCode(this.text()).RecId) && ret;
            }
            else if (FBLedgerJournalTrans_FiscalBooks_BR.AdjustmentType == FBTaxAssessmentAdjustmentType_BR::FiscalDocument)
            {
                if (FBLedgerJournalTrans_FiscalBooks_BR.TaxType == TaxType_BR::IPI)
                {
                    ret = FBLedgerJournalTrans_FiscalBooks_BR.validateGeneralAdjustmentCode(FBGeneralAdjustmentCode_BR::findByAdjustmentCode(this.text()).RecId) && ret;
                }
                else
                {
                    ret = FBLedgerJournalTrans_FiscalBooks_BR.validateFiscalDocumentAdjustmentCode(FBFiscalDocumentAdjustmentCodeICMS_BR::findByAdjustmentCode(this.text()).RecId) && ret;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(this, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(this, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxationCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup;
            Query                   query                       = new Query();
            QueryBuildDataSource    queryBuildDataSource        = query.addDataSource(tableNum(TaxationCodeTable_BR));
            QueryBuildRange         queryBuildRangeTaxType      = queryBuildDataSource.addRange(fieldNum(TaxationCodeTable_BR, TaxType));

            sysTableLookup = SysTableLookup::newParameters(tableNum(TaxationCodeTable_BR), this);

            queryBuildRangeTaxType.value(queryValue(FBLedgerJournalTrans_FiscalBooks_BR.TaxType));

            queryBuildDataSource.addRange(fieldNum(TaxationCodeTable_BR, ToDate)).value(queryRange(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), SysQuery::valueUnlimited()) + ',' + SysQuery::valueEmptyString());
            queryBuildDataSource.addRange(fieldNum(TaxationCodeTable_BR, FromDate)).value(queryRange(SysQuery::valueUnlimited(), DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())) + ',' + SysQuery::valueEmptyString());

            sysTableLookup.addLookupfield(fieldNum(TaxationCodeTable_BR, TaxationCode));
            sysTableLookup.addLookupfield(fieldNum(TaxationCodeTable_BR, Description));
            sysTableLookup.addLookupfield(fieldNum(TaxationCodeTable_BR, FiscalValue));

            sysTableLookup.parmQuery(query);

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(this, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Find the current segment index value
            int currentSegmentIndex = LedgerJournalTrans_OffsetAccount1.getCurrentSegmentIndex();

            if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger &&
                LedgerJournalTrans_OffsetAccount1.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount)) ||
                !ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(this, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<CounterField>LineNum</CounterField>
			<Index>NumVoucherIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FBLedgerJournalTrans_FiscalBooks_BR</Name>
			<Table>FBLedgerJournalTrans_FiscalBooks_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdjustmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ComplementaryDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContribAssessmentPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContribCreditBaseSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContribTransferredCreditPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductionCNPJ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FBContribCreditType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentAdjustmentCodeICMS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentLine_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentTaxTrans_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralAdjustmentCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObservationCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAdjustmentProcessNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAdjustmentSourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountOther</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxValue</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FiscalDocument_BR</Name>
			<Table>FiscalDocument_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccessKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuditedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuditedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelAccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelInventoryVoucherId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelReasonComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelVoucherId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFPSId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CityWhereServicePerformed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ComplementaryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ComplementedFiscalDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryCNPJCPF</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryIE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryLogisticsPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Direction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentIssuer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentSeries</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentCCMNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentCNPJCPF</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentIE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishmentTribSubstitutionReg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightChargeTerms</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDeclaration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventoryVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Model</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumericCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingBrand</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreviousVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Purpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCarrier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCarrierLogisticsPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Specie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyCCMNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyCNPJCPF</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyIE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalDiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalGoodsAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalMarkupFreightAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalMarkupInsuranceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalMarkupOtherAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalServicesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeOfCTe</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleLicensePlateNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleLicensePlateState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Version</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinalUser</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentDateTimeOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PresenceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyForeignerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyICMSContributor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSuframaDiscountCOFINSAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSuframaDiscountICMSAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSuframaDiscountPISAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>FBLedgerJournalTrans_FiscalBooks_BR</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FiscalDocumentLine_BR</Name>
			<Table>FiscalDocumentLine_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproximateTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFOP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DIAddition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FCINumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinancialLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightNature</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GrossWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDiscount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Unit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaDiscountCOFINS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaDiscountICMS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaDiscountPIS</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>FBLedgerJournalTrans_FiscalBooks_BR</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS28010</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<TitleDataSource xmlns="">LedgerJournalTrans</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ButtonPostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PostJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FBLedgerJourPostLJTransTaxAssessAdj_BR</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS6098</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ButtonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLedgerJourTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LedgerJourTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Functions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalTransTxt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalTransTxt</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonDeleteTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJourDelTransLJTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonCancelVoucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FBLedgerJournalTransCancelVoucher_BR</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>NewFromInvoicesButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FBICMSAdjustmentCreateFromFiscalDoc_BR</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Primary>Yes</Primary>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PisAndCofinsTaxAssessment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FBLedgerJournalTrans_FixedAsset_BR</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS10340</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonVoucherTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerTransVoucher1</MenuItemName>
										<SaveRecord>No</SaveRecord>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3850</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SelectorGroup</Name>
				<ElementPosition>1204124758</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DisplayJournalLines</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>LedgerJournalLinesDisplayOption</EnumType>
						<Selection>255</Selection>
						<ViewEditMode>Edit</ViewEditMode>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<LeftMargin>10</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<TopMargin>10</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorExist</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>357913940</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FBLedgerJournalTrans_FiscalBooks_BR_FiscalEstablishment_BR</Name>
										<ElementPosition>894784850</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_FiscalEstablishment_BR_FiscalEstablishmentId</Name>
												<DataRelationPath>FiscalEstablishment</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
										<ReferenceField>FiscalEstablishment_BR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editTaxType</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editTaxType</DataMethod>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
										<Label>@GLS205</Label>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FBLedgerJournalTrans_FiscalBooks_BR_State</Name>
										<ElementPosition>1252698790</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>State</DataField>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FBLedgerJournalTrans_FiscalBooks_BR_AdjustmentType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AdjustmentType</DataField>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editAdjustmentCode</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAdjustmentCode</DataMethod>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1789569700</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxAmount</Name>
										<ElementPosition>1968526670</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAmount</DataField>
										<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BottomGroup</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FiscalDocument</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FiscalDocument_BR_FiscalDocumentIssuer</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>FiscalDocumentIssuer</DataField>
												<DataSource>FiscalDocument_BR</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FiscalDocument_BR_FiscalDocumentNumber</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>FiscalDocumentNumber</DataField>
												<DataSource>FiscalDocument_BR</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FiscalDocument_BR_Direction</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Direction</DataField>
												<DataSource>FiscalDocument_BR</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>FiscalDocumentLine_BR_LineNum</Name>
												<ElementPosition>1861152492</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>LineNum</DataField>
												<DataSource>FiscalDocumentLine_BR</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FiscalDocumentLine_BR_ItemId</Name>
												<ElementPosition>2004318068</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ItemId</DataField>
												<DataSource>FiscalDocumentLine_BR</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@GLS50886</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FiscalDocumentLine</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<Caption>@GLS63552</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PostingGroup</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>LedgerJournalTrans_LedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>SegmentedEntry</Type>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>AccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>LedgerJournalTrans_OffsetLedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>SegmentedEntry</Type>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>OffsetAccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>OffsetLedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<Caption>@SYS12919</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OtherDetails</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_ObservationCodeTable</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>FBLedgerJournalTrans_FiscalBooks_BR_ObservationCodeTable_ObservationCode</Name>
														<DataRelationPath>ObservationCodeTable</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<ReferenceField>ObservationCodeTable</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_ContribCreditBaseSource</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ContribCreditBaseSource</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_AssessmentPeriod</Name>
												<Type>Date</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ContribAssessmentPeriod</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TransferredCreditPercentage</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ContribTransferredCreditPercentage</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxAdjustmentSourceType</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxAdjustmentSourceType</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxAdjustmentProcessNum</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxAdjustmentProcessNum</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYP4930047</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TaxDetails</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_FBContribCreditType_BR</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<Label>@SYP4882400</Label>
												<ReferenceField>FBContribCreditType_BR</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxBaseAmount</Name>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxBaseAmount</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxValue</Name>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxValue</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_ComplementaryDescription</Name>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ComplementaryDescription</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
												<DisplayLength>35</DisplayLength>
												<DisplayLengthMode>Fixed</DisplayLengthMode>
												<MultiLine>Yes</MultiLine>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_DeductionCNPJ</Name>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DeductionCNPJ</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FBLedgerJournalTrans_FiscalBooks_BR_TaxationCode</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxationCode</DataField>
												<DataSource>FBLedgerJournalTrans_FiscalBooks_BR</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYP4882609</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Voucher1</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Identification_TransDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Identification_LineNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_LedgerVoucherType_CN</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Identification_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountGroup</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt1</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2355</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxGroup</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_TaxDirectionControl</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxDirectionControl</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxAmountJournal</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>TaxAmountJournal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5878</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountInfoGroup</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11162</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Currency_Triangulation</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Currency_AssessableValue_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DEL_AssessableValue_IN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Currency_MaximumRetailPrice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DEL_MaximumRetailPrice_IN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12227</Caption>
								<DataGroup>CurrencyShow</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>