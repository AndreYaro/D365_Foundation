<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RLedgerTurnoverDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public final class RLedgerTurnoverDialog extends FormRun
{
    Dialog              dialog;
    DateCode            periodCodeValue;
    TransDate           fromDateValue;
    TransDate           toDateValue;
    CurrencyType_RU     currencyTypeValue;
    CurrencyCode        currencyCodeValue;
    MainAccountRange    mainAccountValue;
    MainAccountRange    mainAccountCorrValue;
    container           selectedFieldsOrder;
    container           selectedFieldsExp;
    boolean extended = false;

    DimensionDefault                  dimensionCriteria;

    DimensionEntryControl dimensionEntryControl;

}
]]></Source>
			</Method>
			<Method>
				<Name>addAll</Name>
				<Source><![CDATA[
    void addAll()
    {
        int         it;
        container   allFieldsOrder = this.runBase().type().groupParamNames();

        if (conlen(selectedFieldsOrder) == conlen(allFieldsOrder))
        {
            return;
        }

        for (it = 1; it <= conlen(allFieldsOrder); it++)
        {
            if (! this.runBase().type().canSelectParam(conpeek(allFieldsOrder, it)))
            {
                return;
            }
        }

        for (it = 1; it <= conlen(allFieldsOrder); it++)
        {
            if (! confind(selectedFieldsOrder, conpeek(allFieldsOrder, it)))
            {
                selectedFieldsOrder += conpeek(allFieldsOrder, it);
                selectedFieldsExp   += false;
            }
        }

        element.buildLists();
        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSelected</Name>
				<Source><![CDATA[
    void addSelected(int             _y        = -1,
                     FormListControl _fromList = notSelectedList)
    {
        FormListItem    formListItem;
        int             idx, pos, cur;
        const int listItemY = 2;
        const int halfListItemHeight = 8;
        const int value2  =2;

        if (conFind(selectedFieldsExp, true))
        {
            return;
        }

        pos = conlen(selectedFieldsOrder) + 1;

        idx = _fromList.getNextItem(FormListNext::Selected);
        while (idx != -1)
        {
            formListItem    = _fromList.getItem(idx);
            cur             = confind(selectedFieldsOrder, formListItem.data());

            if (! this.runBase().type().canSelectParam(formListItem.data()))
            {
                return;
            }

            if (cur)
            {
                selectedFieldsOrder = condel(selectedFieldsOrder, cur, 1);
                selectedFieldsExp   = condel(selectedFieldsExp,   cur, 1);
                if (pos > cur)
                {
                    pos --;
                }
            }

            selectedFieldsOrder = conins(selectedFieldsOrder, pos, formListItem.data());
            selectedFieldsExp   = conins(selectedFieldsExp, pos, false);

            idx = _fromList.getNextItem(FormListNext::Selected, idx);
            pos++;
        }

        element.buildLists();
        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustForTab</Name>
				<Source><![CDATA[
    void adjustForTab(boolean useTab = true)
    {
        if (useTab)
            bottomGrp.frameType(FormFrameType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>batch</Name>
				<Source><![CDATA[
    void batch(boolean batchable)
    {
        batch.visible(batchable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLists</Name>
				<Source><![CDATA[
    void buildLists()
    {
        const str arrowsSymbol = 'â‡¿';//U+21FF
        FormListItem    formListItem;
        int             it, idx;
        str             val;
        boolean         expBalance;
        container       allFieldsOrder;

        if (! selectListGroup.visible())
            return;

        allFieldsOrder = this.runBase().type().groupParamNames();

        selectedList.deleteAll();
        notSelectedList.deleteAll();

        for (it = conlen(selectedFieldsOrder); it >= 1; it--)
        {
            val         = conpeek(selectedFieldsOrder, it);
            expBalance  = conpeek(selectedFieldsExp, it);

            formListItem    = new FormListItem(expBalance ? arrowsSymbol + val : val, 0, val);
            idx             = confind(allFieldsOrder, val);
            allFieldsOrder  = condel(allFieldsOrder, idx, 1);

            selectedList.addItem(formListItem);
        }

        for (it = conlen(allFieldsOrder); it >= 1; it--)
        {
            val = conpeek(allFieldsOrder, it);

            formListItem = new FormListItem(val, 0, val);
            notSelectedList.addItem(formListItem);
        }

        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        if (dimensionEntryControl)
        {
            dimensionCriteria = dimensionEntryControl.saveAttributeValueSet();
        }

        dialog.updateServer();
        if (dialog.runBase())
        {
            if (dialog.runBase().checkCloseDialog(this))
                super();
        }
        else
            super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyTypeModified</Name>
				<Source><![CDATA[
    void currencyTypeModified()
    {
        if (! Currency.visible())
            return;

        switch (currencyType.selection())
        {
            case CurrencyType_RU::Standard  :
                currencyCode.text(CompanyInfoHelper::standardCurrency());
                currencyCode.enabled(false);
                break;
            case CurrencyType_RU::Secondary :
                currencyCode.text(CompanyInfoHelper::secondaryCurrency_RU());
                currencyCode.enabled(false);
                break;
            case CurrencyType_RU::Currency  :
                currencyCode.enabled(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delAll</Name>
				<Source><![CDATA[
    void delAll()
    {
        selectedFieldsOrder = connull();
        selectedFieldsExp   = connull();
        element.buildLists();
        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delSelected</Name>
				<Source><![CDATA[
    void delSelected()
    {
        FormListItem    formListItem;
        int             idx = selectedList.getNextItem(FormListNext::Selected);
        int             pos;

        if (conFind(selectedFieldsExp, true))
        {
            return;
        }

        while (idx != -1)
        {
            formListItem        = selectedList.getItem(idx);
            pos                 = confind(selectedFieldsOrder, formListItem.data());
            selectedFieldsOrder = condel(selectedFieldsOrder, pos, 1);
            selectedFieldsExp   = condel(selectedFieldsExp,   pos, 1);
            idx                 = selectedList.getNextItem(FormListNext::Selected, idx);
        }

        element.buildLists();
        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Dialog dialog()
    {
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    void enableButtons()
    {
        boolean         up = true, down = true;
        boolean         disableAll = conFind(selectedFieldsExp, true);
        int             idx = selectedList.getNextItem(FormListNext::Selected);

        switch (idx)
        {
            case -1:
                up = false;
                down = false;
                break;
            case 0:
                up   = false;
                down = selectedList.getCount() - 1 == idx ? false : true;
                break;
            case selectedList.getCount() - 1:
                down = false;
        }

        upButton.enabled(! disableAll && up);
        downButton.enabled(! disableAll && down);
        addAllButton.enabled(! disableAll && notSelectedList.getCount());
        delAllButton.enabled(! disableAll && selectedList.getCount());
        addButton.enabled(! disableAll && notSelectedList.getNextItem(FormListNext::Selected) != -1);
        delButton.enabled(! disableAll && selectedList.getNextItem(FormListNext::Selected) != -1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>expandAll</Name>
				<Source><![CDATA[
    void expandAll()
    {
        int idx;
        int maxPos = conlen(selectedFieldsExp);

        if (! this.runBase().type().settlementTableId())
        {
            maxPos--;
        }

        for (idx = 1; idx <= maxPos; idx++)
        {
            selectedFieldsExp = conpoke(selectedFieldsExp, idx, ! element.extended);
        }
        element.extended = !element.extended;
        element.buildLists();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlValue</Name>
				<Source><![CDATA[
    container getControlValue()
    {
        [periodCodeValue, fromDateValue, toDateValue, currencyTypeValue, currencyCodeValue, mainAccountValue, mainAccountCorrValue, selectedFieldsOrder, selectedFieldsExp, dimensionCriteria] = [periodCode.text(),
                          fromDate.dateValue(),
                          toDate.dateValue(),
                          currencyType.selection(),
                          currencyCode.text(),
                          mainAccount.text(),
                          mainAccountCorr.text(),
                          selectedFieldsOrder,
                          selectedFieldsExp,
                          dimensionEntryControl ?
                          dimensionEntryControl.saveAttributeValueSet() : 0];

        return [periodCodeValue, fromDateValue, toDateValue, currencyTypeValue, currencyCodeValue, mainAccountValue, mainAccountCorrValue, selectedFieldsOrder, selectedFieldsExp, dimensionCriteria];
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        RLedgerTurnoverEngine   RLedgerTurnoverEngine;
        DialogGroup             dimensionCriteriaDialogGroup;
        int                     it = 1;

        super();

        dialog = this.args().caller();

        if (this.runBase().canGoBatch())
        {
            tab.showTabs(true);
            this.adjustForTab();
        }

        this.runBase().dialogFormRun(dialog.formRun());

        [periodCodeValue, fromDateValue, toDateValue, currencyTypeValue, currencyCodeValue, mainAccountValue, mainAccountCorrValue, selectedFieldsOrder, selectedFieldsExp, dimensionCriteria] = this.runBase().getDialogLastValue();

        while (it <= conLen(selectedFieldsOrder))
        {
            if (! this.runBase().type().canSelectParam(conpeek(selectedFieldsOrder, it)))
            {
                selectedFieldsOrder = condel(selectedFieldsOrder, it, 1);
                selectedFieldsExp   = condel(selectedFieldsExp,   it, 1);
            }
            else
            {
                it++;
            }
        }

        periodCode.text(periodCodeValue);
        fromDate.dateValue(fromDateValue);
        toDate.dateValue(toDateValue);
        currencyType.selection(currencyTypeValue);
        currencyCode.text(currencyCodeValue);
        mainAccount.text(mainAccountValue);
        mainAccountCorr.text(mainAccountCorrValue);

        this.updateDesign();
        this.currencyTypeModified();

        selectedList.addColumn(0, new FormListColumn("@SYS3852"));
        notSelectedList.addColumn(0, new FormListColumn("@SYS3852"));

        element.buildLists();

        RLedgerTurnoverEngine = this.runBase() as RLedgerTurnoverEngine;
        dimensionCriteriaDialogGroup = RLedgerTurnoverEngine.dimensionCriteriaGroup();

        if (dimensionCriteriaDialogGroup && !dimensionEntryControl)
        {
            dimensionEntryControl = DimensionEntryControlBuild::addToDialogGroup(dimensionCriteriaDialogGroup, classstr(LedgerDimensionEntryController), 'DimensionEntryControl1');

            if (dimensionEntryControl)
            {
                dimensionEntryControl.parmControlLabelText("@SYS101181");
                dimensionEntryControl.parmDisplayValues(true);
                dimensionEntryControl.parmCompany(curext());

                dimensionEntryControl.reactivate();
                //dimensionEntryControl.loadAttributeValueSet(dimensionCriteria);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    void moveDown()
    {
        FormListItem    formListItem;
        int             idx = selectedList.getNextItem(FormListNext::Selected),
                        it, pos;
        str             val;
        boolean         expBalance;
        container       move;

        while (idx != -1)
        {
            formListItem    = selectedList.getItem(idx);
            move           += formListItem.data();
            idx             = selectedList.getNextItem(FormListNext::Selected, idx);
        }

        for (it = conlen(move); it >= 1; it--)
        {
            val         = conpeek(move, it);
            pos         = confind(selectedFieldsOrder, val);
            expBalance  = conpeek(selectedFieldsExp, pos);

            if (pos < conlen(selectedFieldsOrder) && ! confind(move, conpeek(selectedFieldsOrder, pos + 1)))
            {
                selectedFieldsOrder = condel(selectedFieldsOrder, pos, 1);
                selectedFieldsOrder = conins(selectedFieldsOrder, pos + 1, val);

                selectedFieldsExp   = condel(selectedFieldsExp, pos, 1);
                selectedFieldsExp   = conins(selectedFieldsExp, pos + 1, expBalance);
            }
        }

        element.buildLists();

        idx = selectedList.getNextItem(FormListNext::All);
        while (idx != -1)
        {
            formListItem = selectedList.getItem(idx);
            if (confind(move, formListItem.data()))
            {
                formListItem.stateSelected(true);
                selectedList.delete(idx);
                selectedList.addItem(formListItem);
                formListItem.idx(idx);
            }
            idx = selectedList.getNextItem(FormListNext::All, idx);
        }

        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    void moveUp()
    {
        FormListItem    formListItem;
        int             idx = selectedList.getNextItem(FormListNext::Selected),
                        it, pos;
        str             val;
        boolean         expBalance;
        container       move;

        while (idx != -1)
        {
            formListItem    = selectedList.getItem(idx);
            move           += formListItem.data();
            idx             = selectedList.getNextItem(FormListNext::Selected, idx);
        }

        for (it = 1; it <= conlen(move); it++)
        {
            val         = conpeek(move, it);
            pos         = confind(selectedFieldsOrder, val);
            expBalance  = conpeek(selectedFieldsExp, pos);

            if (pos > 1 && ! confind(move, conpeek(selectedFieldsOrder, pos - 1)))
            {
                selectedFieldsOrder = condel(selectedFieldsOrder, pos, 1);
                selectedFieldsOrder = conins(selectedFieldsOrder, pos - 1, val);

                selectedFieldsExp   = condel(selectedFieldsExp, pos, 1);
                selectedFieldsExp   = conins(selectedFieldsExp, pos - 1, expBalance);
            }
        }

        element.buildLists();

        idx = selectedList.getNextItem(FormListNext::All);
        while (idx != -1)
        {
            formListItem    = selectedList.getItem(idx);
            if (confind(move, formListItem.data()))
            {
                formListItem.stateSelected(true);
                selectedList.delete(idx);
                selectedList.addItem(formListItem);
                formListItem.idx(idx);
            }
            idx = selectedList.getNextItem(FormListNext::All, idx);
        }

        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        super();

        mainAccount.setFocus();
        accounts.visible(mainAccount.visible());
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    RLedgerTurnoverEngine runBase()
    {
        return dialog.runBase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        period.         visible(this.runBase().type().fieldTransDate()     != connull());
        currency.       visible(this.runBase().type().fieldCurrencyCode()  != connull());
        accounts.       visible(this.runBase().type().fieldMainAccount()   != connull());
        selectListGroup.visible(this.runBase().type().groupParamNames()    != connull());
        mainAccountCorr.visible(this.runBase().type().subTransTableId()    == tableNum(GeneralJournalAccountEntry));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PeriodCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean          ret = super();
            LedgerPeriodCode ledgerPeriodCode;

            if (ret && this.text())
            {
                ledgerPeriodCode = LedgerPeriodCode::find(this.text());
                if (ledgerPeriodCode)
                {
                    fromDate.dateValue(ledgerPeriodCode.fromDate());
                    toDate.dateValue(ledgerPeriodCode.toDate());
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CurrencyType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.currencyTypeModified();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.moveUp();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.moveDown();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpandSelected</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.extended)
            {
                element.expandAll();
            }
            else
            {
                int pos = selectedList.getNextItem(FormListNext::Selected);
                int maxPos = conlen(selectedFieldsExp);

                if (! element.runBase().type().settlementTableId())
                {
                    maxPos--;
                }

                if (pos <= maxPos)
                {
                    for (int idx = pos+1; idx >= 1; idx--)
                    {
                        selectedFieldsExp = conpoke(selectedFieldsExp, idx, true);
                    }
                    element.extended = true;
                    element.buildLists();
                    super();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpandAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.expandAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectedList</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(int _idx, anytype _data)
        {
            super(_idx, _data);
            element.enableButtons();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.addAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.addSelected();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DelButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.delSelected();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DelAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.delAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NotSelectedList</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(int _idx, anytype _data)
        {
            super(_idx, _data);
            element.enableButtons();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AlignChild xmlns="">No</AlignChild>
		<AlignChildren xmlns="">No</AlignChildren>
		<Caption xmlns="">@SYS24736</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FieldTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>StaticGroup</Name>
								<ElementPosition>805306366</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>StaticHeaderGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Period</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PeriodCode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>DateCode</ExtendedDataType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>PeriodInterval</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>FromDate</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Date</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ExtendedDataType>FromDate</ExtendedDataType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>ToDate</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Date</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ExtendedDataType>ToDate</ExtendedDataType>
															</AxFormControl>
														</Controls>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<Caption>@SYS23339</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Currency</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>CurrencyType</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<EnumType>CurrencyType_RU</EnumType>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CurrencyCode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>CurrencyCode</ExtendedDataType>
													</AxFormControl>
												</Controls>
												<Caption>@SYS7572</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Accounts</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>AccountNum</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>MainAccount</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ExtendedDataType>MainAccountRange</ExtendedDataType>
																<ReplaceOnLookup>No</ReplaceOnLookup>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>MainAccountCorr</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ExtendedDataType>MainAccountRange</ExtendedDataType>
																<Label>@GLS102172</Label>
																<ReplaceOnLookup>No</ReplaceOnLookup>
															</AxFormControl>
														</Controls>
														<Caption>@GLS103791</Caption>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<ArrangeWhen>Auto</ArrangeWhen>
										<Columns>3</Columns>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupSortGroup</Name>
								<ElementPosition>1207959549</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>215</Height>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SelectListGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>200</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>UpDownGroup</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>25</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>UpButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<BackStyle>Transparent</BackStyle>
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>Up</NormalImage>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>DownButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<BackStyle>Transparent</BackStyle>
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>Down</NormalImage>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpandSelected</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@CLIContainers:ContextMenu_FastTabExpand</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpandAllButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1879048189</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<BackStyle>Transparent</BackStyle>
														<Text>@ApplicationFoundation:ContextMenuExpandAll</Text>
													</AxFormControl>
												</Controls>
												<Columnspace>0</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<TopMargin>50</TopMargin>
												<TopMarginMode>Fixed</TopMarginMode>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>SelectedGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>195</Height>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>200</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormListViewControl">
														<Name>SelectedList</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<DragDrop>Manual</DragDrop>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>ListView</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<RowSelect>Yes</RowSelect>
														<SingleSelection>No</SingleSelection>
														<ViewType>List</ViewType>
													</AxFormControl>
												</Controls>
												<Caption>@SYS27563</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>SelectButtonGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AddAllButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>715827882</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS75519</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AddButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS75362</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>DelButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS75360</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>DelAllButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1789569705</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>25</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS75518</Text>
													</AxFormControl>
												</Controls>
												<HideIfEmpty>No</HideIfEmpty>
												<TopMargin>20</TopMargin>
												<TopMarginMode>Fixed</TopMarginMode>
												<FramePosition>Inside</FramePosition>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>NotSelectedGroup</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>195</Height>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormListViewControl">
														<Name>NotSelectedList</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<DragDrop>Manual</DragDrop>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>ListView</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<RowSelect>Yes</RowSelect>
														<SingleSelection>No</SingleSelection>
														<ViewType>List</ViewType>
													</AxFormControl>
												</Controls>
												<Caption>@SYS27562</Caption>
											</AxFormControl>
										</Controls>
										<ArrangeWhen>Auto</ArrangeWhen>
										<Columns>4</Columns>
										<Caption>@GLS105071</Caption>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group_Group</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>dialogStartGrp</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>RightButtonGrp</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoLeft</LeftMode>
										<Skip>Yes</Skip>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ArrangeMethod>Vertical</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Skip>Yes</Skip>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>6</VerticalSpacing>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>Batch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>