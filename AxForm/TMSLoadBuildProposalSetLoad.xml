<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TMSLoadBuildProposalSetLoad</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TMSLoadBuildProposalSetLoad extends FormRun
{
    FormRun                 callerForm;
    TMSLoadBuildSessionId   loadBuildSessionId;
    Set                     proposedLoadContentIds;
    TMSLoadId               proposedLoadId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the dialog from the load building form.
    /// </summary>
    public void init()
    {
        super();

        boolean argsCorrect = true;

        Args args = element.args();
        if (args)
        {
            callerForm = args.caller() as FormRun;
            argsCorrect = callerForm && formHasMethod(callerForm, identifierStr(getLoadBuildSessionId));
        }
        else
        {
            argsCorrect = false;
        }

        if (!argsCorrect)
        {
            throw error(error::wrongUseOfFunction(funcname()));
        }

        loadBuildSessionId = callerForm.getLoadBuildSessionId();

        proposedLoadContentIds = new Set(Types::Int64);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        proposedLoadId = ProposedLoad.valueStr();
        if (!this.isValidProposedLoadId(proposedLoadId))
        {
            return;
        }

        this.retrieveSelectedLoadContents();
        this.updateSelectedLoadContents();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSelectedLoadContents</Name>
				<Source><![CDATA[
    private void retrieveSelectedLoadContents()
    {
        FormDataSource proposedLoadContentDS;
        Common argsRecord = element.args().record();
        if (argsRecord)
        {
            proposedLoadContentDS = FormDataUtil::getFormDataSource(argsRecord);

            TMSProposedLoadContent firstLoadContentFromDS = proposedLoadContentDS.getFirst(true);
            for (TMSProposedLoadContent proposedLoadContent = firstLoadContentFromDS ? firstLoadContentFromDS : proposedLoadContentDS.cursor();
                proposedLoadContent;
                proposedLoadContent = proposedLoadContentDS.getNext())
            {
                proposedLoadContentIds.add(proposedLoadContent.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSelectedLoadContents</Name>
				<Source><![CDATA[
    private void updateSelectedLoadContents()
    {
        if (!proposedLoadContentIds.empty())
        {
            TMSProposedLoadContent::setReferenceToProposedLoad(proposedLoadContentIds, proposedLoadId);
            if (formHasMethod(callerForm, identifierStr(researchProposedLoads)))
            {
                callerForm.researchProposedLoads();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidProposedLoadId</Name>
				<Source><![CDATA[
    public boolean isValidProposedLoadId(TMSLoadId _proposedLoadId, boolean _showWarning = true)
    {
        if (!TMSProposedLoad::existWithSessionID(_proposedLoadId, loadBuildSessionId))
        {
            return _showWarning ? checkFailed("@TRX:TRX_Task_Error_InvalidProposedLoad") : false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ProposedLoad</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TMSProposedLoad::lookupLoadId(this, loadBuildSessionId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            TMSLoadId proposedLoadIdLocal = ProposedLoad.valueStr();
            return element.isValidProposedLoadId(proposedLoadIdLocal, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@TRX:TRX_Task_Title_SelectProposedLoad</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProposedLoad</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@WAX258</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
