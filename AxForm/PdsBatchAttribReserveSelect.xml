<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PdsBatchAttribReserveSelect</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PdsBatchAttribReserveSelect extends FormRun
{
    InventMovement                  movement;
    InventTransIdSum                transIdSum;
    int                             ctr;
    ModuleAxapta                    caller;
    InventTrans                     inventTrans;

    [SysObsolete('The inventToSecondaryUnitConverter variable is deprecated, used productInventToSecondaryUnitConverter instead', false, 31\03\2019)]
    UnitOfMeasureConverter_Product  inventToSecondaryUnitConverter;
        
    EcoResProductUnitConverter      productInventToSecondaryUnitConverter;

    #define.DIALOG_WIDTH(350)
    #define.DIALOG_CONTROL_WIDTH(150)
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        TmpPdsBatchAttribSelect sel;
        TmpPdsBatchAttribSelect curSel;

        sel.setTmpData(tmpPdsBatchAttribSelect);
        curSel.setTmpData(element.args().record());

        ttsbegin;

        delete_from curSel;

        while select sel
        {
            curSel.clear();
            curSel.data(sel);
            curSel.insert();
        }
        ttscommit;
        element.args().caller().refreshSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createUnitConverter</Name>
				<Source><![CDATA[
    private EcoResProductUnitConverter createUnitConverter(InventMovement _movement)
    {
        InventTable inventTable = _movement.inventTable();
        EcoResProductUnitConverter converter = EcoResProductUnitConverter::newGivenUnitSymbolsForReleasedProduct(
                                                    inventTable.ItemId,
                                                    _movement.InventDimId(),
                                                    inventTable.inventUnitId(),
                                                    _movement.transUnitId(),
                                                    NoYes::No,
                                                    NoYes::No);

        return converter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ctr = 1;
        if (!element.args().caller() || !element.args().dataset())
        {
            throw error("@PRO467");
        }

        if (element.args().parmEnumType() == enumnum(ModuleAxapta))
        {
            caller = element.args().parmEnum();
        }

        if (caller != ModuleAxapta::Inventory)
        {
            movement = element.movement();
        }

        super();

        customerAttributes.enabled(caller == ModuleAxapta::SalesOrder);
        lot.visible(caller != ModuleAxapta::Inventory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public  ItemId itemId()
    {
        FormRun     fr;
        InventTable inventTable;

        if (caller != ModuleAxapta::Inventory)
        {
            return element.movement().itemId();
        }

        fr = element.args().caller();

        if (fr != null && fr.args().dataset() == tablenum(InventTable))
        {
            inventTable = fr.args().record();

            return inventTable.ItemId;
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPdsBatchAttribValue</Name>
				<Source><![CDATA[
    public void lookupPdsBatchAttribValue(FormStringControl   _formControl)
    {
        switch (tmpPdsBatchAttribSelect.pdsBatchAttrib().PdsBatchAttribType)
        {
            case PdsBatchAttribType::Date :
                _formControl.performFormLookup(
                    PdsBatchAttrib::lookupDate(element));
                break;
            case PdsBatchAttribType::Enumerate:
                PdsBatchAttribEnumValues::lookupPdsBatchAttribEnumValues(
                        _formControl,
                        tmpPdsBatchAttribSelect.PdsBatchAttribId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>movement</Name>
				<Source><![CDATA[
    public InventMovement movement()
    {
        FormRun fr;

        if (!movement)
        {
            fr = element.args().caller();
            movement = InventMovement::constructNoThrow(fr.args().record());
            if (movement)
            {
                transIdSum = movement.transIdSum();

                productInventToSecondaryUnitConverter = element.createUnitConverter(movement);
            }
            else
            {
                this.parmInventTrans(element.args().caller().inventTrans());

                movement = InventMovement::constructNoThrow(inventTrans);

                transIdSum = null;
            }
        }
        return movement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTrans</Name>
				<Source><![CDATA[
    public void parmInventTrans(InventTrans _trans)
    {
        inventTrans = _trans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        #COSNumbers

        tmpPdsBatchAttribSelect_PdsBatchAttribValue1.lookupButton(#3);
        tmpPdsBatchAttribSelect_PdsBatchAttribValue2.lookupButton(#3);

        switch (PdsBatchAttrib::find(
                    tmpPdsBatchAttribselect.PdsBatchAttribId).PdsBatchAttribType)
        {
            case PdsBatchAttribType::Enumerate,
                PdsBatchAttribType::Date:
                tmpPdsBatchAttribSelect_PdsBatchAttribValue1.lookupButton(0);
                tmpPdsBatchAttribSelect_PdsBatchAttribValue2.lookupButton(0);
                break;

            default :
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpPdsBatchAttribSelect</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            TmpPdsBatchAttribSelect     sel;
            TmpPdsBatchAttribSelect     curSel;
            InventMovement              mov = element.movement();

            super();

            //
            // prefill the table with the current selection
            // from the caller
            //
            curSel.setTmpData(element.args().record());

            sel.setTmpData(tmpPdsBatchAttribSelect);
            delete_from sel;

            while select curSel
                where curSel.PdsBatchAttribId != ""
            {
                sel.clear();
                sel.data(curSel);

                sel.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>batchAttribValue2</Name>
						<Source><![CDATA[
        public edit PdsBatchAttribValue batchAttribValue2(
            boolean                 _set,
            TmpPdsBatchAttribSelect _select,
            PdsBatchAttribValue     _value)
        {
            PdsBatchAttrib      attrib;

            attrib = PdsBatchAttrib::find(_select.PdsBatchAttribId);
            if (_set)
            {
                if (attrib.RecId)
                {
                    if (attrib.isValidAttribValueType(_value,true))
                    {
                        _select.PdsBatchAttribValue2 = attrib.locale2Storage(_value);
                    }
                }
            }

            return attrib.storage2Locale(_select.PdsBatchAttribValue2);
        }

]]></Source>
					</Method>
					<Method>
						<Name>batchAttribValue1</Name>
						<Source><![CDATA[
        public edit PdsBatchAttribValue batchAttribValue1(
            boolean                 _set,
            TmpPdsBatchAttribSelect _select,
            PdsBatchAttribValue     _value)
        {
            PdsBatchAttrib      attrib;

            attrib = PdsBatchAttrib::find(_select.PdsBatchAttribId);
            if (_set)
            {
                if (attrib.RecId)
                {
                    if (attrib.isValidAttribValueType(_value,true))
                    {
                        _select.PdsBatchAttribValue1 = attrib.locale2Storage(_value);
                    }
                }
            }
            return attrib.storage2Locale(_select.PdsBatchAttribValue1);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PdsBatchAttribId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret)
                {
                    if (tmpPdsBatchAttribSelect.PdsBatchAttribId
                        && (!(PdsBatchAttribByItem::existsAllForItem(element.ItemId())))
                        && (!(PdsBatchAttribByItem::existItemId(element.ItemId(),
                                                    tmpPdsBatchAttribSelect.PdsBatchAttribId,
                                                    TableGroupAll::Table)
                            || PdsBatchAttribByItem::existInGroup(element.ItemId(),
                                                    tmpPdsBatchAttribSelect.PdsBatchAttribId,
                                                    TableGroupAll::Table))))
                    {
                        return checkFailed(strfmt("@PRO1985",
                                                    tmpPdsBatchAttribSelect.PdsBatchAttribId,
                                                    element.ItemId()));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                PdsBatchAttrib::lookupPdsBatchAttributes(_formControl, element.itemId());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventTransMovement</Name>
				<Methods>
					<Method>
						<Name>movementReservOrderedUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservOrdered  movementReservOrderedUnit()
        {
            return transIdSum ? -productInventToSecondaryUnitConverter.convertValue(transIdSum.reserveOrdered()) : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>unitId</Name>
						<Source><![CDATA[
        public display UnitOfMeasureSymbol unitId()
        {
            InventMovement  lclMov;

            lclMov = element.movement();

            return lclMov ? lclMov.transUnitId() : '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWUnitId</Name>
						<Source><![CDATA[
        public display PdsCWUnitId pdsCWUnitId(InventTrans _inventTrans)
        {
            PdsCWUnitId cwUnitId;

            if (PdsGlobal::pdsIsCWItem(_inventTrans.ItemId))
            {
                cwUnitId = PdsCatchWeightItem::pdsCWUnitId(_inventTrans.ItemId);
            }

            return cwUnitId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementOnOrder</Name>
						<Source><![CDATA[
        public display PdsCWOnOrder pdsCWMovementOnOrder(InventTrans _inventTrans)
        {
            PdsCWOnOrder    cwOnOrder = 0;

            if (transIdSum && PdsGlobal::pdsIsCWItem(_inventTrans.ItemId))
            {
                cwOnOrder = transIdSum.pdsCWOnOrder();
            }

            return -cwOnOrder;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementReservOrdered</Name>
						<Source><![CDATA[
        public display PdsCWReservOrdered pdsCWMovementReservOrdered(InventTrans _inventTrans)
        {
            PdsCWReservOrdered  cwReserveOrdered = 0;

            if (transIdSum && PdsGlobal::pdsIsCWItem(_inventTrans.ItemId))
            {
                cwReserveOrdered = transIdSum.pdsCWReserveOrdered();
            }
            return -cwReserveOrdered;
        }

]]></Source>
					</Method>
					<Method>
						<Name>movementReservPhysicalUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservPhysical movementReservPhysicalUnit()
        {
            return transIdSum ? -productInventToSecondaryUnitConverter.convertValue(transIdSum.reservPhysical()) : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>movementOnOrderUnit</Name>
						<Source><![CDATA[
        public display InventQtyOnOrder movementOnOrderUnit()
        {
            return transIdSum ? -productInventToSecondaryUnitConverter.convertValue(transIdSum.onOrder()) : 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementReservPhysical</Name>
						<Source><![CDATA[
        public display PdsCWReservPhysical pdsCWMovementReservPhysical(
            InventTrans _inventTrans)
        {
            PdsCWReservPhysical cwReservePhysical = 0;

            if (transIdSum && PdsGlobal::pdsIsCWItem(_inventTrans.ItemId))
            {
                cwReservePhysical = transIdSum.pdsCWReservPhysical();
            }
            return -cwReservePhysical;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTransOriginMovement</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (caller != ModuleAxapta::Inventory)
            {
                movement = null;
                movement = element.movement();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (caller != ModuleAxapta::Inventory)
            {
                this.query().dataSourceTable(tablenum(InventTransOrigin))
                        .addDynalink(fieldnum(InventTransOrigin,RecId),
                          element.args().caller().inventTransMovement(),
                          fieldnum(InventTrans,InventTransOrigin));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Reset</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            TmpPdsBatchAttribSelect tmpAttrSel;

            super();

            tmpAttrSel.setTmpData(tmpPdsBatchAttribSelect);
            delete_from tmpAttrSel;

            tmpPdsBatchAttribSelect_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GetTemplate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Dialog                              dlg;
            DialogField                         df1;
            PdsBatchAttribSelectAttribTemplate  batchAttribTemplate;
            TmpPdsBatchAttribSelect             tmpSel;

            dlg = new Dialog("@PRO1627");
            dlg.form().design().width(#DIALOG_WIDTH);

            df1 = dlg.addField(extendedtypestr(PdsBatchAttribSelectTemplateId));
            df1.fieldControl().width(#DIALOG_CONTROL_WIDTH);

            tmpSel.setTmpData(tmpPdsBatchAttribSelect);
            if (dlg.run())
            {
                try
                {
                    ttsbegin;

                    delete_from tmpSel;

                    while select batchAttribTemplate
                        where batchAttribTemplate.PdsBatchSelectAttribTemplateId
                                    == df1.value() //dfl.text()
                    {
                        tmpSel.clear();
                        tmpSel.PdsBatchAttribId       =
                            batchAttribTemplate.PdsBatchAttribId;
                        tmpSel.PdsBatchAttribOpr1     =
                            batchAttribTemplate.PdsBatchAttribOpr1;
                        tmpSel.PdsBatchAttribOpr2     =
                            batchAttribTemplate.PdsBatchAttribOpr2;
                        tmpSel.PdsBatchAttribValue1   =
                            batchAttribTemplate.PdsBatchAttribValue1;
                        tmpSel.PdsBatchAttribValue2   =
                            batchAttribTemplate.PdsBatchAttribValue2;

                        if (PdsBatchAttrib::find(
                                tmpSel.PdsBatchAttribId).PdsBatchAttribType
                                == PdsBatchAttribType::String)
                        {
                            tmpSel.PdsBatchAttribOpr2 = PdsBatchAttribOpr::empty;
                            tmpSel.PdsBatchAttribValue2 = strMin();
                        }

                        tmpSel.insert();
                    }
                    ttscommit;
                }
                catch (Exception::Error)
                {
                    ttsabort;
                }
                tmpPdsBatchAttribSelect_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PutTemplate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            PdsBatchAttribSelectTemplate        batchTemplate;
            PdsBatchAttribSelectAttribTemplate  batchAttribTemplate;
            TmpPdsBatchAttribSelect             tmpSel;

            Args args = new Args(formstr(PdsBatchAttribSelectSaveTemplate));
            FormRun formRun = ClassFactory::formRunClassOnClient(args);
            formRun.init();
            formRun.run();
            formRun.wait();

            tmpSel.setTmpData(tmpPdsBatchAttribSelect);

            if (formRun.closedOk())
            {
                try
                {
                    ttsbegin;
                    delete_from batchTemplate
                        where batchTemplate.PdsBatchSelectAttribTemplateId
                            == formRun.getTemplateId();

                    delete_from batchAttribTemplate
                        where batchAttribTemplate.PdsBatchSelectAttribTemplateId
                            == formRun.getTemplateId();

                    batchTemplate.PdsBatchSelectAttribTemplateId =
                        formRun.getTemplateId();
                    batchTemplate.Description =
                        formRun.getDescription();
                    batchTemplate.insert();

                    while select tmpSel
                    {
                        batchAttribTemplate.clear();
                        batchAttribTemplate.PdsBatchSelectAttribTemplateId =
                            batchTemplate.PdsBatchSelectAttribTemplateId;
                        batchAttribTemplate.PdsBatchAttribId               =
                            tmpSel.PdsBatchAttribId;
                        batchAttribTemplate.PdsBatchAttribOpr1             =
                            tmpSel.PdsBatchAttribOpr1;
                        batchAttribTemplate.PdsBatchAttribOpr2             =
                            tmpSel.PdsBatchAttribOpr2;
                        batchAttribTemplate.PdsBatchAttribValue1           =
                            tmpSel.PdsBatchAttribValue1;
                        batchAttribTemplate.PdsBatchAttribValue2           =
                            tmpSel.PdsBatchAttribValue2;
                        batchAttribTemplate.insert();
                    }
                    ttscommit;
                }
                catch (Exception::Error)
                {
                    ttsabort;
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemAttributes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            #define.datemin(1\1\1980)

            PdsBatchAttribByItem        pdsBatchAttribByItem;
            PdsBatchAttribByAttribGroup pdsBatchAttribByAttribGroup;
            boolean                     foundAttrib = false;
            TmpPdsBatchAttribSelect     tmpSel;
            PdsBatchAttrib              attrib;

            super();

            tmpSel.setTmpData(tmpPdsBatchAttribSelect);
            delete_from tmpSel;

            while select PdsBatchAttribRelation, PdsBatchAttribMin, PdsBatchAttribMax
                from   pdsBatchAttribByItem
                where  pdsBatchAttribByItem.PdsBatchAttribItemId == element.itemId()
                    && pdsBatchAttribByItem.PdsBatchAttribCode   == TableGroupAll::Table
            {
                tmpSel.clear();
                tmpSel.PdsBatchAttribId   = pdsBatchAttribByItem.PdsBatchAttribRelation;
                tmpSel.PdsBatchAttribOpr1 = PdsBatchAttribOpr::MoreEqual;
                tmpSel.PdsBatchAttribOpr2 = PdsBatchAttribOpr::LessEqual;

                attrib = tmpSel.pdsBatchAttrib();
                switch (attrib.PdsBatchAttribType)
                {
                    case PdsBatchAttribType::Enumerate:
                        tmpSel.PdsBatchAttribValue1 =
                            (select firstonly PdsAttribEnumValue
                                from  pdsBatchAttribEnumValues
                                order by PdsAttribEnumSeq asc
                                where pdsBatchAttribEnumValues.PdsBatchAttribId
                                    == tmpSel.PdsBatchAttribId).PdsAttribEnumValue;
                        tmpSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                        tmpSel.PdsBatchAttribValue2 = '';
                        break;

                    case PdsBatchAttribType::String:
                        tmpSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;

                        tmpSel.PdsBatchAttribValue1 = strMin();
                        tmpSel.PdsBatchAttribValue2 = strMin();
                        break;

                    case PdsBatchAttribType::Date:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(#DateMin);
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(maxdate());
                        break;
                    case PdsBatchAttribType::Integer:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(
                                real2int(pdsBatchAttribByItem.PdsBatchAttribMin));
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(
                                real2int(pdsBatchAttribByItem.PdsBatchAttribMax));
                        break;
                    case PdsBatchAttribType::Realnumber:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(
                                pdsBatchAttribByItem.PdsBatchAttribMin);
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(
                                pdsBatchAttribByItem.PdsBatchAttribMax);
                        break;
                }

                tmpSel.insert();

                foundAttrib = true;
            }

            while select PdsBatchAttribRelation, PdsBatchAttribMin, PdsBatchAttribMax
                from pdsBatchAttribByItem
                where  pdsBatchAttribByItem.PdsBatchAttribItemId == element.itemId()
                    && pdsBatchAttribByItem.PdsBatchAttribCode   == TableGroupAll::GroupId
                join  PdsBatchAttribAttribId,
                      PdsBatchAttribMin,
                      PdsBatchAttribMax
                from pdsBatchAttribByAttribGroup
                where pdsBatchAttribByAttribGroup.PdsBatchAttribGroupId
                        == pdsBatchAttribByItem.PdsBatchAttribRelation
            {
                tmpSel.clear();
                tmpSel.PdsBatchAttribId   =  pdsBatchAttribByAttribGroup.PdsBatchAttribAttribId;
                tmpSel.PdsBatchAttribOpr1 =  PdsBatchAttribOpr::MoreEqual;
                tmpSel.PdsBatchAttribOpr2 =  PdsBatchAttribOpr::LessEqual;

                attrib = tmpSel.pdsBatchAttrib();
                switch (attrib.PdsBatchAttribType)
                {
                    case PdsBatchAttribType::Enumerate:
                        tmpSel.PdsBatchAttribValue1 =
                            (select firstonly PdsAttribEnumValue
                                from pdsBatchAttribEnumValues
                                order by PdsAttribEnumSeq asc
                                where pdsBatchAttribEnumValues.PdsBatchAttribId
                                        == tmpSel.PdsBatchAttribId
                                ).PdsAttribEnumValue;
                        tmpSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                        tmpSel.PdsBatchAttribValue2 = '';
                        break;

                    case PdsBatchAttribType::String:
                        tmpSel.PdsBatchAttribOpr2 = PdsBatchAttribOpr::empty;

                        tmpSel.PdsBatchAttribValue1 = strMin();
                        tmpSel.PdsBatchAttribValue2 = strMin();
                        break;

                    case PdsBatchAttribType::Date:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(#DateMin);
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(maxdate());
                        break;

                    case PdsBatchAttribType::Integer:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(
                                real2int(
                                    pdsBatchAttribByAttribGroup.PdsBatchAttribMin));
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(
                                real2int(
                                    pdsBatchAttribByAttribGroup.PdsBatchAttribMax));
                        break;

                    case PdsBatchAttribType::Realnumber:
                        tmpSel.PdsBatchAttribValue1
                            = attrib.value2Storage(
                                pdsBatchAttribByAttribGroup.PdsBatchAttribMin);
                        tmpSel.PdsBatchAttribValue2
                            = attrib.value2Storage(
                                pdsBatchAttribByAttribGroup.PdsBatchAttribMax);
                        break;
                }

                tmpSel.insert();

                foundAttrib = true;
            }

            select firstonly RecId from pdsBatchAttribByItem
            where pdsBatchAttribByItem.PdsBatchAttribItemId == element.itemId()
                && pdsBatchAttribByItem.PdsBatchAttribCode   == TableGroupAll::All;

            if (pdsBatchAttribByItem.RecId)
            {
                PdsBatchAttrib pdsBatchAttrib;

                while select pdsBatchAttrib
                {
                    tmpSel.clear();
                    tmpSel.PdsBatchAttribId   = pdsBatchAttrib.PdsBatchAttribId;
                    tmpSel.PdsBatchAttribOpr1 = PdsBatchAttribOpr::MoreEqual;
                    tmpSel.PdsBatchAttribOpr2 = PdsBatchAttribOpr::LessEqual;

                    attrib = tmpSel.pdsBatchAttrib();
                    switch (attrib.PdsBatchAttribType)
                    {
                        case PdsBatchAttribType::Enumerate:
                            tmpSel.PdsBatchAttribValue1 =
                                (select firstonly PdsAttribEnumValue
                                    from  pdsBatchAttribEnumValues
                                    order by PdsAttribEnumSeq asc
                                    where pdsBatchAttribEnumValues.PdsBatchAttribId
                                        == tmpSel.PdsBatchAttribId).PdsAttribEnumValue;
                            tmpSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                            tmpSel.PdsBatchAttribValue2 = '';
                            break;

                        case PdsBatchAttribType::String:
                            tmpSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;

                            tmpSel.PdsBatchAttribValue1 = strMin();
                            tmpSel.PdsBatchAttribValue2 = strMin();
                            break;

                        case PdsBatchAttribType::Date:
                            tmpSel.PdsBatchAttribValue1
                                = attrib.value2Storage(#DateMin);
                            tmpSel.PdsBatchAttribValue2
                                = attrib.value2Storage(maxdate());
                            break;
                        case PdsBatchAttribType::Integer:
                            tmpSel.PdsBatchAttribValue1
                                = attrib.value2Storage(
                                    real2int(pdsBatchAttrib.PdsBatchAttribMin));
                            tmpSel.PdsBatchAttribValue2
                                = attrib.value2Storage(
                                    real2int(pdsBatchAttrib.PdsBatchAttribMax));
                            break;
                        case PdsBatchAttribType::Realnumber:
                            tmpSel.PdsBatchAttribValue1
                                = attrib.value2Storage(
                                    pdsBatchAttrib.PdsBatchAttribMin);
                            tmpSel.PdsBatchAttribValue2
                                = attrib.value2Storage(
                                    pdsBatchAttrib.PdsBatchAttribMax);
                            break;
                    }

                    tmpSel.insert();

                    foundAttrib = true;
                }
            }
            
            if (!foundAttrib)
            {
                warning("@PRO1831");
            }

            tmpPdsBatchAttribSelect_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustomerAttributes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            #define.DateMin(1\1\1980)

            TmpPdsBatchAttribSelect         tmpAttrSel;
            PdsBatchAttribByItemCustomer    attribByItemCust;
            PdsBatchAttribByAttribGroup     groupAttrs;
            PdsBatchAttrib                  attrib;

            ItemId                          itemId;
            CustAccount                     custAcct;
            CustGroupId                     custGroup;

            tmpAttrSel.setTmpData(tmpPdsBatchAttribSelect);
            delete_from tmpAttrSel;

            if (element.movement())
            {
                itemId      = element.itemId();
                custAcct    = movement.custVendAc();
            }

            custGroup = CustTable::find(custAcct).CustGroup;

            while select PdsBatchAttribRelation,
                         PdsBatchAttribMin,
                         PdsBatchAttribMax
                from attribByItemCust
                where  attribByItemCust.PdsBatchAttribItemId == itemId
                    && attribByItemCust.PdsBatchAttribCode == TableGroupAll::Table
                    && (attribByItemCust.PdsBatchAttribAccountCode == TableGroupAll::All
                        || (attribByItemCust.PdsBatchAttribAccountCode
                                == TableGroupAll::Table
                            && attribByItemCust.PdsBatchAttribAccountRelation
                                == custAcct)
                        || (attribByItemCust.PdsBatchAttribAccountCode
                                == TableGroupAll::GroupId
                            && attribByItemCust.PdsBatchAttribAccountRelation
                                == custGroup))
            {
                select firstonly tmpAttrSel
                    where tmpAttrSel.PdsBatchAttribId
                            == groupAttrs.PdsBatchAttribAttribId;

                if (!tmpAttrSel.RecId)
                {
                    tmpAttrSel.clear();
                    tmpAttrSel.PdsBatchAttribId     =
                        attribByItemCust.PdsBatchAttribRelation;
                    tmpAttrSel.PdsBatchAttribOpr1   = PdsBatchAttribOpr::MoreEqual;
                    tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::LessEqual;

                    attrib = tmpAttrSel.pdsBatchAttrib();
                    switch (attrib.PdsBatchAttribType)
                    {
                        case PdsBatchAttribType::Enumerate:
                            tmpAttrSel.PdsBatchAttribOpr1   = PdsBatchAttribOpr::Equal;
                            tmpAttrSel.PdsBatchAttribValue1 =
                                (select firstonly PdsAttribEnumValue
                                    from  pdsBatchAttribEnumValues
                                    order by PdsAttribEnumSeq asc
                                    where pdsBatchAttribEnumValues.PdsBatchAttribId
                                        == tmpAttrSel.PdsBatchAttribId
                                    ).PdsAttribEnumValue;

                            tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                            tmpAttrSel.PdsBatchAttribValue2 = '';
                            break;

                        case PdsBatchAttribType::String:
                            tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;

                            tmpAttrSel.PdsBatchAttribValue1 = strMin();
                            tmpAttrSel.PdsBatchAttribValue2 = strMin();
                            break;

                        case PdsBatchAttribType::Date:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(#DateMin);
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(maxdate());
                            break;
                        case PdsBatchAttribType::Integer:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(
                                    real2int(attribByItemCust.PdsBatchAttribMin));
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(
                                    real2int(attribByItemCust.PdsBatchAttribMax));
                            break;
                        case PdsBatchAttribType::Realnumber:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(
                                    attribByItemCust.PdsBatchAttribMin);
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(
                                    attribByItemCust.PdsBatchAttribMax);
                            break;
                    }

                    tmpAttrSel.insert();
                }
            }

            while select RecId
                from   attribByItemCust
                where  attribByItemCust.PdsBatchAttribItemId == itemId
                    && attribByItemCust.PdsBatchAttribCode == TableGroupAll::GroupId
                    && (attribByItemCust.PdsBatchAttribAccountCode
                                == TableGroupAll::All
                        || (attribByItemCust.PdsBatchAttribAccountCode
                                == TableGroupAll::Table
                            && attribByItemCust.PdsBatchAttribAccountRelation
                                == custAcct)
                        || (attribByItemCust.PdsBatchAttribAccountCode
                                == TableGroupAll::GroupId
                            && attribByItemCust.PdsBatchAttribAccountRelation
                                == custGroup))
                join PdsBatchAttribAttribId,
                     PdsBatchAttribMin,
                     PdsBatchAttribMax
                from groupAttrs
                where  groupAttrs.PdsBatchAttribGroupId
                        == attribByItemCust.PdsBatchAttribRelation
            {
                select firstonly tmpAttrSel
                    where tmpAttrSel.PdsBatchAttribId
                            == groupAttrs.PdsBatchAttribAttribId;

                if (!tmpAttrSel.RecId)
                {
                    tmpAttrSel.clear();
                    tmpAttrSel.PdsBatchAttribId     = groupAttrs.PdsBatchAttribAttribId;
                    tmpAttrSel.PdsBatchAttribOpr1   = PdsBatchAttribOpr::MoreEqual;
                    tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::LessEqual;

                    attrib = tmpAttrSel.pdsBatchAttrib();
                    switch (attrib.PdsBatchAttribType)
                    {
                        case PdsBatchAttribType::Enumerate:
                            tmpAttrSel.PdsBatchAttribOpr1   = PdsBatchAttribOpr::Equal;
                            tmpAttrSel.PdsBatchAttribValue1 =
                                (select firstonly PdsAttribEnumValue
                                    from  pdsBatchAttribEnumValues
                                    order by PdsAttribEnumSeq asc
                                    where pdsBatchAttribEnumValues.PdsBatchAttribId
                                        == tmpAttrSel.PdsBatchAttribId
                                    ).PdsAttribEnumValue;

                            tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                            tmpAttrSel.PdsBatchAttribValue2 = '';
                            break;

                        case PdsBatchAttribType::String:
                            tmpAttrSel.PdsBatchAttribValue1 = strMin();
                            tmpAttrSel.PdsBatchAttribValue2 = strMin();

                            tmpAttrSel.PdsBatchAttribOpr2   = PdsBatchAttribOpr::empty;
                            break;

                        case PdsBatchAttribType::Date:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(#DateMin);
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(maxdate());
                            break;

                        case PdsBatchAttribType::Integer:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(
                                    real2int(groupAttrs.PdsBatchAttribMin));
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(
                                    real2int(groupAttrs.PdsBatchAttribMax));
                            break;

                        case PdsBatchAttribType::Realnumber:
                            tmpAttrSel.PdsBatchAttribValue1
                                = attrib.value2Storage(groupAttrs.PdsBatchAttribMin);
                            tmpAttrSel.PdsBatchAttribValue2
                                = attrib.value2Storage(groupAttrs.PdsBatchAttribMax);
                            break;
                    }

                    tmpAttrSel.insert();
                }
            }

            tmpPdsBatchAttribSelect_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpPdsBatchAttribSelect_PdsBatchAttribValue1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupPdsBatchAttribValue(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpPdsBatchAttribSelect_PdsBatchAttribValue2</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupPdsBatchAttribValue(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpPdsBatchAttribSelect</Name>
			<Table>TmpPdsBatchAttribSelect</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribOpr1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribOpr2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribValue1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribValue2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>PrimaryIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransMovement</Name>
			<Table>InventTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurAdjustment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPosted_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStdSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosedSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventDimTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimIdSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginDelivery_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkingRefInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PickingRouteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Storno_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpenSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPhysical</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventTransOriginMovement</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransOriginMovement</Name>
			<Table>InventTransOrigin</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemInventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@PRO1838</Caption>
		<DataSource xmlns="">TmpPdsBatchAttribSelect</DataSource>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>NewCommandButton</Name>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>New</Command>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>DeleteCommandButton</Name>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>DeleteRecord</Command>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Reset</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1822</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1821</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>GetTemplate</Name>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1624</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1623</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>PutTemplate</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1626</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1625</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ItemAttributes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1833</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1608</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CustomerAttributes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1830</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1829</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>TmpPdsBatchAttribSelect</DataSource>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Body</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Lot</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>InventTransOriginMovement_ReferenceCategory</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>130</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReferenceCategory</DataField>
								<DataSource>InventTransOriginMovement</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventTransOriginMovement_ReferenceId</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReferenceId</DataField>
								<DataSource>InventTransOriginMovement</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventTransOriginMovement_ItemId</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>InventTransOriginMovement</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderUnits</Name>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UnitId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>85</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>unitId</DataMethod>
										<DataSource>InventTransMovement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PdsCWUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>85</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWUnitId</DataMethod>
										<DataSource>InventTransMovement</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderReservedPhysical</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservPhysicalLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>movementReservPhysicalUnit</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReservPhysicalLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWMovementReservPhysical</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderReservOrdered</Name>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservOrderedLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>movementReservOrderedUnit</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReservOrderedLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWMovementReservOrdered</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderOnOrder</Name>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OnOrderLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>movementOnOrderUnit</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWOnOrderLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWMovementOnOrder</DataMethod>
										<DataSource>InventTransMovement</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
						<Caption>@PRO1834</Caption>
						<DataSource>InventTransMovement</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group_Group</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpPdsBatchAttribSelect_PdsBatchAttribId</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsBatchAttribId</DataField>
										<DataSource>TmpPdsBatchAttribSelect</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TmpPdsBatchAttribSelect_PdsBatchAttribOpr1</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsBatchAttribOpr1</DataField>
										<DataSource>TmpPdsBatchAttribSelect</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpPdsBatchAttribSelect_PdsBatchAttribValue1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>batchAttribValue1</DataMethod>
										<DataSource>TmpPdsBatchAttribSelect</DataSource>
										<Label>@PRO1579</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TmpPdsBatchAttribSelect_PdsBatchAttribOpr2</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsBatchAttribOpr2</DataField>
										<DataSource>TmpPdsBatchAttribSelect</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpPdsBatchAttribSelect_PdsBatchAttribValue2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>batchAttribValue2</DataMethod>
										<DataSource>TmpPdsBatchAttribSelect</DataSource>
										<Label>@PRO1582</Label>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>TmpPdsBatchAttribSelect</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>15</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<Style>BorderlessGridContainer</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>FormButtonGroupControl1</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
