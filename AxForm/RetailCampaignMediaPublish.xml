<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCampaignMediaPublish</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class RetailCampaignMediaPublish extends FormRun
    {
        #define.ApplicationIsNotSetUpWarningFormat("@RET4160168")
        #define.FacebookPageIsNotSetWarningFormat("@RET4160169")

        Array solutionIds;
        MenuFunction mediaContentMessageBarMenuFunction;
        Args mediaContentMessageBarMenuFunctionArgs;
}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called whenever the form receives or looses the input focus
    /// </summary>
    /// <param name="_active">
    /// true, if form is receiving the focus;
    /// false, otherwise.
    /// </param>
    public void activate(boolean _active)
    {
        this.refreshCurrentState();
        super(_active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPagesSyncWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a message to notify the user about the state
    /// of the synchronization of the pages and the cloud.
    /// Returns an empty string if there are no issues with
    /// the synchronization.
    /// </summary>
    /// <param name="_isForMediaPublishing">
    /// a flag, which when is 'true' returns warning messages related to publishing
    /// from the Media content tab; when 'false', returns warning messages
    /// related to publising pages to Sites services.
    /// </param>
    /// <returns>
    /// See the description.
    /// </returns>
    public str getPagesSyncWarning(boolean _isForMediaPublishing)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSupportedSolutions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an array of SynSolutionId elements of Retail solutions
    /// </summary>
    /// <returns>
    /// Returns an array of SynSolutionId elements of Retail solutions
    /// </returns>
    public Array getSupportedSolutions()
    {
        return solutionIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #define.MediaContentMessageBarClickedHandlerName('mediaContentMessageBarClicked')
        smmCampaignTable smmCampaignTable;

        super();

        solutionIds = new Array(Types::String);

        //Initialize splitter

        if (element.args() && element.args().dataset() == tableNum(smmCampaignTable))
        {
            smmCampaignTable = element.args().record();
            smmCampaignMediaType_q.dataSourceTable(tableNum(smmCampaignMediaType)).clearRanges();
            smmCampaignMediaType_q.dataSourceTable(tableNum(smmCampaignMediaType))
                .addRange(fieldNum(smmCampaignMediaType, CampaignId))
                .value(queryValue(smmCampaignTable.CampaignId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isImageSelected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if an image is selected for selected media type.
    /// </summary>
    /// <returns>
    /// Returns true if an image is selected for selected media type.
    /// </returns>
    private boolean isImageSelected()
    {
        return this.selectImage().RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMessageEmpty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if at least one message fields is filled, including an image attachment.
    /// </summary>
    /// <returns>
    /// Returns true if at least one message fields is filled, including an image attachment.
    /// </returns>
    private boolean isMessageEmpty()
    {
        switch (retailMediaChannelConnectorSettings.ChannelType)
        {
            case RetailMediaChannelType::Facebook:
                return !(PostMessage.text()
                    || PostName.text()
                    || !this.isMessageUrlEmpty()
                    || PostCaption.text()
                    || PostDescription.text()
                    || this.isImageSelected());
            case RetailMediaChannelType::Twitter:
                return !(PostMessage.text()
                    || !this.isMessageUrlEmpty()
                    || this.isImageSelected());
            default:
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMessageUrlEmpty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if an URL for the message is specified
    /// </summary>
    /// <returns>
    /// Returns true if an URL for the message is specified
    /// </returns>
    private boolean isMessageUrlEmpty()
    {
        if (RetailMediaChannelMessageTable.PromotionDestination == RetailMediaPromotionDestination::CustomUrl)
        {
            return !PostLinkUrl.text();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRequiredDataEntered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if all required fields have data entered.
    /// It will first checks if all fields are not blank.
    /// A promotion page must be selected if the 'Wall post title URL'
    /// field is set to 'Use a promotion page'.
    /// </summary>
    /// <returns>
    /// See the description.
    /// </returns>
    private boolean isRequiredDataEntered()
    {
        if (this.isMessageEmpty())
        {
            return false;
        }

        if (RetailMediaChannelMessageTable.PromotionDestination == RetailMediaPromotionDestination::PromotionPage)
        {
            return RetailMediaChannelMessageTable.SitesSvcPage != 0;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mediaContentMessageBarClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the Click event of the mediaContentMessageBar message bar control
    /// and opens the smmCampaignMediaTypeGroup form
    /// </summary>
    /// <param name="sender">
    /// the originator of the event
    /// </param>
    /// <param name="eventArgs">
    /// the event arguments
    /// </param>
    private void mediaContentMessageBarClicked(Object sender, ManagedEventArgs eventArgs)
    {
        if (mediaContentMessageBarMenuFunction)
        {
            mediaContentMessageBarMenuFunction.run(mediaContentMessageBarMenuFunctionArgs);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshAvailablePagesMessageBar</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the message bar above the available pages list
    /// to notify the user about the state of the synchronization of the pages
    /// and the cloud
    /// </summary>
    public void refreshAvailablePagesMessageBar()
    {
        str warningMessageText = this.getPagesSyncWarning(false);

        if (warningMessageText)
        {
            warning(warningMessageText);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCurrentState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the form to reflect the changes that may have happened
    /// in other forms. The changes may include, for example:
    /// - linking to or disconnecting from your social media account
    /// - deactivating the solution
    /// etc.
    /// </summary>
    public void refreshCurrentState()
    {
        #define.TwitterMessageFieldLabel("@RET4160170")
        #define.TwitterMessageFieldHelpText("@RET4160171")

        #define.TwitterPromotionDestinationFieldLabel("@RET4160172")

        boolean isMediaContentEnabled;
        MenuFunction mediaContentInfoMessageMenuFunction;
        xArgs mediaContentInfoMessageMenuFunctionArgs;

        RetailMediaChannelConnectorSettings.reread();

        element.refreshAvailablePagesMessageBar();

        isMediaContentEnabled = retailMediaChannelConnectorSettings != null;

        MediaContentTabPage.visible(isMediaContentEnabled);

        if (isMediaContentEnabled)
        {
            switch (retailMediaChannelConnectorSettings.ChannelType)
            {
                case RetailMediaChannelType::Facebook:
                    PostMessage.label('');
                    PostMessage.helpText('');
                    PostDestination.label('');

                    PostName.visible(true);
                    PostLinkUrl.visible(true);
                    PostCaption.visible(true);
                    PostDescription.visible(true);
                    break;

                default :
                    PostMessage.label(#TwitterMessageFieldLabel);
                    PostMessage.helpText(#TwitterMessageFieldHelpText);
                    PostDestination.label(#TwitterPromotionDestinationFieldLabel);

                    PostName.visible(false);
                    PostCaption.visible(false);
                    PostDescription.visible(false);
            }
            element.refreshPostDestinationControlsVisibility();
            element.refreshMediaContentPublishButton();
            if (!retailMediaChannelConnectorSettings.isActive())
            {
                mediaContentInfoMessageMenuFunction = new MenuFunction(menuitemDisplayStr(smmCampaignMediaTypeGroup), MenuItemType::Display);
                element.showMediaContentInfoMessage(
                    strFmt(#ApplicationIsNotSetUpWarningFormat, retailMediaChannelConnectorSettings.ChannelType),
                    mediaContentInfoMessageMenuFunction);
            }
            else if (retailMediaChannelConnectorSettings.ChannelType == RetailMediaChannelType::Facebook
                && !retailMediaChannelConnectorSettings.PageId)
            {
                mediaContentInfoMessageMenuFunction = new MenuFunction(menuitemDisplayStr(RetailMediaChannelParameters), MenuItemType::Display);
                mediaContentInfoMessageMenuFunctionArgs = new xArgs();
                mediaContentInfoMessageMenuFunctionArgs.record(retailMediaChannelConnectorSettings);
                element.showMediaContentInfoMessage(
                    strFmt(#FacebookPageIsNotSetWarningFormat, retailMediaChannelConnectorSettings.ChannelType),
                    mediaContentInfoMessageMenuFunction,
                    mediaContentInfoMessageMenuFunctionArgs);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshMediaContentPublishButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the state of the Publish button
    /// </summary>
    public void refreshMediaContentPublishButton()
    {
        boolean isEnabled = retailMediaChannelConnectorSettings
            && retailMediaChannelConnectorSettings.isActive()
            && (retailMediaChannelConnectorSettings.ChannelType != RetailMediaChannelType::Facebook
                || retailMediaChannelConnectorSettings.PageId)
            && this.isRequiredDataEntered();
        MediaContentPublishButton.enabled(isEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshPostDestinationControlsVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the state of the post URL entry controls depending on what is selected
    /// as promotion destination
    /// </summary>
    public void refreshPostDestinationControlsVisibility()
    {
        if (RetailMediaChannelMessageTable.PromotionDestination == RetailMediaPromotionDestination::CustomUrl)
        {
            PostLinkUrl.visible(true);
        }
        else
        {
            PostLinkUrl.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectImage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects and returns one image from the collection of the attached images.
    /// It pics the first image of the supported file type added.
    /// </summary>
    /// <returns>
    /// Returns the first image of the supported file type added
    /// </returns>
    public DocuRef selectImage()
    {
        DocuRef docuRef;
        DocuValue docuValue;
        RetailMediaSupportedFileType fileTypes;

        select firstonly docuRef
                index hint RefIdx
                where docuRef.RefCompanyId  == RetailMediaChannelMessageTable.dataAreaId    &&
                        docuRef.RefTableId    == tableNum(RetailMediaChannelMessageTable)       &&
                        docuRef.RefRecId      == RetailMediaChannelMessageTable.RecId
                join FileType, modifiedDateTime from docuValue
                    where docuValue.RecId == docuRef.ValueRecId
                exists join fileTypes
                    where fileTypes.FileType == docuValue.FileType &&
                        fileTypes.IsSupported == NoYes::Yes;
        return docuRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showMediaContentInfoMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates text in the message bar of the Media Content tab
    /// </summary>
    /// <param name="message">
    /// The message to display
    /// </param>
    /// <param name="_menuFunction">
    /// Optional. The MenuFunction object to run when message bar is clicked.
    /// If not specified or is null, will not perform any action when clicked.
    /// </param>
    /// <param name="_menuFunctionArgs">
    /// Optional. The Args object to pass to MenuFunction when message bar is clicked.
    /// </param>
    public void showMediaContentInfoMessage(str message, MenuFunction _menuFunction = null, Args _menuFunctionArgs = null)
    {
        warning(message);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>smmCampaignMediaType</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            element.refreshCurrentState();
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>IsSitesPublished</DataField>
						<Methods>
							<Method>
								<Name>dataChanged</Name>
								<Source><![CDATA[
            public void dataChanged()
            {
                super();

                element.refreshAvailablePagesMessageBar();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailMediaChannelMessageTable</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.refreshPostDestinationControlsVisibility();
            element.refreshMediaContentPublishButton();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Caption</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Description</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LinkUrl</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Message</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PromotionDestination</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshPostDestinationControlsVisibility();
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SitesSvcPage</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.refreshMediaContentPublishButton();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailMediaChannelConnectorSettings</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// The method is overriden and always returns true
        /// </summary>
        /// <returns>
        /// Always returns true
        /// </returns>
        /// <remarks>
        /// No changes should be made to the RetailMediaChannelConnectorSettings table
        /// through this form. But because AX always tries to create a record
        /// on the right side of an outer join relation, the write and validateWrite
        /// methods need to be overriden to intercept and ignore write attempts.
        /// </remarks>
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// The method is overriden and does nothing
        /// </summary>
        /// <remarks>
        /// No changes should be made to the RetailMediaChannelConnectorSettings table
        /// through this form. But because AX always tries to create a record
        /// on the right side of an outer join relation, the write and validateWrite
        /// methods need to be overriden to intercept and ignore write attempts.
        /// </remarks>
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>MediaContentPublishButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean abortPublishing = false;
            str pagesSyncWarningMessage;
            RetailMediaChannelConnector retailMediaChannelConnector;
            RetailMediaChannelMessage retailMediaChannelMessage;
            str pictureId;
            str postId;
            DocuRef docuRef;
            DocuValue docuValue;

            // Refresh the message bar above the available pages grid
            // because the synchronization state may have changed since
            // the user opened the form, and here in the Publish button
            // click handler we will initiate different scenarios depending
            // on the latest synchonization state.
            element.refreshAvailablePagesMessageBar();

            if (RetailMediaChannelMessageTable.PromotionDestination == RetailMediaPromotionDestination::PromotionPage)
            {
                pagesSyncWarningMessage = element.getPagesSyncWarning(true);
                if (pagesSyncWarningMessage)
                {
                    abortPublishing = true;
                    error(pagesSyncWarningMessage);
                }
            }

            if (!abortPublishing)
            {
                retailMediaChannelConnector = RetailMediaChannelFactory::getMediaChannelConnector(retailMediaChannelConnectorSettings);
                if (retailMediaChannelConnector != null)
                {
                    docuRef = element.selectImage();
                    if (docuRef)
                    {
                        docuValue = docuRef.docuValue();
                        pictureId = retailMediaChannelConnector.uploadPhoto(docuRef);
                    }

                    retailMediaChannelMessage = RetailMediaChannelMessage::construct();
                    retailMediaChannelMessage.parmCaption(RetailMediaChannelMessageTable.Caption);
                    retailMediaChannelMessage.parmDescription(RetailMediaChannelMessageTable.Description);
                    if (RetailMediaChannelMessageTable.PromotionDestination == RetailMediaPromotionDestination::CustomUrl)
                    {
                        retailMediaChannelMessage.parmLinkUrl(RetailMediaChannelMessageTable.LinkUrl);
                    }

                    retailMediaChannelMessage.parmMessage(RetailMediaChannelMessageTable.Message);
                    retailMediaChannelMessage.parmName(RetailMediaChannelMessageTable.Name);
                    retailMediaChannelMessage.parmPicture(pictureId);

                    postId = retailMediaChannelConnector.push(retailMediaChannelMessage);

                    if (postId != '')
                    {
                        RetailMediaChannelMessageTable.UserId = retailMediaChannelConnectorSettings.UserId;
                        RetailMediaChannelMessageTable.PageId = retailMediaChannelConnectorSettings.PageId;
                        RetailMediaChannelMessageTable.MessageDateTime = DateTimeUtil::UtcNow();
                        RetailMediaChannelMessageTable_DS.write();
                        RetailMediaChannelMessageTable_DS.refresh();
                    }
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>smmCampaignMediaType</Name>
			<Table>smmCampaignMediaType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CampaignId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CampaignMediaTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSitesPublished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailMediaChannelMessageTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailMediaChannelMessageTable</Name>
			<Table>RetailMediaChannelMessageTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Caption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinkUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Message</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>MessageDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromotionDestination</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SitesSvcPage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>smmCampaignMediaType</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>smmCampaignMediaTypeGroup</Name>
			<Table>smmCampaignMediaTypeGroup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CampaignMediaTypeDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CampaignMediaTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>smmCampaignMediaType</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailMediaChannelConnectorSettings</Name>
			<Table>RetailMediaChannelConnectorSettings</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ChannelName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpirationDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PageName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PageUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailMediaChannelConnectorCredentials</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmCampaignMediaTypeGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncSolutionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>smmCampaignMediaTypeGroup</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RET260530</Caption>
		<DataSource xmlns="">smmCampaignMediaType</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>MediaGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>MediaGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>smmCampaignMediaType_CampaignMediaTypeId</Name>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CampaignMediaTypeId</DataField>
								<DataSource>smmCampaignMediaType</DataSource>
								<Label>@RET260183</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Description</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>showCampaignMediaTypeDescription</DataMethod>
								<DataSource>smmCampaignMediaType</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>smmCampaignMediaType</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CampaignMediaTypeId</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>CampaignMediaTypeId</DataField>
						<DataSource>smmCampaignMediaType</DataSource>
						<Label>@RET260183</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MediaDescription</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>showCampaignMediaTypeDescription</DataMethod>
						<DataSource>smmCampaignMediaType</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>MediaContentTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>MediaContentActionPane</Name>
								<ElementPosition>585677356</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>MediaConntentActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>MediaContentButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>MediaContentPublishButton</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MultiSelect>No</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@RET4160076</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>MediaContentImagesButton</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Command>DocumentHandling</Command>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@RET4160075</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>RetailMediaChannelMessageTable</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MediaContentMessageFields</Name>
								<ElementPosition>1366580501</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostMessage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Message</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PostDestination</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ComboType>List</ComboType>
										<DataField>PromotionDestination</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
										<HideFirstEntry>Yes</HideFirstEntry>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostLinkUrl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinkUrl</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostCaption</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Caption</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostDescription</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>MessageDateTime</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MessageDateTime</DataField>
										<DataSource>RetailMediaChannelMessageTable</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>RetailMediaChannelMessageTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@RET4160078</Caption>
						<DataSource>RetailMediaChannelMessageTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>