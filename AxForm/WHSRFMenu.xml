<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSRFMenu</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSRFMenu extends FormRun
{
    TreeItemIdx         treeItemAvail, treeItemStruct;
    TreeItemIdx         treeItemParentAvail, treeItemParentStruct;
    TreeItemIdx         treeMenuStrNextSiblingOrParent;
    TreeItemIdx         treeMenuStrPrevSeqNum, treeMenuStrNextSeqNum;

    WHSRFMenuCtrl       menuCtrl;
    WHSRFMenuItemCtrl   menuItemCtrl;

    WHSRFMenuLine       selectedLine;

}
]]></Source>
			</Method>
			<Method>
				<Name>buildTrees</Name>
				<Source><![CDATA[
    void buildTrees()
    {
        // Rebuild the tree based on the currently selected record.
        menuCtrl.parmTree(treeMenuStruct);
        menuCtrl.parmRFMenuTable(whsrfMenuTable);
        menuCtrl.buildTree();

        // Filter the Menu Items based on what's already in the menu.
        menuItemCtrl.parmTree(treeMenuItems);
        menuItemCtrl.parmRFMenuTable(whsrfMenuTable);
        menuItemCtrl.buildTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelectedMenuLineAfterMoveUpDown</Name>
				<Source><![CDATA[
    private void setSelectedMenuLineAfterMoveUpDown()
    {
        str         selectedMenuLineData = TreeMenuStruct.getItem(TreeMenuStruct.getSelection()).data();
        WHSMenuName selectedMenuName;
        WHSSeqNum   selectedSeqNum;

        // Tree Item data for TreeMenuStruct is in the format "RefMenuName,SeqNum"
        [selectedMenuName, selectedSeqNum] = str2con(selectedMenuLineData);
        selectedLine = WHSRFMenuLine::find(selectedMenuName, selectedSeqNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        menuCtrl = new WHSRFMenuCtrl();
        menuItemCtrl = new WHSRFMenuItemCtrl();

        element.enableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        int ret = super(_taskId);

        switch (_taskId)
        {
            case #taskDoneEditRecord:
            case #taskEditRecord:
                element.enableButtons();
                break;
            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    public void enableButtons()
    {
        boolean addBtnEnable = !element.inViewMode() && treeItemParentAvail != 0 && treeItemAvail != 0;
        boolean removeBtnEnable = !element.inViewMode() && treeItemParentStruct != 0 && treeItemStruct != 0;

        ButtonAddMenuItem.enabled(addBtnEnable);
        ButtonRemoveMenu.enabled(removeBtnEnable);
        ButtonMenuMoveUp.enabled(removeBtnEnable && treeMenuStrPrevSeqNum != 0);
        ButtonMenuMoveDown.enabled(removeBtnEnable && treeMenuStrNextSeqNum != 0);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WHSRFMenuTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
            element.buildTrees();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.buildTrees();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TreeMenuItems</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            if (!whsRFMenuTable && whsRFMenuTable.MenuName)
            {
                whsRFMenuTable.write();
            }

            super(_oldItem, _newItem, _how);

            this.refreshState();

            element.enableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshState</Name>
						<Source><![CDATA[
        public void refreshState()
        {
            treeItemAvail = this.getSelection();
            treeItemParentAvail = this.getParent(treeItemAvail);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonAddMenuItem</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            // Place the newly added item after the currently selected item in the menu structure.
            treeMenuStruct.reconstruct(treeMenuItems.name(), treeItemStruct);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonRemoveMenu</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            treeMenuStruct.remove();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TreeMenuStruct</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>rebuildTrees</Name>
						<Source><![CDATA[
        private void rebuildTrees()
        {
            var selectedIdx = menuCtrl.buildTree(selectedLine);
            selectedLine = null; // Clear the selected line after use to avoid unexpected focus switches
            menuItemCtrl.buildTree();

            treeMenuItems.refreshState();
            if (selectedIdx != 0)
            {
                treeMenuStruct.select(selectedIdx);
            }
            treeMenuStruct.refreshState();

            element.enableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshState</Name>
						<Source><![CDATA[
        public void refreshState()
        {
            treeItemStruct = this.getSelection();
            treeItemParentStruct = this.getParent(treeItemStruct);
            treeMenuStrPrevSeqNum = this.getPrevOrParent(this.getPrevOrParent(treeItemStruct));
            treeMenuStrNextSiblingOrParent = this.getNextOrParent(treeItemStruct);
            treeMenuStrNextSeqNum = this.getNextOrParent(treeMenuStrNextSiblingOrParent);
        }

]]></Source>
					</Method>
					<Method>
						<Name>reconstruct</Name>
						<Source><![CDATA[
        public void reconstruct(str _sourceName, TreeItemIdx _nextSeqNum)
        {
            menuCtrl.parmTreeMenuStruct(treeMenuStruct);
            menuCtrl.setNextSeqNum(_nextSeqNum);

            switch (_sourceName)
            {
                case treeMenuItems.name():
                    menuCtrl.parmTreeItem(treeMenuItems.getItem(treeItemAvail));

                    if (treeItemParentAvail)
                    {
                        menuCtrl.addToMenu();
                        this.rebuildTrees();
                    }
                    break;
                case treeMenuStruct.name():
                    menuCtrl.parmTreeItem(TreeMenuStruct.getItem(treeItemStruct));

                    if (menuCtrl.positionChanged())
                    {
                        menuCtrl.reorderMenu();
                        this.rebuildTrees();
                    }
                    break;
                default:
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>remove</Name>
						<Source><![CDATA[
        public void remove()
        {
            menuCtrl.delFromMenu(this.getItem(treeItemStruct).data());
            this.rebuildTrees();
        }

]]></Source>
					</Method>
					<Method>
						<Name>getPrevOrParent</Name>
						<Source><![CDATA[
        private TreeItemIdx getPrevOrParent(TreeItemIdx _idx)
        {
            var ret = treeMenuStruct.getPrevSibling(_idx);
            if (ret == 0)
            {
                ret = treeMenuStruct.getParent(_idx);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getNextOrParent</Name>
						<Source><![CDATA[
        private TreeItemIdx getNextOrParent(TreeItemIdx _idx)
        {
            var ret = treeMenuStruct.getNextSibling(_idx);
            if (ret == 0)
            {
                ret = treeMenuStruct.getParent(_idx);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            super(_oldItem, _newItem, _how);

            this.refreshState();

            element.enableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>getContextMenuOptions</Name>
						<Source><![CDATA[
        public str getContextMenuOptions()
        {
            ContextMenu menu = new ContextMenu();
            ContextMenuOption menuToggleHidden;
            List menuOptions = new List(Types::Class);

            if (WHSRFMenuLineHiddenFlight::instance().isEnabled() && ButtonRemoveMenu.enabled())
            {
                WHSRFMenuLine currentLine = this.getCurrentLine();

                if (currentLine.Hidden)
                {
                    menuToggleHidden = ContextMenuOption::Create("@WAX:Show", 1);
                }
                else
                {
                    menuToggleHidden = ContextMenuOption::Create("@WAX:Hide", 2);
                }

                menuOptions.addEnd(menuToggleHidden);
            }

            menu.ContextMenuOptions(menuOptions);

            return menu.Serialize();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectedMenuOption</Name>
						<Source><![CDATA[
        public void selectedMenuOption(int _selectedMenuOption)
        {
            switch (_selectedMenuOption)
            {
                case 1:
                    this.showMenuLine();
                    break;
                case 2:
                    this.hideMenuLine();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>hideMenuLine</Name>
						<Source><![CDATA[
        private void hideMenuLine()
        {
            this.updateHidden(this.getCurrentLine(), true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>showMenuLine</Name>
						<Source><![CDATA[
        private void showMenuLine()
        {
            this.updateHidden(this.getCurrentLine(), false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateHidden</Name>
						<Source><![CDATA[
        private void updateHidden(WHSRFMenuLine _menuLine, boolean _hidden)
        {
            ttsbegin;
            _menuLine.Hidden = _hidden;
            _menuLine.update();
            ttscommit;

            this.rebuildTrees();
        }

]]></Source>
					</Method>
					<Method>
						<Name>getCurrentLine</Name>
						<Source><![CDATA[
        private WHSRFMenuLine getCurrentLine()
        {
            str         selectedMenuLineData = this.getItem(this.getSelection()).data();
            WHSMenuName selectedMenuName;
            WHSSeqNum   selectedSeqNum;

            // Tree Item data for TreeMenuStruct is in the format "RefMenuName,SeqNum"
            [selectedMenuName, selectedSeqNum] = str2con(selectedMenuLineData);
            return WHSRFMenuLine::find(selectedMenuName, selectedSeqNum, true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMenuMoveUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setSelectedMenuLineAfterMoveUpDown();

            treeMenuStruct.reconstruct(treeMenuStruct.name(), treeMenuStrPrevSeqNum);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMenuMoveDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setSelectedMenuLineAfterMoveUpDown();

            treeMenuStruct.reconstruct(treeMenuStruct.name(), treeMenuStrNextSiblingOrParent);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WHSRFMenuTable</Name>
			<Table>WHSRFMenuTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MenuName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>RecId</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@WAX1049</Caption>
		<DataSource xmlns="">WHSRFMenuTable</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">WHSRFMenuTable</TitleDataSource>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPan</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationListGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>GridMenuTable</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>WHSRFMenuTable_Description_NavigationList</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>GridMenuTable</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WHSRFMenuTable_MenuName_NavigationList</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>MenuName</DataField>
								<DataSource>WHSRFMenuTable</DataSource>
								<Label>@WAX72</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WHSRFMenuTable_Description_NavigationList</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>WHSRFMenuTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>WHSRFMenuTable</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<DataSource>WHSRFMenuTable</DataSource>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSRFMenuTable_MenuName</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>MenuName</DataField>
						<DataSource>WHSRFMenuTable</DataSource>
						<Label>@WAX72</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSRFMenuTable_Description</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>WHSRFMenuTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTabs</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ListPanelTab</Name>
						<Pattern>ListPanel</Pattern>
						<PatternVersion>1.3</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ListPanel</Name>
								<ExtendedStyle>listPanel</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Available</Name>
										<ElementPosition>1610612733</ElementPosition>
										<ExtendedStyle>listPanel_availPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>TreeMenuItems</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<DragDrop>Manual</DragDrop>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<Caption>@WAX1060</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>AddRemoveMethodGrp</Name>
										<ElementPosition>1207959549</ElementPosition>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonAddMenuItem</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveRight</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS2318</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonRemoveMenu</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveLeft</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS311855</Text>
											</AxFormControl>
										</Controls>
										<TopMargin>80</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupMenuStructure</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<DragDrop>Manual</DragDrop>
										<ElementPosition>805306366</ElementPosition>
										<ExtendedStyle>listPanel_selPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTreeControl">
												<Name>TreeMenuStruct</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<DragDrop>Manual</DragDrop>
												<ElementPosition>1550960411</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Tree</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<HasButtons>No</HasButtons>
												<LinesAtRoot>No</LinesAtRoot>
											</AxFormControl>
										</Controls>
										<Caption>@WAX1059</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>MoveUpDownActionsPanel</Name>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonMenuMoveUp</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>Up</NormalImage>
												<Text>@SYS40189</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonMenuMoveDown</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>Down</NormalImage>
												<Text>@SYS40190</Text>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@WAX1049</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>