<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CostSheetDesigner</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CostSheetDesigner extends FormRun
{
    CostSheetDesignerCtrl   costSheetDesignerCtrl;
    int                     treePrevKeyDown;
    boolean                 designerIsClosing;
    boolean                 readOnlyField;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean         ret;
        DialogButton    dialogButton;
        boolean         sheetIsSaved;

        sheetTree.select(sheetTree.getRoot()); // this operation updates costSheetDesignerCtrl object with data
                                               // from the temporary data sources, invoking edit-methods

        if (!costSheetDesignerCtrl.costSheetIsModified())
        {
            return super();
        }

        dialogButton = Box::yesNoCancel("@SYS106717", DialogButton::Cancel, "@SYS104676");

        switch (dialogButton)
        {
            case DialogButton::Yes :
                sheetIsSaved = costSheetDesignerCtrl.costSheetSave();
                designerIsClosing = sheetIsSaved;
                ret = sheetIsSaved;
                break;

            case DialogButton::No :
                designerIsClosing = true;
                ret = true;
                break;

            case DialogButton::Cancel :
                ret = false;
                break;
        }

        if (ret)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        if (costSheetDesignerCtrl)
        {
            costSheetDesignerCtrl.costSheetClose();
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>costSheetDesignerCtrl</Name>
				<Source><![CDATA[
    CostSheetDesignerCtrl costSheetDesignerCtrl()
    {
        if (costSheetDesignerCtrl == null)
        {
            costSheetDesignerCtrl = CostSheetDesignerCtrl::newParameters(
                CostSheetTable::defaultCostSheetTable().SheetId,
                element,
                sheetTree,
                costSheetNodeTable_ds,
                costSheetCalculationBasis_ds,
                costSheetCalculationFactor_ds,
                readOnlyField);
        }

        return costSheetDesignerCtrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args() &&
            element.args().menuItemName() == menuitemDisplayStr(CostSheetDesigner) &&
            SecurityRights::construct().menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(CostSheetDesigner)) == AccessRight::View)
        {
            readOnlyField = true;
        }

        super();

        try
        {
            costSheetDesignerCtrl = this.costSheetDesignerCtrl();
        }
        catch(Exception::Error)
        {
            element.close();
            return;
        }

        this.initForm();
        this.selectionChangeHelper(sheetTree.getSelection());

        element.control(element.controlId('SystemDefinedShowFiltersButton')).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFactorTabs</Name>
				<Source><![CDATA[
    void initFactorTabs(CostSheetNodeType _nodeType)
    {
        costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, ItemCode)).visible(costSheetNodeTable.CalculationFactorPerItem);
        costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, ItemRelation)).visible(costSheetNodeTable.CalculationFactorPerItem);

        factorSurchargeTabPage.visible(_nodeType == CostSheetNodeType::CalculationSurcharge);

        factorRateTabPage.visible(
            _nodeType == CostSheetNodeType::CalculationRate         ||
            _nodeType == CostSheetNodeType::CalculationOutUnitBased ||
            _nodeType == CostSheetNodeType::CalculationInUnitBased  ||
            _nodeType == CostSheetNodeType::CalculationPurchUnitBased);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showEditCalcTabs</Name>
				<Source><![CDATA[
    private void showEditCalcTabs(boolean _show)
    {
        GenCalcTabPage.visible(_show);
        CalcCalcTabPage.visible(_show);
        AccCalcTabPage.visible(_show);
        tabFinancialDimension.visible(_show);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initEditGroup</Name>
				<Source><![CDATA[
    void initEditGroup(CostSheetNodeType _nodeType = CostSheetNodeType::Undefined, CostPriceType _costType = CostPriceType::Undefined)
    {
        switch (_nodeType)
        {
            case CostSheetNodeType::CalculationSurcharge,
                 CostSheetNodeType::CalculationRate,
                 CostSheetNodeType::CalculationOutUnitBased,
                 CostSheetNodeType::CalculationInUnitBased,
                 CostSheetNodeType::CalculationPurchUnitBased :
                editTabPage.visible(false);
                this.showEditCalcTabs(true);
				
                boolean isVisible = this.isLedgerDimensionVisible(_costType);

                costSheetNodeTable_ds.object(fieldNum(CostSheetNodeTable, EstimIndirectAbsorpOffsetLedgerDimension)).visible(isVisible);
                costSheetNodeTable_ds.object(fieldNum(CostSheetNodeTable, IndirectAbsorptionOffsetLedgerDimension)).visible(isVisible);

                costSheetDesignerCtrl.populateComboBox(CalcSubtypeComboBox);
                break;

            default :
                editTabPage.visible(true);
                this.showEditCalcTabs(false);
        }

        // Lock the price type once it has been selected
        priceSetupGrp_PriceType.enabled(_costType == CostPriceType::Undefined);

        identificationGrp.visible(_nodeType != CostSheetNodeType::Undefined);

        priceSetupGrp.visible(_nodeType == CostSheetNodeType::Price);

        totalSetupGrp.visible(_nodeType == CostSheetNodeType::Total);

        costGroupSetupGrp.visible(_nodeType == CostSheetNodeType::CostGroup);

        calcSetupGrp.visible(
            _nodeType == CostSheetNodeType::CalculationSurcharge    ||
            _nodeType == CostSheetNodeType::CalculationRate         ||
            _nodeType == CostSheetNodeType::CalculationInUnitBased  ||
            _nodeType == CostSheetNodeType::CalculationOutUnitBased ||
            _nodeType == CostSheetNodeType::CalculationPurchUnitBased);

        if (
            _nodeType == CostSheetNodeType::CalculationSurcharge    ||
            _nodeType == CostSheetNodeType::CalculationRate         ||
            _nodeType == CostSheetNodeType::CalculationInUnitBased  ||
            _nodeType == CostSheetNodeType::CalculationPurchUnitBased)
        {
            BasisGrid.visible(true);
            BasisActionPane.visible(true);
        }
        else
        {
            BasisGrid.visible(false);
            BasisActionPane.visible(false);
        }

        editCalculationBasisSubtype.visible(
            _nodeType == CostSheetNodeType::CalculationSurcharge    ||
            _nodeType == CostSheetNodeType::CalculationRate);

        noBasisGrp.visible(
            _nodeType == CostSheetNodeType::CalculationOutUnitBased);

        element.initFactorTabs(_nodeType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLedgerDimensionVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if control <c>EstimIndirectAbsorpOffsetLedgerDimension</c> and <c>IndirectAbsorptionOffsetLedgerDimension</c> are visible.
    /// </summary>
    /// <param name = "_costType">
    /// Enum <c>CostPriceType</c>.
	/// </param>
    /// <returns>
    /// True if visible; otherwise, false.
	/// </returns>
	protected boolean isLedgerDimensionVisible(CostPriceType _costType)
    {
        switch (_costType)
        {
            case CostPriceType::Purchase:
                return false;
            default:
                return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForm</Name>
				<Source><![CDATA[
    void initForm()
    {
        element.design().caption(readOnlyField ? "@SYS104676" : "@SYS121356");

        this.initEditGroup();

        SysFormTreeControl::expandTree(sheetTree, sheetTree.getRoot());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVersionDefaults</Name>
				<Source><![CDATA[
    void setVersionDefaults()
    {
        CostingVersion costingVersion;

        if (costSheetCalculationFactor.VersionId)
        {
            costingVersion = CostingVersion::find(costSheetCalculationFactor.VersionId);
            costSheetCalculationFactor.FromDate     = costingVersion.DefaultDate;
            costSheetCalculationFactor.InventSiteId = costingVersion.InventSiteId;
        }

        if (!costSheetCalculationFactor.FromDate)
        {
            costSheetCalculationFactor.FromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        int ret;

        ret = super(_taskId);

        #Task
        switch (_taskId)
        {
            case #taskSave:
                ret = costSheetDesignerCtrl.costSheetSave();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChangeHelper</Name>
				<Source><![CDATA[
    public void selectionChangeHelper(int itemId)
    {
        element.selectControl(sheetTree); // Select the tree control to force saving of any uncommitted
        // property modifications for the current tree node
        costSheetDesignerCtrl.selectTreeNode(itemId);
        element.initEditGroup(costSheetDesignerCtrl.getCurrentNodeType(), costSheetDesignerCtrl.getCurrentCostType());
        DeleteButton.enabled(costSheetDesignerCtrl.canDeleteNode());
        CreateButton.enabled(costSheetDesignerCtrl.canCreateNode());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCostSheetCalculationBasis</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>CostSheetCalculationBasis</c> datasource.
    /// </summary>
    protected void initCostSheetCalculationBasis()
    {
        costSheetCalculationBasis.SheetId = costSheetNodeTable.SheetId;

        switch (costSheetNodeTable.Type)
        {
            case CostSheetNodeType::CalculationSurcharge:
                costSheetCalculationBasis.SurchargeSubtype = costSheetNodeTable.CalculationSurchargeSubtype;
                break;

            case CostSheetNodeType::CalculationRate:
                costSheetCalculationBasis.RateSubtype = costSheetNodeTable.CalculationRateSubtype;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>costSheetCalculationFactorIsAlreadyUsedErrorMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the error message to display if the <c>CostSheetCalculationFactor</c> is already used.
    /// </summary>
    /// <returns>The error message displayed when the <c>CostSheetCalculationFactor</c> is already used.</returns>
    protected str costSheetCalculationFactorIsAlreadyUsedErrorMessage()
    {
        return strFmt("@SYS105357", strFmt("%1 - %2 - %3 - %4 - %5 - %6",
                                            costSheetCalculationFactor.CostingVersionStatus,
                                            costSheetCalculationFactor.VersionId,
                                            costSheetCalculationFactor.InventSiteId,
                                            costSheetCalculationFactor.ItemCode,
                                            costSheetCalculationFactor.ItemRelation,
                                            costSheetCalculationFactor.FromDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCostSheetCalculationFactorUsed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the <c>CostSheetCalculationFactor</c> is already used.
    /// </summary>
    /// <returns>true if the <c>CostSheetCalculationFactor</c> is already used; otherwise, false.</returns>
    protected boolean isCostSheetCalculationFactorUsed()
    {
        CostSheetCalculationFactor tmpCostSheetCalculationFactor = this.getTemporaryCostSheetCalculationFactor();

        Query query = this.buildCostingSheetCalculationFactorQuery();
        QueryRun queryRun = new QueryRun(query);
        queryRun.setRecord(tmpCostSheetCalculationFactor);
        return queryRun.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildCostingSheetCalculationFactorQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the query to find the matching <c>CostSheetCalculationFactor</c>.
    /// </summary>
    /// <returns>The query to find the matching <c>CostSheetCalculationFactor</c>.</returns>
    protected Query buildCostingSheetCalculationFactorQuery()
    {
        Query query = new Query();

        CostSheetCalculationFactor tmpCostSheetCalculationFactor = this.getTemporaryCostSheetCalculationFactor();

        QueryBuildDataSource qbdsCostSheetCalculationFactor = query.addDataSource(tableNum(CostSheetCalculationFactor));
        
        qbdsCostSheetCalculationFactor.cursor(tmpCostSheetCalculationFactor);

        qbdsCostSheetCalculationFactor.firstOnly(true);

        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, CostingVersionStatus)).value(queryValue(costSheetCalculationFactor.CostingVersionStatus));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, VersionId)).value(queryValue(costSheetCalculationFactor.VersionId));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, InventSiteId)).value(queryValue(costSheetCalculationFactor.InventSiteId));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, ItemCode)).value(queryValue(costSheetCalculationFactor.ItemCode));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, ItemRelation)).value(queryValue(costSheetCalculationFactor.ItemRelation));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, FromDate)).value(queryValue(costSheetCalculationFactor.FromDate));
        qbdsCostSheetCalculationFactor.addRange(fieldNum(CostSheetCalculationFactor, RecId)).value(SysQuery::valueNot(costSheetCalculationFactor.RecId));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTemporaryCostSheetCalculationFactor</Name>
				<Source><![CDATA[
    private CostSheetCalculationFactor getTemporaryCostSheetCalculationFactor()
    {
        CostSheetCalculationFactor tmpCostSheetCalculationFactor;
        tmpCostSheetCalculationFactor.setTmp();
        tmpCostSheetCalculationFactor.setTmpData(costSheetCalculationFactor);

        return tmpCostSheetCalculationFactor;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CostSheetNodeTable</Name>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            costSheetDesignerCtrl.updateCurrentNode();

            if (!costSheetDesignerCtrl.validateCurrentNode())
            {
                return false;
            }

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            costSheetDesignerCtrl.updateCurrentNode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>last</Name>
						<Source><![CDATA[
        public int last()
        {
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>first</Name>
						<Source><![CDATA[
        public int first()
        {
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>next</Name>
						<Source><![CDATA[
        public int next()
        {
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prev</Name>
						<Source><![CDATA[
        public int prev()
        {
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            costSheetDesignerCtrl.actionDeleteNode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            costSheetDesignerCtrl.actionCreateNode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            costSheetNodeTable.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCalculationSubtype</Name>
						<Source><![CDATA[
        edit int editCalculationSubtype(
            boolean                     _set,
            CostSheetNodeTable          _costSheetNodeTable,
            int                         _subtype)
        {
            CostCalculationSubtypeName name = costSheetDesignerCtrl.editCalculationSubtype(_set, _costSheetNodeTable, CalcSubtypeComboBox.getText(_subtype));
            return CalcSubtypeComboBox.selectText(name);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CalculationFactorPerItem</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                ret = costSheetDesignerCtrl.validateFactorPerItem(costSheetNodeTable.CalculationFactorPerItem) && ret;

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Code</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                costSheetDesignerCtrl.updateCurrentNode();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CostGroupId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && costSheetNodeTable_ds.validate();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Description</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                costSheetDesignerCtrl.updateCurrentNode();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PriceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                costSheetDesignerCtrl.updateCurrentNode();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CostSheetCalculationBasis</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            element.initCostSheetCalculationBasis();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!designerIsClosing)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean                     ret;
            CostSheetCalculationBasis  tmpCostSheetCalculationBasis;

            if (designerIsClosing)
            {
                ret = true;
            }
            else
            {
                tmpCostSheetCalculationBasis.setTmp();
                tmpCostSheetCalculationBasis.setTmpData(costSheetCalculationBasis);

                select firstonly tmpCostSheetCalculationBasis
                    where tmpCostSheetCalculationBasis.BasisCode == costSheetCalculationBasis.BasisCode
                       && tmpCostSheetCalculationBasis.SurchargeSubtype == costSheetCalculationBasis.SurchargeSubtype
                       && tmpCostSheetCalculationBasis.RateSubtype == costSheetCalculationBasis.RateSubtype
                       && tmpCostSheetCalculationBasis.RecId != costSheetCalculationBasis.RecId;

                if (tmpCostSheetCalculationBasis)
                {
                    ret = checkFailed(strFmt("@SYS105361", costSheetCalculationBasis.BasisCode));
                }
                else
                {
                    ret = super();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            costSheetCalculationBasis.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCalculationBasisSubtype</Name>
						<Source><![CDATA[
        edit int editCalculationBasisSubtype(
            boolean                     _set,
            CostSheetCalculationBasis   _costSheetCalculationBasis,
            int                         _subtype)
        {
            CostCalculationSubtypeName name = costSheetDesignerCtrl.editCalculationBasisSubtype(_set, _costSheetCalculationBasis, CalcSubtypeComboBox.getText(_subtype));
            return CalcSubtypeComboBox.selectText(name);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            costSheetDesignerCtrl.populateComboBox(editCalculationBasisSubtype);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BasisCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup          sysTableLookup;
                Query                   query;

                sysTableLookup = SysTableLookup::newParameters(tableNum(CostSheetTmpNodeTable), _formControl);

                sysTableLookup.parmTmpBuffer(costSheetDesignerCtrl.getBasisCandidatesTmpTable());

                sysTableLookup.addLookupfield(fieldNum(CostSheetTmpNodeTable, Code));
                sysTableLookup.setLabel("@SYS6908");
                sysTableLookup.addLookupfield(fieldNum(CostSheetTmpNodeTable, Description));
                sysTableLookup.setLabel("@SYS6303");

                query = new Query();
                query.addDataSource(tableNum(CostSheetTmpNodeTable));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CostSheetCalculationFactor</Name>
				<Methods>
					<Method>
						<Name>costSheetCalculationFactorActive</Name>
						<Source><![CDATA[
        public void costSheetCalculationFactorActive()
        {
            CostingVersion  costingVersion = CostingVersion::find(costSheetCalculationFactor.VersionId);

            costSheetCalculationFactor_ds.allowEdit(!readOnlyField && !CostingVersion::blocked(costSheetCalculationFactor.VersionId,
                                                                                          costSheetCalculationFactor.CostingVersionStatus));
            inventPriceRateFactorActivationButton.enabled(costSheetCalculationFactor.allowActivate());
            inventPriceSurchargeFactorActivationButton.enabled(costSheetCalculationFactor.allowActivate());

            costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, FromDate)).allowEdit(costingVersion.DefaultDate == dateNull());
            costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, InventSiteId)).allowEdit(costingVersion.InventSiteId == '');

            this.refreshDeleteButton();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int             ret = super();

            this.costSheetCalculationFactorActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            this.costSheetCalculationFactorActive();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshDeleteButton</Name>
						<Source><![CDATA[
        public void refreshDeleteButton()
        {
            CostSheetCalculationFactor costSheetCalculationFactorLocal;
            boolean                    allowDelete = false;

            // in case multiple records are selected allow to delete only if all records can be deleted
            var multiSelectionHelper = MultiSelectionHelper::construct();

            multiSelectionHelper.parmDatasource(costSheetCalculationFactor_DS);

            costSheetCalculationFactorLocal = multiSelectionHelper.getFirst();

            int numberOfSelectedRows = costSheetCalculationFactor_ds.recordsMarked().lastIndex();

            if (numberOfSelectedRows == 0)
            {
                allowDelete = !costSheetCalculationFactor || (!readOnlyField && !costSheetCalculationFactor.blocked());
            }
            else
            {
                allowDelete = true;
                while (numberOfSelectedRows != 0)
                {
                    if (costSheetCalculationFactorLocal
                    && (readOnlyField || costSheetCalculationFactorLocal.blocked()))
                    {
                        allowDelete = false;
                        break;
                    }

                    numberOfSelectedRows--;
                    costSheetCalculationFactorLocal = multiSelectionHelper.getNext();
                }
            }

            costSheetCalculationFactor_ds.allowDelete(allowDelete);
            FactorRateDelete.enabled(allowDelete);
            FactorSurchargeDelete.enabled(allowDelete);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            costSheetCalculationFactor.SheetId = costSheetNodeTable.SheetId;
            costSheetCalculationFactor.NodeId   = costSheetNodeTable.NodeId;

            element.setVersionDefaults();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            if (designerIsClosing)
            {
                return true;
            }
            else
            {
                if (element.isCostSheetCalculationFactorUsed())
                {
                    // see \Classes\CostSheetNodeCalculation\validate
                    return checkFailed(element.costSheetCalculationFactorIsAlreadyUsedErrorMessage());
                }
                else
                {
                    // Because both the costSheetCalculationFactor and the costSheetNodeTable records are in temporary buffers,
                    // we need to skip the validation of table relations
                    costSheetCalculationFactor.NodeId   = 0;
                    boolean ret = super();
                    costSheetCalculationFactor.NodeId   = costSheetNodeTable.NodeId;

                    return ret;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!designerIsClosing)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            costSheetCalculationFactor.setTmp();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>VersionId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setVersionDefaults();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CreateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            costSheetDesignerCtrl.actionCreateNode();
            if (element.InViewMode())
            {
                #task;
                element.task(#taskEditRecord);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (Box::confirm("@CostManagement:CostSheetDesigner_DeleteNode_Confirmation"))
            {
				super();
				costSheetDesignerCtrl.actionDeleteNode();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            costSheetDesignerCtrl.costSheetValidate();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>sheetTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        public boolean expanding(int _idx, FormTreeExpand _action, anytype _data)
        {
            boolean ret;

            if (_action == FormTreeExpand::Expand)
            {
                costSheetDesignerCtrl.expandNode(_idx);
            }

            ret = super(_idx, _action, _data);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();

            costSheetNodeTable_ds.allowCreate(!readOnlyField);
            costSheetNodeTable_ds.allowDelete(!readOnlyField);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lostFocus</Name>
						<Source><![CDATA[
        public void lostFocus()
        {
            super();

            costSheetNodeTable_ds.allowCreate(false);
            costSheetNodeTable_ds.allowDelete(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            if (_newItem.idx() != _oldItem.idx())
            {
                if (costSheetDesignerCtrl != null)
                {
                    element.selectionChangeHelper(_newItem.idx());
                }
            }

            super(_oldItem, _newItem, _how);
        }

]]></Source>
					</Method>
					<Method>
						<Name>getContextMenuOptions</Name>
						<Source><![CDATA[
        public str getContextMenuOptions()
        {
            str ret;

            ret = super();

            return costSheetDesignerCtrl.createContextMenu().Serialize();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectedMenuOption</Name>
						<Source><![CDATA[
        public void selectedMenuOption(int selectedOption)
        {
            costSheetDesignerCtrl.selectContextMenuOption(selectedOption);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CostSheetNodeTable_CalculationFactorPerItem</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, ItemCode)).visible(costSheetNodeTable.CalculationFactorPerItem);
            costSheetCalculationFactor_ds.object(fieldNum(CostSheetCalculationFactor, ItemRelation)).visible(costSheetNodeTable.CalculationFactorPerItem);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventPriceSurchargeFactorActivationButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Using Menu Item Button instead of Button in order to have it hidden, if user does not have access to the privilege
            // No super() call, because the method below does the trick
            costSheetDesignerCtrl.activateCostSheetCalculationFactor();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventPriceRateFactorActivationButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Using Menu Item Button instead of Button in order to have it hidden, if user does not have access to the privilege
            // No super() call, because the method below does the trick
            costSheetDesignerCtrl.activateCostSheetCalculationFactor();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CostSheetNodeTable</Name>
			<Table>CostSheetNodeTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalculationFactorPerItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalculationRateSubtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalculationSurchargeSubtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalculationUnitBasedSubtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EstimatedIndirectAbsorpLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EstimIndirectAbsorpOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Header</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IndirectAbsorptionLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IndirectAbsorptionOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentNodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SheetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CostSheetCalculationBasis</Name>
			<Table>CostSheetCalculationBasis</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BasisCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasisNodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RateSubtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SheetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SurchargeSubtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CostSheetCalculationFactor</Name>
			<Table>CostSheetCalculationFactor</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostingVersionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reserved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SheetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VersionId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS336189</Caption>
		<Pattern xmlns="">SimpleListDetails-Tree</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CreateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Create</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>No</MultiSelect>
								<NormalImage>New</NormalImage>
								<Text>@SYS312960</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>DeleteButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Delete</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Delete</NormalImage>
								<Text>@SYS94691</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ValidateButton</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS104700</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS2076</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TreeGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>sheetTree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<DragDrop>Manual</DragDrop>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<SingleSelection>No</SingleSelection>
					</AxFormControl>
				</Controls>
				<DataSource>CostSheetNodeTable</DataSource>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Splitter_Y</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>3</Height>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<BottomMargin>0</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<HideIfEmpty>No</HideIfEmpty>
				<TopMargin>0</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Header</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>EditTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IdentificationGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>IdentificationGrp_Type</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Type</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>IdentificationGrp_Code</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Code</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>IdentificationGrp_Description</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PriceSetupGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PriceSetupGrp_PriceType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PriceType</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PriceSetupGrp_Header</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Header</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PriceSetupGrp_Total</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Total</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PriceSetup</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalSetupGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TotalSetupGrp_Header</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Header</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TotalSetupGrp_Total</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Total</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TotalSetup</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CostGroupSetupGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostGroupSetupGrp_CostGroupId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostGroupId</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CostGroupSetupGrp_M_costGroupType</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costGroupType</DataMethod>
										<DataSource>CostSheetNodeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CostGroupSetupGrp_M_costGroupBehavior</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costGroupBehavior</DataMethod>
										<DataSource>CostSheetNodeTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>CostGroupSetup</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS453</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GenCalcTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CalcIdentGrp</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CalcIdentGrp_Type</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Type</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CalcIdentGrp_Code</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Code</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CalcIdentGrp_Description</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CalcSetupGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CalcSubtypeComboBox</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCalculationSubtype</DataMethod>
										<DataSource>CostSheetNodeTable</DataSource>
										<Label>@SYS98180</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CostSheetNodeTable_CalculationFactorPerItem</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalculationFactorPerItem</DataField>
										<DataSource>CostSheetNodeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2186</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CalcCalcTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>BasisActionPane</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>CalcCalcFormButtonGroupControl</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>CalcCalcNew</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<NormalImage>New</NormalImage>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>CalcCalcDelete</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Delete</NormalImage>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>CostSheetCalculationBasis</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>BasisGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostSheetCalculationBasis_BasisCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BasisCode</DataField>
										<DataSource>CostSheetCalculationBasis</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>editCalculationBasisSubtype</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCalculationBasisSubtype</DataMethod>
										<DataSource>CostSheetCalculationBasis</DataSource>
										<Label>@SYS98180</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>CostSheetCalculationBasis</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>NoBasisGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>StaticText</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS135308</Text>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS:AbsorptionBasis</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FactorSurchargeTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FactorSurchargeActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FactorSurchargeButtonGroupControl</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>FactorSurchargeNew</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<NormalImage>New</NormalImage>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>FactorSurchargeDelete</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<Command>DeleteRecord</Command>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Delete</NormalImage>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>InventPriceSurchargeFactorActivationButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>InventPriceCalcFactorActivation</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>CostSheetCalculationFactor</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>FactorSurchargeGrid</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FactorSurchargeGrid_CostingVersionStatus</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostingVersionStatus</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorSurchargeGrid_VersionId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VersionId</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorSurchargeGrid_M_displayVersionName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayVersionName</DataMethod>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorSurchargeGrid_InventSiteId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FactorSurchargeGrid_ItemCode</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorSurchargeGrid_ItemRelation</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemRelation</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>FactorSurchargeGrid_Percentage</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Percentage</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>FactorSurchargeGrid_FromDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FromDate</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>FactorSurchargeGrid_M_blocked</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>blocked</DataMethod>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>FactorSurcharge</DataGroup>
								<DataSource>CostSheetCalculationFactor</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS105331</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FactorRateTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FactorRateActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FactorRateButtonGroupControl</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>FactorRateNew</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<NormalImage>New</NormalImage>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>FactorRateDelete</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<Command>DeleteRecord</Command>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Delete</NormalImage>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>InventPriceRateFactorActivationButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>InventPriceCalcFactorActivation</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>CostSheetCalculationFactor</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>FactorRateGrid</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FactorRateGrid_CostingVersionStatus</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostingVersionStatus</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorRateGrid_VersionId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VersionId</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorRateGrid_M_displayVersionName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayVersionName</DataMethod>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorRateGrid_InventSiteId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FactorRateGrid_ItemCode</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FactorRateGrid_ItemRelation</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemRelation</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>FactorRateGrid_Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>FactorRateGrid_FromDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FromDate</DataField>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>FactorRateGrid_M_blocked</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>blocked</DataMethod>
										<DataSource>CostSheetCalculationFactor</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>FactorRate</DataGroup>
								<DataSource>CostSheetCalculationFactor</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4193</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AccCalcTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountEstimatedIndirectAbsorption</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountEstimatedIndirectAbsorption_EstimatedIndirectAbsorpLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CostSheetNodeTable</DataSource>
										<ReferenceField>EstimatedIndirectAbsorpLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountEstimatedIndirectAbsorption_EstimIndirectAbsorpOffsetLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CostSheetNodeTable</DataSource>
										<ReferenceField>EstimIndirectAbsorpOffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>AccountEstimatedIndirectAbsorption</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountsIndirectAbsorption</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsIndirectAbsorption_IndirectAbsorptionLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CostSheetNodeTable</DataSource>
										<ReferenceField>IndirectAbsorptionLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsIndirectAbsorption_IndirectAbsorptionOffsetLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CostSheetNodeTable</DataSource>
										<ReferenceField>IndirectAbsorptionOffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>AccountsIndirectAbsorption</DataGroup>
								<DataSource>CostSheetNodeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SCM:LedgerPostingsGroup</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>tabFinancialDimension</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS138487</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>CostSheetNodeTable</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<DataSource>CostSheetNodeTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
