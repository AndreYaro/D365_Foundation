<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetBalancesPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetBalancesPart extends FormRun
{
    BudgetCalculateBalance budgetCalculateBalance;

}
]]></Source>
			</Method>
			<Method>
				<Name>calculatePeriodBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates budget transaction amounts by fiscal period.
    /// </summary>
    /// <param name="_ledgerDimension">
    /// The ledger dimension.
    /// </param>
    /// <param name="_startDate">
    /// The start date.
    /// </param>
    /// <param name="_endDate">
    /// The end date.
    /// </param>
    /// <param name="_budgetModelId">
    /// The budget model ID.
    /// </param>
    /// <param name="_budgetType">
    /// The budget type.
    /// </param>
    /// <param name="_filterByType">
    /// If the balance should be filtered by budget type.
    /// </param>
    public void calculatePeriodBalances(
        LedgerDimensionBase _ledgerDimension,
        StartDate _startDate,
        EndDate _endDate,
        BudgetModelId _budgetModelId,
        BudgetType _budgetType,
        boolean _filterByType = true)
    {
        Query query;

        budgetCalculateBalance.parmStartDate(_startDate);
        budgetCalculateBalance.parmEndDate(_endDate);

        budgetCalculateBalance.parmBudgetModelId(_budgetModelId);
        budgetCalculateBalance.parmBudgetType(_budgetType);
        budgetCalculateBalance.parmFilterByBudgetType(_filterByType);

        query = new Query(queryStr(BudgetCalculateBalance));
        BudgetTransactionManager::addDimensionCriteriaForLedgerDimension(query, _ledgerDimension, query.dataSourceTable(tableNum(BudgetTransactionLine)).name());
        budgetCalculateBalance.parmQuery(query);

        budgetTmpBalance.linkPhysicalTableInstance(budgetCalculateBalance.calculatePeriodBalances());
        budgetTmpBalance_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>BudgetBalancesPart</c> form.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// The form was called without a valid table buffer.
    /// </exception>
    public void init()
    {
        super();

        budgetCalculateBalance = new BudgetCalculateBalance();

        // Use the ledger's fiscal calendar.
        budgetCalculateBalance.parmFiscalCalendarRecId(Ledger::fiscalCalendar());

        budgetCalculateBalance.parmCalculateLedgerAmounts(NoYes::No);

        // Always include submodels in the calculation of period balances.
        budgetCalculateBalance.parmIncludeSubModels(NoYes::Yes);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetTmpBalance</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calculates the period budget balances when the when the form is initialized
        /// or the budget transaction line source record is changed by the caller.
        /// </summary>
        public void linkActive()
        {
            DimensionAttributeValueCombination dimAttrValueCombo;
            FiscalCalendarYear fiscalCalendarYear;
            Object caller;
            LedgerDimensionBase ledgerDimension;
            StartDate startDate;
            EndDate endDate;
            BudgetModelId budgetModelId;
            BudgetType budgetType;
            boolean filterByType;

            if (element.args().record())
            {
                budgetBalancesButton.visible(true);

                if (element.args().dataset() == tableNum(BudgetTransactionLine))
                {
                    // Find the fiscal year that the budget transaction date falls into.
                    fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(), budgetTransactionLine.Date);

                    // Use the start and end dates of the fiscal year that the budget transaction line's date falls in.
                    startDate = fiscalCalendarYear.StartDate;
                    endDate = fiscalCalendarYear.EndDate;

                    budgetModelId = budgetTransactionLine.getBudgetTransactionHeader().BudgetModelId;
                    budgetType = budgetTransactionLine.BudgetType;
                    filterByType = true;

                    ledgerDimension = budgetTransactionLine.LedgerDimension;
                }
                else
                {
                    throw error("@SYS18626");
                }
            }
            else
            {
                budgetBalancesButton.visible(false);
            }

            // Calculate the balances and populate the datasource.
            element.calculatePeriodBalances(ledgerDimension, startDate, endDate, budgetModelId, budgetType, filterByType);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>BudgetTransactionLine</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        /// <summary>
        /// When the budget transaction line source record is changed by the caller, update the
        /// <c>BudgetTmpBalance</c> temp table based on the new record.
        /// </summary>
        public void linkActive()
        {
            super();

            budgetTmpBalance_DS.linkActive();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BudgetBalancesButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (budgetTransactionLine)
            {
                Args args = new Args();

                args.record(budgetTransactionLine);
                args.caller(element.args().caller());

                FormRun formRun = new MenuFunction(menuItemDisplayStr(BudgetBalances), MenuItemType::Display).create(args);

                formRun.run();
                formRun.wait();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetTmpBalance</Name>
			<Table>BudgetTmpBalance</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccumlatedRevisedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccumulatedApportionment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApportionmentAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCalendarPeriodRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentOfBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Period</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreliminaryAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevisedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumPreliminaryBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOnlyApportionment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Variance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VariancePercent</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetTransactionLine</Name>
			<Table>BudgetTransactionLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetBudget_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeInCashFlowForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransBudgetTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS1614</Caption>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">FormPart</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>Period</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Period</DataField>
						<DataSource>BudgetTmpBalance</DataSource>
						<Label>@SYS324527</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Amount</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RevisedAmount</DataField>
						<DataSource>BudgetTmpBalance</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>BudgetTmpBalance</DataSource>
				<HighlightActive>No</HighlightActive>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>SimpleReadOnly</Style>
				<VisibleRows>5</VisibleRows>
				<VisibleRowsMode>Fixed</VisibleRowsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormMenuFunctionButtonControl">
				<Name>BudgetBalancesButton</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>MenuFunctionButton</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<BackStyle>Transparent</BackStyle>
				<BackgroundColorRGB>
					<Red>216</Red>
					<Green>216</Green>
					<Blue>216</Blue>
				</BackgroundColorRGB>
				<Border>None</Border>
				<ButtonDisplay>TextOnly</ButtonDisplay>
				<ColorScheme>RGB</ColorScheme>
				<ForegroundColorRGB>
					<Red>0</Red>
					<Green>0</Green>
					<Blue>255</Blue>
				</ForegroundColorRGB>
				<MenuItemName>BudgetBalances</MenuItemName>
				<MultiSelect>No</MultiSelect>
				<NeedsRecord>Yes</NeedsRecord>
				<SaveRecord>No</SaveRecord>
				<ShowShortCut>No</ShowShortCut>
				<Style>Link</Style>
				<Text>@SYS342782</Text>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>