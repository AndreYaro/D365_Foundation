<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventJournalArchiveTransFormPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public final class InventJournalArchiveTransFormPart extends FormRun
    implements ArchiveServiceIArchiveWorkspaceFormPart, ArchiveServiceIOpenArchiveJobsDialog, ArchiveServiceIOpenArchiveReversalDialog,
    ArchiveServiceIHandleReversalJobCreation, InventoryArchiveTransOpenMessageLogDialog
{
    private InventoryArchiveTransMessageLogTmp inventoryArchiveTransMessageLogTmp;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void init()
    {
        super();

        ArchiveServiceWorkspaceFormPartBuilder::initializeWorkspaceFormPart(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveTypeName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceTypeName getArchiveTypeName()
    {
        return InventoryArchiveAutomationConstants::InventJournalArchiveRegisteredTypeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkDataSource</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormDataSource getArchiveSourceLinkDataSource()
    {
        return InventJournalArchiveTrans_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkActionPane</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormActionPaneControl getArchiveSourceLinkActionPane()
    {
        return ArchiveTransActionPane;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkGrid</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormGridControl getArchiveSourceLinkGrid()
    {
        return OverviewGrid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveJobDetailsDataSource</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormDataSource getArchiveJobDetailsDataSource()
    {
        return ArchiveServiceJobDetailsView_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void refresh()
    {
        InventJournalArchiveTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJobsDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceJobsDialogContract getJobsDialogContract()
    {
        // Created a jobs dialog contract for the currently selected InventJournalArchiveTrans
        var jobsDialogContract = ArchiveServiceJobsDialogContract::newForArchiveSourceLink(InventJournalArchiveTrans);

        // Customize the caption and the context on the jobs dialog to show details for the currently

        jobsDialogContract.parmDialogCaption("@SCM:InventJournalArchiveJobsDialogCaption");

        jobsDialogContract.parmDialogContext(strFmt(
            "@SCM:InventJournalArchiveJobsDialogContext",
            InventJournalArchiveTrans.ArchiveFromDate,
            InventJournalArchiveTrans.ArchiveToDate));

        return jobsDialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProgressTimelineDialogConfiguration</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public TimelineDialogConfiguration getProgressTimelineDialogConfiguration(ArchiveServiceJobSourceLink _sourceLink)
    {
        var selectedArchiveTrans = InventJournalArchiveTrans_ds.cursor() as InventJournalArchiveTrans;

        // If no InventJournalArchiveTrans could be found, progress cannot be displayed and an error should be thrown
        if (!selectedArchiveTrans)
        {  
            throw error("@SCM:InventoryArchiveCannotFindProgressWarning");
        }

        // Use the corresponding InventJournalArchiveTrans to customize the timeline progress dialog with details
        // pertaining to the inventory archival
        TimelineDialogConfiguration timelineDialogConfiguration = TimelineDialogConfiguration::construct();
        timelineDialogConfiguration.parmFormCaption("@SCM:InventJournalArchiveProgressDialogCaption");

        var archiveMessageLogMenuItemArgs = new Args();
        archiveMessageLogMenuItemArgs.caller(this);

        timelineDialogConfiguration.getDialogFormContext()
            .addText(date2StrXpp(selectedArchiveTrans.ArchiveFromDate))
            .addText(date2StrXpp(selectedArchiveTrans.ArchiveToDate));

        return timelineDialogConfiguration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReversalDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceReversalDialogContract getReversalDialogContract()
    {
        ArchiveServiceReversalDialogContract reversalDialogContract = ArchiveServiceReversalDialogContract::newForArchiveSourceLink(InventJournalArchiveTrans);

        reversalDialogContract.parmReversalHandler(this);
        reversalDialogContract.parmDialogCaption(strFmt(
            "@SCM:InventJournalArchiveReversalDialogCaption",
            InventJournalArchiveTrans.ArchiveFromDate,
            InventJournalArchiveTrans.ArchiveToDate));

        return reversalDialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleCreationOfReversalJobForSourceLink</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void handleCreationOfReversalJobForSourceLink(RefRecId _archiveSourceLinkRecId, RefTableId _archiveSourceLinkTableId)
    {
        if (_archiveSourceLinkTableId == tableNum(InventJournalArchiveTrans))
        {
            var archiveTransToBeReversed = InventJournalArchiveTrans::findByRecId(_archiveSourceLinkRecId, NoYes::Yes);

            if (archiveTransToBeReversed)
            {

                info(strFmt(
                    "@SCM:InventJournalArchiveReversalConfirmationMessage",
                    InventJournalArchiveTrans.ArchiveFromDate,
                    InventJournalArchiveTrans.ArchiveToDate));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventoryArchiveTransRecId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public RecId getInventoryArchiveTransRecId()
    {
        return InventJournalArchiveTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMessageLogDataSourceTmpTable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public InventoryArchiveTransMessageLogTmp getMessageLogDataSourceTmpTable()
    {
        return inventoryArchiveTransMessageLogTmp;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ArchiveServiceJobDetailsView</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            ViewHistoryData.enabled(
                ArchiveServiceJobDetailsView.ArchiveServiceJobId
                && ArchiveServiceJobDetailsView.Type == ArchiveServiceArchiveType::MoveToHistory
                && ArchiveServiceJobDetailsView.Status == ArchiveServiceJobStatus::Archived);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RefreshArchiveTransButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
    
            element.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventJournalArchiveTrans</Name>
			<Table>InventJournalArchiveTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArchiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchiveFromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchiveToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchiveUserId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ArchiveServiceJobDetailsView</Name>
			<Table>ArchiveServiceJobDetailsView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArchiveServiceJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentageComplete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceLinkRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceLinkTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsProcessed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsStaged</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsToProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventJournalArchiveTrans</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SCM:InventJournalArchiveTransFormLabel</Caption>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
				<Pattern>FiltersAndToolbarInline</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>ArchiveTransQuickFilter</Name>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>OverviewGrid</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
											<Value>InventJournalArchiveTrans_ArchiveStatus</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ArchiveTransActionPane</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ArchiveTransRelatedActions</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RefreshArchiveTransButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<Text>@SYS113222</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ViewHistoryData</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>InventJournalArchiveForm</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>View</NormalImage>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
								<DataSource>InventJournalArchiveTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>OverviewGrid</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventJournalArchiveTrans_Name</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>InventJournalArchiveTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>InventJournalArchiveTrans_FromDate</Name>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ArchiveFromDate</DataField>
						<DataSource>InventJournalArchiveTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>InventJournalArchiveTrans_ToDate</Name>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ArchiveToDate</DataField>
						<DataSource>InventJournalArchiveTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventJournalArchiveTrans_DataAreaId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>DataAreaId</DataField>
						<DataSource>InventJournalArchiveTrans</DataSource>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>