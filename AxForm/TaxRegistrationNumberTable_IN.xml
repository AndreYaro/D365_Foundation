<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxRegistrationNumberTable_IN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class TaxRegistrationNumberTable_IN extends FormRun
    {
        QueryBuildRange        taxRegistrationTypeCriteria;
        QueryBuildRange        taxTaxTypeCriteria;
        QueryBuildRange        taxwithholdRegistrationTypeCriteria;
        TaxRegistrationType_IN registrationType;
        CompanyId              companyId;
        boolean                isWithholding;

}
]]></Source>
			</Method>
			<Method>
				<Name>buildJumprefQuery</Name>
				<Source><![CDATA[
    public void buildJumprefQuery(
        TaxRegistrationNumber_IN _taxRegistrationNumber,
        TaxRegistrationType_IN   _taxRegistrationType,
        TaxType_IN               _taxType)
    {
        QueryBuildDataSource queryBuildDataSource;
        Query                query;

        query = new Query();

        if (!isWithholding)
        {
            queryBuildDataSource = query.addDataSource(tablenum(TaxRegistrationNumbers_IN));

            if (_taxRegistrationNumber)
            {
                queryBuildDataSource.addRange(fieldnum(TaxRegistrationNumbers_IN, RegistrationNumber)).value(queryValue(_taxRegistrationNumber));
            }

            queryBuildDataSource.addRange(fieldnum(TaxRegistrationNumbers_IN, RegistrationType)).value(queryValue(_taxRegistrationType));
            queryBuildDataSource.addRange(fieldnum(TaxRegistrationNumbers_IN, TaxType)).value(queryValue(_taxType));
            taxRegistrationNumbers_ds.query(query);
            queryBuildDataSource = queryBuildDataSource.addDataSource(SalesReturnInformation);
            queryBuildDataSource.addLink(fieldNum(TaxRegistrationNumbers_IN, RecId), fieldNum(SalesReturnInformation_IN, TaxRegistrationNumbers));
            queryBuildDataSource.joinMode(JoinMode::OuterJoin);
        }
        else
        {
            queryBuildDataSource = query.addDataSource(tablenum(TaxWithholdRegNumbers_IN));
            if (_taxRegistrationNumber)
            {
                queryBuildDataSource.addRange(fieldnum(TaxWithholdRegNumbers_IN, RegistrationNumber)).value(queryValue(_taxRegistrationNumber));
            }
            queryBuildDataSource.addRange(fieldnum(TaxWithholdRegNumbers_IN, RegistrationType)).value(queryValue(_taxRegistrationType));
            taxwithholdRegNumbers_ds.query(query);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableControls</Name>
				<Source><![CDATA[
    public void enableDisableControls(boolean _changeInTax = false)
    {
        // Only update if it is changed from direct to indirect taxes(or vice-versa)
        if (_changeInTax)
        {
            if (isWithholding)
            {
                Overview_WithholdingTaxes.visible(true);
                Details_WithholdingTaxes.visible(true);
                general_withholdingTaxes.visible(true);
                Overview_IndirectTaxes.visible(false);
                Details_IndirectTaxes.visible(false);
                exciseNumRef_IndirectTaxes.visible(false);
                taxwithholdRegistrationTypeCriteria.value(queryValue(taxRegistrationType.selection()));
                IndirectTaxType.visible(false);
                TaxRegistrationNumbers_Type.visible(false);
                TaxRegistrationNumbers_BusinessVerticals.visible(false);
                TaxRegistrationNumbers_NameOfTaxablePerson.visible(false);
                TaxRegistrationNumbers_TurnOver.visible(false);
                GST_CasualRegistration.visible(false);
            }
            else
            {
                Overview_WithholdingTaxes.visible(false);
                Details_WithholdingTaxes.visible(false);
                general_withholdingTaxes.visible(false);
                Overview_IndirectTaxes.visible(true);
                Details_IndirectTaxes.visible(true);
                exciseNumRef_IndirectTaxes.visible(true);
                taxRegistrationTypeCriteria.value(queryValue(taxRegistrationType.selection()));
                IndirectTaxType.visible(true);
                TaxRegistrationNumbers_Type.visible(true);
                TaxRegistrationNumbers_BusinessVerticals.visible(true);
                TaxRegistrationNumbers_NameOfTaxablePerson.visible(true);
                TaxRegistrationNumbers_TurnOver.visible(true);
                GST_CasualRegistration.visible(true);
            }
        }

        if (isWithholding)
        {
            taxWithholdRegNumbers_ds.object(fieldnum(TaxWithholdRegNumbers_IN, IsGlobal)).enabled(taxWithholdRegNumbers.CreatedCompanyId == curExt());
        }
        else
        {
            taxRegistrationNumbers_ds.object(fieldnum(TaxRegistrationNumbers_IN, IsGlobal)).enabled(taxRegistrationNumbers.CreatedCompanyId == curExt());
        }

        if (!isWithholding
            && taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company
            && taxRegistrationNumbers.TaxType == TaxType_IN::Excise
            && taxRegistrationNumbers.RegistrationNumber)
        {
            exciseNumRef_IndirectTaxes.visible(true);
        }
        else
        {
            exciseNumRef_IndirectTaxes.visible(false);
        }

        if (!isWithholding
            && taxRegistrationNumbers.TaxType == TaxType_IN::GST)
        {
            TaxRegistrationNumbers_Type.visible(true);
            TaxRegistrationNumbers_BusinessVerticals.visible(true);
            TaxRegistrationNumbers_NameOfTaxablePerson.visible(true);
            TaxRegistrationNumbers_TurnOver.visible(true);
            if (taxRegistrationNumbers.RegistrationNumber)
            {
                GST_CasualRegistration.visible(true);
            }

            if (taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company)
            {
                element.enableDisableEInvoiceParameters(true);
                taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, DefaultBankAccountId)).visible(true);
            }
        }
        else
        {
            TaxRegistrationNumbers_Type.visible(false);
            TaxRegistrationNumbers_BusinessVerticals.visible(false);
            TaxRegistrationNumbers_NameOfTaxablePerson.visible(false);
            TaxRegistrationNumbers_TurnOver.visible(false);
            GST_CasualRegistration.visible(false);
            element.enableDisableEInvoiceParameters(false);
            taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, DefaultBankAccountId)).visible(false);
        }

        claimStatus.visible(!isWithholding);
        defermentSchedule.visible(!isWithholding);

        if (!isWithholding)
        {
            switch (taxRegistrationNumbers.TaxType)
            {
                case TaxType_IN::VAT:
                    claimStatus.enabled(true);
                    defermentSchedule.enabled(true);
                    break;

                case TaxType_IN::Excise:
                case TaxType_IN::ServiceTax:
                    claimStatus.enabled(true);
                    defermentSchedule.enabled(false);
                    break;

                default:
                    claimStatus.enabled(false);
                    defermentSchedule.enabled(false);
                    break;
            }
        }

        element.showIndirectDirectTab();
        element.showSalesReturntab();
        element.enableKeyVaultFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableKeyVaultFields</Name>
				<Source><![CDATA[
    private void enableKeyVaultFields()
    {
        boolean useAdvCert = SystemParameters::find().UseAdvCertificateStore;
        boolean isEInvoiceFeatureEnabled = FeatureStateProvider::isFeatureEnabled(EInvoice_IN_Feature::instance());

        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, UserNameKeyVaultRef)).visible(useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, UserPasswordKeyVaultRef)).visible(useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, ClientIdKeyVaultRef)).visible(useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, ClientSecretKeyVaultRef)).visible(useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, KeyVaultCertificateRef)).visible(useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, UserName)).visible(!useAdvCert);
        Details_EInvoice_editUserPassword.visible(isEInvoiceFeatureEnabled && !useAdvCert);
        Details_EInvoice_editClientId.visible(isEInvoiceFeatureEnabled && !useAdvCert);
        Details_EInvoice_editClientSecret.visible(isEInvoiceFeatureEnabled && !useAdvCert);
        taxRegistrationNumbers_ds.object(fieldNum(TaxRegistrationNumbers_IN, CertificateSubject)).visible(!useAdvCert);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableEInvoiceParameters</Name>
				<Source><![CDATA[
    private void enableDisableEInvoiceParameters(boolean _enable)
    {
        boolean enable;
        if (_enable)
        {
            AccessRight menuItemAccessRight = SecurityRights::construct().menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(EInvoiceParameters_IN));
            if (menuItemAccessRight == AccessRight::Delete)
            {
                enable = true;
            }
        }

        EInvoiceParametersTab.visible(enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableDataSources</Name>
				<Source><![CDATA[
    public void enableDisableDataSources()
    {
        taxRegistrationNumbers_ds.query().dataSourceTable(tablenum(TaxRegistrationNumbers_IN)).enabled(!isWithholding);
        exciseNumSequenceRef_ds.query().dataSourceTable(tablenum(ExciseNumSequenceRef_IN)).enabled(!isWithholding);
        taxwithholdRegNumbers_ds.query().dataSourceTable(tablenum(TaxWithholdRegNumbers_IN)).enabled(isWithholding);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args                args = new Args();
        Common              record;
        LedgerJournalTrans  ledgerJournalTrans;

        if (element.args().parmEnumType())
        {
            record = element.args().record();
            if (tablenum(LedgerJournalTrans) == element.args().dataset())
            {
                ledgerJournalTrans.data(record);
                companyId = ledgerJournalTrans ? ledgerJournalTrans.Company : curext();
            }
        }

        super();

        if (element.args().parmEnumType() && element.args().record())
        {
            if (!isWithholding)
            {
                registrationType = TaxRegistrationNumbers_IN::getRegistrationType(record);
                taxRegistrationType.selection(registrationType);
            }
            else
            {
                registrationType = TaxWithholdRegNumbers_IN::getRegistrationType(record);
                element.buildJumprefQuery(element.args().parm(), registrationType, TaxType_IN::None);
                taxRegistrationType.selection(registrationType);
            }
        }

        element.enableDisableControls(true);
        element.enableDisableDataSources();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showIndirectDirectTab</Name>
				<Source><![CDATA[
    public void showIndirectDirectTab()
    {
        if (exciseNumRef_IndirectTaxes.visible())
        {
            exciseNumRef_IndirectTaxes.collapse();
            exciseNumRef_IndirectTaxes.expand();
        }
        else if(GST_CasualRegistration.visible())
        {
            GST_CasualRegistration.collapse();
            GST_CasualRegistration.expand();
        }
        else if (General_WithholdingTaxes.visible())
        {
            General_WithholdingTaxes.collapse();
            General_WithholdingTaxes.expand();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showSalesReturntab</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method enables and diables returnable details.
    /// </summary>
    public void showSalesReturntab()
    {
        if (!isWithholding
            && (taxRegistrationNumbers.TaxType == TaxType_IN::VAT ||
            taxRegistrationNumbers.TaxType == TaxType_IN::SalesTax)
            && taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company)
        {
            CustomerReturns.expand();
            CustomerReturns.visible(true);
        }
        else
        {
            CustomerReturns.visible(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TaxRegistrationNumbers</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            boolean isInsert;

            isInsert = TaxRegistrationNumbers.RecId == 0 ;

            super();

            if (isInsert &&
                !isWithholding &&
                taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company &&
                (TaxRegistrationNumbers.TaxType == TaxType_IN::VAT ||
                TaxRegistrationNumbers.TaxType == TaxType_IN::SalesTax)
                )
            {
                if (TaxRegistrationNumbers.TaxType == TaxType_IN::VAT)
                {
                    SalesReturnInformation.BasisType = CustomerCalculationDateType_IN::InvoiceDate;
                }
                else if (TaxRegistrationNumbers.TaxType == TaxType_IN::SalesTax)
                {
                    SalesReturnInformation.BasisType = CustomerCalculationDateType_IN::DeliveryDate;
                }
                SalesReturnInformation.TaxRegistrationNumbers = taxRegistrationNumbers.RecId;
                SalesReturnInformation_ds.write();
                SalesReturnInformation_ds.refresh();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            taxRegistrationNumbers.RegistrationType = taxRegistrationType.selection();
            taxRegistrationNumbers.TaxType = IndirectTaxType.selection();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.enableDisableControls();
                element.showSalesReturntab();
            }

            UpdateExciseReference.enabled(TaxParameters::isExciseEnable_IN() && TaxRegistrationNumbers.TaxType == TaxType_IN::Excise);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildRange qbRange;
            super();

            taxRegistrationTypeCriteria = this.query().dataSourceTable(tablenum(TaxRegistrationNumbers_IN)).addRange(fieldnum(TaxRegistrationNumbers_IN, RegistrationType));
            taxRegistrationTypeCriteria.status(RangeStatus::Locked);
            taxRegistrationTypeCriteria.value(queryValue(taxRegistrationType.selection()));

            taxTaxTypeCriteria = this.query().dataSourceTable(tablenum(TaxRegistrationNumbers_IN)).addRange(fieldnum(TaxRegistrationNumbers_IN, TaxType));
            taxTaxTypeCriteria.status(RangeStatus::Locked);
            if (IndirectTaxType.selection() == TaxType_IN::None)
            {
                taxTaxTypeCriteria.value(SysQuery::valueUnlimited());
            }
            else
            {
                taxTaxTypeCriteria.value(queryValue(IndirectTaxType.selection()));
            }
            // Show global and current company records only
            qbRange = SysQuery::findOrCreateRange(this.query().dataSourceTable(tablenum(TaxRegistrationNumbers_IN)), fieldnum(TaxRegistrationNumbers_IN, RefCompanyId));
            qbRange.status(RangeStatus::Locked);
            qbRange.value(strfmt('%1,%2',SysQuery::valueEmptyString(),curext()));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (element.args().parmEnumType() && !isWithholding)
            {
                element.buildJumprefQuery(element.args().parm(), taxRegistrationType.selection(), element.args().parmEnum());
                appl.setDefaultCompany(companyId, false);
                taxRegistrationTypeCriteria = this.query().dataSourceTable(tableNum(TaxRegistrationNumbers_IN)).findRange(fieldnum(TaxRegistrationNumbers_IN, RegistrationType));
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>RegistrationNumber</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!isWithholding
                    && taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company
                    && taxRegistrationNumbers.TaxType == TaxType_IN::Excise
                    && taxRegistrationNumbers.RegistrationNumber)
                {
                    exciseNumRef_IndirectTaxes.visible(true);
                }
                else
                {
                    exciseNumRef_IndirectTaxes.visible(false);
                }
                if (!isWithholding
                    && taxRegistrationNumbers.TaxType == TaxType_IN::GST)
                {
                    TaxRegistrationNumbers_Type.visible(true);
                    TaxRegistrationNumbers_BusinessVerticals.visible(true);
                    TaxRegistrationNumbers_NameOfTaxablePerson.visible(true);
                    TaxRegistrationNumbers_TurnOver.visible(true);
                    if(taxRegistrationNumbers.RegistrationNumber)
                    {
                        GST_CasualRegistration.visible(true);
                        if (taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company)
                        {
                            GSTNumRef.visible(true);
                        }
                        else
                        {
                            GSTNumRef.visible(false);
                        }
                    }
                }
                else
                {
                    TaxRegistrationNumbers_Type.visible(false);
                    TaxRegistrationNumbers_BusinessVerticals.visible(false);
                    TaxRegistrationNumbers_NameOfTaxablePerson.visible(false);
                    TaxRegistrationNumbers_TurnOver.visible(false);
                    GST_CasualRegistration.visible(false);
                    GSTNumRef.visible(false);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.enableDisableControls();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>ExciseNumSequenceRef</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>NumberSequenceTable</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = ExciseNumSequenceRef_IN::lookupNumberSequenceRef(_formReferenceControl);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxwithholdRegNumbers</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            taxWithholdRegNumbers.RegistrationType = taxRegistrationType.selection();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.enableDisableControls();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildRange qbRange;

            super();

            taxwithholdRegistrationTypeCriteria = this.query().dataSourceTable(tablenum(TaxWithholdRegNumbers_IN)).addRange(fieldnum(TaxWithholdRegNumbers_IN, RegistrationType));

            // Show global and current company records only
            qbRange = SysQuery::findOrCreateRange(this.query().dataSourceTable(tablenum(TaxWithholdRegNumbers_IN)), fieldnum(TaxWithholdRegNumbers_IN, RefCompanyId));
            qbRange.status(RangeStatus::Locked);
            qbRange.value(strfmt('%1,%2',SysQuery::valueEmptyString(),curext()));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>SalesReturnInformation</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!isWithholding &&
                taxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company &&
                (TaxRegistrationNumbers.TaxType == TaxType_IN::VAT ||
                TaxRegistrationNumbers.TaxType == TaxType_IN::SalesTax)
                )
            {
                if (!SalesReturnInformation_IN::findByTaxRegistrationNumbers(taxRegistrationNumbers.RecId))
                {
                    SalesReturnInformation.TaxRegistrationNumbers = taxRegistrationNumbers.RecId;
                }
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Override clicked() method as this forms activates 2 datasources at same time.
            if (TaxTypeCategory.selection() == TaxDirectIndirect_IN::Indirect)
            {
                TaxRegistrationNumbers_DS.create();
            }
            else if (TaxTypeCategory.selection() == TaxDirectIndirect_IN::Direct)
            {
                TaxwithholdRegNumbers_DS.create();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Override clicked() method as this forms activates 2 datasources at same time.
            if (TaxTypeCategory.selection() == TaxDirectIndirect_IN::Indirect)
            {
                TaxRegistrationNumbers_DS.delete();
            }
            else if (TaxTypeCategory.selection() == TaxDirectIndirect_IN::Direct)
            {
                TaxwithholdRegNumbers_DS.delete();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateExciseReference</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Performs specific action when button UpdateReference is clicked.
        /// </summary>
        void clicked()
        {
            super();

            if (TaxRegistrationNumbers.TaxType == TaxType_IN::Excise && TaxRegistrationNumbers.RegistrationType == TaxRegistrationType_IN::Company)
            {
                GenerateExciseNumberSeqReference_IN::updateReference();
                ExciseNumSequenceRef_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTypeCategory</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                isWithholding = (this.selection() == TaxDirectIndirect_IN::Direct) ? true : false;
                element.enableDisableControls(true);
                element.enableDisableDataSources();
                if (isWithholding)
                {
                    NewDeleteButtonGroup.dataSource(taxwithholdRegNumbers_DS.name());
                    taxwithholdRegNumbers_DS.executeQuery();
                }
                else
                {
                    NewDeleteButtonGroup.dataSource(taxRegistrationNumbers_ds.name());
                    taxRegistrationNumbers_ds.refreshEx();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IndirectTaxType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            if (ret)
            {
                if (!isWithholding)
                {
                    if (IndirectTaxType.selection() == TaxType_IN::None)
                    {
                        taxTaxTypeCriteria.value(SysQuery::valueUnlimited());
                    }
                    else
                    {
                        taxTaxTypeCriteria.value(queryValue(IndirectTaxType.selection()));
                    }
                    taxRegistrationNumbers_ds.executeQuery();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                ret = TaxParameters::checkParameter_IN(IndirectTaxType.selection());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxRegistrationType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        // If registration type is changed manually
        public int selectionChange()
        {
            int ret;

            ret = super();
            if (ret)
            {
                if (!isWithholding)
                {
                    taxRegistrationTypeCriteria.value(queryValue(taxRegistrationType.selection()));
                    taxRegistrationNumbers_ds.executeQuery();
                }
                else
                {
                    WithholdingTaxes_TANRegistrationNumber.visible(taxRegistrationType.selection() == TaxRegistrationType_IN::Company);
                    taxwithholdRegistrationTypeCriteria.value(queryValue(taxRegistrationType.selection()));
                    taxwithholdRegnumbers_ds.executeQuery();
                }

                element.enableDisableEInvoiceParameters(taxRegistrationType.selection() == TaxRegistrationType_IN::Company);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxRegistrationNumbers</Name>
			<Table>TaxRegistrationNumbers_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccessTokenExpiryDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusinessVerticals</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateSubject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientIdKeyVaultRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClientSecretKeyVaultRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncryptedAccessToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncryptedClientId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncryptedClientSecret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncryptedSEK</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncryptedUserPassword</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGlobal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KeyVaultCertificateRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameOfTaxablePerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TurnOver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserNameKeyVaultRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserPasswordKeyVaultRef</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ExciseNumSequenceRef</Name>
			<Table>ExciseNumSequenceRef_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxRegistrationNumbers</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxwithholdRegNumbers</Name>
			<Table>TaxWithholdRegNumbers_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGlobal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TANRegistrationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAssessingofficer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSCircleNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSWardNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAssessingofficer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSCircleNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSWardNumber</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesReturnInformation</Name>
			<Table>SalesReturnInformation_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlertLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasisType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompletePeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncompletePeriodType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Period</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegistrationNumbers</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxRegistrationNumbers</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<Index>TaxRegistrationNumbersIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CasualRegistration</Name>
			<Table>TaxCasualRegistration_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegistrationNumbers_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxRegistrationNumbers</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>GSTNumSequenceRef</Name>
			<Table>TaxGSTNumSequenceRef_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxRegistrationNumbers</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS63769</Caption>
		<DataSource xmlns="">TaxRegistrationNumbers</DataSource>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>298261617</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>NewDeleteButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>NewButton</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>New</Command>
								<Primary>Yes</Primary>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>DeleteButton</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>DeleteRecord</Command>
								<Primary>Yes</Primary>
								<SaveRecord>No</SaveRecord>
								<Text>@sys14425</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup_NonGlobal</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ClaimStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>ClaimStatus_IN</MenuItemName>
								<Text>@GLS5252</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DefermentSchedule</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>defermentSchedule_IN</MenuItemName>
								<Text>@GLS5212</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>UpdateExciseReference</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYP4860325</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYP4860326</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_Group</Name>
				<ElementPosition>596523234</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TaxTypeCategory</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TaxDirectIndirect_IN</EnumType>
						<Label>@GLS63779</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>IndirectTaxType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TaxType_IN</EnumType>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TaxRegistrationType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TaxRegistrationType_IN</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<Columns>3</Columns>
				<BackStyle>Opaque</BackStyle>
				<BackgroundColor>DynBackgroundWhite</BackgroundColor>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Body</Name>
				<ElementPosition>894784851</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GridContainer</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>300</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Overview_IndirectTaxes</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TaxRegistrationNumbers_TaxType</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxType</DataField>
										<DataSource>TaxRegistrationNumbers</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxRegistrationNumbers_RegistrationNumber</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RegistrationNumber</DataField>
										<DataSource>TaxRegistrationNumbers</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxRegistrationNumbers_Name</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>TaxRegistrationNumbers</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TaxRegistrationNumbers_IsGlobal</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsGlobal</DataField>
										<DataSource>TaxRegistrationNumbers</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>TaxRegistrationNumbers</DataSource>
								<GridLinesStyle>Vertical</GridLinesStyle>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Overview_WithholdingTaxes</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxwithholdRegNumbers_RegistrationNumber</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RegistrationNumber</DataField>
										<DataSource>TaxwithholdRegNumbers</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxwithholdRegNumbers_Name</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>TaxwithholdRegNumbers</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TaxwithholdRegNumbers_IsGlobal</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsGlobal</DataField>
										<DataSource>TaxwithholdRegNumbers</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>TaxwithholdRegNumbers</DataSource>
								<GridLinesStyle>Vertical</GridLinesStyle>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<Style>BorderlessGridContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VSplitter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<HideIfEmpty>No</HideIfEmpty>
						<Style>SplitterVerticalContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DetailsContainer</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DetailsHeader</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Details_IndirectTaxes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>IndirectTaxes_TaxType</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxType</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>TaxRegistrationNumbers_Type</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Type</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>IndirectTaxes_RegistrationNumber</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>RegistrationNumber</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>IndirectTaxes_Name</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>TaxRegistrationNumbers_BusinessVerticals</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>TaxRegistrationNumbers</DataSource>
												<ReferenceField>BusinessVerticals</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxRegistrationNumbers_NameOfTaxablePerson</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>NameOfTaxablePerson</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxRegistrationNumbers_TurnOver</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TurnOver</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>IndirectTaxes_IsGlobal</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsGlobal</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxRegistrationNumbers_DefaultBankAccountId</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>DefaultBankAccountId</DataField>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>TaxRegistrationNumbers</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Details_WithholdingTaxes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTaxes_RegistrationNumber</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>RegistrationNumber</DataField>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTaxes_Name</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTaxes_TANRegistrationNumber</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1503238551</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>TANRegistrationNumber</DataField>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>WithholdingTaxes_IsGlobal</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsGlobal</DataField>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>TaxwithholdRegNumbers</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>Tab</Name>
								<AlignControl>No</AlignControl>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Tab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ExciseNumRef_IndirectTaxes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>NumSeqRefGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGridControl">
														<Name>NumSeqRef</Name>
														<ElementPosition>1550960411</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<Type>Grid</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>NumSeqRef_Reference</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ComboBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Reference</DataField>
																<DataSource>ExciseNumSequenceRef</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>NumSeqRef_NumberSequenceTable</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ReferenceGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>NumSeqRef_NumberSequenceTable_NumberSequence</Name>
																		<DataRelationPath>NumberSequenceTable</DataRelationPath>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																	</AxFormControl>
																</Controls>
																<DataSource>ExciseNumSequenceRef</DataSource>
																<ReferenceField>NumberSequenceTable</ReferenceField>
															</AxFormControl>
														</Controls>
														<DataGroup>ExciseNumSeq</DataGroup>
														<DataSource>ExciseNumSequenceRef</DataSource>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
										<Caption>@SYS26442</Caption>
										<DataSource>ExciseNumSequenceRef</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>General_WithholdingTaxes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>TDS</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TDS_TDSCircleNumber</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TDSCircleNumber</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TDS_TDSWardNumber</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TDSWardNumber</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TDS_TDSAssessingofficer</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TDSAssessingofficer</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>TDS</DataGroup>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>TCS</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TCS_TCSCircleNumber</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TCSCircleNumber</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TCS_TCSWardNumber</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TCSWardNumber</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TCS_TCSAssessingofficer</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>TCSAssessingofficer</DataField>
														<DataSource>TaxwithholdRegNumbers</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>TCS</DataGroup>
												<DataSource>TaxwithholdRegNumbers</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS2952</Caption>
										<DataSource>TaxwithholdRegNumbers</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>CustomerReturns</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048189</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupCustomerReturBasis</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>GroupCustomerReturBasis_BasisType</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>BasisType</DataField>
														<DataSource>SalesReturnInformation</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataGroup>CustomerReturnBasis</DataGroup>
												<DataSource>SalesReturnInformation</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CustomerReturnable_Period</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>GroupSalesReturn</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>GroupSalesReturn_PeriodType</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ComboBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>PeriodType</DataField>
																<DataSource>SalesReturnInformation</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormIntegerControl">
																<Name>GroupSalesReturn_Period</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Integer</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Period</DataField>
																<DataSource>SalesReturnInformation</DataSource>
															</AxFormControl>
														</Controls>
														<DataGroup>CustomerReturns</DataGroup>
														<DataSource>SalesReturnInformation</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>GroupIncompleteSales</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>GroupIncompleteSales_IncompletePeriodType</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ComboBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IncompletePeriodType</DataField>
																<DataSource>SalesReturnInformation</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormIntegerControl">
																<Name>GroupIncompleteSales_IncompletePeriod</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Integer</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IncompletePeriod</DataField>
																<DataSource>SalesReturnInformation</DataSource>
															</AxFormControl>
														</Controls>
														<DataGroup>IncompleteSales</DataGroup>
														<DataSource>SalesReturnInformation</DataSource>
													</AxFormControl>
												</Controls>
												<Columns>2</Columns>
												<Caption>@SYS4004288</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupCustomerReturnAlert</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>GroupCustomerReturnAlert_AlertLevel</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>AlertLevel</DataField>
														<DataSource>SalesReturnInformation</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataGroup>CustomerReturnAlert</DataGroup>
												<DataSource>SalesReturnInformation</DataSource>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS4004286</Caption>
										<DataSource>SalesReturnInformation</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>GST_CasualRegistration</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GSTCasualRegistration</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>ActionPane1</Name>
														<Type>ActionPane</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneTabControl">
																<Name>ActionPaneTab1</Name>
																<Type>ActionPaneTab</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>NewDeleteGroup1</Name>
																		<Type>ButtonGroup</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>AddButton</Name>
																				<Type>CommandButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextOnly</ButtonDisplay>
																				<Command>New</Command>
																				<Text>@sys60080</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>RemoveButton</Name>
																				<Type>CommandButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<ButtonDisplay>TextOnly</ButtonDisplay>
																				<Command>DeleteRecord</Command>
																				<SaveRecord>No</SaveRecord>
																				<Text>@sys26394</Text>
																			</AxFormControl>
																		</Controls>
																		<DataSource>CasualRegistration</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>CasualRegistration</DataSource>
															</AxFormControl>
														</Controls>
														<DataSource>CasualRegistration</DataSource>
														<Style>Strip</Style>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGridControl">
														<Name>CasualReg</Name>
														<Type>Grid</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>CasualReg_Description</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Description</DataField>
																<DataSource>CasualRegistration</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>CasualReg_FromDate</Name>
																<Type>Date</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>FromDate</DataField>
																<DataSource>CasualRegistration</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>CasualReg_ToDate</Name>
																<Type>Date</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ToDate</DataField>
																<DataSource>CasualRegistration</DataSource>
															</AxFormControl>
														</Controls>
														<DataGroup>CasualRegistration</DataGroup>
														<DataSource>CasualRegistration</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>CasualRegistration</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Caption>@TaxGST:CasualRegistration</Caption>
										<DataSource>CasualRegistration</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>GSTNumRef</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GSTNumSeqRefGroup</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGridControl">
														<Name>GSTNumSeqRef</Name>
														<Type>Grid</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>GSTNumSeqRef_Reference</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Reference</DataField>
																<DataSource>GSTNumSequenceRef</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>GSTNumSeqRef_NumberSequenceTable</Name>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>GSTNumSequenceRef</DataSource>
																<ReferenceField>NumberSequenceTable</ReferenceField>
															</AxFormControl>
														</Controls>
														<DataGroup>GSTNumSeq</DataGroup>
														<DataSource>GSTNumSequenceRef</DataSource>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Caption>@SYS26442</Caption>
										<DataSource>GSTNumSequenceRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>EInvoiceParametersTab</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Details_EInvoice</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Details_EInvoice_UserNameKeyVaultRef</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>TaxRegistrationNumbers</DataSource>
														<ReferenceField>UserNameKeyVaultRef</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Details_EInvoice_UserPasswordKeyVaultRef</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>TaxRegistrationNumbers</DataSource>
														<ReferenceField>UserPasswordKeyVaultRef</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Details_EInvoice_ClientIdKeyVaultRef</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>TaxRegistrationNumbers</DataSource>
														<ReferenceField>ClientIdKeyVaultRef</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Details_EInvoice_ClientSecretKeyVaultRef</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>TaxRegistrationNumbers</DataSource>
														<ReferenceField>ClientSecretKeyVaultRef</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Details_EInvoice_KeyVaultCertificateRef</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>TaxRegistrationNumbers</DataSource>
														<ReferenceField>KeyVaultCertificateRef</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Details_EInvoice_UserName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>UserName</DataField>
														<DataSource>TaxRegistrationNumbers</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Details_EInvoice_editUserPassword</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editUserPassword</DataMethod>
														<DataSource>TaxRegistrationNumbers</DataSource>
														<Label>@Tax_INOnlineInvoicing:UserPassword</Label>
														<PasswordStyle>Yes</PasswordStyle>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Details_EInvoice_editClientId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editClientId</DataMethod>
														<DataSource>TaxRegistrationNumbers</DataSource>
														<Label>@Tax_INOnlineInvoicing:ClientId</Label>
														<PasswordStyle>Yes</PasswordStyle>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Details_EInvoice_editClientSecret</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editClientSecret</DataMethod>
														<DataSource>TaxRegistrationNumbers</DataSource>
														<Label>@Tax_INOnlineInvoicing:ClientSecret</Label>
														<PasswordStyle>Yes</PasswordStyle>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Details_EInvoice_CertificateSubject</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CertificateSubject</DataField>
														<DataSource>TaxRegistrationNumbers</DataSource>
													</AxFormControl>
												</Controls>
												<Columns>3</Columns>
												<DataSource>TaxRegistrationNumbers</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYP4881698</Caption>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<RightMargin>5</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>5</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
					</AxFormControl>
				</Controls>
				<Columns>3</Columns>
				<Columnspace>0</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>