<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PayrollIssueWorkerPayDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PayrollIssueWorkerPayDialog extends FormRun
{
    PayrollPayStatement payrollPayStatement;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args() && element.args().record() && element.args().record().TableId == tableNum(PayrollPayStatement))
        {
            payrollPayStatement = element.args().record();
            this.initControls();
        }
        else
        {
            throw error(strFmt("@SYS22678", element.name()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    private void initControls()
    {
        if (payrollPayStatement.allowSubmitForReissue())
        {
            // This handles both regular pay statement and reversed pay statement
            element.design().caption("@Payroll:SubmitTheSelectedPayStatementToReissue");
            SecondaryInstruction.text("@HCM:PayStatementSubmitToReissueInstruction");
            PostPayStatementCheckbox.visible(NoYes::No);
        }
        else if (payrollPayStatement.allowSubmitForPayment())
        {
            element.design().caption("@Payroll:SubmitTheSelectedPayStatementForPayment");
            SecondaryInstruction.text("@Payroll:APaymentJournalWillBeCreatedForTheSelectedPayStatement");
            PostPayStatementCheckbox.visible(NoYes::Yes);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PostPayStatementCheckbox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (payrollPayStatement.allowPosting())
            {
                super();
            }
            else
            {
                warning("@Payroll:YouCannotPostThePayStatementBecauseItHasAlreadyBeenPosted");
                postPayStatementCheckbox.checked(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubmitIssueWorkerPay</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            PayrollIssueWorkerPayProcess issueWorkerPayProcess;
            PayrollPayStatementPost payStatementPost = new PayrollPayStatementPost();
            PayrollParameters payrollParameters = PayrollParameters::find();

            super();

            issueWorkerPayProcess = PayrollIssueWorkerPayProcess::Construct();
            issueWorkerPayProcess.parmCallingRecord(payrollPayStatement);
            issueWorkerPayProcess.processSinglePayStatement();

            // only will only be called if the issue worker pay is done without errors
            if (payrollPayStatement.allowPosting() && postPayStatementCheckbox.checked())
            {
                if (payrollParameters.SalaryClearingAccountLedgerDimension == 0)
                {
                    warning("@Payroll:ThePayrollClearingAccountIsRequiredToPostPayStatementsAssign");
                    return;
                }

                // launch the posting process here
                payStatementPost.setPayStatementCaller(payrollPayStatement);
                payStatementPost.initQuery();
                payStatementPost.setCallerArgs(element.args());
                payStatementPost.runOperation();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@Payroll:SubmitForPayment</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SecondaryInstruction</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColorRGB>
					<Red>15</Red>
					<Green>0</Green>
					<Blue>0</Blue>
				</BackgroundColorRGB>
				<ColorScheme>RGB</ColorScheme>
				<FontSize>13</FontSize>
				<ForegroundColorRGB>
					<Red>153</Red>
					<Green>51</Green>
					<Blue>0</Blue>
				</ForegroundColorRGB>
				<Text>@Payroll:APaymentJournalWillBeCreatedForTheSelectedPayStatement</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>PostPayStatementCheckbox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@Payroll:PostTheSelectedPayStatement</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>SubmitIssueWorkerPay</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS68352</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>