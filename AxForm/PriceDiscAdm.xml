<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PriceDiscAdm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PriceDiscAdm extends FormRun
                            implements PriceDiscIResearch, PriceDiscIRefresh, OfficeIGeneratedWorkbookCustomExporter
{
    PriceDiscAdmTable   callerpriceDiscAdmTable;
    Object              callerObject;

    #MACROLIB.Resource
    #ResAppl

    InventDimParm           inventDimParmPriceSetup;
    InventDimCtrl_Frm       inventDimFormSetup;

    Map                     lineMessage;
    TableGroupAll           itemCode;

    ImageListAppl_Infolog   imageList;

    InventDimParm           inventDimParmPriceWarning;

    boolean                 initFromPriceDiscAdmTrans;

    // <GEERU>
    #ISOCountryRegionCodes
    boolean countryRegion_RU;
    EcoResCategoryTreeDatasource        mHierarchyTree;
    boolean                             selectedHierachyIsSpecial;
    boolean                             retailComparePriceMode;
    RetailPriceDiscResearchCalc         retailPriceDiscResearchCalc;
    PriceDiscJournalNum                 lastUsedPriceDiscJournalNum;
    RetailPriceDiscAdmTable             retailPriceDiscAdmTable;
    // </GEERU>

    int64 messageId = 0;
    int64 warningId = 0;

    boolean countryRegion_IN;

}
]]></Source>
			</Method>
			<Method>
				<Name>getEntityNames</Name>
				<Source><![CDATA[
    private Set getEntityNames()
    {
        Set set = new Set(Types::String);

        if (callerpriceDiscAdmTable)
        {
            PriceDiscAdmTrans line;
            while select line
                where line.JournalNum == callerpriceDiscAdmTable.JournalNum
            {
                switch (line.Relation)
                {
                    case PriceType::EndDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseTotalDiscountJournalLineEntity));
                        break;
                    case PriceType::EndDiscSales:
                        set.add(tableStr(SalesOpenSalesTotalDiscountJournalLineEntity));
                        break;
                    case PriceType::LineDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseLineDiscountJournalLineEntity));
                        break;
                    case PriceType::LineDiscSales:
                        set.add(tableStr(SalesOpenSalesLineDiscountJournalLineEntity));
                        break;
                    case PriceType::MCRPostageDisc:
                        set.add(tableStr(MCROpenSalesPostageDiscountJournalLineEntity));
                        break;
                    case PriceType::MultiLineDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity));
                        break;
                    case PriceType::MultiLineDiscSales:
                        set.add(tableStr(SalesOpenSalesMultiLineDiscountJournalLineEntity));
                        break;
                    case PriceType::PricePurch:
                        set.add(tableStr(PurchOpenPurchasePriceJournalLineV2Entity));
                        break;
                    case PriceType::PriceSales:
                        set.add(tableStr(SalesOpenSalesPriceJournalLineV2Entity));
                        break;
                    default:
                        EventHandlerResult result = EventHandlerResult::newSingleResponse();
                        this.getEntityNameForRelationDelegate(line.Relation, result);
                        if (result.hasResult())
                        {
                            set.add(result.result());
                        }
                        break;
                }
            }

            if (!line)
            {
                switch (priceDiscAdmTrans.Relation)
                {
                    case PriceType::EndDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseTotalDiscountJournalLineEntity));
                        break;
                    case PriceType::EndDiscSales:
                        set.add(tableStr(SalesOpenSalesTotalDiscountJournalLineEntity));
                        break;
                    case PriceType::LineDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseLineDiscountJournalLineEntity));
                        break;
                    case PriceType::LineDiscSales:
                        set.add(tableStr(SalesOpenSalesLineDiscountJournalLineEntity));
                        break;
                    case PriceType::MCRPostageDisc:
                        set.add(tableStr(MCROpenSalesPostageDiscountJournalLineEntity));
                        break;
                    case PriceType::MultiLineDiscPurch:
                        set.add(tableStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity));
                        break;
                    case PriceType::MultiLineDiscSales:
                        set.add(tableStr(SalesOpenSalesMultiLineDiscountJournalLineEntity));
                        break;
                    case PriceType::PricePurch:
                        set.add(tableStr(PurchOpenPurchasePriceJournalLineV2Entity));
                        break;
                    case PriceType::PriceSales:
                        set.add(tableStr(SalesOpenSalesPriceJournalLineV2Entity));
                        break;
                    default:
                        EventHandlerResult result = EventHandlerResult::newSingleResponse();
                        this.getEntityNameForRelationDelegate(priceDiscAdmTrans.Relation, result);
                        if (result.hasResult())
                        {
                            set.add(result.result());
                        }
                        break;
                }
            }
        }
        return set;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityNameForRelationDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for providing the name of the table for the <c>PriceType</c> value.
    /// </summary>
    /// <param name = "_priceType">The <c>PriceType</c> value.</param>
    /// <param name = "_eventHandlerResult">Subscribers can use this class to provide the result.</param>
    delegate void getEntityNameForRelationDelegate(PriceType _priceType, EventHandlerResult _eventHandlerResult)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityAutoReportFieldGroupName</Name>
				<Source><![CDATA[
    protected IdentifierName getEntityAutoReportFieldGroupName(TableName _entityName)
    {
        switch (_entityName)
        {
            case tableStr(PurchOpenPurchaseTotalDiscountJournalLineEntity):
                return tableFieldGroupStr(PurchOpenPurchaseTotalDiscountJournalLineEntity, AutoReport);
            case tableStr(SalesOpenSalesTotalDiscountJournalLineEntity):
                return tableFieldGroupStr(SalesOpenSalesTotalDiscountJournalLineEntity, AutoReport);
            case tableStr(PurchOpenPurchaseLineDiscountJournalLineEntity):
                return tableFieldGroupStr(PurchOpenPurchaseLineDiscountJournalLineEntity, AutoReport);
            case tableStr(SalesOpenSalesLineDiscountJournalLineEntity):
                return tableFieldGroupStr(SalesOpenSalesLineDiscountJournalLineEntity, AutoReport);
            case tableStr(MCROpenSalesPostageDiscountJournalLineEntity):
                return tableFieldGroupStr(MCROpenSalesPostageDiscountJournalLineEntity, AutoReport);
            case tableStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity):
                return tableFieldGroupStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity, AutoReport);
            case tableStr(SalesOpenSalesMultiLineDiscountJournalLineEntity):
                return tableFieldGroupStr(SalesOpenSalesMultiLineDiscountJournalLineEntity, AutoReport);
            case tableStr(PurchOpenPurchasePriceJournalLineV2Entity):
                return tableFieldGroupStr(PurchOpenPurchasePriceJournalLineV2Entity, AutoReport);
            case tableStr(SalesOpenSalesPriceJournalLineV2Entity):
                return tableFieldGroupStr(SalesOpenSalesPriceJournalLineV2Entity, AutoReport);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityJournalNumberFieldName</Name>
				<Source><![CDATA[
    protected FieldName getEntityJournalNumberFieldName(TableName _entityName)
    {
        switch (_entityName)
        {
            case tableStr(PurchOpenPurchaseTotalDiscountJournalLineEntity):
                return fieldStr(PurchOpenPurchaseTotalDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(SalesOpenSalesTotalDiscountJournalLineEntity):
                return fieldStr(SalesOpenSalesTotalDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(PurchOpenPurchaseLineDiscountJournalLineEntity):
                return fieldStr(PurchOpenPurchaseLineDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(SalesOpenSalesLineDiscountJournalLineEntity):
                return fieldStr(SalesOpenSalesLineDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(MCROpenSalesPostageDiscountJournalLineEntity):
                return fieldStr(MCROpenSalesPostageDiscountJournalLineEntity, JournalNumber);
            case tableStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity):
                return fieldStr(PurchOpenPurchaseMultiLineDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(SalesOpenSalesMultiLineDiscountJournalLineEntity):
                return fieldStr(SalesOpenSalesMultiLineDiscountJournalLineEntity, TradeAgreementJournalNumber);
            case tableStr(PurchOpenPurchasePriceJournalLineV2Entity):
                return fieldStr(PurchOpenPurchasePriceJournalLineV2Entity, TradeAgreementJournalNumber);
            case tableStr(SalesOpenSalesPriceJournalLineV2Entity):
                return fieldStr(SalesOpenSalesPriceJournalLineV2Entity, TradeAgreementJournalNumber);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearDataEntityOptionsList</Name>
				<Source><![CDATA[
    private void clearDataEntityOptionsList(List _dataEntityOptionsList, Set _dataEntitiesToKeep)
    {
        ListIterator listIterator = new ListIterator(_dataEntityOptionsList);
        while (listIterator.more())
        {
            OfficeMenuDataEntityOptions dataEntityOption = listIterator.value();
            if (!_dataEntitiesToKeep.in(dataEntityOption.dataEntityName()))
            {
                listIterator.delete();
            }
            else
            {
                listIterator.next();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        List exportOptions = _menuOptions.customMenuItems();

        Set dataEntityNames = this.getEntityNames();
        Enumerator enumerator = dataEntityNames.getEnumerator();
        while (enumerator.moveNext())
        {
            TableName entityName = enumerator.current();
            OfficeGeneratedExportMenuItem exportOption = OfficeGeneratedExportMenuItem::construct(entityName, entityName);
            exportOption.setDisplayNameWithDataEntity();
            exportOptions.addEnd(exportOption);
        }
        this.clearDataEntityOptionsList(_menuOptions.dataEntityOptions(), dataEntityNames);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataEntityContext</Name>
				<Source><![CDATA[
    public ExportToExcelDataEntityContext getDataEntityContext(OfficeGeneratedExportMenuItem _menuItem)
    {
        ExportToExcelDataEntityContext context = null;
        Set entityNames = this.getEntityNames();
        if (entityNames.in(_menuItem.id()))
        {
            TableName entityName = _menuItem.id();

            context = ExportToExcelDataEntityContext::construct(entityName, this.getEntityAutoReportFieldGroupName(entityName));

            ListEnumerator enumerator = context.entities().getEnumerator();
            while (enumerator.moveNext())
            {
                ExportToExcelDataEntityInfo entity = enumerator.current();

                if (entity.entityName() == entityName)
                {
                    ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(entityName);

                    var filter = filterBuilder.and(
                        filterBuilder.companyFilter(),
                        filterBuilder.areEqual(this.getEntityJournalNumberFieldName(entityName), PriceDiscAdmTrans.JournalNum));

                    entity.filter(filter);
                }
            }
        }

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    public void bookRefresh()
    {
        priceDiscAdmTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookResearch</Name>
				<Source><![CDATA[
    public void bookResearch()
    {
        element.close();

        PriceDiscIResearch research = callerObject as PriceDiscIResearch;

        if (research)
        {
            research.bookResearch();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLines</Name>
				<Source><![CDATA[
    int checkLines(PriceDiscAdmTrans _priceDiscAdmTrans)
    {
        InventDimParm       inventDimParmAll,
                            inventDimParmItem,
                            inventDimParmInventDim;

        InventDim           inventDimLocal,
                            inventDimAll,
                            inventDimItem,
                            inventDimBlank;

        InventTable                         inventTable;
        InventDimGroupSetup                 inventDimGroupSetup;

        if (_priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table && _priceDiscAdmTrans.ItemRelation)
        {
            inventDimLocal    = InventDim::find(_priceDiscAdmTrans.InventDimId);

            if (InventDim::isInventDimEqual(inventDimBlank,inventDimLocal))
            {
                return -1;
            }

            inventTable = InventTable::find(_priceDiscAdmTrans.ItemRelation);
            inventDimGroupSetup = InventDimGroupSetup::newInventTable(inventTable);

            switch (_priceDiscAdmTrans.Module)
            {
                case ModuleInventCustVend::Cust :
                    inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmAll);
                    inventDimGroupSetup.inventDimParmActiveSalesPriceProductDim(inventDimParmItem);
                    break;

                case ModuleInventCustVend::Vend :
                    inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmAll);
                    inventDimGroupSetup.inventDimParmActivePurchPriceProductDim(inventDimParmItem);
                    break;

                case ModuleInventCustVend::Invent :
                    if (element.salesPrice(_priceDiscAdmTrans.Module, _priceDiscAdmTrans.Relation))
                    {
                        inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmAll);
                        inventDimGroupSetup.inventDimParmActiveSalesPriceProductDim(inventDimParmItem);
                    }
                    else
                    {
                        inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmAll);
                        inventDimGroupSetup.inventDimParmActivePurchPriceProductDim(inventDimParmItem);
                    }
                    break;
            }

            inventDimAll.copyDimParmDim(inventDimGroupSetup,inventDimLocal,inventDimParmAll);
            inventDimItem.copyDimParmDim(inventDimGroupSetup,inventDimLocal,inventDimParmItem);

            if  (!inventDimParmAll.isInventDimEqualInventDimParm(inventDimAll) ||
                 !inventDimParmItem.isInventDimEqualInventDimParm(inventDimItem))
                return imageList.image(#ImageError);

            inventDimParmInventDim.initFromInventDim(inventDimLocal);
            if (!InventDimParm::isInventDimParmEqual(inventDimParmInventDim, inventDimParmAll) &&
                !InventDimParm::isInventDimParmEqual(inventDimParmInventDim, inventDimParmItem))
            {
                return imageList.image(#ImageWarning);
            }
        }

        return -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doActiveButtons</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates or deactivates buttons depending on the form state.
    /// </summary>
    /// <param name="_enableDeleteButton">
    /// A boolean that indicates if the delete button should be enabled; optional.
    /// </param>
    public void doActiveButtons(boolean _enableDeleteButton = priceDiscAdmTrans.RecId)
    {
        boolean canUpdateLines = callerpriceDiscAdmTable.canUpdateLines();

        if (callerpriceDiscAdmTable.Posted)
        {
            priceDiscAdmCheck.enabled(false);
            priceDiscAdmPost.enabled(false);
            priceDiscAdmSearch.enabled(false);
            priceDiscAdmAdjust.enabled(false);
            priceDiscAdmCopy.enabled(false);
            priceDiscAdmDelete.enabled(false);
            deleteTradeAgreements.enabled(false);

            priceDiscAdmTrans_DS.allowEdit(false);
            priceDiscAdmTrans_DS.allowCreate(false);
            priceDiscAdmTrans_DS.allowDelete(false);

            PDSCalculationTable.enabled(false);
        }
        else
        {
            priceDiscAdmCheck.enabled(true);
            priceDiscAdmPost.enabled(true);

            if (PriceDiscAdmTable::find(priceDiscAdmTrans.JournalNum).LockedForDeletion)
            {
                priceDiscAdmSearch.enabled(false);
                priceDiscAdmAdjust.enabled(false);
                priceDiscAdmCopy.enabled(false);
                priceDiscAdmDelete.enabled(false);
                deleteTradeAgreements.enabled(true);

                priceDiscAdmTrans_DS.allowEdit(false);
                priceDiscAdmTrans_DS.allowCreate(false);
                priceDiscAdmTrans_DS.allowDelete(false);

                priceDiscAdmDelete.enabled(false);
            }
            else
            {
                priceDiscAdmSearch.enabled(true);
                priceDiscAdmAdjust.enabled(true);
                priceDiscAdmCopy.enabled(true);
                priceDiscAdmDelete.enabled(true);
                deleteTradeAgreements.enabled(true);

                priceDiscAdmTrans_DS.allowEdit(true);
                // <GEERU>
                if (!retailComparePriceMode)
                {
                    // </GEERU>
                    priceDiscAdmTrans_DS.allowCreate(true);
                    // <GEERU>
                }
                // </GEERU>
                priceDiscAdmTrans_DS.allowDelete(true);

                priceDiscAdmDelete.enabled(_enableDeleteButton);
            }

            priceDiscAdmDelete.skip(!priceDiscAdmDelete.enabled());

            PDSCalculationTable.enabled(true);
        }

        addProductsButton.enabled(canUpdateLines);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableActiveField_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable/disable India fields.
    /// </summary>
    void enableActiveField_IN()
    {
        boolean canEdit;

        // MRP is not allowed to be edited unless below conditions are all matched
        // - Relation is set to "Price (purch)" or "Price (sales)"
        // - Item code is set to "Table"
        // - Item relation is set to a valid item ID
        canEdit = (priceDiscAdmTrans.Relation == PriceType::PricePurch ||
                    priceDiscAdmTrans.Relation == PriceType::PriceSales)
                    && priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table
                    && priceDiscAdmTrans.ItemRelation != "";

        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, MaximumRetailPrice_IN)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, MaximumRetailPrice_IN)).allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryHierarchy</Name>
				<Source><![CDATA[
    private EcoResCategoryHierarchy getCategoryHierarchy()
    {
        return EcoResCategoryHierarchy::find(categoryHierarchyReferenceGroup.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();

        if (!element.validateActiveBufferExists())
        {
            throw error(strFmt("@SYS22678",element.name()));
        }

        callerObject = element.args().caller();

        imageList = new ImageListAppl_Infolog();
        priceDiscIcon.imageList(imageList.imageList());

        lineMessage = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Integer);

        messageId = Message::Add(MessageSeverity::Informational, "@SYS70185");

        if (warningId)
        {
            Message::Remove(warningId);
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);
        element.doActiveButtons();
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>

        switch (element.args().record().TableId)
        {
            case (tableNum(PriceDiscAdmTable)) :
                callerpriceDiscAdmTable = element.args().record();
                element.doActiveButtons();
                break;
        }

        // <GEERU>
        if (element.args().menuItemName() == menuitemDisplayStr(RetailPriceDiscResearch))
        {
            TmpRetailPriceDiscAdmTrans_ds.queryBuildDataSource().enabled(true);
            TmpRetailPriceDiscAdmTrans_ds.joinSource(PriceDiscAdmTrans_ds);
            TmpRetailPriceDiscAdmTrans_ds.linkType(FormLinkType::InnerJoin);

            this.initRetailComparePriceMode();
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCategoryHierarchy</Name>
				<Source><![CDATA[
    private void initCategoryHierarchy()
    {
        this.initializeCategoryHierarchy();
        this.initializeCategoryTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCategoryHierarchy</Name>
				<Source><![CDATA[
    private void initializeCategoryHierarchy()
    {
        if (retailPriceDiscAdmTable.EcoResCategoryHierarchyId)
        {
            categoryHierarchyReferenceGroup.value(retailPriceDiscAdmTable.EcoResCategoryHierarchyId);
        }
        else
        {
            categoryHierarchyReferenceGroup.value(EcoResCategoryHierarchy::findDefaultFormHierarchyRecId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCategoryTree</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes variables for the category tree control.
    /// </summary>
    public void initializeCategoryTree()
    {
        EcoResCategoryLookupParameters lookupParameters = new EcoResCategoryLookupParameters(false, false, false);
        EcoResCategoryHierarchy retailCategoryHierarchy = this.getCategoryHierarchy();
        EcoResCategory root = EcoResCategory::getRoot(retailCategoryHierarchy.RecId);

        selectedHierachyIsSpecial = EcoResCategoryHierarchyRole::existRoleHierarchyPair(EcoResCategoryNamedHierarchyRole::RetailSpecialGroup, retailCategoryHierarchy.RecId);

        mHierarchyTree = new EcoResCategoryTreeDatasource( ecoResCategory_ds,
                                                           hierarchyTreeCtrl,
                                                           fieldNum(EcoResCategory, RecId),
                                                           fieldNum(EcoResCategory, ParentCategory),
                                                           fieldNum(EcoResCategory, Name),
                                                           false /* No ID in description */,
                                                           true,
                                                           fieldNum(EcoResCategory, Code),
                                                           retailCategoryHierarchy,
                                                           null,
                                                           lookupParameters,
                                                           fieldNum(EcoResCategory, NestedSetLeft) /* for tree sort order */
                                                           );

        mHierarchyTree.initRoot(root.Name, root.RecId, mHierarchyTree.image(root) );
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRecord</Name>
				<Source><![CDATA[
    void  initRecord()
    {
        boolean canEdit;

        // When editing existing trade agreements the following columns should be blocked for editing:
        // - Relation.
        // - Account relation and code.
        // - Item relation and code.
        boolean noPriceDiscRef = !priceDiscAdmTrans.PriceDiscTableRef;

        if (initFromPriceDiscAdmTrans)
        {
            initFromPriceDiscAdmTrans = false;
        }
        else
        {
            priceDiscAdmTrans.initFromItemCode();
        }
        
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).skip(!noPriceDiscRef);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Relation)).allowEdit(noPriceDiscRef);

        if (priceDiscAdmTrans.Relation == PriceType::EndDiscPurch ||
            priceDiscAdmTrans.Relation == PriceType::EndDiscSales)
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).skip(true);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).allowEdit(false);
            priceDiscAdmTrans.ItemCode     = PriceDiscProductCodeType::All;
            priceDiscAdmTrans.ItemRelation = '';
        }
        else
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).skip(!noPriceDiscRef);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemCode)).allowEdit(noPriceDiscRef);
        }

        if (priceDiscAdmTrans.Relation == PriceType::PricePurch)
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(false);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).allowEdit(true);
        }
        else
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(true);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).allowEdit(false);
        }

        priceDiscAdmTrans_ds.modifiedCurrency();
        priceDiscAdmTrans_ds.modifiedGenericCurrency();

        if (priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::All)
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).skip(true);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).allowEdit(false);
        }
        else
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).skip(!noPriceDiscRef);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ItemRelation)).allowEdit(noPriceDiscRef);
        }

        if (priceDiscAdmTrans.AccountCode == PriceDiscPartyCodeType::All)
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).skip(true);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).allowEdit(false);
        }
        else
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).skip(!noPriceDiscRef);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountRelation)).allowEdit(noPriceDiscRef);
        }

        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountCode)).skip(!noPriceDiscRef);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AccountCode)).allowEdit(noPriceDiscRef);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent1));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).allowEdit(canEdit);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Percent2));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).allowEdit(canEdit);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, Markup));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).allowEdit(canEdit);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, PriceUnit));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).allowEdit(canEdit);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DeliveryTime));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).allowEdit(canEdit);

        canEdit = priceDiscAdmTrans.canEditPriceDiscValueField(fieldNum(PriceDiscAdmTrans, DisregardLeadTime));
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DisregardLeadTime)).skip(!canEdit);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DisregardLeadTime)).allowEdit(canEdit);

        if (    priceDiscAdmTrans.relation == PriceType::PricePurch
            ||  priceDiscAdmTrans.relation == PriceType::PriceSales)
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(true);
        }
        else
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(false);
        }

        // <GEERU>
        if (countryRegion_RU)
        {
            canEdit =  (   (   priceDiscAdmTrans.Module == ModuleInventCustVend::Cust
                            || priceDiscAdmTrans.Module == ModuleInventCustVend::Vend)
                        && priceDiscAdmTrans.AccountCode == PriceDiscPartyCodeType::Table
                        && priceDiscAdmTrans.AccountRelation);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU)).skip(!canEdit);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, AgreementHeaderExt_RU)).allowEdit(canEdit);

            switch (priceDiscAdmTrans.Relation)
            {
                case PriceType::PricePurch,
                     PriceType::LineDiscPurch,
                     PriceType::MultiLineDiscPurch,
                     PriceType::EndDiscPurch :

                    inventBailee_RU.visible(false);
                    break;

                case PriceType::PriceSales,
                     PriceType::LineDiscSales,
                     PriceType::MultiLineDiscSales,
                     PriceType::EndDiscSales :

                    inventBailee_RU.visible(true);
                    break;
            }
        }
        // </GEERU>

        // <GIN>
        if (countryRegion_IN)
        {
            this.enableActiveField_IN();
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRetailComparePriceMode</Name>
				<Source><![CDATA[
    private void initRetailComparePriceMode()
    {
        retailComparePriceMode = true;

        retailPriceDiscResearchCalc = RetailPriceDiscResearchCalc::construct();
        TmpRetailPriceDiscAdmTrans.linkPhysicalTableInstance(retailPriceDiscResearchCalc.getTmpRetailPriceDiscAdmTrans());

        this.updateTmpRetailPriceDiscAdmTrans();

        element.initCategoryHierarchy();

        PriceDiscAdmTrans_ds.insertIfEmpty(false);
        PriceDiscAdmTrans_ds.allowCreate(false);

        PriceDiscAdmSearch.visible(false);
        PriceDiscAdmCopy.visible(false);
        PriceDiscAdmCopyLine.visible(false);
        AddProductsButton.visible(false);
        PDSCalculationTable.visible(false);

        RetailAdditionalDataStatus.visible(true);

        InventDim_ds.allowEdit(false);

        CategoryTree.visible(true);
        VerticalSplitter.visible(true);

        RetailCategoryPriceRule.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    ItemId itemId()
    {
        return priceDiscAdmTrans.itemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    void refreshPriceDiscAdmTrans()
    {
        PriceDiscAdmTrans_ds.executeQuery();
        PriceDiscAdmTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshTmpRetailPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Recreates records in the <c>TmpRetailPriceDiscAdmTrans</c> table .
    /// </summary>
    public void refreshTmpRetailPriceDiscAdmTrans()
    {
        if (retailComparePriceMode)
        {
            retailPriceDiscResearchCalc.refreshTable();
            TmpRetailPriceDiscAdmTrans_ds.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    boolean salesPrice(PriceDiscModule _module, PriceType _relationType)
    {
        switch (_module)
        {
            case ModuleInventCustVend::Cust :   
                return true;
            case ModuleInventCustVend::Invent:
                if (_relationType == PriceType::EndDiscSales ||
                    _relationType == PriceType::LineDiscSales ||
                    _relationType == PriceType::MultiLineDiscSales ||
                    _relationType == PriceType::PriceSales)
                    return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeletionSwitch</Name>
				<Source><![CDATA[
    public void setDeletionSwitch()
    {
        boolean deleteRestoreSwitch;

        deleteRestoreSwitch    = !PriceDiscAdmTable::find(priceDiscAdmTrans.JournalNum).LockedForDeletion;

        // Disable grid and fields
        grid.highlightActive(deleteRestoreSwitch);
        grid.allowEdit(deleteRestoreSwitch);

        priceDiscAdmTrans_ds.allowDelete(deleteRestoreSwitch);
        // <GEERU>
        if (!retailComparePriceMode)
        {
            // </GEERU>
            priceDiscAdmTrans_ds.allowCreate(deleteRestoreSwitch);
            // <GEERU>
        }
        // </GEERU>
        priceDiscAdmTrans_ds.allowEdit(deleteRestoreSwitch);

        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, FromDate)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, ToDate)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Markup)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PriceUnit)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent1)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, Percent2)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, DeliveryTime)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, CalendarDays)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(!deleteRestoreSwitch);
        priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, SearchAgain)).skip(!deleteRestoreSwitch);

        // Disable buttons
        priceDiscAdmSearch.enabled(deleteRestoreSwitch);
        priceDiscAdmSearch.skip(!deleteRestoreSwitch);
        priceDiscAdmAdjust.enabled(deleteRestoreSwitch);
        priceDiscAdmAdjust.skip(!deleteRestoreSwitch);
        priceDiscAdmCopy.enabled(deleteRestoreSwitch);
        priceDiscAdmCopy.skip(!deleteRestoreSwitch);

        priceDiscAdmDelete.enabled(priceDiscAdmTrans.RecId && deleteRestoreSwitch);
        priceDiscAdmDelete.skip(!priceDiscAdmDelete.enabled());

        if (!deleteRestoreSwitch)
        {
            deleteTradeAgreements.text("@SYS303901");
        }
        else
        {
            deleteTradeAgreements.text("@SYS138894");
        }

        priceDiscAdmTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReferenceText</Name>
				<Source><![CDATA[
    void setReferenceText()
    {
        if (messageId)
        {
            Message::Remove(messageId);
        }

        if (inventDimParmPriceSetup.toString())
        {
            messageId = Message::Add(MessageSeverity::Informational, strFmt("@SYS70184",inventDimParmPriceSetup.toString()));
        }
        else
        {
            messageId = Message::Add(MessageSeverity::Informational, "@SYS70185");
        }

        if (warningId)
        {
            Message::Remove(warningId);
        }

        if (!lineMessage.exists(priceDiscAdmTrans.RecId))
        {
            lineMessage.insert(priceDiscAdmTrans.RecId,element.checkLines(priceDiscAdmTrans));
        }

        if (lineMessage.lookup(priceDiscAdmTrans.RecId) != -1 && inventDimParmPriceWarning.toString())
        {
            warningId = Message::Add(MessageSeverity::Warning, strFmt("@SYS70190",inventDimParmPriceWarning.toString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm           inventDimParmVisible;
        InventDimParm           inventDimParmEnabled;
        InventDimGroupSetup     inventDimGroupSetup;
        InventTable             localInventTable;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init          :
            case InventDimFormDesignUpdate::LinkActive    :
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl::newFromForm(element);
                }

                inventDimFormSetup.parmSkipOnHandLookUp(true);

                if (priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table)
                {
                    inventDimParmVisible.initPriceDiscDimAllGrp();
                }
                else
                {
                    inventDimParmVisible.clear();
                }

                inventDimFormSetup.parmDimParmVisibleGrid(inventDimParmVisible);

            case InventDimFormDesignUpdate::Active        :

                inventDimFormSetup.formActiveSetup();

                if (priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table && priceDiscAdmTrans.ItemRelation)
                {
                    localInventTable    = InventTable::find(priceDiscAdmTrans.ItemRelation);
                    //Deviating from the common pattern using InventDimGroupSetup::newItemId(....) to allow the form to load with incomplete dimension settings on the product.
                    inventDimGroupSetup = InventDimGroupSetup::newDimensionGroups(localInventTable.productDimensionGroup(),
                                                                                  localInventTable.storageDimensionGroup(),
                                                                                  localInventTable.trackingDimensionGroup());
                    inventDimGroupSetup.inventDimParmActive(inventDimParmEnabled);
                    switch (priceDiscAdmTrans.Module)
                    {
                        case ModuleInventCustVend::Cust :
                            inventDimGroupSetup.inventDimParmActiveSalesPrice(inventDimParmPriceSetup);
                            break;
                        case ModuleInventCustVend::Vend :
                            inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParmPriceSetup);
                            break;
                    }
                }
                else
                {
                    inventDimParmEnabled.clear();
                    inventDimParmPriceSetup.clear();
                }

                inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled);
                inventDimFormSetup.formSetControls(true);

                inventDimParmPriceWarning.initFromInventDim(inventDim);
                inventDimParmPriceWarning = InventDimParm::xorParms(inventDimParmPriceWarning, inventDimParmPriceSetup);
                this.setReferenceText();

                priceDiscAdmSmartRound.enabled(priceDiscAdmTrans.Relation == PriceType::PriceSales);

                priceDiscAdmCopyLine.enabled(priceDiscAdmTrans.RecId);

                break;

            case InventDimFormDesignUpdate::FieldChange   :
                inventDimFormSetup.formActiveSetup();

                if (priceDiscAdmTrans.ItemCode == PriceDiscProductCodeType::Table && priceDiscAdmTrans.ItemRelation)
                {
                    localInventTable    = InventTable::find(priceDiscAdmTrans.ItemRelation);
                    //Deviating from the common pattern using InventDimGroupSetup::newItemId(....) to allow the form to load with incomplete dimension settings on the product.
                    inventDimGroupSetup = InventDimGroupSetup::newDimensionGroups(localInventTable.productDimensionGroup(),
                                                                                  localInventTable.storageDimensionGroup(),
                                                                                  localInventTable.trackingDimensionGroup());
                    inventDimGroupSetup.inventDimParmActive(inventDimParmEnabled);
                }
                else
                {
                    inventDimParmEnabled.clear();
                }

                inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled);
                inventDimFormSetup.formSetControls(false);
                break;

            default : throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTmpRetailPriceDiscAdmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates records in the <c>TmpRetailPriceDiscAdmTrans</c> table.
    /// </summary>
    public void updateTmpRetailPriceDiscAdmTrans()
    {
        if (retailComparePriceMode)
        {
            if (lastUsedPriceDiscJournalNum != callerpriceDiscAdmTable.JournalNum)
            {
                retailPriceDiscAdmTable = RetailPriceDiscAdmTable::findByPriceDiscAdmTable(callerpriceDiscAdmTable.RecId);

                retailPriceDiscResearchCalc.updateTable(callerpriceDiscAdmTable.JournalNum);
                RetailBasePrice.visible(retailPriceDiscAdmTable.SaveBasePrice);
                RetailSalesPrice.visible(retailPriceDiscAdmTable.SaveSalesPrice);
                RetailOtherGroup.visible(retailPriceDiscAdmTable.SaveOtherGroupPrice);
                RetailInventCost.visible(retailPriceDiscAdmTable.SaveInventCost);
                lastUsedPriceDiscJournalNum = callerpriceDiscAdmTable.JournalNum;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateActiveBufferExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether an active buffer exists.
    /// </summary>
    /// <returns>true when an active buffer exists; otherwise false.</returns>
    protected boolean validateActiveBufferExists()
    {
        return element.args().dataset() && element.args().record().RecId;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PriceDiscAdmTrans</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            PriceDiscAdmTrans localPriceDiscAdmTrans;

            localPriceDiscAdmTrans.data(priceDiscAdmTrans);

            super(_append);

            if (initFromPriceDiscAdmTrans)
            {
                priceDiscAdmTrans.initFromPriceDiscAdmTrans(localPriceDiscAdmTrans);
                inventDim.data(priceDiscAdmTrans.inventDim());
            }

            element.doActiveButtons(true);

            relation.setFocus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Deletes the current price journal line record and sets active buttons.
        /// </summary>
        public void delete()
        {
            super();

            element.doActiveButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modifiedCurrency</Name>
						<Source><![CDATA[
        void modifiedCurrency()
        {
            SalesParameters salesParameters;

            if (priceDiscAdmTrans.Relation == PriceType::PriceSales
                || priceDiscAdmTrans.Relation == PriceType::LineDiscSales
                || priceDiscAdmTrans.Relation == PriceType::MultiLineDiscSales)
            {
                salesParameters = SalesParameters::find();

                if (salesParameters.GenericCurrency == priceDiscAdmTrans.Currency)
                {
                    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(false);
                    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(true);
                }
                else
                {
                    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(true);
                    priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(false);
                }
            }
            else
            {
                priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).skip(true);
                priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, GenericCurrency)).allowEdit(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modifiedGenericCurrency</Name>
						<Source><![CDATA[
        void modifiedGenericCurrency()
        {
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans,Currency)).allowEdit(!priceDiscAdmTrans.GenericCurrency);
            priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans,Currency)).skip(priceDiscAdmTrans.GenericCurrency);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkIfLines</Name>
						<Source><![CDATA[
        display ImageRes checkIfLines(PriceDiscAdmTrans _priceDiscAdmTrans)
        {
            if (!lineMessage.exists(_priceDiscAdmTrans.RecId))
                lineMessage.insert(_priceDiscAdmTrans.RecId,element.checkLines(_priceDiscAdmTrans));

            return lineMessage.lookup(_priceDiscAdmTrans.RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            priceDiscAdmTrans.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            SalesInstrumentationLogger instrumentationLogger = SalesInstrumentationLogger::createLogger(formStr(PriceDiscAdm));
            using (var activity = instrumentationLogger.salesTradeAgreementJournalLineActivities().save())
            {
                InventDim newInventDim = InventDim::findOrCreate(inventDim);
                priceDiscAdmTrans.InventDimId = newInventDim.InventDimId;

                super();

                if (lineMessage.exists(priceDiscAdmTrans.RecId))
                {
                    lineMessage.remove(priceDiscAdmTrans.RecId);
                }

                if (priceDiscAdmTrans.InventDimId != inventDim.InventDimId)
                {
                    inventDim.data(newInventDim);
                    inventDim_ds.setCurrent();
                }

                // <GEERU>
                if (retailComparePriceMode)
                {
                    retailPriceDiscResearchCalc.recalcRecord(PriceDiscAdmTrans);
                    PriceDiscAdmTrans_ds.reread();
                    PriceDiscAdmTrans_ds.reread();
                    TmpRetailPriceDiscAdmTrans_ds.reread();
                    TmpRetailPriceDiscAdmTrans_ds.refresh();
                }
                // </GEERU>
            }
            
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            switch (element.args().record().TableId)
            {
                case (tableNum(PriceDiscAdmTable)) :
                    callerpriceDiscAdmTable = element.args().record();
                    element.doActiveButtons();
                    // <GEERU>
                    if (retailComparePriceMode)
                    {
                        element.updateTmpRetailPriceDiscAdmTrans();
                        TmpRetailPriceDiscAdmTrans_ds.reread();
                        TmpRetailPriceDiscAdmTrans_ds.refresh();
                    }
                    // </GEERU>
                    break;
            }

            super();

            element.updateDesign(InventDimFormDesignUpdate::LinkActive);

            if (callerpriceDiscAdmTable && !callerpriceDiscAdmTable.Posted)
            {
                element.setDeletionSwitch();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            super();

            priceDiscAdmTrans.Currency       = Ledger::accountingCurrency(CompanyInfo::current());
            priceDiscAdmTrans.AccountCode    = PriceDiscPartyCodeType::All;
            priceDiscAdmTrans.ItemCode       = PriceDiscProductCodeType::Table;

            priceDiscAdmTrans.relation = callerpriceDiscAdmTable.DefaultRelation;
            priceDiscAdmTrans.modifiedField(fieldnum(PriceDiscAdmTrans, Relation)); //it will set Module to proper value

            //Restore initial value. It is initiation of the record so it cannot be treated as Different from posted
            priceDiscAdmTrans.DifferentFromPosted = NoYes::No;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            element.initRecord();
            element.updateDesign(InventDimFormDesignUpdate::Active);
            element.doActiveButtons();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                element.initRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AccountRelation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                priceDiscAdmTrans.initFromAccountCode();
                // <GEERU>
                if (countryRegion_RU)
                {
                    element.initRecord();
                }
                // </GEERU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AgreementHeaderExt_RU</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                priceDiscAdmTrans.jumpRefAgreement_RU();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = priceDiscAdmTrans.lookupAgreement_RU(_formReferenceControl);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Currency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                priceDiscAdmTrans_ds.modifiedCurrency();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>GenericCurrency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                priceDiscAdmTrans_ds.modifiedGenericCurrency();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void  modified()
            {
                super();

                element.initRecord();

                element.updateDesign(InventDimFormDesignUpdate::FieldChange);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemRelation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                InventDim   inventDimBlank;

                super();

                inventDimBlank = InventDim::find(InventDim::inventDimIdBlank());
                priceDiscAdmTrans.InventDimId = inventDimBlank.InventDimId;
                inventDim.data(inventDimBlank);

                element.updateDesign(InventDimFormDesignUpdate::FieldChange);

                // <GIN>
                if (countryRegion_IN)
                {
                    element.enableActiveField_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>relation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                priceDiscAdmTrans_ds.object(fieldNum(PriceDiscAdmTrans, PDSCalculationId)).allowEdit(priceDiscAdmTrans.relation == PriceType::PricePurch);
                element.initRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UnitId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                priceDiscAdmTrans.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

                super(_formControl, _filterStr);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //    super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResCategory</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            // clear the ranges on EcoResCategoryDescendents data source
            if (retailComparePriceMode)
            {
                RetailCategoryHelper::categorySelectionChanged(
                    ecoResCategory,
                    ecoResCategoryDescendents_ds,
                    retailCategoryContainmentLookup_ds,
                    selectedHierachyIsSpecial);

                PriceDiscAdmTrans_ds.executeQuery();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PriceDiscAdmPost</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!PriceDiscAdmFormValidateJournalWhenPostFlight::instance().isEnabled()
              || priceDiscAdmTrans.validateWrite())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmCheck</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // The button ValidateLinesWithErrorsOrWarnings will be disabled if there are no errors or warnings among the records
            PriceDiscAdmTrans tmpPriceDiscAdmTrans;

            super();
            tmpPriceDiscAdmTrans = priceDiscAdmTrans_ds.getFirst();
            if (PriceDiscAdmTrans::existErrorsOrWarnings(tmpPriceDiscAdmTrans.JournalNum))
            {
                validateLinesWithErrorsOrWarnings.enabled(true);
            }
            else
            {
                validateLinesWithErrorsOrWarnings.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmAdjustPrice</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            //<GEERU>
            element.refreshTmpRetailPriceDiscAdmTrans();
            //</GEERU>
            priceDiscAdmTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmSmartRound</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            //<GEERU>
            element.refreshTmpRetailPriceDiscAdmTrans();
            //</GEERU>
            priceDiscAdmTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmSearch</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            priceDiscAdmTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmCopy</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            priceDiscAdmTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmCopyLine</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            initFromPriceDiscAdmTrans = true;
            super();
            PriceDiscAdmTrans_DS.create();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscAdmDelete</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            priceDiscAdmTrans_ds.research();
            // The action would update PriceDiscAdmTable, so refresh it here.
            callerpriceDiscAdmTable = PriceDiscAdmTable::find(callerpriceDiscAdmTable.JournalNum, true);
            element.doActiveButtons();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddProductsButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            MenuFunction menuFunction;
            Args args;

            super();

            menuFunction = new MenuFunction(menuitemDisplayStr(RetailPriceDiscAddItems), MenuItemType::Display);
            args = new Args();
            args.name(formStr(RetailAddItems));
            args.caller(element);
            args.record(callerpriceDiscAdmTable);

            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Changed</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Shows the explanation for the line change status graphical sign.
        /// </summary>
        /// <returns>
        ///     The explanation for the line change status graphical sign.
        /// </returns>
        public str toolTip()
        {
            return priceDiscAdmTrans.isDiscAdmTransChanged()? "@SYS134963" : "";
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RetailAdditionalDataStatus</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Shows the explanation for the line change status graphical sign.
        /// </summary>
        /// <returns>
        ///     The explanation for the line change status graphical sign.
        /// </returns>
        public str toolTip()
        {
            return TmpRetailPriceDiscAdmTrans.additionalDataStatusResImage() ? "@SYP4880855" : "";
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceDiscIcon</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Shows the explanation for the line dimension status graphical sign.
        /// </summary>
        /// <returns>
        ///     The explanation for the line dimension status graphical sign.
        /// </returns>
        public str toolTip()
        {
            str     ret;

            switch (priceDiscAdmTrans_ds.checkIfLines(priceDiscAdmTrans))
            {
                case imageList.image(#ImageWarning) : ret = "@SYS70189"; break;
                case imageList.image(#ImageError)   : ret = "@SYS70186"; break;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ErrorExist</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Shows the explanation for the validation error log graphical sign.
        /// </summary>
        /// <returns>
        ///     The explanation for the validation error log graphical sign.
        /// </returns>
        public str toolTip()
        {
            return priceDiscAdmTrans.errorExist()? "@SYS134964" : "";
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PriceDiscAdmTrans</Name>
			<Table>PriceDiscAdmTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Agreement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllocateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalendarDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DifferentFromPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisregardLeadTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenericCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventBaileeFreeDays_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Markup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MustBeDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSCalculationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percent1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percent2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceDiscTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuantityAmountFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuantityAmountTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchAgain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CounterField>LineNum</CounterField>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PriceDiscAdmTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategory</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategory_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategoryDescendents</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductCategory</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategoryDescendents_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpRetailPriceDiscAdmTrans</Name>
			<Table>TmpRetailPriceDiscAdmTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdditionalDataStatus</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasePrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasePriceDeviation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasePriceOrigCurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BasePricePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventCostDeviation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventCostPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCurBasePrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherGroupPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherGroupPriceDeviation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OtherGroupPricePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceDiscAdmTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCategoryPriceRuleRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPriceDeviation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPricePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCategoryContainmentLookup</Name>
			<Table>RetailCategoryContainmentLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContainedCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDirty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductCategory</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductCategory</Name>
			<Table>EcoResProductCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TmpRetailPriceDiscAdmTrans</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<Index>ProductCategory</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS59019</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">Custom</Pattern>
		<TitleDataSource xmlns="">PriceDiscAdmTrans</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PriceDiscAdmPost</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>PriceDiscAdmTrans</DataSource>
								<MenuItemName>PriceDiscAdmPost</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PriceDiscAdmCheck</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS23471</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ValidateAll</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PriceDiscAdmCheck</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ValidateSelectedLines</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PriceDiscAdmCheckSelectedLines</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ValidateLinesWithErrorsOrWarnings</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PriceDiscAdmCheckErrorsOrWarningsLines</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS2076</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PriceDiscAdmAdjust</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS134965</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PriceDiscAdmAdjustPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<MenuItemName>PriceDiscAdmAdjust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PriceDiscAdmSmartRound</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PriceDiscAdmSmartRound</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PriceDiscAdmSmartRoundRules</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PriceDiscSmartRounding</MenuItemName>
										<Text>@SYS134962</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS16104</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PDSCalculationTable</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2122317822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>PriceDiscAdmTrans</DataSource>
								<MenuItemName>PDSCalculationTable</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RetailCategoryPriceRule</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2141192190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYP4880889</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
								<MenuItemName>RetailCategoryPriceRule</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<OpenMode>View</OpenMode>
								<SaveRecord>No</SaveRecord>
								<Text>@SYP4880888</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VerticalSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CategoryTree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>Column</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CategoryHierarchyLookup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1033973606</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>CategoryHierarchyReferenceGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>EcoResCategoryHierarchyId</ExtendedDataType>
										<ReplacementFieldGroup>Name</ReplacementFieldGroup>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTreeControl">
								<Name>HierarchyTreeCtrl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1550960411</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>Column</HeightMode>
								<Type>Tree</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>Column</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
				</Controls>
				<LeftMargin>0</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<BackgroundColor>WindowBackground</BackgroundColor>
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridFilterGroup</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>QuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>Grid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>GridActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FormButtonGroupControl1</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PriceDiscAdmSearch</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1744830462</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<MenuItemName>PriceDiscAdmSearch</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PriceDiscAdmCopy</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2030043134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<MenuItemName>PriceDiscAdmCopy</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>PriceDiscAdmCopyLine</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>PriceDisc</ConfigurationKey>
												<ElementPosition>2046820350</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Create</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<KeyTip>@SYS340343</KeyTip>
												<MultiSelect>No</MultiSelect>
												<Text>@SYS183924</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PriceDiscAdmDelete</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<MenuItemName>PriceDiscAdmDelete</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddProductsButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>Retail</ConfigurationKey>
												<ElementPosition>2118123518</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@REX1312</HelpText>
												<NeededPermission>Create</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS132109</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>ButtonLineInventory</Name>
												<ElementPosition>2130706430</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS69645</HelpText>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>InventDimParmFixed</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>InventDimParmFixed</MenuItemName>
														<SaveRecord>No</SaveRecord>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<SaveRecord>No</SaveRecord>
												<Text>@SYS981</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>DeleteTradeAgreements</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2139095038</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<MenuItemName>PriceDiscAdmDeleteTradeAgreements</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Changed</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>15</Height>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS138673</HelpText>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>isDiscAdmTransChanged</DataMethod>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Label>@SYS112136</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>relation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_relation</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>relation</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AccountCode</Name>
										<ElementPosition>1480266671</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountCode</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountRelation</Name>
										<ElementPosition>1484138336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountRelation</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ItemCode</Name>
										<ElementPosition>1488010001</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ItemRelation</Name>
										<ElementPosition>1491881666</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemRelation</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PriceDiscAdmTrans_AgreementHeaderExt_RU</Name>
										<ElementPosition>1495753331</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PriceDiscAdmTrans_AgreementHeaderExt_RU_AgreementId</Name>
												<DataRelationPath>AgreementHeaderExt_RU</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<ReferenceField>AgreementHeaderExt_RU</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimension</Name>
										<ElementPosition>1499624996</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_InventoryDimension_configId</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimension_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PriceDiscAdmTrans_QuantityAmountFrom</Name>
										<ElementPosition>1503496661</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_PriceDiscAdmTrans_QuantityAmountFrom</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>QuantityAmountFrom</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PriceDiscAdmTrans_QuantityAmountTo</Name>
										<ElementPosition>1507368326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_PriceDiscAdmTrans_QuantityAmountTo</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>QuantityAmountTo</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UnitId</Name>
										<ElementPosition>1511239991</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitId</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Amount</Name>
										<ElementPosition>1515111656</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>MaximumRetailPrice_IN</Name>
										<ElementPosition>1518983321</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice_IN</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PriceDiscAdmTrans_Currency</Name>
										<ElementPosition>1522854986</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Currency</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>RetailAdditionalDataStatus</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1586827197</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>15</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>additionalDataStatusResImage</DataMethod>
										<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
										<Label>@SYP4880853</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RetailBasePrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1650799409</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>BasePrice_OrigCurBasePrice</Name>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OrigCurBasePrice</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BasePrice_BasePriceOrigCur</Name>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>BasePriceOrigCurrencyCode</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>BasePrice_BasePrice</Name>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>BasePrice</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>BasePrice_BasePriceDeviation</Name>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>BasePriceDeviation</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>BasePrice_BasePricePercent</Name>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>BasePricePercent</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>BasePrice</DataGroup>
										<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RetailSalesPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1774872164</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>SalesPrice_SalesPrice</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>SalesPrice</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>SalesPrice_SalesPriceDeviation</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>SalesPriceDeviation</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>SalesPrice_SalesPricePercent</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>SalesPricePercent</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>SalesPrice</DataGroup>
										<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RetailOtherGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1898944919</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>OtherGroup_OtherGroupPrice</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OtherGroupPrice</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>OtherGroup_OtherGroupPriceDeviation</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OtherGroupPriceDeviation</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>OtherGroup_OtherGroupPricePercent</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OtherGroupPricePercent</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>OtherGroup</DataGroup>
										<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RetailInventCost</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2023017674</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventCost_InventCost</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventCost</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventCost_InventCostDeviation</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventCostDeviation</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventCost_InventCostPercent</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventCostPercent</DataField>
												<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventCost</DataGroup>
										<DataSource>TmpRetailPriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PriceDiscAdmTrans_PDSCalculationId</Name>
										<ElementPosition>2147090430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PDSCalculationId</DataField>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PriceDiscIcon</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>15</Height>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS138675</HelpText>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>CheckIfLines</DataMethod>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Label>@SYS138674</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorExist</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2147352574</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS138677</HelpText>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>20</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>errorExist</DataMethod>
										<DataSource>PriceDiscAdmTrans</DataSource>
										<Label>@SYS138676</Label>
									</AxFormControl>
								</Controls>
								<DataSource>PriceDiscAdmTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>PriceDiscAdmTrans</DataSource>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LineDetails</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupFooter</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Dates</Name>
										<ElementPosition>636291450</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>FromDate</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>FromDate</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>ToDate</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ToDate</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Prices</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Markup</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_Markup</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Markup</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PriceUnit</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>PriceUnit</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Percent</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Percent1</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_Percent1</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Percent1</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Percent2</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_Percent2</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Percent2</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Delivery</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>DeliveryTime</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_DeliveryTime</HelpText>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DeliveryTime</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>CalendarDays</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CalendarDays</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>DisregardLeadTime</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DisregardLeadTime</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Misc</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>GenericCurrency</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_GenericCurrency</HelpText>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataField>GenericCurrency</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>SearchAgain</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsReceivable:PriceDiscAdm_SearchAgain</HelpText>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>SearchAgain</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventBailee_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>InventBailee_RU_InventBaileeFreeDays_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventBaileeFreeDays_RU</DataField>
												<DataSource>PriceDiscAdmTrans</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>InventBailee_RU</DataGroup>
										<DataSource>PriceDiscAdmTrans</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<LeftMargin>5</LeftMargin>
								<LeftMarginMode>Fixed</LeftMarginMode>
								<DataSource>PriceDiscAdmTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS318405</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrorLog</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>INBPriceDiscAdmTrans_Log</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Log</DataField>
								<DataSource>PriceDiscAdmTrans</DataSource>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS15457</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>PriceDiscAdmTrans</DataSource>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
