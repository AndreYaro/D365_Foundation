<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvStatusPreview</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvStatusPreview extends FormRun
{
    RefRecId headerRecId;
    RefRecId expenseRecId;
    RefRecId requisitionRecId;
    TrvTmpExpenseNotifications notifications;
    


}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the temp table with the correct data
    /// </summary>
    public void init()
    {
        if (element.args() && element.args().record())
        {
            int currentTable = element.args().dataset();

            switch (currentTable)
            {
                case tableNum(TrvExpTable):
                case tableNum(TrvExpTableView):
                    headerRecId = element.args().record().RecId;
                    notifications = TrvTmpExpenseNotifications::populateNotificationsForReport(headerRecId);
                    break;

                case tableNum(TrvExpTrans):
                    TrvExpTrans expenseLine = element.args().record();
                    expenseRecId = expenseLine.RecId;
                    notifications = TrvTmpExpenseNotifications::populateNotificationsForExpense(expenseLine, notifications);
                    // Add notifications for itemized lines
                    if (expenseLine.LineType == TrvExpLineType::ItemizedHeader)
                    {
                        notifications = TrvTmpExpenseNotifications::populateNotificationsForItemizations(expenseRecId);
                    }
                    break;

                case tableNum(TrvRequisitionTable):
                    requisitionRecId = element.args().record().RecId;
                    notifications = TrvTmpExpenseNotifications::populateNotificationsForRequisition(requisitionRecId);
                    break;

                case tableNum(TrvRequisitionLine):
                    expenseRecId = element.args().record().RecId;
                    notifications = TrvTmpExpenseNotifications::populateNotificationsForRequisitionLine(element.args().record(), notifications);
                    break;
            }
        }

        super();

        Grid.visible(notifications.RecId);
        NoNotificationsTxt.visible(!notifications.RecId);

        if (NoNotificationsTxt.visible())
        {
            if (headerRecId)
            {
                NoNotificationsTxt.text("@Expense:NoNotificationsForReport");
            }
            else
            {
                NoNotificationsTxt.text("@Expense:NoNotificationsForExpense");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvTmpExpenseNotifications</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            TrvTmpExpenseNotifications.setTmpData(notifications);

            TrvTmpExpenseNotifications_ds.queryBuildDataSource().addOrderByField(fieldNum(TrvTmpExpenseNotifications, MessageLevel), SortOrder::Descending);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SelectButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// If clicked while viewing notifications of a report, navigate to the relevant expense line.
        /// </summary>
        public void clicked()
        {
            super();

            if (headerRecId)
            {
                TrvExpTable report = TrvExpTable::findRecId(headerRecId);
                Args args = new Args(element);
                args.record(report);
                new MenuFunction(menuItemDisplayStr(TrvExpenses), MenuItemType::Display).run(args);
            }
            else if (requisitionRecId)
            {
                TrvRequisitionTable trvRequisition = TrvRequisitionTable::find(headerRecId);
                Args args = new Args(element);
                args.record(trvRequisition);
                new MenuFunction(menuItemDisplayStr(TrvRequisitions), MenuItemType::Display).run(args);
            }        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvTmpExpenseNotifications</Name>
			<Table>TrvTmpExpenseNotifications</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Message</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MessageLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvExpTransRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:ExpenseNotifications</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>NoNotificationsTxt</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>StaticText</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Text></Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>grid_autoSizeHeight</ExtendedStyle>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<WidthMode>SizeToContent</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>Indicator</Name>
						<Type>Image</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>statusIcon</DataMethod>
						<DataSource>TrvTmpExpenseNotifications</DataSource>
						<Label>@SYS121619</Label>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TrvTmpExpenseNotifications_Message</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<Width>500</Width>
						<WidthMode>Manual</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Message</DataField>
						<DataSource>TrvTmpExpenseNotifications</DataSource>
						<Label>@SYS113369</Label>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
				</Controls>
				<DataSource>TrvTmpExpenseNotifications</DataSource>
				<DefaultAction>SelectButton</DefaultAction>
				<HighlightActive>No</HighlightActive>
				<MultiSelect>No</MultiSelect>
				<ShowColLabels>No</ShowColLabels>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
				<VisibleRows>5</VisibleRows>
				<VisibleRowsMode>Fixed</VisibleRowsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonControl">
				<Name>SelectButton</Name>
				<Type>Button</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>