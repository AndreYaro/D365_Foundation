<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjForecastEmpl</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjForecastEmpl extends FormRun implements  OfficeITemplateCustomExporter
{
    #DEFINE.projUtil('projUtil') //if altered, remember to also change in ProjUtil and Forecast forms
    ProjId                  projId;
    ForecastModelId         modelId;
    ProjCategoryId          categoryId;
    ResourceRecId           resourceRecId;
    ResourceCategoryRecId   resourceCategoryRecId;

    // Range projTable
    QueryBuildRange         criteriaWIPProjId;
    QueryBuildRange         criteriaProjId;

    QueryBuildRange         criteriaProjInvoiceProjId;
    QueryBuildRange         criteriaFixedPrice;
    QueryBuildRange         criteriaTimeMaterial;
    QueryBuildRange         criteriaInternal;
    QueryBuildRange         criteriaCost;
    QueryBuildRange         criteriaInvestment;
    QueryBuildRange         criteriaTime;
    QueryBuildRange         criteriaSorting1;
    QueryBuildRange         criteriaSorting2;
    QueryBuildRange         criteriaSorting3;
    QueryBuildRange         criteriaGroupId;
    QueryBuildRange         criteriaCustAccount;

    QueryBuildRange         criteriaModelId;
    QueryBuildRange         criteriaActivityId;

    QueryBuildRange         criteriaControlId;
    QueryBuildRange         criteriaCostGroupId;

    // Range projCategoryId
    QueryBuildRange         criteriaCategoryGroupId;

    // Range projEmplTrans
    QueryBuildRange         criteriaResourceRecId;
    QueryBuildRange         criteriaResourceCategoryRecId;
    QueryBuildRange         criteriaTransDate;
    QueryBuildRange         criteriaCategoryId;
    QueryBuildRange         criteriaRecId;

    QueryBuildDataSource    qb2;
    QueryBuildDataSource    qb3;

    ProjControlId           controlId;
    ProjCostGroupId         costGroupid;

    TransDate               ledgerFromDate;
    TransDate               ledgerToDate;
    ProjStatistic           projStatistic;
    ProjCostControl         projCostControl;
    ProjCashFlow            projCashFlow;

    boolean                 linkProjUtil;

    ProjUtilCalcParams      projUtil;

    boolean                 refreshCallerOnClose;
    boolean                 cdsLockingOptionForecasts;

    // Map for WBS Id and Task Id cache for project and activity combination
    Map                     wbsDataCacheMap = new Map(Types::String, Types::Container);
    
    private boolean enableProjMultipleContractLinesForProjectFeature = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

}
]]></Source>
			</Method>
			<Method>
				<Name>categoryTable</Name>
				<Source><![CDATA[
    boolean categoryTable(ProjStatistic _projStatistic = projStatistic)
    {
        return (_projStatistic && _projStatistic.parmCategoryGroupId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryTableCashFlow</Name>
				<Source><![CDATA[
    boolean categoryTableCashFlow(ProjCashFlow _projCashFlow = projCashFlow)
    {
        return (_projCashFlow && _projCashFlow.parmCategoryGroupId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceValidation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates the resource.
    /// </summary>
    /// <returns>
    ///     true if resource validation is passed; otherwise, false.
    /// </returns>
    private boolean resourceValidation()
    {
        boolean ret = true;
        
        if (ProjParameters::find().ValidationEmplProj == ProjValParameter::Mandatory)
        {
            ProjForecastEmpl projForecastEmplResource;

            while select TransId from projForecastEmplResource
                where projForecastEmplResource.ProjId == projId &&
                    projForecastEmplResource.ResourceValidationSkipped == NoYes::Yes &&
                    projForecastEmplResource.ProjForecastBudgetType == ProjForecastBudgetType::None &&
                    projForecastEmplResource.Resource == 0
            {
                ret = checkFailed(strFmt("@Proj:EmployeeNumberForHourForecast", projForecastEmplResource.TransId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        ret = this.resourceValidation();

        if (ret)
        {
            super();
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        FormRun caller;
        FormDataSource fds;

        if ( refreshCallerOnClose )
        {
            caller = element.args().caller();

            if ( caller )
            {
                fds = caller.dataSource(1);

                if ( fds )
                {
                    fds.research(true);
                }
            }
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doReFreshDatasource</Name>
				<Source><![CDATA[
    void doReFreshDatasource()
    {
        projForecastEmpl_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearch</Name>
				<Source><![CDATA[
    void doResearch()
    {
        projForecastEmpl_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        this.setRefreshOnClose();

        boolean projOpsIntegrationEnabled = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();
        
        if (projOpsIntegrationEnabled)
        {
            this.form().design().showNewButton(AutoNoYes::No);
            this.form().design().showDeleteButton(AutoNoYes::No);
        }

        //determine if called from utilization form must know
        //this before super() to use linkProjUtil in executeQuery
        //
        if (element.args() && element.args().parm() == #projUtil)
        {
            linkProjUtil = true;
            projUtil = element.args().parmObject();
        }
        else
        {
            linkProjUtil = false;
        }

        super();

        if (projOpsIntegrationEnabled)
        {
            Manipulation.visible(false);
            Manipulation.enabled(false);
            SchedulingMenuButton.visible(false);
            TradeAgreement.visible(false);
            WBSID.visible(false);
            TaskName.visible(false);
            ProjForecastEmpl_Resource.visible(false);
            ProjForecastEmpl_ds.object(fieldNum(ProjForecastEmpl, ProjForecastBudgetType)).visible(false);
            PSAIndirectComponentGroup.visible(false);
            Identification_Resource.visible(false);
            CostPrice_M_IndirectCostAmount.visible(false);
            SalesPrice_M_IndirectSalesAmount.visible(false);
            SchedulingGroup.visible(false);
            ResourceRequirements.visible(false);
            SchedulingTab.visible(false);
            ProjForecastEmpl_ContractLineNum.visible(true);
            Identification_ContractLineNum.visible(true);
        }

        cdsLockingOptionForecasts = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::Forecasts);

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            costPrice_M_costAmount.visible(false);
        }
        else
        {
            costPrice_M_IndirectCostAmount.visible(false);
            costPrice_M_IndirectCostTotal.visible(false);
            salesPrice_M_IndirectSalesAmount.visible(false);
            salesPrice_M_IndirectSalesTotal.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initActivityDataSource</Name>
				<Source><![CDATA[
    public void initActivityDataSource(FormDataSource _formDataSource)
    {
        SysDictTable sysDictTable = new SysDictTable(_formDataSource.table());

        if (!isConfigurationkeyEnabled(sysDictTable.configurationKeyId()))
        {
            _formDataSource.linkType(FormLinkType::Passive);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCashFlow</Name>
				<Source><![CDATA[
    void linkProjCashFlow()
    {
        #define.star('*')

        modelId     = projCashFlow.parmForecastModelId();
        projId      = projCashFlow.parmProjId();
        categoryId  = projCashFlow.parmCategoryId();
        resourceRecId = projCashFlow.parmResource();
        resourceCategoryRecId = projCashFlow.parmResourceCategory();

        if (projCashFlow.parmHour())
        {
            if (projCashFlow.parmProjectFromDate() || projCashFlow.parmProjectToDate())
            {
                criteriaTransDate.value(SysQuery::range(projCashFlow.parmProjectFromDate(), projCashFlow.parmProjectToDate()));
            }

            if (projCashFlow.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projCashFlow.parmResource()));
            }

            if (projCashFlow.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projCashFlow.parmResourceCategory()));
            }

            if (projCashFlow.parmForecastModelId())
            {
                criteriaModelId.value(projCashFlow.parmForecastModelId());
            }

            if (projCashFlow.parmCategoryId())
            {
                criteriaCategoryId.value(projCashFlow.parmCategoryId());
            }

            if (element.categoryTableCashFlow(element.args().parmObject()))
            {
                criteriaCategoryGroupId.value(projCashFlow.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCashFlow.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCashFlow.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCashFlow.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCashFlow.parmTimeProject())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }
            }

            if (projCashFlow.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projCashFlow.parmSorting1()));
            }

            if (projCashFlow.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projCashFlow.parmSorting2()));
            }

            if (projCashFlow.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projCashFlow.parmSorting3()));
            }

            if (projCashFlow.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projCashFlow.parmCustAccount()));
            }

            if (projCashFlow.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCashFlow.parmProjGroupId()));
            }

            if (projCashFlow.parmProjTree())
            {
                criteriaProjId.value(projCashFlow.parmProjId()+ #star);
            }
            else
            {
                if (projCashFlow.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCashFlow.parmProjId()));
                }
            }

            if (projCashFlow.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCashFlow.parmProjWIPId()));
            }

            if (projCashFlow.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCashFlow.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>costTypeHour</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks transaction type.
    /// </summary>
    /// <param name = "_projControlPeriodCostGroup">
    ///     A <c>ProjControlPeriodCostGroup</c> table buffer.
    /// </param>
    /// <returns>
    ///     true if transaction type is not of type hour; otherwise, false.
    /// </returns>
    public boolean costTypeHour(ProjControlPeriodCostGroup  _projControlPeriodCostGroup)
    {
        return (_projControlPeriodCostGroup.costType() != ProjCostType::Hour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCostControl</Name>
				<Source><![CDATA[
    void linkProjCostControl()
    {
        #define.star('*')

        switch (projCostControl.parmModelType())
        {
            case ProjForecastModelType::Original:
                modelId     = projCostControl.parmOriginalForecastModelId();
                break;

            case ProjForecastModelType::Remaining:
                modelId     = projCostControl.parmRemainingForecastModelId();
                break;

            case ProjForecastModelType::Total:
                modelId     = projCostControl.parmTotalForecastModelId();
                break;
        }

        projId      = projCostControl.parmProjId();
        categoryId  = projCostControl.parmProjCategoryId();
        resourceRecId = projCostControl.parmResource();
        resourceCategoryRecId = projCostControl.parmResourceCategory();

        if (projCostControl.parmHour())
        {
            ledgerFromDate  = projCostControl.parmLedgerTransDateFrom();
            ledgerToDate    = projCostControl.parmLedgerTransDateTo();
            if (projCostControl.parmProjTransDateFrom() || projCostControl.parmProjTransDateTo())
            {
                criteriaTransDate.value(SysQuery::range(projCostControl.parmProjTransDateFrom(), projCostControl.parmProjTransDateTo()));
            }

            if (modelId)
            {
                criteriaModelId.value(modelId);
            }

            if (projCostControl.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projCostControl.parmResource()));
            }

            if (projCostControl.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projCostControl.parmResourceCategory()));
            }

            if (projCostControl.parmProjCategoryId())
            {
                criteriaCategoryId.value(projCostControl.parmProjCategoryId());
            }

            if (projCostControl.parmCategoryGroupId() && criteriaCategoryGroupId )
            {
                criteriaCategoryGroupId.value(projCostControl.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCostControl.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCostControl.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCostControl.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCostControl.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }
            }

            if (projCostControl.parmProjSorting1())
            {
                criteriaSorting1.value(queryValue(projCostControl.parmProjSorting1()));
            }

            if (projCostControl.parmProjSorting2())
            {
                criteriaSorting2.value(queryValue(projCostControl.parmProjSorting2()));
            }

            if (projCostControl.parmProjSorting3())
            {
                criteriaSorting3.value(queryValue(projCostControl.parmProjSorting3()));
            }

            if (projCostControl.parmCustomerAccount())
            {
                criteriaCustAccount.value(queryValue(projCostControl.parmCustomerAccount()));
            }

            if (projCostControl.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCostControl.parmProjGroupId()));
            }

            if (projCostControl.parmProjTree())
            {
                criteriaProjId.value(projCostControl.parmProjId()+ #star);
            }
            else
            {
                if (projCostControl.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCostControl.parmProjId()));
                }
            }

            if (projCostControl.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCostControl.parmProjWIPId()));
            }

            if (projCostControl.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCostControl.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjStatistic</Name>
				<Source><![CDATA[
    void linkProjStatistic()
    {
        #define.star('*')

        modelId     = projStatistic.parmForecastModelId();
        projId      = projStatistic.parmProjId();
        categoryId  = projStatistic.parmProjCategoryId();
        resourceRecId = projStatistic.parmResource();

        if (projStatistic.parmHour())
        {
            ledgerFromDate  = projStatistic.parmLedgerFromDate();
            ledgerToDate    = projStatistic.parmLedgerToDate();
            if (projStatistic.parmProjFromDate() || projStatistic.parmProjToDate())
            {
                criteriaTransDate.value(SysQuery::range(projStatistic.parmProjFromDate(), projStatistic.parmProjToDate()));
            }

            if (projStatistic.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projStatistic.parmResource()));
            }

            if (projStatistic.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projStatistic.parmResourceCategory()));
            }

            if (projStatistic.parmForecastModelId())
            {
                criteriaModelId.value(projStatistic.parmForecastModelId());
            }

            if (projStatistic.parmProjCategoryId())
            {
                criteriaCategoryId.value(projStatistic.parmProjCategoryId());
            }

            if (element.categoryTable())
            {
                criteriaCategoryGroupId.value(projStatistic.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projStatistic.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projStatistic.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projStatistic.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projStatistic.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }
            }

            if (projStatistic.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projStatistic.parmSorting1()));
            }

            if (projStatistic.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projStatistic.parmSorting2()));
            }

            if (projStatistic.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projStatistic.parmSorting3()));
            }

            if (projStatistic.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projStatistic.parmCustAccount()));
            }

            if (projStatistic.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projStatistic.parmProjGroupId()));
            }

            if (projStatistic.parmProjTree())
            {
                criteriaProjId.value(projStatistic.parmProjId()+ #star);
            }
            else
            {
                if (projStatistic.parmProjId())
                {
                    criteriaProjId.value(queryValue(projStatistic.parmProjId()));
                }
            }

            if (projStatistic.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projStatistic.parmProjWIPId()));
            }

            if (projStatistic.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projStatistic.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjUtilization</Name>
				<Source><![CDATA[
    void linkProjUtilization()
    {
        #define.star('*')

        ProjUtilCalcFilterType filterType;

        //check if the forecast transaction form has been
        //called from utilization form
        //
        if (!linkProjUtil)
        {
            return;
        }

        //if showing from project utility and showing Budget(Forecast) transactions
        if (projUtil && projUtil.paramIsBudget())
        {
            if (projUtil.paramFromDate() || projUtil.paramToDate())
            {
                criteriaTransDate.value(SysQuery::range(projUtil.paramFromDate(), projUtil.paramToDate()));
            }

            if (projUtil.paramForecastModelId())
            {
                criteriaModelId.value(projUtil.paramForecastModelId());
            }

            filterType = projUtil.paramFilterType();

            switch (filterType)
            {
                case ProjUtilCalcFilterType::Employee:
                    criteriaResourceRecId.value(queryValue(projUtil.paramResource()));
                    break;

                case ProjUtilCalcFilterType::ResourceCategory:
                    criteriaResourceCategoryRecId.value(queryValue(projUtil.paramResourceCategory()));
                    break;

                case ProjUtilCalcFilterType::Category:
                    criteriaCategoryId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::CategoryGroup:
                    criteriaCategoryGroupId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Customer:
                    criteriaCustAccount.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::EstimateProject:
                    criteriaWIPProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::InvoiceProject:
                    criteriaProjInvoiceProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Project:
                    criteriaProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::ProjectGroup:
                    criteriaGroupId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::ProjectWithSubprojects:
                    criteriaProjId.value(projUtil.paramFilterValue() + #star);
                    break;

                case ProjUtilCalcFilterType::Sorting1:
                    criteriaSorting1.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Sorting2:
                    criteriaSorting2.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Sorting3:
                    criteriaSorting3.value(queryValue(projUtil.paramFilterValue()));
                    break;
            }
            //end switch
        }
        else
        {
            //make sure nothing is included
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>projControlId</Name>
				<Source><![CDATA[
    ProjControlId projControlId()
    {
        return controlId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCostGroupId</Name>
				<Source><![CDATA[
    ProjCostGroupId projCostGroupId()
    {
        return costGroupid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePropertyId</Name>
				<Source><![CDATA[
    void setLinePropertyId()
    {
        projForecastEmpl.setLinePropertyId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefreshOnClose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets refreshOnClose flag to true only if the caller's name
    /// is: ProjForecastListPage
    /// </summary>
    private void setRefreshOnClose()
    {
        FormRun         caller;

        refreshCallerOnClose = false;

        if (element.args() && element.args().caller() && element.args().caller() is FormRun)
        {
            caller = element.args().caller();
            refreshCallerOnClose = strCmp(caller.name(), formStr(ProjForecastListPage)) == 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActivityNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// The employee forecast activity number.
    /// </summary>
    /// <returns>The employee forecasts <c>ActivityNumber</c>.</returns>
    public smmActivityNumber parmActivityNumber()
    {
        return projForecastEmpl.ActivityNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProjectExternallyManaged</Name>
				<Source><![CDATA[
    private boolean validateProjectExternallyManaged(ProjId _projId)
    {
        boolean ret = true;

        if (cdsLockingOptionForecasts)
        {
            if (Project::isProjectExternallyManaged(_projId))
            {
                ret = checkFailed(strfmt("@Proj:ProjCDSValueInvalidDueToExternal", "@Proj:ProjCDSForecasts"));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        var entityMenuOption = _menuOptions.getOptionsForEntity(tableStr(ProjForecastEmplEntity));

        if (entityMenuOption)
        {
            entityMenuOption.includeDefault(false);
        }

        DocuTemplate docuTemplate = DocuTemplate::findTemplate(OfficeAppApplicationType::Excel, resourceStr(ProjForecastEmplExcelTemplateV3));
        
        if (docuTemplate)
        {
            OfficeTemplateExportMenuItem menuItem = OfficeTemplateExportMenuItem::constructWithDocuTemplate(docuTemplate, docuTemplate.TemplateID);

            _menuOptions.customMenuItems().addEnd(menuItem);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveProjIdFromCaller</Name>
				<Source><![CDATA[
    private void retrieveProjIdFromCaller()
    {
        Object caller = element.args().caller();
        switch (element.args().dataset())
        {
            case tableNum(ProjBudget):
                ProjBudget projBudget = element.args().record();
                projId = projBudget.RootProjId;
                if (caller && formHasMethod(caller, 'selectedProjId'))
                {
                    projId = caller.selectedProjId();
                }
                break;

            case tableNum(ProjBudgetRevision):
                ProjBudgetRevision projBudgetRevision = element.args().record();
                projId = projBudgetRevision.rootProjId();
                if (caller && formHasMethod(caller, 'selectedProjId'))
                {
                    projId = caller.selectedProjId();
                }
                break;

            case(tableNum(ProjTable)):
                ProjTable projTable = element.args().record();
                projId = projTable.ProjId;
                break;

            case (tableNum(HierarchyTreeTable)):
                HierarchyTreeTable hierarchyTreeTable = element.args().record();
                smmActivities smmActivities = smmActivities::findWithRecId(hierarchyTreeTable.RefRecId);
                criteriaActivityId.value(queryValue(smmActivities.ActivityNumber));
                ProjTable projTableHier = HierarchyTreeTable_Extension::findAssociation(smmActivities, tableNum(ProjTable));
                projId = projTableHier.ProjId;
                break;

            case(tableNum(ProjControlPeriodCostGroup)):
                ProjControlPeriodCostGroup projControlPeriodCostGroup = element.args().record();
                projId = projControlPeriodCostGroup.ProjId;
                break;

            case(tableNum(TmpProjStatistic)):
                ProjStatistic tmpProjStatistic = element.args().parmObject();
                projId = tmpProjStatistic.parmProjId();
                break;

            case(tableNum(TmpProjCashFlow)):
                ProjCashFlow tmpProjCashFlow = element.args().parmObject();
                projId = tmpProjCashFlow.parmProjId();
                break;

            case(tableNum(TmpProjCostControl)):
                ProjCostControl tmpProjCostControl = element.args().parmObject();
                projId = tmpProjCostControl.parmProjId();
                break;

            case tableNum(ProjInvoiceTable):
                ProjInvoiceTable projInvoiceTable = element.args().record();
                projId = projInvoiceTable.ProjInvoiceProjId;
                break;

            case tableNum(ProjWIPTable):
                ProjWIPTable projWIPTable = element.args().record();
                projId = projWIPTable.ProjId;
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name="_menuItem">The export template menu item.</param>
    /// <returns>
    /// The Map of filters to apply.
    /// Keyed by AOT entity name.
    /// Values are all Microsoft.Dynamics.Platform.Integration.Office.FilterNode intances.
    /// </returns>
    /// <remarks>
    /// The filters supplied here will override any filters currently in the template.
    /// If no filter is suppled for a given entity, any filters currently in the template are retained.
    /// </remarks>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        str templateName = resourceStr(ProjForecastEmplExcelTemplateV3);
                 
        DocuTemplate template = DocuTemplate::findTemplate(OfficeAppApplicationType::Excel, templateName);
        Map filtersToApply = new Map(Types::String, Types::Class);

        // Ensure the template was present
        if (template && template.TemplateID == templateName)
        {
            #define.star("*")
            str projforecastEmplEntity = tableStr(ProjForecastEmplEntity);
            ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(projforecastEmplEntity);
            if(ProjForecastFormsCallerIdentiferFlight::instance().isEnabled() && element.args().dataset())
            {
                this.retrieveProjIdFromCaller();
            }
            else
            {
                if(element.args().dataset() == tableNum(ProjTable))
                {
                    ProjTable projTable= element.args().record();
                    projId = projTable.ProjId;
                }
            }

            Microsoft.Dynamics.Platform.Integration.Office.FilterCollectionNode filter = FilterBuilder.and(
            FilterBuilder.areEqual(fieldStr(ProjForecastEmplEntity, ProjectID), projId + #star),
            FilterBuilder.areEqual(fieldStr(ProjForecastEmplEntity, BudgetType), ProjForecastBudgetType::None));
            filtersToApply.insert(projforecastEmplEntity, filter);
        }

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No implementation details for this since we don't need to update the template settings
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjForecastEmpl</Name>
				<Methods>
					<Method>
						<Name>buildCaptionTextForActiveHourItem</Name>
						<Source><![CDATA[
        str buildCaptionTextForActiveHourItem()
        {
            str activeHourItemLabel;

            // Build the string with details of the active forcast expense item to use as label on the form caption
            activeHourItemLabel = strFmt("%1 - %2: %3, %4", "@SYS342498", "@SYS82923", projForecastEmpl.ModelId, date2StrUsr(projForecastEmpl.SchedFromDate, DateFlags::FormatAll));

            return activeHourItemLabel;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            #define.star("*")

            Object caller;

            ProjTable                   projTable;
            ProjControlPeriodCostGroup  projControlPeriodCostGroup;
            ProjInvoiceTable            projInvoiceTable;
            ProjWIPTable                projWIPTable;
            QueryBuildRange             rangeProjId;
            ProjBudget                  projBudget;
            ProjBudgetRevision          projBudgetRevision;
            HierarchyTreeTable          hierarchyTreeTable;
            smmActivities               smmActivities;

            // Reset the Form Caption to just show the title of the primary datasource
            // If forcast expense items exists for the current project, the Active method will be called
            // and it will update the caption to include details of the forcast expanse item
            element.design().caption("@SYS342498");

            caller = element.args().caller();

            switch (element.args().dataset())
            {
                case tableNum(ProjBudget):
                    projBudget = element.args().record();
                    projId = projBudget.RootProjId;
                    if (caller && formHasMethod(caller, 'selectedProjId'))
                    {
                        projId = caller.selectedProjId();
                    }
                    criteriaProjId.value(queryValue(projId) + #star);
                    break;

                case tableNum(ProjBudgetRevision):
                    projBudgetRevision = element.args().record();
                    projId = projBudgetRevision.rootProjId();
                    if (caller && formHasMethod(caller, 'selectedProjId'))
                    {
                        projId = caller.selectedProjId();
                    }
                    criteriaProjId.value(queryValue(projId) + #star);
                    break;

                case(tableNum(ProjTable)):
                    projTable   = element.args().record();
                    projId      = projTable.ProjId;
                    criteriaProjId.value(projId + #star);

                    break;

                case (tableNum(HierarchyTreeTable)):
                    hierarchyTreeTable = element.args().record();

                    smmActivities = smmActivities::findWithRecId(hierarchyTreeTable.RefRecId);
                    criteriaActivityId.value(queryValue(smmActivities.ActivityNumber));

                    projTable = HierarchyTreeTable_Extension::findAssociation(smmActivities, tableNum(ProjTable));

                    criteriaProjId.value(projTable.ProjId);
                    break;

                case(tableNum(ProjControlPeriodCostGroup)):
                    projControlPeriodCostGroup  = element.args().record();

                    if (element.costTypeHour(projControlPeriodCostGroup))
                    {
                        element.close();
                    }

                    projId                      = projControlPeriodCostGroup.ProjId;
                    modelId                     = projControlPeriodCostGroup.projControlPeriod().ModelId;

                    costGroupid                 = projControlPeriodCostGroup.CostGroupId;
                    controlId                   = projControlPeriodCostGroup.ControlId;

                    criteriaWIPProjId.value(projId);

                    criteriaModelId.value(projControlPeriodCostGroup.projControlPeriod().ModelId);
                    criteriaControlId.value(projControlPeriodCostGroup.ControlId);

                    qb2.joinMode(JoinMode::ExistsJoin);

                    criteriaCostGroupId.value(projControlPeriodCostGroup.CostGroupId);
                    qb3.joinMode(JoinMode::ExistsJoin);

                    criteriaCostGroupId.value(projControlPeriodCostGroup.CostGroupId);
                    break;

                case(tableNum(TmpProjStatistic)):
                    // linkActive called again .criteria changed... close form
                    if (projStatistic)
                    {
                        element.close();
                    }

                    projStatistic   = element.args().parmObject();
                    element.linkProjStatistic();
                    break;

                case(tableNum(TmpProjCostControl)):
                    // linkActive called again .criteria changed... close form
                    if (projCostControl)
                    {
                        element.close();
                    }

                    projCostControl   = element.args().parmObject();
                    element.linkProjCostControl();
                    break;

                case(tableNum(TmpProjCashFlow)):
                    // linkActive called again .criteria changed... close form
                    if (projCashFlow)
                    {
                        element.close();
                    }

                    projCashFlow   = element.args().parmObject();
                    element.linkProjCashFlow();
                    break;
                case tableNum(ProjInvoiceTable):
                    rangeProjId    = projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).findRange(fieldNum(ProjForecastEmpl,ProjId));

                    while (rangeProjId)
                    {
                        projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).clearRange(fieldNum(ProjForecastEmpl,ProjId));
                        rangeProjId    = projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).findRange(fieldNum(ProjForecastEmpl,ProjId));
                    }

                    projInvoiceTable   = element.args().record();

                    while select ProjId from projTable
                        where projTable.ProjInvoiceProjId   == projInvoiceTable.ProjInvoiceProjId
                    {
                        projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).addRange(fieldNum(ProjForecastEmpl,ProjId)).value(projTable.ProjId);
                    }
                    modelId = ProjParameters::find().ModelId;
                    break;

                case tableNum(ProjWIPTable)     :
                    rangeProjId    = projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).findRange(fieldNum(ProjForecastEmpl,ProjId));

                    while (rangeProjId)
                    {
                        projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).clearRange(fieldNum(ProjForecastEmpl,ProjId));
                        rangeProjId    = projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).findRange(fieldNum(ProjForecastEmpl,ProjId));
                    }

                    projWIPTable   =   element.args().record();

                    while select ProjId from projTable
                        where projTable.wipProject  == projWIPTable.ProjId
                    {
                        projForecastEmpl_ds.query().dataSourceTable(tableNum(ProjForecastEmpl)).addRange(fieldNum(ProjForecastEmpl,ProjId)).value(projTable.ProjId);
                    }
                    modelId = ProjParameters::find().ModelId;
                    break;
            }

            if (projId && cdsLockingOptionForecasts)
            {
                projForecastEmpl_ds.allowCreate(!Project::isProjectExternallyManaged(projId));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refresh</Name>
						<Source><![CDATA[
        public void refresh()
        {
            boolean ret;

            ret = element.resourceValidation();

            if (ret)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            boolean         canEdit = true;
            ForecastModel   forecastModel;
            int             ret;
            boolean         isBudgetForecast;
            #SysSystemDefinedButtons

            ret = super();

            // Set the Form Caption with the caption text used for the active forcast hour item
            element.design().caption(this.buildCaptionTextForActiveHourItem());

            if (projForecastEmpl.ModelId)
            {
                forecastModel = ForecastModel::find(HeadingSub::Heading, projForecastEmpl.ModelId);

                if (forecastModel && forecastModel.Blocked)
                {
                    canEdit = false;
                }
            }

            boolean isExternallyManaged = Project::isProjectExternallyManaged(projForecastEmpl.ProjId);
            boolean lockFieldsForForecasts = cdsLockingOptionForecasts && isExternallyManaged;

            this.allowEdit(canEdit && !lockFieldsForForecasts);
            this.allowDelete(canEdit && !lockFieldsForForecasts);
            Manipulation.enabled(canEdit && !lockFieldsForForecasts);
            ProjForecastTransferFromQuotationHour.enabled(!lockFieldsForForecasts);

            if (projForecastEmpl.ProjForecastBudgetType == ProjForecastBudgetType::None)
            {
                isBudgetForecast = true;
            }

            projForecastEmpl_ds.allowEdit(isBudgetForecast && !lockFieldsForForecasts);
            projForecastEmpl_ds.allowDelete(isBudgetForecast && !lockFieldsForForecasts);

            wrkCtrActivityRequirementSet_ds.allowEdit(projForecastEmpl_ds.allowEdit());

            wrkCtrActivityRequirement_ds.allowEdit(projForecastEmpl_ds.allowEdit());
            wrkCtrActivityRequirement_ds.allowCreate(projForecastEmpl_ds.allowEdit() && projForecastEmpl.RecId != 0);
            wrkCtrActivityRequirement_ds.allowDelete(projForecastEmpl_ds.allowEdit());

            FormCommandButtonControl editButton = element.control(element.controlId(#SystemDefinedViewEditButton)) as FormCommandButtonControl;
            editButton.enabled(projForecastEmpl_ds.allowEdit());

            boolean projOpsIntegrationEnabled = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();
            if (projOpsIntegrationEnabled)
            {
                //disable edit for all fields except DefaultDimension
                allowEditFieldsOnFormDS_W(projForecastEmpl_ds, false);
                projForecastEmpl_ds.object(fieldNum(ProjForecastEmpl, DefaultDimension)).allowEdit(projForecastEmpl_ds.allowEdit());
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            //Add criteria based on proj utilization parameter.
            //Only applicable if called from ProjUtil form;
            //linkProjUtilization will do nothing if called from
            //somewhere else.
            element.linkProjUtilization();

            super();

            if (element.args().dataset() == tableNum(ProjControlPeriodCostGroup))
            {
                qb2.joinMode(JoinMode::ExistsJoin);
                qb3.joinMode(JoinMode::ExistsJoin);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            Query                       q = new Query();
            QueryBuildDataSource        qb_projTable;
            QueryBuildDataSource        qb_ProjCategory;
            QueryBuildDataSource        qb_projForecastTrans;

            ProjForecastEmpl            projForecastEmplArg;

            super();

            projForecastEmpl_ds.autoQuery(false);

            qb_projForecastTrans = q.addDataSource(tableNum(ProjForecastEmpl));

            criteriaModelId     = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, ModelId));
            criteriaActivityId  = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, ActivityNumber));
            criteriaResourceRecId = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, Resource));
            criteriaResourceCategoryRecId = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, ResourceCategory));
            criteriaTransDate   = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, SchedFromDate));
            criteriaCategoryId  = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, CategoryId));
            criteriaProjId      = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, ProjId));
            criteriaRecId       = qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, RecId));
            qb_projForecastTrans.addRange(fieldNum(ProjForecastEmpl, ProjForecastBudgetType)).value(queryValue(ProjForecastBudgetType::None));

            //if called from statistic or utilization modules, and category table is necessary, attach it.
            if ((element.args().dataset() == tableNum(TmpProjStatistic) && element.categoryTable(element.args().parmObject()))
                || (linkProjUtil && projUtil.paramFilterType() == ProjUtilCalcFilterType::CategoryGroup)
                ||  element.args().dataset() == tableNum(TmpProjCostControl))
            {
                qb_ProjCategory = qb_projForecastTrans.addDataSource(tableNum(ProjCategory));
                qb_ProjCategory.relations(true);
                qb_ProjCategory.fetchMode(QueryFetchMode::One2One);

                criteriaCategoryGroupId = qb_ProjCategory.addRange(fieldNum(ProjCategory, CategoryGroupId));
            }
            else if (element.args().dataset() == tableNum(ProjControlPeriodCostGroup))
            {
                qb2 = qb_projForecastTrans.addDataSource(tableNum(ProjTable));

                qb2.addLink(fieldNum(ProjForecastEmpl, ProjId), fieldNum(ProjTable, ProjId));

                criteriaWIPProjId = qb2.addRange(fieldNum(ProjTable, wipProject));

                qb2.fetchMode(0);

                qb3 = qb_projForecastTrans.addDataSource(tableNum(ProjControlCategory));

                qb3.addLink(fieldNum(ProjForecastEmpl, CategoryId), fieldNum(ProjControlCategory, CategoryId));

                criteriaControlId   = qb3.addRange(fieldNum(ProjControlCategory, ControlId));
                criteriaCostGroupId = qb3.addRange(fieldNum(ProjControlCategory, CostGroupId));

                qb3.fetchMode(0);
            }

            qb_projTable = qb_projForecastTrans.addDataSource(tableNum(ProjTable));
            qb_projTable.addLink(fieldNum(ProjForecastEmpl, ProjId), fieldNum(ProjTable, ProjId));
            qb_projTable.fetchMode(0);
            qb_projTable.joinMode(JoinMode::ExistsJoin);

            criteriaProjInvoiceProjId   = qb_projTable.addRange(fieldNum(ProjTable, ProjInvoiceProjId));
            criteriaWIPProjId           = qb_projTable.addRange(fieldNum(ProjTable, wipProject));

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                criteriaFixedPrice          = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTimeMaterial        = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInternal            = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaCost                = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInvestment          = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTime                = qb_projTable.addRange(fieldNum(ProjTable, Type));
            }

            criteriaSorting1            = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 1);
            criteriaSorting2            = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 2);
            criteriaSorting3            = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 3);
            criteriaGroupId             = qb_projTable.addRange(fieldNum(ProjTable, ProjGroupId));
            criteriaCustAccount         = qb_projTable.addRange(fieldNum(ProjTable, CustAccount));

            if ( element.args() && element.args().dataset() == tableNum(ProjForecastEmpl))
            {
                projForecastEmplArg = element.args().record();
                projId = projForecastEmplArg.ProjId;
                criteriaRecId.value(queryValue(projForecastEmplArg.RecId));
            }

            this.query(q);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            projForecastEmpl.ProjId     = projId;
            projForecastEmpl.Resource   = ResourceRecId;
            if (resourceCategoryRecId)
            {
                projForecastEmpl.ResourceCategory = resourceCategoryRecId;
            }
            else if (resourceRecId)
            {
                projForecastEmpl.setResourceCategory();
            }
            projForecastEmpl.CategoryId = categoryId;
            projForecastEmpl.ModelId    = modelId;

            projForecastEmpl.initFromProjTable(ProjTable::find(projForecastEmpl.ProjId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>wbsId</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Displays associated WBS ID for selected project activity number.
        /// </summary>
        /// <param name = "_projForecastEmpl">
        ///     The <c>ProjForecastEmpl</c> table buffer.
        /// </param>
        /// <return>
        ///     WBS ID.
        /// </return>
        public display ProjHierarchyPathId wbsId(ProjForecastEmpl _projForecastEmpl)
        {
            if (_projForecastEmpl.ProjId && _projForecastEmpl.ActivityNumber)
            {
                str wbsKey = _projForecastEmpl.ProjId + '-' + _projForecastEmpl.ActivityNumber;

                if (wbsDataCacheMap.exists(wbsKey))
                {
                    container wbsData = wbsDataCacheMap.lookup(wbsKey);
                    return conPeek(wbsData, 1);
                }
                else
                {
                    if(FeatureStateProvider::IsFeatureEnabled(ProjForecastListPageV2Feature::instance()))
                    {
                        ProjWBSActivityNumberView wbsActivityNumberView;

                        select firstonly WBSID, TaskName from wbsActivityNumberView
                            where wbsActivityNumberView.ProjId == _projForecastEmpl.ProjId 
                                && wbsActivityNumberView.ActivityNumber == _projForecastEmpl.ActivityNumber;

                        wbsDataCacheMap.insert(wbsKey, [wbsActivityNumberView.WBSID, wbsActivityNumberView.TaskName]);
                    
                        return wbsActivityNumberView.WBSID;
                    } 
                    else 
                    {
                        ProjWBSEstimatesView wbsEstimatesView;

                        select firstonly WBSID, TaskName from wbsEstimatesView
                            where wbsEstimatesView.ProjId == _projForecastEmpl.ProjId 
                                && wbsEstimatesView.ActivityNumber == _projForecastEmpl.ActivityNumber;
                        
                        wbsDataCacheMap.insert(wbsKey, [wbsEstimatesView.WBSID, wbsEstimatesView.TaskName]);
                    
                        return wbsEstimatesView.WBSID;
                    }
                }
            }

            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>wbsTaskName</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Displays associated WBS task name for selected project activity number.
        /// </summary>
        /// <param name = "_projForecastEmpl">
        ///     The <c>ProjForecastEmpl</c> table buffer.
        /// </param>
        /// <return>
        ///     WBS task name.
        /// </return>
        public display ProjTaskName wbsTaskName(ProjForecastEmpl _projForecastEmpl)
        {
            if (_projForecastEmpl.ProjId && _projForecastEmpl.ActivityNumber)
            {
                str wbsKey = _projForecastEmpl.ProjId + '-' + _projForecastEmpl.ActivityNumber;

                if (wbsDataCacheMap.exists(wbsKey))
                {
                    container wbsData = wbsDataCacheMap.lookup(wbsKey);
                    return conPeek(wbsData, 2);
                }
                else
                {
                    if(FeatureStateProvider::IsFeatureEnabled(ProjForecastListPageV2Feature::instance()))
                    {
                        ProjWBSActivityNumberView wbsActivityNumberView;

                        select firstonly WBSID, TaskName from wbsActivityNumberView
                            where wbsActivityNumberView.ProjId == _projForecastEmpl.ProjId 
                                && wbsActivityNumberView.ActivityNumber == _projForecastEmpl.ActivityNumber;

                        wbsDataCacheMap.insert(wbsKey, [wbsActivityNumberView.WBSID, wbsActivityNumberView.TaskName]);
                    
                        return wbsActivityNumberView.TaskName;
                    }
                    else
                    {
                        ProjWBSEstimatesView wbsEstimatesView;

                        select firstonly WBSID, TaskName from wbsEstimatesView
                            where wbsEstimatesView.ProjId == _projForecastEmpl.ProjId 
                                && wbsEstimatesView.ActivityNumber == _projForecastEmpl.ActivityNumber;
                        
                        wbsDataCacheMap.insert(wbsKey, [wbsEstimatesView.WBSID, wbsEstimatesView.TaskName]);
                    
                        return wbsEstimatesView.TaskName;
                    }
                }
            }

            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (!ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        public void deleteMarked()
        {
            if (!ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(projForecastEmpl.ProjId), ProjParameters::find().BlockParentActivitySelection);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ContractLineId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
                {
                    PSAContractLineItems contractLineItems = PSAContractLineItems::find(projForecastEmpl.ContractLineId);
                    if (contractLineItems)
                    {
                        ProjectOperationsDWHelper dw = ProjectOperationsDWHelper::construct();
                        dw.openProjectContractLineDetailsInCE(contractLineItems.ContractLineNum, contractLineItems.DataAreaId);
                    }
                }
                else
                {
                    super();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ModelId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ForecastModel::lookupOpenModels(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjFundingSource</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjFundingSource::resolveReferenceByContractFSName(_formReferenceControl, ProjTable::find(projForecastEmpl.ProjId).ProjInvoiceProjId);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjFundingSource::lookupFundingSourceByContract(_formReferenceControl, ProjTable::find(projForecastEmpl.ProjId).ProjInvoiceProjId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ctrlGridActivityNumber.allowEdit(ProjTable::activityExists(projForecastEmpl.ProjId));
                identification_ActivityNumber.allowEdit(ProjTable::activityExists(projForecastEmpl.ProjId));

                // Clear funding source field
                projForecastEmpl_ds.clearReferenceData(fieldNum(ProjForecastEmpl, ProjFundingSource));
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (cdsLockingOptionForecasts)
                {
                    if (element.args().caller() && element.args().caller().name() ==  formStr(ProjTable))
                    {
                        ProjTable::lookupProjIdRestrictingExternal(_formControl, ProjForecastEmpl, NoYes::No, cdsLockingOptionForecasts);
                    }
                    else
                    {
                        ProjTable::lookupProjWIPProj(_formControl, ProjForecastEmpl.ProjId, cdsLockingOptionForecasts);
                    }

                    return;
                }

                if (element.args().dataset() == tableNum(ProjTable))
                {
                    ProjTable projTableLocal = element.args().record();

                    if (projTableLocal.RecId)
                    {
                        if (projTableLocal.WIPProject)
                        {
                            ProjTable::lookupProjWIPProj(_formControl, projTableLocal.ProjId, cdsLockingOptionForecasts);
                        }
                        else
                        {
                            ProjTable::lookupSelectedProjId(_formControl, _filterStr, projTableLocal.ProjId);
                        }

                        return;
                    }
                }

                ProjTable::lookupProjId(_formControl, ProjForecastEmpl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ResourceLookup::lookupResource(_formReferenceControl, projForecastEmpl, false);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                ResourceView ret;

                ret = super(_formReferenceControl);

                if (ret.RecId && !ResourceLookup::validateResource(ret.RecId, projForecastEmpl, false))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityRequirement</Name>
				<Methods>
					<Method>
						<Name>requirementEdit</Name>
						<Source><![CDATA[
        edit WrkCtrActivityRequirementEdit requirementEdit(
            boolean                                 _set,
            WrkCtrActivityRequirement               _wrkCtrActivityRequirement,
            WrkCtrActivityRequirementEdit           _wrkCtrActivityRequirementEdit)
        {
            return _wrkCtrActivityRequirement.requirementEdit(_set,
                                                             (_wrkCtrActivityRequirement.RecId != 0 && _wrkCtrActivityRequirement.RecId != wrkCtrActivityRequirement.RecId),
                                                             this.activeSubtype(),
                                                             _wrkCtrActivityRequirementEdit);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            Common          activeSubtype = this.activeSubtype();
            FormDataSource  fds;

            ttsbegin;

            super();

            if (activeSubtype.RecId == 0)
            {
                activeSubtype.setActivityRequirement(wrkCtrActivityRequirement.RecId);
                activeSubtype.write();

                fds = FormDataUtil::getFormDataSource(activeSubtype);
                fds.reread();
            }

            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>changeDisplay</Name>
						<Source><![CDATA[
        public void changeDisplay()
        {
            capabilityOptions.visible(wrkCtrActivityRequirement.RelationshipType == WrkCtrActivityRequirementType::Capability);
            skillOptions.visible(wrkCtrActivityRequirement.RelationshipType == WrkCtrActivityRequirementType::Skill);

            wrkCtrActivityRequirement_ds.object(fieldNum(WrkCtrActivityRequirement, UsedForOperationScheduling)).allowEdit(wrkCtrActivityRequirement.allowEditSchedulingFlags());
            wrkCtrActivityRequirement_ds.object(fieldNum(WrkCtrActivityRequirement, UsedForJobScheduling)).allowEdit(wrkCtrActivityRequirement.allowEditSchedulingFlags());
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            this.changeDisplay();

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            Common  activeSubtype = this.activeSubtype();;

            ret = super();

            if (ret && requirementEditGrid.text() == "")
            {
                // Field Requirement must be filled in
                ret = checkFailed(strFmt("@SYS312088", "@SYS8498", "@SYS11370"));
            }

            if (ret && activeSubtype.RecId == 0)
            {
                //Set a temporary link to ActivityRequirement to not fail the validateWrite because of this
                activeSubtype.setActivityRequirement(-1);

                ret = activeSubtype.validateWrite();
                ret = ret && activeSubtype.validateWriteRequirementSet(wrkCtrActivityRequirementSet.RecId);

                activeSubtype.setActivityRequirement(0);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>activeSubtype</Name>
						<Source><![CDATA[
        public Common activeSubtype()
        {
            return wrkCtrActivityRequirement.determineSubtype(  wrkCtrActivityCapabilityRequirement,
                                                                wrkCtrActivityCertificateRequirement,
                                                                wrkCtrActivityCourseRequirement,
                                                                wrkCtrActivityResourceRequirement,
                                                                wrkCtrActivityResourceGroupRequirement,
                                                                wrkCtrActivitySkillRequirement,
                                                                wrkCtrActivityResourceTypeRequirement,
                                                                wrkCtrActivityPersonTitleRequirement);
        }

]]></Source>
					</Method>
					<Method>
						<Name>requirementDescription</Name>
						<Source><![CDATA[
        display Description requirementDescription()
        {
            return this.activeSubtype().requirementDescription();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>RelationshipType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                wrkCtrActivityRequirement_ds.activeSubtype().initFromRequirementSet(wrkCtrActivityRequirement.ActivityRequirementSet);
                wrkCtrActivityRequirement_ds.changeDisplay();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityRequirementSet</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (wrkCtrActivityRequirementSet.RecId)
            {
                //Deletion should be performed on the primary datasource
                projForecastEmpl_ds.delete();
                wrkCtrActivityRequirementSet_ds.executeQuery();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>prevPage</Name>
						<Source><![CDATA[
        public int prevPage(int _pageSize)
        {
            //Navigation should be performed on the primary datasource
            return projForecastEmpl_ds.prevPage(_pageSize);
        }

]]></Source>
					</Method>
					<Method>
						<Name>prev</Name>
						<Source><![CDATA[
        public int prev()
        {
            //Navigation should be performed on the primary datasource
            return projForecastEmpl_ds.prev();
        }

]]></Source>
					</Method>
					<Method>
						<Name>nextPage</Name>
						<Source><![CDATA[
        public int nextPage(int _pageSize)
        {
            //Navigation should be performed on the primary datasource
            return projForecastEmpl_ds.nextPage(_pageSize);
        }

]]></Source>
					</Method>
					<Method>
						<Name>next</Name>
						<Source><![CDATA[
        public int next()
        {
            //Navigation should be performed on the primary datasource
            return projForecastEmpl_ds.next();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrProjForecastEmplActivity</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivity</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityResourceGroupRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceGroupRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceGroupRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivitySkillRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivitySkillRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivitySkillRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityCourseRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCourseRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCourseRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityCertificateRequirement</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCertificateRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCertificateRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityResourceRequirement</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityCapabilityRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCapabilityRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityCapabilityRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityResourceTypeRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceTypeRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityResourceTypeRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrActivityPersonTitleRequirement</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityPersonTitleRequirement.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            //Only call super when updating. Inserting is handled in the write method of wrkCtrActivityRequirement.
            if (wrkCtrActivityPersonTitleRequirement.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            element.initActivityDataSource(this);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjWBSEstimatesView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            Query query = this.query();
            QueryBuildDataSource projWBSEstimateView = query.dataSourceTable(tableNum(ProjWBSEstimatesView));
            projWBSEstimateView.addRange(fieldNum(ProjWBSEstimatesView, ActivityNumber)).value(SysQuery::valueNotEmptyString());

            this.disableProjWBSEstimatesViewDataSource(projWBSEstimateView);
        }

]]></Source>
					</Method>
					<Method>
						<Name>disableProjWBSEstimatesViewDataSource</Name>
						<Source><![CDATA[
        /// <summary>
        /// ProjWBSEstimatesView datasource is deprecated, and WBS data is now rendered via display methods.
        /// </summary>
        protected void disableProjWBSEstimatesViewDataSource(QueryBuildDataSource _projWBSEstimateView)
        {
            _projWBSEstimateView.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Manipulation</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            projForecastEmpl_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjBudgetEmpl_ProjId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret;

            ret = super();

            ctrlGridActivityNumber.allowEdit(ProjTable::activityExists(projForecastEmpl.ProjId));
            identification_ActivityNumber.allowEdit(ProjTable::activityExists(projForecastEmpl.ProjId));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();

            if (ret)
            {
                ret = element.validateProjectExternallyManaged(this.text());
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Identification_ProjId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
    
            ret = super();
    
            if (ret)
            {
                ret = element.validateProjectExternallyManaged(this.text());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceRequirements</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            wrkCtrActivityResourceRequirement_ds.allowCreate(projForecastEmpl_ds.allowEdit() && projForecastEmpl.RecId != 0);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequirementEditGrid</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            wrkCtrActivityRequirement.requirementJumpRef(wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            wrkCtrActivityRequirement.requirementLookup(requirementEditGrid,'', wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequirementEditDetails</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            wrkCtrActivityRequirement.requirementJumpRef(wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            wrkCtrActivityRequirement.requirementLookup(requirementEditDetails,'', wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequirementDescription</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            wrkCtrActivityRequirement.requirementJumpRef(wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            wrkCtrActivityRequirement.requirementLookup(requirementEditDetails,'', wrkCtrActivityRequirement_ds.activeSubtype());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjForecastEmpl</Name>
			<Table>ProjForecastEmpl</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractLineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EliminationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjForecastBudgetType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Report</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceValidationSkipped</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedCapacity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedFromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedFromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedLinkType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedTimeHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedWorkTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedWrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityRequirement</Name>
			<Table>WrkCtrActivityRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirementSet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelationshipType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UsedForJobScheduling</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UsedForOperationScheduling</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirementSet</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityRequirementSet</Name>
			<Table>WrkCtrActivityRequirementSet</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivity</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrProjForecastEmplActivity</Name>
			<Table>WrkCtrProjForecastEmplActivity</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastEmplDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjForecastEmpl</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivity</Name>
			<Table>WrkCtrActivity</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntityType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrProjForecastEmplActivity</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityResourceGroupRequirement</Name>
			<Table>WrkCtrActivityResourceGroupRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivitySkillRequirement</Name>
			<Table>WrkCtrActivitySkillRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RatingLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Skill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityCourseRequirement</Name>
			<Table>WrkCtrActivityCourseRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CourseDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HRMCourseId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityCertificateRequirement</Name>
			<Table>WrkCtrActivityCertificateRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityResourceRequirement</Name>
			<Table>WrkCtrActivityResourceRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityCapabilityRequirement</Name>
			<Table>WrkCtrActivityCapabilityRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Capability</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumLevelNeeded</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityResourceTypeRequirement</Name>
			<Table>WrkCtrActivityResourceTypeRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrActivityPersonTitleRequirement</Name>
			<Table>WrkCtrActivityPersonTitleRequirement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Title</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>WrkCtrActivityRequirement</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjWBSEstimatesView</Name>
			<Table>ProjWBSEstimatesView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HierarchyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HierarchyTaskId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBSID</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjForecastEmpl</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BottomMargin xmlns="">12</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@SYS342498</Caption>
		<DataSource xmlns="">ProjForecastEmpl</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<LeftMargin xmlns="">12</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<RightMargin xmlns="">12</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<TopMargin xmlns="">12</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Manipulation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>ProjForecastEmpl</DataSource>
								<MenuItemName>ProjForecastEmplEdit</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ProjTransBudget</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ProjTransBudget</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ProjForecastTransferFromQuotationHour</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1033973607</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ProjForecastTransferFromQuotationHour</MenuItemName>
								<Text>@SYS84496</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>SchedulingMenuButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1352119332</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Scheduling</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProjScheduling</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WrkCtrCapResSum</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>WrkCtrCapResSum</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WrkCtrApplicableResources</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>WrkCtrActivityRequirementSet</DataSource>
										<MenuItemName>WrkCtrApplicableResources</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GanttWrkCtr</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjForecastEmpl</DataSource>
										<MenuItemName>GanttWrkCtr</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS20037</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS21838</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TradeAgreement</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PriceDisc</ConfigurationKey>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SalesPriceHour</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjSalesPriceHour</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS13768</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<DataSource>ProjForecastEmpl</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WBSID</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>wbsId</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaskName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>wbsTaskName</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectEmployeeBudget_ModelNum</Name>
										<ElementPosition>357913940</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ModelId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjBudgetEmpl_SchedFromDate1</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedFromDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetEmpl_ProjId</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjForecastEmpl_ContractLineNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ContractLineId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Label>@Proj:ContractLineId</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CtrlGridActivityNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>894784850</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<PreviewPartRef>ProjForecastEmplCtrlGridActivityPreview</PreviewPartRef>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetEmpl_CategoryId</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjForecastEmpl_Resource</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjForecastEmpl</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjForecastEmpl_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjForecastEmpl</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
										<ReplacementFieldGroup>ResourceCategoryId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectEmployeeBudget_Comment</Name>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjectEmployeeBudget_Qty</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjForecastEmpl_LinePropertyId</Name>
										<ElementPosition>1789569700</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjForecastEmpl_ProjForecastBudgetType</Name>
										<ElementPosition>1968526670</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjForecastBudgetType</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PSAIndirectComponentGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2058005158</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IndirectComponentGroupID</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>ProjForecastEmpl</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ModelId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ModelId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Identification_SchedFromDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedFromDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ProjId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ContractLineNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ContractLineId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Label>@Proj:ContractLineId</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_ProjFundingSource</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Identification_ProjFundingSource_FundingSourceId</Name>
												<DataRelationPath>FundingSource</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjForecastEmpl</DataSource>
										<ReferenceField>ProjFundingSource</ReferenceField>
										<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ActivityNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<PreviewPartRef>ProjForecastEmplCtrlGridActivityPreview</PreviewPartRef>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_CategoryId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_Resource</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjForecastEmpl</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjForecastEmpl</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
										<ReplacementFieldGroup>ResourceCategoryId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_LinePropertyId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Transaction</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_TransId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_Txt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Transaction</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CostPrice</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrice_Qty</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrice_CostPrice</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrice_M_costAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costAmount</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrice_M_IndirectCostAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IndirectCostAmount</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrice_M_IndirectCostTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IndirectCostTotal</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SalesPrice</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesPrice_CurrencyId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_ExchRate</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExchRate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_SalesPrice</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_IndirectSalesAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986915</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IndirectSalesAmount</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_IndirectSalesTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735279</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IndirectSalesTotal</DataMethod>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SchedulingGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Scheduling_SchedWrkCtrId</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedWrkCtrId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SchedLink</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedLink</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SchedLinkType</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedLinkType</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SchedWorkTime</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedWorkTime</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SchedCapacity</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedCapacity</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Scheduling</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Administration</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Active</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Active</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ModifiedBy</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>modifiedBy</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Label>@SYS75729</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Administration_LineNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineNum</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Administration</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>ProjForecastEmpl</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabDates</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Dates</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Dates_SchedFromDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedFromDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Dates_InvoiceDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Dates_EliminationDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EliminationDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Dates_CostPaymDate</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPaymDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Dates_SalesPaymDate</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPaymDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Dates</DataGroup>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS80293</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ResourceRequirements</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1979711486</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RequirementSet</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RequirementSet_LoadPercent</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LoadPercent</DataField>
										<DataSource>WrkCtrActivityRequirementSet</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS10369</Caption>
								<DataSource>WrkCtrActivityRequirementSet</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ResourceRequirementsGridAndDetails</Name>
								<Pattern>NestedSimpleListDetails</Pattern>
								<PatternVersion>UX7 1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>ActionPaneRequirements</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>ActionPaneTab</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>CommandButtonGroup</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>NewRequirement</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<NormalImage>Document</NormalImage>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>DeleteRequirement</Name>
																<ElementPosition>1610612734</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<MultiSelect>No</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Delete</NormalImage>
																<SaveRecord>No</SaveRecord>
																<Text>@SYS21354</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>WrkCtrActivityRequirement</DataSource>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Requirements</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>RequirementsGridGroup</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGridControl">
														<Name>GridRequirements</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Grid</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToContent</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>WrkCtrActivityRequirement_RelationshipTypeGrid</Name>
																<ElementPosition>715827882</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ComboBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>RelationshipType</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>RequirementEditGrid</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1073741823</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>requirementEdit</DataMethod>
																<DataSource>WrkCtrActivityRequirement</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>WrkCtrActivityRequirement_UsedForOperationScheduling</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CheckBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<BackgroundColor>WindowBackground</BackgroundColor>
																<DataField>UsedForOperationScheduling</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
																<Label>@SYS10062</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>WrkCtrActivityRequirement_UsedForJobScheduling</Name>
																<ElementPosition>1789569705</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CheckBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<BackgroundColor>WindowBackground</BackgroundColor>
																<DataField>UsedForJobScheduling</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
																<Label>@SYS16375</Label>
															</AxFormControl>
														</Controls>
														<DataSource>WrkCtrActivityRequirement</DataSource>
														<MultiSelect>No</MultiSelect>
														<ShowRowLabels>No</ShowRowLabels>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>RequirementDetails</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>IdentificationDetails</Name>
														<ElementPosition>715827882</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>WrkCtrActivityRequirement_RelationshipTypeDetails</Name>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>ComboBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>RelationshipType</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>RequirementEditDetails</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>requirementEdit</DataMethod>
																<DataSource>WrkCtrActivityRequirement</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>RequirementDescription</Name>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>requirementDescription</DataMethod>
																<DataSource>WrkCtrActivityRequirement</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>SchedulingUsage_UsedForOperationScheduling1</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CheckBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>UsedForOperationScheduling</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>SchedulingUsage_UsedForJobScheduling1</Name>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CheckBox</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>UsedForJobScheduling</DataField>
																<DataSource>WrkCtrActivityRequirement</DataSource>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<FrameType>None</FrameType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>CapabilityAndSkillOptions</Name>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>Group</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>CapabilityOptions</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Visible>No</Visible>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>CapabilityOptions_MinimumLevelNeeded</Name>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Real</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>MinimumLevelNeeded</DataField>
																		<DataSource>WrkCtrActivityCapabilityRequirement</DataSource>
																		<NoOfDecimals>-1</NoOfDecimals>
																	</AxFormControl>
																</Controls>
																<DataGroup>Options</DataGroup>
																<DataSource>WrkCtrActivityCapabilityRequirement</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>SkillOptions</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1789569705</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Visible>No</Visible>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>SkillOptions_RatingLevel</Name>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>SkillOptions_RatingLevel_RatingLevelId</Name>
																				<DataRelationPath>HcmRatingLevel</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>SkillOptions_RatingLevel_HcmRatingModel_RatingModelId</Name>
																				<DataRelationPath>HcmRatingLevel.HcmRatingModel</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>WrkCtrActivitySkillRequirement</DataSource>
																		<ReferenceField>RatingLevel</ReferenceField>
																	</AxFormControl>
																</Controls>
																<DataGroup>Options</DataGroup>
																<DataSource>WrkCtrActivitySkillRequirement</DataSource>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<DataSource>WrkCtrActivityRequirement</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS134222</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SchedulingTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetEmpl_ActivityId1</Name>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjBudgetEmpl_SchedLink1</Name>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedLink</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjBudgetEmpl_SchedLinkType</Name>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedLinkType</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjBudgetEmpl_SchedWorkTime</Name>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>SchedWorkTime</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjBudgetEmpl_SchedCapacity</Name>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>SchedCapacity</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetEmpl_SchedWrkCtrId</Name>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedWrkCtrId</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetEmpl_SchedTimeHours</Name>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedTimeHours</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjBudgetEmpl_SchedFromDate</Name>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedFromDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>ProjBudgetEmpl_SchedFromTime</Name>
										<ElementPosition>1651910490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedFromTime</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjBudgetEmpl_SchedToDate</Name>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedToDate</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>ProjBudgetEmpl_SchedToTime</Name>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SchedToTime</DataField>
										<DataSource>ProjForecastEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjForecastEmpl</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS21838</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS101181</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>ProjForecastEmpl</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ProjForecastEmpl</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>