<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProdTableCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProdTableCreate extends FormRun
{
    InventDimCtrl_Frm_Mov       inventDimFormSetup;
    NumberSeqFormHandler        numberSeqFormHandler;

    Common                      callerBuffer;
    ProdTableFormId             prodTableFormId;

    ItemId                      defaultItemId;
    InventDim                   defaultInventDim;
    TransDate                   defaultDeliveryDate;
    PmfFormCtrl_ProdTableCreate pmfFormCtrl_ProdTableCreate;

    ProdId                      prodId;

    InventDistinctProduct       productFromLookup;

    // <GIN>
    #ISOCountryRegionCodes
}
]]></Source>
			</Method>
			<Method>
				<Name>bomId</Name>
				<Source><![CDATA[
    BOMId bomId()
    {
        return prodTable.bomId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pcConfigurable</Name>
				<Source><![CDATA[
    boolean pcConfigurable()
    {
        return  element.args() &&
                element.args().dataset() == tableNum(ProdTable) &&
                PCRuntimeLibrary::isConstraintBasedConfigurable(prodTable.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdOrderId</Name>
				<Source><![CDATA[
    public ProdId createdOrderId()
    {
        return ProdTable.ProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calledFromSimulator</Name>
				<Source><![CDATA[
    public boolean calledFromSimulator()
    {
        xArgs args   = element.args();
        object caller = !args ? null : args.caller();

        return !caller ? false : caller.name() == classStr(PmfProdTableSimulator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        if (!element.closedOk())
            numberSeqFormHandler.formMethodClose();

        if (!element.closedOk())
            return true;

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canContinueWithEmptyDim</Name>
				<Source><![CDATA[
    public boolean canContinueWithEmptyDim()
    {
        InventMov_Prod          inventMov_Prod;

        int                     lineBefore;

        SysInfologEnumerator    infologEnumerator;

        str                     txtWarnings;
        int                     numOfWarnings;
        Set                     dimensionsToIgnore;

        if (element.mustCheckEmptyDimension())
        {
            return true;
        }

        inventMov_Prod  = InventMov_Prod::newFromProdTable(prodTable);

        lineBefore      = infologLine();

        //Check if warehouse and item is WHS enabled
        if (WHSInventEnabled::exist(prodTable.ItemId) && InventDim.inventLocation().WHSEnabled)
        {
            //Add location inventDim to the ignore list
            dimensionsToIgnore = new Set(Types::Integer);
            dimensionsToIgnore.add(fieldNum(InventDim, WMSLocationId));

            inventMov_Prod.setInventDimToIgnore(dimensionsToIgnore);
        }

        if (inventMov_Prod.checkDimPhysical(prodTable.QtySched, inventDim, false, true))
        {
            return true;
        }

        if (lineBefore == infologLine())
        {
            return true;
        }

        infologEnumerator = SysInfologEnumerator::newData(infolog.cut(lineBefore + 1, infologLine()));

        while (infologEnumerator.moveNext())
        {
            txtWarnings += '- ' + infologEnumerator.currentMessage() + '\n';

            numOfWarnings++;
        }

        return Box::yesNo(strFmt('%1\n%2\n%3',
                          numOfWarnings > 1 ? "@SYS127866" : "@SYS127865",
                          txtWarnings, "@SYS127869"),
                          DialogButton::Yes, "@SYS866", "") == DialogButton::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckEmptyDimension</Name>
				<Source><![CDATA[
	/// <summary>
    ///		Checks whether to continue with empty dimension.
    /// </summary>
    /// <returns>
    ///		true, if the empty dimension check is ok; otherwise, false.
	/// </returns>
    protected boolean mustCheckEmptyDimension()
    {
        if (callerBuffer.RecId || callerBuffer.TableId == tableNum(SalesLine))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeBOMRouteVersions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Notifies the form interaction classes that the BOM and Route associated with the current parameters need to be updated.
    /// </summary>
    /// <param name="_bomDate">
    ///     The current date set on the production order.
    /// </param>
    /// <param name="_pmfAssignQty">
    ///     A boolean value indicating whether to update the production quantity based on the Formula size.
    /// </param>
    /// <remarks>
    ///     This method should be called upon quantity or dimension update on the parameters.
    /// </remarks>
    public void changeBOMRouteVersions(TransDate  _bomDate = prodTable.DlvDate, boolean _pmfAssignQty = true)
    {
        BOMId       bomIdDate;
        RouteId     routeIdDate;
        boolean     wasVersionUpdated = false;
        boolean     pmfAssignYieldPct;
        boolean     calledFromSimulator = element.calledFromSimulator();

        void updateProdTable()
        {
            wasVersionUpdated   = true;
            prodTable.bomId     = bomIdDate;
            prodTable.RouteId   = routeIdDate;

            pmfAssignYieldPct = true;

            prodTable_ds.refresh();
        }

        if (prodTable.ItemId && _bomDate != prodTable.bomDate || prodTable.QtySched != prodTable.orig().QtySched ||
            prodTable.InventDimId != prodTable.orig().InventDimId)
        {
            prodTable.bomDate   = _bomDate;
            bomIdDate           = BOMVersion::findActive(prodTable.ItemId,prodTable.bomDate, prodTable.QtySched, inventDim).bomId;
            routeIdDate         = RouteVersion::findActive(prodTable.ItemId,prodTable.bomDate, prodTable.QtySched, inventDim).RouteId;

            if (prodTable.bomId != bomIdDate || prodTable.RouteId != routeIdDate)
            {
                if (element.pmfIsEnabled())
                {
                    if (!pmfFormCtrl_ProdTableCreate.isReworkEnabled()
                        && (calledFromSimulator
                            || Box::yesNo(
                                "@PRO1979",
                                DialogButton::Yes,
                                "@PRO2366",
                                "")))
                    {
                        updateProdTable();
                        prodTable.bomId     = bomIdDate;
                        prodTable.RouteId   = routeIdDate;
                        prodTable_ds.refresh();
                    }
                }
                else
                {
                if (
                    calledFromSimulator ||
                    Box::yesNo("@SYS67181",DialogButton::Yes,"@SYS67183",""))
                {
                    wasVersionUpdated   = true;
                    prodTable.bomId     = bomIdDate;
                    prodTable.RouteId   = routeIdDate;

                    prodTable_ds.refresh();
                }
                }
            }
        }

        if (wasVersionUpdated)
        {
            pmfFormCtrl_ProdTableCreate.changeBOMRouteVersionsPost(inventDim, pmfAssignYieldPct, _pmfAssignQty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            pmfFormCtrl_ProdTableCreate.closedOk();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCurrencyId</Name>
				<Source><![CDATA[
    boolean enableCurrencyId()
    {
        if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(prodTable.ProjId).ProjInvoiceProjId))
        {
            return false;
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields</Name>
				<Source><![CDATA[
    void enableFields()
    {
        project.visible(element.showProjectGroup());
        if (element.showProjectGroup())
        {
            prodTable_ProjId.allowEdit(element.enableProjId());

            if (prodTable.ProjId)
            {
                prodTable_ds.object(fieldNum(ProdTable, ProjPostingType)).enabled(element.enableProjPosting());
                prodTable_ds.object(fieldNum(ProdTable,ActivityNumber)).enabled(true);
                projectFinishedItem.enabled(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).enabled(element.enableCurrencyId());
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).skip(!element.enableCurrencyId());

                prodTable_ds.object(fieldNum(ProdTable, ProjPostingType)).mandatory(true);
                prodTable_ds.object(fieldNum(ProdTable,DlvDate)).mandatory(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
                prodTable_ds.object(fieldNum(ProdTable,ProjCategoryId)).mandatory(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
                prodTable_ds.object(fieldNum(ProdTable,ProjLinePropertyId)).mandatory(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).mandatory(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesUnitId)).mandatory(prodTable.ProjPostingType == ProjProdPostingType::FinishedItemMethod && !prodTable.ProjLinkedToOrder);
            }
            else
            {
                prodTable_ds.object(fieldNum(ProdTable,ProjPostingType)).enabled(false);
                prodTable_ds.object(fieldNum(ProdTable,ActivityNumber)).enabled(false);
                projectFinishedItem.enabled(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).enabled(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).skip(true);

                prodTable_ds.object(fieldNum(ProdTable, ProjPostingType)).mandatory(false);
                prodTable_ds.object(fieldNum(ProdTable,DlvDate)).mandatory(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjCategoryId)).mandatory(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjLinePropertyId)).mandatory(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesCurrencyId)).mandatory(false);
                prodTable_ds.object(fieldNum(ProdTable,ProjSalesUnitId)).mandatory(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjId</Name>
				<Source><![CDATA[
    boolean enableProjId()
    {
        boolean enableProjId = true;

        switch (callerBuffer.TableId)
        {
            case (tableNum(ProjTable)):
            case (tableNum(SalesLine)):
                enableProjId = false;
                break;
        }

        return enableProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjPosting</Name>
				<Source><![CDATA[
    boolean enableProjPosting()
    {
        boolean     ret = true;
        SalesLine   salesLine;

        if (callerBuffer.TableId == tableNum(SalesLine))
        {
            salesLine = callerBuffer;
            if (salesLine.ProjId && salesLine.SalesType != SalesType::ItemReq)
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        InventMovement  callerMovement;
        Object          callerFormObject;
        ProdTable       prodTableLocal;
        ProdIProdTableDefaultValuesProvider prodTableDefaultValuesProvider;

        pmfFormCtrl_ProdTableCreate = PmfFormCtrl_ProdTableCreate::newFromForm(element);
        pmfFormCtrl_ProdTableCreate.initPre();

        super();

        pmfFormCtrl_ProdTableCreate.setDatasources(prodTable, inventDim);
        callerBuffer = pmfFormCtrl_ProdTableCreate.isCallerReworkOrder();
        pmfFormCtrl_ProdTableCreate.initPost();

        if (element.args() && element.args().caller())
        {
            callerFormObject = element.args().caller();

            switch (element.args().dataset())
            {
                case (tablenum(SalesLine))   :
                    callerBuffer = element.args().record();
                    break;

                case (tablenum(ProdBOM))     :
                    callerBuffer = element.args().record();
                    break;

                default:
            }
            if (element.args().parmEnumType() == enumnum(ProdTableFormId))
            {
                prodTableFormId = element.args().parmEnum();
                switch (prodTableFormId)
                {
                    case ProdTableFormId::Project:
                        callerBuffer = element.args().caller().projTable();
                        break;
                    case ProdTableFormId::InvoiceProject:
                        callerBuffer = element.args().caller().projInvoiceTable();
                        break;
                    case ProdTableFormId::EstimateProject:
                        callerBuffer = element.args().caller().projWIPTable();
                        break;
                }
            }
            else if (element.isCalledFromPurchTableListPageProject())
            {
                prodTableFormId = ProdTableFormId::Project;
            }
            else if (element.args().dataset() == tablenum(ProdTable))
            {
                prodTableLocal = element.args().record();
                if (prodTableLocal.ProjId)
                {
                    prodTableFormId = ProdTableFormId::Project;
                }
            }

            prodTableDefaultValuesProvider = callerFormObject as ProdIProdTableDefaultValuesProvider;
            if (prodTableDefaultValuesProvider != null)
            {
                defaultItemId = prodTableDefaultValuesProvider.parmItemId();
                defaultInventDim = prodTableDefaultValuesProvider.defaultInventDim();
                defaultDeliveryDate = prodTableDefaultValuesProvider.getFromDate();
            }
            }

        if (callerBuffer && prodTableFormId == ProdTableFormId::None)
        {
            callerMovement = InventMovement::constructNoThrow(callerBuffer);
            if (callerMovement && ! callerMovement.checkAllowManualMarking())
                throw warning("@SYS79625");
        }

        if (! callerBuffer.RecId)
        {
            groupReference.visible(false);
        }
        else
        {
            if (prodTableFormId == ProdTableFormId::None)
                identification_ItemId.allowEdit(false);
            else
                groupReference.visible(false);
        }

        pcExecute.visible(element.pcConfigurable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimModified</Name>
				<Source><![CDATA[
    void inventDimModified(FieldId _inventDimFieldId = 0)
    {
        prodTable.modifiedInventDim(InventDim, _inventDimFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCalledFromPurchTableListPageProject</Name>
				<Source><![CDATA[
    private boolean isCalledFromPurchTableListPageProject()
    {
        Object      myCaller;
        FormRun     callerForm;
        boolean     calledFromListPage = false;

        if (element.args())
        {
            myCaller = element.args().caller();

            if (myCaller && myCaller is FormRun)
            {
                callerForm = myCaller;
                if (callerForm.name() == formStr(ProdTableListPage) &&
                    (callerForm.args() &&
                        (callerForm.args().menuItemName() == menuitemDisplayStr(ProdTableListPage_MyProj) ||
                        callerForm.args().menuItemName() == menuitemDisplayStr(ProdTableListPage_Proj))))
                {
                    calledFromListPage = true;
                }
            }
        }
        return calledFromListPage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    ItemId  itemId()
    {
        return prodTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler
            && pmfFormCtrl_ProdTableCreate)
        {
            numberSeqFormHandler =
                pmfFormCtrl_ProdTableCreate.numberSeqFormHandler();
        }
        if (!numberSeqFormHandler)
            numberSeqFormHandler = NumberSeqFormHandler::newForm(ProdParameters::numRefProdId().NumberSequenceId,
                                                                 element,
                                                                 prodTable_DS,
                                                                 fieldnum(ProdTable,ProdId)
                                                                );
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openMenuItem</Name>
				<Source><![CDATA[
    public void openMenuItem(menuItemName _menuItemName, MenuItemType _menuItemType, EcoResProductMaster _record)
    {
        Args args;
        MenuFunction menuFunction;

        args = new Args();
        args.caller(this);
        args.record(_record);

        menuFunction = new MenuFunction(_menuItemName, _menuItemType);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfIsEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns if Pmf configuration key is enabled and if item is a formula
    /// </summary>
    /// <returns>true formula item; otherwise false</returns>
    public boolean pmfIsEnabled()
    {
        return pmfFormCtrl_ProdTableCreate.isFormulaEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    void refreshCaller()
    {
        Common         common;
        Common         commonDim;
        FormDataSource common_ds;
        FormDataSource commonDim_ds;

        if (element.args().dataset() == tableNum(SalesLine))
        {
            common      = element.args().record();
            common_ds   = FormDataUtil::getFormDataSource(common);

            common_ds.reread();
            common_ds.refresh();

            commonDim       = common.joinChild();

            if (commonDim.TableId == tableNum(InventDim))
            {
                commonDim_ds    = FormDataUtil::getFormDataSource(commonDim);

                commonDim.data(InventDim::find(prodTable.InventDimId));
                commonDim_ds.setCurrent();
            }
        }
        else if ( element.args().record() )
        {
            common_ds   = FormDataUtil::getFormDataSource(element.args().record());
            common_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        NoYes parmEnum;
        ProdTable joinProdTable;

        prodTable_DS.create(true);
        inventDim_DS.create(true);

        if (callerBuffer.RecId && (prodTableFormId == ProdTableFormId::None || prodTableFormId == ProdTableFormId::Project))
        {
            element.setInventDimId();
        }
        else
        {
            element.updateDesign(InventDimFormDesignUpdate::Init);
        }

        identification_ItemId.setFocus();

        super();

        if (#PmfEnabled && element.args().parmEnumType() == enumnum(NoYes)
            && callerBuffer.TableId == tablenum(ProdTable))
        {
            parmEnum = element.args().parmEnum();
            if (parmEnum)
            {
                joinProdTable = pmfFormCtrl_ProdTableCreate.setReworkFields(prodTable,callerBuffer);
                prodTable_ds.query().dataSourceTable(tablenum(prodTable)).addDynalink(fieldnum(prodTable, RecId), joinProdTable, fieldnum(ProdTable, RecId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    void setInventDimId()
    {
        inventDim.data(InventDim::find(prodTable.InventDimId));

        inventDim_ds.refresh();

        element.updateDesign(InventDimFormDesignUpdate::FieldChange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProductionType</Name>
				<Source><![CDATA[
    public void setProductionType()
    {
        //assign the only possible choice
        if (PmfFormCtrl_ProdTableCreate.isFormulaEnabled())
        {
            Production_ProdType.visible(false);
            ProdTable.ProdType = ProdType::Process;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProductFromLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets product value based on selected product from the lookup.
    /// </summary>
    public void setProductFromLookup(InventDistinctProduct _product)
    {
        productFromLookup = _product;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates product dimensions assuming item has already been set.
    /// </summary>
    /// <param name="_inventDim">
    ///     An instance of the <c>_inventDim</c> that provides the new product dimensions.
    /// </param>
    private void updateProductDimensions(InventDim _inventDim)
    {
        if (inventDim.copyProductDimensions(_inventDim, prodTable.ItemId))
        {
            InventDim.clearStorageDimensions();
            prodTable.InventDimId = InventDim::findOrCreate(inventDim).inventDimId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showProjectGroup</Name>
				<Source><![CDATA[
    boolean showProjectGroup()
    {
        boolean     ret = true;
        SalesLine   salesLine;

        if (callerBuffer.TableId == tableNum(SalesLine))
        {
            salesLine = callerBuffer;
            if (!salesLine.ProjId)
                ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        int ret;

        switch (_taskId)
        {
            // task ids to be ignored
            case    #taskF5         :
            case    #taskPageUp     :
            case    #taskPageDown   :
            case    #taskPgUp       :
            case    #taskPgDn       :
            case    #taskCtrlHome   :
            case    #taskCtrlEnd    :
                break;

            default                 :
                ret = super(_taskId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventMovement movement = InventMovement::construct(prodTable);
        if (!inventDimFormSetup)
        {
            inventDimFormSetup  = InventDimCtrl_Frm_Mov::newFromFormMovement(element,movement);
            inventDimFormSetup.parmDontShowDisabled(true);
        }

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init          :
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::Active        :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::FieldChange   :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::SetupChange   :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            default : throw error(strfmt("@SYS54195",funcname()));
        }

        pmfFormCtrl_ProdTableCreate.updateDesignPost(mode);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProdTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            xArgs   args        = element.args();
            Object  caller      = !args ? null : args.caller();
            boolean isSimulator = !caller ? false : classIdGet(caller) == className2Id(classStr(PmfProdTableSimulator));

            boolean     ret = true;

            if (element.closedOk())
            {
                if (prodTable.ProjId && prodTable.ProjPostingType == ProjProdPostingType::None)
                {
                    return checkFailed("@SYS332980");
                }

                if (!ProdTable::checkMultiSiteBOMRouteConsistency(prodTable, inventDim.InventSiteId))
                {
                    return false;
                }

                if (! inventDim.checkDimFieldsValid(prodTable.ItemId, inventDim.RecId ? inventDim.orig() : null))
                {
                    return false;
                }

                inventDim.clearNotActiveDim(InventDimGroupSetup::newItemId(prodTable.ItemId));

                if (!element.canContinueWithEmptyDim())
                {
                    return false;
                }

                ret = super() && ret;

                ret = ret && pmfFormCtrl_ProdTableCreate.dataSourceValidateWrite();

                if (ret
                    && !isSimulator
                    && ProdParameters::find().PmfAlertNonStdVersionUsage
                    && !PmfProdTableSimulator::isEqual(prodTable)
                    && Box::okCancel("@PRO2681", DialogButton::Cancel) == DialogButton::Cancel)
                {
                    ret = false;
                }
            }

            ret = element.numberSeqFormHandler().formMethodDataSourceValidateWrite(ret) && ret;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            pmfFormCtrl_ProdTableCreate.dataSourceInitValuePre(prodTable);

            super();

            prodTable.initFromCaller(callerBuffer);

            if (prodTableFormId == ProdTableFormId::Project && !callerBuffer)
            {
                prodTable.initProjPostingType();
            }

            if (defaultItemId)
            {
                prodTable.ItemId = defaultItemId;
            }

            if (!callerBuffer && prodTable.ItemId)
            {
                ProdTable.initFromInventTable(InventTable::find(prodTable.ItemId));
            }

            if (defaultDeliveryDate)
            {
                prodTable.DlvDate = defaultDeliveryDate;
            }

            element.enableFields();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            #OCCRetryCount

            ProdIProdTableView prodTableView;

            if (prodTable.RecId)
                return;

            if (!element.closedOk())
                return;

            prodTable.RemainInventPhysical = prodTable.QtySched;

            try
            {
                pmfFormCtrl_ProdTableCreate.dataSourceWritePre();

                ttsbegin;

                inventDim.InventDimId = prodTable.insertFromForm(inventDim,prodTable.typeClient().numberSeqProdId());
                element.numberSeqFormHandler().formMethodDataSourceWrite();

                ttscommit;

                element.refreshCaller();
            }

            catch (Exception::Error)
            {
                element.numberSeqFormHandler().formMethodClose(true);
                prodTable.RecId = 0;
                element.close();
                pmfFormCtrl_ProdTableCreate.dataSourceWriteOnThrow();
                throw Exception::Error;
            }
            catch (Exception::Deadlock)
            {
                retry;
            }
            catch (Exception::UpdateConflict)
            {
                prodTable.RecId = 0;

                if (appl.ttsLevel() == 0)
                {
                    if (xSession::currentRetryCount() >= #RetryNum)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }

            if (element.args() && element.args().caller())
            {
                prodTableView = element.args().caller() as ProdIProdTableView;

                if (prodTableView != null)
                {
                    prodTableView.createProdId(prodTable.ProdId);
                    prodTableView.setCreateTable(prodTable,InventDim::find(inventDim.InventDimId));
                }
            }

            element.closeOk();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean appenD = false)
        {
            if (! prodTable.ProdId)
            {
                pmfFormCtrl_ProdTableCreate.dataSourceCreatePre();
                
                Num lastNum = element.numberSeqFormHandler().lastUncommitedNumber();

                if (lastNum && FeatureStateProvider::isFeatureEnabled(CLISavedViewsEnableFeature::instance()))
                {
                    prodTable.ProdId = lastNum;
                }
                else
                {
                    element.numberSeqFormHandler().formMethodDataSourceCreatePre();
                }

                super(appenD);
                element.numberSeqFormHandler().formMethodDataSourceCreate();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            ret = super();
            pmfFormCtrl_ProdTableCreate.dataSourceActivePost();
            if (#PmfEnabled)
            {
                if (!pmfFormCtrl_ProdTableCreate.isFormulaEnabled())
                {
                    production_ProdType.delete(enum2str(ProdType::Process));
                    production_ProdType.visible(true);
                }
                else
                {
                    production_ProdType.add(enum2str(ProdType::Process));
                    element.setProductionType();
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            pmfFormCtrl_ProdTableCreate.dataSourceInitPost(prodTable);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                HierarchyTreeTable::lookupHierarchyTree(_formControl, prodTable.projTable());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BOMDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.changeBOMRouteVersions(prodTable.bomDate);

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BOMId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean result = super();

                result =    result
                         && ProdTable::validateBOMId(prodTable.bomId,prodTable.ItemId,inventDim);

                return result;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                pmfFormCtrl_ProdTableCreate.fieldModified(fieldNum(ProdTable, bomId));
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                if (#PmfEnabled)
                {
                    pmfFormCtrl_ProdTableCreate.fieldLookup(fieldNum(ProdTable, bomId), _formControl, _filterStr);
                }
                else
                {
                    InventTable::lookupBOMId(_formControl, prodTable.ItemId, inventDim, true, false);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DlvDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.changeBOMRouteVersions(prodTable.DlvDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                InventLookup lookup;

                if (#PmfEnabled && pmfFormCtrl_ProdTableCreate.isFormulaEnabled())
                {
                    pmfFormCtrl_ProdTableCreate.fieldLookup(
                        fieldNum(ProdTable, ItemId), _formControl, _filterStr);
                }
                else if (EcoResProductSearchLookup::isProductSearchLookupEnabled())
                {
                    EcoResProductSearchLookup::lookupProduct(_formControl);
                }
                else
                {
                    lookup = new InventLookup(_formControl, new Query(), formStr(InventItemIdLookupPurchase));
                    lookup.run();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                if (productFromLookup) // if there was product selected from the product lookup
                {
                    element.updateProductDimensions(InventDim::find(productFromLookup.InventDimId));
                    productFromLookup = null;
                }

                prodTable.initFromItemId();

                prodTable.setDefaultWMSLocationOnInventDim();
                element.setInventDimId();

                pmfFormCtrl_ProdTableCreate.fieldModified(fieldNum(ProdTable, ItemId));
                if (#PmfEnabled)
                {
                    InventMovement::setMinMaxQty(prodTable);
                    element.setProductionType();
                }

                prodTable_ds.refresh();

                super();

                pcExecute.visible(element.pcConfigurable());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsCWBatchSched</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Complete standard field modification and update custom from control
            /// </summary>
            public void modified()
            {
                super();

                pmfFormCtrl_ProdTableCreate.fieldModified(
                    fieldNum(ProdTable,PdsCWBatchSched));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PmfReworkBatch</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                pmfFormCtrl_ProdTableCreate
                    .fieldModified(fieldNum(ProdTable, PmfReworkBatch));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProdType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                pmfFormCtrl_ProdTableCreate.fieldModified(
                                        fieldNum(ProdTable, ProdType));

                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && pmfFormCtrl_ProdTableCreate.fieldValidate(
                                    fieldNum(ProdTable, ProdType));

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableFields();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>QtySched</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                InventTable inventTable = InventTable::find(prodTable.ItemId);
                super();

                InventDimId inventDimId = InventDim::findOrCreate(inventDim).InventDimId;                             

                if (inventTable::isFormulaItem(prodTable.ItemId) && BOMVersion::findActive(prodTable.ItemId, prodTable.BOMDate, prodTable.QtySched, prodTable.inventDim()).PmfFormulaMultiple)
                {
                    prodTable.QtySched = InventTable::calculateOrderQuantity(inventTable.inventItemInventSetup(inventDimId),
                                                        prodTable.InventDimId,
                                                        prodTable.QtySched,
                                                        inventTable.inventUnitId(),
                                                        true, false, false, false, false);
                }
                else
                {
                    prodTable.QtySched =
                    InventTable::calculateOrderQuantity(inventTable.inventItemInventSetup(inventDimId),
                                                        prodTable.InventDimId,
                                                        prodTable.QtySched,
                                                        inventTable.inventUnitId());                
                }
                
                element.changeBOMRouteVersions(
                            prodTable.DlvDate
                            , false
                            );

                if (prodTable.isProjMethodFinished())
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedQtyPost();

                pmfFormCtrl_ProdTableCreate.fieldModified(
                    fieldNum(ProdTable,QtySched));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RouteId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean result = super();

                result =    result
                         && ProdTable::validateRouteId(prodTable.RouteId,prodTable.ItemId,inventDim);

                return result;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                InventTable::lookupRouteId(_formControl, prodTable.ItemId, inventDim, true, false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            inventDim.checkDimFieldsValid(prodTable.ItemId, inventDim.RecId ? inventDim.orig() : null) ;

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            if (defaultInventDim)
            {
                inventDim.initFromInventDim(defaultInventDim);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>configId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim,ConfigId));
                element.changeBOMRouteVersions();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,ConfigId));
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (!EcoResProductMasterConfigurationMgr::configure( _formControl,
                                                                    prodTable.ItemId,
                                                                    InventDim::findOrCreate(inventDim).InventDimId,
                                                                    prodTable.bomDate,
                                                                    prodTable.bomId,
                                                                    prodTable.QtySched))
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>inventBatchId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventBatchId));
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveAmbiguousReference</Name>
								<Source><![CDATA[
            public str resolveAmbiguousReference(FormControl _formControl)
            {
                if (InventBatchSkipResolveAmbiguousReferenceFlight::instance().isEnabled())
                {
                    FormStringControl formStringControl = _formControl as FormStringControl;
                    if (formStringControl)
                    {
                        return formStringControl.text();
                    }
                }

                return super(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventColorId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim,InventColorId));
                element.changeBOMRouteVersions();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventColorId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventLocationId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                InventSiteId currentSiteId = inventDim.InventSiteId;

                super();

                element.inventDimModified();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventLocationId));
                }

                if (currentSiteId != inventDim.InventSiteId)
                {
                    element.changeBOMRouteVersions();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventProfileId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GEERU>
                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim, fieldNum(InventDim, InventProfileId_RU));
                }
                // </GEERU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>inventSerialId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventSerialId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSiteId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim,InventSiteId));
                element.changeBOMRouteVersions();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSizeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim,InventSizeId));
                element.changeBOMRouteVersions();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventSizeId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventStatusId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                WHSInventStatus::lookupInventStatus(_formControl, NoYes::No);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventStyleId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim,InventStyleId));
                element.changeBOMRouteVersions();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,InventStyleId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventVersionId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified(fieldNum(InventDim, InventVersionId));
                element.changeBOMRouteVersions();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim, fieldNum(InventDim, InventVersionId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>wMSLocationId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = ProdTable::validateWHSLocationLPSetup(ProdTable.ItemId, InventDim.wMSLocationId, InventDim.InventLocationId);

                if (ret)
                {
                    ret = super();
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,wmsLocationId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>wMSPalletId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.inventDimModified();

                if (prodTable.isProjMethodFinished())
                {
                    ProjInventJournalTransMapForm::construct(prodTable).fieldModifiedInventDimFieldsPost(inventDim,fieldNum(InventDim,wmsPalletId));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PCExecute</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            PCExecuteVariantConfiguration executeVariantConfiguration;

            prodTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

            if (PCRuntimeLibrary::isConstraintBasedConfigurable(prodTable.ItemId))
            {
                executeVariantConfiguration = PCExecuteVariantConfiguration::execute(prodTable, prodTable.ItemId, InventDim::find(prodTable.InventDimId).ConfigId);
                // Update buffer with updated fields. This is needed because it is a new line so we cannot reread it from database as is done for e.g. sales orders.
                buf2Buf(executeVariantConfiguration.parmSourceLine() as ProdTable, prodTable);
            }

            prodTable_ds.refresh();

            inventDim.InventDimFieldsMap::initProductDimensionsFrom(prodTable.inventDim());
            inventDim_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BOMroute_BOMId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            if (element.pmfIsEnabled() && !prodTable.ItemId)
            {
                MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(PmfFormulaTable), MenuItemType::Display);
                MenuFunction.run();
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdTable_ProjPostingType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.enableFields();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProdTable</Name>
			<Table>ProdTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BackorderStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckRoute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectRefLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectRefProdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Density</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Depth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinishedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GanttColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedDirection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchEst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchStup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfBulkOrd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfCoByVarAllow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfConsOrdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfReworkBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfTotalCostAllocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdLocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdOrigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPrio</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdWHSReleasePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfitSet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinkedToOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyStUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefLookUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleasedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPlanIdSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPOId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteJobs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedEnd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedFromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedStart</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StUpDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BOMTable</Name>
			<Table>BOMTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckBOM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfBOMFormula</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RouteTable</Name>
			<Table>RouteTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckRoute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@SYS1196</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<SaveSize xmlns="">No</SaveSize>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">ProdTable</TitleDataSource>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ProductionButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>PCExecute</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>OK</Command>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS40567</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupReference</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>GroupReference_InventRefType</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventRefType</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupReference_InventRefId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventRefId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupReference_InventRefTransId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventRefTransId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>ItemReference</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Identification</Name>
						<ElementPosition>238609294</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Identification_ProdId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Identification_ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CopyOfProduction_Name</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>Identification</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PmfReworkBatch</Name>
						<ConfigurationKey>PMF</ConfigurationKey>
						<ElementPosition>357913941</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PmfReworkBatch_PmfReworkBatch</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PmfReworkBatch</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>PmfReworkBatch</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Inventorydimensions</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_configId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>configId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventSizeId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSizeId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventColorId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventColorId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventStyleId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStyleId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventVersionId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventVersionId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventSiteId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSiteId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_inventBatchId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventBatchId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_wMSLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>wMSLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_inventSerialId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventSerialId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventStatusId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStatusId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_LicensePlateId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>LicensePlateId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventOwnerId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventOwnerId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventProfileId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventProfileId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Inventorydimensions_InventGtdId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventGtdId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>InventoryDimensions</DataGroup>
						<DataSource>InventDim</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Production</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Production_ProdType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdType</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Production_PdsCWBatchSched</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PdsCWBatchSched</DataField>
								<DataSource>ProdTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Production_M_pdsCWUnitId</Name>
								<AllowEdit>No</AllowEdit>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>pdsCWUnitId</DataMethod>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Production_QtySched</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>QtySched</DataField>
								<DataSource>ProdTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>Production_DlvDate</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>DlvDate</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>Production_DlvTime</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>DlvTime</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>Production</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PmfBatch</Name>
						<ConfigurationKey>PMF</ConfigurationKey>
						<ElementPosition>835132529</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PmfBatch_PmfYieldPct</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PmfYieldPct</DataField>
								<DataSource>ProdTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataGroup>PmfBatch</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BOMroute</Name>
						<ElementPosition>954437176</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>BOMroute_BOMDate</Name>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:ProdTable_ProdtableCreate_ProductionBOMRouteDate</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BOMDate</DataField>
								<DataSource>ProdTable</DataSource>
								<Label>@SCM:ProductionBOMRouteDate</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BOMroute_BOMId</Name>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BOMId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BOMroute_RouteId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RouteId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>BOMRoute</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Grouping</Name>
						<ElementPosition>1193046470</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grouping_ProdPoolId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdPoolId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grouping_ProdGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdGroupId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>Grouping</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Setup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Setup_ProdPostingType</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdPostingType</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Setup_Reservation</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Reservation</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Setup_ProdWHSReleasePolicy</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProdWHSReleasePolicy</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>Setup_PmfTotalCostAllocation</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PmfTotalCostAllocation</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>Setup</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Project</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>1670265058</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProdTable_ProjId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProdTable_ActivityNumber</Name>
								<ElementPosition>1386916521</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ActivityNumber</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ProdTable_ProjPostingType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1700091219</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjPostingType</DataField>
								<DataSource>ProdTable</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<Caption>@SYS80304</Caption>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ProjectFinishedItem</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectFinishedItem_ProjCategoryId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjCategoryId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectFinishedItem_ProjLinePropertyId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjLinePropertyId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectFinishedItem_ProjSalesCurrencyId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjSalesCurrencyId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectFinishedItem_ProjSalesUnitId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProjSalesUnitId</DataField>
								<DataSource>ProdTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>ProjectFinishedItem</DataGroup>
						<DataSource>ProdTable</DataSource>
					</AxFormControl>
				</Controls>
				<BottomMargin>15</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<ColumnsMode>Fill</ColumnsMode>
				<LeftMargin>11</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>11</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>11</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS14364</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Columnspace>5</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>