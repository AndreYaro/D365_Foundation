<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>GeneralLedgerAdjustmentJournalCreationDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class GeneralLedgerAdjustmentJournalCreationDialog extends FormRun implements GeneralLedgerAdjustmentIJournalCreationDialog
{
    private GeneralLedgerAdjustmentJournalCreationDialogContract dialogContract;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void init()
    {
        // Get the necessary data for journal creation from the dialog caller
        GeneralLedgerAdjustmentIOpenJournalCreationDialog journalCreationDialogCaller = this.args().caller() as GeneralLedgerAdjustmentIOpenJournalCreationDialog;
        
        if (!journalCreationDialogCaller)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        
        dialogContract = journalCreationDialogCaller.getJournalCreationContract();

        super();

        // Validate the dialog contract and close the form if it is invalid and user
        // does not wish to continue with journal creation
        if (!this.validateDialogContract())
        {
            this.close();
        }

        this.intitializeFormControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDialogContract</Name>
				<Source><![CDATA[
    private boolean validateDialogContract()
    {
        GeneralLedgerAdjustmentJournalCreationDialogContractValidator journalCreationContractValidator =
            GeneralLedgerAdjustmentJournalCreationDialogContractValidator::newForJournalCreationDialog(this);

        return journalCreationContractValidator.validateJournalCreationContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>intitializeFormControls</Name>
				<Source><![CDATA[
    private void intitializeFormControls()
    {
        // The DataArea form control is read only, so set the text value on that control equal
        // to the DataArea from the journal creation dialog contract.
        AdjustmentJournalDataArea.text(dialogContract.getJournalDataArea());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalCreationDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public GeneralLedgerAdjustmentJournalCreationDialogContract getJournalCreationDialogContract()
    {
        return dialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>askUserIfTheyWantToContinueWithJournalCreation</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean askUserIfTheyWantToContinueWithJournalCreation(str _warning)
    {
        boolean shouldContinueWithJournalCreation = true;

        // Prompt the user with a modal box displaying the warning produced from creation contract validation
        if (Box::yesNo(_warning, DialogButton::Yes) == DialogButton::No)
        {
            // If they click 'No' on the modal box, the user no longer wishes to continue with journal creation
            shouldContinueWithJournalCreation = false;
        }

        return shouldContinueWithJournalCreation;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>AdjustmentJournalName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public void lookup()
        {
            changecompany (dialogContract.getJournalDataArea())
            {
                // Filter available journal names to general journal names that belong to the given data area
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(LedgerJournalName), this);
        
                Query generalJournalNameQuery = new Query();
                QueryBuildDataSource generalJournalNameQbds = generalJournalNameQuery.addDataSource(tableNum(LedgerJournalName));
        
                generalJournalNameQbds.addRange(fieldNum(LedgerJournalName, JournalType)).value(queryValue(LedgerJournalType::Daily));
                generalJournalNameQbds.addRange(fieldNum(LedgerJournalName, DataAreaId)).value(dialogContract.getJournalDataArea());

                sysTableLookup.addLookupfield(fieldNum(LedgerJournalName, JournalName));
                sysTableLookup.addLookupfield(fieldNum(LedgerJournalName, Name));

                sysTableLookup.parmQuery(generalJournalNameQuery);
                sysTableLookup.performFormLookup();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public boolean validate()
        {
            boolean ret = super();

            if (ret)
            {
                JournalNameId selectedJournalNameId = this.valueStr();

                if (selectedJournalNameId)
                {
                    ret = GeneralLedgerAdjustmentJournalCreationDialogValidator::validateJournalNameIsValidForAdjustmentJournalCreation(
                        selectedJournalNameId,
                        dialogContract.getJournalDataArea());
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdjustmentJournalUseExistingAccountingDate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                // If marked to no, enable the date control for manually specifying the journal transaction date
                AdjustmentJournalTransactionDate.enabled(this.value() == NoYes::No);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdjustmentJournalCreateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public void clicked()
        {
            // Construct a journal creation contract from the form controls on this dialog
            GeneralLedgerAdjustmentJournalCreationContract journalCreationContract = GeneralLedgerAdjustmentJournalCreationContract::newForAdjustmentJournalCreation(
                dialogContract.getMarkedAdjustments(),
                AdjustmentJournalName.valueStr(),
                AdjustmentJournalDataArea.valueStr(),
                AdjustmentJournalTransactionDate.dateValue(),
                AdjustmentJournalDescription.valueStr(),
                AdjustmentJournalUseExistingAccountingDate.value() == NoYes::Yes);

            // If the journal creation dialog passes validation, proceed with journal creation
            if (GeneralLedgerAdjustmentJournalCreationContractValidator::validateJournalCreationContract(journalCreationContract))
            {
                super();

                // Create the general journal containing the proposed adjustments
                LedgerJournalTable createdAdjustmentJournal =
                    GeneralLedgerAdjustmentGeneralJournalBuilder::createGeneralJournalsForAdjustments(journalCreationContract);

                // Once the general journal has been created, open the newly created journal in the general journal list page
                GeneralLedgerAdjustmentFormInteractionHelper::openGeneralJournalInJournalListPage(createdAdjustmentJournal);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogCaption</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogFields</Name>
				<ExtendedStyle>tabularFields_row</ExtendedStyle>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GeneralLedgerAdjustmentJournalInfoGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AdjustmentJournalDataArea</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogDataAreaLabel</Label>
								<LookupOnly>Yes</LookupOnly>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AdjustmentJournalName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogJournalNameLabel</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AdjustmentJournalDescription</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogJournalDescriptionLabel</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GeneralLedgerAdjustmentJournalDateGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>AdjustmentJournalUseExistingAccountingDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogUseAccountingDateLabel</Label>
								<Style>Toggle</Style>
								<Value>1</Value>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>AdjustmentJournalTransactionDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@GeneralLedgerAdjustment:GeneralLedgerAdjustmentJournalCreationDialogAccountingDateLabel</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>Accounting date</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogButtons</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>AdjustmentJournalCreateButton</Name>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>Create journal</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>AdjustmentJournalCreationDialogCancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>Cancel</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>