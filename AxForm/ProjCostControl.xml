<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjCostControl</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjCostControl extends FormRun
{
    ResourceRecId           resourceRecId;
    ResourceCategoryRecId   resourceCategoryRecId;
    ItemId                  itemId;

    ProjCategoryId          projCategoryId;
    ProjCategoryGroupId     projCategoryGroupId;

    ProjId                  projId;
    ProjWipId               projWipId;
    ProjSortValue           sortCode;
    ProjSort                sortingId;

    ProjGroupId             projGroupId;
    ProjInvoiceProjId       projInvoiceProjId;
    CustAccount             custAccount;
    ProjTable               projTable;

    ProjTransIdBase         transId;

    ProjCostControl         projCostControl;

    ProjForecastModelType   projForecastModel;
    ProjTransType           projTransType;

    const int               qtyColor = 14803455;   // RGB(255, 225, 225)
    const int               totalColor = 14811008; // RGB(128, 255, 225);

    boolean                 callCalculateMethod;
    boolean                 showSubProjects;

    ProjCostControlMethod           projCostControlMethod;
    TmpProjCostControlExcelPivot    tmpExcelExport;

    private boolean enableProjMultipleContractLinesForProjectFeature = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

}
]]></Source>
			</Method>
			<Method>
				<Name>clearTmpProjCostControl</Name>
				<Source><![CDATA[
    void clearTmpProjCostControl(boolean grayButton = false)
    {
        while select tmpProjCostControl
        {
            tmpProjCostControl.delete();
            tmpProjCostControl.clear();
        }

        ctrlTrans.enabled(grayButton);
        ctrlForecastTotal.enabled(grayButton);
        ctrlForecastOriginal.enabled(grayButton);
        ctrlCommittedCost.enabled(grayButton);

        tmpProjCostControl_ds.research();
        tmpProjCostControl_ds.reread();

        // Delete export to Excel temp file
        delete_from tmpExcelExport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ProjParameters      projParameters;

        super();

        if (element.args().dataset() == tableNum(ProjTable))
        {
            projTable = element.args().record();
            if (ProjTable::child(projTable.ProjId))
            {
                showSubProjects = true;
            }
        }

        projParameters = ProjParameters::find();
        costTemplate.text(projParameters.CostTemplate);
        if (costTemplate.text())
        {
            showBy.selection(ProjRowDisplayType::CostTemplate);
        }
        projCostControlMethod=projParameters.ProjCostControlMethod;
        if (projCostControlMethod==ProjCostControlMethod::RemainingBudget)
        {
            totalModelId.visible(false);
            totalModelId.allowEdit(false);

            ctrlForecastTotal.visible(false);

            gridGeneral.controlNum(2).visible(false);
            gridGeneral.controlNum(5).visible(false);
            gridGeneral.controlNum(6).visible(false);

            gridDeviation.controlNum(3).visible(false);
            gridDeviation.controlNum(4).visible(false);
            gridDeviation.controlNum(5).visible(false);
            gridDeviation.controlNum(6).visible(false);
            gridDeviation.controlNum(7).visible(false);
        }
        else if (projCostControlMethod==ProjCostControlMethod::TotalBudget)
        {
            remainingModelId.visible(false);
            remainingModelId.allowEdit(false);

            ctrlForecastRemaining.visible(false);

            gridGeneral.controlNum(6).visible(false);
            gridGeneral.controlNum(7).visible(false);
            gridGeneral.controlNum(8).visible(false);

            gridDeviation.controlNum(3).visible(false);
            gridDeviation.controlNum(8).visible(false);
            gridDeviation.controlNum(9).visible(false);
            gridDeviation.controlNum(10).visible(false);
            gridDeviation.controlNum(11).visible(false);
        }

        totalModelId.text(projParameters.TotalForecastModel);
        originalModelId.text(projParameters.OriginalForecastModel);
        remainingModelId.text(projParameters.RemainingForecastModel);

        data.visible(showSubProjects);

        element.setVisible();

        element.setButtonVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCostControl</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Runs the <c>ProjCostControl</c> class.
    /// </summary>
    /// <returns>
    ///     A instance of <c>ProjCostControl</c> class.
    /// </returns>
    ProjCostControl projCostControl()
    {
        projCostControl   = new ProjCostControl();

        projCostControl.parmExpenses(expenses.value());
        projCostControl.parmHour(hour.value());
        projCostControl.parmItem(item.value());

        projCostControl.parmProjTransDateFrom(projFromDate.dateValue() ? projFromDate.dateValue() : dateNull());
        projCostControl.parmProjTransDateTo(projToDate.dateValue() ? projToDate.dateValue() : dateMax());
        projCostControl.parmLedgerTransDateFrom(ledgerFromDate.dateValue() ? ledgerFromDate.dateValue() : dateNull());
        projCostControl.parmLedgerTransDateTo(ledgerToDate.dateValue() ? ledgerToDate.dateValue() : dateMax());

        projCostControl.parmProjId(projId);
        projCostControl.parmProjTree(includeSubprojects.value());
        projCostControl.parmProjGroupId(projGroupId);
        projCostControl.parmProjCategoryId(projCategoryId);
        projCostControl.parmCategoryGroupId(projCategoryGroupId);
        projCostControl.parmProjInvoiceProjId(projInvoiceProjId);
        projCostControl.parmProjWIPId(projWipId);
        projCostControl.parmResource(resourceRecId);
        projCostControl.parmResourceCategory(resourceCategoryRecId);
        projCostControl.parmItemId(itemId);
        projCostControl.parmCustomerAccount(custAccount);

        projCostControl.parmFixedPrice(fixedPrice.value());
        projCostControl.parmTimeMaterial(timeMaterial.value());
        projCostControl.parmInternalCost(internalCost.value());
        projCostControl.parmInvestment(investment.value());
        projCostControl.parmTime(timeProject.value());

        projCostControl.parmShowby(showBy.selection());
        projCostControl.parmProjCostTemplateId(costTemplate.text());
        projCostControl.parmProjCostControlMethod(projCostControlMethod);

        element.setProjSort();

        projCostControl.parmModelType(projForecastModel);
        projCostControl.parmOriginalForecastModelId(originalModelId.text());
        projCostControl.parmTotalForecastModelId(totalModelId.text());
        projCostControl.parmRemainingForecastModelId(remainingModelId.text());

        projCostControl.parmProjTransType(projTransType);

        // Only call the run method to calculate values in grid
        if (callCalculateMethod)
        {
            projCostControl.runOperation();
        }

        return projCostControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjSort</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Set the project sorting.
    /// </summary>
    public void setProjSort()
    {
        switch (sortCode)
        {
            case ProjSortValue::Sorting1:
                projCostControl.parmProjSorting1(sortingId);
                break;

            case ProjSortValue::Sorting2:
                projCostControl.parmProjSorting2(sortingId);
                break;

            case ProjSortValue::Sorting3:
                projCostControl.parmProjSorting3(sortingId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the visibility of transaction, forecast, committed cost and export to excel buttons.
    /// </summary>
    protected void setButtonVisibility()
    {
        AccessRight     menuItemAccessRight;
        SecurityRights  securityRights;

        securityRights = SecurityRights::construct();

        // Hour button
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projTransEmpl));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            hourButton.visible(false);
        }

        // Expense button
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projTransCost));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            expensesButton.visible(false);
        }

        // Item button
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projTransItem));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            itemButton.visible(false);
        }

        // Hour forecast buttons - Total, remaining & original
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projForecastEmpl));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            hourForecastTotalButton.visible(false);
            hourForecastRemainingButton.visible(false);
            hourForecastOriginalButton.visible(false);
        }

        // Expense forecast buttons - Total, remaining & original
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projForecastCost));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            expensesForecastTotalButton.visible(false);
            expensesForecastRemainingButton.visible(false);
            expensesForecastOriginalButton.visible(false);
        }

        // Item forecast buttons - Total, remaining & original
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(ForecastSalesProj));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            itemForecastTotalButton.visible(false);
            itemForecastRemainingButton.visible(false);
            itemForecastOriginalButton.visible(false);
        }

        // Committed cost buttons - Hour, Expense & Item
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(CostControlCommittedCost));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            hourCommittedCostButton.visible(false);
            expensesCommittedCostButton.visible(false);
            itemCommittedCostButton.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        switch (showBy.selection())
        {
            case ProjRowDisplayType::CostTemplate :
                costTemplate.visible(true);
                costTemplate.allowEdit(true);
                break;

            default:
                costTemplate.visible(false);
                costTemplate.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateButton</Name>
				<Source><![CDATA[
    void updateButton()
    {
        element.projCostControl();

        tmpProjCostControl.setTmpData(projCostControl.tmpProjCostControl());

        if (projCostControl.parmNumberOfRecords())
        {
            ctrlCommittedCost.enabled(true);
            ctrlTrans.enabled(true);
            if (projCostControl.parmProjCostControlMethod()==ProjCostControlMethod::TotalBudget
            &&  totalModelId.text())
            {
                ctrlForecastTotal.enabled(true);
                ctrlForecastRemaining.enabled(false);
            }
            else if (projCostControl.parmProjCostControlMethod()==ProjCostControlMethod::RemainingBudget
            &&       remainingModelId.text())
            {
                ctrlForecastRemaining.enabled(true);
                ctrlForecastTotal.enabled(false);
            }

            if (originalModelId.text())
            {
                ctrlForecastOriginal.enabled(true);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpProjCostControl</Name>
				<Methods>
					<Method>
						<Name>displayOption</Name>
						<Source><![CDATA[
        public void displayOption(Common _tmpProjCostControl, FormRowDisplayOption _options)
        {
            TmpProjCostControl prodControl = _tmpProjCostControl;
            if (prodControl.LineNum <= 2)
            {
                _options.backColor(qtyColor);
            }

            if (prodControl.TotalLine == NoYes::Yes)
            {
                _options.backColor(totalColor);
            }

            super(_tmpProjCostControl, _options);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromCustTable</Name>
						<Source><![CDATA[
        void linkFromCustTable()
        {
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true,true);
                this.timeMaterial(true,true);
                this.internalCost(true,true);
                this.investment(true,true);
                this.timeProject(true,true);
            }

            this.hour(true,true);
            this.expenses(true,true);
            this.item(true,true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjSorting</Name>
						<Source><![CDATA[
        void linkFromProjSorting()
        {
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true,true);
                this.timeMaterial(true,true);
                this.internalCost(true,true);
                this.investment(true,true);
                this.timeProject(true,true);
            }

            this.hour(true,true);
            this.expenses(true,true);
            this.item(true,true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjGroup</Name>
						<Source><![CDATA[
        void linkFromProjGroup(ProjGroup    _projGroup)
        {
            switch (_projGroup.ProjType)
            {
                case ProjType::TimeMaterial:
                    timeMaterial.value(true);
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;

                case ProjType::FixedPrice:
                    fixedPrice.value(true);
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;

                case ProjType::Investment:
                    investment.value(true);
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;

                case ProjType::Cost:
                    internalCost.value(true);
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;

                case ProjType::Internal:
                    internalCost.value(true);
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;

                case ProjType::Time:
                    timeProject.value(true);
                    this.hour(true,false);
                    break;

                case ProjType::None:
                    this.hour(true,true);
                    this.expenses(true,true);
                    this.item(true,true);
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjWIPTable</Name>
						<Source><![CDATA[
        void linkFromProjWIPTable(ProjWIPTable  _projWIPTable)
        {
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (_projWIPTable.projType() == ProjType::FixedPrice)
                {
                    this.fixedPrice(true,false);
                }
                else if (_projWIPTable.projType() == ProjType::Investment)
                {
                    this.investment(true,false);
                }
            }

            this.hour(true,true);
            this.expenses(true,true);
            this.item(true,true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjCateogryGroup</Name>
						<Source><![CDATA[
        void linkFromProjCateogryGroup(ProjCategoryGroup    _projCategoryGroup)
        {
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {                        
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
                this.timeProject(false,false);
            }

            hourButton.enabled(false);
            expensesButton.enabled(false);
            itemButton.enabled(false);
            hourForecastOriginalButton.enabled(false);
            hourForecastTotalButton.enabled(false);
            hourForecastRemainingButton.enabled(false);
            expensesForecastOriginalButton.enabled(false);
            expensesForecastTotalButton.enabled(false);
            expensesForecastRemainingButton.enabled(false);
            itemForecastOriginalButton.enabled(false);
            itemForecastTotalButton.enabled(false);
            itemForecastRemainingButton.enabled(false);
            hourCommittedCostButton.enabled(false);
            itemCommittedCostButton.enabled(false);

            switch (_projCategoryGroup.CategoryType)
            {
                case ProjCategoryType::Hour:
                    this.hour(true,true);
                    if (!element.enableProjMultipleContractLinesForProjectFeature)
                    {
                        this.timeProject(true,true);
                    }
                    hourButton.enabled(true);
                    hourForecastOriginalButton.enabled(true);
                    hourForecastTotalButton.enabled(true);
                    hourForecastRemainingButton.enabled(true);
                    hourCommittedCostButton.enabled(true);
                    break;

                case ProjCategoryType::Cost:
                    this.expenses(true,true);
                    expensesButton.enabled(true);
                    expensesForecastOriginalButton.enabled(true);
                    expensesForecastTotalButton.enabled(true);
                    expensesForecastRemainingButton.enabled(true);
                    break;

                case ProjCategoryType::Item:
                    this.item(true,true);
                    itemButton.enabled(true);
                    itemForecastOriginalButton.enabled(true);
                    itemForecastTotalButton.enabled(true);
                    itemForecastRemainingButton.enabled(true);
                    itemCommittedCostButton.enabled(true);
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjCategory</Name>
						<Source><![CDATA[
        void linkFromProjCategory(ProjCategory _projCategory)
        {
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
                this.timeProject(false,false);
            }

            hourButton.enabled(false);
            expensesButton.enabled(false);
            itemButton.enabled(false);
            hourForecastOriginalButton.enabled(false);
            hourForecastTotalButton.enabled(false);
            hourForecastRemainingButton.enabled(false);
            expensesForecastOriginalButton.enabled(false);
            expensesForecastTotalButton.enabled(false);
            expensesForecastRemainingButton.enabled(false);
            itemForecastOriginalButton.enabled(false);
            itemForecastTotalButton.enabled(false);
            itemForecastRemainingButton.enabled(false);
            hourCommittedCostButton.enabled(false);
            itemCommittedCostButton.enabled(false);

            switch (_projCategory.CategoryType)
            {
                case ProjCategoryType::Revenue:
                    if (!element.enableProjMultipleContractLinesForProjectFeature)
                    {
                        this.timeMaterial(true,false);
                        this.internalCost(false,false);
                        this.investment(false,false);

                        if (_projCategory.SetupEstimate)
                        {
                            this.fixedPrice(true,false);
                        }
                        else
                        {
                            this.fixedPrice(false,false);
                        }
                    }
                    break;

                case ProjCategoryType::Hour:
                    this.hour(true,true);
                    
                    if (!element.enableProjMultipleContractLinesForProjectFeature)
                    {
                        this.timeProject(true,true);
                    }
                    hourButton.enabled(true);
                    hourForecastOriginalButton.enabled(true);
                    hourForecastTotalButton.enabled(true);
                    hourForecastRemainingButton.enabled(true);
                    hourCommittedCostButton.enabled(true);
                    break;

                case ProjCategoryType::Cost:
                    this.expenses(true,true);
                    expensesButton.enabled(true);
                    expensesForecastOriginalButton.enabled(true);
                    expensesForecastTotalButton.enabled(true);
                    expensesForecastRemainingButton.enabled(true);
                    break;

                case ProjCategoryType::Item:
                    this.item(true,true);
                    itemButton.enabled(true);
                    itemForecastOriginalButton.enabled(true);
                    itemForecastTotalButton.enabled(true);
                    itemForecastRemainingButton.enabled(true);
                    itemCommittedCostButton.enabled(true);
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromProjTable</Name>
						<Source><![CDATA[
        void linkFromProjTable(ProjTable _projTable)
        {
            this.fixedPrice(false,false);
            this.timeMaterial(false,false);
            this.investment(false,false);
            this.internalCost(false,false);
            this.timeProject(false,false);

            this.hour(false,false);
            this.expenses(false,false);
            this.item(false,false);

            if (element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.hour(true);
                this.expenses(true);
                this.item(true);
            }
            else
            {
                boolean showChild;
                if (element.args().dataset() != tableNum(ProjGrantView))
                {
                    showChild = includeSubprojects.value();
                }
                
                if (showChild)
                {
                    ProjId projIdFilter = _projTable.ProjId + '*';
                    ProjTable projTableCheck;
            
                    select firstonly projTableCheck
                       where projTableCheck.ProjId like projIdFilter
                          && projTableCheck.Type    == ProjType::TimeMaterial;

                    if (projTableCheck)
                    {
                        this.timeMaterial(true);

                        this.hour(true);
                        this.expenses(true);
                        this.item(true);
                    }

                    select firstonly projTableCheck
                       where projTableCheck.ProjId like projIdFilter
                          && projTableCheck.Type    == ProjType::FixedPrice;

                    if (projTableCheck)
                    {
                        this.fixedPrice(true);

                        this.hour(true);
                        this.expenses(true);
                        this.item(true);
                    }

                    select firstonly projTableCheck
                       where projTableCheck.ProjId like projIdFilter
                          && projTableCheck.Type    == ProjType::Investment;

                    if (projTableCheck)
                    {
                        this.investment(true);

                        this.hour(true);
                        this.expenses(true);
                        this.item(true);
                    }

                    select firstonly projTableCheck
                       where  projTableCheck.ProjId like projIdFilter
                          && (projTableCheck.Type    == ProjType::Internal
                          ||  projTableCheck.Type    == ProjType::Cost);

                    if (projTableCheck)
                    {
                        this.internalCost(true);

                        this.hour(true);
                        this.expenses(true);
                        this.item(true);
                    }

                    select firstonly projTableCheck
                       where projTableCheck.ProjId like projIdFilter
                          && projTableCheck.Type    == ProjType::Time;

                    if (projTableCheck)
                    {
                        this.timeProject(true);
                        this.hour(true);
                    }
                }
                else
                {
                    switch (_projTable.Type)
                    {
                        case ProjType::TimeMaterial:
                            this.timeMaterial(true,false);
                            this.hour(true);
                            this.expenses(true);
                            this.item(true);
                            break;

                        case ProjType::FixedPrice:
                            this.fixedPrice(true,false);
                            this.hour(true);
                            this.expenses(true);
                            this.item(true);
                            break;

                        case ProjType::Investment:
                            this.investment(true,false);
                            this.hour(true);
                            this.expenses(true);
                            this.item(true);
                            break;

                        case ProjType::Cost:
                            this.internalCost(true,false);
                            this.hour(true);
                            this.expenses(true);
                            this.item(true);
                            break;

                        case ProjType::Internal:
                            this.internalCost(true,false);
                            this.hour(true);
                            this.expenses(true);
                            this.item(true);
                            break;

                        case ProjType::Time:
                            this.timeProject(true,false);
                            this.hour(true);
                            break;
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromInventTable</Name>
						<Source><![CDATA[
        void linkFromInventTable()
        {
            hourButton.enabled(false);
            expensesButton.enabled(false);
            hourForecastOriginalButton.enabled(false);
            hourForecastTotalButton.enabled(false);
            expensesForecastOriginalButton.enabled(false);
            expensesForecastTotalButton.enabled(false);

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
            }

            this.hour(false,false);
            this.expenses(false,false);
            this.item(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            HcmWorker               hcmWorker;
            ResourceView            resource;
            ResourceCategoryView    resourceCategory;
            InventTable             inventTable;
            ProjCategory            projCategory;
            ProjCategoryGroup       projCategoryGroup;
            ProjWIPTable            projWIPTable;
            ProjSorting             projSorting;
            ProjGroup               projGroup;
            ProjInvoiceTable        projInvoiceTable;
            CustTable               custTable;
            ProjGrantView           projGrantView;
            ProjGrant               projGrant;
            ResResourcesListView    resourceListView;

            this.fixedPrice(false,false);
            this.timeMaterial(false,false);
            this.internalCost(false,false);
            this.investment(false,false);
            this.timeProject(false,false);

            if (element.enableProjMultipleContractLinesForProjectFeature)
            {
                FixedPrice.visible(false);
                TimeMaterial.visible(false);
                InternalCost.visible(false);
                Investment.visible(false);
                TimeProject.visible(false);
            }

            this.hour(false,false);
            this.expenses(false,false);
            this.item(false,false);

            switch (element.args().dataset())
            {
                case(tableNum(HcmWorker)):
                    hcmWorker           = element.args().record();
                    resourceRecId       = ResourceFacade::findByWorker(hcmWorker.RecId);
                    this.linkFromResource();
                    break;

                case(tableNum(ResourceView)):
                    resource            = element.args().record();
                    resourceRecId       = resource.RecId;
                    this.linkFromResource();
                    break;

                case(tableNum(ResResourcesListView)):
                    resourceListView   = element.args().record();
                    resourceRecId      = resourceListView.Resource;
                    this.linkFromResource();
                    break;

                case(tableNum(ResourceCategoryView)):
                    resourceCategory            = element.args().record();
                    resourceCategoryRecId       = resourceCategory.RecId;
                    this.linkFromResourceCategory();
                    break;

                case(tableNum(InventTable)):
                    inventTable         = element.args().record();
                    itemId              = inventTable.ItemId;
                    this.linkFromInventTable();
                    break;

                case(tableNum(ProjCategory)):
                    projCategory        = element.args().record();
                    projCategoryId      = projCategory.CategoryId;
                    this.linkFromProjCategory(projCategory);
                    break;

                case(tableNum(ProjCategoryGroup)):
                    projCategoryGroup   = element.args().record();
                    projCategoryGroupId = projCategoryGroup.CategoryGroupId;
                    this.linkFromProjCateogryGroup(projCategoryGroup);
                    break;

                case(tableNum(ProjTable)):
                    projTable           = element.args().record();
                    projId              = projTable.ProjId;
                    this.linkFromProjTable(projTable);
                    break;

                case(tableNum(ProjGrantView)):
                    projGrantView           = element.args().record();
                    projTable               = ProjTable::find(projGrantView.ProjId);
                    projId                  = projTable.ProjId;
                    this.linkFromProjTable(projTable);
                    break;

                case(tableNum(ProjGrant)):
                    projGrant               = element.args().record();
                    select firstonly ProjId from projGrantView
                    where projGrantView.GrantId == projGrant.GrantId;
                    projTable               = ProjTable::find(projGrantView.ProjId);
                    projId                  = projTable.ProjId;
                    this.linkFromProjTable(projTable);
                    break;

                case(tableNum(ProjWIPTable)):
                    projWIPTable        = element.args().record();
                    projWipId           = projWIPTable.ProjId;
                    this.linkFromProjWIPTable(projWIPTable);
                    break;

                case(tableNum(ProjSorting)):
                    projSorting         = element.args().record();
                    sortCode            = projSorting.SortCode;
                    sortingId           = projSorting.SortingId;
                    this.linkFromProjSorting();
                    break;

                case(tableNum(ProjGroup)):
                    projGroup           = element.args().record();
                    projGroupId         = projGroup.ProjGroupId;
                    this.linkFromProjGroup(projGroup);
                    break;

                case(tableNum(ProjInvoiceTable)):
                    projInvoiceTable    = element.args().record();
                    projInvoiceProjId   = projInvoiceTable.ProjInvoiceProjId;
                    this.linkFromInvoiceProject(projInvoiceTable);
                    break;

                case(tableNum(CustTable)):
                    custTable           = element.args().record();
                    custAccount         = custTable.AccountNum;
                    this.linkFromCustTable();
                    break;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromInvoiceProject</Name>
						<Source><![CDATA[
        void linkFromInvoiceProject(ProjInvoiceTable _projInvoiceTable)
        {
            projInvoiceProjId   = _projInvoiceTable.ProjInvoiceProjId;

            if (element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.hour(true);
                this.expenses(true);
                this.item(true);
            }
            else
            {
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
                this.timeProject(true);

                ProjTable projTableCheck;
                
                select firstonly projTableCheck
                   where projTableCheck.ProjInvoiceProjId == projInvoiceProjId
                      && projTableCheck.Type    == ProjType::TimeMaterial;

                if (projTableCheck)
                {
                    this.hour(true);
                    this.expenses(true);
                    this.item(true);
                }

                select firstonly projTableCheck
                   where projTableCheck.ProjInvoiceProjId == projInvoiceProjId
                      && projTableCheck.Type              == ProjType::FixedPrice;

                if (projTableCheck)
                {
                    this.hour(true);
                    this.expenses(true);
                    this.item(true);
                }

                select firstonly projTableCheck
                   where projTableCheck.ProjInvoiceProjId == projInvoiceProjId
                      && projTableCheck.Type              == ProjType::Investment;

                if (projTableCheck)
                {
                    this.hour(true);
                    this.expenses(true);
                    this.item(true);
                }

                select firstonly projTableCheck
                   where projTableCheck.ProjInvoiceProjId == projInvoiceProjId
                      && (projTableCheck.Type             == ProjType::Internal
                      ||  projTableCheck.Type             == ProjType::Cost);

                if (projTableCheck)
                {
                    this.hour(true);
                    this.expenses(true);
                    this.item(true);
                }

                select firstonly projTableCheck
                   where projTableCheck.ProjInvoiceProjId == projInvoiceProjId
                      && projTableCheck.Type              == ProjType::Time;

                if (projTableCheck)
                {
                    this.timeProject(true);
                    this.hour(true);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>timeProject</Name>
						<Source><![CDATA[
        void timeProject(boolean value, boolean enabled = true)
        {
            timeProject.value(value);
            timeProject.enabled(enabled);
        }

]]></Source>
					</Method>
					<Method>
						<Name>fixedPrice</Name>
						<Source><![CDATA[
        void fixedPrice(boolean value, boolean enabled = true)
        {
            fixedPrice.value(value);
            fixedPrice.enabled(enabled);
        }

]]></Source>
					</Method>
					<Method>
						<Name>internalCost</Name>
						<Source><![CDATA[
        void internalCost(boolean value, boolean enabled = true)
        {
            internalCost.value(value);
            internalCost.enabled(enabled);
        }

]]></Source>
					</Method>
					<Method>
						<Name>hour</Name>
						<Source><![CDATA[
        void hour(boolean value, boolean enabled = true)
        {
            hour.enabled(enabled);
            hour.value(value);
        }

]]></Source>
					</Method>
					<Method>
						<Name>expenses</Name>
						<Source><![CDATA[
        void expenses(boolean value, boolean enabled = true)
        {
            expenses.enabled(enabled);
            expenses.value(value);
        }

]]></Source>
					</Method>
					<Method>
						<Name>item</Name>
						<Source><![CDATA[
        void item(boolean value, boolean enabled = true)
        {
            item.enabled(enabled);
            item.value(value);
        }

]]></Source>
					</Method>
					<Method>
						<Name>investment</Name>
						<Source><![CDATA[
        void investment(boolean value, boolean enabled = true)
        {
            investment.value(value);
            investment.enabled(enabled);
        }

]]></Source>
					</Method>
					<Method>
						<Name>timeMaterial</Name>
						<Source><![CDATA[
        void timeMaterial(boolean value, boolean enabled = true)
        {
            timeMaterial.value(value);
            timeMaterial.enabled(enabled);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromResource</Name>
						<Source><![CDATA[
        void linkFromResource()
        {
            itemButton.enabled(false);
            itemForecastOriginalButton.enabled(false);
            itemForecastTotalButton.enabled(false);

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
                this.timeProject(true);
            }

            this.hour(true);
            this.expenses(true);
            this.item(false,false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkFromResourceCategory</Name>
						<Source><![CDATA[
        void linkFromResourceCategory()
        {
            itemButton.enabled(false);
            itemForecastOriginalButton.enabled(false);
            itemForecastTotalButton.enabled(false);

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                this.fixedPrice(true);
                this.timeMaterial(true);
                this.investment(true);
                this.internalCost(true);
                this.timeProject(true);
            }

            this.hour(true);
            this.expenses(false,false);
            this.item(false,false);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Calculate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            callCalculateMethod = true;

            element.updateButton();

            tmpProjCostControl.setTmpData(projCostControl.tmpProjCostControl());

            tmpProjCostControl_ds.executeQuery();

            parameterTab.collapse();
            general.expand();
            deviationTab.expand();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourCommittedCostButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projTransType       = ProjTransType::Hour;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(CostControlCommittedCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesCommittedCostButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projTransType       = ProjTransType::Cost;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(CostControlCommittedCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemCommittedCostButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projTransType       = ProjTransType::Item;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(CostControlCommittedCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourForecastOriginalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Original;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesForecastOriginalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Original;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemForecastOriginalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Original;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(ForecastSalesProj), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourForecastRemainingButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Remaining;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesForecastRemainingButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Remaining;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemForecastRemainingButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Remaining;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(ForecastSalesProj), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourForecastTotalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Total;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesForecastTotalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Total;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projForecastCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemForecastTotalButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;
            projForecastModel   = ProjForecastModelType::Total;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(ForecastSalesProj), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projTransEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projTransCost), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            callCalculateMethod = false;

            args = new Args();
            args.record(tmpProjCostControl);
            args.parmObject(element.projCostControl());

            new MenuFunction(menuitemDisplayStr(projTransItem), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeMaterial</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FixedPrice</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Investment</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InternalCost</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeProject</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Hour</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();

            if (hour.value())
            {
                hourButton.enabled(true);
                hourForecastOriginalButton.enabled(true);
                hourForecastTotalButton.enabled(true);
                hourForecastRemainingButton.enabled(true);
                hourCommittedCostButton.enabled(true);
            }
            else
            {
                hourButton.enabled(false);
                hourForecastOriginalButton.enabled(false);
                hourForecastTotalButton.enabled(false);
                hourForecastRemainingButton.enabled(false);
                hourCommittedCostButton.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Expenses</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();

            if (expenses.value())
            {
                expensesButton.enabled(true);
                expensesForecastOriginalButton.enabled(true);
                expensesForecastTotalButton.enabled(true);
                expensesForecastRemainingButton.enabled(true);
                expensesCommittedCostButton.enabled(true);
            }
            else
            {
                expensesButton.enabled(false);
                expensesForecastOriginalButton.enabled(false);
                expensesForecastTotalButton.enabled(false);
                expensesForecastRemainingButton.enabled(false);
                expensesCommittedCostButton.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Item</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearTmpProjCostControl();
            if (item.value())
            {
                itemButton.enabled(true);
                itemForecastOriginalButton.enabled(true);
                itemForecastTotalButton.enabled(true);
                itemForecastRemainingButton.enabled(true);
                itemCommittedCostButton.enabled(true);
            }
            else
            {
                itemButton.enabled(false);
                itemForecastOriginalButton.enabled(false);
                itemForecastTotalButton.enabled(false);
                itemForecastRemainingButton.enabled(false);
                itemCommittedCostButton.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjFromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerFromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IncludeSubprojects</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.clearTmpProjCostControl();

            if (projTable)
            {
                tmpProjCostControl_ds.linkFromProjTable(projTable);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemainingModelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TotalModelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OriginalModelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowBy</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (projCostControl && this.selection() != projCostControl.parmShowby())
            {
                element.clearTmpProjCostControl();
                element.setVisible();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CostTemplate</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.clearTmpProjCostControl();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpProjCostControl</Name>
			<Table>TmpProjCostControl</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommittedCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationCost_Remaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationCost_Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationPrice_Remaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationPrice_Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationQty_Remaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationQty_Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalBudgetCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainingBudget_Remaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainingCost_Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCost_Remaining</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCost_Total</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalLine</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS103369</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Left xmlns="">44</Left>
		<LeftMode xmlns="">Manual</LeftMode>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Top xmlns="">44</Top>
		<TopMode xmlns="">Manual</TopMode>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>626349396</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>FormButtonGroupControl1</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Calculate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS1085</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CtrlCommittedCost</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HourCommittedCostButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS5269</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpensesCommittedCostButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4882014</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ItemCommittedCostButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS14428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS73512</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CtrlForecastOriginal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HourForecastOriginalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS5269</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpensesForecastOriginalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4882014</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ItemForecastOriginalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS14428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS104040</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CtrlForecastRemaining</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1193046470</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HourForecastRemainingButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS5269</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpensesForecastRemainingButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4882014</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ItemForecastRemainingButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS14428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS104039</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CtrlForecastTotal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HourForecastTotalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS5269</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpensesForecastTotalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4882014</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ItemForecastTotalButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS14428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS104599</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CtrlTrans</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HourButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS5269</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpensesButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4882014</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ItemButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS14428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS1084</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1879048190</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ParameterTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjTypes</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TimeMaterial</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS53874</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>FixedPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS3237</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Investment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS78353</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InternalCost</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS78366</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TimeProject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS25816</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS78367</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TransTypes</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Hour</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS5269</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Expenses</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYP4882014</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Item</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS7407</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS78373</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectDates</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjFromDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransDate</ExtendedDataType>
										<Label>@SYS24050</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjToDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransDate</ExtendedDataType>
										<Label>@SYS80934</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS54242</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LedgerDates</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerFromDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransDate</ExtendedDataType>
										<Label>@SYS24050</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerToDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransDate</ExtendedDataType>
										<Label>@SYS80934</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS23410</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Data</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1503238551</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IncludeSubprojects</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS321414</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS7403</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForecastModels</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RemainingModelId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ProjForecastModelId</ExtendedDataType>
										<Label>@SYS78228</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TotalModelId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ProjForecastModelId</ExtendedDataType>
										<Label>@SYS58659</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OriginalModelId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ProjForecastModelId</ExtendedDataType>
										<Label>@SYS5301</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS77751</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Rows</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ShowBy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>ProjRowDisplayType</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostTemplate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ProjControlId</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS59505</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@Proj:CalculateParameters</Caption>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridGeneral</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostLine</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostLine</DataField>
										<DataSource>TmpProjCostControl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalBudgetCost</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105903</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ActualCost</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActualCost</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CommittedCost</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CommittedCost</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS73512</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingCost_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemainingCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS33271</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalCost_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS74805</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingBudget_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemainingBudget_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS107918</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalCost_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS74805</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TmpProjCostControl</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS2952</Caption>
						<DataSource>TmpProjCostControl</DataSource>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DeviationTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridDeviation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostLine1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostLine</DataField>
										<DataSource>TmpProjCostControl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OriginalBudgetedCost</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalBudgetCost</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS103933</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalCost1_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS74805</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalBudgetCost1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105903</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Deviation_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationCost_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS78417</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>QtyDeviation_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:ProjCostControl_QtyDeviation_Total</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationQty_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105905</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PriceDeviation_Total</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:ProjCostControl_PriceDeviation_Total</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationPrice_Total</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105904</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalCost1_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCost_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS74805</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Deviation_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1651910490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationCost_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS78417</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>QtyDeviation_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:ProjCostControl_QtyDeviation_Remaining</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationQty_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105905</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PriceDeviation_Remaining</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:ProjCostControl_PriceDeviation_Remaining</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeviationPrice_Remaining</DataField>
										<DataSource>TmpProjCostControl</DataSource>
										<Label>@SYS105904</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TmpProjCostControl</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS78417</Caption>
						<DataSource>TmpProjCostControl</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>