<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustVendPaymProposalBatchProgress</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustVendPaymProposalBatchProgress extends FormRun
{
    CustVendPaymProposalBatchProgressController controller;
    
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args() || !element.args().caller())
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        controller = element.args().caller();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableControls</Name>
				<Source><![CDATA[
    private void enableControls()
    {
        if (batchJob.Status == BatchStatus::Error)
        {
            RestartBatchJobButton.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveToNextState</Name>
				<Source><![CDATA[
    private void moveToNextState()
    {
        if (batchJob.Status == BatchStatus::Finished
            && element.isCurrentStateStarted() 
            && element.isCurrentStateEqualToTargetState())
        {
            switch  (custVendPaymProposalBatchProcess.TargetState)
            {
                case CustVendPaymProposalBatchProcessState::CreatedProposalLines:

                    CustVendPaymProposal paymProposal = CustVendPaymProposal::initializeFromBatchProcessTable(
                        custVendPaymProposalBatchProcess.JournalId);

                    CustVendPaymProposalEditForm paymProposalEditForm = CustVendPaymProposalEditForm::newPaymProposal(
                        paymProposal,
                        false,
                        paymProposal.ledgerJournalId(),
                        paymProposal.ledgerJournalType(),
                        paymProposal.moduleCustVend());

                    paymProposalEditForm.parmTransferInBatch(true);

                    paymProposalEditForm.run();

                    if (!CustVendPaymProposal::doesJournalContainAnyPaymentProposalLines(paymProposal.ledgerJournalId()))
                    {
                        element.autoClose();
                    }
                    break;

                case CustVendPaymProposalBatchProcessState::CreatedPaymentLines:
                    element.autoClose();
                    break;

                default:
                    break;

            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>autoClose</Name>
				<Source><![CDATA[
    private void autoClose()
    {
        if (element.canClose())
        {
            element.close();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose = super();

        if (canClose && (element.isBatchInErrorOrCancelledState()
            || (element.isCurrentStateStarted() && element.isCurrentStateEqualToTargetState())))
        {
            element.refreshCallingForm();
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCallingForm</Name>
				<Source><![CDATA[
    private void refreshCallingForm()
    {
        if (controller.parmCallingForm())
        {
            controller.parmCallingForm().refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchInErrorOrCancelledState</Name>
				<Source><![CDATA[
    private boolean isBatchInErrorOrCancelledState()
    {
        boolean isBatchInErrorOrCancelledState;
        if (BatchJob.RecId > 0 && BatchJob.Status == BatchStatus::Error || BatchJob.Status == BatchStatus::Canceled)
        {
            isBatchInErrorOrCancelledState = true;
        }
        return isBatchInErrorOrCancelledState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCurrentStateStarted</Name>
				<Source><![CDATA[
    private boolean isCurrentStateStarted()
    {
        boolean isCurrentStateStarted;
        if (custVendPaymProposalBatchProcess.State != CustVendPaymProposalBatchProcessState::None)
        {
            isCurrentStateStarted = true;
        }
        return isCurrentStateStarted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCurrentStateEqualToTargetState</Name>
				<Source><![CDATA[
    private boolean isCurrentStateEqualToTargetState()
    {
        boolean isCurrentStateEqualToTargetState;
        if (custVendPaymProposalBatchProcess.State == custVendPaymProposalBatchProcess.TargetState)
        {
            isCurrentStateEqualToTargetState = true;
        }
        return isCurrentStateEqualToTargetState;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustVendPaymProposalBatchProcess</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds = CustVendPaymProposalBatchProcess_ds.query().dataSourceTable(tableNum(CustVendPaymProposalBatchProcess));
            qbds.clearRange(fieldNum(CustVendPaymProposalBatchProcess, JournalId));
            qbds.addRange(fieldNum(CustVendPaymProposalBatchProcess, JournalId)).value(controller.parmLedgerJournalId());

            super();

        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>BatchJob</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (custVendPaymProposalBatchProcess.BatchJobId != 0 )
            {
                QueryBuildDataSource qbds = BatchJob_ds.query().dataSourceTable(tableNum(BatchJob));
                qbds.clearRange(fieldNum(BatchJob, RecId));
                qbds.addRange(fieldNum(BatchJob, RecId)).value(queryValue(custVendPaymProposalBatchProcess.BatchJobId));

                super();

                element.enableControls();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>Batch</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (custVendPaymProposalBatchProcess.BatchJobId != 0 )
            {
                QueryBuildDataSource qbds = Batch_ds.query().dataSourceTable(tableNum(Batch));
                qbds.clearRange(fieldNum(Batch, BatchJobId));
                qbds.addRange(fieldNum(Batch, BatchJobId)).value(queryValue(custVendPaymProposalBatchProcess.BatchJobId));

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RefreshButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            custVendPaymProposalBatchProcess_ds.executeQuery();
            batchJob_ds.executeQuery();
            batch_ds.executeQuery();
            element.enableControls();

            element.moveToNextState();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RestartBatchJobButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Batch errorBatch;
            select count(RecId) from errorBatch
                where errorBatch.BatchJobId == batchJob.RecId
                    && errorBatch.Status == BatchStatus::Error;
                            
            if (errorBatch.RecId > 0 )
            {
                ttsbegin;

                BatchJob errorBatchJob;
                select firstonly forupdate errorBatchJob
                        where errorBatchJob.RecId == batchJob.RecId;

                errorBatchJob.Status = BatchStatus::Waiting;
                errorBatchJob.doUpdate();

                new SkipAOSValidationPermission().assert();
                batch.skipAosValidation(true);

                update_recordset errorBatch
                        setting Status = BatchStatus::Waiting
                        where errorBatch.BatchJobId == batchJob.RecId
                            && (errorBatch.Status == BatchStatus::NotRun || errorBatch.Status == BatchStatus::Error);

                CodeAccessPermission::revertAssert();

                ttscommit;
            }

            RefreshButton.clicked();
            RestartBatchJobButton.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustVendPaymProposalBatchProcess</Name>
			<Table>CustVendPaymProposalBatchProcess</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CanUseCustVendPaymProposalLineSetBasedInsert</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CanUseSpecTransSetBasedInsert</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangePaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatePaymPerInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultOffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeInvoicesFromOtherCompanies</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LimitPaymCreationToLedgerCompanyOnly</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleCustVend</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BatchJob</Name>
			<Table>BatchJob</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CanceledBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Caption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Critical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataPartition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BatchDataArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BatchJournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BatchRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Finishing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Managed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MonitoringCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStartDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>recurrenceData</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuntimeJob</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Batch</Name>
			<Table>Batch</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutomaticTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Caption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClassNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConstraintType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataPartition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BatchJournalLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IgnoreOnFail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Info</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Parameters</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrivateTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>retriesOnFailure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>retryCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunTimeTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionIdx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:PaymentProposalProgress</Caption>
		<DataSource xmlns="">CustVendPaymProposalBatchProcess</DataSource>
		<DefaultAction xmlns="">RefreshButton</DefaultAction>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RefreshButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@CashManagement:PaymentProposalRefresh</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RestartBatchJobButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@CashManagement:PaymentProposalRestartBatchJob</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ProcessStateGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>CurrentState</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>State</DataField>
						<DataSource>CustVendPaymProposalBatchProcess</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TargetState</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>TargetState</DataField>
						<DataSource>CustVendPaymProposalBatchProcess</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BatchJobCaption</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Caption</DataField>
						<DataSource>BatchJob</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>BatchJobStatus</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Status</DataField>
						<DataSource>BatchJob</DataSource>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@CashManagement:PaymentProposalProcessState</Caption>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverviewTab</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BatchTaskGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>BatchGrid</Name>
										<Type>Grid</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BatchCaption</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Caption</DataField>
												<DataSource>Batch</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>BatchStatus</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Status</DataField>
												<DataSource>Batch</DataSource>
												<Items />
											</AxFormControl>
										</Controls>
										<DataSource>Batch</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:PaymentProposalBatchTasks</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>