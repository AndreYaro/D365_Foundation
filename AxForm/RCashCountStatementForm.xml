<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RCashCountStatementForm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RCashCountStatementForm extends FormRun
{
    TmpRCashCountStatementTable tempTable;
    RCashTable rCashTableTemp;
    CompanyInfo companyInfo;

    [FormObservable]
    AmountMST totalPostedMST;
    [FormObservable]
    AmountMST totalCountedMST;

    boolean printName;

    protected const Version currentVersion_RCashCountStatementForm = 1;
    
}
]]></Source>
			</Method>
			<Method>
				<Name>checkDuplication</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the combination of statement type and currency is duplicate.
    /// </summary>
    /// <param name = "_silent">
    /// Whether to check duplicate.
    /// </param>
    /// <returns>
    /// Returns false if duplicate is found.
    /// </returns>
    public boolean checkDuplication(boolean _silent = false)
    {
        boolean ok = true;

        if (countStatementTable.CashCountStatementType != RCashCountStatementType::Other)
        {
            select firstonly RecId from tempTable
                where tempTable.CashCountStatementType == countStatementTable.CashCountStatementType &&
                    tempTable.Currency == countStatementTable.Currency &&
                    tempTable.RecId != countStatementTable.RecId;

            if (tempTable)
            {
                ok = _silent ? false : checkFailed(strFmt("@GLS113054", countStatementTable.CashCountStatementType, countStatementTable.Currency));
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        str currencies;

        while select tempTable
            group by Currency
            where !tempTable.HasExchAdj && tempTable.Currency
        {
            currencies += (currencies ? ', ' : '') + tempTable.Currency;
        }

        if (!currencies ||
            Box::okCancel(strFmt("@GLS113063", cashAccount.text(), toDateValue.dateValue(), currencies), DialogButton::Ok) == DialogButton::Ok)
        {
            printName = printRCashName.value();

            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceRU00039, funcName());

            XMLExcelReport_RCashCountStmt_RU statementDetail = XMLExcelReport_RCashCountStmt_RU::construct();
            statementDetail.setValue(tempTable, cashAccount.text(), toDateValue.dateValue(), documentNum.value(), printName);
            statementDetail.runOperation();

            if (outputExtention.checked())
            {
                XMLExcelReport_RCashCountStmtExt_RU statementExtention = XMLExcelReport_RCashCountStmtExt_RU::construct();
                statementExtention.setValue(tempTable, toDateValue.dateValue(), documentNum.value());
                statementExtention.runOperation();
            }

            super();

            xSysLastValue::saveLast(this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillCashCountStatementTable</Name>
				<Source><![CDATA[
    private void fillCashCountStatementTable(TransDate _todate, AccountNum _cashAccount)
    {
        RCashBalanceCur balanceCur;
        RCashBalances rCashBalances;

        ttsbegin;

        delete_from tempTable;

        balanceCur = new RCashBalanceCur(_todate);

        while select CurrencyCode from rCashBalances
            group by CurrencyCode
            where rCashBalances.AccountNum == _cashAccount &&
                rCashBalances.PeriodStart <= _todate
        {
            balanceCur.calc(_cashAccount, rCashBalances.CurrencyCode);

            tempTable.AccountNum = _cashAccount;
            tempTable.CashCountStatementType = RCashCountStatementType::Cash;
            tempTable.Currency = rCashBalances.CurrencyCode;
            tempTable.Text = element.generateText(tempTable.CashCountStatementType, tempTable.Currency);

            tempTable.PostedAmountMST = balanceCur.amountMST();
            tempTable.PostedAmountCur = balanceCur.amountCur();

            tempTable.ExchRate = ExchangeRateHelper::getExchangeRate1_Static(Ledger::current(), rCashBalances.CurrencyCode, _todate);

            tempTable.ExchAdj = balanceCur.amountExchAdjustment();
            tempTable.HasExchAdj = tempTable.ExchAdj || tempTable.Currency == Ledger::accountingCurrency(companyInfo.RecId);

            tempTable.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate Text.
    /// </summary>
    /// <param name = "_cashCountStatementType">
    /// Cash counting Statement type.
    /// </param>
    /// <param name = "_currencyCode">
    /// Currency code.
    /// </param>
    /// <returns>
    /// Return Text.
    /// </returns>
    public str generateText(RCashCountStatementType _cashCountStatementType, CurrencyCode _currencyCode)
    {
        str text;

        if (_cashCountStatementType != RCashCountStatementType::Other)
        {
            text = strFmt("@GLS106745", _cashCountStatementType);
            if (_currencyCode && _currencyCode != Ledger::accountingCurrency(companyInfo.RecId))
            {
                text = strFmt("@GLS110629", text, _currencyCode);
            }
        }

        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        xSysLastValue::getLast(this);

        super();

        companyInfo = CompanyInfo::find();

        cashAccount.text(RCashParameters::find().DefaultAccountNum);

        documentNum.value(1);

        toDateValue.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        printRCashName.value(printName);

        element.refreshData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        printName = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    public DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    public IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    public IdentifierName lastValueElementName()
    {
        return formStr(RCashCountStatementForm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    public UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    public UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [currentVersion_RCashCountStatementForm, printName];
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Getting data from temp table.
    /// </summary>
    public void refreshData()
    {
        select firstonly MultiCurrencyCode, CurrencyCode
            from rCashTableTemp
                where rCashTableTemp.AccountNum == cashAccount.text();

        differentCurrency.value(rCashTableTemp.MultiCurrencyCode);

        element.fillCashCountStatementTable(toDateValue.dateValue(), cashAccount.text());

        // Fill the data source.
        countStatementTable.clear();
        countStatementTable.setTmpData(tempTable);
        countStatementTable_ds.executeQuery();
        countStatementTable_ds.refresh();

        element.refreshTotals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the posted amount.
    /// </summary>
    /// <param name = "_includeNonSaved">
    /// Whether include not saved data.
    /// </param>
    void refreshTotals(boolean _includeNonSaved = false)
    {
        TmpRCashCountStatementTable orig;

        select sum(PostedAmountMST), sum(CountedAmountMST), sum(ExchAdj)
            from tempTable;

        totalPostedMST = tempTable.PostedAmountMST + tempTable.ExchAdj;
        totalCountedMST = tempTable.CountedAmountMST;

        if (_includeNonSaved)
        {
            orig = countStatementTable.orig();

            totalPostedMST += (countStatementTable.PostedAmountMST + countStatementTable.ExchAdj) -
                (orig.PostedAmountMST + orig.ExchAdj);
            totalCountedMST += (countStatementTable.CountedAmountMST) -
                (orig.CountedAmountMST);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalCountedMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display total counted amount.
    /// </summary>
    /// <returns>
    /// Return total counted amount.
    /// </returns>
    display AmountMST totalCountedMST()
    {
        return totalCountedMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalPostedMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display total posted amount.
    /// </summary>
    /// <returns>
    /// Return total posted amount.
    /// </returns>
    display AmountMST totalPostedMST()
    {
        return totalPostedMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        int version = RunBase::getVersion(packedClass);
        boolean ret;

        switch (version)
        {
            case currentVersion_RCashCountStatementForm:
                [version, printName] = packedClass;
                ret = true;
                break;
            default:
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        countStatementTable_DS.object(fieldNum(TmpRCashCountStatementTable, Text)).allowEdit(countStatementTable.CashCountStatementType == RCashCountStatementType::Other);
        countStatementTable_DS.allowDelete(! countStatementTable.PostedAmountCur);
        countStatementTable_DS.object(fieldNum(TmpRCashCountStatementTable, Currency)).allowEdit(differentCurrency.value() && !countStatementTable.PostedAmountCur);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CountStatementTable</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;

            ret = super();

            if (countStatementTable.PostedAmountCur)
            {
                return false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if (! cashAccount.text())
                return;

            super(_append);

            countStatementTable.AccountNum = cashAccount.text();
            countStatementTable.HasExchAdj = NoYes::Yes;

            countStatementTable.CashCountStatementType = RCashCountStatementType::Cash;
            countStatementTable.Currency = rCashTableTemp.CurrencyCode;
            countStatementTable.ExchRate = ExchangeRateHelper::getExchangeRate1_Static(Ledger::current(), countStatementTable.Currency, toDateValue.dateValue());

            if (element.checkDuplication(true))
            {
                countStatementTable.Text = element.generateText(countStatementTable.CashCountStatementType, countStatementTable.Currency);
            }
            else
            {
                // Enum RCashCountStatementType does not have 0 value
                const int RCashCountStatementType_Empty = 0;
                countStatementTable.CashCountStatementType = RCashCountStatementType_Empty;
                countStatementTable.Text = '';
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            element.refreshTotals();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return super() && element.checkDuplication();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            element.refreshTotals();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CashCountStatementType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (differentCurrency.value())
                {
                    countStatementTable.Text = element.generateText(countStatementTable.CashCountStatementType, countStatementTable.Currency);
                }
                else
                {
                    // Enum RCashCountStatementType does not have 0 value
                    const int RCashCountStatementType_Empty = 0;
                    countStatementTable.CashCountStatementType = RCashCountStatementType_Empty;
                    countStatementTable.Text = '';
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CountedAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                countStatementTable.CountedAmountMST = CurrencyExchangeHelper::amount(countStatementTable.CountedAmountCur * countStatementTable.ExchRate / 100);

                element.refreshTotals(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Currency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ExchangeRateHelper helper;

                super();

                if (element.checkDuplication())
                {
                    if (countStatementTable.CashCountStatementType != RCashCountStatementType::Other)
                    {
                        countStatementTable.Text = element.generateText(countStatementTable.CashCountStatementType, countStatementTable.Currency);
                    }
                    helper = ExchangeRateHelper::newExchangeDate(Ledger::current(), countStatementTable.Currency, toDateValue.dateValue());
                }

                countStatementTable.ExchRate = helper.getExchangeRate1();

                if (! countStatementTable.ExchRate)
                {
                    countStatementTable.Currency = '';
                }

                countStatementTable.CountedAmountMST = CurrencyExchangeHelper::amount(countStatementTable.CountedAmountCur * countStatementTable.ExchRate / 100);

                element.refreshTotals(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CashAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.refreshData();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDateValue</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.refreshData();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CashAccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CountStatementTable</Name>
			<Table>TmpRCashCountStatementTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashCountStatementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountedAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountedAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Text</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS113055</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopGroup</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>OnDate</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CashAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>RCashAccount</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>DocumentNum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@GLS113064</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ToDateValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS25005</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>DifferentCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS54167</Label>
							</AxFormControl>
						</Controls>
						<Caption>@GLS113056</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Totals</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalCountedMST</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>totalCountedMST</DataMethod>
								<Label>@GLS113065</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalPostedMST</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>totalPostedMST</DataMethod>
								<Label>@GLS113066</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS13865</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Print_Group</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PrintRCashName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@GLS116099</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>OutputExtention</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@GLS100696</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS26955</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ActionPane</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneTabControl">
								<Name>ActionPaneTab</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPaneTab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>NewDeleteGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>NewButton</Name>
												<ElementPosition>536870911</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<Command>New</Command>
												<NormalImage>New</NormalImage>
												<Primary>Yes</Primary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>DeleteButton</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<Command>DeleteRecord</Command>
												<NormalImage>Delete</NormalImage>
												<Primary>Yes</Primary>
												<SaveRecord>No</SaveRecord>
												<Text>@sys14425</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>CountStatementTable</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>StatementGrid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>CashAccountType</Name>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CashCountStatementType</DataField>
								<DataSource>CountStatementTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Text</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Text</DataField>
								<DataSource>CountStatementTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Currency</Name>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Currency</DataField>
								<DataSource>CountStatementTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CountedAmountCur</Name>
								<ElementPosition>894784850</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CountedAmountCur</DataField>
								<DataSource>CountStatementTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>HasExchAdj</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>HasExchAdj</DataField>
								<DataSource>CountStatementTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PostedAmountCur</Name>
								<ElementPosition>1252698790</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PostedAmountCur</DataField>
								<DataSource>CountStatementTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ExchangeRate</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655760</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>findExchangeRate</DataMethod>
								<DataSource>CountStatementTable</DataSource>
								<MinNoOfDecimals>4</MinNoOfDecimals>
								<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CountedAmount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CountedAmountMST</DataField>
								<DataSource>CountStatementTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PostedAmount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1789569700</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PostedAmountMST</DataField>
								<DataSource>CountStatementTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ExchAdj</Name>
								<ElementPosition>1968526670</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ExchAdj</DataField>
								<DataSource>CountStatementTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataSource>CountStatementTable</DataSource>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>