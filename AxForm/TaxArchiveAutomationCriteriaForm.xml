<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxArchiveAutomationCriteriaForm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/// <summary>
/// Tax archive automation criteria form. 
/// </summary>
[Form]
public class TaxArchiveAutomationCriteriaForm extends FormRun
    implements ProcessScheduleParametersIWrite, ProcessScheduleParametersIInitialize, ProcessScheduleParametersIValidate,
    TaxArchiveAutomationCriteriaIForm, ArchiveServiceIArchiveJobParameterForm
{
    private ProcessScheduleSchedulingContract processScheduleSchedulingContract;
    private TaxArchiveAutomationCriteriaFormState formState;
    private TaxArchiveAutomationCriteriaFormInteraction formInteraction;
    private boolean isInitialized;

}
]]></Source>
			</Method>
			<Method>
				<Name>createScheduleSeries</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void createScheduleSeries(ProcessScheduleSchedulingContract _schedulingParameters)
    {
        formInteraction.createScheduleSeries(_schedulingParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createScheduledOccurrence</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void createScheduledOccurrence(ProcessScheduleSchedulingContract _schedulingParameters)
    {
        formInteraction.createScheduledOccurrence(_schedulingParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateScheduleSeries</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void updateScheduleSeries(ProcessScheduleSchedulingContract _schedulingParameters)
    {
        formInteraction.updateScheduleSeries();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateScheduledOccurrence</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void updateScheduledOccurrence(ProcessScheduleSchedulingContract _schedulingParameters)
    {
        formInteraction.updateScheduledOccurrence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean validate()
    {
        return formInteraction.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSchedulingContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void setSchedulingContract(ProcessScheduleSchedulingContract _schedulingContract)
    {
        processScheduleSchedulingContract = _schedulingContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForSeriesCreate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initializeForSeriesCreate()
    {
        element.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForSeriesUpdate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initializeForSeriesUpdate()
    {
        element.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForOccurrenceCreate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initializeForOccurrenceCreate()
    {
        element.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForOccurrenceUpdate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initializeForOccurrenceUpdate()
    {
        element.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize()
    {
        formState = TaxArchiveAutomationCriteriaFormState::construct(processScheduleSchedulingContract);
        formInteraction = TaxArchiveAutomationCriteriaFormInteraction::construct(this);

        formInteraction.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormState</Name>
				<Source><![CDATA[
    TaxArchiveAutomationCriteriaFormState getFormState()
    {
        return formState;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxArchiveTransDataSource</Name>
				<Source><![CDATA[
    FormDataSource getTaxArchiveTransDataSource()
    {
        return TaxArchiveTrans_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindParametersForCreationOfManagedArchiveJobs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the archive job contract for creating archive jobs.
    /// </summary>
    /// <param name = "_jobCreationMetadata">
    /// The tax archive job creation metadata info.
    /// </param>
    /// <returns>A job creation contract provider.</returns>
    [Hookable(false)]
    public ArchiveServiceIProvideManagedJobCreationContracts bindParametersForCreationOfManagedArchiveJobs(
        ArchiveServiceManagedJobCreationMetadata _jobCreationMetadata)
    {
        var multipleJobCreationContract = ArchiveServiceManagedJobMultipleJobsCreationContract::construct();

        var multiSelectionHelper = MultiSelectionHelper::construct();
        multiSelectionHelper.parmDatasource(TaxArchiveTrans_ds);

        var selectedArchiveTrans = multiSelectionHelper.getFirst();

        while (selectedArchiveTrans)
        {
            var jobPostRequestCreator = new TaxArchiveAutomationJobRequestCreator();
            var jobPostRequest = jobPostRequestCreator.createPostJobRequestForArchiveTrans(selectedArchiveTrans);

            var jobCreationContractForSelectedArchiveTrans = ArchiveServiceManagedJobCreationContract::newForExistingSourceLink(
                TaxArchiveAutomationConstants::RegisteredTypeName,
                jobPostRequest,
                selectedArchiveTrans);

            multipleJobCreationContract.addJobCreationContract(jobCreationContractForSelectedArchiveTrans);

            selectedArchiveTrans = multiSelectionHelper.getNext();
        }

        return multipleJobCreationContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJobParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates all parameters configured on the tax archive UI are valid.
    /// </summary>
    /// <returns>
    /// True if all job parameters are valid; otherwise, false.
    /// </returns>
    [Hookable(false)]
    public boolean validateJobParameters()
    {
        var isValid = true;

        TaxArchiveTrans selectedTaxArchiveTrans = TaxArchiveTrans_ds.cursor();
        if (selectedTaxArchiveTrans.RecId == 0
            || selectedTaxArchiveTrans.Status != LedgerArchiveStatus::Ready)
        {
            isValid = checkFailed("@Tax:TaxArchiveTransNotReadyToBeArchivedError");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TaxArchiveTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            var archiveTransQbds = this.queryBuildDataSource();

            var archiveTransReadyRange = archiveTransQbds.addRange(fieldNum(TaxArchiveTrans, Status));
            archiveTransReadyRange.status(RangeStatus::Hidden);
            archiveTransReadyRange.value(enum2Str(LedgerArchiveStatus::Ready));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RefreshButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            TaxArchiveTransHelper::createOrUpdateData();
            TaxArchiveTrans_ds.research(true);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxArchiveTrans</Name>
			<Table>TaxArchiveTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>FiscalCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCalendarYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Tax:TaxArchiveAutomationSeries</Caption>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>DefaultActionPane</Name>
				<Enabled>No</Enabled>
				<Type>ActionPane</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>ParametersPage</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ParametersTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ArchiveActions</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>BttnGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>RefreshButton</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<AutoRefreshData>Yes</AutoRefreshData>
												<Text>@SYS113222</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ArchiveTransGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxArchiveTrans_FiscalCalendar</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>TaxArchiveTrans</DataSource>
										<ReferenceField>FiscalCalendar</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxArchiveTrans_LedgerDataAreaId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerDataAreaId</DataField>
										<DataSource>TaxArchiveTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxArchiveTrans_FiscalCalendarYear</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>TaxArchiveTrans</DataSource>
										<ReferenceField>FiscalCalendarYear</ReferenceField>
										<ReplacementFieldGroup>AutoLookup</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TaxArchiveTrans_Status</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Status</DataField>
										<DataSource>TaxArchiveTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>TaxArchiveTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Tax:TaxArchiveAutomationCriteriaFormParmName</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>