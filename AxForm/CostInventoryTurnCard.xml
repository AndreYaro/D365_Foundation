<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CostInventoryTurnCard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CostInventoryTurnCard extends FormRun implements CostIKPI
{
    CostSelectPeriodState            periodStateToBeSetOnInit;
    CostInventoryAccountingKPIGoals  costInventoryAccountingKPIGoals;
    CostAmount                       turnOnInit;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        this.initCardLabel();

        costInventoryAccountingKPIGoals = CostInventoryAccountingKPIGoals::find();

        if (periodStateToBeSetOnInit)
        {
            this.updateKPI(periodStateToBeSetOnInit, turnOnInit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateKPI</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the turn on the card.
    /// </summary>
    /// <param name = "_periodState">A period for which to set the turn.</param>
    /// <param name = "_turn">An inventory turn value to display on the card.</param>
    public void updateKPI(CostSelectPeriodState _periodState, CostAmount _turn)
    {
        if (this.hasExecutedInit())
        {
            CostInventoryTurn   inventoryTurn = _turn;
            CostInventoryTurn   goalDifferenceValue = inventoryTurn - this.getInventoryTurnGoalForPeriod(costInventoryAccountingKPIGoals.AnnualInventoryTurn, _periodState);

            InventoryTurnControl.realValue(inventoryTurn);
            this.updateGoalDifference(goalDifferenceValue);
        }
        else
        {
            // it is possible that the init has not been run at this point in time. In that case postpone the initialization.
            periodStateToBeSetOnInit = _periodState;
            turnOnInit = _turn;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventoryTurnGoalForPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the inventory turn goal for the number of days in the interval specified by the period state.
    /// </summary>
    /// <param name = "_annualInventoryTurnGoal">The inventory turn goal per year.</param>
    /// <param name = "_periodState">The period containing the date range for which to calculate the inventory turn goal.</param>
    /// <returns>The inventory turn goal for the specified period.</returns>
    private CostInventoryTurn getInventoryTurnGoalForPeriod(CostInventoryTurnPerYear _annualInventoryTurnGoal, CostSelectPeriodState _periodState)
    {
        NumberOfDays daysInPeriod = _periodState.getDaysInDateRange();

        return _annualInventoryTurnGoal * daysInPeriod / 365;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGoalDifference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the goal difference display and sets the status image.
    /// </summary>
    /// <param name = "_goalDifferenceValue">The goal difference value.</param>
    private void updateGoalDifference(CostInventoryTurn _goalDifferenceValue)
    {
        boolean isGoalMet               = _goalDifferenceValue >= 0;
        str     plusSign                = isGoalMet ? '+' : '';
        str     goalDifferenceString    = strFmt('%1%2', plusSign, _goalDifferenceValue);

        GoalDifference.text(strFmt("@CostManagement:BusinessCard_CostInventoryTurnCard_GoalDifference", goalDifferenceString));

        if (isGoalMet)
        {
            StatusImage.normalImage(ImageReferenceSymbol::Accept);
        }
        else
        {
            StatusImage.normalImage(ImageReferenceSymbol::Warning);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCardLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets heading and subheading texts on the card.
    /// </summary>
    private void initCardLabel()
    {
        InventoryTurnHeading.text("@SYS4006557");
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>InventoryTurnGroup</Name>
				<ExtendedStyle>BusinessCard</ExtendedStyle>
				<Pattern>BusinessCardThreeFields</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>StatusImage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Image</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SCM:CostInventoryAccuracyCard_StatusImage</Label>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventoryTurnHeading</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>Heading</ExtendedStyle>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS4006557</Label>
						<ShowLabel>No</ShowLabel>
						<Text>@SYS4006557</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>InventoryTurnControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Real</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>CostInventoryTurn</ExtendedDataType>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>GoalDifference</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SCM:CostInventoryAccuracyCard_GoalDifference</Label>
						<ShowLabel>No</ShowLabel>
						<Text>@CostManagement:BusinessCard_CostInventoryTurnCard_GoalDifference</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>None</ArrangeMethod>
				<Style>Card</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>