<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustTrans</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustTrans extends FormRun implements IFormRefreshable, SettlementViewIExchAdjState
{
    NoYes interest;
    NoYes showAll;
    QueryBuildRange criteriaOpen;
    QueryBuildRange transTypeRange;

    CustTransDetails custTransDetails;
    Common common;

    BankCodaAccountStatementLines bankAccountStatementLines;
    boolean parentCoda;
    ImageListAppl_CustVend imageList;
    SysGlobalCache globalCache;
    Query oldQuery;

    CustVendDisputeHelper disputeHelper;

    BankLCCustTransHelper bankLCTransHelper;

    #ResAppl
    // <GEERU>
    FactureSource_AmountDiff_Cust_RU callerFacture;
    // </GEERU>
    // <GEERU><GIN><GJP>
    #ISOCountryRegionCodes
    // </GJP></GIN></GEERU>

    // <GEELV>
    LvShowSettledTax showSettledTax;
    // </GEELV>

    LedgerShowDebCredController_CN showDRsCRsController;
    boolean enableShowDRsCRs;

    CustCollectionsCustFilterTmp custFilterTmp;

    CustVendTransFilterHelper filterHelper;
    DataAreaId lastMarkedCompany;
    boolean isCrossCompanyView;
    DirPartyRecId callerParty;
    SelectableDataArea callerLegalEntity;

}
]]></Source>
			</Method>
			<Method>
				<Name>enableCollectionLetterCode</Name>
				<Source><![CDATA[
    public void enableCollectionLetterCode()
    {
        custTrans_CollectionLetterCode.allowEdit(custTrans.countOpenTrans() == 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCustAutomationExclusion</Name>
				<Source><![CDATA[
    internal void enableCustAutomationExclusion()
    {
        CustTrans_CustAutomationExclude.allowEdit(custTrans.isInvoice());
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustVisibilityBasedOnDisputeStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts the visibility and labels on various controls based off of the <c>CustVendDisputeStatus</c> value from the <c>CustVendDisputeHelper</c> instance.
    /// </summary>
    protected void adjustVisibilityBasedOnDisputeStatus()
    {
        // Get the dispute information for the transaction
        disputeHelper = CustVendDisputeHelper::construct(custTrans.company(), tablenum(CustTrans), custTrans.RecId);

        switch (disputeHelper.parmStatus())
        {
            case CustVendDisputeStatus::Disputed:
                disputePromiseFollowUp.visible(true);
                disputePromiseFollowUp.label("@AccountsReceivable:CustCollectionsSetTransactionStatusFollowUpDate");

                disputePromiseAmount.visible(true);
                disputePromiseAmount.label(strFmt('%1 %2', enum2Str(CustVendDisputeStatus::Disputed), "@AccountsReceivable:LowerCaseAmount"));

                break;

            case CustVendDisputeStatus::PromiseToPay:
                disputePromiseFollowUp.visible(true);
                disputePromiseFollowUp.label(strFmt("@AccountsReceivable:CustCollectionsSetTransactionStatusPromisetoPay", enum2Str(CustVendDisputeStatus::PromiseToPay)));

                disputePromiseAmount.visible(true);
                disputePromiseAmount.label(strFmt('%1 %2', enum2Str(CustVendDisputeStatus::PromiseToPay), "@AccountsReceivable:LowerCaseAmount"));

                break;

            case CustVendDisputeStatus::PromiseToPayBroken:
                disputePromiseAmount.visible(false);
                disputePromiseFollowUp.visible(true);
                disputePromiseFollowUp.label("@AccountsReceivable:CustCollectionsSetTransactionStatusFollowUpDate");
                break;

            default:
                disputePromiseFollowUp.visible(false);
                disputePromiseAmount.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyCustDisputeStatusQueryFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies a query filter based on the <c>CustVendDisputeStatus</c> enumeration passed in as an argument to the form.
    /// </summary>
    /// <param name = "_query">The datasource query.</param>
    /// <param name = "_status">The <c>CustVendDisputeStatus</c> passed as an argument to the form.</param>
    protected void applyCustDisputeStatusQueryFilter(Query _query, str _status)
    {
        QueryBuildDataSource custDisputeDS = SysQuery::findOrCreateDataSource(_query, tableNum(CustDispute), tableNum(CustTrans));
        custDisputeDS.addLink(fieldNum(CustTrans, RecId), fieldNum(CustDispute, CustTrans));
        custDisputeDS.joinMode(JoinMode::ExistsJoin);

        switch (_status)
        {
            case enum2Str(CustVendDisputeStatus::PromiseToPay):
                SysQuery::findOrCreateRange(custDisputeDS, fieldNum(CustDispute, Status)).value(SysQuery::value(CustVendDisputeStatus::PromiseToPay));
                break;
            case enum2Str(CustVendDisputeStatus::PromiseToPayBroken):
                SysQuery::findOrCreateRange(custDisputeDS, fieldNum(CustDispute, Status)).value(SysQuery::value(CustVendDisputeStatus::PromiseToPayBroken));
                break;
            case enum2Str(CustVendDisputeStatus::Disputed):
                SysQuery::findOrCreateRange(custDisputeDS, fieldNum(CustDispute, Status)).value(SysQuery::value(CustVendDisputeStatus::Disputed));
                break;
            default:
                SysQuery::findOrCreateRange(custDisputeDS, fieldNum(CustDispute, Status)).value(strFmt('!%1,!%2,!%3', CustVendDisputeStatus::PromiseToPay, CustVendDisputeStatus::PromiseToPayBroken, CustVendDisputeStatus::Disputed));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankDocumentTypeFilterModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called after the <c>BankDocumentTypeFilter</c> control is modified.
    /// </summary>
    public void bankDocumentTypeFilterModified()
    {
        bankLCTransHelper.buildQuery(custTrans_DS.query());

        custTrans_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        if (parentCoda && bankAccountStatementLines.fillInvoiceIdString(ModuleCustVend::Cust))
        {
            element.args().caller().refreshAfterInvoiceLink();
        }

        if (common.TableId == tablenum(TmpAccountSum))
        {
            globalCache.remove(formstr(CustTrans),curuserid());
        }

        if (callerLegalEntity)
        {
            // When the "SetCompany" metadata property is set to No,
            // we need to manually revert to the calling form legal entity context before close.
            CustVendTransFilterHelper::setDefaultCompany(callerLegalEntity);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerRefresh</Name>
				<Source><![CDATA[
    public void callerRefresh()
    {
        CustTrans_DS.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDisputeStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the proper <c>CustVendDisputeStatus</c> enumeration value.
    /// </summary>
    /// <returns>The proper <c>CustVendDisputeStatus</c> enumeration value.</returns>
    protected CustVendDisputeStatus displayDisputeStatus()
    {
        if (disputeHelper)
        {
            return disputeHelper.parmStatus();
        }
        else
        {
            return CustVendDisputeStatus::None;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBankDocumentTypeFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the edit method for control <c>BankDocumentTypeFilter</c>.
    /// </summary>
    /// <param name="_set">
    /// A Boolean value that indicates whether to set or read the value.
    /// </param>
    /// <param name="_value">
    /// The value set from the form control.
    /// </param>
    /// <returns>
    /// The value should be displayed on the form control.
    /// </returns>
    edit BankLCBankDocument editBankDocumentTypeFilter(
        boolean _set,
        BankLCBankDocument _value)
    {
        if (_set)
        {
            bankLCTransHelper.parmBankDocumentTypeFilter(_value);
        }

        return bankLCTransHelper.parmBankDocumentTypeFilter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editShowOpenOnly</Name>
				<Source><![CDATA[
    edit boolean editShowOpenOnly(boolean _set, boolean _showOpenOnly)
    {
        if (_set)
        {
            CustVendShowTransaction custVendShowTransaction = CustVendShowTransaction::All;

            if (_showOpenOnly)
            {
                custVendShowTransaction = CustVendShowTransaction::Open;
            }

            criteriaOpen.value(CustVendTransFormHelper::getClosedTransactionQueryValue(custVendShowTransaction, ModuleCustVend::Cust));

            ShowOpenOptions.selection(enum2int(custVendShowTransaction));

            custTrans_DS.executeQuery();
        }

        return criteriaOpen.value() == CustVendTransFormHelper::getClosedTransactionQueryValue(CustVendShowTransaction::Open, ModuleCustVend::Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    void enableFieldsActive()
    {
        if (CFMParameters::isPaymentRequestsEnabled())
        {
            boolean allowEditCFMPaymentRequestFields = !CFMPaymentRequestTable::existByHeader(CFMPaymentRequestSourceType::CustInvoice, custTrans.RecId);
            CustTrans_ds.object(fieldNum(CustTrans, CompanyBankAccountId)).allowEdit(custTrans.allowEditCompanyBankAccountId() && allowEditCFMPaymentRequestFields);
            CustTrans_ds.object(fieldNum(CustTrans, ThirdPartyBankAccountId)).allowEdit(custTrans.allowEditThirdPartyBankAccountId() && allowEditCFMPaymentRequestFields);
            CustTrans_ds.object(fieldNum(CustTrans, PaymSpec)).allowEdit(allowEditCFMPaymentRequestFields);
        }
        else
        {
            custTrans_ds.object(fieldnum(CustTrans, CompanyBankAccountId)).allowEdit(custTrans.allowEditCompanyBankAccountId());
            custTrans_ds.object(fieldnum(CustTrans, ThirdPartyBankAccountId)).allowEdit(custTrans.allowEditThirdPartyBankAccountId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive_W</Name>
				<Source><![CDATA[
    void enableFieldsActive_W()
    {
        boolean taxDocCreateVisible;
        boolean taxDocCreateEnabled;
        boolean taxDocViewVisible;

        [ taxDocCreateVisible,
          taxDocCreateEnabled,
          taxDocViewVisible ] = CzTaxDocumentTable::taxDocumentButtons(custTrans);

        cztaxDocumentCreate.visible(true);
        cztaxDocumentCreate.enabled(taxDocCreateVisible);
        taxDocumentTable_CZ.visible(true);
        taxDocumentPrint_CZ.visible(true);
        taxDocumentTable_CZ.enabled(taxDocViewVisible);
        taxDocumentPrint_CZ.enabled(taxDocViewVisible);

        CashRegisterFiscalTrans_W cashRegisterFiscalTrans = CashRegisterFiscalTrans_W::findCustTrans(custTrans);
        boolean existsCashRegisterTrans = cashRegisterFiscalTrans.RecId != 0;
        ClassId cashRegisterProcessingClassId = existsCashRegisterTrans ?
             CashRegister_W::find(cashRegisterFiscalTrans.CashRegister).ProcessingClassId : 0;
        if (CashRegisterProcessingBase::isEnabled(cashRegisterProcessingClassId))
        {
            CashRegisterReceipt_W.enabled(existsCashRegisterTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        boolean isCustTransDataSet = false;
        #ISOCountryRegionCodes
        // <GEERU>
        boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        this.skipAddRecIdRangeForQueryPerf();

        common = element.args().record();

        if (element.args().dataset() == tableNum(CustTrans))
        {
            isCustTransDataSet = true;
        }

        // <GEERU>
        if (countryRegion_RU
            && element.args()
            && element.args().caller()
            && classIdGet(element.args().caller()) == classNum(FactureSource_AmountDiff_Cust_RU))
        {
            callerFacture = element.args().caller();
        }
        // </GEERU>

        // <GJP>
        enableShowDRsCRs = LedgerShowDebCredController_CN::isShowCustDRsCRsFeatureEnabled_JP();
        if (enableShowDRsCRs)
        {
            showDRsCRsController = LedgerShowDebCredController_CN::construct(tableNum(CustTrans));
        }
        // </GJP>

        this.initFormFilterMode(element.args());

        super();

        this.setFormFilterMode();

        if (element.args().dataset() == tableNum(BankCodaAccountStatementLines))
        {
            bankAccountStatementLines = element.args().record();
            imageList = new ImageListAppl_CustVend();
            parentCoda = true;

            include.visible(true);
            includedElseWhere.visible(true);
            includedElsewhere.imageList(imageList.imageList());
        }

        if (element.args().menuItemName() == menuItemDisplayStr(CustCollectionsDisputeHistoryChartCustTrans) && !element.args().parmObject())
        {
            throw error(Error::missingParameter(element.args().caller()));
        }

        // <GEERU>
        if (countryRegion_RU)
        {
            if (common.TableId == tableNum(BankChequePaymTrans) ||
                common.TableId == tableNum(TmpBankPaym2Invoice) ||
                common.TableId == tableNum(SalesBookVATProcessLogTrans_RU) ||
                common.TableId == tableNum(SalesBookTrans_RU) ||
                common.TableId == tableNum(PurchBookVATProcessLogTrans_RU) ||
                common.TableId == tableNum(PurchBookTrans_RU) ||
                common.TableId == tableNum(CFMPaymentRequestTable) ||
                common.TableId == tableNum(CFMAnalyticFormDataEditTmp))
            {
                QueryBuildDataSource qbdS = this.clearCustTransQueryRange();

                qbdS.addRange(fieldNum(CustTrans, TransDate));
                qbdS.addRange(fieldNum(CustTrans, Voucher));
                qbdS.addRange(fieldNum(CustTrans, RecId));
            }
        }
        else
        {
            // </GEERU>
            if (common.TableId == tableNum(BankChequePaymTrans) || common.TableId == tableNum(TmpBankPaym2Invoice))
            {
                QueryBuildDataSource qbdS = this.clearCustTransQueryRange();

                qbdS.addRange(fieldNum(CustTrans, TransDate));
                qbdS.addRange(fieldNum(CustTrans, Voucher));
            }
            // <GEERU>
        }
        // </GEERU>

        this.setCashDiscountVisible();
        this.setCreditInvoicingVisible();

        element.initBankLCTransHelper();

        // <GIN>
        if (TaxWithholdParameters_IN::checkTaxParameters()
            && element.args().caller() != null
            && element.args().caller().name() == formStr(LedgerTaxWithholdJournal_IN))
        {
            transferToAdjustmentJournal_IN.visible(true);
        }
        // </GIN>

        // <GJP>
        if (!enableShowDRsCRs)
        {
            CustTrans_AmountCurDebit_JP.visible(false);
            CustTrans_AmountCurCredit_JP.visible(false);
        }
        // </GJP>

        custCollectionsCustFilterTmp.linkPhysicalTableInstance(custFilterTmp);

        this.setCustomerFilterControls();
        this.setCustomerDefaultTransactionView();
        this.initTransactionsToDisplay();

        if (CustParameters::find().EditCashDiscountsWhenDueDateChanged)
        {
            CustTrans_DueDate.visible(true);
        }

        if (FeatureStateProvider::isFeatureEnabled(CustAutomationFeature::instance()))
        {
            CustTrans_CustAutomationExclude.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTransactionsToDisplay</Name>
				<Source><![CDATA[
    private void initTransactionsToDisplay()
    {
        CustVendShowTransaction defaultSetting = this.getDefaultTransactionview();

        this.setTransactionsToDisplay(defaultSetting);
        ShowOpenOptions.selection(defaultSetting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomerFilterControls</Name>
				<Source><![CDATA[
    private void setCustomerFilterControls()
    {
        CustTrans_AccountNum.visible(isCrossCompanyView);
        CustTrans_DataAreaId.visible(isCrossCompanyView);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomerDefaultTransactionView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default open or closed transaction query value.
    /// </summary>
    private void setCustomerDefaultTransactionView()
    {
        CustVendShowTransaction defaultTransactionView = this.getDefaultTransactionView();

        criteriaOpen.value(CustVendTransFormHelper::getClosedTransactionQueryValue(defaultTransactionView, ModuleCustVend::Cust));
        ShowOpenOptions.selection(enum2int(defaultTransactionView));

        ShowOpenDateFilter.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultTransactionView</Name>
				<Source><![CDATA[
    private CustVendShowTransaction getDefaultTransactionView()
    {
        CustVendShowTransaction defaultTransactionView = CustVendShowTransaction::All;

        if (element.args() && element.args().parmEnumType() == enumNum(CustVendShowTransaction))
        {
            defaultTransactionView = element.args().parmEnum();
        }
        else
        {
            defaultTransactionView = CustParameters::find().DefaultFilterForCustomerTransactions;
        }

        return defaultTransactionView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormFilterMode</Name>
				<Source><![CDATA[
    private void initFormFilterMode(Args _args)
    {
        isCrossCompanyView = _args && _args.menuItemName() == menuItemDisplayStr(CustTransCrossCompany);

        filterHelper = CustVendTransFilterHelper::constructV2();

        // If the user only has access to a single company, there is no reason to use cross company functionality.
        if (!filterHelper.isMultiCompany())
        {
            isCrossCompanyView = false;
        }

        callerLegalEntity = filterHelper.findLegalEntityForRecord(common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormFilterMode</Name>
				<Source><![CDATA[
    private void setFormFilterMode()
    {
        if (isCrossCompanyView)
        {
            this.clearCustTransQueryRange();
            this.createCustPartyFilter();
        }

        CustVendTransPartyTmp_ds.queryBuildDataSource().enabled(callerParty != 0);

        filterHelper.initCrossCompanyControls(CustTrans_DS, CompanyFilter);
        filterHelper.parmShouldShowCompanyControls(isCrossCompanyView);
        filterHelper.setCompanyControlsVisibility();

        this.setKnownCountryRegionFieldVisibility();

        if (isCrossCompanyView)
        {
            this.enableCountryRegion(false);
            this.warnOnActivateCompanyChange(false);

            filterHelper.addMyCompaniesToQuery();
        }
        else
        {
            // The calling context for the form is not guaranteed to provide a company context.
            // For example, jump references from workspaces.
            // If a company range has not been specified, enforce the current company context.
            QueryBuildRange companyRange = CustTrans_ds.queryBuildDataSource().findRange(fieldNum(CustTrans, DataAreaId));

            if (!companyRange)
            {
                CustVendTransFilterHelper::enforceCurrentCompanyRange(CustTrans_ds.query());
            }
        }

        callerLegalEntity = filterHelper.findLegalEntityForRecord(common);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCustPartyFilter</Name>
				<Source><![CDATA[
    private void createCustPartyFilter()
    {
        CustTable custTable = Common as CustTable;

        if (custTable)
        {
            CustTable custTableLocal;
            CustVendTransPartyTmp partyTmpFilter;

            callerParty = custTable.Party;

            Set custAccounts = new Set(Types::Container);

            while select crosscompany Party, AccountNum, DataAreaId from custTableLocal
                where custTableLocal.Party == callerParty
            {
                if (custAccounts.add([custTableLocal.AccountNum, custTableLocal.DataAreaId]))
                {
                    CustVendTransPartyTmp::insertCustVendParty(custTableLocal, partyTmpFilter);
                }
            }

            CustVendTransPartyTmp.linkPhysicalTableInstance(partyTmpFilter);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setKnownCountryRegionFieldVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// When this form is in global mode, all controls across all country/regions will appear no matter if the user has access to companies in those regions.
    /// This method will display or hide known country/region controls if the user does or does not have access to a company in those country/regions.
    /// </summary>
    private void setKnownCountryRegionFieldVisibility(DataAreaId _dataAreaId = curExt())
    {
        changecompany (_dataAreaId)
        {
            boolean hasBR = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoBR]);
            boolean hasCZ = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]);
            boolean hasEE = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoEE]);
            boolean hasHU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]);
            boolean hasIN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
            boolean hasLT = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT]);
            boolean hasLV = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLV]);
            boolean hasPL = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);
            boolean hasRU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);

            // Action pane items
            LvSettledTaxPostings.visible(hasLV);
            CustVendTransPostingLog_RU.visible(hasCZ || hasEE || hasHU || hasLT || hasLV || hasPL || hasRU);
            CustVendCompensation.visible(hasHU || hasPL);
            CustVendPrepaymentHandling_W.visible(hasCZ || hasHU || hasPL || hasRU);
            AdvanceInvoiceLink_CZ.visible(hasCZ || hasHU || hasPL);
            AdvanceInvoiceSettlement_W.visible(hasCZ || hasEE || hasHU || hasLT || hasLV || hasPL || hasRU);
            CzTaxDocument.visible(hasCZ);

            // Grid view items
            CustTrans_fiscalEstablishmentId_BR.visible(hasBR);
            CustTrans_TaxWithholdAmountOrigin_IN.visible(hasIN);
            CustTrans_TDSAmount_IN.visible(hasIN);
            CustTrans_TCSAmount_IN.visible(hasIN);
            CustTrans_Prepayment_RU.visible(hasRU);

            // Details view items
            CustTrans_W_InvoicePostingType_RU.visible(hasRU);
            CustTrans_W_PrepaymentFactureId_W.visible(hasRU);
            showtaxWithholdStatus_IN.visible(hasIN);
            CustTrans_W_CommProfileType_RU.visible(hasRU);
            CommPrepaymUsedAmount_RU.visible(hasRU);

            this.setBillingClassificationVisible();
            this.setCashDiscountVisible();
            this.setCreditInvoicingVisible();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBillingClassificationVisible</Name>
				<Source><![CDATA[
    private void setBillingClassificationVisible()
    {
        CustTrans_ds.object(fieldNum(CustTrans, CustBillingClassification)).visible(CustParameters::isBillingClassificationEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscountVisible</Name>
				<Source><![CDATA[
    private void setCashDiscountVisible()
    {
        utilizedCashDisc.visible(!TaxParameters::find().CashDiscOnInvoice);
        firstCashDiscDate.visible(!TaxParameters::find().CashDiscOnInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCreditInvoicingVisible</Name>
				<Source><![CDATA[
    private void setCreditInvoicingVisible()
    {
        custTransTmpCreditInvoicing.visible(CustVendCreditInvoicingTable::useCreditInvoicingReporting());
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCustTransQueryRange</Name>
				<Source><![CDATA[
    private QueryBuildDataSource clearCustTransQueryRange()
    {
        Query q = custTrans_ds.query();
        q.allowCrossCompany(true);

        QueryBuildDataSource qbdS = q.dataSourceTable(tableNum(CustTrans));
        qbdS.clearDynalinks();
        criteriaOpen.value(SysQueryRangeUtil::valueUnlimited());

        return qbdS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBankLCTransHelper</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the instance of <c>BankLCCustVendTransHelper</c>.
    /// </summary>
    private void initBankLCTransHelper()
    {
        bankLCTransHelper = BankLCCustTransHelper::construct();
        bankLCTransHelper.parmBankLCCustTransDS(bankLCCustTrans_DS);
        bankLCTransHelper.parmBankDocumentTypeFilterControl(bankDocumentTypeFilter);
        bankLCTransHelper.configBankLCControls(custTrans_DS.query());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDRsCRsControls</Name>
				<Source><![CDATA[
    private void initDRsCRsControls()
    {
        if (enableShowDRsCRs)
        {
            showDRsCRsController.addAmountControl(CustTrans_AmountCur);
            showDRsCRsController.addAmountDebitControl(CustTrans_AmountCurDebit_JP);
            showDRsCRsController.addAmountCreditControl(CustTrans_AmountCurCredit_JP);

            showDRsCRSController.initControls();
        }

        CustTrans_AmountCurDebit_JP.visible(enableShowDRsCRs);
        CustTrans_AmountCurCredit_JP.visible(enableShowDRsCRs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>interest</Name>
				<Source><![CDATA[
    edit CustInterestCalculate interest(boolean set,
                                         CustInterestCalculate _interest)
    {
        if (set)
        {
            custTrans.Interest = _interest;
        }
        return custTrans.Interest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionsToDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the open and closed transaction filter.
    /// </summary>
    /// <param name = "_showTransaction">The transaction type to show.</param>
    protected void setTransactionsToDisplay(CustVendShowTransaction _showTransaction)
    {
        boolean isShowOpenDateFilterEnabled;

        if (_showTransaction == CustVendShowTransaction::OpenAsOf)
        {
            isShowOpenDateFilterEnabled = true;
        }

        criteriaOpen.value(CustVendTransFormHelper::getClosedTransactionQueryValue(_showTransaction, ModuleCustVend::Cust, ShowOpenDateFilter.dateValue()));
        ShowOpenDateFilter.enabled(isShowOpenDateFilterEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldHideExchAdjTransactions</Name>
				<Source><![CDATA[
    public boolean shouldHideExchAdjTransactions()
    {
        return HideCurrencyRevaluation.value();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldJoinCountrySpecificDetails</Name>
				<Source><![CDATA[
    private boolean shouldJoinCountrySpecificDetails()
    {
        boolean shouldJoinCountrySpecificDetails;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP])
            || FeatureStateProvider::isFeatureEnabled(SplitPaymentMandatoryRuleFeature_PL::instance()))
        {
            shouldJoinCountrySpecificDetails = true;
        }

        if (!shouldJoinCountrySpecificDetails && filterHelper)
        {
            Set countryRegionCodes = filterHelper.getCountryRegionCodes();

            if (countryRegionCodes.in(#isoRU)
                || countryRegionCodes.in(#isoIN)
                || countryRegionCodes.in(#isoJP))
            {
                shouldJoinCountrySpecificDetails = true;
            }
        }

        return shouldJoinCountrySpecificDetails;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustTrans</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (CustPaymModeTable::find(CustTrans.PaymMode).IsSEPA
                && custTrans.DirectDebitMandate
                && custTrans.DirectDebitMandate != CustTrans.orig().DirectDebitMandate)
            {
                info("@SYS4002581");
            }

            super();

            custTransDetails = new CustTransDetails(custTrans);
            custTransDetails.setCustVendTrans(custTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>bankDiscNoticeDeadline</Name>
						<Source><![CDATA[
        display BankDiscNoticeDeadline bankDiscNoticeDeadline(CustTrans _custTrans = null)
        {
            if (_custTrans)
                custTransDetails.setCustVendTrans(_custTrans);

            return custTransDetails.firstBankDiscNoticeDeadline();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lastInterestDate</Name>
						<Source><![CDATA[
        display CustLastInterestDate lastInterestDate()
        {
            return custTransDetails.lastInterestDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>collectionLetterCode</Name>
						<Source><![CDATA[
        display CustCollectionLetterCode collectionLetterCode()
        {
            return custTransDetails.collectionLetterCode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>collectionLetterNum</Name>
						<Source><![CDATA[
        display CollectionLetterNum collectionLetterNum()
        {
            return custTransDetails.collectionLetterNum();
        }

]]></Source>
					</Method>
					<Method>
						<Name>interestNote</Name>
						<Source><![CDATA[
        display InterestNote interestNote()
        {
            return custTransDetails.interestNote();
        }

]]></Source>
					</Method>
					<Method>
						<Name>firstDueDate</Name>
						<Source><![CDATA[
        display DueDate firstDueDate(CustTrans _custTrans)
        {
            custTransDetails.setCustVendTrans(_custTrans);
            return custTransDetails.firstDueDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>firstCashDiscDate</Name>
						<Source><![CDATA[
        display CashDiscdate firstCashDiscDate(CustTrans _custTrans = null)
        {
            if (_custTrans)
            {
                custTransDetails.setCustVendTrans(_custTrans);
            }

            return custTransDetails.firstCashDiscDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>utilizedCashDisc</Name>
						<Source><![CDATA[
        display DiscAmount utilizedCashDisc(CustTrans _custTrans = null)
        {
            if (_custTrans)
            {
                custTransDetails.setCustVendTrans(_custTrans);
            }

            return custTransDetails.utilizedCashDisc();
        }

]]></Source>
					</Method>
					<Method>
						<Name>possibleCashDisc</Name>
						<Source><![CDATA[
        display DiscAmount possibleCashDisc(CustTrans _custTrans = null)
        {
            if (_custTrans)
            {
                custTransDetails.setCustVendTrans(_custTrans);
            }

            return custTransDetails.possibleCashDisc();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            Query query;

            // <GEERU>
            #isoCountryRegionCodes
            QueryBuildDataSource qbds;
            QueryBuildDataSource qbds_W;

            // </GEERU>
            // <GIN>
            #define.TaxWithholdTransTaxAdjustment('TaxWithholdTransTaxAdjustment')
            // </GIN>

            Common lookupRecord = element.args().lookupRecord();

            if (!lookupRecord)
            {
                FormRun argsCaller = element.args().caller() as FormRun;
                if (argsCaller && formHasMethod(argsCaller, identifierstr(parmCustTransRecId)))
                {
                    element.args().lookupRecord(CustTrans::find(argsCaller.parmCustTransRecId()));
                }
            }

            super();

            if (common.TableId == tablenum(TmpAccountSum))
            {
                globalCache = classfactory.globalCache();
                if (! globalCache.get(formstr(CustTrans),curuserid(),null))
                {
                    globalCache.set(formstr(CustTrans),curuserid(), this);
                    oldQuery = new Query(this.query());
                }
            }
            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
                && callerFacture)
            {
                this.query().dataSourceTable(tableNum(CustTrans)).addRange(fieldNum(CustTrans, RecId)).value(callerFacture.transRange());
            }
            // </GEERU>

            if (element.args().parmObject()
                && element.args().menuItemName() != menuItemDisplayStr(CustCollectionsDisputeHistoryChartCustTrans)
                && !(element.args().parmObject() is PBIReportSelectedData))
            {
                query = new Query(element.args().parmObject());

                //<GEERU>
                if (element.args().parmEnumType() && element.args().parmEnumType() == enumnum(RLedgerTurnoverSheetType))
                {
                    qbds = this.query().dataSourceTable(tableNum(CustTrans));

                    qbds_W = qbds.addDataSource(tableNum(CustTrans_W), tableId2name(tableNum(CustTrans_W)));
                    qbds_W.addLink(fieldNum(CustTrans, RecId), fieldNum(CustTrans_W, CustTrans));
                    qbds_W.joinMode(JoinMode::OuterJoin);
                }
                //</GEERU>

                SysQuery::mergeRanges(this.query(), query);

                criteriaOpen = this.query().dataSourceNo(1).findRange(fieldnum(CustTrans, Closed));
            }

            criteriaOpen = SysQuery::findOrCreateRange(this.query().dataSourceNo(1), fieldnum(CustTrans, Closed));
            transTypeRange = SysQuery::findOrCreateRange(this.query().dataSourceNo(1), fieldnum(CustTrans, TransType));

            custTransDetails = new CustTransDetails(custTrans);

            // <GIN>
            // Added range to filter the Customer transactions, for which the withhold taxes has been settled for authority.
            if (TaxWithholdParameters_IN::checkTaxParameters()
                && element.args().caller() != null
                && element.args().caller().name() == formStr(LedgerTaxWithholdJournal_IN))
            {
                //Filter the settled records.
                this.query().dataSourceTable(tableNum(CustTrans)).addDataSource(tableNum(TaxWithholdTrans_IN));
                this.query().dataSourceTable(tableNum(TaxWithholdTrans_IN)).addLink(fieldNum(TaxWithholdTrans_IN, Voucher), fieldNum(CustTrans, Voucher));
                this.query().dataSourceTable(tableNum(TaxWithholdTrans_IN)).addLink(fieldNum(TaxWithholdTrans_IN, TransDate), fieldNum(CustTrans, TransDate));
                this.query().dataSourceTable(tableNum(TaxWithholdTrans_IN)).addRange(fieldNum(TaxWithholdTrans_IN, SettledVoucher)).value(SysQuery::valueNotEmptyString());
                this.query().dataSourceTable(tableNum(TaxWithholdTrans_IN)).joinMode(JoinMode::NoExistsJoin);

                // Joining taxWithholdTrans_IN table again to make an Or condition to LastSettleVoucher field of CustTrans and Voucher field of TaxWithholdTrans_IN
                // This is to filter the payment transactions which are linked to invoice transactions which are settled.
                this.query().dataSourceTable(tableNum(CustTrans)).addDataSource(tableNum(TaxWithholdTrans_IN), #TaxWithholdTransTaxAdjustment);
                this.query().dataSourceName(#TaxWithholdTransTaxAdjustment).addLink(fieldNum(TaxWithholdTrans_IN, Voucher), fieldNum(CustTrans, LastSettleVoucher));
                this.query().dataSourceName(#TaxWithholdTransTaxAdjustment).addRange(fieldNum(TaxWithholdTrans_IN, SettledVoucher)).value(SysQuery::valueNotEmptyString());
                this.query().dataSourceName(#TaxWithholdTransTaxAdjustment).joinMode(JoinMode::NoExistsJoin);

                // Filter the tax adjustment records.
                this.query().dataSourceTable(tableNum(CustTrans)).addDataSource(tableNum(CustTrans_IN));
                this.query().dataSourceTable(tableNum(CustTrans_IN)).addLink(fieldNum(CustTrans, RecId), fieldNum(CustTrans_IN, CustTrans));
                this.query().dataSourceTable(tableNum(CustTrans_IN)).addRange(fieldNum(CustTrans_IN, CustTransRefRecId)).value(SysQuery::valueNot(0));
                this.query().dataSourceTable(tableNum(CustTrans_IN)).joinMode(JoinMode::NoExistsJoin);
            }
            // </GIN>

            // <GJP>
            element.initDRsCRsControls();
            // </GJP>
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            Query query ;
            QueryRun queryRun;
            QueryBuildDataSource qbdsCustInterestJour;
            QueryBuildDataSource qbdsCustInterestTrans;
            QueryBuildDataSource qbdsGeneralJournalEntry;
            QueryBuildDataSource qbdsSubledgerVoucherLink;
            CustTrans custTransLocal;
            CustInterestJour custInterestJour;
            CustInterestTrans custInterestTrans;
            GeneralJournalEntry generalJournalEntry;
            SubledgerVoucherGeneralJournalEntry subledgerVoucherLink;
            FormRun callerForm;
            Set vouchers;
            SetEnumerator vouchersEnumerator;

            callerForm = element.args().caller() as FormRun;
            custNsfAction.enabled(false);

            if ((callerForm && callerForm.name() == formstr(CustOpenInvoicesListPage)) && element.args().dataset() == tablenum(CustTrans))
            {
                this.query().dataSourceTable(tablenum(CustTrans)).clearDynalinks();

                custTransLocal = element.args().record();

                // When the parmEnum of caller is LedgerTransType::CollectionLetter, it will add ranges TransType, CollectionLetterCode and AccountNum on CustTrans table so that only the selected
                // records can be displayed.
                if (element.args().parmEnum() == enum2Int(LedgerTransType::CollectionLetter))
                {
                    SysQuery::findOrCreateRange(this.query().dataSourceName(custTrans_ds.name()), fieldnum(CustTrans,TransType)).value(queryValue(LedgerTransType::CollectionLetter));
                    this.query().dataSourceName(custTrans_ds.name()).addRange(fieldnum(CustTrans, CollectionLetterCode)).value(queryValue(custTransLocal.CollectionLetterCode));
                    this.query().dataSourceName(custTrans_ds.name()).addRange(fieldnum(CustTrans, AccountNum)).value(queryValue(custTransLocal.AccountNum));
                }

                // When the parmEnum of caller is LedgerTransType::Interest, it will join data sources CustInterestJour and CustInterestTrans and adds ranges to it so that only the selected
                // records can be displayed.
                if (element.args().parmEnum() == enum2Int(LedgerTransType::Interest))
                {
                    query = new Query();
                    qbdsCustInterestJour = query.addDataSource(tablenum(CustInterestJour));
                    qbdsCustInterestTrans = qbdsCustInterestJour.addDataSource(tablenum(CustInterestTrans));
                    qbdsCustInterestTrans.relations(true);
                    qbdsCustInterestTrans.joinMode(JoinMode::InnerJoin);

                    qbdsGeneralJournalEntry = qbdsCustInterestTrans.addDataSource(tablenum(GeneralJournalEntry));
                    qbdsGeneralJournalEntry.relations(true);
                    qbdsGeneralJournalEntry.joinMode(JoinMode::InnerJoin);

                    qbdsSubledgerVoucherLink = qbdsGeneralJournalEntry.addDataSource(tablenum(SubledgerVoucherGeneralJournalEntry));
                    qbdsSubledgerVoucherLink.relations(true);
                    qbdsSubledgerVoucherLink.joinMode(JoinMode::InnerJoin);

                    qbdsCustInterestTrans.addRange(fieldnum(CustInterestTrans, CustTransId)).value(queryValue(custTransLocal.RecId));
                    qbdsCustInterestJour.addRange(fieldnum(CustInterestJour, AccountNum )).value(queryValue(custTransLocal.AccountNum ));
                    qbdsCustInterestJour.addRange(fieldnum(CustInterestJour, Status )).value(queryValue(enum2int(PrintPostCancel::Posted)));
                    queryRun = new QueryRun(query);
                    vouchers = new Set(Types::String);
                    do
                    {
                        custInterestJour = queryRun.get(tablenum(CustInterestJour));
                        vouchers.add(custInterestJour.FeeVoucher);
                        custInterestTrans = queryRun.get(tablenum(CustInterestTrans));
                        generalJournalEntry = queryRun.get(tablenum(GeneralJournalEntry));
                        subledgerVoucherLink = queryRun.get(tablenum(SubledgerVoucherGeneralJournalEntry));
                        if (subledgerVoucherLink.Voucher != custInterestJour.FeeVoucher)
                        {
                            vouchers.add(subledgerVoucherLink.Voucher);
                        }
                    }
                    while (queryRun.next());

                    vouchersEnumerator = vouchers.getEnumerator();
                    while (vouchersEnumerator.moveNext())
                    {
                        this.query().dataSourceTable(tablenum(CustTrans)).addRange(fieldnum(CustTrans, Voucher)).value(queryValue(vouchersEnumerator.current()));
                    }
                }
            }
            // <GEEU>
            custVendCompensation.enabled(false);
            // </GEEU>

            if (element.args().menuItemName() == menuItemDisplayStr(CustCollectionsDisputeHistoryChartCustTrans))
            {
                Map formParameters = element.args().parmObject() as Map;

                CustAccount accountFilter = formParameters.lookup('parameter2');
                CustCollectionsPoolId poolId = formParameters.lookup('yValue');
                str status = formParameters.lookup('parameter1');

                select firstonly custFilterTmp;

                if (CustCollectionsDispHistChartCustTransQryPerfFlight::instance().isEnabled())
                {
                    if (!custFilterTmp && poolId == '')
                    {
                        this.query().dataSourceTable(tablenum(CustCollectionsCustFilterTmp)).enabled(false);
                    }
                }
               
                if (accountFilter != '')
                {
                    SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(CustTrans, AccountNum)).value(SysQuery::value(accountFilter));
                }

                if (poolId != '')
                {
                    if (!custFilterTmp)
                    {
                        CustCollectionsPool pool;
                        select firstonly pool
                            where pool.Name == poolId;

                        QueryRun qr = new QueryRun(pool.QueryPacked);

                        CustTable cust;

                        Set customers = new Set(Types::String);

                        while (qr.next())
                        {
                            if (qr.changed(tableNum(DirPartyTable)))
                            {
                                cust = qr.get(tableNum(CustTable));

                                customers.add(cust.AccountNum);
                            }
                        }

                        SetEnumerator enumer = customers.getEnumerator();

                        while (enumer.moveNext())
                        {
                            custFilterTmp.AccountNum = enumer.current();
                            custFilterTmp.doInsert();
                        }

                        QueryBuildDataSource custFilterTmpDS = SysQuery::findOrCreateDataSource(custTrans_ds.query(), tableNum(CustCollectionsCustFilterTmp));
                        custFilterTmpDS.joinMode(JoinMode::ExistsJoin);
                        custFilterTmpDS.addLink(fieldNum(CustTrans, AccountNum), fieldNum(CustCollectionsCustFilterTmp, AccountNum));
                    }
                }

                element.applyCustDisputeStatusQueryFilter(this.query(), status);
            }
            else if (element.args().menuItemName() == menuItemDisplayStr(CustCollectionsBICustTrans))
            {
                CustCollectionsBIReportsHandler::buildQueryForCustTrans(custTrans_ds.query(), element.args().parmEnum(), element.args().parmObject() as PBIReportSelectedData);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret = super();
            // <GIN><GEERU><GEEU>
            #ISOCountryRegionCodes
            // </GEEU></GEERU></GIN>

            custTransDetails.setCustVendTrans(custTrans);

            element.setBillingClassificationVisible();

            if (custTrans.open())
            {
                custTrans_ds.allowEdit(true);
                custTrans_W_ds.allowEdit(true);

                if (parentCoda)
                {
                    if (bankAccountStatementLines.isIncludedElsewhere(custTrans.RecId, SysModule::Cust))
                    {
                        custTrans_ds.allowEdit(false);
                        CustTrans_W_ds.allowEdit(false);
                        include.allowEdit(false);
                    }
                    else
                    {
                        include.allowEdit(true);
                    }
                }

                custTrans_ds.object(fieldnum(CustTrans, PaymMode)).allowEdit(true);

                CustDirectDebitMandate::defaultAndDisplayMandate(
                    custTrans.AccountNum,
                    custTrans.PaymMode,
                    custTrans.DirectDebitMandate,
                    false,
                    custTrans_ds,
                    fieldNum(CustTrans,DirectDebitMandate));

                if (custTrans.TransType == LedgerTransType::Payment)
                {
                    // This is custom logic only for the customer transaction form since we should not allow
                    // users the ability to add a mandate on a payment document.
                    custTrans_ds.object(fieldNum(CustTrans, DirectDebitMandate)).allowEdit(false);
                    custTrans_ds.object(fieldNum(CustTrans, DirectDebitMandate)).skip(true);
                }
            }
            else
            {
                custTrans_ds.allowEdit(false);
                custTrans_W_ds.allowEdit(false);
                if (parentCoda)
                {
                    include.allowEdit(false);
                }

                custTrans_ds.object(fieldNum(CustTrans, DirectDebitMandate)).allowEdit(false);
            }

            if (custTrans.TransType == LedgerTransType::Payment)
            {
                // If the payment has been cancelled, we can not cancel it again.
                if (custTrans.CancelledPayment == NoYes::Yes)
                {
                    bankPaymentCancel.enabled(false);
                }
                else
                {
                    // disable if there is a post dated check
                    NoYes customerPostedChecksFound;
                    if (CustVendPDCManager::isPostDatedChecksEnabled())
                    {
                        customerPostedChecksFound = CustVendPDCRegister::existsForCustTrans(custTrans.RecId);
                    }
                    bankPaymentCancel.enabled(!customerPostedChecksFound);

                    if (custTrans.BankLCExportLine != 0)
                    {
                        bankPaymentCancel.enabled(false);
                    }
                }
            }
            else
            {
                bankPaymentCancel.enabled(false);
            }

            if (custTrans.Invoice != '' || custTrans.BillOfExchangeID != '')
            {
                custBillOfExchangeInvoice.enabled(true);
                if (custTrans.BillOfExchangeID != '')
                {
                    custBillOfExchangeInvoice.text("@SYS9954");
                }
                else
                {
                    custBillOfExchangeInvoice.text("@SYS69795");
                }
            }
            else
            {
                custBillOfExchangeInvoice.enabled(false);
            }

            //<GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                custReverseTransactions.enabled(CustTrans::checkReversal(custTrans) &&
                                                TaxWithholdTrans_IN::enableReverseButton(custTrans));
                custReverseTransBase.enabled((!TransactionReversalTrans::findTransactionReversalTrans(tableNum(CustTrans), custTrans.RecId) ? true : false) &&
                                               TaxWithholdTrans_IN::enableReverseButton(custTrans));
            }
            else
            {
                //</GIN>
                custReverseTransactions.enabled(CustTrans::checkReversal(custTrans));
                custReverseTransBase.enabled(TransactionReversalTrans::findTransactionReversalTrans(tablenum(CustTrans), custTrans.RecId) ? true : false);
                //<GIN>
            }
            //</GIN>

            element.enableFieldsActive();

            // <GEERU><GEEU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoCZ, #isoHU, #isoPL]))
            {
                custVendPrepaymentHandling_W.enabled(! custTrans.Invoice && ! custTrans.Closed);
                advanceInvoiceLink_CZ.enabled(custTrans.Prepayment && ! custTrans.Invoice && ! custTrans.Closed);
                element.enableFieldsActive_W();
            }
            // </GEEU></GEERU>

            // <GEELV>
            if (showSettledTax)
            {
                showSettledTax.formLinkActive();
            }
            // </GEELV>

            custNsfAction.enabled(
                bankPaymentCancel.enabled() &&
                custTrans.CompanyBankAccountId &&
                custTrans.AmountCur < 0 &&
                !custTrans.Invoice);

            // enable/disable reverse and cancel payment button if invoice is parent or adjusting
            if (custTrans.isParentOrAdjustingInvoice())
            {
                custReverseTransactions.enabled(false);
                bankPaymentCancel.enabled(false);
            }

            element.adjustVisibilityBasedOnDisputeStatus();

            element.enableCollectionLetterCode();

            element.enableCustAutomationExclusion();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>interestNoteDate</Name>
						<Source><![CDATA[
        display TransDate interestNoteDate()
        {
            return custTransDetails.interestNoteDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>collectionLetterDate</Name>
						<Source><![CDATA[
        display TransDate collectionLetterDate()
        {
            return custTransDetails.collectionLetterDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>include</Name>
						<Source><![CDATA[
        edit NoYes include(boolean _set,
                           CustTrans _custTrans,
                           NoYes _include)
        {
            if (_set)
            {
                if (_include == NoYes::Yes)
                {
                    bankAccountStatementLines.includeInCoda(_custTrans.RecId, SysModule::Cust);
                }
                else
                {
                    bankAccountStatementLines.excludeFromCoda(_custTrans.RecId, SysModule::Cust);
                }
            }
            else
            {
                _include = bankAccountStatementLines.isIncluded(_custTrans.RecId, SysModule::Cust);
            }
            return _include;
        }

]]></Source>
					</Method>
					<Method>
						<Name>includedElsewhere</Name>
						<Source><![CDATA[
        display ImageRes includedElsewhere(CustTrans _custTrans)
        {
            if (bankAccountStatementLines.isIncludedElsewhere(_custTrans.RecId, SysModule::Cust))
            {
                return imageList.image(#ImageAboveEstimate);
            }

            return -1;
        }

]]></Source>
					</Method>
					<Method>
						<Name>parmNewQuery</Name>
						<Source><![CDATA[
        void parmNewQuery(Query _query)
        {
            Query tmpQuery;

            tmpQuery = new Query(oldQuery);
            SysQuery::mergeRanges(tmpQuery, new Query(_query));

            this.query(tmpQuery);
            criteriaOpen = this.query().dataSourceNo(1).findRange(fieldnum(CustTrans,Closed));
            transTypeRange = this.query().dataSourceNo(1).findRange(fieldnum(CustTrans, TransType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            BankChequePaymTrans paymTrans;
            TmpBankPaym2Invoice paymInvoice;
            // <GEERU>
            SalesPurchBookDataMap_RU bookDataMap;
            // </GEERU>
            TransDate transDate;
            Voucher voucher;
            CompanyId paymCompany;
            // <GEERU>
            CompanyId invCompany;
            RefRecId paymRecId = -1;
            RefRecId invRecId = -1;
            #isoCountryRegionCodes
            // </GEERU>

            boolean setRange = false;

            Query q;
            QueryBuildDataSource qbdS;
            QueryBuildRange range;

            switch (common.TableId)
            {
                case tablenum(BankChequePaymTrans):
                    paymTrans = common;
                    paymCompany = paymTrans.InvoiceCompany;
                    transDate = paymTrans.InvoiceTransDate;
                    voucher = paymTrans.InvoiceVoucher;
                    setRange = true;
                    break;
                case tablenum(TmpBankPaym2Invoice):
                    paymInvoice = common;
                    paymCompany = paymInvoice.InvoiceCompany;
                    transDate = paymInvoice.InvoiceTransDate;
                    voucher = paymInvoice.InvoiceVoucher;
                    setRange = true;
                    break;
                case tableNum(CFMPaymentRequestTable):
                    CFMPaymentRequestTable paymentRequest = common;

                    if (element.args().caller() is CFMPaymentRequestPaymentTrans)
                    {
                        CFMPaymentRequestPaymentTrans requestPaymentTrans = element.args().caller();
                        paymRecId = requestPaymentTrans.findPaymentSource(tableNum(CustTrans));
                    }
                    else
                    {
                        paymRecId = paymentRequest.HeaderRefRecId;
                    }

                    setRange = true;
                    break;

                case tableNum(CFMAnalyticFormDataEditTmp):
                    CFMAnalyticFormDataEditTmp dataEditTable = common;
                    changecompany(dataEditTable.SourceDataAreaId)
                    {
                        paymRecId = CustTransOpen::findRefId(dataEditTable.SourceRefRecId).RefRecId;
                    }
                    setRange = true;
                    break;
                // <GEERU>
                case tableNum(SalesBookVATProcessLogTrans_RU):
                case tableNum(SalesBookTrans_RU):
                case tableNum(PurchBookVATProcessLogTrans_RU):
                case tableNum(PurchBookTrans_RU):
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                    {
                        bookDataMap = common;
                        if (element.args().parmEnum() == NoYes::Yes)
                        {
                            paymCompany = bookDataMap.PaymentCompany;
                            paymRecId = bookDataMap.PaymentRecIdRef;
                        }
                        else
                        {
                            invCompany = bookDataMap.InvoiceCompany;
                            invRecId = bookDataMap.InvoiceRecIdRef;
                        }
                        setRange = true;
                    }
                    break;
                // </GEERU>
            }

            if (setRange)
            {
                q = custTrans_ds.query();

                if (paymCompany != '')
                {
                    q.clearCompanyRange();
                    q.addCompanyRange(paymCompany);
                }

                // <GEERU>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    if (invCompany != '')
                    {
                        q.clearCompanyRange();
                        q.addCompanyRange(invCompany);
                    }

                    qbdS = q.dataSourceTable(tableNum(CustTrans));

                    if (transDate)
                    {
                        range = qbdS.rangeField(fieldNum(CustTrans, TransDate));
                        range.value(queryValue(transDate));
                    }

                    if (voucher)
                    {
                        range = qbdS.rangeField(fieldNum(CustTrans, Voucher));
                        range.value(queryValue(voucher));
                    }

                    if (paymRecId != -1)
                    {
                        range = qbdS.rangeField(fieldNum(CustTrans, RecId));
                        range.value(queryValue(paymRecId));
                    }

                    if (invRecId != -1)
                    {
                        range = qbdS.rangeField(fieldNum(CustTrans, RecId));
                        range.value(queryValue(invRecId));
                    }
                }
                else
                {
                    // </GEERU>
                    qbdS = q.dataSourceTable(tableNum(CustTrans));

                    range = qbdS.rangeField(fieldNum(CustTrans, TransDate));
                    range.value(queryValue(transDate));

                    range = qbdS.rangeField(fieldNum(CustTrans, Voucher));
                    range.value(queryValue(voucher));
                    // <GEERU>
                }
                // </GEERU>
            }

            // LookupRecord needs to stay before super().
            // Super() calls executeQuery on datasource so that way we save 1 roundtrip to database and do not require research call.
            if (element.args().menuItemName() == menuitemdisplaystr(CustTransSelectOne) && formHasMethod(element.args().caller(), identifierstr(parmCustTransRecId)))
            {
                element.args().lookupRecord(CustTrans::find(element.args().caller().parmCustTransRecId()));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDisputeReasonComment</Name>
						<Source><![CDATA[
        public display ReasonComment displayDisputeReasonComment()
        {
            if (disputeHelper)
            {
                return disputeHelper.parmReasonComment();
            }
            else
            {
                return '';
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDisputeReasonCode</Name>
						<Source><![CDATA[
        public display ReasonCode displayDisputeReasonCode()
        {
            if (disputeHelper)
            {
                return disputeHelper.parmReasonCode();
            }
            else
            {
                return '';
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDisputeStatus</Name>
						<Source><![CDATA[
        public display CustVendDisputeStatus displayDisputeStatus()
        {
            return element.displayDisputeStatus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>showtaxWithholdStatus_IN</Name>
						<Source><![CDATA[
        /// <summary>
        /// This method displays the transaction status in Customer transactions form
        /// </summary>
        /// <param name="_custTrans">
        /// Custtrans buffer is passed as argument for which the transaction status should be displayed.
        /// </param>
        /// <returns>
        /// Returns the Transaction status for the transaction whether it is adjusted or posted.
        /// </returns>
        display TaxWithholdTransactionstatus_IN showtaxWithholdStatus_IN(CustTrans _custTrans)
        {
            TaxWithholdTrans_IN taxWithholdTrans;
            TaxWithholdTransactionstatus_IN transactionStatus = TaxWithholdTransactionstatus_IN::None;

            select firstonly TransactionStatus from taxWithholdTrans
                where taxWithholdTrans.SourceTransVoucher == _custTrans.Voucher
                   && taxWithholdTrans.SourceTransDate == _custTrans.TransDate;

            if (taxWithholdTrans.RecId != 0)
            {
                transactionStatus = taxWithholdTrans.TransactionStatus;
            }
            else
            {
                select firstonly TransactionStatus from taxWithholdTrans
                    where taxWithholdTrans.Voucher == _custTrans.Voucher
                       && taxWithholdTrans.TransDate == _custTrans.TransDate;

                if (taxWithholdTrans.RecId != 0)
                {
                    transactionStatus = taxWithholdTrans.TransactionStatus;
                }
            }

            return transactionStatus;
        }

]]></Source>
					</Method>
					<Method>
						<Name>orderAccountName</Name>
						<Source><![CDATA[
        public display CustName orderAccountName()
        {
            DirPartyTable partyTable;
            CustTable custTable;

            select firstonly Party from custTable
            where custTable.AccountNum == custTrans.OrderAccount
            join Name from partyTable
                where partyTable.RecId == custTable.Party;

            return partyTable.Name;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU, #isoPL]))
            {
                custVendCompensation.enabled(true);

                for (CustTrans trans = getFirstSelection(custTrans_ds); trans; trans = custTrans_ds.getNext())
                {
                    if (trans.Closed)
                    {
                        custVendCompensation.enabled(false);
                        break;
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDisputePromiseFollowUpDate</Name>
						<Source><![CDATA[
        public display TransDate displayDisputePromiseFollowUpDate()
        {
            return disputeHelper.parmFollowUpDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDisputePromiseAmount</Name>
						<Source><![CDATA[
        public display AmountCur displayDisputePromiseAmount()
        {
            return disputeHelper.parmAmountCur();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();

            CustVendTransFilterHelper::setDefaultCompany(CustTrans.DataAreaId);

            if (isCrossCompanyView && CustTrans.company() != lastMarkedCompany)
            {
                element.setKnownCountryRegionFieldVisibility(CustTrans.company());

                lastMarkedCompany = CustTrans.company();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>crossCompanyPartyName</Name>
						<Source><![CDATA[
        public display CustName crossCompanyPartyName(CustTrans _custTrans)
        {
            DirPartyTable partyTable;
            CustTable custTable;

            select firstonly crosscompany Name from partyTable
                exists join custTable
                    where partyTable.RecId == custTable.Party
                        && custTable.AccountNum == _custTrans.AccountNum
                        && custTable.DataAreaId == _custTrans.DataAreaId;

            return partyTable.Name;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DirectDebitMandate</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return CustDirectDebitMandate::resolveReference(
                    custTrans.AccountNum,
                    _formReferenceControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return CustDirectDebitMandate::lookupReference(
                    custTrans.AccountNum,
                    _formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (CustTrans.AmountCur < 0)
                {
                    // This is custom logic only for the customer transaction form since we should not allow
                    // users the ability to add a mandate on a credit document.
                    custTrans.DirectDebitMandate = 0;
                    custTrans_ds.object(fieldNum(CustTrans, DirectDebitMandate)).allowEdit(false);
                    custTrans_ds.object(fieldNum(CustTrans, DirectDebitMandate)).skip(true);
                }
                else
                {
                    custTrans.DirectDebitMandate = CustDirectDebitMandate::defaultAndDisplayMandate(
                        custTrans.AccountNum,
                        custTrans.PaymMode,
                        custTrans.DirectDebitMandate,
                        false,
                        custTrans_ds,
                        fieldNum(CustTrans, DirectDebitMandate));
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ThirdPartyBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Performs a lookup on customer bank account.
            /// </summary>
            /// <param name = "_formControl">Selected form control.</param>
            /// <param name = "_filterStr">Selected value of the control.</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustBankAccount::lookupBankAccount(_formControl, CustTrans.AccountNum);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustTrans_W</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.shouldJoinCountrySpecificDetails())
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            // New records for the outer join data source CustTrans_W will have null values for all fields including DataAreaId.
            // For cross-company queries, a dataAreaId is not automatically enforced on new records.
            if (CustTrans_W.CustTrans == 0)
            {
                CustTrans_W_ds.company(CustTrans.company());
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // no-op because a record with an empty FK is not valid
            if ((SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP])
                 || FeatureStateProvider::isFeatureEnabled(SplitPaymentMandatoryRuleFeature_PL::instance()))
                && CustTrans_W.CustTrans != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>OriginalDocumentButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the original document form for the selected transaction.
        /// </summary>
        void clicked()
        {
            Args args;
            Originaldocuments originaldocuments;
            Object callerForm = element.args().caller();

            CustVendTransFilterHelper::setDefaultCompany(CustTrans.DataAreaId);

            changecompany(CustTrans.DataAreaId)
            {
                // Opens the original transaction form by relating CustTrans with tmpLedgerBase table when caller is CustOpenInvoicesListPage
                // Otherwise pass the current record to the original document form so that original transaction form will open.
                FormRun callerFormRun = callerForm as FormRun;
                if (callerFormRun && formHasMethod(callerFormRun, identifierStr(name)) && callerFormRun.name() == formStr(CustOpenInvoicesListPage))
                {
                    originaldocuments = Originaldocuments::construct(custTrans);
                    originaldocuments.findRelations();
                    tmpLedgerBase.setTmpData(originaldocuments.relations());
                    tmpLedgerBase_ds.executeQuery();

                    originaldocuments.show(tmpLedgerBase);
                }
                else
                {
                    args = new Args();
                    args.caller(element);
                    args.record(custTrans);

                    new MenuFunction(menuitemDisplayStr(Originaldocuments), MenuItemType::Display).run(args);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LvSettledTaxPostings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!showSettledTax)
            {
                showSettledTax = LvShowSettledTax::newFromForm(element, custTrans_DS);
            }

            showSettledTax.formOpen();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustCollections</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args args = new Args(element);
            args.parmObject(CustCollectionsForm::construct(custTrans));

            this.menufunction().run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustReverseTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            custTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankPaymentCancel</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            custTrans_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustNsfAction</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            custTrans_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendCompensation</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustVendTrans::validateForCompensation(FormDataUtil::getFormDataSource(custTrans));

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToAdjustmentJournal_IN</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Object callerForm;

            super();

            if (TaxWithholdParameters_IN::checkTaxParameters()
                && element.args().caller() != null
                && element.args().caller().name() == formStr(LedgerTaxWithholdJournal_IN))
            {
                callerForm = element.args().caller();
                callerForm.setTransData(custTrans.Voucher, custTrans.TransDate, custTrans.TableId, custTrans.RecId);
            }
            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompanyFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean wasModified = super();

            if (wasModified)
            {
                filterHelper.addSelectedCompaniesToQuery();
                CustTrans_DS.executeQuery();
            }

            return wasModified;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowOpenOptions</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            CustVendShowTransaction showTransaction = this.selection();

            element.setTransactionsToDisplay(showTransaction);

            CustTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowOpenDateFilter</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.setTransactionsToDisplay(ShowOpenOptions.selection());
            CustTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HideCurrencyRevaluation</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            str transTypeRangeValue = SysQueryRangeUtil::valueUnlimited();

            if (this.value())
            {
                transTypeRangeValue = CustVendTransFormHelper::getHideCurrencyRevaluationQueryValue();
            }

            transTypeRange.value(transTypeRangeValue);

            CustTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankDocumentTypeFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.bankDocumentTypeFilterModified();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustTrans_DueDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            CustTrans currentCustTrans = element.CustTrans;

            boolean hasMoreThanOneCustTransOpen = this.hasMoreThanOneCustTransOpen(currentCustTrans);

            if (hasMoreThanOneCustTransOpen)
            {
                this.openCustTransOpenDetailsForm(currentCustTrans);
            }
            else
            {
                this.openCustTransDueDateCashDiscountForm(currentCustTrans);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>hasMoreThanOneCustTransOpen</Name>
						<Source><![CDATA[
        private boolean hasMoreThanOneCustTransOpen(CustTrans _custTrans)
        {
            CustTransOpen custTransOpen;

            select count(RecId) from custTransOpen
                    where custTransOpen.RefRecId == _custTrans.RecId;

            return custTransOpen.RecId > 1;
        }

]]></Source>
					</Method>
					<Method>
						<Name>openCustTransDueDateCashDiscountForm</Name>
						<Source><![CDATA[
        private void openCustTransDueDateCashDiscountForm(CustTrans _custTrans)
        {
            changecompany(_custTrans.DataAreaId)
            {
                MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(CustTransDueDateCashDiscount), MenuItemType::Display);

                if (menuFunction && menuFunction.checkAccessRights())
                {
                    Args args = new Args();
                    args.record(_custTrans);
                    args.caller(element);

                    menuFunction.run(args);
                }
                else
                {
                    this.openCustTransOpenDetailsForm(_custTrans);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>openCustTransOpenDetailsForm</Name>
						<Source><![CDATA[
        private void openCustTransOpenDetailsForm(CustTrans _custTrans)
        {
            changecompany(_custTrans.DataAreaId)
            {
                MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(CustTransOpen), MenuItemType::Display);

                if (menuFunction && menuFunction.checkAccessRights())
                {
                    Args args = new Args();
                    args.record(_custTrans);
                    Args.caller(element);

                    menuFunction.run(args);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustTrans</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAutomationExclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSchedId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>AccountDateIdx</Index>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ReasonTableRef</Name>
			<Table>ReasonTableRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpLedgerBase</Name>
			<Table>TmpLedgerBase</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>COSCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>COSNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Counter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCodeString</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TraceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BankLCCustTrans</Name>
			<Table>BankLCCustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTrans_W</Name>
			<Table>CustTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdvancePayment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectReporting_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustConsInvoice_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimensionReporting_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrepaymentFactureId_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RTax25Amortisation_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustVendTransPartyTmp</Name>
			<Table>CustVendTransPartyTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustCollectionsCustFilterTmp</Name>
			<Table>CustCollectionsCustFilterTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTrans</JoinSource>
			<LinkType>NotExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS6077</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">DetailsMaster</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">DetailsFormMaster</Style>
		<TitleDataSource xmlns="">CustTrans</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ActionPaneButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LedgerTransact</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>CustTrans</DataSource>
								<MenuItemName>LedgerTransVoucher1</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ViewSettlements</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>CustTrans</DataSource>
								<MenuItemName>SettlementView</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>SettlementButtonGroup</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SettleTransButton</Name>
										<AllowEdit>No</AllowEdit>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CustOpenTrans</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>UndoSettleButton</Name>
										<AllowEdit>No</AllowEdit>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CustOpenTransReverse</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SettlementButton</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CustSettlement</MenuItemName>
									</AxFormControl>
								</Controls>
								<Text>@SYS10163</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OriginalDocumentButton</Name>
								<ConfigurationKey>LedgerBasic</ConfigurationKey>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS70585</HelpText>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS24055</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LvSettledTaxPostings</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>LV</CountryRegionCodes>
								<ElementPosition>1677721598</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@GLS101545</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@GLS108576</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustVendTransPostingLog_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1744830462</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>CustTrans</DataSource>
								<MenuItemName>CustVendTransPostingLog_RU</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustTransOpen</Name>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CustTransOpen</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CollectionsDetailsMenus</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustCollectionsTransactionStatusHistory</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CustCollectionsTransactionStatusHistory</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustCollections</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CustCollections</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@AccountsReceivable:CustTransCollectionsDetail</Text>
									</AxFormControl>
								</Controls>
								<MultiSelect>No</MultiSelect>
								<Text>@SYS21751</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustBillOfExchangeInvoice</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CustBillOfExchangeInvoice</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ReverseButtonGroup</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustReverseTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>TransactionReversal_Cust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BankPaymentCancel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>BankPaymentCancel</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustNsfAction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS308541</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CustNsf</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustReverseTransBase</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>TransactionReversalTransBase_Cust</MenuItemName>
									</AxFormControl>
								</Controls>
								<Text>@SYS22850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Cov</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>CustTrans</DataSource>
								<MenuItemName>LedgerCoverage</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustTransTmpCreditInvoicing</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2146172926</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>CustTrans</DataSource>
								<MenuItemName>CustTransTmpCreditInvoicing</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustVendCompensation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2147024894</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>CustTrans</DataSource>
								<MenuItemName>CustVendCompensationCust</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustVendPrepaymentHandling_W</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2147090430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CustVendPrepaymentHandling_W</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>AdvanceInvoiceLink_CZ</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2147221502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CzCustAdvanceInvoiceLink</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>AdvanceInvoiceSettlement_W</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2147352574</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CustAdvanceInvoiceSettlement_W</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>CzTaxDocument</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2147352574</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@GLS108302</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CzTaxDocumentCreate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CzTaxDocumentCreate_Cust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxDocumentTable_CZ</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CzTaxDocumentTable_Cust</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxDocumentPrint_CZ</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CzTaxDocumentTable_Cust</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@GLS108299</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>TransferToAdjustmentJournal_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>2147418110</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@GLS222693</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<KeyTip>Set selected transaction voucher as reference for adjustment transaction.</KeyTip>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@GLS222692</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CFMPaymentRequestView</Name>
								<ConfigurationKey>CFMCashflowManagement</ConfigurationKey>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>CustTrans</DataSource>
								<MenuItemName>CFMPaymentRequestGrid_CustTrans</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButtonPrint</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CashRegisterReceipt_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CashRegisterReceiptPrint_W</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@FiscalServices:AS_CashRegisterFiscalTrans_WForm_MenuItemPrint</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>NavListQuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>CustTrans_Voucher</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CustomFilterGroup</Name>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>ShowOpenOnlyNavListFilter</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editShowOpenOnly</DataMethod>
								<Label>@SYS23760</Label>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavList_CustTrans_Voucher</Name>
								<ElementPosition>1073741823</ElementPosition>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Voucher</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>NavList_CustTrans_TransType</Name>
								<ElementPosition>1610612734</ElementPosition>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransType</DataField>
								<DataSource>CustTrans</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>NavList_CustTrans_Date</Name>
								<ElementPosition>1879048190</ElementPosition>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransDate</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavList_CustTrans_Invoice</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Invoice</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>NavList_CustTrans_AmountCur</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2118123518</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Alignment>Left</Alignment>
								<DataField>AmountCur</DataField>
								<DataSource>CustTrans</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
								<SignDisplay>Prefixed</SignDisplay>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavList_CustTrans_CurrencyCode</Name>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>CurrencyCode</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
						</Controls>
						<DefaultAction>GridDefaultAction</DefaultAction>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>PanelTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsPanelTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DetailsTitleGroup</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DetailsHeaderTitle</Name>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>titleFields</DataMethod>
										<DataSource>CustTrans</DataSource>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>DetailsTab</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>SummaryTab</Name>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>Summary_CustTrans_TransType</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TransType</DataField>
												<DataSource>CustTrans</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>Summary_CustTrans_Date</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TransDate</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Summary_CustTrans_Invoice</Name>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Invoice</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Summary_CustTrans_Txt</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Txt</DataField>
												<DataSource>CustTrans</DataSource>
												<LabelPosition>Above</LabelPosition>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Summary_AccountNum</Name>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccountNum</DataField>
												<DataSource>CustTrans</DataSource>
												<FastTabSummary>Yes</FastTabSummary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Summary_AccountNum_PartyName</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>custTableName</DataMethod>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Summary_CustTrans_AmountCur</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2118123518</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>AmountCur</DataField>
												<DataSource>CustTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
												<SignDisplay>Prefixed</SignDisplay>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Summary_RemainAmount</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2130706430</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>RemainAmountCur</DataMethod>
												<DataSource>CustTrans</DataSource>
												<Label>@SYS6350</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Summary_CustTrans_CurrencyCode</Name>
												<ElementPosition>2139095038</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CurrencyCode</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Summary_CustTrans_AmountMST</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>AmountMST</DataField>
												<DataSource>CustTrans</DataSource>
												<Label>@SYS12227</Label>
												<LabelPosition>Above</LabelPosition>
												<NoOfDecimals>-1</NoOfDecimals>
												<SignDisplay>Prefixed</SignDisplay>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Summary_RemainAmountMST</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>RemainAmountMST</DataMethod>
												<DataSource>CustTrans</DataSource>
												<Label>@SYS53076</Label>
												<LabelPosition>Above</LabelPosition>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Summary_BillOfExchangeGroup</Name>
												<ConfigurationKey>CustBillOfExchange</ConfigurationKey>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Summary_BillOfExchangeGroup_BillOfExchangeID</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>BillOfExchangeID</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>Summary_BillOfExchangeGroup_BillOfExchangeSeqNum</Name>
														<Type>Integer</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>BillOfExchangeSeqNum</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>Summary_BillOfExchangeGroup_BillOfExchangeStatus</Name>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>BillOfExchangeStatus</DataField>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Summary_BillOfExchangeGroup_BankRemittanceFileId</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>BankRemittanceFileId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataGroup>BillOfExchange</DataGroup>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS15560</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>DocumentTab</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Ledger</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>Correct</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Correct</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>CustTrans_W_InvoicePostingType_RU</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1744830462</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>InvoicePostingType_RU</DataField>
														<DataSource>CustTrans_W</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PostingProfile</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PostingProfile</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Group_Group</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>CustTrans_CustBillingClass</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>CustTrans_CustBillingClass_BillingClassification</Name>
																<DataRelationPath>CustBillingClassification</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>CustTrans</DataSource>
														<FrameType>None</FrameType>
														<ReferenceField>CustBillingClassification</ReferenceField>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Invoice</Name>
												<ElementPosition>1744830462</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>Invoice_Approver</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Invoice_Approver_PersonnelNumber</Name>
																<DataRelationPath>HcmWorker</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>CustTrans</DataSource>
														<ReferenceField>Approver</ReferenceField>
														<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>Approved</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Approved</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>DocumentNum</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>DocumentNum</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>DocumentDate</Name>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>DocumentDate</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CustTrans_Invoice_Invoice</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>2080374782</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Invoice</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OrderAccount</Name>
														<ElementPosition>2113929214</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>OrderAccount</DataField>
														<DataSource>CustTrans</DataSource>
														<FastTabSummary>Yes</FastTabSummary>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Summary_OrderAccount_PartyName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>orderAccountName</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Invoice_TaxInvoiceSalesId</Name>
														<ElementPosition>2130706430</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>TaxInvoiceSalesId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CustTrans_W_PrepaymentFactureId_W</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>2139095038</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PrepaymentFactureId_W</DataField>
														<DataSource>CustTrans_W</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Reason</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Reason_Reason</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Reason</DataField>
														<DataSource>ReasonTableRef</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Reason_ReasonComment</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReasonComment</DataField>
														<DataSource>ReasonTableRef</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>Reason</DataGroup>
												<DataSource>ReasonTableRef</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>TransactionStatus_IN</Name>
												<CountryRegionCodes>IN</CountryRegionCodes>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>showtaxWithholdStatus_IN</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>showtaxWithholdStatus_IN</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<Caption>@SYS108804</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupHistory</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>Reversed</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>reversed</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Label>@SYS54594</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>traceNum</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>traceNum</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@SYS10575</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Commission_RU</Name>
												<CountryRegionCodes>RU</CountryRegionCodes>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>CustTrans_W_CommProfileType_RU</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CommProfileType_RU</DataField>
														<DataSource>CustTrans_W</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>CommPrepaymUsedAmount_RU</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<CountryRegionCodes>RU</CountryRegionCodes>
														<HelpText>@SalesPurchBook:AmountInDefaultCurrencyPrincipalReport</HelpText>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>commPrepaymUsedAmount_RU</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Label>@SalesPurchBook:ReportedAmount</Label>
													</AxFormControl>
												</Controls>
												<Caption>@SalesPurchBook:CommissionTrade</Caption>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS21873</Caption>
										<DataSource>CustTrans</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>PaymentTab</Name>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Payment</Name>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>PossibleCashDisc</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:PossibleCashDisc_HelpText</HelpText>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>PossibleCashDisc</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Label>@SYS1471</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>utilizedCashDisc</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:UtilizedCashDisc_HelpText</HelpText>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>utilizedCashDisc</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Label>@SYS14217</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>firstCashDiscDate</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:FirstCashDiscDate_HelpText</HelpText>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>firstCashDiscDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>firstDueDate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>firstDueDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>bankDiscNoticeDeadline</Name>
														<AllowEdit>No</AllowEdit>
														<ConfigurationKey>CustBillOfExchange</ConfigurationKey>
														<ElementPosition>2080374782</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:BankDiscNoticeDeadline_HelpText</HelpText>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>bankDiscNoticeDeadline</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PaymMode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1249902590</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymMode</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PaymSpec</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1426063357</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymSpec</DataField>
														<DataSource>CustTrans</DataSource>
														<LookupButton>Always</LookupButton>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PaymentReference</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1602224124</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymReference</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>PaymMethod</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1778384891</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymMethod</DataField>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>Prepayment</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1954545658</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Prepayment</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CustTrans_paymID</Name>
														<ElementPosition>2130706430</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>DirectDebitMandate</Name>
														<ElementPosition>2139095038</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DirectDebitMandate_MandateReference</Name>
																<DataRelationPath>CustDirectDebitMandate</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>CustTrans</DataSource>
														<ReferenceField>DirectDebitMandate</ReferenceField>
													</AxFormControl>
												</Controls>
												<Caption>@SYS828</Caption>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Bank</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Bank_CompanyBankAccountId</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CompanyBankAccountId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Bank_ThirdPartyBankAccountId</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ThirdPartyBankAccountId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>Bank</DataGroup>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS828</Caption>
										<DataSource>CustTrans</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ExchangeAdjustmentTab</Name>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Amount</Name>
												<ElementPosition>1979711486</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Amount_CurrencyCode</Name>
														<ElementPosition>1252698792</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CurrencyCode</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_AmountCur</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>AmountCur</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<SignDisplay>Prefixed</SignDisplay>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_AmountMST</Name>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>AmountMST</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<SignDisplay>Prefixed</SignDisplay>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_ExchRate</Name>
														<ElementPosition>2040109463</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayAccountingExchangeRate</DataMethod>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_ExchRateSecond</Name>
														<ElementPosition>2066953008</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ExchRateSecond</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_ReportingCurrencyAmount</Name>
														<ElementPosition>2093796553</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportingCurrencyAmount</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Amount_ReportingCurrencyCrossRate</Name>
														<ElementPosition>2120640098</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportingCurrencyCrossRate</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExchangeRates</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>ExchAdjustment_LastExchAdj</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastExchAdj</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExchangeRates_LastExchAdjVoucher</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastExchAdjVoucher</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeRates_LastExchAdjRate</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastExchAdjRate</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeRates_LastExchAdjRateReporting</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastExchAdjRateReporting</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataGroup>ExchangeRates</DataGroup>
												<DataSource>CustTrans</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExchangeAdjustment</Name>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_CustExchAdjustmentUnrealized</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustExchAdjustmentUnrealized</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<SignDisplay>Prefixed</SignDisplay>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_CustExchAdjustmentRealized</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustExchAdjustmentRealized</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<SignDisplay>Prefixed</SignDisplay>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_ExchAdjustment</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ExchAdjustment</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<SignDisplay>Prefixed</SignDisplay>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_ReportingExchAdjustmentRealized</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportingExchAdjustmentRealized</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_ReportingExchAdjustmentUnrealized</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportingExchAdjustmentUnrealized</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ExchangeAdjustment_ExchAdjustmentReporting</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>ExchAdjustmentReporting</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataGroup>ExchangeAdjustment</DataGroup>
												<DataSource>CustTrans</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS55328</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>SettlementTab</Name>
										<ElementPosition>2063597566</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Settlement</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>SettleAmountCur</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>SettleAmountCur</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>SettleAmountMST</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>SettleAmountMST</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>LastSettleVoucher</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastSettleVoucher</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Settlement_LastSettleAccountNum</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastSettleAccountNum</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Settlement_LastSettleCompany</Name>
														<ElementPosition>2080374782</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastSettleCompany</DataField>
														<DataSource>CustTrans</DataSource>
														<Label>@SYS115826</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>LastSettleDate</Name>
														<ElementPosition>2113929214</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastSettleDate</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>CustTrans_Settlement</Name>
														<ElementPosition>2130706430</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Settlement</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>Settlement_SettleAmountReporting</Name>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>SettleAmountReporting</DataField>
														<DataSource>CustTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataGroup>Settlement</DataGroup>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>SettlementStatus</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>Closed</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Closed</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PostingProfileClose</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>PostingProfileClose</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>SettlementStatus</DataGroup>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS10163</Caption>
										<DataSource>CustTrans</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>InterestandcollectionLetterTab</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Interest</Name>
												<ConfigurationKey>CustInterest</ConfigurationKey>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>CustTrans_Interest</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Interest</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>interestNote</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>interestNote</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>interestNoteDate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:InterestNodeDate_HelpText</HelpText>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>interestNoteDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>lastInterestDate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:LastInterestDate_HelpText</HelpText>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>lastInterestDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@SYS10770</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CollectionLetter</Name>
												<ConfigurationKey>CustCollectionLetter</ConfigurationKey>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>CustTrans_CollectionLetter</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CollectionLetter</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>collectionLetterNum</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:CollectionLetterNum_HelpText</HelpText>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>collectionLetterNum</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>collectionLetterCode</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:CollectionLetterCode_HelpText</HelpText>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>collectionLetterCode</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>collectionLetterDate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>2013265918</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>collectionLetterDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>CustTrans_CollectionLetterCode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>2080374782</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>CollectionLetterCode</DataField>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>CustTrans_PaymSchedId</Name>
														<AllowEdit>No</AllowEdit>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymSchedId</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@SYS13960</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CollectionDispute</Name>
												<ConfigurationKey>Collections</ConfigurationKey>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>DisputeStatus</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:DisputeStatus_HelpText</HelpText>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayDisputeStatus</DataMethod>
														<DataSource>CustTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>DisputeReasonCode</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:DisputeReasonCode_HelpText</HelpText>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayDisputeReasonCode</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>DisputeReasonComment</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HelpText>@AccountsReceivable:DisputeReasonComment_HelpText</HelpText>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayDisputeReasonComment</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>DisputePromiseFollowUp</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayDisputePromiseFollowUpDate</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>DisputePromiseAmount</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayDisputePromiseAmount</DataMethod>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>CustTrans_CustAutomationExclude</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>CheckBox</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<DataField>CustAutomationExclude</DataField>
														<DataSource>CustTrans</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@SYS133992</Caption>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@SYS21751</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>TabFinancialDimensions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Pattern>DimensionEntryControl</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>DimensionEntryControl</Name>
												<AllowEdit>No</AllowEdit>
												<Type>Container</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@SYS101181</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>CustTrans</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<Caption>@SYS101181</Caption>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
								</Controls>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanelTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupTopParm</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>GridQuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>Grid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>CustTrans_Voucher</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CompanyFilter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS13342</Label>
										<LookupButton>Always</LookupButton>
										<LookupOnly>Yes</LookupOnly>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ShowOpenOnlyFilter</Name>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editShowOpenOnly</DataMethod>
										<Label>@SYS23760</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ShowOpenOptions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>CustVendShowTransaction</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ShowOpenDateFilter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<HelpText>@CashManagement:CustVendTransShow_HelpText</HelpText>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS7402</Label>
										<LabelPosition>Above</LabelPosition>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>HideCurrencyRevaluation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@CashManagement:CustVendTransHideCurrencyRevaluations</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BankDocumentTypeFilter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BankDocument</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@AccountsReceivable:BankDocumentTypeFilter_HelpText</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editBankDocumentTypeFilter</DataMethod>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_Voucher</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>crossCompanyPartyName</DataMethod>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_DataAreaId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>dataAreaId</DataField>
										<DataSource>CustTrans</DataSource>
										<Label>@SYS315616</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustTrans_TransType</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransType</DataField>
										<DataSource>CustTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CustTrans_Date</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CustTrans_DueDate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Date</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_Invoice</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_Txt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>CustTrans</DataSource>
										<LabelPosition>Above</LabelPosition>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>BillingClass</Name>
										<ElementPosition>2046820350</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BillingClass_BillingClassification</Name>
												<DataRelationPath>CustBillingClassification</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>CustTrans</DataSource>
										<ReferenceField>CustBillingClassification</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_fiscalEstablishmentId_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>BR</CountryRegionCodes>
										<ElementPosition>2046820350</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>fiscalEstablishmentId_BR</DataMethod>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_AmountCurDebit_JP</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2092957694</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>displayTransactionCurAmountDebit_Global</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@GLS54587</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_AmountCurCredit_JP</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>displayTransactionCurAmountCredit_Global</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@GLS54586</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_AmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2118123518</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>CustTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainAmount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RemainAmountCur</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@SYS6350</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTrans_CurrencyCode</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_AmountMST</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountMST</DataField>
										<DataSource>CustTrans</DataSource>
										<Label>@SYS12227</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainAmountMST</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RemainAmountMST</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@SYS53076</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_ReportingCurrencyAmount</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportingCurrencyAmount</DataField>
										<DataSource>CustTrans</DataSource>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainAmountReportingCurrency</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>remainAmountReportingCurrency</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@AccountsPayable:BalanceInReportingCurrency</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>BillOfExchange</Name>
										<ConfigurationKey>CustBillOfExchange</ConfigurationKey>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BillOfExchange_BillOfExchangeID</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BillOfExchangeID</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>BillOfExchange_BillOfExchangeSeqNum</Name>
												<Type>Integer</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BillOfExchangeSeqNum</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>BillOfExchange_BillOfExchangeStatus</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BillOfExchangeStatus</DataField>
												<DataSource>CustTrans</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BillOfExchange_BankRemittanceFileId</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BankRemittanceFileId</DataField>
												<DataSource>CustTrans</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>BillOfExchange</DataGroup>
										<DataSource>CustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_TaxWithholdAmountOrigin_IN</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1207959550</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdAmountOrigin_IN</DataField>
										<DataSource>CustTrans_W</DataSource>
										<Label>@SYS21950</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_TDSAmount_IN</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177277</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSAmount_IN</DataField>
										<DataSource>CustTrans_W</DataSource>
										<Label>@GLS5470</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTrans_TCSAmount_IN</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476395004</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSAmount_IN</DataField>
										<DataSource>CustTrans_W</DataSource>
										<Label>@GLS5471</Label>
										<LabelPosition>Above</LabelPosition>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CustTrans_Prepayment_RU</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2141192190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Prepayment</DataField>
										<DataSource>CustTrans</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Include</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>include</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@SYS28109</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>includedElseWhere</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>includedElseWhere</DataMethod>
										<DataSource>CustTrans</DataSource>
										<Label>@sys68094</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankLCCustTrans_BankLCNumber</Name>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankLCNumber</DataField>
										<DataSource>BankLCCustTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>BankLCCustTrans_LineNum</Name>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineNum</DataField>
										<DataSource>BankLCCustTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>CustTrans</DataSource>
								<DefaultAction>GridDefaultAction</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>GridDefaultAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>