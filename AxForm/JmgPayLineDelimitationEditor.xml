<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgPayLineDelimitationEditor</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class JmgPayLineDelimitationEditor extends FormRun
    {
        Microsoft.Dynamics.Framework.Expression.AxExpressionBuilder expressionBuilder;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        jmgPayLineDelimitation_DS.write();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ConditionEditor_FieldBinding</Name>
				<Source><![CDATA[
    void ConditionEditor_FieldBinding(System.Object sender, Microsoft.Dynamics.Framework.Expression.ExpressionFieldEventArgs e)
    {
        Microsoft.Dynamics.AX.Framework.Expression.Model.Field field = e.get_Field();
        Microsoft.Dynamics.AX.Framework.Expression.Model.Datasource datasource = field.get_Parent();

        tableName tableName = datasource.get_TableName();
        fieldName fieldName = field.get_Name();
        str recIDStr = e.get_FieldValue();
        recId recId = str2int64(recIDStr);

        e.set_ValidatedField(SysExpression::getDisplayValuesFromRecID(tableName, fieldName, recId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ConditionEditor_FieldLookup</Name>
				<Source><![CDATA[
    void ConditionEditor_FieldLookup(System.Object sender, Microsoft.Dynamics.Framework.Expression.ExpressionFieldEventArgs e)
    {
        e.set_FieldValue(SysExpression::fieldLookup(e));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ConditionEditor_FieldValidate</Name>
				<Source><![CDATA[
    // FieldValidate event
    void ConditionEditor_FieldValidate(System.Object sender, Microsoft.Dynamics.Framework.Expression.ExpressionFieldEventArgs e)
    {
        e.set_ValidatedField(SysExpression::fieldValidate(e.get_Field(), e.get_FieldValue()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>expressionChanged</Name>
				<Source><![CDATA[
    public void expressionChanged(boolean _ruleClassModified = false, boolean _forceWrite = false)
    {
        ExpressionTable expressionTable;
        SysDictClass    sysDictClass;
        JmgPayRule      jmgPayRule;
        boolean         writeExpression;
        Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel model;
        ttsbegin;
        writeExpression = _forceWrite;

        if (jmgPayLineDelimitation.ExpressionId)
        {
            expressionTable = ExpressionTable::find(jmgPayLineDelimitation.ExpressionId, true);
            model = ExpressionTable::loadExpression(expressionTable);
            if (_ruleClassModified)
            {
                expressionTable.QueryClassName      = jmgPayLineDelimitation.PayRuleClassId;
                sysDictClass    = new SysDictClass(className2Id(jmgPayLineDelimitation.PayRuleClassId));
                jmgPayRule      = sysDictClass.makeObject();
                writeExpression = true;
                model = Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel::Create(
                    SysExpression::getDesignTimeProjectionModel(jmgPayLineDelimitation.PayRuleClassId, jmgPayRule.getDesignTimeCustomDataSources()),
                    jmgPayRule.getJoinConditions());
            }
        }
        else if (jmgPayLineDelimitation.PayRuleClassId)
        {
            expressionTable.QueryClassName      = jmgPayLineDelimitation.PayRuleClassId;
            sysDictClass    = new SysDictClass(className2Id(jmgPayLineDelimitation.PayRuleClassId));
            jmgPayRule      = sysDictClass.makeObject();
            model = Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel::Create(
                SysExpression::getDesignTimeProjectionModel(jmgPayLineDelimitation.PayRuleClassId, jmgPayRule.getDesignTimeCustomDataSources()),
                jmgPayRule.getJoinConditions());
            writeExpression = true;
        }

        element.initConditionEditor(expressionTable, model);

        if (writeExpression)
        {
            expressionTable = ExpressionTable::saveExpression(expressionTable.RecId, expressionBuilder.GetExpressionModel());
            jmgPayLineDelimitation.ExpressionId = expressionTable.ExpressionId;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initConditionEditor</Name>
				<Source><![CDATA[
    public void initConditionEditor(ExpressionTable _expressionTable, Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel model)
    {
        SysDictClass    sysDictClass;
        JmgPayRule      jmgPayRule;
        if (_expressionTable.QueryClassName)
        {
            sysDictClass    = new SysDictClass(className2Id(_expressionTable.QueryClassName));
            jmgPayRule      = sysDictClass.makeObject();

            if (CLRInterop::isNull(model.get_RootElement()))
            {
                model = Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel::Create();
            }
            expressionBuilder.InitializeFromDataSource(model,
                SysExpression::getDesignTimeProjectionModel(_expressionTable.QueryClassName, jmgPayRule.getDesignTimeCustomDataSources()),
                '');
        }
        else
        {
            expressionBuilder.Initialize(
                Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel::Create(),
                SysExpression::getDesignTimeProjectionModel(classStr(JmgPayRule_RouteOprTable)));
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JmgPayLineDelimitation</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            element.expressionChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ExpressionTable expressionTable;
            ttsbegin;
            expressionTable = ExpressionTable::find(jmgPayLineDelimitation.ExpressionId, true);
            if (expressionTable)
            {
                ExpressionTable::saveExpression(expressionTable.RecId, expressionBuilder.GetExpressionModel());
            }
            super();
            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            ExpressionTable expressionTable;
            ttsbegin;
            delete_from expressionTable
                where expressionTable.ExpressionId  == jmgPayLineDelimitation.ExpressionId;

            super();
            ttscommit;
            element.expressionChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            ExpressionTable expressionTable;
            Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel model;
            int ret;

            ret = super();

            expressionTable = ExpressionTable::find(jmgPayLineDelimitation.ExpressionId);
            model = ExpressionTable::loadExpression(expressionTable);
            element.initConditionEditor(expressionTable, model);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PayRuleClassId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SysDictClass sysDictClass;
                boolean      ret;

                ret = super();

                if (ret)
                {
                    sysDictClass = new SysDictClass(className2Id(jmgPayLineDelimitation.PayRuleClassId));
                    if (!sysDictClass || !sysDictClass.allowMakeObject() || !SysDictClass::isEqualOrSuperclass(sysDictClass.id(), classNum(JmgPayRule)))
                    {
                        ret = checkFailed(strFmt("@SYS135643", jmgPayLineDelimitation.PayRuleClassId));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.expressionChanged(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<IsObsolete>Yes</IsObsolete>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JmgPayLineDelimitation</Name>
			<Table>JmgPayLineDelimitation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressionDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayAgreementLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayRuleClassId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS135636</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Height xmlns="">600</Height>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">850</Width>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JmgPayLineDelimitation_PayRuleClassId</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayRuleClassId</DataField>
										<DataSource>JmgPayLineDelimitation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>description</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>description</DataMethod>
										<DataSource>JmgPayLineDelimitation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JmgPayLineDelimitation_ExpressionDescription</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExpressionDescription</DataField>
										<DataSource>JmgPayLineDelimitation</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JmgPayLineDelimitation</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PayRule</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayRule_PayRuleClassId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayRuleClassId</DataField>
										<DataSource>JmgPayLineDelimitation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayRule_M_description</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>description</DataMethod>
										<DataSource>JmgPayLineDelimitation</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PayRule</DataGroup>
								<DataSource>JmgPayLineDelimitation</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Bottom</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ConditionEditorGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<HideIfEmpty>No</HideIfEmpty>
					</AxFormControl>
				</Controls>
				<Caption>@SYS105574</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>