<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RTax25FieldIdLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RTax25FieldIdLookup extends FormRun
{
    RTax25RegType regTypeClass;
    Types includeOnlyType;

}
]]></Source>
			</Method>
			<Method>
				<Name>fillFields</Name>
				<Source><![CDATA[
    void fillFields()
    {
        container fieldTypes = regTypeClass.fieldType();
        container fieldLabels = regTypeClass.fieldLabel();

        for (int i = 1; i <= conlen(fieldTypes); i++)
        {
            Types baseType = new DictType(conpeek(fieldTypes, i)).baseType();

            if (includeOnlyType != Types::void && baseType != includeOnlyType)
                continue;

            TmpTable.TableName = conpeek(fieldLabels, i);
            TmpTable.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        if (!element.args().parmObject() || !(element.args().parmObject() is RTax25RegType))
            throw error(Error::wrongUseOfFunction(funcName()));

        if (element.args().parmEnumType() == enumnum(Types))
        {
            includeOnlyType = this.args().parmEnum();
        }
        else
        {
            includeOnlyType = Types::void;
        }

        regTypeClass = element.args().parmObject();

        super();

        element.selectMode(FieldLabel);

        element.fillFields();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpTable</Name>
			<Table>TmpTableName</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FieldLabel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>TableName</DataField>
						<DataSource>TmpTable</DataSource>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
				</Controls>
				<DataSource>TmpTable</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>