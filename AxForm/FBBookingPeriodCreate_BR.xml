<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>FBBookingPeriodCreate_BR</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class FBBookingPeriodCreate_BR extends FormRun
{
    FiscalEstablishment_BR fiscalEstablishment;
}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        if (this.closedOk())
        {
            element.args().callerFormControl().dataSourceObject().executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        FBBookingPeriod_BR      fbBookingPeriod;

        fbBookingPeriod.PeriodYear                  = bookingYear.value();
        fbBookingPeriod.PeriodMonth                 = bookingMonth.selection();
        fbBookingPeriod.FiscalEstablishmentId       = fiscalEstablishment.FiscalEstablishmentId;
        fbBookingPeriod.FiscalEstablishmentDataArea = fiscalEstablishment.dataAreaId;

        if (this.validateAllFields() && fbBookingPeriod.validateWrite())
        {
            try
            {
                ttsBegin;

                fbBookingPeriod.insert();

                element.loadFiscalDocumentsForPeriod(fbBookingPeriod);

                ttsCommit;

                super();
            }
            catch
            {
                infolog.setInfoLogLevel(SysInfologLevel::All);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the form.
    /// </summary>
    public void init()
    {
        super();

        bookingMonth.selection  (DateTimeUtil::month(DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),0)));
        bookingYear.value       (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFiscalDocumentsForPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Books fiscal documents whose accounting date is within the booking period date range.
    /// </summary>
    /// <param name="_fbBookingPeriod">
    /// A <c>FBBookingPeriod_BR</c> table buffer representing the booking period for which fiscal documents will be booked to.
    /// </param>
    public void loadFiscalDocumentsForPeriod(FBBookingPeriod_BR _fbBookingPeriod)
    {
        FBFiscalDocumentBookProcessor_BR    bookProcessor;

        bookProcessor = new FBFiscalDocumentBookProcessor_BR(_fbBookingPeriod);
        bookProcessor.parmBookFiscalDocuments(false);

        bookProcessor.processBooking();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>FiscalEstablishment_BR</c> table record
    /// </summary>
    /// <param name="_common">
    /// A <c>Common</c> table buffer
    /// </param>
    public void updateFiscalEstablishment(Common _common)
    {
        if (_common.TableId == tableNum(FiscalEstablishment_BR))
        {
            fiscalEstablishment = _common;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFiscalEstablishmentDataAreaControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the fiscal establishment data area id
    /// </summary>
    public void updateFiscalEstablishmentDataAreaControl()
    {
        FiscalEstablishmentDataArea.text(fiscalEstablishment.dataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAllFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the fields
    /// </summary>
    /// <returns>
    /// true if are valid; otherwise, false
    /// </returns>
    public boolean validateAllFields()
    {
        if (element.validateFiscalEstablishmentId()
            & element.validateBookingYear()
            & element.validateBookingMonth())
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBookingMonth</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the booking period month
    /// </summary>
    /// <returns>
    /// true if is valid; otherwise, false
    /// </returns>
    public boolean validateBookingMonth()
    {
        if (bookingMonth.selection())
        {
            return true;
        }

        return checkFailed(strFmt("@GLS60370", enum2str(MonthsOfYear::None)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBookingYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the booking period year
    /// </summary>
    /// <returns>
    /// true if is valid; otherwise, false
    /// </returns>
    public boolean validateBookingYear()
    {
        YearBase yearToValidate = bookingYear.value();

        if (yearToValidate >= year(DateTimeUtil::date(DateTimeUtil::maxValue()))
           || yearToValidate <= year(DateTimeUtil::date(DateTimeUtil::minValue()))
           || yearToValidate < 0)
        {
            return checkFailed(strFmt("@GLS60369", yearToValidate));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFiscalEstablishmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the fiscal establishment
    /// </summary>
    /// <returns>
    /// true if is valid; otherwise, false
    /// </returns>
    public boolean validateFiscalEstablishmentId()
    {
        boolean                     ret = true;
        FiscalEstablishment_BR      fiscalEstablishment_BR;
        FBFiscalEstablishmentId_BR  fiscalEstablishmentId;

        fiscalEstablishmentId = fiscalEstablishmentControl.text();

        if (fiscalEstablishmentId)
        {
            select firstOnly crossCompany fiscalEstablishment_BR
                where fiscalEstablishment_BR.FiscalEstablishmentId == fiscalEstablishmentId;

            if (!fiscalEstablishment_BR)
            {
                ret = checkFailed(strFmt("@SYS119897", fiscalEstablishmentControl.text(), fiscalEstablishmentControl.label()));
            }
        }
        else
        {
            ret = checkFailed(strFmt("@SYS84753", fiscalEstablishmentControl.label()));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>FiscalEstablishmentControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args                    args = new Args();
            MenuFunction            menuItem;

            super();

            menuItem = new MenuFunction(menuitemDisplayStr(FiscalEstablishment_BR), MenuItemType::Display);

            if (fiscalEstablishment)
            {
                changeCompany(fiscalEstablishment.dataAreaId)
                {
                    menuItem.run(args);
                }
            }
            else
            {
                menuItem.run(args);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FormRun formRun;
            Args    args;

            args = new Args(formStr(FiscalEstablishmentLookup_BR));

            formRun = classFactory::formRunClassOnClient(args);
            formRun.init();

            this.performFormLookup(formRun);

            element.updateFiscalEstablishment(formRun.selectRecordModeSelectedRecord());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updateFiscalEstablishmentDataAreaControl();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            return this.valueSelectedByLookUp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>valueSelectedByLookUp</Name>
						<Source><![CDATA[
        /// <summary>
        /// Compares current value with value selected by lookup.
        /// </summary>
        /// <returns>
        /// True if values are equals, otherwise false.
        /// </returns>
        private boolean valueSelectedByLookUp()
        {
            return fiscalEstablishment.RecId
                   && fiscalEstablishment.FiscalEstablishmentId == this.valueStr();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BookingMonth</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = element.validateBookingMonth();

            if (ret)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BookingYear</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = element.validateBookingYear();

            if (ret)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">DynBackgroundWhite</BackgroundColor>
		<Caption xmlns="">@SYS4082138</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<MaximizeBox xmlns="">No</MaximizeBox>
		<MinimizeBox xmlns="">No</MinimizeBox>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Requirements</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FiscalEstablishmentControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>460175064</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>FBFiscalEstablishmentId_BR</ExtendedDataType>
						<Label>@GLS220103</Label>
						<LookupButton>Always</LookupButton>
						<Mandatory>Yes</Mandatory>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FiscalEstablishmentDataArea</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>690262597</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DataAreaId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>BookingMonth</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350131</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>FBBookingPeriodMonth_BR</ExtendedDataType>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>BookingYear</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133508</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>FBBookingPeriodYear_BR</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>