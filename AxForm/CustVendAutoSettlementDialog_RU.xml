<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustVendAutoSettlementDialog_RU</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public final class CustVendAutoSettlementDialog_RU extends FormRun
    {
        Dialog                     dialog;       
        boolean                    running;        
        ModuleCustVend             module;
        CustVendAutoDialog_RU      custVendAutoDialog;
        boolean                    isReverseMode;
        CustVendTable              custVendTable;
        #Task
}
]]></Source>
			</Method>
			<Method>
				<Name>batch</Name>
				<Source><![CDATA[
    void batch(boolean batchable)
    {        
        batch.visible(batchable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callCallerSelectCtrl</Name>
				<Source><![CDATA[
    void callCallerSelectCtrl()
    {
        if (! running)
            return;

        if (this.closed())
            return;

        if (! this.runbase())
            return;

        if (! dialog.allowUpdateOnSelectCtrl())
            return;

        dialog.updateServer();

        this.runbase().dialogSelectCtrl();       
    }

]]></Source>
			</Method>
			<Method>
				<Name>callCallerTask</Name>
				<Source><![CDATA[
    void callCallerTask(int task = 0)
    {
        if (! running)
            return;

        if (this.closed())
            return;

        if (! this.runbase())
            return;

        if (! dialog.allowUpdateOnTask())
            return;

        dialog.updateServer();

        this.runbase().dialogTask(task);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {    
        dialog.updateServer();
        if (dialog.runBase())
        {
            if (dialog.runBase().checkCloseDialog(this))
                super();
        }
        else
            super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Dialog dialog()
    {
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogUpdate</Name>
				<Source><![CDATA[
    void dialogUpdate(boolean _isQueryChanged = true)
    {
        custVendAutoDialog.dialogUpdateRange(this.dialog());
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNonContainer</Name>
				<Source><![CDATA[
    boolean findNonContainer(FormBuildControl buildCtrl)
    {
        FormBuildControl    childBuildCtrl;
        Counter             i;

        for (i=1;i<=buildCtrl.controlCount();i++)
        {
            childBuildCtrl = buildCtrl.controlNum(i);
            if (childBuildCtrl.isContainer())
            {
                if (this.design().control(childBuildCtrl.id()).allowEdit() &&
                    this.design().control(childBuildCtrl.id()).enabled())
                {
                    if (element.findNonContainer(childBuildCtrl))
                        return true;
                }
            }
            else
            {
                if (this.design().control(childBuildCtrl.id()).allowEdit() &&
                    this.design().control(childBuildCtrl.id()).enabled())
                {
                    this.design().control(childBuildCtrl.id()).setFocus();
                    return true;
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateRange</Name>
				<Source><![CDATA[
    private void findOrCreateRange(TableId _tableId, FieldId _fieldId, str _value, int _occurrence = 1)
    {
        Query           query = custVendAutoDialog.queryRun().query();
        QueryBuildRange qbr;

        qbr = findOrCreateRange_W(query.dataSourceTable(_tableId, _occurrence), _fieldId);
        qbr.value(_value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        CustTable custTable;
        VendTable vendTable;
		        
        dialog = this.args().caller();

        custVendAutoDialog = this.runBase();

        if ( ! custVendAutoDialog)
            throw error(Error::wrongUseOfFunction(funcName()));

        module = custVendAutoDialog.moduleCustVend();

        super();

        isReverseMode = custVendAutoDialog.isReverseMode();

        tab.showTabs(true);

        switch (module)
        {
            case ModuleCustVend::Cust :
                custVendTable = custTable;
                accountNum.extendedDataType(extendedTypeNum(CustAccount));
                accountGroup.caption("@SYS302");
                break;
            case ModuleCustVend::Vend :
                custVendTable = vendTable;
                accountNum.extendedDataType(extendedTypeNum(VendAccount));
                accountGroup.caption("@SYS8079");
            break;
        }

        element.updateSettlementDate();

        if (isReverseMode)
        {
            this.design().caption("@GLS105057");
        }
        else
        {
            this.design().caption("@GLS105107");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    container pack()
    {
        return [fromDate.dateValue(), toDate.dateValue(),
                accountNum.text()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        super();

        // Give first non container on first tabpage focus
        element.findNonContainer(this.form().design().control(fieldTab.name()));

        // init control values here -->
        this.unpack(custVendAutoDialog.getCurrentValues(this));
        // init control values here <--

        running = true;        
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    Object runBase()
    {
        return dialog.runBase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectControl</Name>
				<Source><![CDATA[
    public boolean selectControl(FormControl _control)
    {
        boolean ret;

        ret = super(_control);

        this.callCallerSelectCtrl();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDialog</Name>
				<Source><![CDATA[
    void setDialog(Dialog _dialog)
    {
        dialog = _dialog;
        element.args().caller(dialog);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    int task(int task)
    {
        int ret;

        ret = super(task);

                this.callCallerTask(task);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    void unpack(container _container)
    {
        const int PosDateValue = 1;
        const int PosToDate = 2;
        const int PosAccountNum =3;

        fromDate.dateValue(conPeek(_container,    PosDateValue));
        toDate.dateValue(conPeek(_container,      PosToDate));
        accountNum.text(conPeek(_container,       PosAccountNum));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSettlementDate</Name>
				<Source><![CDATA[
    void updateSettlementDate()
    {
        CustVendSettle          custVendSettle;
        CustVendReversePosting  custVendReversePosting;

        SettleDatePrinc         datePrinciple;
        TransDate               saveDate;        

        if (isReverseMode)
        {
            custVendReversePosting  = CustVendReversePosting::construct(custVendTable, null);
            datePrinciple           = custVendReversePosting.parmDatePrinciple();
            saveDate                = custVendReversePosting.parmSaveDate_W();
        }
        else
        {
            custVendSettle  = CustVendSettle::construct(module == ModuleCustVend::Cust ? SysModule::Cust : SysModule::Vend);
            datePrinciple   = custVendSettle.datePrinciple();
            saveDate        = custVendSettle.saveDate();
        }

        switch (datePrinciple)
        {
            case SettleDatePrinc::DateOfPayment:
                datePrincipleGroup.visible(false);
                datePrincipleDate.visible(false);
                datePrincipleDate.label("");
                break;
            case SettleDatePrinc::DaysDate:
                datePrincipleGroup.visible(true);
                datePrincipleDate.visible(true);
                datePrincipleDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                datePrincipleDate.label("@GLS102532");
                break;
            case SettleDatePrinc::SelectDate:
                datePrincipleGroup.visible(true);
                datePrincipleDate.visible(true);
                datePrincipleDate.dateValue(saveDate);
                datePrincipleDate.label("@GLS102533");
                break;
        }
        
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>DatePrincipleButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Object  tmpCustVendSettleRev;
            
            super();

            if (isReverseMode)
            {
                tmpCustVendSettleRev = CustVendReversePosting::construct(custVendTable, null);
                tmpCustVendSettleRev.dialogDatePrinciple_W();
            }
            else
            {
                tmpCustVendSettleRev = CustVendSettle::construct(module == ModuleCustVend::Cust ?
                                                                 SysModule::Cust :
                                                                 SysModule::Vend);
                tmpCustVendSettleRev.dialogDatePrinciple();
            }

            element.updateSettlementDate();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.dialogUpdate();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.dialogUpdate();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.dialogUpdate();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AlignChild xmlns="">No</AlignChild>
		<AlignChildren xmlns="">No</AlignChildren>
		<AllowUserSetup xmlns="">No</AllowUserSetup>
		<Caption xmlns="">@GLS105107</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>DatePrinciple</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>DatePrincipleButton</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS12500</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FieldTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DatesGroup</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>FromDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>FromDate</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ToDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ToDate</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS40</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>CustAccount</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11779</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DatePrincipleGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DatePrincipleDate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransDate</ExtendedDataType>
										<Label>@SYS10396</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12500</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Skip>Yes</Skip>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>6</VerticalSpacing>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>Batch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>