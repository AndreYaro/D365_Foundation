<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResProjAddResource</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResProjAddResource extends FormRun
{
    private ResResourceSchedulingController controller;
    private ResCharacteristicsController resourceCharacteristics;
    private ResSearchCriteria searchCriteria;
    private ResourceRecId resource;
    private LegalEntityRecId resourceLegalEntity;
    private ResourceCategoryRecId resourceCategory;

}
]]></Source>
			</Method>
			<Method>
				<Name>schedulingController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets resource scheduling controller.
    /// </summary>
    /// <param name = "_controller">Resource scheduling controller.</param>
    /// <returns>Resource scheduling controller.</returns>
    public ResResourceSchedulingController schedulingController(ResResourceSchedulingController _controller = controller)
    {
        controller = _controller;
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize form data.
    /// </summary>
    public void init()
    {
        super();

        ResUtil::validateResPerfDataUpgradeStatus();

        if (!controller)
        {
            controller = element.args().caller() as ResResourceSchedulingController;
        }

        if (controller)
        {
            ResIProjTeamController projectTeamController = controller.ProjTeamController();
            ProjTable projTable = ProjTable::find(projectTeamController.ProjId());
            StartDate.DateValue(projTable.PSASchedStartDate);
            EndDate.DateValue(projTable.PSASchedEndDate);

            resourceCategory = projectTeamController.ResourceCategory();
        }

        resourceCategory = resourceCategory ? resourceCategory : ResourceCategoryFacade::defaultResourceCategory();
        ResourceCategoryId resourceCategoryId = ResourceCategoryFacade::getId(resourceCategory);
        ResourceCategoryCtrl.text(resourceCategoryId);

        resourceCharacteristics = ResCharacteristicsController::construct();
        resourceCharacteristics.searchCriteriaReady += eventhandler(element.saveCharacteristicRequirements);
        resourceCharacteristics.enableProjectSelection(false);
        resourceCharacteristics.enableRoleSelection(false);

        this.loadResourceCategoryCriteria();
        this.saveCharacteristicRequirements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveCharacteristicRequirements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Save resource characteristic requirements for the activity resource.
    /// </summary>
    void saveCharacteristicRequirements()
    {
        searchCriteria = resourceCharacteristics.searchCriteria();

        if (resourceCategory)
        {
            ResourceCategoryId resourceCategoryId = ResourceCategoryFacade::getId(resourceCategory);
            ResResourceCategorySearchCriteria criteriaItem = ResResourceCategorySearchCriteria::construct();
            criteriaItem.addResourceCategory(resourceCategoryId);
            searchCriteria.setCriteriaItem(criteriaItem);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadResourceCategoryCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load resource category search criteria.
    /// </summary>
    void loadResourceCategoryCriteria()
    {
        resourceCharacteristics.searchCriteria(ResSearchCriteria::construct());
        resourceCharacteristics.requiringEntity(resourceCategory);
        resourceCharacteristics.requiringEntityType(ResCharacteristicReqEntityType::ResourceCategory);
        resourceCharacteristics.retrieveRequirements();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ResourceCategoryCtrl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display resource categories.
        /// </summary>
        public void lookup()
        {
            Args args = new Args(formStr(ProjRoleSelectionLookup));
            FormRun formRun;

            ProjRoleSelectionLookup lookupController = ProjRoleSelectionLookup::construct();
            lookupController.MultiSelect(false);
            lookupController.ShowAnyCategory(false);

            args.caller(lookupController);
            args.callerFormControl(ResourceCategoryCtrl);
            formRun = ClassFactory.formRunClass(args);
            formRun.init();

            this.performFormLookup(formRun);
            formRun.wait();

            if (ResourceCategoryCtrl.text())
            {
                resourceCategory = formRun.dataSource(0).cursor().RecId;
                element.loadResourceCategoryCriteria();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates specified resource category.
        /// </summary>
        /// <returns>True when validation is successful. Otherwise, false.</returns>
        public boolean validate()
        {
            boolean ret = super();

            if (ret)
            {
                PSASchedRole schedRole = PSASchedRole::findById(ResourceCategoryCtrl.text());
                resourceCategory = schedRole ? schedRole.RecId : 0;
                ResourceCategoryCtrl.text(resourceCategory ? schedRole.RoleId : '');
            }

            return ret && resourceCategory;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handle resource category selection.
        /// </summary>
        /// <returns>True when operation is successful. Otherwise, false.</returns>
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.loadResourceCategoryCriteria();
                element.saveCharacteristicRequirements();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequiredCompetencies</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Launch characteristic requirement form.
        /// </summary>
        public void clicked()
        {
            super();
            resourceCharacteristics.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NumberOfResources</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate the number of resources field.
        /// </summary>
        /// <returns>Number of resources to add.</returns>
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (NumberOfResources.value() <= 0)
            {
                ret = false;
            }

            if (ret)
            {
                if (this.value() == 1)
                {
                    ResourceCtrl.enabled(true);
                }
                else
                {
                    ResourceCtrl.enabled(false);
                    ResourceCtrl.text('');

                    resource            = 0;
                    resourceLegalEntity = 0;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update end date if it becomes smaller than start date.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (StartDate.dateValue() > EndDate.dateValue())
            {
                EndDate.dateValue(StartDate.dateValue());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EndDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update start date if it becomes larger than end date.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (EndDate.dateValue() < StartDate.dateValue())
            {
                StartDate.dateValue(EndDate.dateValue());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceCtrl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open resource lookup form.
        /// </summary>
        public void lookup()
        {
            PSAProjSchedRole psaProjSchedRoleLoc;
            psaProjSchedRoleLoc.PSARoleStartDate = StartDate.dateValue();
            psaProjSchedRoleLoc.PSARoleEndDate = EndDate.dateValue();
            psaProjSchedRoleLoc.ProjId = controller.projTeamController().ProjId();
            psaProjSchedRoleLoc.ResourceCategory = resourceCategory;

            Args args;
            boolean isPerformanceEnhanced = ResUtil::isPerformanceEnhancementFeatureEnabled(true);
            if (isPerformanceEnhanced)
            {
                args = new Args(formStr(ResProjResourceSelectionLookupV2));
            }
            else
            {
                args = new Args(formStr(ResProjResourceSelectionLookup));
            }

            args.record(psaProjSchedRoleLoc);
            args.parmObject(searchCriteria);
            
            FormRun lookupFormRun = ClassFactory::formRunClassOnClient(args);
            lookupFormRun.init();

            this.performFormLookup(lookupFormRun);
            lookupFormRun.wait();

            if (lookupFormRun.closedOk())
            {
                if (isPerformanceEnhanced)
                {
                    ResProjectResourceSchedulableDistinctView companyResource = lookupFormRun.dataSource(0).cursor();
                    resource = companyResource.Resource;
                    resourceLegalEntity = companyResource.SourceLegalEntity;
                    ResourceCtrl.text(companyResource.Name);
                }
                else
                {
                    ResCompanyResourceSchedulableDetailDistinctView companyResource = lookupFormRun.dataSource(0).cursor();
                    resource = companyResource.Resource;
                    resourceLegalEntity = companyResource.SourceLegalEntity;
                    ResourceCtrl.text(companyResource.Name);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Book</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Launch resource availability form for booking resource.
        /// </summary>
        public void clicked()
        {
            if (!resourceCategory)
            {
                throw error("@SYS37918");
            }

            super();

            ProjId projectId = controller.projTeamController().ProjId();

            ResResourceSchedulingController bookingController = ResResourceSchedulingController::construct();
            bookingController.parmResourceTeamControl(controller.parmResourceTeamControl());
            bookingController.setSessionContextProjId(projectId);
            bookingController.callerForm(controller.callerForm());

            bookingController.searchCriteria(searchCriteria);
            bookingController.resourceCategory(resourceCategory);
            bookingController.startDateTime(dateTimeUtil::newDateTime(StartDate.dateValue(), 0));
            bookingController.endDateTime(dateTimeUtil::newDateTime(EndDate.dateValue(), 0));
            bookingController.activity(ProjWBS::getRootActivityRecId(projectId));
            bookingController.addResourceBooking(projectId);

            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Create</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Create team member resource.
        /// </summary>
        public void clicked()
        {
            if (!resourceCategory)
            {
                throw error("@SYS37918");
            }

            super();

            int resourceCount = 1;

            if (!resource)
            {
                resourceCount = NumberOfResources.value();
            }

            ActivityResourceRecId activityResource;
            ResProjTeamController teamController = controller.projTeamController();

            while (resourceCount > 0)
            {
                activityResource = teamController.add(resourceCategory,
                    StartDate.dateValue(), EndDate.dateValue(), resource);

                resourceCharacteristics.requiringEntity(activityResource);
                resourceCharacteristics.requiringEntityType(ResCharacteristicReqEntityType::ActivityResource);
                resourceCharacteristics.saveToRequirements();
                resourceCount--;
            }

            element.closeOk();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PSAProjSchedRole</Name>
			<Table>PSAProjSchedRole</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARoleEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARoleStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:AddRolesToProject</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AddResourceGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ResourceCategoryCtrl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Res:Role</Label>
						<LookupButton>Always</LookupButton>
						<LookupOnly>Yes</LookupOnly>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>RequiredCompetencies</Name>
						<Type>Button</Type>
						<Width>100</Width>
						<WidthMode>Manual</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Style>Link</Style>
						<Text>@Res:RequiredCompetencies</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NumberOfResources</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Res:NumberOfResources</Label>
						<Value>1</Value>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateRange</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>StartDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS2168</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>EndDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS22882</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ResourceCtrl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Res:Resource</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Book</Name>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Style>Link</Style>
						<Text>@Res:BookFromCalendar</Text>
					</AxFormControl>
				</Controls>
				<Caption>@Res:AddResource</Caption>
				<Style>DialogContent</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>FormButtonGroupControl1</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Create</Name>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>@Res:Create</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelBtn</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS323120</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>