<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOMCalcDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOMCalcDialog extends FormRun
{
    // The dialog is shown for the calculation of one item (as opposed to all items from a costing version)
    boolean                     itemMode;

    BOMCalcJob                  calcJob;
    BOMCalcJob_All              calcJobAll;

    FormObservableLink          calcJobObsVar;

    InventDimCtrl_Frm_BOMCalc   inventDimFormSetup;
    SysFormEnumComboBox         sysFormEnumComboBox;

    PmfFormCtrl_BOMCalcDialog   pmfFormCtrl_BOMCalcDialog;

}
]]></Source>
			</Method>
			<Method>
				<Name>bomCalcEnabled</Name>
				<Source><![CDATA[
    private boolean bomCalcEnabled()
    {
        if (itemMode)
        {
            return calcJob.parmItemProcurementMode() != ItemProcurementMode::PurchaseOrder;
        }
        else
        {
            return calcJobAll.parmRunBomCalc();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomCalcWhereUsedUpdate</Name>
				<Source><![CDATA[
    edit BOMCalcWhereUsedUpdate bomCalcWhereUsedUpdate(
        boolean                 _set,
        BOMCalcWhereUsedUpdate  _bomCalcWhereUsedUpdate
        )
    {
        calcJobObsVar.observe();

        if (_set)
        {
            calcJob.parmBomCalcWhereUsedUpdate(_bomCalcWhereUsedUpdate);
        }

        return calcJob.parmBomCalcWhereUsedUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomId</Name>
				<Source><![CDATA[
    edit BOMId bomId(
        boolean     set,
        BOMId       _bomId
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmBOMId(_bomId);
            pmfFormCtrl_BOMCalcDialog.parmBomIdPost();
        }

        return calcJob.parmBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcCostingVersionUpdate</Name>
				<Source><![CDATA[
    edit BOMCalcCostingVersionUpdate calcCostingVersionUpdate(
        boolean                 set,
        BOMCalcCostingVersionUpdate   _calcCostingVersionUpdate
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmCalcCostingVersionUpdate(_calcCostingVersionUpdate);
        }

        return calcJob.parmCalcCostingVersionUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcDate</Name>
				<Source><![CDATA[
    edit TransDate calcDate(
        boolean      set,
        TransDate    _calcDate
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            return calcJob.parmCalcDate(_calcDate);
        }

        return calcJob.parmCalcDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcFallBack</Name>
				<Source><![CDATA[
    edit BOMCalcFallBack calcFallBack(
        boolean            set,
        BOMCalcFallBack    _bomCalcFallBack
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmBOMCalcFallBack(_bomCalcFallBack);
        }

        return calcJob.parmBOMCalcFallBack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        calcJob.parmInventDimId(InventDim::findOrCreate(inventDim).InventDimId);
        calcJob.parmSiteId(inventDim.InventSiteId);

        if (calcJob.checkCloseDialog())
            super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editCostPriceModel</Name>
				<Source><![CDATA[
    edit BOMCostPriceModel editCostPriceModel(
        boolean                 set,
        BOMCostPriceModel       _costPriceModel
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmCostPriceModel(_costPriceModel);
        }

        return calcJob.parmCostPriceModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editItemProcurementMode</Name>
				<Source><![CDATA[
    edit ItemProcurementModeDisplay editItemProcurementMode(
        boolean                     _set,
        ItemProcurementModeDisplay  _itemProcurementModeDisplay
        )
    {
        ItemProcurementMode itemProcurementMode;
        ItemProcurementModeDisplay itemProcurementModeDisplay;

        if (_set)
        {
            itemProcurementMode = this.convertToItemProcurementMode(_itemProcurementModeDisplay);

            this.setDefaultsBasedOnItemProcurementMode(itemProcurementMode);
            this.updateControls();
        }

        itemProcurementModeDisplay = this.convertToItemProcurementModeDisplay(calcJob.parmItemProcurementMode());

        return itemProcurementModeDisplay;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertToItemProcurementMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Convert enum <c>ItemProcurementModeDisplay</c> to <c>ItemProcurementMode</c>.
    /// </summary>
    /// <param name = "_itemProcurementModeDisplay">
    /// Enum <c>ItemProcurementModeDisplay</c>.
    /// </param>
    /// <returns>
    /// Enum <c>ItemProcurementMode</c>.
    /// </returns>
    protected ItemProcurementMode convertToItemProcurementMode(ItemProcurementModeDisplay  _itemProcurementModeDisplay)
    {
        ItemProcurementMode itemProcurementMode;

        switch (_itemProcurementModeDisplay)
        {
            case ItemProcurementModeDisplay::ProductionOrder:
                itemProcurementMode = ItemProcurementMode::ProductionOrder;
                break;

            case ItemProcurementModeDisplay::ProductionFlow:
                itemProcurementMode = ItemProcurementMode::ProductionFlow;
                break;

            case ItemProcurementModeDisplay::PurchaseOrder:
                itemProcurementMode = ItemProcurementMode::PurchaseOrder;
                break;

            default:
                itemProcurementMode = ItemProcurementMode::ProductionOrder;
        }

        return itemProcurementMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertToItemProcurementModeDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Convert enum <c>ItemProcurementMode</c> to <c>ItemProcurementModeDisplay</c>.
    /// </summary>
    /// <param name = "_itemProcurementMode">
    /// Enum <c>ItemProcurementMode</c>.
    /// </param>
    /// <returns>
    /// Enum <c>ItemProcurementModeDisplay</c>.
    /// </returns>
    protected ItemProcurementModeDisplay convertToItemProcurementModeDisplay(ItemProcurementMode  _itemProcurementMode)
    {
        ItemProcurementModeDisplay itemProcurementModeDisplay;

        switch (_itemProcurementMode)
        {
            case ItemProcurementMode::ProductionOrder:
                itemProcurementModeDisplay = ItemProcurementModeDisplay::ProductionOrder;
                break;

            case ItemProcurementMode::ProductionFlow:
                itemProcurementModeDisplay = ItemProcurementModeDisplay::ProductionFlow;
                break;

            case ItemProcurementMode::PurchaseOrder:
                itemProcurementModeDisplay = ItemProcurementModeDisplay::PurchaseOrder;
                break;

            default:
                itemProcurementModeDisplay = ItemProcurementModeDisplay::ProductionOrder;
        }

        return itemProcurementModeDisplay;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editProductionFlowName</Name>
				<Source><![CDATA[
    edit PlanName editProductionFlowName(
        boolean      _set,
        PlanName     _productionFlowName
        )
    {
        calcJobObsVar.observe();

        if (_set)
        {
            calcJob.parmProductionFlowReferenceRecId(LeanProductionFlowReference::findPlanReference(PlanReference::findPlanName(_productionFlowName).RecId).RecId);
        }

        return PlanReference::find(LeanProductionFlowReference::find(calcJob.parmProductionFlowReferenceRecId()).PlanReference).PlanName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPurchPriceModel</Name>
				<Source><![CDATA[
    edit PurchPriceModel editPurchPriceModel(
        boolean                 _set,
        PurchPriceModel         _purchPriceModel
        )
    {
        calcJobObsVar.observe();

        if (_set)
        {
            calcJob.parmPurchPriceModel(_purchPriceModel);
        }

        return calcJob.parmPurchPriceModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editRunBomCalc</Name>
				<Source><![CDATA[
    edit NoYes editRunBomCalc(
        boolean                 _set,
        NoYes                   _runBomCalc
        )
    {
        calcJobObsVar.observe();

        if (itemMode)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        if (_set && _runBomCalc != calcJobAll.parmRunBomCalc())
        {
            calcJobAll.parmRunBomCalc(_runBomCalc);

            if (this.validateProcurement())
            {
                this.updateControls();
            }
            else
            {
                calcJobAll.parmRunBomCalc(!_runBomCalc);
            }
        }

        return calcJobAll.parmRunBomCalc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editRunPurchCalc</Name>
				<Source><![CDATA[
    edit NoYes editRunPurchCalc(
        boolean                 _set,
        NoYes                   _runPurchCalc
        )
    {
        calcJobObsVar.observe();

        if (itemMode)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        if (_set && _runPurchCalc != calcJobAll.parmRunPurchCalc())
        {
            calcJobAll.parmRunPurchCalc(_runPurchCalc);

            if (this.validateProcurement())
            {
                this.updateControls();
            }
            else
            {
                calcJobAll.parmRunPurchCalc(!_runPurchCalc);
            }
        }

        return calcJobAll.parmRunPurchCalc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableVersionRecordingFields</Name>
				<Source><![CDATA[
    void enableVersionRecordingFields(CostingVersion _costingVersion)
    {
        calcDate.enabled(_costingVersion.DefaultDate ? false : true);
        inventDim_ds.object(fieldnum(InventDim, InventSiteId)).allowEdit(_costingVersion.InventSiteId ? false : true);

        costPriceTransfer.enabled(_costingVersion.AllowCost);
        costPriceInclInUnitPrice.enabled(_costingVersion.CostingType != CostingVersionCostingType::Standard &&
                                         !_costingVersion.RecordRestrict);
        costPriceRoundOff.enabled(!_costingVersion.RecordRestrict);

        salesPriceTransfer.enabled(_costingVersion.AllowSales);
        salesPriceInclInUnitPrice.enabled(_costingVersion.CostingType != CostingVersionCostingType::Standard &&
                                          !_costingVersion.RecordRestrict);
        salesPriceRoundOff.enabled(!_costingVersion.RecordRestrict);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fallBackVersionId</Name>
				<Source><![CDATA[
    edit CostingVersionIdOpen fallBackVersionId(
        boolean               set,
        CostingVersionIdOpen    _fallBackVersionId
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmFallBackVersionId(_fallBackVersionId);
        }

        return calcJob.parmFallBackVersionId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        boolean     bomVersionsEnabled      = isConfigurationkeyEnabled(configurationKeyNum(BOMVersion));
        boolean     routeEnabled            = isConfigurationkeyEnabled(configurationKeyNum(ProdRouting));
        boolean     productionFlowEnabled   = isConfigurationkeyEnabled(configurationKeyNum(LeanManufacturing));

        if (!element.args().caller() || !element.args().caller().runbase())
        {
            throw error("@SYS22996");
        }

        calcJob = element.args().caller().runbase();
        calcJobObsVar = new FormObservableLink();

        sysFormEnumComboBox = SysFormEnumComboBox::newParameters(element,
                                                                 element.controlId(formControlStr(BOMCalcDialog, BOMCalcExplosionMode)),
                                                                 enumNum(BOMCalcExplosionMode),
                                                                 calcJob.allowedBOMCalcExplosionModeSet());
        pmfFormCtrl_BOMCalcDialog = PmfFormCtrl_BOMCalcDialog::newFromForm(element, calcJob);
        pmfFormCtrl_BOMCalcDialog.initPre();
        super();

        itemMode = calcJob.showItem();

        if (!itemMode)
        {
            Debug::assert(classIdGet(calcJob) == classNum(BOMCalcJob_All));
            calcJobAll = calcJob as BOMCalcJob_All;
        }

        switch (classIdGet(calcJob))
        {
            case classNum(BOMCalcJob_Item_Sales) :
                this.design().caption("@SYS126882");
                break;
            case classNum(BOMCalcJob_Item) :
                this.design().caption("@SYS126881");
                break;
            case classNum(BOMCalcJob_All) :
                this.design().caption("@SYS126880");
                break;
            default :
                this.design().caption("@SYS5681");
        }

        itemIdShow.visible(itemMode);
        bomId.visible(itemMode && bomVersionsEnabled);
        productionFlowId.visible(itemMode && productionFlowEnabled);
        itemProcuredUsingGroup.visible(itemMode);
        itemQty.visible(itemMode);

        itemProcurementInCostVersionGroup.visible(!itemMode);

        itemIdGrp.visible(true);    // To get rid of BP check

        if (calcJob.showSales())
        {
            itemQty.visible(false);

            bomId.visible(false);
            bomIdShow.visible(true && bomVersionsEnabled);
            bomIdShow.enabled(true);

            routeIdShow.visible(true && routeEnabled);
            routeIdShow.enabled(true);

            salesQty.visible(true);

            transferToItem.visible(false);
            versionId.visible(false);
            bomCostPriceModel.visible(false);
            fallBack.visible(false);
            bomCalcCostingVersionUpdate.visible(false);
            priceCalculation.visible(false);
        }
        else
        {
            if (itemIdShow.visible())
            {
                inventorydimensionsShow.visible(false);
                bomIdShow.visible(false);
                routeIdShow.visible(false);
            }
            else
            {
                itemIdGrp.visible(false);
            }

            salesQty.visible(false);
            if (calcJob.parmVersionId())
            {
                versionId.enabled(false);
            }
        }

        sysFormEnumComboBox.select(calcJob.parmBOMCalcExplosionMode());

        bomCalcWhereUsedUpdate.visible(calcJob.showWhereUsedUpdate());

        this.initTransferControls();

        this.updateControls();

        this.updateDesign(InventDimFormDesignUpdate::Init);

        inventDim_ds.executeQuery();
        pmfFormCtrl_BOMCalcDialog.initPost();

        this.setDefaultsBasedOnItemProcurementMode(this.updateItemProcurementMode(false));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTransferControls</Name>
				<Source><![CDATA[
    void initTransferControls()
    {
        costPriceTransfer.optionValue(calcJob.parmCostPriceTransfer());
        costPriceInclInUnitPrice.value(calcJob.parmCostPriceInclInUnitPrice());
        costPriceRoundOff.value(calcJob.parmSalesPriceRoundOff());

        salesPriceTransfer.optionValue(calcJob.parmSalesPriceTransfer());
        salesPriceInclInUnitPrice.value(calcJob.parmSalesPriceInclInUnitPrice());
        salesPriceRoundOff.value(calcJob.parmSalesPriceRoundOff());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    display ItemId itemId()
    {
        calcJobObsVar.observe();

        return calcJob.parmItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemQty</Name>
				<Source><![CDATA[
    edit ProductQuantity itemQty(boolean set, ProductQuantity _itemQty)
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmItemQty(_itemQty);
        }

        return calcJob.parmItemQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProductionFlow</Name>
				<Source><![CDATA[
    void lookupProductionFlow(
        FormStringControl   _lookupCtrl,
        InventItemParmData  _itemParmData,
        InventSiteId        _inventSiteId,
        date                _date
        )
    {
        BOMDefaultProductionFlow::lookupProductionFlow(
            _lookupCtrl,
            _itemParmData,
            _inventSiteId,
            _date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedVersionId</Name>
				<Source><![CDATA[
    boolean modifiedVersionId()
    {
        CostingVersion    costingVersion = CostingVersion::find(calcJob.parmVersionId());

        if (costingVersion)
        {
            calcJob.parmCalcDate(costingVersion.DefaultDate ? costingVersion.DefaultDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

            if (costingVersion.InventSiteId)
            {
                calcJob.parmSiteId(costingVersion.InventSiteId);
                inventDim.InventSiteId = costingVersion.InventSiteId;
            }

            calcJob.parmBOMCalcExplosionMode(costingVersion.bomCalcExplosionMode);
            calcJob.parmProfitSet(costingVersion.bomCostProfitSet);

            if (costingVersion.CostingType == CostingVersionCostingType::Standard || costingVersion.CostingType == CostingVersionCostingType::Conversion)
            {
                calcJob.parmCostPriceModel(BOMCostPriceModel::ItemCostPrice);
                bomCostPriceModel.enabled(false);

                calcJob.parmBOMCalcExplosionMode(BOMCalcExplosionMode::SingleLevel);
                bomCalcExplosionMode.enabled(false);

                fallBackVersionId.extendedDataType(extendedTypeNum(CostingVersionIdOpenStd));

                calcJob.parmPurchPriceModel(costingVersion.PurchPriceModel);
                PurchPriceModel.enabled(false);
            }
            else
            {
                calcJob.parmCostPriceModel(costingVersion.bomCostPriceModel);
                calcJob.parmPurchPriceModel(costingVersion.PurchPriceModel);

                bomCostPriceModel.enabled(!costingVersion.bomCalcRestrict);
                purchPriceModel.enabled(!costingVersion.bomCalcRestrict);

                bomCalcExplosionMode.enabled(!costingVersion.bomCalcRestrict);
                fallBackVersionId.extendedDataType(extendedTypeNum(CostingVersionIdOpenStdUndef));
            }

            calcJob.parmBOMCalcFallBack(costingVersion.bomCalcFallBack);
            calcJob.parmFallBackVersionId(costingVersion.bomFallBackVersion);

            // Only default quantity for formulas when the it has not previously been set based on a BomId
            if (!calcJob.parmBOMId() || !pmfFormCtrl_BOMCalcDialog.isFormulaEnabled())
            {
                calcJob.parmItemQty(InventTable::find(calcJob.parmItemId()).inventStandardQty(InventDim::findOrCreate(inventDim).InventDimId));
            }

            sysFormEnumComboBox.select(calcJob.parmBOMCalcExplosionMode());

            calcJob.parmCostPriceTransfer(costingVersion.AllowCost);
            calcJob.parmCostPriceInclInUnitPrice(costingVersion.PriceAllocateMarkup);
            calcJob.parmSalesPriceRoundOff(costingVersion.RoundOffCalculation);

            calcJob.parmSalesPriceTransfer(costingVersion.AllowSales);
            calcJob.parmSalesPriceInclInUnitPrice(costingVersion.PriceAllocateMarkup);
            calcJob.parmSalesPriceRoundOff(costingVersion.RoundOffCalculation);

            if (!itemMode)
            {
                this.editRunPurchCalc(true, costingVersion.PurchCalcRun);
                this.editRunBomCalc(true, costingVersion.bomCalcRun);
            }

            element.initTransferControls();

            element.updateVersionCalculationFields(costingVersion);
            element.enableVersionRecordingFields(costingVersion);

            this.updateItemProcurementMode();
            this.updateBOMRoute();
        }

        return costingVersion ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQty</Name>
				<Source><![CDATA[
    public edit PdsCWInventQty pdsCWQty(boolean _set, PdsCWInventQty _cwQty)
    {
        calcJobObsVar.observe();

        if (_set)
        {
            calcJob.parmCWQty(_cwQty);
        }

        return calcJob.parmCWQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsHtmlHelp</Name>
				<Source><![CDATA[
    public container pdsHtmlHelp()
    {
        return pmfFormCtrl_BOMCalcDialog.pdsHtmlHelp();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfFormulaId</Name>
				<Source><![CDATA[
    edit BOMId pmfFormulaId(boolean _set, BOMId _formulaId)
    {
        calcJobObsVar.observe();

        if (_set)
        {
            calcJob.parmBOMId(_formulaId);
            pmfFormCtrl_BOMCalcDialog.setDefaultBatchSize();
            itemQty.realValue(calcJob.parmItemQty());
        }

        return calcJob.parmBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>profitSet</Name>
				<Source><![CDATA[
    edit CostProfitSet profitSet(
        boolean         _set,
        CostProfitSet   _profitSet
        )
    {
        calcJobObsVar.observe();

        if (_set)
        {
            return calcJob.parmProfitSet(_profitSet);
        }

        return calcJob.parmProfitSet();
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchCalcEnabled</Name>
				<Source><![CDATA[
    private boolean purchCalcEnabled()
    {
        if (itemMode)
        {
            return calcJob.parmItemProcurementMode() == ItemProcurementMode::PurchaseOrder;
        }
        else
        {
            return calcJobAll.parmRunPurchCalc();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRun</Name>
				<Source><![CDATA[
    QueryRun queryRun()
    {
        return calcJob.queryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>routeId</Name>
				<Source><![CDATA[
    edit RouteId routeId(
        boolean     set,
        RouteId     _routeId
        )
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmRouteId(_routeId);
        }

        return calcJob.parmRouteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        super();

        profitSet.selection(0);
        profitSet.selectionChange();

        if (calcJob.parmVersionId())
        {
            element.modifiedVersionId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    RunBase runBase()
    {
        return calcJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQty</Name>
				<Source><![CDATA[
    edit ProductQuantity salesQty(boolean set, ProductQuantity _salesQty)
    {
        calcJobObsVar.observe();

        if (set)
        {
            calcJob.parmSalesQty(_salesQty);
        }

        return calcJob.parmSalesQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultsBasedOnItemProcurementMode</Name>
				<Source><![CDATA[
    private void setDefaultsBasedOnItemProcurementMode(ItemProcurementMode    _itemProcurementMode)
    {
        LeanCostingFacade   leanCostingFacade;
        RefRecId            defaultProductionFlowReferenceRecId;

        if (this.validateItemProcurementMode(_itemProcurementMode))
        {
            calcJob.parmItemProcurementMode(_itemProcurementMode);
            if (_itemProcurementMode == ItemProcurementMode::ProductionFlow && !calcJob.parmProductionFlowReferenceRecId())
            {
                leanCostingFacade = LeanCostingFacade::construct();
                defaultProductionFlowReferenceRecId = leanCostingFacade.getActiveProductionFlow(
                                                        InventItemParmData::construct(
                                                            calcJob.parmItemId(),
                                                            InventDim::findOrCreate(inventDim).InventDimId),
                                                        inventDim.InventSiteId,
                                                        calcJob.parmCalcDate());
                calcJob.parmProductionFlowReferenceRecId(defaultProductionFlowReferenceRecId);
                if (leanCostingFacade.isDefaultProductionFlowActive() == UnknownNoYes::No)
                    warning(strfmt("@SYS329775",
                        PlanReference::find(defaultProductionFlowReferenceRecId).PlanName,
                        calcJob.parmItemId(),
                        inventDim.InventSiteId,
                        calcJob.parmCalcDate()));
            }
            else if (_itemProcurementMode == ItemProcurementMode::ProductionOrder && !calcJob.parmRouteId())
            {
                calcJob.parmRouteId(RouteVersion::findActive(
                    calcJob.parmItemId(),
                    calcJob.parmCalcDate(),
                    calcJob.showSales() ? calcJob.parmSalesQty() : calcJob.parmItemQty(),
                    inventDim).RouteId);
            }
        }
        else
        {
            info(strfmt("@SYS328826", enum2str(_itemProcurementMode)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        int ret;

        if (!PdsGlobal::pdsShowCustomHelp(this, _taskId))
        {
            ret = super(_taskId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBOMRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the BOM route calculation values.
    /// </summary>
    /// <param name="_pmfQtyModified">
    /// A Boolean representing whether the formula quantity field has been modified or not.
    /// </param>
    public void updateBOMRoute(boolean _pmfQtyModified = false)
    {
        BOMId               bomIdActive;
        RouteId             routeIdActive;
        RefRecId            productionFlowReferenceRecIdActive;

        FromQty             fromQty;
        ItemId              itemId = calcJob.parmItemId();
        BOMVersion          bomVersion;

        if (calcJob.showSales())
        {
            fromQty = calcJob.parmSalesQty();
        }
        else
        {
            fromQty = calcJob.parmItemQty();
        }

        if (itemId )
        {
            if (calcJob.parmPmfBOMVersion().RecId)
            {
                // Never change the BOMVersion if it has been explicitly set
                bomVersion    = calcJob.parmPmfBOMVersion();
            }
            else
            {
                bomVersion    = BOMVersion::findActive(itemId, calcJob.parmCalcDate(), fromQty, inventDim);
            }
            bomIdActive   = bomVersion.bomId;
            routeIdActive = RouteVersion::findActive(itemId, calcJob.parmCalcDate(), fromQty, inventDim).RouteId;
            productionFlowReferenceRecIdActive = LeanCostingFacade::construct().getActiveProductionFlow(
                                                                                    InventItemParmData::construct(
                                                                                        itemId,
                                                                                        InventDim::findOrCreate(inventDim).InventDimId),
                                                                                    inventDim.InventSiteId,
                                                                                    calcJob.parmCalcDate());
            // this calculation should only happen when the calculation dialog is invoked from Item / BOM designer
            // when you are in the sales scenario (sales order/quotation) the item quantities are already defaulted
            if (calcJob.parmBOMId() != bomIdActive && BOM::isPmfFormula(bomIdActive) && !calcJob.showSales())
            {
                if (!_pmfQtyModified)
                {
                    this.itemQty(true, bomVersion.getFormulaDefaultQty(itemId, calcJob.parmInventDimId()));
                    if (PdsGlobal::pdsIsCWItem(itemId))
                    {
                        this.pdsCWQty(true, PdsCatchWeight::cwQty(itemId, bomVersion.PmfBatchSize));
                    }
                }
                calcJob.parmPmfYieldPct(bomVersion.PmfYieldPct);
            }

            if ((calcJob.parmItemProcurementMode() == ItemProcurementMode::ProductionOrder)
                && (calcJob.parmBOMId() != bomIdActive || calcJob.parmRouteId() != routeIdActive))
            {
                if (pmfFormCtrl_BOMCalcDialog.isFormulaEnabled())
                {
                    if (this.validateBOMIdAndRouteId() || this.insertActiveVersionForFormulaAndRoute())
                    {
                        calcJob.parmBOMId(bomIdActive);
                        calcJob.parmRouteId(routeIdActive);
                        calcJob.parmProductionFlowReferenceRecId(0);
                        calcJobObsVar.markChanged();
                    }
                }
                else
                {
                    if (this.validateBOMIdAndRouteId() || this.insertUpdateBOMRoute())
                    {
                        calcJob.parmBOMId(bomIdActive);
                        calcJob.parmRouteId(routeIdActive);
                        calcJob.parmProductionFlowReferenceRecId(0);
                        calcJobObsVar.markChanged();
                    }
                }
            }

            if ((calcJob.parmItemProcurementMode() == ItemProcurementMode::ProductionFlow)
                && (calcJob.parmBOMId() != bomIdActive || calcJob.parmProductionFlowReferenceRecId() != productionFlowReferenceRecIdActive))
            {
                if ( (! calcJob.parmBOMId() && ! calcJob.parmProductionFlowReferenceRecId()) ||
                     Box::yesNo("@SYS152543",DialogButton::Yes,"@SYS152544",""))
                {
                    calcJob.parmBOMId(bomIdActive);
                    calcJob.parmProductionFlowReferenceRecId(productionFlowReferenceRecIdActive);
                    calcJob.parmRouteId('');
                    calcJobObsVar.markChanged();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBOMIdAndRouteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the validity of a BOM Id and route id.
    /// </summary>
    /// <returns>true if BOM Id and route id is valid; otherwise, false.</returns>
    protected boolean validateBOMIdAndRouteId()
    {
        return !calcJob.parmBOMId() && !calcJob.parmRouteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertActiveVersionForFormulaAndRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if formula or route must be inserted or updated.
    /// </summary>
    /// <returns>true if formula or route must be inserted or updated; otherwise, false.</returns>
    [Replaceable]
    protected boolean insertActiveVersionForFormulaAndRoute()
    {
        return Box::yesNo("@PRO2408",DialogButton::Yes,"@PRO2366","");
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUpdateBOMRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if bill of material or route must be inserted or updated.
    /// </summary>
    /// <returns>true if bill of material or route must be inserted or updated; otherwise, false.</returns>
    [Replaceable]
    protected boolean insertUpdateBOMRoute()
    {
        return Box::yesNo("@SYS67181",DialogButton::Yes,"@SYS67183","");
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
    private void updateControls()
    {
        this.updateItemProcurementControls();
        this.updateVersionCalculationFields();
        this.updateWarningsControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm   inventDimParm;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (! inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl_Frm_BOMCalc::newFromForm(element);
                }
                inventDimFormSetup.parmSkipOnHandLookUp(true);

                if (this.itemId())
                {
                    inventDimParm.initDimBOMCalc(InventDimGroupSetup::newItemId(this.itemId()));
                }
                else
                {
                    inventDimParm.initSiteDimAllGrp();
                }

                inventDimFormSetup.parmDimParmVisible(inventDimParm);
                inventDimFormSetup.parmDimParmEnabled(inventDimParm);
                inventDimFormSetup.formSetControls(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateItemProcurementControls</Name>
				<Source><![CDATA[
    void updateItemProcurementControls()
    {
        if (itemMode)
        {
            routeId.enabled(calcJob.parmItemProcurementMode() == ItemProcurementMode::ProductionOrder);
            bomId.enabled(calcJob.parmItemProcurementMode() != ItemProcurementMode::PurchaseOrder);
            productionFlowId.enabled(calcJob.parmItemProcurementMode() == ItemProcurementMode::ProductionFlow);
        }

        calcJobObsVar.markChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateItemProcurementMode</Name>
				<Source><![CDATA[
    ItemProcurementMode updateItemProcurementMode(boolean _askForUserConfirmation = true)
    {
        ItemId              itemId = calcJob.parmItemId();
        CostingVersion      costingVersion;
        ItemProcurementMode itemProcModeActive;
        ReqPOType           plannedOrderType;

        // Only necessary if running a calculation for a single item
        if (!itemMode)
            return calcJob.parmItemProcurementMode();

        costingVersion = CostingVersion::find(calcJob.parmVersionId());

        // If the current value of parmItemProcurementMode is illegal
        // in this costing version, change it to a legal value
        if (!this.validateItemProcurementMode(calcJob.parmItemProcurementMode()))
        {
            if (calcJob.parmItemProcurementMode() == ItemProcurementMode::PurchaseOrder)
                itemProcModeActive = ItemProcurementMode::ProductionOrder;
            else
                itemProcModeActive = ItemProcurementMode::PurchaseOrder;

            calcJob.parmItemProcurementMode(itemProcModeActive);
            this.updateControls();
        }

        if (isConfigurationkeyEnabled(configurationkeynum(Req)))
        {
            plannedOrderType = ReqPO::reqRefType2ReqPoType(
                ReqSetupDim::newInventTable(
                    InventTable::find(itemId),
                    InventDim::findOrCreate(inventDim).InventDimId).plannedOrderTypeReq());

            if (plannedOrderType == ReqPOType::Purch)
            {
                itemProcModeActive = ItemProcurementMode::PurchaseOrder;
            }
            else if (!costingVersion.RecId || costingVersion.BOMCalcRun)
            {
                itemProcModeActive = (plannedOrderType == ReqPOType::Kanban) ?
                    ItemProcurementMode::ProductionFlow :
                    ItemProcurementMode::ProductionOrder;
            }

            if (calcJob.parmItemProcurementMode() != itemProcModeActive
                && this.validateItemProcurementMode(itemProcModeActive)
                && (!_askForUserConfirmation ||
                    Box::yesNo("@SYS152541", DialogButton::Yes, "@SYS152542", "")))
            {
                calcJob.parmItemProcurementMode(itemProcModeActive);
                rbtnItemProcMode.selection(itemProcModeActive);
                rbtnItemProcMode.modified();
                this.updateControls();
            }
        }

        return calcJob.parmItemProcurementMode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVersionCalculationFields</Name>
				<Source><![CDATA[
    void updateVersionCalculationFields(CostingVersion _costingVersion = null)
    {
        boolean enable;

        if (!_costingVersion.RecId)
        {
            _costingVersion = CostingVersion::find(calcJob.parmVersionId());
        }

        enable = !_costingVersion.bomCalcRestrict;

        profitSet.enabled(enable);
        bomCalcFallBack.enabled(enable);
        fallBackVersionId.enabled(enable);

        if (_costingVersion.CostingType == CostingVersionCostingType::Standard ||
            _costingVersion.CostingType == CostingVersionCostingType::Conversion)
        {
            bomCalcExplosionMode.enabled(false);
        }
        else
        {
            if (!this.bomCalcEnabled())
            {
                calcJob.parmBOMCalcExplosionMode(BOMCalcExplosionMode::SingleLevel);
                sysFormEnumComboBox.select(calcJob.parmBOMCalcExplosionMode());
                bomCalcExplosionMode.enabled(false);
            }
            else
            {
                bomCalcExplosionMode.enabled(enable);
            }

            bomCostPriceModel.enabled(enable && this.bomCalcEnabled());
        }

        purchPriceModel.enabled(
            enable &&
            (this.purchCalcEnabled() ||
             calcJob.parmBOMCalcExplosionMode() == BOMCalcExplosionMode::MultiLevel ||
             calcJob.parmBOMCalcExplosionMode() == BOMCalcExplosionMode::AccordingBOMLineType));

        calcJobObsVar.markChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWarningsControls</Name>
				<Source><![CDATA[
    void updateWarningsControls()
    {
        overrideGrpWarnings.optionValue(calcJob.parmOverrideGroupWarnings());

        checkNoBOM.value(this.bomCalcEnabled() ? calcJob.parmCheckNoBOM() : false);
        checkNoRoute.value(this.bomCalcEnabled() ? calcJob.parmCheckNoRoute() : false);
        checkNoResource.value(this.bomCalcEnabled() ? calcJob.parmCheckNoResource() : false);

        checkNoBOM.enabled(this.bomCalcEnabled());
        checkNoRoute.enabled(this.bomCalcEnabled());
        checkNoResource.enabled(this.bomCalcEnabled());

        checkNoConsump.value(calcJob.parmCheckNoConsump());
        checkNoCostPrice.value(calcJob.parmCheckNoCostPrice());
        checkAgeCostPrice.value(calcJob.parmCheckAgeCostPrice());
        checkMinContribution.realValue(calcJob.parmCheckMinContribution());
        checkMissingUpdates.value(calcJob.parmCheckMissingUpdates());
        checkUseFallBack.value(calcJob.parmCheckUseFallBack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemProcurementMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verify if item procurement mode is valid.
    /// </summary>
    /// <param name = "_mode">
    /// Item procurement mode.
    /// </param>
    /// <returns>
    /// True if item procurement mode is valid; otherwise, false.
    /// </returns>
    protected boolean validateItemProcurementMode(ItemProcurementMode _mode)
    {
        CostingVersion costingVersion = CostingVersion::find(calcJob.parmVersionId());
        boolean validProcurementMode; 

        if (!costingVersion.bomCalcRestrict)
            return true;

        switch (_mode)
        {
            case ItemProcurementMode::ProductionOrder:
            case ItemProcurementMode::ProductionFlow:
                validProcurementMode = costingVersion.bomCalcRun;
                break;
            case ItemProcurementMode::PurchaseOrder:
                validProcurementMode = costingVersion.PurchCalcRun;
                break;
            default:
                validProcurementMode = costingVersion.bomCalcRun;
        }

        return validProcurementMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProcurement</Name>
				<Source><![CDATA[
    private boolean validateProcurement()
    {
        return calcJobAll.parmRunBomCalc() || calcJobAll.parmRunPurchCalc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>versionId</Name>
				<Source><![CDATA[
    edit CostingVersionIdOpenStdUndef versionId(
        boolean               set,
        CostingVersionIdOpen  _costingVersionId
        )
    {
        if (set)
            calcJob.parmVersionId(_costingVersionId);

        return calcJob.parmVersionId();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>forceWrite</Name>
						<Source><![CDATA[
        public boolean forceWrite(boolean _newValue = true)
        {
            boolean ret;

            ret = super(_newValue);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            select inventDim
                where inventDim.InventDimId == calcJob.parmInventDimId();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>configId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!pmfFormCtrl_BOMCalcDialog.isFormulaEnabled())
                {
                    calcJob.parmItemQty(InventTable::find(calcJob.parmItemId()).inventStandardQty(InventDim::findOrCreate(inventDim).InventDimId));
                    calcJobObsVar.markChanged();
                }

                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventColorId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSiteId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!pmfFormCtrl_BOMCalcDialog.isFormulaEnabled())
                {
                    calcJob.parmItemQty(InventTable::find(calcJob.parmItemId()).inventStandardQty(InventDim::findOrCreate(inventDim).InventDimId));
                    calcJobObsVar.markChanged();
                }

                element.updateItemProcurementMode();
                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSizeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventStyleId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventVersionId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateBOMRoute();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BOMIdShow</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BOMTable::jumpRefBomTable(BOMTable::find(this.text()),this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            InventTable::lookupBOMId(this, calcJob.parmItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PmfFormulaIdShow</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventTable::lookupFormulaId(this,calcJob.parmItemId(),
                inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RouteIdShow</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            RouteTable::jumpRefRouteTable(this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            InventTable::lookupRouteId(this, calcJob.parmItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VersionId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
        	FormRun formRun = new MenuFunction(menuItemDisplayStr(CostingVersion), MenuItemType::Display).create(new Args());
            formRun.run();
            formRun.dataSource().findRecord(CostingVersion::find(calcJob.parmVersionId()));
            formRun.detach();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;

            ret = super();

            if (ret)
            {
                if (element.modifiedVersionId())
                {
                    calcJobObsVar.markChanged();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CalcDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            if (ret)
            {
                element.updateBOMRoute();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PmfFormulaId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventTable::lookupFormulaId(this,calcJob.parmItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsCWQty</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;
            FromQty     preItemQty = calcJob.parmItemQty();
            FromQty     preSalesQty = calcJob.parmSalesQty();

            ret = super();

            if (ret && calcJob.parmItemId())
            {
                if (preItemQty != calcJob.parmItemQty())
                {
                    element.updateBOMRoute(pmfFormCtrl_BOMCalcDialog.isFormulaEnabled());
                    itemQty.realValue(calcJob.parmItemQty());
                }

                if (preSalesQty != calcJob.parmSalesQty())
                {
                    salesQty.realValue(calcJob.parmSalesQty());
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>itemQty</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            // Quantity produced is only relevant for suggesting a new BOM and/or Route
            // That's the case only for ItemProcurementMode::ProductionOrder
            if (ret
                && calcJob.parmItemProcurementMode() == ItemProcurementMode::ProductionOrder)
            {
                element.updateBOMRoute(
                    pmfFormCtrl_BOMCalcDialog.isFormulaEnabled()
                    );
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            ret = super();

            if (itemQty.realValue() == 0)
            {
                ret = checkFailed("@SYS113821");
            }

            if (PdsGlobal::pdsIsCWItem(calcJob.parmItemId()))
            {
                ret = ret && PdsCatchWeight::validateInventQty(
                    calcJob.parmItemId(),
                    itemQty.realValue(),
                    pdsCWQty.realValue());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SalesQty</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updateBOMRoute();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (salesQty.realValue() == 0)
            {
                ret = checkFailed("@SYS113821");
            }

            if (PdsGlobal::pdsIsCWItem(calcJob.parmItemId()))
            {
                ret = ret && PdsCatchWeight::validateQty(
                    calcJob.parmItemId(),
                    salesQty.realValue(),
                    UnitOfMeasure::unitOfMeasureIdBySymbol(calcJob.parmSalesUnit()),
                    pdsCWQty.realValue());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>rbtnItemProcMode</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            if (ret)
            {
                element.updateBOMRoute();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BOMId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BOMTable::jumpRefBomTable(BOMTable::find(this.text()),this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            InventTable::lookupBOMId(this, calcJob.parmItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RouteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            RouteTable::jumpRefRouteTable(this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            InventTable::lookupRouteId(this, calcJob.parmItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProductionFlowId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupProductionFlow(this,
                InventItemParmData::construct(
                    calcJob.parmItemId(),
                    InventDim::findOrCreate(inventDim).InventDimId),
                inventDim.InventSiteId,
                calcJob.parmCalcDate());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (calcJob.parmProductionFlowReferenceRecId() && calcJob.parmRouteId())
            {
                calcJob.parmRouteId('');
                calcJobObsVar.markChanged();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BOMCalcExplosionMode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                calcJob.parmBOMCalcExplosionMode(sysFormEnumComboBox.selection());
                element.updateVersionCalculationFields();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>costPriceTransfer</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCostPriceTransfer(costPriceTransfer.optionValue());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>costPriceInclInUnitPrice</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCostPriceInclInUnitPrice(costPriceInclInUnitPrice.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>costPriceRoundOff</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCostPriceRoundOff(costPriceRoundOff.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>salesPriceTransfer</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmSalesPriceTransfer(salesPriceTransfer.optionValue());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>salesPriceInclInUnitPrice</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmSalesPriceInclInUnitPrice(salesPriceInclInUnitPrice.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>salesPriceRoundOff</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmSalesPriceRoundOff(salesPriceRoundOff.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OverrideGrpWarnings</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmOverrideGroupWarnings(overrideGrpWarnings.optionValue());
            element.updateWarningsControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckNoBOM</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckNoBOM(checkNoBOM.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckNoRoute</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckNoRoute(checkNoRoute.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckNoResource</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckNoResource(checkNoResource.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckNoConsump</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckNoConsump(checkNoConsump.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckNoCostPrice</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckNoCostPrice(checkNoCostPrice.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckAgeCostPrice</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            calcJob.parmCheckAgeCostPrice(checkAgeCostPrice.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckMinContribution</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            calcJob.parmCheckMinContribution(checkMinContribution.realValue());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckMissingUpdates</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckMissingUpdates(checkMissingUpdates.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckUseFallBack</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            calcJob.parmCheckUseFallBack(checkUseFallBack.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Ok</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CostingVersion  costingVersion;
            boolean         isQtyValid = true;

            if (itemMode)
            {
                if (calcJob.showSales())
                {
                    isQtyValid = salesQty.validate();
                }
                else
                {
                    isQtyValid = ItemQty.validate();
                }

                if (!isQtyValid)
                {
                    return;
                }
            }

            if (calcJob.parmBomCalcWhereUsedUpdate() == NoYes::Yes)
            {
                costingVersion = CostingVersion::find(calcJob.parmVersionId());

                if (costingVersion && costingVersion.bomCalcFallBack == BOMCalcFallBack::None)
                {
                    if (Box::yesNo("@SYS122399", DialogButton::No) != DialogButton::Yes)
                        return;
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS5681</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ItemIdGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ItemIdShow</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ItemId</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventorydimensionsShow</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventorydimensionsShow_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BOMIdShow</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS27536</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>BOMId</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PmfFormulaIdShow</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PMF</ConfigurationKey>
										<ElementPosition>1946157054</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@PRO81</HelpText>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pmfFormulaId</DataMethod>
										<Label>@SYS672</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RouteIdShow</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS27595</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RouteId</DataMethod>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>General</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VersionId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>versionId</DataMethod>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Inventorydimensions</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>4</VerticalSpacing>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CalcDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS25077</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>CalcDate</DataMethod>
										<Label>@SYS10568</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PmfFormulaId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PMF</ConfigurationKey>
										<ElementPosition>2122317822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@PRO1092</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pmfFormulaId</DataMethod>
										<Label>@SYS672</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2126512126</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>itemQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS75385</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>itemQty</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>SalesQty</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProfitSet</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS25076</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ProfitSet</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOMCalcCostingVersionUpdate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_BOMCalcCostingVersionUpdate</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>calcCostingVersionUpdate</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BOMCalcWhereUsedUpdate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_BOMCalcWhereUsedUpdate</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>bomCalcWhereUsedUpdate</DataMethod>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS2952</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ItemProcuredUsingGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRadioButtonControl">
										<Name>rbtnItemProcMode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>RadioButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Caption>@SCM:BOMCalcDialog_rbtnItemProcMode</Caption>
										<DataMethod>editItemProcurementMode</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BOMId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>BOMId</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RouteId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RouteId</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProductionFlowId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editProductionFlowName</DataMethod>
										<Label>@SYS131941</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS152539</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ItemProcurementInCostVersionGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProductionCB</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Prod</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS303207</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editRunBomCalc</DataMethod>
										<Label>@SYS4398</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PurchaseCB</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LogisticsBasic</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS303206</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editRunPurchCalc</DataMethod>
										<Label>@SYS15812</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS303205</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CalcTypeGrp</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOMCostPriceModel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_BOMCostPriceModel</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCostPriceModel</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PurchPriceModel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editPurchPriceModel</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOMCalcExplosionMode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS116255</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS40908</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FallBack</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BOMCalcFallBack</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>calcFallBack</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>fallBackVersionId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>fallBackVersionId</DataMethod>
										<Label>@SYS104633</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS106179</Caption>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Auto</ArrangeMethod>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TransferToItem</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>costPriceTransfer</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_costPriceTransfer</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>costPriceInclInUnitPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_costPriceInclInUnitPrice</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS6613</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>costPriceRoundOff</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_costPriceRoundOff</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS10112</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS105677</Caption>
								<FrameOptionButton>Check</FrameOptionButton>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>salesPriceTransfer</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_salesPriceTransfer</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>salesPriceInclInUnitPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_salesPriceInclInUnitPrice</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS6613</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>salesPriceRoundOff</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_salesPriceRoundOff</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS10112</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS105678</Caption>
								<FrameOptionButton>Check</FrameOptionButton>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS105676</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Warnings</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OverrideGrpWarnings</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_OverrideGrpWarnings</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckNoBOM</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97407</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97406</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckNoRoute</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97409</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97408</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckNoResource</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS314930</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS314929</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckNoConsump</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97411</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97410</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckNoCostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97413</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97412</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>CheckAgeCostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97415</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97414</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CheckMinContribution</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS97417</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS97416</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS97436</Caption>
								<FrameOptionButton>Check</FrameOptionButton>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PriceCalculation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckMissingUpdates</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_CheckMissingUpdates</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS106127</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckUseFallBack</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:BOMCalcDialog_CheckUseFallBack</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS106129</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24047</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS59278</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
