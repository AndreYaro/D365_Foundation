<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ReqDemPlanForecastIAKLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class ReqDemPlanForecastIAKLookup extends FormRun
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method is only called when the dropdown is closed, thus the selection is completed.
    ///     At this point the columns displayed in the lookup are still in the current context.
    ///     This lets the user to obtain multiple column values from the dropdown and add them to the caller form datasource
    ///     where needed.
    /// </summary>
    /// <param name="_selectString">
    ///     The control selected
    /// </param>
    public void closeSelect(str _selectString)
    {
        FormRun callerForm;
        ForecastItemAllocation itemAlloc;
        ReqDemplanForecastIAKMap iakmap;

        itemAlloc = ForecastItemAllocation_DS.cursor();

        super(_selectString);

        // Here we can simply add the necessary data retrieved from the cursor to the caller form datasource where needed and refresh
        // it to get the values shown to the user and also added to the database.
        callerForm = this.args().caller();
        iakmap = callerForm.dataSource().cursor();
        iakmap.ForecastItemAllocation = itemAlloc.AllocateId;
        iakmap.ForecastItemAllocationDataAreaID = itemAlloc.dataAreaId;
        callerForm.dataSource().refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        Args args = this.args();

        // check input parameters
        if (!args || !args.parmObject())
        {
            throw error(Error::missingFormActiveBuffer(formStr(ReqDemplanForecastIAKLookup)));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        public void run()
    {
        FormStringControl   callerControl   = SysTableLookup::getCallerStringControl(element.args());
        boolean             filterLookup    = false;

        // if lookup was called with filter, then supress autoSearch
        if (callerControl.text() && callerControl.hasChanged())
        {
            filterLookup = true;
            ForecastItemAllocation_DS.autoSearch(false);
        }

        element.selectMode(IAKID);

        super();

        if (filterLookup)
        {
            ForecastItemAllocation_DS.research();
            ForecastItemAllocation_DS.filter(fieldnum(ForecastItemAllocation, AllocateId),callerControl.text());
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ForecastItemAllocation</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
                public void init()
        {
            QueryBuildDataSource    queryBuildDataSource;
            Query                   query;

            query = new Query();
            query.allowCrossCompany(true);
            // Add the first data source to the query
            queryBuildDataSource = query.addDataSource(tableNum(ForecastItemAllocation));
            queryBuildDataSource.orderMode(OrderMode::OrderBy);
            queryBuildDataSource.addSortField(fieldNum(ForecastItemAllocation, dataAreaId));

            super();

            this.query(query);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ForecastItemAllocation</Name>
			<Table>ForecastItemAllocation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllocateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoQuery>No</AutoQuery>
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>IAKLookupGrid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>IAKID</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>572662304</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AllocateId</DataField>
						<DataSource>ForecastItemAllocation</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>IAKDataAreaID</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>dataAreaId</DataField>
						<DataSource>ForecastItemAllocation</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>IAKDescription</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>ForecastItemAllocation</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>ForecastItemAllocation</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>