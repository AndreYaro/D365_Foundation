<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>EcoResProductRelation</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class EcoResProductRelation extends FormRun
{
    // The product matching EcoResProductRelationTable.Product1
    EcoResProduct product1;
    private LanguageId selectedLanguageId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        selectedLanguageId = EcoResProductParametersFallbackLanguage::getSelectedFallbackLanguage();
        product1 = this.retrieveProduct1FromArgs();
        if (product1 == null)
        {
            // Disable support for creating new relations as product1 is not available
            EcoResProductRelationTable_ds.allowCreate(false);
        }

        if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
        {
            // Set visible to true when feature is Enabled, by default, the feature is Disabled and visible is false.
            ecoResProductRelationTable_DisplayOrder.visible(true);
        }

        this.setupFallbackProductTranslation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupFallbackProductTranslation</Name>
				<Source><![CDATA[
    private void setupFallbackProductTranslation()
    {
        List fallbackStringControls = new List(Types::Integer);
        List ecoResProductTranslationStringControls = new List(Types::Integer);

        ecoResProductTranslationStringControls.addEnd(element.controlId(formControlStr(EcoResProductRelation, EcoResProduct_Related_Name)));
        fallbackStringControls.addEnd(element.controlId(formControlStr(EcoResProductRelation, EcoResProductTranslationFallbackView_Name)));

        EcoResProductTranslationFallbackViewModel::setupFallbackTranslationForm(element,
                                                                                element.EcoResProductTranslationFallbackView_ds,
                                                                                element.EcoResProductRelationTable_ds,
                                                                                fallbackStringControls,
                                                                                ecoResProductTranslationStringControls);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveProduct1FromArgs</Name>
				<Source><![CDATA[
    protected EcoResProduct retrieveProduct1FromArgs()
    {
        EcoResProduct sourceProduct = element.args().record() as EcoResProduct;
        if (sourceProduct != null)
        {
            // product must be either EcoResProductMaster or EcoResDistinctProduct
            // - not EcoResDistinctProductVariant
            if (sourceProduct is EcoResDistinctProductVariant)
            {
                EcoResDistinctProductVariant variant = (sourceProduct as EcoResDistinctProductVariant);
                sourceProduct = EcoResProduct::find(variant.ProductMaster);
            }

            QueryBuildDataSource qbdsProductRelationTable = EcoResProductRelationTable_ds.query().dataSourceTable(tableNum(EcoResProductRelationTable));

            if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
            {
                // Set order fileds when feature is Enabled, by default, the feature is Disabled.
                qbdsProductRelationTable.sortClear();
                qbdsProductRelationTable.addSortField(fieldNum(EcoResProductRelationTable, ProductRelationType), SortOrder::Ascending);
                qbdsProductRelationTable.addSortField(fieldNum(EcoResProductRelationTable, DisplayOrder), SortOrder::Ascending);
                qbdsProductRelationTable.addSortField(fieldNum(EcoResProductRelationTable, Product2), SortOrder::Ascending);
            }

            qbdsProductRelationTable.addRange(fieldNum(EcoResProductRelationTable, product1)).value(queryValue(sourceProduct.RecId));
        }
        return sourceProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EcoResProductRelationTable</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            EcoResProductRelationTable.Product1 = product1.RecId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>research</Name>
						<Source><![CDATA[
        /// <summary>
        /// Research the current datasource
        /// </summary>
        /// <param name = "_retainPosition">true if the record position should be retained; otherwise, false.</param>
        /// <remarks>
        /// When the fallback translation feature is enabled, a view is added as datasource of this form. This prevents the research to retain the position
        /// properly, as the platform currently does not support views as datasources with regards to this scenario. For this reason, the positioning is explicitly
        /// implemented here.
        /// </remarks>
        public void research(boolean _retainPosition = false)
        {
            boolean forceRetainPosition = _retainPosition && EcoResProductTranslationFallbackViewModel::retainPositionOnResearch();
            RefRecId currentCursorRecId;

            if (forceRetainPosition)
            {
                currentCursorRecId = EcoResProductRelationTable_ds.cursor().RecId;
            }

            super(_retainPosition);

            if (forceRetainPosition)
            {
                EcoResProductRelationTable_ds.positionToRecordByValue(fieldNum(EcoResProductRelationTable, RecId), int642Str(currentCursorRecId));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Product2</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                SysReferenceTableLookup sysReferenceTableLookup;
                Query                   query;
                QueryBuildDataSource    qbds;
                QueryBuildRange         qbr;

                query = new Query();
                qbds = query.addDataSource(tableNum(EcoResProduct));
                qbr = qbds.addRange(fieldnum(EcoResProduct, InstanceRelationType));
                // we want EcoResProductMaster or EcoResDistinctProduct but not EcoResDistinctProductVariant:
                qbr.value(SysQuery::valueNot(tableNum(EcoResDistinctProductVariant)));

                sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tablenum(EcoResProduct), _formReferenceControl);
                sysReferenceTableLookup.addLookupfield(fieldNum(EcoResProduct, DisplayProductNumber));
                sysReferenceTableLookup.addLookupfield(fieldNum(EcoResProduct, SearchName));

                sysReferenceTableLookup.parmQuery(query);
                return sysReferenceTableLookup.performFormLookup() as EcoResProduct;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance()) && EcoResProductParameters::find().UseFallbackTranslation)
                {
                    EcoResProductTranslation.data(EcoResProductTranslationFallbackView::findTranslationByLanguage(EcoResProductRelationTable.Product2, selectedLanguageId));
                    EcoResProductTranslationFallbackView.data(EcoResProductTranslationFallbackView::findFallbackTranslationByLanguage(EcoResProductRelationTable.Product2, selectedLanguageId));
                    EcoResProductTranslationFallbackView_ds.refresh();
                }
                else
                {
                    EcoResProductTranslation.data(EcoResProductTranslation::findByProductLanguage(EcoResProductRelationTable.Product2, SystemParameters::getSystemLanguageId()));
                }
                EcoResProductTranslation_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>EcoResProductTranslation</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            EcoResProductTranslation::queryAddDefaultLanguage(this.query());

            QueryBuildDataSource    qbdsProductTranslation = this.queryBuildDataSource();

            qbdsProductTranslation.addRange(fieldNum(EcoResProductTranslation, LanguageId)).value(queryValue(SystemParameters::getSystemLanguageId()));
            qbdsProductTranslation.addLink(fieldNum(EcoResProductRelationTable, Product2), fieldNum(EcoResProductTranslation, Product));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RefGroup_Product2</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            EcoResProduct product = EcoResProduct::find(EcoResProductRelationTable.Product2);
                
            Args args = new Args(this);
            args.lookupRecord(product);

            MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(EcoResProductDetails), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RefGroup_RelationType</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            EcoResProductRelationType productRelationType = EcoResProductRelationType::findRecId(EcoResProductRelationTable.ProductRelationType);
                
            Args args = new Args(this);
            args.lookupRecord(productRelationType);

            MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(EcoResProductRelationType), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductRelationTable</Name>
			<Table>EcoResProductRelationTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductTranslationFallbackView</Name>
			<Table>EcoResProductTranslationFallbackView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemLanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductRelationTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductTranslation</Name>
			<Table>EcoResProductTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductRelationTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS309450</Caption>
		<DataSource xmlns="">EcoResProductRelationTable</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleList</Style>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>EcoResProductRelationTable</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>RefGroup_Product2</Name>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RefGroup_Product2_DisplayProductNumber</Name>
								<DataRelationPath>Product2</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>EcoResProductRelationTable</DataSource>
						<Label>@SYS133863</Label>
						<ReferenceField>Product2</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResProductTranslationFallbackView_Name</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResProductTranslationFallbackView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResProduct_Related_Name</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS137453</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResProductTranslation</DataSource>
						<Label>@SYS59620</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>RefGroup_RelationType</Name>
						<ElementPosition>2058005160</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RefGroup_RelationType_Name</Name>
								<DataRelationPath>ProductRelationType</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>EcoResProductRelationTable</DataSource>
						<Label>@SYS309396</Label>
						<ReferenceField>ProductRelationType</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>EcoResProductRelationTable_DisplayOrder</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Real</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>DisplayOrder</DataField>
						<DataSource>EcoResProductRelationTable</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>EcoResProductRelationTable</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>