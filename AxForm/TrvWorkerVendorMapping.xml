<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvWorkerVendorMapping</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvWorkerVendorMapping extends FormRun
{
    TrvHcmWorkerRecId   workerRecId;
    boolean isVendor;

}
]]></Source>
			</Method>
			<Method>
				<Name>fillAccountTypeLookup</Name>
				<Source><![CDATA[
    public void fillAccountTypeLookup()
    {
        trvPartyEmployeeRelationship_AccountType.clear();
        trvPartyEmployeeRelationship_AccountType.add(enum2str(LedgerJournalACType::Ledger));
        trvPartyEmployeeRelationship_AccountType.add(enum2str(LedgerJournalACType::Vend));

        if (TrvPartyEmployeeRelationship.LedgerDimension == 0)
        {
            trvPartyEmployeeRelationship_AccountType.selectText(enum2str(LedgerJournalACType::Vend));
        }
        else
        {
            trvPartyEmployeeRelationship_AccountType.selectText(enum2str(TrvPartyEmployeeRelationship.AccountType));
        }

        this.loadVendorAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        HcmWorker   hcmWorker;
        super();

        if (element.args() && element.args().dataset() == tablenum(HcmWorker) && element.args().record())
        {
            hcmWorker = element.args().record();
            workerRecId = hcmWorker.RecId;
        }
        else
        {
            throw error ("@SYS122503");
        }

        isVendor = DirPartyTableHelper::isvendor(HcmWorker::find(workerRecId).Person);

        TrvPartyEmployeeRelationship_LedgerDimension.parmIsDefaultAccount(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadVendorAccount</Name>
				<Source><![CDATA[
    public void loadVendorAccount()
    {
        if (isVendor && TrvPartyEmployeeRelationship_AccountType.valueStr() == enum2str(LedgerJournalACType::Vend) && TrvPartyEmployeeRelationship.LedgerDimension == 0)
        {
            DimensionDynamicAccount vendorDimension = LedgerDynamicAccountHelper::getDynamicAccountFromAccountNumber(VendTable::findByPartyRecId(HcmWorker::find(workerRecId).Person).AccountNum, LedgerJournalACType::Vend);
            if (vendorDimension != 0)
            {
                if (TrvPartyEmployeeRelationship.RecId == 0)
                {
                    // Automatically insert\update the party relationship with the vendor dimension available.
                    TrvPartyEmployeeRelationship = TrvPartyEmployeeRelationship::findOrCreatePartyEmployeeRelationShip(TrvPartyEmployeeRelationship.AccountType, workerRecId, vendorDimension);
                    TrvPartyEmployeeRelationship_ds.research();
                }
                else
                {
                    TrvPartyEmployeeRelationship.LedgerDimension = vendorDimension;
                    TrvPartyEmployeeRelationship.write();
                }
                info("@Expense:WorkerVendorMapping");
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvPartyEmployeeRelationship</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.fillAccountTypeLookup();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            TrvPartyEmployeeRelationship.Worker = workerRecId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Validates the contents of the LedgerDimension field.
            /// </summary>
            /// <returns>true if the field is valid; false otherwise.
            /// The validation always returns true if there's no account yet and the user is editing
            /// other fields like AccountType.</returns>
            public boolean validate()
            {
                boolean ret;

                if (TrvPartyEmployeeRelationship.LedgerDimension != 0)
                {
                    ret = super();
                }
                else
                {
                    // Workaround to suppress a mandatory field warning message triggered for the Account field when the user changes
                    // the account type. The TrvPartyEmployeeRelationship table validation will ensure that the record is only written
                    // if LedgerDimension != 0.
                    ret = true;
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TrvPartyEmployeeRelationship_AccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean             ret;
            LedgerJournalACType selectedAcountType;

            selectedAcountType = str2Enum(selectedAcountType, TrvPartyEmployeeRelationship_AccountType.valueStr());

            ret = super();

            if (TrvPartyEmployeeRelationship.AccountType != selectedAcountType)
            {
                TrvPartyEmployeeRelationship.LedgerDimension = 0;
                TrvPartyEmployeeRelationship.AccountType = selectedAcountType;
            }

            element.loadVendorAccount();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvPartyEmployeeRelationship_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (TrvPartyEmployeeRelationship.AccountType)
            {
                case LedgerJournalACType::Ledger:
                    super();
                    break;
                case LedgerJournalACType::Vend:
                    VendTable::lookupVendor(this);
                    break;
                default:
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean ret;

            LedgerJournalACType accountType = any2Enum(_accountTypeEnumValue);
            switch (accountType)
            {
                case LedgerJournalACType::Vend:
                    ret = true;
                    break;
                default:
                    ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvPartyEmployeeRelationship</Name>
			<Table>TrvPartyEmployeeRelationship</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PerDiem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:MapWorkerToVendor_PerDiem</Caption>
		<DataSource xmlns="">TrvPartyEmployeeRelationship</DataSource>
		<NewRecordAction xmlns="">OK</NewRecordAction>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Accounts</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>TrvPartyEmployeeRelationship_AccountType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS27730</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>TrvPartyEmployeeRelationship_LedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>DimensionDynamicAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
											<Value>AccountType</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>TrvPartyEmployeeRelationship</DataSource>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
						</Controls>
						<Caption>@SYS330005</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Perdiem</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TrvPartyEmployeeRelationship_PerDiem</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PerDiem</DataField>
								<DataSource>TrvPartyEmployeeRelationship</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS330006</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommittButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>