<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjCategory</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjCategory extends FormRun implements RouteCostCategoryIRefreshable, OfficeIGeneratedWorkbookCustomExporter
{
        CategoryModule          categoryView;

        QueryBuildRange         routeCostCategoryCriteria;
        QueryBuildRange         projCategoryGroupCriteria;
        QueryBuildRange         projectCriteria;
        QueryBuildRange         expenseCriteria;
        QueryBuildRange         productionCriteria;

        boolean                 hasProjectAccess;
        boolean                 hasExpenseAccess;
        boolean                 hasProductionAccess;
        boolean                 trvCalledFromDeleteMarked;
        boolean                 isCEIntegEnabled;

        // <GIN>
        boolean                 isTaxParametersMarked_IN;
        // </GIN>

}
]]></Source>
			</Method>
			<Method>
				<Name>AddRangeToLedgerDimensionAccountQuery</Name>
				<Source><![CDATA[
    public void AddRangeToLedgerDimensionAccountQuery(QueryBuildDataSource qbds,ProjAccountType paType)
    {
        QueryBuildRange qbr;

        // There is a relation between ProjPosting and ProjCategory (one to many in that direction). Add
        // filters over the rest of the fields forming the primary key on ProjPosting to make the join 1:1.

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, ProjFundingSource));
        qbr.value(SysQuery::value(0));
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, ProjAccountType));
        qbr.value(SysQuery::value(paType));
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, ProjCode));
        qbr.value(SysQuery::value(TableGroupAll::All));
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, ProjRelation));
        qbr.value(SysQuery::valueEmptyString());
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm*/

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, CategoryCode));
        qbr.value(SysQuery::value(TableGroupAll::Table));
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm

        qbr = SysQuery::findOrCreateRange(qbds, fieldNum(ProjPosting, ProjCategoryRelation));
        qbr.value(SysQuery::value(projCategory.CategoryId));
        qbr.status(1); // Lock the range so that it can't be edited in the SysQueryForm
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeView</Name>
				<Source><![CDATA[
    // changes the columns seen on the grid and also the query range
    public void changeView()
    {
        switch (categoryView)
        {
            case CategoryModule::Base:
                useInProject.visible(true);
                useInExpense.visible(true);
                useInProduction.visible(!isCEIntegEnabled);
                productionCriteria.value('');
                expenseCriteria.value('');
                projectCriteria.value('');
                break;

            case CategoryModule::Project:
                useInProject.visible(false);
                useInExpense.visible(true);
                useInProduction.visible(!isCEIntegEnabled);
                productionCriteria.value('');
                expenseCriteria.value('');
                projectCriteria.value(queryValue(NoYes::Yes));
                element.design().caption("@SYS341686");
                break;

            case CategoryModule::Expense:
                useInProject.visible(true);
                useInExpense.visible(false);
                useInProduction.visible(false);
                projectCriteria.value('');
                productionCriteria.value('');
                expenseCriteria.value(queryValue(NoYes::Yes));
                TrvCostType_IsGovernment.visible(TrvParameters::find().UseAntiCorruption);
                break;

            case CategoryModule::Production:
                useInProject.visible(true);
                useInExpense.visible(false);
                useInProduction.visible(false);
                projectCriteria.value('');
                expenseCriteria.value('');
                productionCriteria.value(queryValue(NoYes::Yes));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createChildRecord</Name>
				<Source><![CDATA[
    void createChildRecord(CategoryModule _module)
    {
        switch (_module)
        {
            case CategoryModule::Project:
                projCategory_ds.create();
                break;

            case CategoryModule::Expense:
                trvCostType_ds.create();
                break;

            case CategoryModule::Production:
                routeCostCategories_ds.create();
                break;
        }

        this.initializeChildRecord(_module);
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableAllButtons</Name>
				<Source><![CDATA[
    void disableAllButtons()
    {
        transactions.enabled(false);
        setup.enabled(false);
        validation.enabled(false);
        function.enabled(false);
        costControlCommittedCost.enabled(false);
        forecast.enabled(false);
        ctrlProjectControl.enabled(false);
        rates.enabled(false);
        routeCostCategoryPrice.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleSecurity</Name>
				<Source><![CDATA[
    void handleSecurity(FormDataSource _fds, boolean _hasAccess)
    {
        if (_fds && !_fds.allowCheck() && !_hasAccess)
        {
            _fds.query().dataSourceNo(1).enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTableAccess</Name>
				<Source><![CDATA[
    boolean hasTableAccess(TableId _tableId, AccessType _neededAccessLevel = AccessType::View)
    {
        DictTable dictTable = new DictTable(_tableId);

        if (dictTable)
        {
            return dictTable.rights() >= _neededAccessLevel;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideButtons</Name>
				<Source><![CDATA[
    void hideButtons()
    {
        // since Expense and Production modules do not integrate, hide corresponding buttons
        // also Project does not Integrate with Expense Mileage category, hide mileage button
        switch (categoryView)
        {
            case CategoryModule::Expense:
                routeCostCategoryPrice.visible(false);
                break;

            case CategoryModule::Project:
            case CategoryModule::Production:
                rates.visible(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        FormRun             callerForm;
        ProjCategoryGroup   projCategoryGroup;
        ProjCategory        projCategoryLocal;
        CategoryTable       categoryTableLocal;

        if (this.args().parmEnumType() == enumNum(CategoryModule))
        {
            categoryView = this.args().parmEnum();
        }

        // If GoToMainTable from project,production,or expense category, change the lookup record to be the base CategoryTable Record, as
        // the main grid is bound to CategoryTable table.
        if ((this.args().lookupTable() == tableNum(TrvCostType) && this.args().lookupField() == fieldNum(TrvCostType,CostType))||
            (this.args().lookupTable() == tableNum(ProjCategory) && this.args().lookupField() == fieldNum(ProjCategory,CategoryId))||
            (this.args().lookupTable() == tableNum(RouteCostCategory) && this.args().lookupField() == fieldNum(RouteCostCategory,CostCategoryId))
            )
        {
            this.args().lookupTable(tableNum(CategoryTable));
            this.args().lookupField(fieldNum(CategoryTable,CategoryId));
        }

        if (this.args().lookupRecord() is ProjCategory)
        {
            //Need to translate to CategoryTable which is the base datasource
            projCategoryLocal = this.args().lookupRecord();
            select categoryTableLocal
                where categoryTableLocal.CategoryId == projCategoryLocal.CategoryId;
            this.args().lookupRecord(categoryTableLocal);
        }

        this.updateFormCaption();

        super();

        isCEIntegEnabled = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();
        UseInProduction.visible(!isCEIntegEnabled);
        ProjCategoryEmplOption.visible(!isCEIntegEnabled);
        SetupSubscription.visible(!isCEIntegEnabled);
        SetupCategory_PSAIndirectComponent.visible(!isCEIntegEnabled);
        SetupCategory_TsAbsence.visible(!isCEIntegEnabled);
        SetupCategory_Active.visible(!isCEIntegEnabled);

        //Initialize splitter

        projCategory_ds.allowCreate(false);
        trvCostType_ds.allowCreate(false);
        routeCostCategories_ds.allowCreate(false);

        projCategory_ds.allowDelete(false);
        trvCostType_ds.allowDelete(false);
        routeCostCategories_ds.allowDelete(false);

        QueryBuildDataSource CategoryTableDS = categoryTable_ds.query().dataSourceTable(tableNum(CategoryTable));

        projectCriteria = CategoryTableDS.addRange(fieldNum(CategoryTable, UseInProject));
        expenseCriteria = CategoryTableDS.addRange(fieldNum(CategoryTable, UseInExpense));
        productionCriteria = CategoryTableDS.addRange(fieldNum(CategoryTable, UseInProduction));

        projectCriteria.status(RangeStatus::Hidden);
        expenseCriteria.status(RangeStatus::Hidden);
        productionCriteria.status(RangeStatus::Hidden);

        // Create default ranges for Advanced Filter
        CategoryTableDS.addRange(fieldnum(CategoryTable, CategoryID));
        CategoryTableDS.addRange(fieldnum(CategoryTable, CategoryName));

        // If this is called from ProjCategoryGroup form, filter by CategoryGroupId as selected in the caller form.
        callerForm = this.args().caller();
        if (callerForm && callerForm.name() == formStr(ProjCategoryGroup))
        {
            projCategoryGroupCriteria = categoryTable_ds.query().dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryGroupId));

            projCategoryGroup = this.args().record();
            projCategoryGroupCriteria.value(projCategoryGroup.CategoryGroupId);
        }
        else if (callerForm && callerForm.name() == formStr(BOMCostGroup))
        {
            routeCostCategoryCriteria = categoryTable_ds.query().dataSourceTable(tableNum(RouteCostCategory)).addRange(fieldNum(RouteCostCategory, CostGroupId));

            BOMCostGroup bomCostGroup = this.args().record();
            routeCostCategoryCriteria.value(bomCostGroup.CostGroupId);
        }

        this.hideButtons();

        this.changeView();

        ProjPosting_WIPCostAccrued_LedgerDim.parmPostingType(LedgerPostingType::ProjWIPCost);

        ProjPosting_AccruedCost_LedgerDimension.parmPostingType(LedgerPostingType::ProjAccruedCost);

        ProjPosting_StatsuAccountItem_LedgerDim.parmPostingType(LedgerPostingType::ProjStatusAccountItem);

        ProjPosting_OffsetAccountItem_LedgerDim.parmPostingType(LedgerPostingType::ProjOffsetAccountItem);

        ProjPosting_WIPCostValue_LedgerDimension.parmPostingType(LedgerPostingType::ProjWIPCostvalue);

        ProjPosting_PayrollAllocation_LedgerDim.parmPostingType(LedgerPostingType::ProjPayrollAllocation);

        ProjPosting_CostAccount_LedgerDimension.parmPostingType(LedgerPostingType::ProjCost);

        ProjPosting_InvoiceTurnover_LedgerDim.parmPostingType(LedgerPostingType::ProjTurnover);

        ProjPosting_accTurnovrSalesval_LedgerDim.parmPostingType(LedgerPostingType::ProjSalesvalue);

        ProjPosting_WipSalesValue_LedgerDim.parmPostingType(LedgerPostingType::ProjSalesvalueOffset);

        ProjPosting_accTurnovrProd_LedgerDim.parmPostingType(LedgerPostingType::ProjAccruedTurnoverProd);

        ProjPosting_WIPProduction_LedgerDim.parmPostingType(LedgerPostingType::ProjWIPProduction);

        Projposting_accTurnoverProfit_LedgerDim.parmPostingType(LedgerPostingType::ProJAccruedTurnoverProfit);

        ProjPosting_WIPProfit_LedgerDimension.parmPostingType(LedgerPostingType::ProjWIPProfit);

        ProjPosting_SMAAccRevSub_LedgerDim.parmPostingType(LedgerPostingType::ProjAccruedRevenueSubscription);

        ProjPosting_SMAWIPSubscription_LedgerDim.parmPostingType(LedgerPostingType::ProjWIPSubscription);

        ProjPosting_InvoiceCancelRevenue_LedgerDim.visible(ProjParameters::find().EnableCancelPostingProfiles);

        // <GIN>
        isTaxParametersMarked_IN = TaxParameters::checkTaxParameters_IN();
        // </GIN>
        
        //<GTE>
        ProjCategory_TaxItemGroupId.visible(!TaxSolutionScopeIntegrationUtil::isCompanyEnabled());
        //</GTE>    
   
        TaxRateTypeGroup.visible(TaxIntegrationUtils::isTaxInformationEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeChildRecord</Name>
				<Source><![CDATA[
    void initializeChildRecord(CategoryModule _module)
    {
        switch (_module)
        {
            case CategoryModule::Project:
                projCategory.CategoryId = categoryTable.CategoryId;
                projCategory.Name = categoryTable.CategoryName;
                if (categoryTable.UseInExpense)
                {
                    projCategory.TaxItemGroupId = trvCostType.TaxItemGroup;
                }
                projCategory_ds.refresh();
                break;

            case CategoryModule::Expense:
                trvCostType.CostType = categoryTable.CategoryId;
                trvCostType.CostTxt = categoryTable.CategoryName;
                trvCostType.ExpType = TrvSharedCategory_Extension::getExpType(categoryTable.CategoryId);
                trvCostType.initializeBasedOnExpenseType();
                if (categoryTable.UseInProject)
                {
                    trvCostType.TaxItemGroup = projCategory.TaxItemGroupId;
                }
                trvCostType_ds.refresh();
                break;

            case CategoryModule::Production:
                routeCostCategories.CostCategoryId = categoryTable.CategoryId;
                routeCostCategories_ds.refresh();
                // this will force the datasource to trigger a write, even if nothing on the record has changed
                // this is essential in this case, as otherwise the write on the child(active) record would not be called
                routeCostCategories_ds.forceWrite(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ModifiedLedgerDimension</Name>
				<Source><![CDATA[
    public void ModifiedLedgerDimension(FormDataSource projPostingds)
    {
        ProjPosting projPosting;

        // Clear out the value on the buffer so a write isn't triggered.
        projPosting = projPostingds.cursor();
        projPosting.LedgerDimension = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshDataSources</Name>
				<Source><![CDATA[
    public void refreshDataSources()
    {
        projCategory_ds.research();
        trvCostType_ds.research();
        routeCostCategories_ds.research();
        trvValidatePayment_ds.research();
        trvExpSubCategory_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshRouteCostCategory</Name>
				<Source><![CDATA[
    void refreshRouteCostCategory()
    {
        routeCostCategories_ds.reread();
        routeCostCategories_ds.refreshEx();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccessForExpense</Name>
				<Source><![CDATA[
    void setButtonAccessForExpense()
    {
        if (trvCostType.ExpType == TrvExpType::Transport)
        {
            rates.enabled(true);
        }
        else
        {
            rates.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccessForProduction</Name>
				<Source><![CDATA[
    void setButtonAccessForProduction()
    {
        routeCostCategoryPrice.enabled(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccessForProject</Name>
				<Source><![CDATA[
    void setButtonAccessForProject()
    {
        // enable the toplevel buttons
        transactions.enabled(true);
        setup.enabled(true);
        validation.enabled(true);
        function.enabled(true);
        forecast.enabled(true);
        ctrlProjectControl.enabled(true);

        smaSalesPriceSubscription.enabled(false);
        smaSubscription.enabled(false);
        smaCreateSubscription.enabled(false);
        smaIndexSubscription.enabled(false);
        smaAccrueSubscription.enabled(false);
        ctrlSalesPriceCost.enabled(false);
        ctrlCostPriceExpense.enabled(false);
        ctrlCostPriceHour.enabled(false);
        ctrlSalesPriceHour.enabled(false);
        ctrlSalesPriceRevenue.enabled(false);
        projValidateSetupEmpl.enabled(false);
        projCostControl.enabled(false);
        projUtilization.enabled(false);

        costControlCommittedCost.enabled(false);

        projTransEmpl.enabled(false);
        projTransCost.enabled(false);
        projTransItem.enabled(false);
        projTransRevenue.enabled(false);

        switch (projCategory.CategoryType)
        {
            case ProjCategoryType::Hour :

                ctrlCostPriceHour.enabled(true);
                ctrlSalesPriceHour.enabled(true);
                ctrlSalesPriceCost.enabled(false);
                ctrlSalesPriceRevenue.enabled(false);
                projUtilization.enabled(true);

                projValidateSetupEmpl.enabled(true);
                projTransEmpl.enabled(true);
                if (categoryTable.UseInProduction)
                {
                    costControlCommittedCost.enabled(true);
                    projCostControl.enabled(true);
                }
                break;

            case ProjCategoryType::Cost :
                // projCostControl.enabled(true);
                costControlCommittedCost.enabled(true);
                if (projCategory.SetupEstimate)
                {
                    projTransCost.enabled(true);
                }
                else
                {
                    ctrlSalesPriceCost.enabled(true);
                    ctrlCostPriceExpense.enabled(true);
                    ctrlCostPriceHour.enabled(false);
                    ctrlSalesPriceHour.enabled(false);
                    ctrlSalesPriceRevenue.enabled(false);
                    projValidateSetupEmpl.enabled(false);
                    projTransCost.enabled(true);
                }
                break;

            case ProjCategoryType::Revenue :
                if (projCategory.SetupSubscription)
                {
                    smaSalesPriceSubscription.enabled(true);
                    smaSubscription.enabled(true);
                    projTransRevenue.enabled(true);
                    smaCreateSubscription.enabled(true);
                    smaIndexSubscription.enabled(true);
                    smaAccrueSubscription.enabled(true);
                }
                else if (projCategory.SetupEstimate)
                {
                    projTransRevenue.enabled(true);
                }
                else
                {
                    ctrlSalesPriceCost.enabled(false);
                    ctrlCostPriceHour.enabled(false);
                    ctrlSalesPriceHour.enabled(false);
                    ctrlSalesPriceRevenue.enabled(true);

                    projValidateSetupEmpl.enabled(false);
                    projTransRevenue.enabled(true);
                }
                break;

            case ProjCategoryType::Item :
                projCostControl.enabled(true);
                costControlCommittedCost.enabled(true);
                projTransItem.enabled(true);
                break;

            default:
                ctrlSalesPriceCost.enabled(false);
                ctrlCostPriceHour.enabled(false);
                ctrlSalesPriceHour.enabled(false);
                ctrlSalesPriceRevenue.enabled(false);
                projValidateSetupEmpl.enabled(false);
                smaSalesPriceSubscription.enabled(false);
                smaSubscription.enabled(false);
                projTransEmpl.enabled(false);
                projTransCost.enabled(false);
                projTransItem.enabled(false);
                projTransRevenue.enabled(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAccessForExpense</Name>
				<Source><![CDATA[
    void setFieldAccessForExpense()
    {
        boolean isPersonal = (trvCostType.ExpType == TrvExpType::Personal);
        boolean allowCreateSubCategory = TrvExpenseType::supportsItemization(trvCostType.ExpType);

        trvCostType_LedgerDimension.enabled(!isPersonal);

        // if payment method was changed, the values would need to be zeroed/blanked
        if (isPersonal)
        {
            trvCostType.LedgerDimension = 0;
            trvCostType_LedgerDimension.value(0);
        }

        switch (trvCostType.ExpType)
        {
            case TrvExpType::Personal:
            case TrvExpType::Advance:
            case TrvExpType::Transport:
            case TrvExpType::Allowance:
                    trv_Identification_IsItemizationMandatory.allowEdit(false);
                    break;
            default:
                    trv_Identification_IsItemizationMandatory.allowEdit(true);
        }

        if (trvCostType.ExpType == TrvExpType::Hotel)
        {
            trvCostType_TaxItemGroupIfBilledToEmployee.visible(true);
            trvExpSubCategory_TaxItemGroupIfBilledToEmployee.visible(true);
        }
        else
        {
            trvCostType_TaxItemGroupIfBilledToEmployee.visible(false);
            trvExpSubCategory_TaxItemGroupIfBilledToEmployee.visible(false);
        }

        trvSubCategory.visible(allowCreateSubCategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAccessForProject</Name>
				<Source><![CDATA[
    void setFieldAccessForProject()
    {
        projLinePropertyId.allowEdit( !(projCategory.SetupSubscription || projCategory.SetupEstimate) );

        // setupEstimate and setupSubscription allowEdit calls moved to each switch case
        // since there were losing of focus issues with the controls when using the keyboard

        CustPaymentRetention.visible(false);

        switch (projCategory.CategoryType)
        {
            case ProjCategoryType::Hour:
                projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(false);
                projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(true);
                projLinePropertyId.enabled(true);
                setupEstimate.allowEdit(false);
                setupSubscription.allowEdit(false);
                setupCategory_Active.allowEdit(true);
                break;

            case ProjCategoryType::Item:
                projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(false);
                projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(true);
                projLinePropertyId.enabled(true);
                setupEstimate.allowEdit(false);
                setupSubscription.allowEdit(false);
                setupCategory_Active.allowEdit(true);
                break;

            case ProjCategoryType::Cost:
                if (projCategory.SetupEstimate)
                {
                    projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(false);
                    projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(false);
                    projLinePropertyId.enabled(false);
                }
                else
                {
                    projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(true);
                    projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(true);
                    projLinePropertyId.enabled(true);
                }

                setupEstimate.allowEdit(projCategory.RecId==0);
                setupSubscription.allowEdit(false);
                setupCategory_Active.allowEdit(!projCategory.SetupEstimate);
                break;

            case ProjCategoryType::Revenue:

                setupEstimate.allowEdit(true);
                setupSubscription.allowEdit(true);
                setupCategory_Active.allowEdit(true);

                if (projCategory.SetupEstimate || projCategory.SetupSubscription)
                {
                    projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(false);
                    projLinePropertyId.enabled(false);

                    //disable if record already saved and estimate or subscrition is marked
                    if (projCategory.RecId &&
                        projCategory.orig().SetupEstimate || projCategory.orig().SetupSubscription)
                    {
                        setupEstimate.allowEdit(false);
                        setupSubscription.allowEdit(false);
                        setupCategory_Active.allowEdit(false);
                    }
                }
                else
                {
                    projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(true);
                    projLinePropertyId.enabled(true);
                }
                if (projCategory.SetupEstimate)
                {
                    projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(false);
                }
                else
                {
                    projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(true);
                }

                if (ProjCategory::isMarkedCategory())
                {
                    if (projCategory.numOfFeeCategoryMarked())
                    {
                        CustPaymentRetention.visible(true);
                    }
                    else
                    {
                        CustPaymentRetention.visible(false);
                    }
                }
                else
                {
                    CustPaymentRetention.visible(true);
                }
                break;

            default         :
                projCategory_ds.object(fieldNum(ProjCategory, ProjCategoryEmplOption)).allowEdit(true);
                projCategory_ds.object(fieldNum(ProjCategory, TaxItemGroupId)).allowEdit(true);
                projLinePropertyId.enabled(true);
                setupEstimate.allowEdit(false);
                setupSubscription.allowEdit(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTabs</Name>
				<Source><![CDATA[
    // this shows/hides the tabs and the buttons
    void showTabs(CategoryModule _module, boolean _show = true)
    {
        switch (_module)
        {
            case CategoryModule::Project:
                general.visible(_show);
                costprice.visible(_show);
                salesprice.visible(_show);
                if (!_show)
                {
                    transactions.enabled(false);
                    setup.enabled(false);
                    validation.enabled(false);
                    function.enabled(false);
                    costControlCommittedCost.enabled(false);
                    forecast.enabled(false);
                    ctrlProjectControl.enabled(false);
                }
                break;

            case CategoryModule::Expense:
                trvSetup.visible(_show);
                trvValidate.visible(_show);
                trvSubCategory.visible(_show && TrvExpenseType::supportsItemization(SharedCategory::findRecId(categoryTable.SharedCategory).expType(false, TrvExpType::Empty)));
                // only disable the button here
                // will get enabled in the active call
                if (!_show)
                {
                    rates.enabled(false);
                }
                break;

            case CategoryModule::Production:
                routeGeneral.visible(_show);
                ledgerWrkCtr.visible(_show);
                // only disable the button here
                // will get enabled in the active call
                if (!_show)
                {
                    routeCostCategoryPrice.enabled(false);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFormCaption</Name>
				<Source><![CDATA[
    void updateFormCaption()
    {
        // set captions to where the form is called from (menu captions)
        switch (categoryView)
        {
            case CategoryModule::Expense:
                form.design(0).caption("@SYS101571");
                break;

            case CategoryModule::Production:
                form.design(0).caption("@SYS13371");
                break;

            case CategoryModule::Project:
                form.design(0).caption("@SYS53082");
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        List exportOptions = _menuOptions.dataEntityOptions();
        ListIterator exportOptionsIterator = new ListIterator(exportOptions);

        while (exportOptionsIterator.more())
        {
            OfficeMenuDataEntityOptions option = exportOptionsIterator.value();

            if (option.dataEntityName() != tableStr(ProjectCategoryEntity))
            {
                exportOptionsIterator.delete();
            }

            exportOptionsIterator.next();
        }

        OfficeMenuDataEntityOptions exportOption = OfficeMenuDataEntityOptions::construct(tableStr(ProjectCategoryEntity));
        exportOptions.addEnd(exportOption);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataEntityContext</Name>
				<Source><![CDATA[
    public ExportToExcelDataEntityContext getDataEntityContext(OfficeGeneratedExportMenuItem _menuItem)
    {
        ExportToExcelDataEntityContext context = null;

        if (_menuItem.dataEntityName() == tableStr(ProjectCategoryEntity))
        {
            context = ExportToExcelDataEntityContext::constructDefault(tableStr(ProjectCategoryEntity));
        }

        return context;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjCategory</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            if (projCategoryGroupCriteria)
            {
                projCategory.CategoryGroupId = projCategoryGroupCriteria.value();
                projCategory.modifiedFieldValue(fieldstr(ProjCategory,CategoryGroupId));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (categoryTable.UseInProject == NoYes::Yes)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!categoryTable.UseInProject)
            {
                return;
            }

            if (projCategory.RecId != 0)
            {
                projCategory.update(false);
            }
            else
            {
                projCategory.insert(false);
            }

            projCategory.costAccount(true, projPosting_CostAccount.LedgerDimension);
            projCategory.payrollAllocation(true, projPosting_PayrollAllocation.LedgerDimension);
            projCategory.wipCostValue(true, projPosting_WIPCostValue.LedgerDimension);
            projCategory.offsetAccountItem(true, projPosting_OffsetAccountItem.LedgerDimension);
            projCategory.statusAccountItem(true, projPosting_StatusAccountItem.LedgerDimension);
            projCategory.accruedCost(true, projPosting_AccruedCost.LedgerDimension);
            projCategory.wipCostAccrued(true, projPosting_WIPCostAccrued.LedgerDimension);

            projCategory.invoicedTurnover(true, projPosting_InvoiceTurnOver.LedgerDimension);
            projCategory.accruedTurnoverSalesvalue(true, projPosting_AccruedTurnoverSalesValue.LedgerDimension);
            projCategory.wipSalesvalue(true, projPosting_WIPSalesValue.LedgerDimension);
            projCategory.accruedTurnoverProd(true, projPosting_AccruedTurnoverProd.LedgerDimension);
            projCategory.wipProduction(true, projPosting_WIPProduction.LedgerDimension);
            projCategory.accruedTurnoverProfit(true, projPosting_AccruedTurnoverProfit.LedgerDimension);
            projCategory.wipProfit(true, projPosting_WIPProfit.LedgerDimension);
            projCategory.smaAccruedRevenueSubscription(true, projPosting_SMAAccruedRevenueSub.LedgerDimension);
            projCategory.smawipSubscription(true, projPosting_SMAWIPSubscription.LedgerDimension);

            // <GBR>
            projCategory.canceledInvoicedRevenue(true, ProjPosting_InvoiceCancelRevenueAccount.LedgerDimension);
            // </GBR>
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            switch (categoryView)
            {
                case CategoryModule::Project:
                    this.linkType(FormLinkType::InnerJoin);
                    this.allowCheck(true);
                    break;
            }

            super();

            hasProjectAccess = element.hasTableAccess(this.table());
            element.handleSecurity(this, hasProjectAccess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            element.setButtonAccessForProject();
            element.setFieldAccessForProject();

            projPosting_CostAccount_ds.executeQuery();
            projPosting_PayrollAllocation_ds.executeQuery();
            projPosting_WIPCostValue_ds.executeQuery();
            projPosting_OffsetAccountItem_ds.executeQuery();
            projPosting_StatusAccountItem_ds.executeQuery();
            projPosting_AccruedCost_ds.executeQuery();
            projPosting_WIPCostAccrued_ds.executeQuery();

            projPosting_InvoiceTurnOver_ds.executeQuery();
            projPosting_accruedTurnoverSalesValue_ds.executeQuery();
            projPosting_WIPSalesValue_ds.executeQuery();
            projPosting_accruedTurnoverProd_ds.executeQuery();
            projPosting_WIPProduction_ds.executeQuery();
            projposting_accruedTurnoverProfit_ds.executeQuery();
            projPosting_WIPProfit_ds.executeQuery();
            projPosting_SMAAccruedRevenueSub_ds.executeQuery();
            projPosting_SMAWIPSubscription_ds.executeQuery();

            tab.refresh();

            // <GIN>
            if (isTaxParametersMarked_IN && ProjCategory.CategoryType != ProjCategoryType::Item)
            {
                GST_IN.visible(true);
            }
            else
            {
                GST_IN.visible(false);
            }
            // </GIN>

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prevPage</Name>
						<Source><![CDATA[
        public int prevPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                ret = categoryTable_ds.prevPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>nextPage</Name>
						<Source><![CDATA[
        public int nextPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                ret = categoryTable_ds.nextPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>first</Name>
						<Source><![CDATA[
        public int first()
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                ret = categoryTable_ds.first();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>last</Name>
						<Source><![CDATA[
        public int last()
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                categoryTable_ds.last();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prev</Name>
						<Source><![CDATA[
        public int prev()
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                categoryTable_ds.prev();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>next</Name>
						<Source><![CDATA[
        public int next()
        {
            int ret;

            if (categoryView != CategoryModule::Project)
            {
                categoryTable_ds.next();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Active</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setFieldAccessForProject();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryGroupId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup  sysTableLookup;
                Query query;
                QueryBuildDataSource qbds;
                QueryBuildRange qbr;

                if (categoryTable.UseInExpense || categoryTable.UseInProduction)
                {
                    sysTableLookup = SysTableLookup::newParameters(tablenum(ProjCategoryGroup),_formControl);
                    query = new Query();
                    qbds = query.addDataSource(tablenum(ProjCategoryGroup));
                    qbr = qbds.addRange(fieldnum(ProjCategoryGroup,CategoryType));

                    if (categoryTable.UseInExpense)
                    {
                        qbr.value(queryValue(ProjCategoryType::Cost));
                    }
                    else
                    {
                        qbr.value(queryValue(ProjCategoryType::Hour));
                    }

                    sysTableLookup.addLookupfield(fieldnum(ProjCategoryGroup,CategoryGroupId));
                    sysTableLookup.addLookupfield(fieldnum(ProjCategoryGroup,Name));
                    sysTableLookup.addLookupfield(fieldnum(ProjCategoryGroup,CategoryType));

                    sysTableLookup.parmQuery(query);
                    sysTableLookup.performFormLookup();
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean             ret;
                ProjCategoryType    transactionType;

                ret = super();

                transactionType = ProjCategoryGroup::find(projCategory.CategoryGroupId).CategoryType;

                ret = ret && categoryTable.checkTransactionTypeWithExpense(transactionType);

                ret = ret && categoryTable.checkTransactionTypeWithProduction(transactionType);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setButtonAccessForProject();
                element.setFieldAccessForProject();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                return;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                categoryTable.CategoryName = projCategory.Name;
                if (categoryTable.UseInExpense)
                {
                    trvCostType.CostTxt = projCategory.Name;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PSACustPaymentRetention</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                tab.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SetupEstimate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setButtonAccessForProject();
                element.setFieldAccessForProject();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SetupSubscription</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setButtonAccessForProject();
                element.setFieldAccessForProject();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroupId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (categoryTable.UseInExpense)
                {
                    // only update expense category item sales tax group, if not already set
                    if (!trvCostType.TaxItemGroup)
                    {
                        trvCostType.TaxItemGroup = projCategory.TaxItemGroupId;
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxServiceCodeId_BR</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxServiceCode_BR::lookup(_formControl, false, '','','');
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CategoryTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean         ret;
            SharedCategory  sharedCategory;

            ret = super();

            if (!ret)
            {
                return false;
            }

            sharedCategory = SharedCategory::findRecId(categoryTable.SharedCategory);

            switch (categoryView)
            {
                case  CategoryModule::Expense:
                    if (!sharedCategory.canBeUsedInExpense(false, NoYes::No))
                    {
                        ret = ret && checkFailed(strFmt("@SYS343142", CategoryModule::Expense));
                    }
                    break;

                case  CategoryModule::Production:
                    if (!sharedCategory.canBeUsedInProduction(false, NoYes::No))
                    {
                        ret = ret && checkFailed(strFmt("@SYS343142", CategoryModule::Production));
                    }
                    break;

                case  CategoryModule::Project:
                    if (!sharedCategory.canBeUsedInProject(false, NoYes::No))
                    {
                        ret = ret && checkFailed(strFmt("@SYS343142", CategoryModule::Project));
                    }
                    break;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            ProjCategoryGroup projCategoryGroup;

            if (element.args())
            {
                switch (element.args().dataset())
                {
                    // Is the form called from the ProjCategoryGroup form
                    case tablenum(ProjCategoryGroup) :
                        projCategoryGroup = element.args().record();
                        projCategoryGroupCriteria.value(projCategoryGroup.CategoryGroupId);
                        break;

                    // Is the form called from the BOMCostGroup form
                    case tablenum(BOMCostGroup) :
                        BOMCostGroup bomCostGroup = element.args().record();
                        routeCostCategoryCriteria.value(bomCostGroup.CostGroupId);
                        break;
                }
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            // last record was deleted, no more existing records
            if (!categoryTable.RecId)
            {
                element.disableAllButtons();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (hasProjectAccess && categoryTable.UseInProject)
            {
                element.showTabs(CategoryModule::Project, true);
            }
            else
            {
                element.showTabs(CategoryModule::Project, false);
            }

            if (hasExpenseAccess && categoryTable.UseInExpense)
            {
                element.showTabs(CategoryModule::Expense, true);
            }
            else
            {
                element.showTabs(CategoryModule::Expense, false);
            }

            if (hasProductionAccess && categoryTable.UseInProduction)
            {
                element.showTabs(CategoryModule::Production, true);
            }
            else
            {
                element.showTabs(CategoryModule::Production, false);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            // note: initValue needs to be called explicitly for data sources in an inner join
            switch (categoryView)
            {
                case CategoryModule::Project:
                    categoryTable.UseInProject = NoYes::Yes;
                    break;

                case CategoryModule::Expense:
                    categoryTable.UseInExpense = NoYes::Yes;
                    break;

                case CategoryModule::Production:
                    categoryTable.UseInProduction = NoYes::Yes;
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Args            args;
                SharedCategory  sharedCategory;

                sharedCategory  = SharedCategory::find(categoryTable.CategoryId);

                args = new Args();
                args.lookupRecord(sharedCategory);
                args.caller(element);

                new MenuFunction(menuitemDisplayStr(TrvSharedCategory), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            // for inner joins need to copy the category id
            public void modified()
            {
                super();

                //UseInExpense might be modified
                if (categoryTable.UseInExpense)
                {
                    element.showTabs(CategoryModule::Expense, true);
                    element.initializeChildRecord(CategoryModule::Expense);
                }
                else
                {
                    element.showTabs(CategoryModule::Expense, false);
                    trvCostType.delete(false);
                    trvCostType_ds.reread();
                    trvCostType_ds.refresh();
                }

                //UseInProduction might be modified
                if (categoryTable.UseInProduction)
                {
                    element.showTabs(CategoryModule::Production, true);
                    element.initializeChildRecord(CategoryModule::Production);
                }
                else
                {
                    element.showTabs(CategoryModule::Production, false);
                    routeCostCategories.delete(false);
                    routeCostCategories_ds.reread();
                    routeCostCategories_ds.refresh();
                }

                //UseInProject might be modified
                if (categoryTable.UseInProject)
                {
                    element.showTabs(CategoryModule::Project, true);
                    element.initializeChildRecord(CategoryModule::Project);
                }
                else
                {
                    element.showTabs(CategoryModule::Project, false);
                    projCategory.delete(false);
                    projCategory_ds.reread();
                    projCategory_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                projCategory.Name = categoryTable.CategoryName;
                trvCostType.CostTxt = categoryTable.CategoryName;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UseInExpense</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // If the user unmarks Expense, check if it can be deleted
                if (!categoryTable.UseInExpense && trvCostType)
                {
                    ret = ret && Box::yesNo(strfmt("@SYS105380", trvCostType.CostType, enum2str(CategoryModule::Expense)),
                                        DialogButton::No, "@SYS105379");
                    ret = ret && trvCostType.validateDelete();
                }

                ret = ret && categoryTable.checkNotBothExpenseAndProduction();

                if (trvCostType.ExpType)
                {
                    ret = ret && categoryTable.checkExpenseTypeWithProject(trvCostType.ExpType);
                }

                if (projCategory.CategoryType)
                {
                    ret = ret && categoryTable.checkTransactionTypeWithExpense(projCategory.CategoryType);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (categoryTable.UseInExpense)
                {
                    element.showTabs(CategoryModule::Expense, true);
                    element.createChildRecord(CategoryModule::Expense);
                }
                else
                {
                    element.showTabs(CategoryModule::Expense, false);
                    trvCostType.delete(false);
                    trvCostType_ds.reread();
                    trvCostType_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UseInProduction</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // If the user unmarks Production, check if it can be deleted
                if (!categoryTable.UseInProduction && routeCostCategories)
                {
                    ret = ret && Box::yesNo(strfmt("@SYS105380", categoryTable.CategoryId, enum2str(CategoryModule::Production)),
                                        DialogButton::No, "@SYS105379");
                    ret = ret && routeCostCategories.validateDelete();
                }

                ret = ret && categoryTable.checkNotBothExpenseAndProduction();

                if (projCategory.CategoryType)
                {
                    ret = ret && categoryTable.checkTransactionTypeWithProduction(projCategory.CategoryType);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (categoryTable.UseInProduction)
                {
                    element.showTabs(CategoryModule::Production, true);
                    element.createChildRecord(CategoryModule::Production);
                }
                else
                {
                    element.showTabs(CategoryModule::Production, false);
                    routeCostCategories.delete(false);
                    routeCostCategories_ds.reread();
                    routeCostCategories_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UseInProject</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // If the user unmarks Project, check if it can be deleted
                if (!categoryTable.UseInProject && projCategory)
                {
                    ret = ret && Box::yesNo(strfmt("@SYS105380", categoryTable.CategoryId, enum2str(CategoryModule::Project)),
                                        DialogButton::No, "@SYS105379");
                    ret = ret && projCategory.validateDelete();
                }

                if (trvCostType.ExpType)
                {
                    ret = ret && categoryTable.checkExpenseTypeWithProject(trvCostType.ExpType);
                }

                if (projCategory.CategoryType)
                {
                    ret = ret && categoryTable.checkTransactionTypeWithExpense(projCategory.CategoryType);
                }

                if (projCategory.CategoryType)
                {
                    ret = ret && categoryTable.checkTransactionTypeWithProduction(projCategory.CategoryType);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (categoryTable.UseInProject)
                {
                    element.showTabs(CategoryModule::Project, true);
                    element.createChildRecord(CategoryModule::Project);
                }
                else
                {
                    element.showTabs(CategoryModule::Project, false);
                    projCategory.delete(false);
                    projCategory_ds.reread();
                    projCategory_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TrvCostType</Name>
				<Methods>
					<Method>
						<Name>prevPage</Name>
						<Source><![CDATA[
        public int prevPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                ret = categoryTable_ds.prevPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>nextPage</Name>
						<Source><![CDATA[
        public int nextPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                ret = categoryTable_ds.nextPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>first</Name>
						<Source><![CDATA[
        public int first()
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                ret = categoryTable_ds.first();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>last</Name>
						<Source><![CDATA[
        public int last()
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                categoryTable_ds.last();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prev</Name>
						<Source><![CDATA[
        public int prev()
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                categoryTable_ds.prev();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>next</Name>
						<Source><![CDATA[
        public int next()
        {
            int ret;

            if (categoryView != CategoryModule::Expense)
            {
                categoryTable_ds.next();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (categoryTable.UseInExpense == NoYes::Yes)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!categoryTable.UseInExpense)
            {
                return;
            }

            if (trvCostType.RecId != 0)
            {
                trvCostType.update(false);
            }
            else
            {
                trvCostType.insert(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            switch (categoryView)
            {
                case CategoryModule::Expense:
                    this.linkType(FormLinkType::InnerJoin);
                    this.allowCheck(true);
                    break;
            }

            super();

            hasExpenseAccess = element.hasTableAccess(this.table());
            element.handleSecurity(this, hasExpenseAccess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.setButtonAccessForExpense();
            element.setFieldAccessForExpense();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CostTxt</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                categoryTable.CategoryName = trvCostType.CostTxt;
                if (categoryTable.UseInProject)
                {
                    projCategory.Name = trvCostType.CostTxt;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExpType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && categoryTable.checkExpenseTypeWithProject(trvCostType.ExpType);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setButtonAccessForExpense();
                element.setFieldAccessForExpense();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (categoryTable.UseInProject)
                {
                    // only update project category item sales tax group, if not already set
                    if (!projCategory.TaxItemGroupId)
                    {
                        projCategory.TaxItemGroupId = trvCostType.TaxItemGroup;
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TrvValidatePayment</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.handleSecurity(this, element.hasTableAccess(this.table()));
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!categoryTable.UseInExpense)
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (categoryTable.UseInExpense == NoYes::Yes)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>isDefaultPayMethod</Name>
						<Source><![CDATA[
        display TrvIsDefaultPayMethod isDefaultPayMethod(TrvValidatePayment _trvValidatePayment)
        {
            return TrvCostType.StdPaiMethod == _trvValidatePayment.PayMethod;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>routeCostCategories</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!categoryTable.UseInProduction)
            {
                return;
            }

            if (routeCostCategories.RecId != 0)
            {
                routeCostCategories.update();
            }
            else
            {
                routeCostCategories.insert(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (categoryTable.UseInProduction == NoYes::Yes)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            switch (categoryView)
            {
                case CategoryModule::Production:
                    this.linkType(FormLinkType::InnerJoin);
                    this.allowCheck(true);
                    break;
            }

            super();

            hasProductionAccess = element.hasTableAccess(this.table());
            element.handleSecurity(this, hasProductionAccess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.setButtonAccessForProduction();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prevPage</Name>
						<Source><![CDATA[
        public int prevPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                ret = categoryTable_ds.prevPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>nextPage</Name>
						<Source><![CDATA[
        public int nextPage(int _pageSize)
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                ret = categoryTable_ds.nextPage(_pageSize);
            }
            else
            {
                ret = super(_pageSize);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>first</Name>
						<Source><![CDATA[
        public int first()
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                ret = categoryTable_ds.first();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>last</Name>
						<Source><![CDATA[
        public int last()
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                categoryTable_ds.last();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>prev</Name>
						<Source><![CDATA[
        public int prev()
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                categoryTable_ds.prev();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>next</Name>
						<Source><![CDATA[
        public int next()
        {
            int ret;

            if (categoryView != CategoryModule::Production)
            {
                categoryTable_ds.next();
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Worker</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common             ret;

                ret = super(_formReferenceControl);

                if (ret.RecId && !HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().validateWorker(ret.RecId))
                {
                    ret.clear();
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().lookupWorker(_formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TrvExpSubCategory</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (trvSharedSubCategory.SystemCreated == NoYes::Yes)
            {
                trvExpSubCategory_ds.allowDelete(false);
            }
            else
            {
                trvExpSubCategory_ds.allowDelete(true);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;

            if (trvExpSubCategory.SystemCreated() == NoYes::Yes)
            {
                ret = false;
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            trvExpSubCategory.LedgerDimension = trvCostType.LedgerDimension;
            trvExpSubCategory.TaxItemGroup = trvCostType.TaxItemGroup;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.handleSecurity(this, element.hasTableAccess(this.table()));
            trvCalledFromDeleteMarked = false;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TrvSharedSubCategory</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Opens the global category form setting the record corresponding to the TrvExpSubCategory costType
            /// </summary>
            /// <remarks>
            /// Opens the category form when the user performs a "goto main table"
            /// </remarks>
            public void jumpRef()
            {
                Args            args = new Args();
                MenuFunction    menuFunction;

                menuFunction = new MenuFunction(menuitemDisplayStr(TrvSharedCategory), MenuItemType::Display);
                args.lookupRecord(SharedCategory::findRecId(TrvSharedSubCategory::find(trvExpSubCategory.CostType, trvExpSubCategory.name()).SharedCategory));
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Query                   lookupQuery;
                SharedCategory          sharedCategory;
                TrvSharedSubCategory    selectedRecord;
                QueryBuildDataSource    qbds1, qbds2;
                SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tablenum(TrvSharedSubCategory),
                                                                                                _formReferenceControl, true);

                sysTableLookup.addLookupfield(fieldnum(TrvSharedSubCategory, Name));
                sysTableLookup.addLookupfield(fieldnum(TrvSharedSubCategory, Description));

                lookupQuery = new Query();
                qbds1 = lookupQuery.addDataSource(tablenum(TrvSharedSubCategory));

                select firstonly RecId from sharedCategory where sharedCategory.CategoryId == trvExpSubCategory.CostType;
                qbds1.addRange(fieldNum(TrvSharedSubCategory, SharedCategory)).value(SysQuery::value(sharedCategory.RecId));

                qbds2 = qbds1.addDataSource(tablenum(TrvExpSubCategory));
                qbds2.addLink(fieldnum(TrvSharedSubCategory,RecId),fieldnum(TrvExpSubCategory,TrvSharedSubCategory));
                qbds2.joinMode(JoinMode::NoExistsJoin);

                sysTableLookup.parmQuery(lookupQuery);

                selectedRecord = sysTableLookup.performFormLookup();

                return selectedRecord;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>ProjPosting_CostAccount</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::CostAccount);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_PayrollAllocation</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::PayrollAllocation);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_WIPCostValue</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::StatusAccount);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_OffsetAccountItem</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::OffsetAccountItem);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_StatusAccountItem</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::StatusAccountItem);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_AccruedCost</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::AccruedCost);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_WIPCostAccrued</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::WIPCostAccruals);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_InvoiceTurnOver</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::RevenueAccount);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_accruedTurnoverSalesValue</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::SalesValue);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_WIPSalesValue</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::SalesOffsetAccount);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_accruedTurnoverProd</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::AccruedTurnoverProd);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_WIPProduction</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::WIPProduction);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>Projposting_accruedTurnoverProfit</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::AccruedTurnoverProfit);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_WIPProfit</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::WIPProfit);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_SMAAccruedRevenueSub</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::AccruedRevenueSubscription);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_SMAWIPSubscription</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds,ProjAccountType::WIPSubscription);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjPosting_InvoiceCancelRevenueAccount</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            qbds = this.query().dataSourceName(this.name());

            element.AddRangeToLedgerDimensionAccountQuery(qbds, ProjAccountType::InvoiceCancelRevenueAccount);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // write is already called inside ProjCategory.write method
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CategoryId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            // Disable drill thru to CategoryTable
            // super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetailsCategoryId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(SharedCategory), this);
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildDataSource    queryBuildDataSource2,queryBuildDataSource3;
            QueryBuildDataSource    qbdsCategoryTable;
            CategoryRoleType        categoryRoleType;

            queryBuildDataSource = query.addDataSource(tableNum(SharedCategory));

            switch (categoryView)
            {
                case  CategoryModule::Expense:
                    categoryRoleType = CategoryRoleType::Expense;
                    break;

                case  CategoryModule::Production:
                    categoryRoleType = CategoryRoleType::Production;
                    break;

                case  CategoryModule::Project:
                    categoryRoleType = CategoryRoleType::Project;
                    break;
            }

            if (categoryView != CategoryModule::Base)
            {
                queryBuildDataSource2 = queryBuildDataSource.addDataSource(tableNum(SharedCategoryRoles));
                queryBuildDataSource2.addLink(fieldNum(SharedCategory,RecId),fieldNum(SharedCategoryRoles,GlobalCategory));
                queryBuildDataSource2.joinMode(JoinMode::InnerJoin);

                queryBuildDataSource3 = queryBuildDataSource2.addDataSource(tableNum(SharedCategoryRoleType));
                queryBuildDataSource3.addLink(fieldNum(SharedCategoryRoles,GlobalCategoryRoleType),fieldNum(SharedCategoryRoleType,RecId));
                queryBuildDataSource3.addRange(fieldNum(SharedCategoryRoleType,CategoryRoleType)).value(queryValue(categoryRoleType));
                queryBuildDataSource2.joinMode(JoinMode::ExistsJoin);
            }

            qbdsCategoryTable = queryBuildDataSource.addDataSource(tableNum(CategoryTable));
            qbdsCategoryTable.addLink(fieldNum(SharedCategory,CategoryId),fieldNum(CategoryTable,CategoryId));
            qbdsCategoryTable.joinMode(JoinMode::NoExistsJoin);

            sysTableLookup.addLookupfield(fieldNum(SharedCategory, CategoryId));
            sysTableLookup.addLookupfield(fieldNum(SharedCategory, CategoryName));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>refresh</Name>
						<Source><![CDATA[
        void refresh()
        {
            SetupCategory.enabled(!ProjCategory.PSACustPaymentRetention);
            costprice.enabled(!ProjCategory.PSACustPaymentRetention);
            salesprice.enabled(!ProjCategory.PSACustPaymentRetention);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Identification_CategoryGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            // <GIN>
            if (isTaxParametersMarked_IN && ProjCategory.CategoryType != ProjCategoryType::Item)
            {
                GST_IN.visible(true);
            }
            else
            {
                GST_IN.visible(false);
            }
            // </GIN>

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>projLinePropertyId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            new MenuFunction(menuitemDisplayStr(ProjLineProperty), MenuItemType::Display).run();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_PayrollAllocation_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_PayrollAllocation_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_PayrollAllocation_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_WIPCostValue_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_WIPCostValue_LedgerDimension.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_WIPCostValue_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_OffsetAccountItem_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_OffsetAccountItem_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_OffsetAccountItem_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_StatsuAccountItem_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_StatsuAccountItem_LedgerDim.getValue())
            {
                element.ModifiedLedgerDimension(projPosting_StatusAccountItem_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_AccruedCost_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_AccruedCost_LedgerDimension.getValue())
            {
                element.ModifiedLedgerDimension(projPosting_AccruedCost_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_WIPCostAccrued_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_WIPCostAccrued_LedgerDim.getValue())
            {
                element.ModifiedLedgerDimension(projPosting_WipCostAccrued_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_InvoiceTurnover_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_InvoiceTurnover_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_InvoiceTurnOver_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_InvoiceCancelRevenue_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            //<GBR>
            SysInfoAction sysInfoAction;

            sysInfoAction = SysInfoAction_Formrun::newFormnameControlname(formStr(ProjParameters),identifierStr(InvoiceTab));

            if (BrazilParameters::isEnabled() && !ProjParameters::find().EnableCancelPostingProfiles)
            {
                this.allowEdit(false);
                checkFailed("@Brazil:ProjectSalesCancellingAlternativeAccount",'',sysInfoAction);
            }
            //</GBR>
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            super();
            this.allowEdit(true);
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_InvoiceCancelRevenue_LedgerDim.getValue())
            {
                element.ModifiedLedgerDimension(ProjPosting_InvoiceCancelRevenueAccount_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_accTurnovrSalesval_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_accTurnovrSalesval_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_accruedTurnoversalesValue_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_WipSalesValue_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_WipSalesValue_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_WIPSalesValue_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_accTurnovrProd_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_accTurnovrProd_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_accruedTurnOverProd_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_WIPProduction_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_WIPProduction_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_WIPProduction_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Projposting_accTurnoverProfit_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!Projposting_accTurnoverProfit_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_accruedTurnoverProfit_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_WIPProfit_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_WIPProfit_LedgerDimension.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_WIPProfit_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_SMAAccRevSub_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_SMAAccRevSub_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_SMAAccruedRevenueSub_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPosting_SMAWIPSubscription_LedgerDim</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = true;

            if (!ProjPosting_SMAWIPSubscription_LedgerDim.getValue())
            {
               element.ModifiedLedgerDimension(projPosting_SMAWIPSubscription_DS);
            }
            else
            {
                ret = super();
            }

            categoryTable_ds.forceWrite(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvCostType_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (trvExpSubCategory)
            {
                if (Box::yesNo("@SYS131074", DialogButton::Yes))
                {
                    TrvExpSubCategory::updateAccounts(trvCostType);
                    trvExpSubCategory_ds.research();
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Setup1_TaxItemGroup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (trvExpSubCategory)
            {
                if (Box::yesNo("@SYS318016", DialogButton::Yes))
                {
                    TrvExpSubCategory::updateTaxItemGroups(trvCostType);
                    trvExpSubCategory_ds.research();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvCostType_TaxItemGroupIfBilledToEmployee</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (trvExpSubCategory)
            {
                if (Box::yesNo("@SYS318016", DialogButton::Yes))
                {
                    TrvExpSubCategory::updateAlternativeTaxItemGroups(trvCostType);
                    trvExpSubCategory_ds.research();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvValidate</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            if (trvCostType)
            {
                // the insert into this table does not show right away, do explicit research
                trvValidatePayment_ds.research();
                trvValidatePayment_ds.allowCreate(true);
                trvValidatePayment_ds.allowDelete(true);
            }
            else
            {
                if (categoryView != CategoryModule::Expense)
                {
                    // when not opened from expense
                    trvValidatePayment_ds.allowCreate(false);
                    trvValidatePayment_ds.allowDelete(false);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Route_References_Worker</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            return HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().lookupWorker(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjCategory</Name>
			<Table>ProjCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryEmplOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSACustPaymentRetention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectComponent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupEstimate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupSubscription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCodeId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TsAbsence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CategoryTable</Name>
			<Table>CategoryTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SharedCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseInExpense</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseInProduction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseInProject</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvCostType</Name>
			<Table>TrvCostType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CostTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCommon</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGovernment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isImportOnly</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInactive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsItemizationMandatory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StdPaiMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupIfBilledToEmployee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvCostTypeStatisticsId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvValidatePayment</Name>
			<Table>TrvValidatePayment</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TrvCostType</JoinSource>
			<AllowCheck>No</AllowCheck>
			<Index>CostPayIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>routeCostCategories</Name>
			<Table>RouteCostCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPriceSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceIssueLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceIssueOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPIssueLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPValuationLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvExpSubCategory</Name>
			<Table>TrvExpSubCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInactive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupIfBilledToEmployee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvSharedSubCategory</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>TrvSharedSubCategory</Name>
					<Table>TrvSharedSubCategory</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>ChargeType</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Description</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ExcludeFromRecovery</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Name</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SharedCategory</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SystemCreated</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>TrvExpSubCategory</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>TrvSharedSubCategory</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<JoinSource>TrvCostType</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_CostAccount</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_PayrollAllocation</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_WIPCostValue</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_OffsetAccountItem</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_StatusAccountItem</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_AccruedCost</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_WIPCostAccrued</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_InvoiceTurnOver</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_accruedTurnoverSalesValue</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_WIPSalesValue</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_accruedTurnoverProd</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_WIPProduction</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Projposting_accruedTurnoverProfit</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_WIPProfit</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_SMAAccruedRevenueSub</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_SMAWIPSubscription</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjPosting_InvoiceCancelRevenueAccount</Name>
			<Table>ProjPosting</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CategoryTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS105168</Caption>
		<DataSource xmlns="">CategoryTable</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Setup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1163220308</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Update</NeededPermission>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlCostPriceHour</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjCostPriceHour</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlCostPriceExpense</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjCostPriceExpense</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlSalesPriceHour</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjSalesPriceHour</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlSalesPriceCost</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2130706430</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjSalesPriceCost</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlSalesPriceRevenue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2139095038</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjSalesPriceRevenue</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SMASalesPriceSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2143289342</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>SMASalesPriceSubsciption</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonSeparatorControl">
												<Name>Separator1</Name>
												<ElementPosition>2145386494</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ButtonSeparator</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SMASubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2146435070</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>SMASubscription</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonSeparatorControl">
												<Name>Separator2</Name>
												<ElementPosition>2146959358</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ButtonSeparator</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjLinePropertySetup</Name>
												<ElementPosition>2147221502</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjLinePropertySetup</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CtrlProjPosting</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2147352574</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjPosting</MenuItemName>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS2186</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Validation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1744830462</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjValidateSetupEmpl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjValSetupEmplCategory</MenuItemName>
												<Text>@Res:AssignResources</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjValidateSetupProj</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjValSetupProjCategory</MenuItemName>
												<Text>@SYS338974</Text>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS4440</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Function</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>SMASubscription</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SMACreateSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>SMACreateSubscription</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SMAIndexSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>SMAIndexSubscription</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SMAAccrueSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>SMAAccrueSubscription</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS80410</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Transactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>SMASubscription</ConfigurationKey>
										<ElementPosition>1929379838</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjTransEmpl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjTransEmpl</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjTransCost</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjTransCost</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjTransItem</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjTransItem</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjTransRevenue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjTransRevenue</MenuItemName>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS57779</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CostControlCommittedCost</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1979711486</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>ProjCategory</DataSource>
										<MenuItemName>costcontrolCommittedCost</MenuItemName>
										<SaveRecord>No</SaveRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Forecast</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjForecastBudgetCopy</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjForecastBudgetCopy</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjForecastBudgetDelete</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjForecastBudgetDelete</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjForecastBudgettransfer</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjForecastBudgettransfer</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS59002</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>CtrlProjectControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjStatistic</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjStatistic</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjCostControl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjCostControl</MenuItemName>
												<Text>@SYS103931</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>projInvoiceControl</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>projInvoiceControl</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjUtilization</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjUtilization</MenuItemName>
												<Text>@SYS102755</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ProjCashFlow</Name>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>ProjCategory</DataSource>
												<MenuItemName>ProjCashFlow</MenuItemName>
											</AxFormControl>
										</Controls>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS56214</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Rates</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>TrvCostType</DataSource>
										<MenuItemName>TrvCostTypeRates</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RouteCostCategoryPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>routeCostCategories</DataSource>
										<MenuItemName>RouteCostCategoryPrice</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS69780</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@SYS69780</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>CategoryName</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CategoryId</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CategoryId</DataField>
								<DataSource>CategoryTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CategoryName</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CategoryName</DataField>
								<DataSource>CategoryTable</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>CategoryTable</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsCategoryId</Name>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>CategoryId</DataField>
						<DataSource>CategoryTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsCategoryName</Name>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>CategoryName</DataField>
						<DataSource>CategoryTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>UseIn</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UseInProject</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>UseInProject</DataField>
								<DataSource>CategoryTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UseInExpense</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>UseInExpense</DataField>
								<DataSource>CategoryTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UseInProduction</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>UseInProduction</DataField>
								<DataSource>CategoryTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS52579</Caption>
						<DataSource>CategoryTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1207959550</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_CategoryGroupId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryGroupId</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Administration</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjCategory_CategoryType1</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryType</DataField>
										<DataSource>ProjCategory</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjCategory_TaxItemGroupId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupId</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjCategoryEmplOption</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjCategoryEmplOption</DataField>
										<DataSource>ProjCategory</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>Administration</DataGroup>
								<DataSource>ProjCategory</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SetupCategory</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1979711486</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SetupEstimate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SetupEstimate</DataField>
										<DataSource>ProjCategory</DataSource>
										<Label>@Proj:RevRec</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SetupSubscription</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SetupSubscription</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SetupCategory_PSAIndirectComponent</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:ProjCategory_SetupCategory_PSAIndirectComponent</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PSAIndirectComponent</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SetupCategory_TsAbsence</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:ProjCategory_SetupCategory_TsAbsence</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TsAbsence</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SetupCategory_Active</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Active</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SetupCategory</DataGroup>
								<DataSource>ProjCategory</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LineProperty</Name>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>projLinePropertyId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>projLinePropertyIdEdit</DataMethod>
										<DataSource>ProjCategory</DataSource>
										<Label>@SYS329997</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS50026</Caption>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustPaymentRetention</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CustPaymentRetention_PSACustPaymentRetention</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CostManagement:ProjCategory_CustPaymentRetention_PSACustPaymentRetention</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PSACustPaymentRetention</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CustPaymRetention</DataGroup>
								<DataSource>ProjCategory</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FiscalInformation</Name>
								<CountryRegionCodes>BR</CountryRegionCodes>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FiscalInformation_TaxServiceCodeId_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxServiceCodeId_BR</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>FiscalInformation</DataGroup>
								<DataSource>ProjCategory</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithholdingTax</Name>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>WithholdingTax_TaxWithholdItemGroupHeading_TH</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTax_TaxWithholdItemGroupHeading_TH_TaxWithholdItemGroup</Name>
												<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjCategory</DataSource>
										<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>WithholdingTax</DataGroup>
								<DataSource>ProjCategory</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GST_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GST_IN_Exempt_IN</Name>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>Exempt_IN</DataField>
										<DataSource>ProjCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>GST_IN_ServiceAccountingCodeTable_IN</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjCategory</DataSource>
										<ReferenceField>ServiceAccountingCodeTable_IN</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>GST_IN</DataGroup>
								<DataSource>ProjCategory</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxRateTypeGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxRateTypeGroup_TaxRateType</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjCategory</DataSource>
										<ReferenceField>TaxRateType</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxRateTypeGroup</DataGroup>
								<DataSource>ProjCategory</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS105167</Caption>
						<DataSource>ProjCategory</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>costprice</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1811939326</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_CostAccount_LedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_CostAccount</DataSource>
								<Label>@SYS13774</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_PayrollAllocation_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_PayrollAllocation</DataSource>
								<Label>@SYS14982</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_WIPCostValue_LedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_WIPCostValue</DataSource>
								<Label>@SYS55365</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_OffsetAccountItem_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_OffsetAccountItem</DataSource>
								<Label>@SYS58392</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_StatsuAccountItem_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_StatusAccountItem</DataSource>
								<Label>@SYS58393</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_AccruedCost_LedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_AccruedCost</DataSource>
								<Label>@SYS78380</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_WIPCostAccrued_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_WIPCostAccrued</DataSource>
								<Label>@SYS78381</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS77784</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>salesprice</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_InvoiceTurnover_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_InvoiceTurnOver</DataSource>
								<Label>@SYS55366</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_InvoiceCancelRevenue_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_InvoiceCancelRevenueAccount</DataSource>
								<Label>@Brazil:CancelledInvoiceRevenue</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_accTurnovrSalesval_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_accruedTurnoverSalesValue</DataSource>
								<Label>@SYS55368</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_WipSalesValue_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_WIPSalesValue</DataSource>
								<Label>@SYS55369</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_accTurnovrProd_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_accruedTurnoverProd</DataSource>
								<Label>@SYS55370</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_WIPProduction_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_WIPProduction</DataSource>
								<Label>@SYS55371</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>Projposting_accTurnoverProfit_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>Projposting_accruedTurnoverProfit</DataSource>
								<Label>@SYS55372</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_WIPProfit_LedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_WIPProfit</DataSource>
								<Label>@SYS55373</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_SMAAccRevSub_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_SMAAccruedRevenueSub</DataSource>
								<Label>@SYS87727</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>ProjPosting_SMAWIPSubscription_LedgerDim</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1952257860</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>LedgerDimensionDefaultAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>ProjPosting_SMAWIPSubscription</DataSource>
								<Label>@SYS84266</Label>
								<ReferenceField>LedgerDimension</ReferenceField>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS77785</Caption>
						<DataSource>ProjCategory</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TrvSetup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2056607059</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Trv_Identification</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Trv_Identification_ExpType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExpType</DataField>
										<DataSource>TrvCostType</DataSource>
										<HideFirstEntry>Yes</HideFirstEntry>
										<ViewEditMode>View</ViewEditMode>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Trv_Identification_StdPaiMethod</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StdPaiMethod</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Trv_Identification_IsItemizationMandatory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsItemizationMandatory</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Trv_Identification_IsInactive</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsInactive</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TrvCostType_isImportOnly</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>isImportOnly</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TrvCostType_IsGovernment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsGovernment</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Setup1</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>TrvCostType_LedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>TrvCostType</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Setup1_TaxItemGroup</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvCostType_TaxItemGroupIfBilledToEmployee</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupIfBilledToEmployee</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Setup1_TrvCostTypeStatisticsId</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TrvCostTypeStatisticsId</DataField>
										<DataSource>TrvCostType</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS53515</Caption>
								<DataSource>TrvCostType</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS101318</Caption>
						<DataSource>TrvCostType</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TrvValidate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2081539866</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>357913941</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup1</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>536870911</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@sys60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>TrvValidatePayment</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>TrvValidateGrid</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TrvValidatePayment_IsDefault</Name>
										<ElementPosition>1073741823</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>isDefaultPayMethod</DataMethod>
										<DataSource>TrvValidatePayment</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvValidatePayment_PayMethod</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayMethod</DataField>
										<DataSource>TrvValidatePayment</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
								</Controls>
								<DataSource>TrvValidatePayment</DataSource>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS107054</Caption>
						<DataSource>TrvValidatePayment</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TrvSubCategory</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2106472673</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab2</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup2</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton1</Name>
														<ElementPosition>536870911</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@sys60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton1</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>TrvExpSubCategory</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>TrvExpSubCategoryGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1312351117</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TrvExpSubCategory_Name</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TrvExpSubCategory_Name_Name</Name>
												<DataRelationPath>TrvSharedSubCategory</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TrvExpSubCategory</DataSource>
										<ReferenceField>TrvSharedSubCategory</ReferenceField>
										<ReplacementFieldGroup>SubCateogryName</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvGlobalSubCategory_Description</Name>
										<ElementPosition>1386916520</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>TrvSharedSubCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TrvGlobalSubCategory_ExcludeFromRecovery</Name>
										<ElementPosition>1700091218</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>ExcludeFromRecovery</DataField>
										<DataSource>TrvSharedSubCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>TrvExpSubCategory_LedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>TrvExpSubCategory</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvExpSubCategory_TaxItemGroup</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>TrvExpSubCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvExpSubCategory_TaxItemGroupIfBilledToEmployee</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupIfBilledToEmployee</DataField>
										<DataSource>TrvExpSubCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>TrvExpSubCategory_DisplayOrder</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DisplayOrder</DataField>
										<DataSource>TrvExpSubCategory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TrvExpSubCategory_IsInactive</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>IsInactive</DataField>
										<DataSource>TrvExpSubCategory</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TrvExpSubCategory</DataSource>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS131080</Caption>
						<DataSource>TrvExpSubCategory</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RouteGeneral</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2131405480</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Route_Identification</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Route_Identification_CostCategoryId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostCategoryId</DataField>
										<DataSource>routeCostCategories</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>routeCostCategories</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Route_Prices</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Route_Prices_CostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>routeCostCategories</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Prices</DataGroup>
								<DataSource>routeCostCategories</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SecondaryCost_RU</Name>
								<ElementPosition>1744830462</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SecondaryCost_RU_CostPriceSecCur_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPriceSecCur_RU</DataField>
										<DataSource>routeCostCategories</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SecondaryCost_RU</DataGroup>
								<DataSource>routeCostCategories</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Route_References</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Route_References_Worker</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Route_References_Worker_PersonnelNumber</Name>
												<DataRelationPath>HcmWorker</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>routeCostCategories</DataSource>
										<ReferenceField>Worker</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Route_References_CostGroupId</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostGroupId</DataField>
										<DataSource>routeCostCategories</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>References</DataGroup>
								<DataSource>routeCostCategories</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS105985</Caption>
						<DataSource>routeCostCategories</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LedgerWrkCtr</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2143289342</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountsWIP</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsWIP_WIPIssueLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>routeCostCategories</DataSource>
										<ReferenceField>WIPIssueLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsWIP_WIPValuationLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>routeCostCategories</DataSource>
										<ReferenceField>WIPValuationLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>AccountsWIP</DataGroup>
								<DataSource>routeCostCategories</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountsCosting</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsCosting_ResourceIssueLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>routeCostCategories</DataSource>
										<ReferenceField>ResourceIssueLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>AccountsCosting_ResourceIssueOffsetLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>routeCostCategories</DataSource>
										<ReferenceField>ResourceIssueOffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>AccountsCosting</DataGroup>
								<DataSource>routeCostCategories</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SCM:LedgerPostingsGroup</Caption>
						<DataSource>routeCostCategories</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>CategoryTable</DataSource>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>