<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BankStatementLineDetails</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BankStatementLineDetails extends FormRun
{
    private const container controlDataFields = [
        fieldNum(BankStmtISOReportEntry, BankStatementCounterCurrency),
        fieldNum(BankStmtISOReportEntry, BankStatementCounterCurrencyAmount),
        fieldNum(BankStmtISOReportEntry, BankStatementCounterExchangeRate),
        fieldNum(BankStmtISOReportEntry, BankStatementInstructedCurrency),
        fieldNum(BankStmtISOReportEntry, BankStatementInstructedCurrencyAmt),
        fieldNum(BankStmtISOReportEntry, BankStatementInstructedExchangeRate),
        fieldNum(BankStmtISOReportEntry, AdditionalEntryInformation),
        fieldNum(BankStmtISOReportEntry, RelatedBankAccount),
        fieldNum(BankStmtISOReportEntry, RelatedBankName),
        fieldNum(BankStmtISOReportEntry, CreditorReferenceInformation)];

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        FormRun caller = element.args().caller();
        if (caller && caller.name() == formStr(BankAutomationStatementForm))
        {
            FormDesign design = element.design();
            if (design)
            {
                design.viewEditMode(ViewEditMode::Edit);
            }
        }
        element.setFieldsVisible();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldsVisible</Name>
				<Source><![CDATA[
    private void setFieldsVisible()
    {
        boolean isDetailsVisible = BankStmtISOReportEntry.RecId != 0;
        Counter.visible(isDetailsVisible);
        InstructedAmount.visible(isDetailsVisible);
        Reference.visible(isDetailsVisible);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BankStmtISOReportEntry</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            element.setFieldsVisible();
            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            FormRun caller = element.args().caller();
            if (caller && caller.name() == formStr(BankAutomationStatementForm))
            {
                FormDataSource dsStatement = caller.dataSource(formDataSourceStr(BankAutomationStatementForm, BankStmtISOAccountStatement));
                if (dsStatement)
                {
                    BankStmtISOAccountStatement statement = dsStatement.cursor();
                    if (statement)
                    {
                        this.allowEdit(statement.isStatementLineEditable());
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            FormRun caller = element.args().caller();
            FormDataSource callerStatementLineDS = caller.dataSource(formDataSourceStr(BankAutomationStatementForm, BankStmtISOReportEntry));
            if (callerStatementLineDS)
            {
                BankStmtISOReportEntry hostFormStatementLineBuffer = callerStatementLineDS.cursor();
                BankStmtISOReportEntry formPartStatementLineBuffer = this.cursor();
                if (hostFormStatementLineBuffer.RecId == formPartStatementLineBuffer.RecId)
                {
                    boolean isUpdateLineDetails = false;
                    for (int i = 1; i <= conLen(controlDataFields); i++)
                    {
                        FieldId fieldId = conPeek(controlDataFields, i);
                        if (hostFormStatementLineBuffer.(fieldId) != formPartStatementLineBuffer.(fieldId))
                        {
                            hostFormStatementLineBuffer.(fieldId) = formPartStatementLineBuffer.(fieldId);
                            isUpdateLineDetails = true;
                        }
                    }
                    if (isUpdateLineDetails)
                    {
                        // Call the host form datasource write method to avoid update conflict.
                        callerStatementLineDS.write();
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BankStmtISOReportEntry</Name>
			<Table>BankStmtISOReportEntry</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountServicerReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdditionalEntryInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCreditDebitIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementCounterCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementCounterCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementCounterExchangeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementInstructedCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementInstructedCurrencyAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementInstructedExchangeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementLineStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStmtISOAccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookingDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditorReferenceInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsNewBankDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginSourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentBankStmtISOReportEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProprietaryBankTransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reconciled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelatedBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelatedBankName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversalIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysRowVersionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TradingParty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Bank:BankStatementDetails</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Counter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Counter_BankStatementCounterCurrency</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementCounterCurrency</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Counter_BankStatementCounterCurrencyAmount</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementCounterCurrencyAmount</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Counter_BankStatementCounterExchangeRate</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementCounterExchangeRate</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataGroup>Counter</DataGroup>
				<DataSource>BankStmtISOReportEntry</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>InstructedAmount</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InstructedAmount_BankStatementInstructedCurrency</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementInstructedCurrency</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>InstructedAmount_BankStatementInstructedCurrencyAmt</Name>
						<Type>Real</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementInstructedCurrencyAmt</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>InstructedAmount_BankStatementInstructedExchangeRate</Name>
						<Type>Real</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankStatementInstructedExchangeRate</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>InstructedAmount</DataGroup>
				<DataSource>BankStmtISOReportEntry</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Reference</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference_M_dispTransactionType</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>dispTransactionType</DataMethod>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference_AdditionalEntryInformation</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AdditionalEntryInformation</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference_RelatedBankAccount</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RelatedBankAccount</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference_RelatedBankName</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RelatedBankName</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Reference_CreditorReferenceInformation</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreditorReferenceInformation</DataField>
						<DataSource>BankStmtISOReportEntry</DataSource>
					</AxFormControl>
				</Controls>
				<DataGroup>Reference</DataGroup>
				<DataSource>BankStmtISOReportEntry</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>