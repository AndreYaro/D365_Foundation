<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CatExternalCatalogConfiguration</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CatExternalCatalogConfiguration extends FormRun
{
    container                       checkedCompanies, selectedVendors;
    DirPartyRecId                   dirPartyRecId;
    Name                            person;
    recId                           contactPersonId;
    DirPartyName                    origPartyName;
    boolean                         vendorContactPersonSelected;
    Name                            origContactName;
    Map                             legalEntitiesSelectedMap;
    Map                             legalEntitiesAvailableMap;
    Map                             legalEntitiesVendorsMap = new Map(Types::String, Types::Container);

    private const int legalEntityListViewColumn             = 0;
    private const int vendorAccountListViewColumn           = 1;
    private const int externalCatalogAccessListViewColumn   = 2;

    private CatPunchoutEntityType punchoutEntityType = CatPunchoutEntityType::cXML;

}
]]></Source>
			</Method>
			<Method>
				<Name>displayContact</Name>
				<Source><![CDATA[
    public str displayContact()
    {
        ContactPerson contactPerson;

        if (catExternalCatalog.ContactPerson)
        {
            select firstonly crossCompany contactPerson
                where contactPerson.RecId == catExternalCatalog.ContactPerson;
            person = contactPerson.personName();
        }
        else
        {
            person = '';
        }

        return person;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDirPartyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the party details.
    /// </summary>
    /// <returns>
    /// Returns the <c>DirPartyName</c> data type.
    /// </returns>
    public DirPartyName displayDirPartyName()
    {
        DirPartyName                dirPartyName = '';
        DirPartyTable               dirPartyTable;

        if (catExternalCatalog.RecId && catExternalCatalog.Party)
        {
            dirPartyTable = DirPartyTable::findRec(catExternalCatalog.Party);
            dirPartyName = dirPartyTable.Name;
            dirPartyRecId = dirPartyTable.RecId;
        }

        origPartyName = dirPartyName;
        party.text(origPartyName);
        return dirPartyName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        element.initListView();
        element.resetEnableDisableLegalEntityButton();

        vendorContactPersonSelected = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to add the columns to the list view control.
    /// </summary>
    void initListView()
    {
        legalEntitiesVendorsMap = new Map(Types::String, Types::Container);
        legalEntityListView.addColumn(1,new FormListColumn("@SYS129100",1));
        legalEntityListView.addColumn(2,new FormListColumn("@SYS14048",2));
        legalEntityListView.addColumn(3,new FormListColumn("@SCM:ExternalCatalogAccess", 3));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the logic around the listview for legal entities.
    /// </summary>
    private void resetListView()
    {
        legalEntitiesVendorsMap = new Map(Types::String, Types::Container);
        legalEntityListView.deleteAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateListViewFromParty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the list view based on the <c>DirPartyTable</c> selected.
    /// </summary>
    /// <param name = "_dirPartyRecId"><c>RefRecId</c> of the <c>DirPartyTable</c> record that has been selected.</param>
    /// <param name = "_isNewParty"><c>Boolean</c> determining if the <c>DirPartyTable</c> is a new party that has been selected.</param>
    private void populateListViewFromParty(RefRecId _dirPartyRecId, boolean _isNewParty = false)
    {
        VendTable vendTable;
        boolean enabled;
        int row;
        
        //Populates the list view with the vendor details.
        while select crossCompany * from vendTable
                    where vendTable.Party == _dirPartyRecId
        {
            enabled = CatExternalCatalogVendor::find(vendTable.AccountNum, vendTable.DataAreaId, catExternalCatalog.RecId).RecId;

            //If it is a new party, set legal entity access to true. Otherwise, set it based on saved preferences.
            element.insertItem(vendTable.company(),
                               vendTable.AccountNum,
                               row,
                               enabled || _isNewParty);
            
            row++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the list view with the correct legal entities based on the current record's <c>CatExternalCatalogRecId</c>.
    /// </summary>
    private void updateListView()
    {
        element.resetListView();

        if (catExternalCatalog.RecId && element.displayDirPartyName())
        {
            party.text(origPartyName);
            element.populateListViewFromParty(dirPartyRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetEnableDisableLegalEntityButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the initial state of the button to false, and sets the initial text of the button.
    /// </summary>
    private void resetEnableDisableLegalEntityButton()
    {
        enableDisableLegalEntity.enabled(false);
        enableDisableLegalEntity.text("@SCM:PreventExternalCatalogAccess");
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts legal entities in to the list view control.
    /// </summary>
    /// <param name="_legalEntity">
    /// Accepts legal entity value as a string.
    /// </param>
    /// <param name="_accountNum">
    /// Accepts vendor account value as a string.
    /// </param>
    /// <param name="_row">
    /// Accepts the row number.
    /// </param>
    /// <param name="_enabled">
    /// Whether the field is selected.
    /// </param>
    /// <returns>
    /// Returns an index value of the inserted item.
    /// </returns>
    private int insertItem(str _legalEntity, str _accountNum , int _row, boolean _enabled)
    {
        int idx;

        FormListItem item = new FormListItem();
        item.idx(_row) ;
        idx = legalEntityListView.addItem(item);

        //adds legal entities and vendor account to the list view
        legalEntityListView.setText(idx , _legalEntity, legalEntityListViewColumn);
        legalEntityListView.setText(idx , _accountNum, vendorAccountListViewColumn);
        NoYes enabled  = _enabled ? NoYes::Yes : NoYes::No;
        
        legalEntityListView.setText(idx , enum2Str(enabled), externalCatalogAccessListViewColumn);
        legalEntitiesVendorsMap.insert(_legalEntity, [_accountNum, enabled]);
       
        return idx;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the list view control in case of existing external catalog.
    /// </summary>
    public void run()
    {
        super();

        element.updateListView();

        contacts_VendorContact.text(element.displayContact());
        origContactName = contacts_VendorContact.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledLegalEntitiesVendors</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks which legal entities are allowed access in the external catalog, and adds these to the global selectedVendors variable.
    /// </summary>
    private void enabledLegalEntitiesVendors()
    {
        container values;
        checkedCompanies = connull();
        selectedVendors = connull();
        
        var enumerator = legalEntitiesVendorsMap.getEnumerator();
        while (enumerator.moveNext())
        {
            values = enumerator.currentValue();
            if (conPeek(values, externalCatalogAccessListViewColumn) == NoYes::Yes)
            {
                checkedCompanies += enumerator.currentKey();
                selectedVendors += conPeek(values, vendorAccountListViewColumn);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates legal entities's access to the external catalog based on the EnableDisableLegalEntity button control. Also sets the text for the EnableDisableLegalEntity button.
    /// </summary>
    private void enableDisableLegalEntity()
    {
        var idx = legalEntityListView.getNextItem(FormListNext::Focused);
        var company = legalEntityListView.getItem(idx, legalEntityListViewColumn).text();
        var vendorAccountNum = legalEntityListView.getItem(idx, vendorAccountListViewColumn).text();
        var currentStatus = legalEntityListView.getItem(idx, externalCatalogAccessListViewColumn).text();

        NoYes enabled = currentStatus == enum2Str(NoYes::No) ? NoYes::Yes : NoYes::No;

        if (enabled == NoYes::Yes)
        {
            //Logic to update the selected legal entitites
            CatExternalCatalogVendor::insertVendCatalogIfNotFound(vendorAccountNum,
                                                           company,
                                                           catExternalCatalog.RecId);

            EnableDisableLegalEntity.text("@SCM:PreventExternalCatalogAccess");
        }
        else if(!this.disableLegalEntityVendor(company, vendorAccountNum))
        {
            enabled = NoYes::Yes;
            EnableDisableLegalEntity.text("@SCM:PreventExternalCatalogAccess");
        }
        else
        {
            EnableDisableLegalEntity.text("@SCM:AllowExternalCatalogAccess");
        }
        
        legalEntitiesVendorsMap.insert(company, [vendorAccountNum, enabled]);
        legalEntityListView.setText(idx, enum2Str(enabled), externalCatalogAccessListViewColumn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActivateButtonText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the Activate/Inactivate label for the CatalogActivate button based upon current catalog status.
    /// </summary>
    private void setActivateButtonText()
    {
        if(catExternalCatalog.State == CatExternalCatalogState::Active)
        {
            CatExternalCatalogActivateInactivate.text("@SYS132116");
        }
        else
        {
            CatExternalCatalogActivateInactivate.text("@SYS133042");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableLegalEntityVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the specified Legal Entity from the <c>CatExternalCatalogVendor</c> and the corresponding contact person if there is one.
    /// </summary>
    /// <param name="_company">The <c>DataAreaId</c> of the Legal Entity to be removed.</param>
    /// <param name="_vendorAccountNum">The <c>VendAccount</c> of the Legal Entity to be removed.</param>
    private boolean disableLegalEntityVendor(DataAreaId _company, VendAccount _vendorAccountNum)
    {

        CatExternalCatalogVendor::deleteCatalogVendor(_vendorAccountNum, _company, catExternalCatalog.RecId);
        
        ContactPerson   contactPerson;
        VendTable       vendTable;

        //delete contact person if the corresponding legal entity is unchecked
        select firstonly crossCompany RecId from contactPerson
                where contactPerson.RecId == catExternalCatalog.ContactPerson
                    && contactPerson.DataAreaId == getCompany(tableNum(ContactPerson), _company)
                exists join vendTable
                    where vendTable.Party == contactPerson.ContactForParty
                        && vendTable.AccountNum ==  _vendorAccountNum;

        if (contactPerson.RecId)
        {
            contacts_VendorContact.text('');
            origContactName = '';

            catExternalCatalog.ContactPerson = 0;
            catExternalCatalog.update();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProcurementCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// For the current <c>CatExternalCatalog</c> record,
    /// - check if any matching <c>CatExternalCatalogVendor</c> records exits
    /// - for each matching <c>CatExternalCatalogVendor</c> record,
    /// -- check if its Vendor is associated with any Procurement Category
    /// true if there exists at least one <c>CatExternalCatalogVendor</c> whose vendor is associated (directly or via inheritance) with at least one procurement category.
    /// </summary>
    /// <returns>
    /// true if the matching <c>CatExternalCatalog</c> record is found and not expired; otherwise, false.
    /// </returns>
    boolean checkProcurementCategory()
    {
        CatExternalCatalogVendor      catExternalCatalogVendor;
        VendCategory                  vendCategory;
        EcoResCategory                ecoResCategory;

        EcoResCategoryId              ecoResCategoryId = str2Int64(CatExternalCatalogProcurementCategories_Category.valueStr());

        if (CatExternalCatalogProcurementCategories::find(catExternalCatalog.RecId, ecoResCategoryId))
        {
            warning("@SYS35524");
            return false;
        }

        select firstonly crosscompany RecId from catExternalCatalogVendor
                where catExternalCatalogVendor.ExternalCatalog == catExternalCatalog.RecId
            exists join vendCategory
                where  catExternalCatalogVendor.VendorDataAreaId == vendCategory.VendorDataArea
                    && catExternalCatalogVendor.VendorAccountNumber == vendCategory.VendorAccount
            exists join ecoResCategory
                where vendCategory.Category == ecoResCategory.RecId
                    && ecoResCategory.RecId == ecoResCategoryId;

        if(!catExternalCatalogVendor.RecId)
        {
            EcoResCategoryName invalidCategoryName = EcoResCategory::find(ecoResCategoryId).Name;

            warning(strFmt("@SCM:CategoryNotFoundOrUnavailable", invalidCategoryName));
        }

        return catExternalCatalogVendor.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCategoriesExistForVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// For the current <c>CatExternalCatalog</c> record,
    /// - check if any matching <c>CatExternalCatalogVendor</c> records exits
    /// - for each matching <c>CatExternalCatalogVendor</c> record,
    /// -- check if its Vendor is associated with any Procurement Category
    /// true if there exists at least one <c>CatExternalCatalogVendor</c> whose vendor is associated (directly or via inheritance) with at least one procurement category.
    /// </summary>
    /// <returns>
    /// true if the matching <c>CatExternalCatalog</c> record is found and not expired; otherwise, false.
    /// </returns>
    boolean checkCategoriesExistForVendor()
    {
        CatExternalCatalogVendor      catExternalCatalogVendor;
        VendCategory                  vendCategory;
        EcoResCategory                ecoResCategory;

        select firstonly crosscompany RecId from catExternalCatalogVendor
                where catExternalCatalogVendor.ExternalCatalog == catExternalCatalog.RecId
            exists join vendCategory
                where  catExternalCatalogVendor.VendorDataAreaId == vendCategory.VendorDataArea
                    && catExternalCatalogVendor.VendorAccountNumber == vendCategory.VendorAccount
            exists join ecoResCategory
                where vendCategory.Category == ecoResCategory.RecId
            && ecoResCategory.IsActive == NoYes::Yes;
       
        if (!catExternalCatalogVendor.RecId)
        {
            info("@SCM:CatExternalCatalogNoCategories");
        }

        return catExternalCatalogVendor.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDirPartyTableRecId</Name>
				<Source><![CDATA[
    private void setDirPartyTableRecId(str _name, DirPartyRecId _dirPartyRecId)
    {
        DirPartyTable partyTable;
        VendTable vendor;

        select firstonly crossCompany RecId from partyTable
            where partyTable.Name == _name && partyTable.RecId == _dirPartyRecId
            exists join vendor
                where vendor.Party == partyTable.Recid;
        
        dirpartyRecid = partyTable.RecId;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CatExternalCatalog</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Overrides the write method to save the selected legal entity from the list view control.
        /// </summary>
        public void write()
        {
            if (!SystemParameters::getSystemLanguageId())
            {
                error("@SYS312218");
                return;
            }

            super();

            ttsbegin;

            //Logic to update the selected legal entitites
            if (catExternalCatalog.RecId)
            {
                container values;
                var enumerator = legalEntitiesVendorsMap.getEnumerator();

                while (enumerator.moveNext())
                {
                    values = enumerator.currentValue();
                    if (conPeek (values, externalCatalogAccessListViewColumn) == NoYes::Yes)
                    {
                        CatExternalCatalogVendor::insertVendCatalogIfNotFound(conPeek(values, vendorAccountListViewColumn),
                                                                    getCompany(tableNum(VendTable),enumerator.currentKey()),
                                                                    catExternalCatalog.RecId);
                    }
                }

                CatExternalCatalogTranslation::insertExternalCatalogTranslation(catExternalCatalog.RecId,
                                                                                catExternalCatalog.Name,
                                                                                catalog_Description.text(),
                                                                                SystemParameters::getSystemLanguageId());
                                                        
                this.writeMessageFormat();
            }

            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the data fields.
        /// </summary>
        public void initValue()
        {
            super();
            element.resetListView();
            party.text('');
            contacts_VendorContact.text('');
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Overrides the delete method.
        /// </summary>
        public void delete()
        {
            super();
            element.resetListView();

            if (!catExternalCatalog.RecId)
            {
                catExternalMessageFormat.clear();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.updateListView();

            contacts_VendorContact.text(element.displayContact());
            origContactName = contacts_VendorContact.text();

            element.resetEnableDisableLegalEntityButton();
            element.setActivateButtonText();
            
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>writeMessageFormat</Name>
						<Source><![CDATA[
        private void writeMessageFormat()
        {
            if (catExternalCatalog.RecId)
            {
                ttsbegin;
                this.initMessageFormatIfEmpty();
                catExternalMessageFormat.ExternalCatalog = catExternalCatalog.RecId;
                catExternalMessageFormat.write();

                ttscommit;

                CatExternalMessageFormat_ds.reread();
                CatExternalMessageFormat_ds.refresh();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initMessageFormatIfEmpty</Name>
						<Source><![CDATA[
        private void initMessageFormatIfEmpty()
        {
            var messageBodyText = CatExternalMessageFormat_MessageBody.text();

            if (!messageBodyText)
            {
                catExternalMessageFormat.initMessageFormat(punchoutEntityType);
            }
            else
            {
                catExternalMessageFormat.MessageBody = messageBodyText;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (CatExternalCatalog::find(catExternalCatalog.Name).RecId)
                {
                    info("@SYS330535");
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CatExternalCatalogProcurementCategories</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>Category</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Args    args;
                Object  formRun;

                element.enabledLegalEntitiesVendors();

                args = new Args();
                args.name(formstr(CatExternalCategoriesLookup));
                args.caller(this);
                formRun = classfactory.formRunClass(args);
                formRun.checkedLegalEntitiesAndVendors(checkedCompanies, selectedVendors);
                formRun.init();

                _formReferenceControl.performFormLookup(formRun);
                return formRun.selectRecordModeSelectedRecord();
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!element.checkProcurementCategory())
                {
                    catExternalCatalogProcurementCategories.Category = 0;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CatExternalCatalogTranslationDisplay</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Skip table-level validation.
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Saving done in CatExternalCatalog write method.
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            SysTranslationHelper::filterTranslationTable(catExternalCatalogTranslationDisplay_ds, fieldnum(CatExternalCatalogTranslation, Language));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CatExternalCatalogActivateInactivate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables the activate and deactivate buttons.
        /// </summary>
        void clicked()
        {
            super();

            CatExternalCatalogState     newState;
            str                         dialogLabel;
            str                         infoMessage;
            str                         dialog;

            if (catExternalCatalog.State == CatExternalCatalogState::Active)
            {
                newState = CatExternalCatalogState::InActive;
                dialogLabel = "@SYS134271";
                infoMessage = "@SCM:ActivateInactivateExternalCatalog";
                dialog = strFmt(infoMessage, strLwr(dialogLabel), dialogLabel);

                if(Box::yesNo(dialog, DialogButton::No, "@SYS12529") == DialogButton::Yes)
                {
                    catExternalCatalog.State = newState;
                    element.setActivateButtonText();
                }
            }
            else
            {
                #IsoCountryRegionCodes
                newState = CatExternalCatalogState::Active;
                str hereText;

                if (CatExternalCatalogHereTextFlight::instance().isEnabled()
                    && !SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
                {
                    hereText = strFmt("<a target='_blank' href='https://go.microsoft.com/fwlink/?LinkId=521839'>%1</a>", "@SYS136783");
                }
                else
                {
                    hereText = strFmt("<a target='_blank' href='https://www.21vbluecloud.com/dynamics365/d365-privacy/'>%1</a>", "@SYS136783");
                }

                str documentationText = strFmt("<a target='_blank' href='https://docs.microsoft.com/en-us/dynamics365/supply-chain/procurement/set-up-external-catalog-for-punchout'>%1</a>", "@SCM:ExternalCatalogMoreInfo");
                infoMessage = "@SCM:ActivateExternalCatalog";
                dialog = strFmt(infoMessage, hereText, documentationText);

                if (CatEnableContinueDialogHandle::enableCancel(dialog, DialogButton::Cancel, "@SYS12529") == DialogButton::Ok)
                {
                    catExternalCatalog.State = newState;
                    element.setActivateButtonText();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RestoreMessageFormat</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (catExternalMessageFormat.RecId && (Box::yesNo("@SCM:MessageFormatRestoreConfirmation", DialogButton::No, "@SYS12529") == DialogButton::Yes))
            {
                ttsbegin;
                catExternalMessageFormat.MessageBody = conPeek(SysResource::getResourceNodeData(SysResource::getResourceNode(resourceStr(cXMLDefaultTemplate))), 1);
                catExternalMessageFormat.doUpdate();
                ttscommit;

                CatExternalMessageFormat_ds.reread();
                CatExternalMessageFormat_ds.refresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidateSetting</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            CatPunchoutHandler punchoutHandler = CatPunchoutHandler::constructForValidation(CatExternalCatalog.Name);

            if (!punchoutHandler)
            {
                throw error ("@SCM:NoValidPunchoutProtocolWasFound");
            }

            try
            {
                punchoutHandler.startPunchout(CatExternalCatalog.Name, true);
            }
            catch(Exception::Error)
            {
                punchoutHandler.printErrorMessages();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Party</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// This is a custom lookup method to get the vendors from cross company.
        /// </summary>
        public void lookup()
        {
            DirPartyTable dirPartyTable;
            var dirPartyFilter = DirPartyLookupEntitiesFilter::generateDirPartyLookupEntitiesFilter(NoYes::No);
            dirPartyFilter.parmFilterVendors(FilterStatus::Set);
         
            Args args = new Args(formStr(DirPartyLookup));
            args.parmEnumType(enumNum(DirPartyType));
            args.parmObject(dirPartyFilter);
            args.record(dirPartyTable);
            args.caller(this);

            FormRun lookupForm = FormAutoLookupFactory::buildLookupFromCustomForm(this, new Form(formStr(DirPartyLookup)),AbsoluteFieldBinding::construct(fieldStr(DirPartyTable, Name), tableStr(DirPartyTable)), args);
            FormAutoLookupFactory::performFormLookup(lookupForm, true, this);
            dirPartyRecId = lookupForm.selectRecordModeSelectedRecord().RecId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            CatExternalCatalogVendor catExternalCatalogVendor;

            delete_from catExternalCatalogVendor
                where catExternalCatalogVendor.ExternalCatalog == catExternalCatalog.RecId;

            element.setDirPartyTableRecId(party.text(), dirPartyRecId);

            if (dirPartyRecId)
            {
                element.resetListView();

                CatExternalCatalogProcurementCategories::deleteAllCategoriesForCatalog(catExternalCatalog.RecId);

                contacts_VendorContact.text('');
                catExternalCatalog.ContactPerson = 0;
                origContactName = '';

                catExternalCatalog.Party = dirPartyRecId;
                catExternalCatalog_ds.refresh();

                element.populateListViewFromParty(dirPartyRecId, true);
            }
            else
            {
                warning(strFmt("@SCM:ExternalCatalogPartyNotFoundWarning", party.text()));
                return false;
            }

            origPartyName = party.text();

            CatExternalCatalog_ds.write();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Contacts_VendorContact</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>getSelectedContactPersonId</Name>
						<Source><![CDATA[
        void getSelectedContactPersonId(recId _contactPersonId)
        {
            contactPersonId = _contactPersonId;
            vendorContactPersonSelected = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// This is a custom lookup method to get the vendor contacts from cross company.
        /// </summary>
        public void lookup()
        {
            Args    args;
            Object  formRun;
            
            element.enabledLegalEntitiesVendors();
            
            args = new Args();
            args.name(formstr(ContactPersonGlobalLookup));
            args.caller(this);
            formRun = classfactory.formRunClass(args);
            formRun.selectedLegalEntities(checkedCompanies, selectedVendors);
            formRun.init();
            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret, found;
            ContactPerson   contactPerson;
            AccountNum      vendorAccount;
            VendTable       vendTable;
            dataAreaId      legalEntity;
            int             counter;

            ret = super();

            if (contacts_VendorContact.text() == '')
            {
                contactPersonId = 0;
            }
            else
            {
                element.enabledLegalEntitiesVendors();
                
                if (!vendorContactPersonSelected)
                {
                    for (counter = 1; counter <= conlen(checkedCompanies); counter++)
                    {
                        legalEntity = conpeek(checkedCompanies,counter);
                        vendorAccount = conpeek(selectedVendors,counter);
                        while select crossCompany * from contactPerson
                        join Party, AccountNum from vendTable where contactPerson.ContactForParty == vendTable.Party &&
                            vendTable.AccountNum == vendorAccount
                            && contactPerson.DataAreaId == getCompany(tableNum(contactPerson), legalEntity)
                        {
                            if (contactPerson.personName() == this.valueStr())
                            {
                                found = true;
                                break;
                            }
                        }
                        if (found)
                        {
                            break;
                        }
                    }
                    if (found)
                    {
                        contacts_VendorContact.text(this.valueStr());
                        contactPersonId = contactPerson.RecId;
                        origContactName = contacts_VendorContact.text();
                    }
                    else
                    {
                        contacts_VendorContact.text(origContactName);
                        contactPersonId = catExternalCatalog.ContactPerson;
                    }
                }
                else
                {
                    vendorContactPersonSelected = false;
                }
            }

            catExternalCatalog.ContactPerson = contactPersonId;
            catExternalCatalog.update();

            origContactName = contacts_VendorContact.text();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnableDisableLegalEntity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.enableDisableLegalEntity();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LegalEntityListView</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(int _Idx, anytype _Data)
        {
            super(_Idx, _Data);
            
            FormListItem   item;
            int            counter;

            for(counter=0; counter < legalEntityListView.getCount(); counter++)
            {
                item = legalEntityListView.getItem(counter);
                    
                boolean state = item.stateSelected();
                EnableDisableLegalEntity.enabled(state);
                if(state)
                {
                    if(legalEntityListView.getItem(counter, externalCatalogAccessListViewColumn).text() == enum2Str(NoYes::No))
                    {
                        EnableDisableLegalEntity.text("@SCM:AllowExternalCatalogAccess");
                    }
                    else
                    {
                        EnableDisableLegalEntity.text("@SCM:PreventExternalCatalogAccess");
                    }

                    break;
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CategoryNew</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.checkCategoriesExistForVendor())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CategoryDelete</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes an existing category from the <c>CatExternalCatalogProcurementCategories</c> table.
        /// </summary>
        void clicked()
        {
            catExternalCatalogProcurementCategories_ds.allowDelete(true);
            catExternalCatalogProcurementCategories_ds.delete();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalog</Name>
			<Table>CatExternalCatalog</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultQuoteExpiration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOpenedInNewWindow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Owner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuoteItemDeletion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuoteQuantityChange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalogProcurementCategories</Name>
			<Table>CatExternalCatalogProcurementCategories</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalCatalog</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>XCV</Name>
			<Table>CatExternalCatalogVendor</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ExternalCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorAccountNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorDataAreaId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalCatalog</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalogTranslationDisplay</Name>
			<Table>CatExternalCatalogTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FriendlyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Language</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalCatalog</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatExternalMessageFormat</Name>
			<Table>CatExternalMessageFormat</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ExternalCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MessageBody</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PunchoutEntityType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalCatalog</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatCXMLExtrinsic</Name>
			<Table>CatCXMLExtrinsic</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<AllowEdit>No</AllowEdit>
					<DataField>MessageFormat</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalMessageFormat</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalogProperties</Name>
			<Table>CatExternalCatalogProperties</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CatExternalCatalog</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS135402</Caption>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">CatExternalCatalog</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Modify</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CatExternalCatalogActivateInactivate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS132116</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>EcoResProductImage</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>EcoResProductImage</MenuItemName>
								<Text>@SYS331862</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RestoreMessageFormat</Name>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SCM:RestoreMessageFormat</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CatExternalCatalogTranslation</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>CatExternalCatalogTranslation</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ValidateSetting</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS133044</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CatCXMLCartLogList</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>CatCXMLCartLogList</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS316703</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavigationListGrid_Name</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>CatExternalCatalog</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>CatExternalCatalog_State</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>State</DataField>
								<DataSource>CatExternalCatalog</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>CatExternalCatalog_Party</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>CatExternalCatalog</DataSource>
								<ReferenceField>Party</ReferenceField>
							</AxFormControl>
						</Controls>
						<DataSource>CatExternalCatalog</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderInfo</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HeaderTitle</Name>
						<AlignControl>No</AlignControl>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<ColorScheme>WindowsPalette</ColorScheme>
						<DataMethod>titleFields</DataMethod>
						<DataSource>CatExternalCatalog</DataSource>
						<FontSize>11</FontSize>
						<ForegroundColor>DynTitleGreen</ForegroundColor>
						<ShowLabel>No</ShowLabel>
						<Style>TitleField</Style>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupGeneralMisc</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupNameAndDescription</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupExternalCatalogName</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Catalog_Name</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>200</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>CatExternalCatalog</DataSource>
														<FastTabSummary>Yes</FastTabSummary>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Columnspace>2</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupExternalCatalogDescription</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Catalog_Description</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>200</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Description</DataField>
														<DataSource>CatExternalCatalogTranslationDisplay</DataSource>
														<Label>@SYS7576</Label>
														<MultiLine>Yes</MultiLine>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Columnspace>2</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CatExternalCatalog_IsOpenedInNewWindow</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsOpenedInNewWindow</DataField>
										<DataSource>CatExternalCatalog</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>CatExternalCatalog_DefaultQuoteExpiration</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DefaultQuoteExpiration</DataField>
										<DataSource>CatExternalCatalog</DataSource>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CatExternalMessageFormat_PunchoutEntityType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PunchoutEntityType</DataField>
										<DataSource>CatExternalMessageFormat</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS2952</Caption>
								<DataSource>CatExternalCatalog</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Status</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CatExternalCatalog_Status</Name>
										<AllowEdit>No</AllowEdit>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>State</DataField>
										<DataSource>CatExternalCatalog</DataSource>
										<Label>@SYS126532</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS132113</Caption>
								<DataSource>CatExternalCatalog</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS35893</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>VendorList</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Vendor</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Party</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS315795</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>CatPartyName</ExtendedDataType>
										<FastTabSummary>Yes</FastTabSummary>
										<LabelWidth>66</LabelWidth>
										<LabelWidthMode>Fixed</LabelWidthMode>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Contacts_VendorContact</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>CatVendorContact</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>EnableDisableLegalEntity</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@SCM:HelpTextExternalCatalogAccess</HelpText>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Style>Standard</Style>
										<Text>@SCM:PreventExternalCatalogAccess</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormListViewControl">
								<Name>LegalEntityListView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<DragDrop>Manual</DragDrop>
								<ElementPosition>1717986916</ElementPosition>
								<ExtendedStyle>list_advancedSelection</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>ListView</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<CheckBox>Yes</CheckBox>
								<ColumnHeaderButton>Yes</ColumnHeaderButton>
								<EditLabels>Yes</EditLabels>
								<RowSelect>Yes</RowSelect>
								<ViewType>Report</ViewType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS80105</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CategoryMapping</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CategoryGroupActionPane</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>CategoryGroupActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>Category</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>CategoryNew</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS328872</HelpText>
														<NeededPermission>Create</NeededPermission>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS335337</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>CategoryDelete</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS328874</HelpText>
														<NeededPermission>Update</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<NormalImage>Delete</NormalImage>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>CatExternalCatalogProcurementCategories</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CategoryGrid</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>CatExternalCatalogProcurementCategories_Category</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>CatExternalCatalogProcurementCategories</DataSource>
										<ReferenceField>Category</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataSource>CatExternalCatalogProcurementCategories</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>5</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS134097</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>MessageFormatSettings</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MessageFormatSettingsGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CatExternalMessageFormat_MessageBody</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MessageBody</DataField>
										<DataSource>CatExternalMessageFormat</DataSource>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExtrinsicsGroup</Name>
										<HeightMode>SizeToAvailable</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>ExtrinsicsActionPane</Name>
												<NeededPermission>Delete</NeededPermission>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>FormButtonGroupControl1</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>AddButton</Name>
																<NeededPermission>Create</NeededPermission>
																<Type>CommandButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Command>New</Command>
																<Text>@SYS124603</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>DeleteButton</Name>
																<NeededPermission>Delete</NeededPermission>
																<Type>CommandButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Command>DeleteRecord</Command>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Delete</NormalImage>
																<Text>@SYS309739</Text>
															</AxFormControl>
														</Controls>
													</AxFormControl>
												</Controls>
												<DataSource>CatCXMLExtrinsic</DataSource>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>ExtrinsicsGrid</Name>
												<NeededPermission>Delete</NeededPermission>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExtrinsicsGrid_Name</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>CatCXMLExtrinsic</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ExtrinsicsGrid_Value</Name>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Value</DataField>
														<DataSource>CatCXMLExtrinsic</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataGroup>Extrinsics</DataGroup>
												<DataSource>CatCXMLExtrinsic</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SCM:CatCXMLExtrinsics</Caption>
										<DataSource>CatCXMLExtrinsic</DataSource>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:MessageFormatSettings</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OrderProperties</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>PropertyButtons</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>PropertyGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PropertyNew</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@CXM:NewOrderProperty</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PropertyDelete</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@CXM:DeleteOrderProperty</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddDefaults</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@CXM:DefaultOrderProperty</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PropertiesGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CatExternalCatalogProperties_Name</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>CatExternalCatalogProperties</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CatExternalCatalogProperties_Value</Name>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCatPropertyName</DataMethod>
										<DataSource>CatExternalCatalogProperties</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CatExternalCatalogProperties_ValueEdit</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCatPropertyName</DataMethod>
										<DataSource>CatExternalCatalogProperties</DataSource>
										<Label>@SYS71361</Label>
										<Text>Value</Text>
									</AxFormControl>
								</Controls>
								<DataSource>CatExternalCatalogProperties</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@CXM:OrderPropertiesCaption</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>