<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjectAccountingDistributionDetail</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjectAccountingDistributionDetail extends FormRun
{
    [FormObservable]
    SourceDocumentLineItem  topSourceDocumentLineItem;

    SourceDocumentLineItem  accDistSourceDocumentLineItem;
    AccountingDistribution  localAccountingDistribution;
    boolean                 mustDefaultCostPriceAsSalesPrice;

    CustBillingCodeVersion      custBillingCodeVersion;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        FormDataSource   formDataSource;

        super();

        if (FormDataUtil::getFormDataSource(localAccountingDistribution))
        {
            formDataSource = FormDataUtil::getFormDataSource(localAccountingDistribution);
            formDataSource.executeQuery();
            formDataSource.positionToRecord(accountingDistribution);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjfundingLimitsExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the current accounting distribution is associated with project funding limits or not.
    /// </summary>
    /// <param name="_accDistributionRecId">
    /// <c>ProjectAccountingDistributionRecId</c>.
    /// </param>
    /// <returns>
    /// True if funding limits exists else false.
    /// </returns>
    private boolean checkProjfundingLimitsExists(RefRecId _accDistributionRecId)
    {
        ProjFundingLimitTracking    projFundingLimitTrack;

        select firstonly RecId from projFundingLimitTrack
            where projFundingLimitTrack.AccountingDistribution == _accDistributionRecId &&
                  projFundingLimitTrack.Reversing              == NoYes::No;

        return projFundingLimitTrack.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    public void enableFieldsActive()
    {
        boolean sourceDocLineCanProcessProject = ProjectSourceDocumentLineItemHelper::canProcessProject(accDistSourceDocumentLineItem);
        boolean sourceDocAmountCanProcessProject = (accountingDistribution.MonetaryAmount == MonetaryAmount::ExtendedPrice ? true : false) || ProjectSourceDocumentLineItemHelper::isPayrollMonetaryAmount(accountingDistribution.MonetaryAmount);

        boolean allowEdit = sourceDocLineCanProcessProject && sourceDocAmountCanProcessProject;

        boolean hasProject = (projectAccountingDistribution.ProjTable ? true : false);

        boolean allowEditWithProject = allowEdit && hasProject;

        boolean isSalesCurrencyLocked;

        changecompany (CompanyInfo::findRecId(accountingDistribution.AccountingLegalEntity).DataArea)
        {
            if (projectAccountingDistribution.ProjTable)
            {
                ProjTable projTable = ProjTable::findRecId(projectAccountingDistribution.ProjTable);
                isSalesCurrencyLocked = ProjInvoiceTable::isSalesCurrencyLocked(projTable.ProjInvoiceProjId);
            }
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && custBillingCodeVersion)
        {
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjTable)).allowEdit(allowEdit && custBillingCodeVersion.ProjIdAllowChanges);
        }
        else
        {
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjTable)).allowEdit(allowEdit);
        }

        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, SmmActivities)).allowEdit(allowEditWithProject);

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && custBillingCodeVersion)
        {
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjCategory)).allowEdit(allowEditWithProject && custBillingCodeVersion.ProjCategoryAllowChanges);
        }
        else
        {
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjCategory)).allowEdit(allowEditWithProject);
        }

        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjFundingSource)).allowEdit(allowEditWithProject);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjLineProperty)).allowEdit(allowEditWithProject);

        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, Currency)).allowEdit(allowEditWithProject && !isSalesCurrencyLocked);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TransactionCurrencyPrice)).allowEdit(allowEditWithProject);

        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TaxGroupHeading)).allowEdit(allowEditWithProject);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TaxItemGroupHeading)).allowEdit(allowEditWithProject);
		
		if (ProjFundingLimitTrackingManager::isUsingDocumentMatching(accDistSourceDocumentLineItem) &&
           this.checkProjfundingLimitsExists(projectAccountingDistribution.RecId))
        {
            fundingSources.visible(true);
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjFundingSource)).visible(false);
        }
        else
        {
            fundingSources.visible(false);
            projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjFundingSource)).visible(true);
        }

        // Disabling project fields on the form if the budget reservation line is found referencing a purchase requisition line, purchase order line or vendor invoice line.
        if (PublicSectorUtils::isBudgetReservationEnabled())
        {
            boolean     isBudgetReservationLineReferenced;
            boolean     isBudgetReservationProjectDetailEditable;

            switch (classIdGet(topSourceDocumentLineItem))
            {
                case classNum(PurchReqSourceDocLineItem):
                if (PurchReqLine::findBySourceDocumentLine(topSourceDocumentLineItem.parmSourceDocumentLine().RecId).BudgetReservationLine_PSN != 0)
                    {
                        isBudgetReservationLineReferenced = true;
                    }
                    break;

                case classNum(PurchOrderLineSourceDocumentLineItem):
                if (PurchLine::findBySourceDocumentLine(topSourceDocumentLineItem.parmSourceDocumentLine().RecId).BudgetReservationLine_PSN != 0)
                    {
                        isBudgetReservationLineReferenced = true;
                    }
                    break;

                case classNum(VendorInvoiceLineSourceDocLineItem):
                if (VendInvoiceInfoLine::findSourceDocumentLine(topSourceDocumentLineItem.parmSourceDocumentLine().RecId).BudgetReservationLine_PSN != 0)
                    {
                        isBudgetReservationLineReferenced = true;
                    }
                    break;

                case classNum(BudgetReservationSourceDocumentLineItem_PSN):
                    isBudgetReservationLineReferenced = true;

                    if (this.isBudgetReservationProjectDetailEditable())
                    {
                        isBudgetReservationProjectDetailEditable = true;
                    }
                    break;
            }

            if (isBudgetReservationLineReferenced && !isBudgetReservationProjectDetailEditable)
            {
                projectAccountingDistribution_ds.allowEdit(false);
                accountingDistribution_ds.object(fieldNum(AccountingDistribution, TransactionCurrency)).enabled(false);
            }
        }

        if (topSourceDocumentLineItem is SourceDocumentLineItemIProduct &&
            ProjParameters::find().DefaultCostPriceAsSalesPrice &&
            localAccountingDistribution.MonetaryAmount == MonetaryAmount::ExtendedPrice)
        {
            SourceDocumentLineItemIProduct sourceDocumentLineItemIProduct = topSourceDocumentLineItem as SourceDocumentLineItemIProduct;

            if (!sourceDocumentLineItemIProduct.parmItemId())
            {
                ProjCategory projCategory = ProjCategory::findRecId(projectAccountingDistribution.ProjCategory);

                if (projCategory && projCategory.CategoryType != ProjCategoryType::Item)
                {
                    mustDefaultCostPriceAsSalesPrice = false;
                }
                else
                {
                    mustDefaultCostPriceAsSalesPrice = true;
                }
            }
        }
  
        element.setVisibleFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBudgetReservationProjectDetailEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the project detail form on the budget reservation line is editable.
    /// </summary>
    /// <returns>
    /// true if budget reservation line does not reference a purchase requisition; otherwise, false.
    /// </returns>
    private boolean isBudgetReservationProjectDetailEditable()
    {
        boolean isBudgetResProjDetailEditable;

        isBudgetResProjDetailEditable = BudgetReservationLine_PSN::findBySourceDocumentLine(topSourceDocumentLineItem.parmSourceDocumentLine().RecId).PurchReqLine == 0;

        return isBudgetResProjDetailEditable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formDataSourceRefresh</Name>
				<Source><![CDATA[
    public void formDataSourceRefresh()
    {
        FormDataSource  formDataSource;

        Global::formDataSourceRefresh(accountingDistribution);
        Global::formDataSourceRefresh(projectAccountingDistribution);

        if (FormDataUtil::getFormDataSource(projectAccountingDistribution))
        {
            formDataSource = FormDataUtil::getFormDataSource(projectAccountingDistribution);
            formDataSource.rereadReferenceDataSources();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingDistribution</Name>
				<Source><![CDATA[
    public container getAccountingDistribution()
    {
        return Global::buf2Con(accountingDistribution);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        FormDataSource                      formDataSource;
        Common                              commonForEmptyTitle;        
        CustInvoiceLineSourceDocLineItem    custInvoiceLineSourceDocLineItem;

        if (!element.args().caller())
        {
            throw error("@SYS22996");
        }

        if (element.args().dataset() != tableNum(AccountingDistribution))
        {
            throw error("@SYS18626");
        }

        localAccountingDistribution = element.args().record();

        if (localAccountingDistribution.RecId == 0)
        {
            throw error("@SYS79604");
        }

        topSourceDocumentLineItem = ProjectSourceDocumentLineItemHelper::sourceDocumentLineItemTopParent(localAccountingDistribution.SourceDocumentLine);
        accDistSourceDocumentLineItem = SourceDocumentLineItem::newFromSourceDocumentLine(SourceDocumentLine::find(localAccountingDistribution.SourceDocumentLine));

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)) && topSourceDocumentLineItem is CustInvoiceLineSourceDocLineItem)
        {
            custInvoiceLineSourceDocLineItem = topSourceDocumentLineItem as CustInvoiceLineSourceDocLineItem;
            custBillingCodeVersion = ProjectSourceDocumentLineItemHelper::custBillingCodeVersion(custInvoiceLineSourceDocLineItem);
        }

        super();

        if (FormDataUtil::getFormDataSource(localAccountingDistribution))
        {
            formDataSource = FormDataUtil::getFormDataSource(localAccountingDistribution);

            projectAccountingDistribution_ds.allowCreate(formDataSource.allowCreate());
            projectAccountingDistribution_ds.allowEdit(formDataSource.allowEdit());
            projectAccountingDistribution_ds.allowDelete(formDataSource.allowDelete());
        }       

		SysQuery::findOrCreateRange(projFundingLimitTracking_ds.queryBuildDataSource(), fieldNum(ProjFundingLimitTracking,Reversing)).value(SysQuery::value(NoYes::No));
        
        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)
            && FeatureStateProvider::isFeatureEnabled(AccDistInvoicePurchaseOrderMatchingFeature_PSN::instance())
            && topSourceDocumentLineItem is VendorInvoiceLineSourceDocLineItem))
        {
            VendorInvoiceLineSourceDocLineItem vendorInvoiceLineSourceDocLineItem;
            VendInvoiceInfoLine vendInvoiceInfoLine;

            vendorInvoiceLineSourceDocLineItem = topSourceDocumentLineItem as VendorInvoiceLineSourceDocLineItem;

            if (vendorInvoiceLineSourceDocLineItem)
            {
                vendInvoiceInfoLine = VendInvoiceInfoLine::findSourceDocumentLine(vendorInvoiceLineSourceDocLineItem.parmSourceDocumentLine().RecId);

                if (vendInvoiceInfoLine.PurchLineRecId)
                {
                    VendParameters vendParameters;
                    select firstonly ProjectMatchingRequired_PSN from vendParameters;
                    boolean isProjectDetailEnabled = !vendParameters.ProjectMatchingRequired_PSN;

                    if (!isProjectDetailEnabled)
                    {
                        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjTable)).enabled(isProjectDetailEnabled);
                        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, ProjCategory)).enabled(isProjectDetailEnabled);
                    }
                }
            }
        }

        element.args().record(commonForEmptyTitle);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleFields</Name>
				<Source><![CDATA[
    public void setVisibleFields()
    {   
        boolean canEnterActivityNumber;
        boolean canEnterSalesPrice;

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            if (ProjectSourceDocumentLineItemHelper::projTransType(accDistSourceDocumentLineItem) != ProjTransType::Revenue)
            {
                canEnterActivityNumber = true;
                canEnterSalesPrice = true;
            }
        }
        else
        {
            if (!(enumName2Id(accDistSourceDocumentLineItem.parmSourceDocument().parmSourceDocumentHeader().TypeEnumName) == enumNum(SourceDocument_CustomerInvoice) &&
            accDistSourceDocumentLineItem.parmSourceDocument().parmSourceDocumentHeader().TypeEnumValue == SourceDocument_CustomerInvoice::CustomerFreeTextInvoice))
            {
                canEnterActivityNumber = true;
                canEnterSalesPrice = true;
            }
        }

        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, SmmActivities)).visible(canEnterActivityNumber);

        boolean priceGroupVisible = canEnterSalesPrice && !mustDefaultCostPriceAsSalesPrice;

        priceGroup.visible(priceGroupVisible);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, Currency)).visible(priceGroupVisible);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TransactionCurrencyPrice)).visible(priceGroupVisible);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TransactionCurrencyAmount)).enabled(priceGroupVisible);

        defaultCostPriceAsSalesPrice.visible(canEnterSalesPrice && mustDefaultCostPriceAsSalesPrice);

        salesTaxGroup.visible(canEnterSalesPrice);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TaxGroupHeading)).visible(canEnterSalesPrice);
        projectAccountingDistribution_ds.object(fieldNum(ProjectAccountingDistribution, TaxItemGroupHeading)).visible(canEnterSalesPrice);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjectAccountingDistribution</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(tableNum(ProjectAccountingDistribution)).clearLinks();
            this.query().dataSourceTable(tableNum(ProjectAccountingDistribution)).addLink(fieldNum(AccountingDistribution, RecId), fieldNum(ProjectAccountingDistribution, AccountingDistribution));
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Currency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedTransCurrencyPost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceCurrency(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceCurrency(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjCategory</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(ProjCategory), MenuItemType::Display);

                args.lookupRecord(CategoryTable::find(ProjCategory::findRecId(projectAccountingDistribution.ProjCategory).CategoryId));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedCategoryIdPost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && ProjectAccountingDistribution::fieldValidateProjIdPost(accountingDistribution, projectAccountingDistribution);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceProjCategory(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceProjCategory(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjFundingSource</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(ProjFundingSourceDetail), MenuItemType::Display);

                args.lookupRecord(ProjFundingSource::find(projectAccountingDistribution.ProjFundingSource));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && ProjectAccountingDistribution::fieldValidateProjFundingSourcePost(accountingDistribution, projectAccountingDistribution);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceProjFundingSource(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedProjFundingSource(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceProjFundingSource(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjLineProperty</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(ProjLineProperty), MenuItemType::Display);

                args.lookupRecord(ProjLineProperty::findRecId(projectAccountingDistribution.ProjLineProperty));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedLinePropertyIdPost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceProjLineProperty(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceProjLineProperty(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjTable</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(ProjTable), MenuItemType::Display);

                args.lookupRecord(ProjTable::findRecId(projectAccountingDistribution.ProjTable));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedProjIdPost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
                element.enableFieldsActive();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && ProjectAccountingDistribution::fieldValidateProjIdPost(accountingDistribution, projectAccountingDistribution);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceProjTable(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceProjTable(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>smmActivities</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(smmActivities), MenuItemType::Display);

                args.lookupRecord(smmActivities::findWithRecId(projectAccountingDistribution.SmmActivities));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedActivityNumberPost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && ProjectAccountingDistribution::fieldValidateProjIdPost(accountingDistribution, projectAccountingDistribution);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceSmmActivities(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceSmmActivities(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroupHeading</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(TaxGroup), MenuItemType::Display);

                args.lookupRecord(TaxGroupHeading::findRecId(projectAccountingDistribution.TaxGroupHeading));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceTaxGroupHeading(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceTaxGroupHeading(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroupHeading</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                MenuFunction    menuFunction;
                Args            args = new Args();

                super();

                menuFunction = new MenuFunction(menuitemDisplayStr(TaxItemGroup), MenuItemType::Display);

                args.lookupRecord(TaxItemGroupHeading::findRecId(projectAccountingDistribution.TaxItemGroupHeading));
                args.caller(element);

                menuFunction.copyCallerQuery(CopyCallerQuery::No);
                menuFunction.run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::resolveReferenceTaxItemGroupHeading(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ProjectAccountingDistribution::lookupReferenceTaxItemGroupHeading(_formReferenceControl, accountingDistribution, projectAccountingDistribution);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ProjectAccountingDistribution::fieldModifiedTransCurrencyPricePost(accountingDistribution, projectAccountingDistribution);

                element.formDataSourceRefresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>AccountingDistribution</Name>
				<Methods>
					<Method>
						<Name>totalTransactionCurrencyCostAmount</Name>
						<Source><![CDATA[
        display AmountCur totalTransactionCurrencyCostAmount()
        {
            return ProjectAccountingDistribution::totalTransactionCurrencyCostAmount(accountingDistribution, topSourceDocumentLineItem, accountingDistribution.TransactionCurrency);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.enableFieldsActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildRange qbr;

            super();

            this.query().dataSourceTable(tableNum(AccountingDistribution)).clearDynalinks();
            this.query().dataSourceTable(tableNum(AccountingDistribution)).clearRanges();

            qbr = this.query().dataSourceTable(tableNum(AccountingDistribution)).addRange(fieldNum(AccountingDistribution, RecId));
            qbr.value(SysQuery::value(localAccountingDistribution.RecId));
            qbr.status(RangeStatus::Hidden);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            // Verify that the record still exists. If the funding sources have changed it is possible that the accounting
            // distribution record has been replaced by new record(s) and we should not call write on the old record.
            if (AccountingDistribution::exist(AccountingDistribution.RecId))
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjectAccountingDistribution</Name>
			<Table>ProjectAccountingDistribution</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostTransCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostTransSale</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjEmplTransCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjEmplTransSale</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjItemTransCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjItemTransSale</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLineProperty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRevenueTransSale</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmActivities</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupHeading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupHeading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyPrice</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>AccountingDistribution</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>AccountingDistribution</Name>
			<Table>AccountingDistribution</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllocationFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinalizeAccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MonetaryAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Number</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceRole</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Role</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjFundingLimitTracking</Name>
			<Table>ProjFundingLimitTracking</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LimitError</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectAccountingDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjFundingLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reversing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SDCreditLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceAccountingDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjectAccountingDistribution</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>ProjFundingLimitIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjFundingLimit</Name>
			<Table>ProjFundingLimit</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LimitSpent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjFundingLimitTracking</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>FundingLimitIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Caption xmlns="">@SYS321182</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>IdentificationGroup</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ProjTableReferenceGroup</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjTableReferenceGroup_ProjId</Name>
										<DataRelationPath>ProjTable</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>ProjTable</ReferenceField>
								<ReplacementFieldGroup>ProjId</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>smmActivitiesReferenceGroup</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>smmActivitiesReferenceGroup_ActivityNumber</Name>
										<DataRelationPath>smmActivities</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>smmActivities</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ProjCategoryReferenceGroup</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjCategoryReferenceGroup_CategoryId</Name>
										<DataRelationPath>ProjCategory</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>ProjCategory</ReferenceField>
								<ReplacementFieldGroup>CategoryId</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ProjFundingSourceReferenceGroup</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjFundingSourceReferenceGroup_FundingSourceId</Name>
										<DataRelationPath>ProjFundingSource</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>ProjFundingSource</ReferenceField>
								<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ProjLinePropertyReferenceGroup</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjLinePropertyReferenceGroup_LinePropertyId</Name>
										<DataRelationPath>ProjLineProperty</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>ProjLineProperty</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<Caption>@SYS5711</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PriceGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>CurrencyReferenceGroup</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyReferenceGroup_CurrencyCode</Name>
										<DataRelationPath>Currency</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>Currency</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ProjectAccountingDistribution_TransactionCurrencyPrice</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransactionCurrencyPrice</DataField>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ProjectAccountingDistribution_TransactionCurrencyAmount</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransactionCurrencyAmount</DataField>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS5755</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DefaultCostPriceAsSalesPrice</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1503238551</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AccountingDistribution_TransactionCurrency</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransactionCurrency</DataField>
								<DataSource>AccountingDistribution</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>totalTransactionCurrencyCostAmount</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>totalTransactionCurrencyCostAmount</DataMethod>
								<DataSource>AccountingDistribution</DataSource>
								<Label>@SYS13754</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS5755</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SalesTaxGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>TaxGroupHeadingReferenceGroup</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxGroupHeadingReferenceGroup_TaxGroup</Name>
										<DataRelationPath>TaxGroupHeading</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>TaxGroupHeading</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>TaxItemGroupHeadingReferenceGroup</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxItemGroupHeadingReferenceGroup_TaxItemGroup</Name>
										<DataRelationPath>TaxItemGroupHeading</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>ProjectAccountingDistribution</DataSource>
								<ReferenceField>TaxItemGroupHeading</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<Caption>@SYS67871</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FundingSources</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ProjFundingLimit_FundingSource</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>ProjFundingLimit</DataSource>
								<ReferenceField>FundingSource</ReferenceField>
								<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ProjFundingLimitTracking_Amount</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Amount</DataField>
								<DataSource>ProjFundingLimitTracking</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataSource>ProjFundingLimitTracking</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<VisibleRows>5</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<Caption>@SYS134969</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>