<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TAMDeduction</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TAMDeduction extends FormRun
{
    #ResAppl

    // Deduction that checking transactions to match against
    TAMDeduction                            deductionSpecTrans;

    // Query ranges
    QueryBuildRange                         queryBuildRangeDeductionStatus;
    QueryBuildRange                         queryBuildRangeAccountNum_Rebate;
    QueryBuildRange                         queryBuildRangeAccountNum_LumpSum;

    // Control objects
    ImageListAppl_CustVend                  imageList;

    Set                                     setCheckedDeductions;
    Set                                     setCheckedTmpTransactions;

    // Primitives
    AccountNum                              accountNumTmpCustVendTransOpen;
    [FormObservable]
    AmountMST                               remainAmountMST;
    [FormObservable]
    AmountMST                               deductionAmountMST;
    SpecTransManager                        specTransManager;
    int                                     numTransactionsMarked;
    CustInvoiceId                           invoiceID;
    str                                     currentTab;
    HcmWorkerLookup                         hcmWorkerLookupCurrentCompany;
    NumberSeqFormHandler                    numberSeqFormHandler;
    boolean                                 deductionClicked;
    TmpTAMDeductionWorkBench                localTmpTAMDeductionWorkBench;
    TAMFundTable                            fundTable;

    boolean                                 errorDisplayed;

}
]]></Source>
			</Method>
			<Method>
				<Name>clearCheckedDeductions</Name>
				<Source><![CDATA[
    boolean clearCheckedDeductions()
    {
        TAMDeduction tamDeductionLocal;
        // If nothing checked then nothing to do
        if (setCheckedDeductions.empty())
        {
            return false;
        }

        // Removed previously checked deduction from set
        setCheckedDeductions.remove(deductionSpecTrans.RecId);

        // Reset set of marked tmp transactions
        setCheckedTmpTransactions = new Set(typeName2Type(extendedTypeStr(RecId)));

        // When unmarking deduction, remove marked transactions
        specTransManager.deleteAll();

        // Set object to null to make isMarked display methods potentially run faster.  If no
        // deductions are marked then don't care whether transactions are marked by another process.
        specTransManager = null;

        // Refresh record that was just unchecked (deductionSpecTrans is equal to checked deduction)
        tamDeductionLocal.data(tamDeduction);
        tamDeduction_ds.positionToRecord(deductionSpecTrans);
        tamDeduction_ds.research();
        tamDeduction_ds.positionToRecord(tamDeductionLocal);

        // Just cleared any checked deduction so match is not possible
        buttonMatch.enabled(false);

        // Reset global amounts
        deductionAmountMST  = 0;
        remainAmountMST     = 0;

        // Refresh transactions

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clickedMethodTmpTAMDeductionWorkBench</Name>
				<Source><![CDATA[
    public void clickedMethodTmpTAMDeductionWorkBench(
        FieldId         _fieldId,
        boolean         _ascending  = true)
    {
        errorDisplayed  = false;

        ttsbegin;
        switch (fieldExt2Id(_fieldId))
        {
            case fieldNum(TmpTAMDeductionWorkBench, Amount):
                if (_ascending)
                {
                    while select forupdate tmpTAMDeductionWorkBench
                        order by Amount asc
                    {
                        element.clickedTmpTAMDeductionWorkBenchUpdate(tmpTAMDeductionWorkBench);
                        if (element.displayRemainAmountMST() <= 0)
                        {
                            break;
                        }
                    }
                }
                else
                {
                    while select forupdate tmpTAMDeductionWorkBench
                        order by Amount desc
                    {
                        element.clickedTmpTAMDeductionWorkBenchUpdate(tmpTAMDeductionWorkBench);
                        if (element.displayRemainAmountMST() <= 0)
                        {
                            break;
                        }
                    }
                }
                break;
            case fieldNum(TmpTAMDeductionWorkBench, TransDate):
                if (_ascending)
                {
                    while select forupdate tmpTAMDeductionWorkBench
                        order by TransDate asc
                    {
                        element.clickedTmpTAMDeductionWorkBenchUpdate(tmpTAMDeductionWorkBench);
                        if (element.displayRemainAmountMST() <= 0)
                        {
                            break;
                        }
                    }
                }
                else
                {
                    while select forupdate tmpTAMDeductionWorkBench
                        order by TransDate desc
                    {
                        element.clickedTmpTAMDeductionWorkBenchUpdate(tmpTAMDeductionWorkBench);
                        if (element.displayRemainAmountMST() <= 0)
                        {
                            break;
                        }
                    }
                }
                break;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clickedTmpTAMDeductionWorkBenchUpdate</Name>
				<Source><![CDATA[
    public void clickedTmpTAMDeductionWorkBenchUpdate(
        TmpTAMDeductionWorkBench    _tmpTAMDeductionWorkBench,
        NoYesId                     _mark   = NoYes::Yes)
    {
        CustTransOpen   custTransOpen;
        boolean         marked;
        custTransOpen   = CustTransOpen::find(_tmpTAMDeductionWorkBench.CustTransOpenRecID);
        marked          = tmpTAMDeductionWorkBench_ds.markTrans(
                            true,
                            custTransOpen,
                            _mark);

        // update if marked value differs from the variable assigned above
        if (_tmpTAMDeductionWorkBench.Mark   != marked)
        {
            _tmpTAMDeductionWorkBench.Mark = marked;
            _tmpTAMDeductionWorkBench.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();
        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodClose();
        }
        if (specTransManager)
        {
            specTransManager.deleteAll();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDeductionAmountMST</Name>
				<Source><![CDATA[
    public display AmountMST displayDeductionAmountMST()
    {
        return deductionAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRemainAmountMST</Name>
				<Source><![CDATA[
    public display AmountMST displayRemainAmountMST()
    {
        return remainAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getListCheckedDeductions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a list of deductions that have been checked by user clicking mark checkbox.
    /// </summary>
    /// <returns>
    /// A list of deductions that have been checked by user clicking mark checkbox.
    /// </returns>
    public RecordSortedList getListCheckedDeductions()
    {
        TAMDeduction        deduction;
        RecordSortedList    sortedListDeduction;
        SetEnumerator       setEnum;

        sortedListDeduction = new RecordSortedList(tableNum(TAMDeduction));
        sortedListDeduction.sortOrder(fieldNum(TAMDeduction, RecId));

        setEnum = setCheckedDeductions.getEnumerator();
        while (setEnum.moveNext())
        {
            select firstonly deduction
                where deduction.RecId == setEnum.current();

            if (deduction.RecId)
            {
                sortedListDeduction.ins(deduction);
            }
        }
        return sortedListDeduction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getListMarkedDeductions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a list of deductions that have been marked by user by highlighting.
    /// </summary>
    /// <returns>
    /// A list of deductions that have been marked by user by highlighting the record.
    /// </returns>
    public RecordSortedList getListMarkedDeductions()
    {
        TAMDeduction        deduction;
        RecordSortedList    sortedListDeduction;

        sortedListDeduction = new RecordSortedList(tableNum(TAMDeduction));
        sortedListDeduction.sortOrder(fieldNum(TAMDeduction, RecId));

        // Mark active deduction (necessary if only one deduction selected)
        tamDeduction_ds.mark(1);

        for (deduction = tamDeduction_ds.getFirst(1);
        deduction;
        deduction = tamDeduction_ds.getNext())
        {
            deduction.reread();
            if (deduction.RecId)
            {
                sortedListDeduction.ins(deduction);
            }
        }
        return sortedListDeduction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args() && element.args().parm())
        {
            invoiceID = element.args().parm();
        }
        else
        {
            invoiceID = '';
        }

        if (element.args().record())
        {
            if (element.args().record().TableId == tableNum(TAMFundTable))
            {
                fundTable = element.args().record();
            }
        }

        super();

        hcmWorkerLookupCurrentCompany = HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany();

        if (invoiceID )
        {
            comboBoxStatus.selection(TAMDeductionStatusSelect::All);
        }
        else
        {
            // Initially only show candidates for matching
            comboBoxStatus.selection(TAMDeductionStatusSelect::Open);
        }

        // Initialize splitter

        // Initialize image lists
        imageList = new ImageListAppl_CustVend();
        isMarkedCustTrans_Deductions.imageList(imageList.imageList());

        // Initialize set of marked deductions
        setCheckedDeductions = new Set(typeName2Type(extendedTypeStr(RecId)));

        // Initialize set of temp transactions that are marked (see TmpCustVendTrasOpen markTrans)
        setCheckedTmpTransactions = new Set(typeName2Type(extendedTypeStr(RecId)));

        // Initially match button is disabled (have to mark deduction and transaction(s) to enable)
        buttonMatch.enabled(false);

        MenuItemButtonReverseMatch.visible(true);

        deductionClicked = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markTrans</Name>
				<Source><![CDATA[
    NoYes markTrans(boolean _set, CustTransOpen _custTransOpen, CustTrans _custTrans, NoYes _markTrans)
    {
        TransDate           calcDiscDate;
        NoYes               markTransLocal = _markTrans;
        CustTransOpenData   custTransOpenData;
        AmountCur           remainAmount;
        CustTransOpen       custTransOpenLocal;

        if (_set)
        {
            // If transaction was checked, then validate that it can be checked
            if (_markTrans == NoYes::Yes)
            {
                // Must be a deduction selected
                if (setCheckedDeductions.empty())
                {
                    if (!errorDisplayed)
                    {
                        errorDisplayed  = true;
                        error("@MCR27670");
                    }
                    return NoYes::No;
                }

                // Can't mark if marked elsewhere
                if (specTransManager.exist(curext(),
                                           _custTransOpen.TableId,
                                           _custTransOpen.RecId))
                {
                    if (!errorDisplayed)
                    {
                        errorDisplayed  = true;
                        error("@SYS29065");
                    }
                    return NoYes::No;
                }
            }

            custTransOpenLocal = CustTransOpen::find(_custTransOpen.RecId);

            // Whether marked or unmarked, calculate value of transaction
            custTransOpenData = CustVendTransOpenData::construct(custTransOpenLocal);
            calcDiscDate = custTransOpenData.calcDiscDate(num2date(date2num(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))));
            remainAmount = custTransOpenData.remainAmountCashDisc(calcDiscDate);

            // Mark or unmark
            if (_markTrans == NoYes::Yes)
            {
                specTransManager.insert(curext(),
                                        custTransOpenLocal.TableId,
                                        custTransOpenLocal.RecId,
                                        remainAmount,
                                        _custTrans.CurrencyCode);
            }
            else
            {
                specTransManager.delete(curext(),
                                        custTransOpenLocal.TableId,
                                        custTransOpenLocal.RecId);
                remainAmount = remainAmount * -1;
            }

            // Whether marked or not, update global remaining amount
            remainAmountMST += (CurrencyExchangeHelper::amountCur2MST(remainAmount, _custTrans.CurrencyCode, 0, custTransOpenLocal.TransDate));

            // Enable/disable match button and refresh
            if (_markTrans == NoYes::Yes)
            {
                numTransactionsMarked++;
            }
            else
            {
                numTransactionsMarked--;
            }
            if (numTransactionsMarked > 0)
            {
                // At least one transaction marked, so enable match button
                buttonMatch.enabled(true);
            }
            else
            {
                buttonMatch.enabled(false);
            }
        }
        else
        {
            if (specTransManager)
            {
                markTransLocal = (specTransManager.exist(curext(), _custTransOpen.TableId, _custTransOpen.RecId)
                                  && !specTransManager.existForOtherSpec(curext(), _custTransOpen.TableId, _custTransOpen.RecId));
            }
        }

        return markTransLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rereadDeductions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes all deductions in list.
    /// </summary>
    public void rereadDeductions(boolean preservePosition)
    {
        tamDeduction_ds.research(preservePosition);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runDeny</Name>
				<Source><![CDATA[
    void runDeny()
    {
        TmpTAMDeductionParmDeny  tmpDeductionParmDeny;
        TAMDeductionUpdate       tamDeductionUpdate;
        RecordSortedList         sortedListDeduction;

        sortedListDeduction = element.getListMarkedDeductions();
        tmpDeductionParmDeny.fill(sortedListDeduction);
        tamDeductionUpdate = TAMDeductionUpdate_Deny::construct(tmpDeductionParmDeny);

        if (tamDeductionUpdate.run())
        {
            // If a deduction was checked for matching then clear (see clearCheckedDeductions)
            element.clearCheckedDeductions();

            element.rereadDeductions(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runMassUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs a mass update or edit of the necessary fields of marked deductions.
    /// </summary>
    public void runMassUpdate()
    {
        TmpTAMDeductionParmMassUpdate    tmpDeductionParmMassUpdate;
        TAMDeductionUpdate               tamDeductionUpdate;
        RecordSortedList                 sortedListDeduction;

        sortedListDeduction = element.getListMarkedDeductions();
        tmpDeductionParmMassUpdate.fill(sortedListDeduction);
        tamDeductionUpdate = TAMDeductionUpdate_MassUpdate::construct(tmpDeductionParmMassUpdate);

        if (tamDeductionUpdate.run())
        {
            // If a deduction was checked for matching then clear (see clearCheckedDeductions)
            element.clearCheckedDeductions();

            // Refresh
            element.rereadDeductions(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runMatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Matches the checked deduction with checked transactions.
    /// </summary>
    public void runMatch()
    {
        TAMDeduction             tamDeductionLocal;
        TmpTAMDeductionParmMatch tmpDeductionParmMatch;
        TAMDeductionUpdate       tamDeductionUpdate;
        RecordSortedList         sortedListDeduction;

        // Get list of checked and grab first deduction from list.  For now only support
        // matching one deduction.
        sortedListDeduction = element.getListCheckedDeductions();
        sortedListDeduction.first(tamDeductionLocal);

        // Prepare temp table which specifies match
        tmpDeductionParmMatch.fillDeductionSpecification(tamDeductionLocal, specTransManager);

        // Build object to perform match
        tamDeductionUpdate = TAMDeductionUpdate_Match::construct(tmpDeductionParmMatch, specTransManager);
        if (tamDeductionUpdate.run())
        {
            // If a deduction was checked for matching then clear (see clearCheckedDeductions)
            element.clearCheckedDeductions();

            // Refresh deductions
            element.rereadDeductions(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runSplit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Splits the marked deductions.
    /// </summary>
    void runSplit()
    {
        TAMDeduction                tamDeductionSave;
        TmpTAMDeductionParmSplit    tmpDeductionParmSplit;
        TAMDeductionUpdate          tamDeductionUpdate;
        RecordSortedList            sortedListDeduction;

        sortedListDeduction = element.getListMarkedDeductions();
        tmpDeductionParmSplit.fill(sortedListDeduction);
        tamDeductionUpdate = TAMDeductionUpdate_Split::construct(tmpDeductionParmSplit);

        if (tamDeductionUpdate.run())
        {
            // If a deduction was checked for matching then clear (see clearCheckedDeductions)
            element.clearCheckedDeductions();

            // Refresh deductions
            element.rereadDeductions(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runWriteOff</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes off the marked deductions.
    /// </summary>
    void runWriteOff()
    {
        TmpTAMDeductionParmWriteOff     tmpDeductionParmWriteOff;
        TAMDeductionUpdate              tamDeductionUpdate;
        RecordSortedList                sortedListDeduction;

        sortedListDeduction = element.getListMarkedDeductions();
        tmpDeductionParmWriteOff.fill(sortedListDeduction);
        tamDeductionUpdate = TAMDeductionUpdate_WriteOff::construct(tmpDeductionParmWriteOff);

        if (tamDeductionUpdate.run())
        {
            // If a deduction was checked for matching then clear (see clearCheckedDeductions)
            element.clearCheckedDeductions();

            element.rereadDeductions(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unmarkTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets marked records on the <c>TmpTAMDeductionWorkBench</c> table to not marked.
    /// </summary>
    /// <remarks>
    /// Called by deselect all, and the menu items under select deduction amount prior to re-selecting.
    /// </remarks>
    void unmarkTrans()
    {
        if (tmpTAMDeductionWorkBench_ds.first())
        {
            do
            {
                if (tmpTAMDeductionWorkBench.Mark    == NoYes::Yes)
                {
                    element.clickedTmpTAMDeductionWorkBenchUpdate(
                        tmpTAMDeductionWorkBench,
                        NoYes::No);
                }
            }
            while (tmpTAMDeductionWorkBench_ds.next());
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TAMDeduction</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            // Initially disable all buttons
            menuItemButtonReverse.enabled(false);
            menuItemButtonReverseWriteOff.enabled(false);
            menuItemButtonReverseDenial.enabled(false);
            MenuItemButtonReverseMatch.enabled(false);
            buttonSplit.enabled(false);
            buttonDeny.enabled(false);
            buttonWriteOff.enabled(false);
            buttonOneTimePromotion.enabled(false);
            
            // Can edit deduction if not closed
            tamDeduction_ds.allowEdit(tamDeduction.tamDeductionStatus != TAMDeductionStatus::Closed);

            boolean notOpen = tamDeduction.tamDeductionStatus != TAMDeductionStatus::Open;

            tamDeduction_ds.object(fieldNum(TAMDeduction, TAMDeductionType)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, AccountNum)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, TAMDeductionStatus)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, AmountCur)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, CurrencyCode)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, DeductOffLedgerDimension)).allowEdit(notOpen);
            tamDeduction_ds.object(fieldNum(TAMDeduction, RemainAmountCur)).allowEdit(notOpen);

            if (tamDeduction.tamDeductionStatus == TAMDeductionStatus::Closed)
            {
                // If deduction closed only thing can do is reverse
                menuItemButtonReverse.enabled(true);

                if (tamDeduction.WriteOffAmountCur)
                {
                    // If write-off amount can reverse write-off
                    menuItemButtonReverseWriteOff.enabled(true);
                }
                else if (tamDeduction.DenyAmountCur)
                {
                    // If deny amount can reverse denial
                    menuItemButtonReverseDenial.enabled(true);
                }
                else if (tamDeduction.MatchAmountCur)
                {
                    // If match amount can reverse match
                    menuItemButtonReverseMatch.enabled(true);
                }
            }
            else if (tamDeduction.tamDeductionStatus == TAMDeductionStatus::Open)
            {
                // If open then can split, deny, and write-off deduction
                buttonSplit.enabled(true);
                buttonDeny.enabled(true);
                buttonWriteOff.enabled(true);
                buttonOneTimePromotion.enabled(true);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    queryBuildDataSource;
            LedgerJournalTrans      ledgerJournalTrans;
            TAMDeduction            tamDeductionLocal;
            super();

            // Initialize status range and initially show open
            queryBuildDataSource = this.queryBuildDataSource();
            queryBuildRangeDeductionStatus = queryBuildDataSource.addRange(
                                                fieldNum(TAMDeduction, tamDeductionStatus));

            // If the invoice ID is passed, get the payment against the passed invoice
            // and only list deductions related to it.
            if (invoiceID)
            {
                ledgerJournalTrans = LedgerJournalTrans_MCR_Extension::mcrFindByInvoice(invoiceID);
                if (ledgerJournalTrans)
                {
                    queryBuildDataSource.addRange(
                        fieldNum(TAMDeduction, LedgerJournalTransParentRecId)).value(SysQuery::value(ledgerJournalTrans.RecId));
                }
                else
                {
                    queryBuildRangeDeductionStatus.value(SysQuery::value(TAMDeductionStatus::Open));
                }
            }
            else if (element.args()             &&
                        element.args().record() &&
                        element.args().record().TableId == tableNum(TAMDeduction))
            {
                queryBuildDataSource.clearDynalinks();
                tamDeductionLocal = element.args().record();
                queryBuildDataSource.addRange(
                    fieldNum(TAMDeduction, tamDeductionID)).value(SysQuery::value(tamDeductionLocal.tamDeductionID));
            }
            else
            {
                queryBuildRangeDeductionStatus.value(SysQuery::value(TAMDeductionStatus::Open));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>markDeduction</Name>
						<Source><![CDATA[
        public edit NoYes markDeduction(boolean         _set,
                                        TAMDeduction    _tamDeduction,
                                        NoYes          _markTrans)
        {
            NoYes       markTransLocal = _markTrans;
            AmountMST   amountMST;

            if (_set)
            {
                if (_markTrans)
                {
                    if (_tamDeduction.tamDeductionStatus != TAMDeductionStatus::Open)
                    {
                        error(strFmt("@MCR27817", TAMDeductionStatus::Open));
                        return NoYes::No;
                    }

                    // Clear any deduction already checked (user is checking a new deduction)
                    element.clearCheckedDeductions();

                    // Mark open trans against deductionSpecTrans
                    deductionSpecTrans.data(_tamDeduction);

                    specTransManager = SpecTransManager::newFromSpec(deductionSpecTrans, true);
                    setCheckedDeductions.add(_tamDeduction.RecId);
                    amountMST = _tamDeduction.RemainAmountMST;
                    deductionAmountMST += amountMST;
                    remainAmountMST    += amountMST;
                }
                else
                {
                    element.clearCheckedDeductions();
                }
            }
            else
            {
                markTransLocal = setCheckedDeductions.in(_tamDeduction.RecId);
            }
            return markTransLocal;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CustInvoiceId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustInvoiceJour::mcrlookupByInvoiceAccountSalesID(_formControl, tamDeduction.AccountNum, tamDeduction.SalesId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MCRMerchandisingEventID</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TAMMerchandisingEvent::jumpRefTAMDeduction(tamDeduction, this);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TAMMerchandisingEvent::lookupInvoiceAccount(_formControl,
                                                            tamDeduction.AccountNum,
                                                            tamDeduction.tamPromotionID,
                                                            false,
                                                            true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SalesTable::mcrlookupByInvoiceAccountInvoiceId(_formControl, tamDeduction.AccountNum, tamDeduction.CustInvoiceId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TAMPromotionID</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Looks up the possible promotions for customer.
            /// </summary>
            /// <param name="_formControl">
            /// The form control that fired the lookup.
            /// </param>
            /// <param name="_filterStr">
            /// The filter string for the lookup.
            /// </param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TAMTradePromotion::lookupInvoiceAccount(_formControl,
                                                        tamDeduction.AccountNum,
                                                        true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TAMDeductionUpdateHistory</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource sortByQueryBuildDataSource;

            super();

            sortByQueryBuildDataSource = this.query().dataSourceName(TAMDeductionUpdateHistory_ds.name());
            sortByQueryBuildDataSource.addOrderByField(fieldNum(TAMDeductionUpdateHistory, createdDateTime));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TmpTAMDeductionWorkBench</Name>
				<Methods>
					<Method>
						<Name>fillTempTable_LumpSum</Name>
						<Source><![CDATA[
        public void fillTempTable_LumpSum()
        {
            TAMMerchandisingEvent		tamMerchandisingEvent;
            TAMMerchEventTrans			tamMerchEventTransLocal;
            CustInvoiceJour				custInvoiceJour;
            CustTrans					custTrans;
            CustTransOpen				custTransOpen;
            TempTAMDebuctionLumpSumView	tamDebuctionLumpSumView;
            MCRClaimType				mcrClaimType    = MCRClaimType::LumpSum;

            insert_recordset localTmpTAMDeductionWorkBench (
                DeductionType,
                AccountNum,
                Amount,
                CustTransOpenRecID,
                CustTransRecID,
                CurrencyCode,
                TransDate,
                MerchandisingEventID,
                Description,
				PromotionID)
                select mcrClaimType, AccountNum, AmountCur, RecIdCustTransOpen, RecIdCustTrans, CurrencyCode, TransDate, MerchandisingEventID, Description, PromotionID from tamDebuctionLumpSumView
                    where tamDebuctionLumpSumView.AccountNum  == tamDeduction.AccountNum
						&& tamDebuctionLumpSumView.AmountCur   <= 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>findSourceTransaction</Name>
						<Source><![CDATA[
        private CustTransRefRecId findSourceTransaction(CustTransRefRecId _custTransRecId)
        {
            CustSettlement custSettlement;
            TAMDeductionUpdateHistory tamDeductionUpdateHistoryLocal;
            TAMDeductionUpdateHistory tamDeductionUpdateHistorySourceLocal;
            TAMDeduction tamDeductionLocal;
            LedgerJournalTrans ledgerJournalTransLocal;
            CustTrans custTransLocal;

            // Find deduction history for CustTransRecId
            select firstonly tamDeductionUpdateHistoryLocal
                exists join ledgerJournalTransLocal
                where ledgerJournalTransLocal.RecId == tamDeductionUpdateHistoryLocal.LedgerJournalTransRecId
                    && ledgerJournalTransLocal.CustTransId == _custTransRecId;
            if (tamDeductionUpdateHistoryLocal)
            {
                tamDeductionUpdateHistorySourceLocal = TAMDeductionUpdateHistory::getSourceRecord(tamDeductionUpdateHistoryLocal);
            }

            // Get settled CustTrans from source deduction history line to find related rebate
            if (tamDeductionUpdateHistorySourceLocal)
            {
                select firstonly TransRecId from custSettlement
                    exists join custTransLocal
                        where custSettlement.OffsetRecId == custTransLocal.RecId
                    exists join ledgerJournalTransLocal
                        where ledgerJournalTransLocal.CustTransId == custTransLocal.RecId
                            && ledgerJournalTransLocal.RecId == tamDeductionUpdateHistorySourceLocal.LedgerJournalTransRecId;
            }

            return custSettlement.TransRecId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>fillTempTable_Rebate</Name>
						<Source><![CDATA[
        public void fillTempTable_Rebate()
        {
            PdsRebateTable          pdsRebateTableLocal;
            PdsRebateTrans          pdsRebateTransLocal;
            LedgerJournalTrans      ledgerJournalTrans;
            LedgerJournalTable      ledgerJournalTable;
            TAMDeduction			tempTamDeduction;
            CustTrans               custTrans;
            CustTransOpen           custTransOpen;
            TAMMerchandisingEvent   tamMerchandisingEvent;
            TAMDeductionUpdateHistory tamDeductionUpdateHistoryLocal;

            PdsRebateTable          pdsRebateTable1;
            select firstonly RecId from pdsRebateTable1;
            if (!pdsRebateTable1.RecId)
            {
                return;
            }

            //Run though the joins to find the records for rebates and load the tmp table.
            while select AmountCur, RecId, RefRecId from custTransOpen
            where custTransOpen.AccountNum == tamDeduction.AccountNum
                && custTransOpen.AmountCur <= 0
            join RecId, CurrencyCode from custTrans
                where custTrans.RecId == custTransOpen.RefRecId
            {
                select count(RecId), maxof(PdsRebateId) from pdsRebateTableLocal
                    outer join maxof(MerchandisingEventID), maxof(Description), maxof(PromotionID) from tamMerchandisingEvent
                        where tamMerchandisingEvent.MerchandisingEventID == pdsRebateTableLocal.TAMMerchandisingEventID
                    exists join pdsRebateTransLocal
                        where pdsRebateTransLocal.PdsRebateId == pdsRebateTableLocal.PdsRebateId
                    exists join ledgerJournalTable
                        where ledgerJournalTable.JournalNum == pdsRebateTransLocal.LedgerJournalId
                    exists join ledgerJournalTrans
                        where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum
                            && ledgerJournalTrans.CustTransId == custTrans.RecId;
                
                if (pdsRebateTableLocal.RecId == 0)
                {
                    CustTransRefRecId rebateCustTransRecId = this.findSourceTransaction(custTrans.RecId);

                    if (rebateCustTransRecId)
                    {
                        select count(RecId), maxof(PdsRebateId) from pdsRebateTableLocal
                            outer join maxof(MerchandisingEventID), maxof(Description), maxof(PromotionID) from tamMerchandisingEvent
                                where tamMerchandisingEvent.MerchandisingEventID == pdsRebateTableLocal.TAMMerchandisingEventID
                            exists join pdsRebateTransLocal
                                where pdsRebateTransLocal.PdsRebateId == pdsRebateTableLocal.PdsRebateId
                            exists join ledgerJournalTable
                                where ledgerJournalTable.JournalNum == pdsRebateTransLocal.LedgerJournalId
                            exists join ledgerJournalTrans
                                where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum
                                    && ledgerJournalTrans.CustTransId == rebateCustTransRecId;
                    }
                }

                if (pdsRebateTableLocal.RecId != 0)
                {
                    localTmpTAMDeductionWorkBench.AccountNum            = tamDeduction.AccountNum;
                    localTmpTAMDeductionWorkBench.Amount                = custTransOpen.AmountCur;
                    localTmpTAMDeductionWorkBench.CustTransRecID        = custTrans.RecId;
                    localTmpTAMDeductionWorkBench.CustTransOpenRecID    = custTransOpen.RecId;
                    localTmpTAMDeductionWorkBench.CurrencyCode          = custTrans.CurrencyCode;
                    localTmpTAMDeductionWorkBench.DeductionType         = MCRClaimType::Rebate;

                    if (pdsRebateTableLocal.RecId == 1)
                    {
                        localTmpTAMDeductionWorkBench.PdsRebateId           = pdsRebateTableLocal.PdsRebateId;
                        localTmpTAMDeductionWorkBench.MerchandisingEventID  = tamMerchandisingEvent.MerchandisingEventID;
                        localTmpTAMDeductionWorkBench.Description           = tamMerchandisingEvent.Description;
                        localTmpTAMDeductionWorkBench.PromotionID			= tamMerchandisingEvent.PromotionID;
                    }
                    else
                    {
                        localTmpTAMDeductionWorkBench.PdsRebateId           = "@SYS338708";
                        localTmpTAMDeductionWorkBench.MerchandisingEventID  = "@SYS338708";
                        localTmpTAMDeductionWorkBench.PromotionID			= "@SYS338708";
                        localTmpTAMDeductionWorkBench.Description           = "";
                    }

                    localTmpTAMDeductionWorkBench.insert();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        public edit NoYes markTrans(boolean         _set,
                                    CustTransOpen  _custTransOpen,
                                    NoYes          _markTrans)
        {
            CustTrans custTrans;

            custTrans = CustTrans::find(_custTransOpen.RefRecId);

            return element.markTrans(_set,
                                     _custTransOpen,
                                     custTrans,
                                     _markTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            delete_from localTmpTAMDeductionWorkBench;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            delete_from localTmpTAMDeductionWorkBench;
            super();

            this.fillTempTable();
        }

]]></Source>
					</Method>
					<Method>
						<Name>fillTempTable</Name>
						<Source><![CDATA[
        public void fillTempTable()
        {
            tmpTAMDeductionWorkBench_ds.fillTempTable_Rebate();
            tmpTAMDeductionWorkBench_ds.fillTempTable_LumpSum();

            tmpTAMDeductionWorkBench.setTmpData(localTmpTAMDeductionWorkBench);
            tmpTAMDeductionWorkBench_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Mark</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                CustTransOpen   custTransOpen;
                CustTrans       custTrans;

                super();

                errorDisplayed  = false;

                custTrans = CustTrans::find(tmpTAMDeductionWorkBench.CustTransRecID);
                custTransOpen = CustTransOpen::find(tmpTAMDeductionWorkBench.CustTransOpenRecID);
                element.markTrans(true, custTransOpen, custTrans, tmpTAMDeductionWorkBench.Mark);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ButtonMatch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.runMatch();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSplit</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.runSplit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeny</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.runDeny();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonWriteOff</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.runWriteOff();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMassUpdate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.runMassUpdate();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonOneTimePromotion</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args            args;
            MenuFunction    menuFunction;

            super();

            args = new Args();
            args.record(tamDeduction);
            menuFunction = new MenuFunction(menuitemDisplayStr(TAMOneTimePromotion),
                                            MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MenuItemButtonReverseWriteOff</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.clearCheckedDeductions();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MenuItemButtonReverseDenial</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.clearCheckedDeductions();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MenuItemButtonCustInvoiceJour</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustInvoiceJour custInvoiceJour;
            Args            args;
            MenuFunction    menuFunction;

            select firstOnly custInvoiceJour
                where custInvoiceJour.InvoiceId == TAMDeduction.CustInvoiceId;

            args = new Args();
            args.caller(element);
            args.record(custInvoiceJour);
            menuFunction = new MenuFunction(
            menuitemdisplaystr(CustInvoiceJournal), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MenuItemButtonReverseMatch</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            // For update history need to execute query so reversal event will show up
            tamDeductionUpdateHistory_ds.executeQuery();

            // Reread deduction record (may have gone from closed to open) and call active to update
            // controls
            tamDeduction_ds.reread();
            tamDeduction_ds.active();

            element.rereadDeductions(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ComboBoxStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            // Set status range value based on combo box value
            switch (this.selection())
            {
                case TAMDeductionStatusSelect::All:
                    queryBuildRangeDeductionStatus.value(SysQuery::valueUnlimited());
                    break;
                case TAMDeductionStatusSelect::Created:
                    queryBuildRangeDeductionStatus.value(SysQuery::value(TAMDeductionStatus::Created));
                    break;
                case TAMDeductionStatusSelect::Open:
                    queryBuildRangeDeductionStatus.value(SysQuery::value(TAMDeductionStatus::Open));
                    break;
                case TAMDeductionStatusSelect::Closed:
                    queryBuildRangeDeductionStatus.value(SysQuery::value(TAMDeductionStatus::Closed));
                    break;
                default:
                    queryBuildRangeDeductionStatus.value(SysQuery::valueUnlimited());
            }
            tamDeduction_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;

            ret = hcmWorkerLookupCurrentCompany.lookupWorker(this);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            HcmWorker ret;

            ret = super();

            if (ret != null
                && !hcmWorkerLookupCurrentCompany.validateWorker(ret.RecId))
            {
                ret = null;
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TAMDeduction_AmountCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (tamDeduction_AmountCur.realValue() != 0)
            {
                tamDeduction.RemainAmountCur = tamDeduction.AmountCur;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Deduction_TAMDeductionType</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            MenuFunction    menuFunction;
            Args            args = new Args();

            args.record(tamDeduction);
            menuFunction = new MenuFunction(menuitemDisplayStr(TAMDeductionType), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Origin_TAMDeductionOrigId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            MenuFunction    menuFunction;
            Args            args;

            menuFunction = new MenuFunction(menuitemDisplayStr(TAMDeduction_TAM), MenuItemType::Display);

            if (tamDeduction.tamDeductionOrigId)
            {
                args = new Args();
                args.record(TAMDeduction::find(tamDeduction.tamDeductionOrigId));
                menuFunction.run(args);
            }
            else
            {
                menuFunction.run();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceGroup2</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;

            ret = hcmWorkerLookupCurrentCompany.lookupWorker(this);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            HcmWorker ret;

            ret = super();

            if (ret != null
                && !hcmWorkerLookupCurrentCompany.validateWorker(ret.RecId))
            {
                ret = null;
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMarkAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (tmpTAMDeductionWorkBench_ds.first())
            {
                do
                {
                    element.clickedTmpTAMDeductionWorkBenchUpdate(
                        tmpTAMDeductionWorkBench,
                        NoYes::Yes);
                }
                while (tmpTAMDeductionWorkBench_ds.next());
            }
            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonUnmarkAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.unmarkTrans();

            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMarkDeductionAmount</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.unmarkTrans();
            element.clickedMethodTmpTAMDeductionWorkBench(
                fieldNum(TmpTAMDeductionWorkBench, Amount),
                true);
            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMarkDeductionAmountDescend</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.unmarkTrans();
            element.clickedMethodTmpTAMDeductionWorkBench(
                fieldNum(TmpTAMDeductionWorkBench, Amount),
                false);
            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMarkDeductionAmountByDate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.unmarkTrans();
            element.clickedMethodTmpTAMDeductionWorkBench(
                fieldNum(TmpTAMDeductionWorkBench, TransDate),
                true);
            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMarkDeductionAmountByDateDescend</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.unmarkTrans();
            element.clickedMethodTmpTAMDeductionWorkBench(
                fieldNum(TmpTAMDeductionWorkBench, TransDate),
                false);
            tmpTAMDeductionWorkBench_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TAMDeduction</Name>
			<Table>TAMDeduction</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductOffLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductWriteOffLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DenyAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DenyJournalID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmWorkerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTransParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMerchandisingEventID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionDenyReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionOrigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionWriteOffReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMPromotionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffJournalID</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTrans_Rebate</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionContractId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionSettlementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManLackDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TAMDeductionUpdateHistory</Name>
			<Table>TAMDeductionUpdateHistory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmWorkerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reversed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMDeductionUpdateType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TAMDeduction</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpTAMDeductionWorkBench</Name>
			<Table>TmpTAMDeductionWorkBench</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ContractNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CustTransOpenRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CustTransRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DeductionNoYes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DeductionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>IndirectBillBackNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Mark</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PromotionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TAMDeduction</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PdsRebateTable</Name>
			<Table>PdsRebateTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>custInvoiceTransRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCorrectedRebateAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustInvoiceJourRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSalesInvoicedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsMarkForCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsPaymtType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsProcessDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateAdjustmentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateAgreementRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateAmtType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateJournalRefNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebatePayTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsStartingRebateAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RebateAgreementLineRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RebateCalcDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoicedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesLineRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesNetExtendedPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTableRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMMerchandisingEventID</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TAMDeduction</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Rebate</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTable_Rebate</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PdsRebateTrans</Name>
			<Table>PdsRebateTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PdsRebateTable</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTable_Rebate</Name>
			<Table>LedgerJournalTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetTransferType_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentOperationsTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DetailSummaryPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>journalTotalOffsetBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinesLimitBeforeDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfLines</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentsGenerated_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProtestSettledBill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RejectedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLineAfterPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedAsReadyBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStatementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxObligationCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherAllocatedAtPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowApprovalStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PdsRebateTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MCR26496</Caption>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">TAMDeduction</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>DeductionMaintenance</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MaintenanceMenuButton</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonMatch</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28089</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@MCR27625</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonSplit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28090</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS10133</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonDeny</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28091</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Text>@MCR27606</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonWriteOff</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28092</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS99195</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonMassUpdate</Name>
										<ElementPosition>1431655762</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28096</HelpText>
										<NeededPermission>Update</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS97333</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonOneTimePromotion</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR27711</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@MCR:MCRSetteDeductionAsOneTime</Text>
									</AxFormControl>
								</Controls>
								<MultiSelect>Yes</MultiSelect>
								<Text>@MCR36158</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@MCR36158</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>MenuItemButtonReverse</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655763</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemButtonReverseWriteOff</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<MenuItemName>TAMDeductionUpdate_ReverseWriteOff</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>Yes</MultiSelect>
								<ShowShortCut>No</ShowShortCut>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemButtonReverseDenial</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<MenuItemName>TAMDeductionUpdate_ReverseDenial</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>No</MultiSelect>
								<ShowShortCut>No</ShowShortCut>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS22850</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<ElementPosition>1789569704</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ViewMenuButton</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MenuItemButtonTAMTradePromotions</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>TAMPromotionsManagmentMenu</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MenuItemButtonSalesTable</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>SalesTable</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MenuItemButtonCustInvoiceJour</Name>
										<ElementPosition>1687308579</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TAMDeduction</DataSource>
										<MenuItemName>CustInvoiceJournal</MenuItemName>
									</AxFormControl>
								</Controls>
								<Text>@SYS3850</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS304872</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroupUpdateHistory</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemButtonReverseMatch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>TAMDeductionUpdateHistory</DataSource>
								<MenuItemName>TAMDeductionUpdate_ReverseMatch</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>TAMDeduction</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupDeduction</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>ComboBoxStatus</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TAMDeductionStatusSelect</EnumType>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RealEditDeductionAmountMST</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayDeductionAmountMST</DataMethod>
						<Label>@SYS32341</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RealEditRemainAmountMST</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayRemainAmountMST</DataMethod>
						<Label>@SYS53076</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabDeduction</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDeductionOverview</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridDeduction</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckBoxMarkDeduction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>268435454</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@MCR28645</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>markDeduction</DataMethod>
										<DataSource>TAMDeduction</DataSource>
										<Label>@SYS19120</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_TAMDeductionID</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>402653181</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870908</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TAMDeduction_TAMDeductionStatus</Name>
										<ElementPosition>671088635</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionStatus</DataField>
										<DataSource>TAMDeduction</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroup</Name>
										<ElementPosition>805306362</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroup_DirPerson_FK_Name</Name>
												<DataRelationPath>HcmWorkerId.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroup_PersonnelNumber</Name>
												<DataRelationPath>HcmWorkerId</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TAMDeduction</DataSource>
										<ReferenceField>HcmWorkerId</ReferenceField>
										<ReplacementFieldGroup>PersonAndPersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TAMDeduction_AmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524089</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TAMDeduction_RemainAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741816</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemainAmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_TAMPromotionID</Name>
										<ElementPosition>1342177270</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMPromotionID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_MCRMerchandisingEventID</Name>
										<ElementPosition>1476394997</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MCRMerchandisingEventID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_SalesId</Name>
										<ElementPosition>1610612724</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_CustInvoiceId</Name>
										<ElementPosition>1744830451</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustInvoiceId</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeduction_Notes</Name>
										<ElementPosition>1879048178</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TAMDeduction_createdDateTime</Name>
										<ElementPosition>2013265905</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>createdDateTime</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@MCR26573</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDeductionGeneral</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Deduction</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Deduction_TAMDeductionID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Deduction_TAMDeductionType</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionType</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Deduction_AccountNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Deduction_TAMDeductionStatus</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionStatus</DataField>
										<DataSource>TAMDeduction</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Deduction_AmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Deduction_CurrencyCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Deduction_DeductOffLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>TAMDeduction</DataSource>
										<ReferenceField>DeductOffLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>Deduction</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IndirectBillbackGroup</Name>
								<ElementPosition>1342177277</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RemainingAmount</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingAmount_RemainAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemainAmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>RemainingAmount</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_TAMPromotionID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMPromotionID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_MCRMerchandisingEventID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MCRMerchandisingEventID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_SalesId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_CustInvoiceId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustInvoiceId</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Notes</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Owner</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Owner_HcmWorkerId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Owner_HcmWorkerId_DirPerson_FK_Name</Name>
												<DataRelationPath>HcmWorkerId.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Owner_HcmWorkerId_PersonnelNumber</Name>
												<DataRelationPath>HcmWorkerId</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TAMDeduction</DataSource>
										<ReferenceField>HcmWorkerId</ReferenceField>
										<ReplacementFieldGroup>PersonAndPersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataGroup>HcmWorker</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDeductionReference</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Origin</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Origin_TAMDeductionOrigId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionOrigId</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Origin_JournalID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Origin</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Denial</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Denial_TAMDeductionDenyReason</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionDenyReason</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Denial_DenyAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DenyAmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Denial_DenyJournalID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DenyJournalID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Denial</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WriteOff</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WriteOff_TAMDeductionWriteOffReason</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionWriteOffReason</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>WriteOff_DeductWriteOffLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>TAMDeduction</DataSource>
										<ReferenceField>DeductWriteOffLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>WriteOff_WriteOffAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WriteOffAmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WriteOff_WriteOffJournalID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WriteOffJournalID</DataField>
										<DataSource>TAMDeduction</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WriteOff</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Split</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Split_SplitAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SplitAmountCur</DataField>
										<DataSource>TAMDeduction</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Split</DataGroup>
								<DataSource>TAMDeduction</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS14018</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDeductionUpdateHistory</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridDeductionUpdateHistory</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TAMDeductionUpdateHistory_TAMDeductionUpdateType</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TAMDeductionUpdateType</DataField>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TAMDeductionUpdateHistory_LedgerJournalId</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalId</DataField>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TAMDeductionUpdateHistory_AmountCur</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TAMDeductionUpdateHistory_Reversed</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Reversed</DataField>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroup2</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroup2_DirPerson_FK_Name</Name>
												<DataRelationPath>HcmWorker.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroup2_PersonnelNumber</Name>
												<DataRelationPath>HcmWorker</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
										<ReferenceField>HcmWorkerId</ReferenceField>
										<ReplacementFieldGroup>PersonAndPersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TAMDeductionUpdateHistory_createdDateTime</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>createdDateTime</DataField>
										<DataSource>TAMDeductionUpdateHistory</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TAMDeductionUpdateHistory</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@MCR28085</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CtrlSplitHori</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>5</Height>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<HideIfEmpty>No</HideIfEmpty>
				<BackgroundColor>WindowBackground</BackgroundColor>
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>GroupCustTran</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AllDeductions</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneLines</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupTransaction</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonMarkAll</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS91436</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS63238</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonUnmarkAll</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS91437</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS57284</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>MenuButton</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@MCR28109</HelpText>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMarkDeductionAmount</Name>
														<ElementPosition>715827882</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS4009819</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMarkDeductionAmountDescend</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS4009821</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMarkDeductionAmountByDate</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS4009820</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMarkDeductionAmountByDateDescend</Name>
														<ElementPosition>1789569705</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS4009822</Text>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@MCR28108</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>IsMarkedCustTrans_Deductions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
										<Label>@SYS68094</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Mark</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@MCR28646</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Mark</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
										<Label>@SYS19120</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Grid_DeductionType</Name>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductionType</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Grid_AccountNum</Name>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Grid_Amount</Name>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Grid_CurrencyCode</Name>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Grid_PromotionID</Name>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PromotionID</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpTAMDeductionWorkBench_PdsRebateId</Name>
										<ElementPosition>1734506014</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsRebateId</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpTAMDeductionWorkBench_MerchandisingEventID</Name>
										<ElementPosition>1734506014</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MerchandisingEventID</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpTAMDeductionWorkBench_Description</Name>
										<ElementPosition>1734506014</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Grid_TransDate</Name>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>TmpTAMDeductionWorkBench</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TmpTAMDeductionWorkBench</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS3500</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
