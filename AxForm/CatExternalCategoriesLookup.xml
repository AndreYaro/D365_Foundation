<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CatExternalCategoriesLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CatExternalCategoriesLookup extends FormRun
{
    container           selectedVendors, selectedLegalEntities;
    FormStringControl   formStringControl;
    Set                 categoryNameSet;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkedLegalEntitiesAndVendors</Name>
				<Source><![CDATA[
    void  checkedLegalEntitiesAndVendors(container _legalEntities,container _vendors)
    {
        selectedVendors = _vendors;
        selectedLegalEntities = _legalEntities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelectRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override of the closeSelectRecord method.
    /// </summary>
    /// <param name = "_selectedRecord">Record that has been selected</param>
    /// <remarks>Sends back an <c>EcoResCategory</c> record instead of a <c>TmpVendLookup</c> record.</remarks>
    public void closeSelectRecord(Common _selectedRecord)
    {
        TmpVendLookup tmpVend = _selectedRecord;
        EcoResCategory selectedCategory = EcoResCategory::find(str2Int64(tmpVend.Category));

        tmpVend.delete();
        super(selectedCategory);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpVendLookup</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts the <c>TmpVendLookup</c> temporary table with the cross company vendors.
        /// </summary>
        public void init()
        {           
            super();

            AccountNum              vendorAccount;
            dataAreaId              legalEntity;
                      
            categoryNameSet = new Set(Types::String);

            for (int counter = 1; counter<= conlen(selectedVendors); counter++)
            {
                if ( vendorAccount != conpeek(selectedVendors,counter) || legalEntity != conpeek(selectedLegalEntities,counter))
                {
                    vendorAccount = conpeek(selectedVendors,counter);
                    legalEntity = conpeek(selectedLegalEntities,counter);

                    VendCategory                    vendCategory;
                    VendProcurementCategoryStatus   vendProcurementCategoryStatus;
                    EcoResCategory                  ecoResCategory;
                    EcoResCategoryHierarchy         ecoResCategoryHierarchy =   EcoResCategoryHierarchy::find(
                                                                                EcoResCategoryHierarchyRole::getHierarchiesByRole(
                                                                                EcoResCategoryNamedHierarchyRole::Procurement
                                                                                ).CategoryHierarchy);
                    while select RecId
                        from vendCategory
                            where vendCategory.VendorDataArea == getCompany(tableNum(VendTable), legalEntity)
                                && vendCategory.VendorAccount == vendorAccount
                        join TableId from vendProcurementCategoryStatus 
                            where vendProcurementCategoryStatus.VendorCategory == vendCategory.RecId
                                && vendProcurementCategoryStatus.ValidTo >= DateTimeUtil::date(DateTimeUtil::utcNow())
                                && vendProcurementCategoryStatus.ValidFrom <= DateTimeUtil::date(DateTimeUtil::utcNow())
                        join RecId, Name from ecoResCategory
                            where vendCategory.Category == ecoResCategory.RecId
                                && ecoResCategoryHierarchy.RecId == ecoResCategory.CategoryHierarchy
                                && ecoResCategory.IsActive == NoYes::Yes
                    {
                        if (!categoryNameSet.in(ecoResCategory.Name))
                        {
                            ttsbegin;
                            TmpVendLookup.clear();
                            TmpVendLookup.VendAccount = vendorAccount;
                            TmpVendLookup.VendorDataAreaId = legalEntity;
                            TmpVendLookup.Category = int642str(ecoResCategory.RecId);
                            TmpVendLookup.Name = ecoResCategory.Name;
                            TmpVendLookup.CategoryHierarchyName = ecoResCategoryHierarchy.Name;
                            TmpVendLookup.insert();
                            ttscommit;
                            categoryNameSet.add(ecoResCategory.Name);
                        }
                    }
                }
            }

            tmpVendLookup_ds.query().dataSourceTable(tablenum(TmpVendLookup)).addSortField(fieldnum(TmpVendLookup, Name));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpVendLookup</Name>
			<Table>TmpVendLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>City</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Street</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ZipCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS25194</Caption>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>TmpVendLookupGrid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TmpVendLookup_Name</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>TmpVendLookup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TmpVendLookup_CategoryHierarchyName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CategoryHierarchyName</DataField>
						<DataSource>TmpVendLookup</DataSource>
						<Label>@SYS130823</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TmpVendLookup_Category</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Category</DataField>
						<DataSource>TmpVendLookup</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>TmpVendLookup</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>