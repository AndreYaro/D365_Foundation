<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvReceiptImport</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvReceiptImport extends FormRun
{
    FileUploadTemporaryStorageResult    fileUploadResult;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Triggers the events necessary for the file upload control and shows only the necessary fields based off
    /// the menu item.
    /// </summary>
    public void init()
    {
        super();

        FileUploadControl.notifyUploadCompleted += eventhandler(this.uploadCompleted);
        FileUploadControl.notifyUploadAttemptStarted += eventhandler(this.uploadStarted);

        if (element.args())
        {
            if (element.args().parmEnum() == TrvReceiptImportType::ExpenseReport)
            {
                PersonnelNumber.visible(false);
                ExpenseReportNumber.mandatory(true);
                FileUploadInstructions.text("@Expense:ReceiptImportHelpText_ExpenseReport");
            }
            else
            {
                ExpenseReportNumber.visible(false);
                PersonnelNumber.mandatory(true);
                FileUploadInstructions.text("@Expense:ReceiptImportHelpText_Employee");
            }
        }
        else
        {
            throw error("@SYS22996"); // Form called incorrectly
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>uploadCompleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when document upload completes to create attachment for application.
    /// </summary>
    public void uploadCompleted()
    {
        fileUploadResult = FileUploadControl.getFileUploadResult();
        OkButton.enabled(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>uploadStarted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when document upload starts to disable the OK button during loading.
    /// </summary>
    public void uploadStarted()
    {
        OkButton.enabled(false);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ExpenseReportNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override the super() logic to create a lookup of all the expense reports.
        /// </summary>
        public void lookup()
        {
            // super();
            TrvExpenseLookupHelper::createExpenseReportLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PersonnelNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override super() logic to create a lookup for all workers in this company.
        /// </summary>
        public void lookup()
        {
            // super();
            HcmWorker hcmWorker = HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().lookupWorker(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Attaches the receipt either as an unnattached receipt or to an expense report.
        /// </summary>
        public void clicked()
        {
            super();
            TrvExpNumber            expenseNumber = ExpenseReportNumber.valueStr();
            HcmPersonnelNumberId    workerPersonnelNumber = PersonnelNumber.valueStr();

            // Check if the file has been uploaded to the control. Else, prompt the user to do so.
            if (fileUploadResult)
            {
                // If expense number is entered, attach directly to the expense report if valid. Else throw error and keep the dialog open.
                if (expenseNumber)
                {
                    TrvExpTable trvExpTable = TrvExpTable::find(expenseNumber);

                    if (trvExpTable.RecId)
                    {
                        TrvReceiptsHelper::importReceipt(trvExpTable.TableId, trvExpTable.RecId, trvExpTable.ReferenceDataAreaId,
                                                         fileUploadResult, FileNotes.valueStr());
                        info(strfmt("@Expense:ReceiptSuccess_ExpenseReport", expenseNumber));
                    }
                    else
                    {
                        throw error("@Expense:ReceiptError_InvalidExpense");
                    }
                }
                else
                {
                    // Validate correct personnel number and import receipt as an unnattached receipt. Throw error and keep dialog open otherwise.
                    HcmWorker hcmWorker = HcmWorker::findByPersonnelNumber(workerPersonnelNumber);

                    if (!hcmWorker.RecId)
                    {
                        throw error("@Expense:ReceiptError_InvalidPersonnelNumber");
                    }
                    else
                    {
                        TrvUnreconciledExpenseTransaction unreconciledReceipt = TrvReceiptsHelper::getOrCreateUnreconciledReceiptContainer(hcmWorker.RecId);
                        TrvReceiptsHelper::importReceipt(unreconciledReceipt.TableId, unreconciledReceipt.RecId, unreconciledReceipt.dataAreaId,
                                                         fileUploadResult, FileNotes.valueStr());
                        info (strfmt("@Expense:ReceiptSuccess_Unnattached", hcmWorker.PersonnelNumber));
                    }
                }
            }
            else
            {
                throw error("@Expense:ReceiptError_UploadFile");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FileUploadGroup</Name>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>FileUploadInstructions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>StaticText</Type>
						<FormControlExtension
							i:nil="true" />
						<Text></Text>
					</AxFormControl>
					<AxFormControl>
						<Name>FileUploadControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FormControlExtension>
							<Name>FileUpload</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>fileTypesAccepted</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>fileNameLabel</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>browseText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>style</Name>
									<Type>Enum</Type>
									<TypeName>FileUploadStyle</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>baseFileUploadStrategyClassName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ReceiptFields</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ExpenseReportNumber</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>TrvExpNumber</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PersonnelNumber</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>HcmPersonnelNumberId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FileNotes</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS70989</Label>
						<MultiLine>Yes</MultiLine>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ReceiptsCommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>