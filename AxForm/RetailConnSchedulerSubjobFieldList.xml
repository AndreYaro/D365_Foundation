<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailConnSchedulerSubjobFieldList</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RetailConnSchedulerSubjobFieldList extends FormRun
    {
        RetailConnSchedulerSubjobTable subjob;
        QueryBuildRange         subjobRange;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args() && element.args().caller() && element.args().dataset())
        {
            switch (element.args().record().TableId)
            {
                case tablenum(RetailConnSchedulerSubjobTable)  :   subjob = element.args().record();
                                                            break;
            }
        }

        if (!subjob)
        {
            throw error(strfmt("@SYS22828", funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>matchFieldNames</Name>
				<Source><![CDATA[
/// <summary>
    /// Used by Transfer field list form to auto-populate channel field names from the field names from the given AX table.
    /// </summary>
    /// <remarks>
    /// <c>DataAreaId</c> is never matched.
    /// </remarks>
    void matchFieldNames()
    {
        RetailConnLocationDesignTable channelTable;

        RetailConnLocationDesignTableField tableField;

        RetailConnSchedulerSubjobFieldList schedulerSubjobFieldList;

        DictTable   dictTable;
        DictField   dictField;

        int         fieldIndex;

        // Warning: This function overwrites the default field mapping and can cause extra fields to be included in your subjobs. Data damage can result. Do you want to continue?
        if (Box::yesNo("@SYP4882020", DialogButton::No) == DialogButton::No)
        {
            return;
        }

        dictTable = new DictTable(tablename2id(subjob.AXTableName));

        // If the Ax table does not exist, matching cannot be done.
        if (!dictTable)
        {
            Box::info("@RET408");
            return;
        }

        ttsbegin;

        // Get the channel table and the schema type.
        channelTable = RetailConnLocationDesignTable::find(subjob.RetailConnChannelSchema, subjob.ChannelTableName);

        // Clear the subjob transfer field list and prepare for auto-populate.
        delete_from schedulerSubjobFieldList
            where schedulerSubjobFieldList.SubjobId == subjob.SubJobId;

        // select each field in the ax table and if a channel field exists with the same name
        // create a transfer field for the subjob.
        for (fieldIndex = 1; fieldIndex <= dictTable.fieldCnt(); fieldIndex++)
        {
            dictField = new DictField(dictTable.id(), dictTable.fieldCnt2Id(fieldIndex));

            if (!dictField || strUpr(dictField.name()) == 'DATAAREAID')
            {
                continue;
            }

            // Match on names.
            select firstonly tableField
                where tableField.RetailConnChannelSchema == channelTable.RetailConnChannelSchema
                    && tableField.LocationTableName == channelTable.LocationTableName
                    && tableField.FieldName == dictField.name();

            if (!tableField)
            {
                continue;
            }

            // Create the transfer field and set field names based on the the job upload/download type.
            if (subjob.dataReplicationByPull)
            {
                schedulerSubjobFieldList.SubjobId = subjob.SubJobId;
                schedulerSubjobFieldList.FromFieldName = tableField.FieldName;
                schedulerSubjobFieldList.ToFieldName = dictField.name();
                schedulerSubjobFieldList.insert();
            }
            else
            {
                schedulerSubjobFieldList.SubjobId = subjob.SubJobId;
                schedulerSubjobFieldList.FromFieldName = dictField.name();
                schedulerSubjobFieldList.ToFieldName = tableField.FieldName;
                schedulerSubjobFieldList.insert();
            }
        }

        ttscommit;

        RetailConnSchedulerSubjobFieldList_ds.research();

        Box::info("@RET407");
    }
]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailConnSchedulerSubjobFieldList</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            subjobRange.value(queryValue(subjob.SubJobId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            subjobRange = this.query().dataSourceTable(tablenum(RetailConnSchedulerSubjobFieldList)).addRange(fieldnum(RetailConnSchedulerSubjobFieldList, SubjobId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            RetailConnSchedulerSubjobFieldList.SubjobId = subjob.SubJobId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>MatchFromToTableFields</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        ;
            element.matchFieldNames();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>gridFromFieldName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Provides lookup with the list of fields of the table specified in <c>FromTableName</c> field.
        /// </summary>
        public void lookup()
        {
            RetailParameters   trboParameters;
            int tableid;
            int fieldid;

            Args    args;
            FormRun  formRun;
            RetailConnLocationDesignTable designTable;

            if (subjob.dataReplicationByPull)
            {
                designTable = RetailConnLocationDesignTable::find(subjob.RetailConnChannelSchema, subjob.ChannelTableName);

                if (designTable)
                {
                    args = new Args();
                    args.name(formstr(RetailConnFieldNameLookup));
                    args.caller(this);
                    args.record(designTable);

                    formRun = classfactory.formRunClass(args);
                    formRun.init();
                    this.performFormLookup(formRun);
                }
                else
                {
                    super();
                }
            }
            else
            {
                update_recordset   trboParameters
                    setting overRideSystemLookup = NoYes::Yes;

                tableid = tablename2id(subjob.AXTableName);
                fieldid = pickField(tableid);
                RetailConnSchedulerSubjobFieldList.FromFieldName = fieldid2name(tableid, fieldid);
                RetailConnSchedulerSubjobFieldList_ds.refresh();

                update_recordset   trboParameters
                    setting overRideSystemLookup = NoYes::No;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>gridToFieldName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Provides lookup with the list of fields of the table specified in <c>ToTableName</c> field.
        /// </summary>
        public void lookup()
        {
            RetailParameters   trboParameters;
            int tableid;
            int fieldid;

            Args    args;
            FormRun  formRun;
            RetailConnLocationDesignTable designTable;

            if (!subjob.dataReplicationByPull)
            {
                designTable = RetailConnLocationDesignTable::find(subjob.RetailConnChannelSchema, subjob.ChannelTableName);

                if (designTable)
                {
                    args = new Args();
                    args.name(formstr(RetailConnFieldNameLookup));
                    args.caller(this);
                    args.record(designTable);

                    formRun = classfactory.formRunClass(args);
                    formRun.init();
                    this.performFormLookup(formRun);
                }
                else
                {
                    super();
                }
            }
            else
            {
                update_recordset   trboParameters
                    setting overRideSystemLookup = NoYes::Yes;

                tableid = tablename2id(subjob.AXTableName);
                fieldid = pickField(tableid);
                RetailConnSchedulerSubjobFieldList.ToFieldName = fieldid2name(tableid, fieldid);
                RetailConnSchedulerSubjobFieldList_ds.refresh();

                update_recordset   trboParameters
                    setting overRideSystemLookup = NoYes::No;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailConnSchedulerSubjobFieldList</Name>
			<Table>RetailConnSchedulerSubjobFieldList</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>conversionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>conversionValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>fieldValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>fromFieldName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>subjobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>toFieldName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RET266</Caption>
		<DataSource xmlns="">RetailConnSchedulerSubjobFieldList</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroupFunctions</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButton</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MatchFromToTableFields</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@RET5825</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@RET567</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RET566</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>gridFromFieldName</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>fromFieldName</DataField>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>fromFieldType</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>fromFieldType</DataMethod>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>gridToFieldName</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>toFieldName</DataField>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>toFieldType</Name>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>toFieldType</DataMethod>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>RBOSchedulerSubjobFieldList_conversionType</Name>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>conversionType</DataField>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
						<LabelAlignment>Right</LabelAlignment>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RBOSchedulerSubjobFieldList_conversionValue</Name>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>conversionValue</DataField>
						<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>RetailConnSchedulerSubjobFieldList</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
