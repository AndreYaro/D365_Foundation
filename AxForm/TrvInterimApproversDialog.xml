<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvInterimApproversDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvInterimApproversDialog extends FormRun
{
    TrvExpTable expenseReport;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        expenseReport = element.args().record();

        SysQuery::findOrCreateRange(TrvInterimApprover_DS.query().dataSourceName(tableStr(TrvInterimApprover)), fieldnum(TrvInterimApprover, WorkflowContextRecId )).value(queryValue(expenseReport.RecId));
        TrvInterimApprover_ds.queryBuildDataSource().addOrderByField(fieldNum(TrvInterimApprover, ApproverOrder), SortOrder::Ascending);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateApproverOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Swaps the current interim approver with the existing one at the new position.
    /// </summary>
    /// <param name = "newPosition">New order number.</param>
    public void updateApproverOrder(int newPosition)
    {
        RecId currentApprover = TrvInterimApprover.RecId;

        TrvInterimApprover.updateApproverOrder(newPosition);

        TrvInterimApprover_ds.research();
        TrvInterimApprover_ds.positionToRecordByValue(fieldNum(TrvInterimApprover, RecId), int642Str(currentApprover));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvInterimApprover</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enforce that the grid is always sorted by approver order
        /// </summary>
        public void executeQuery()
        {
            QueryRun queryRun = TrvInterimApprover_ds.queryRun();

            // When form is first opened, queryRun will not be built yet.
            if (queryRun)
            {
                Query query = queryRun.query();

                if (query.orderByFieldCount() > 0)
                {
                    QueryOrderByField queryOrderByField = query.orderByField(1);

                    if (fieldId2Name(tableNum(TrvInterimApprover), queryOrderByField.fieldID()) != fieldStr(TrvInterimApprover, ApproverOrder)
                        || queryOrderByField.direction() != SortOrder::Ascending)
                    {
                        // Suppress user defined sort by resetting sort back to line number
                        warning("@Expense:SortedApproverList");
                        query.clearOrderBy();
                        query.dataSourceTable(tableNum(TrvInterimApprover)).addOrderByField(fieldNum(TrvInterimApprover, ApproverOrder), SortOrder::Ascending);
                    }
                }
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes new record with the next available order number.
        /// </summary>
        public void initValue()
        {
            super();

            TrvInterimApprover interimApprover;

            select maxof(ApproverOrder) from interimApprover where interimApprover.WorkflowContextRecId == expenseReport.RecId;

            TrvInterimApprover.ApproverOrder = interimApprover.ApproverOrder + 1;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// Create the new record as the last item in the grid
        /// </summary>
        /// <param name = "_append">Set to true so the new record is added after the current record.</param>
        public void create(boolean _append = true)
        {
            this.last();
            super(_append);
        }

]]></Source>
					</Method>
					<Method>
						<Name>isDefaultApprover</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays if the interim approver is a default approver
        /// </summary>
        public display boolean isDefaultApprover(TrvInterimApprover _interimApprover)
        {
            UserId user = HcmWorker::findPersonUser(expenseReport.CreatingWorker).User;

            return TrvInterimFinalApproverHelper::isDefaultInterimApprover(_interimApprover.Approver, user, expenseReport.ReferenceDataAreaId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            TrvInterimApprover_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SetAsDefaultInterimApprovers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets the current interim approvers as default.
        /// </summary>
        public void clicked()
        {
            TrvInterimFinalApproverHelper::setDefaultInterimApprovers(expenseReport);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Moves the currently selected interim approver up by one in the approval order.
        /// </summary>
        public void clicked()
        {
            super();

            element.updateApproverOrder(TrvInterimApprover.ApproverOrder - 1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Moves the currently selected interim approver down by one in the approval order.
        /// </summary>
        public void clicked()
        {
            super();

            element.updateApproverOrder(TrvInterimApprover.ApproverOrder + 1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvInterimApprover_ApproverWorker</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up workers who have user relationships.
        /// </summary>
        public void lookup()
        {
            HcmWorkerLookup::newOnlyWorkersWithUserRelation().lookupWorker(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvInterimApprover</Name>
			<Table>TrvInterimApprover</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproverOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproverWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasApproved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCurrentApprover</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowContextRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowCorrelationId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:InterimApprover</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ApproverGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ActionPaneButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>NewButton</Name>
										<Type>CommandButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Command>New</Command>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>DeleteButton</Name>
										<Type>CommandButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Command>DeleteRecord</Command>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SetAsDefaultInterimApprovers</Name>
										<HelpText>@Expense:SetDefaultInterimApproversHelpText</HelpText>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<MultiSelect>Yes</MultiSelect>
										<Text>@Expense:SetAsDefaultInterimApprover</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>UpButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>No</MultiSelect>
										<NormalImage>Up</NormalImage>
										<Text>@SYS5474</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DownButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>No</MultiSelect>
										<NormalImage>Down</NormalImage>
										<Text>@SYS2047</Text>
									</AxFormControl>
								</Controls>
								<DataSource>TrvInterimApprover</DataSource>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ApproverGrid</Name>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>TrvInterimApprover_ApproverWorker</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>TrvInterimApprover</DataSource>
								<ReferenceField>ApproverWorker</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvInterimApprover_Approver</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Approver</DataField>
								<DataSource>TrvInterimApprover</DataSource>
								<LookupButton>Never</LookupButton>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>IsDefault</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>isDefaultApprover</DataMethod>
								<DataSource>TrvInterimApprover</DataSource>
								<Label>@Expense:IsDefaultApprover</Label>
							</AxFormControl>
						</Controls>
						<DataSource>TrvInterimApprover</DataSource>
						<MultiSelect>No</MultiSelect>
					</AxFormControl>
				</Controls>
				<DataSource>TrvInterimApprover</DataSource>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>OkCancelGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>