<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvExchSetup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class TrvExchSetup extends FormRun
    {
}
]]></Source>
			</Method>
			<Method>
				<Name>fillConstraintTypeCombo</Name>
				<Source><![CDATA[
    void fillConstraintTypeCombo()
    {
        /*
            This method fills the AccountType combobox
        */
        TrvExchSetup_AccountType.clear();

        //Always include the Ledger and Bank
        TrvExchSetup_AccountType.add(enum2str(LedgerJournalACType::Ledger));
        TrvExchSetup_AccountType.add(enum2str(LedgerJournalACType::Bank));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        TrvExchSetup::initialize();

        TrvExchSetup_AdvAccount.parmIsDefaultAccount(true);

        element.fillConstraintTypeCombo();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvExchSetup</Name>
				<Methods>
					<Method>
						<Name>constraintTypeFiltered</Name>
						<Source><![CDATA[
        edit TrvLedgerJournalAcTypeValue constraintTypeFiltered(boolean set, TrvExchSetup exchSetup, TrvLedgerJournalAcTypeValue newValue)
        {
            TrvLedgerJournalAcTypeValue   currentValue;
            LedgerJournalACType           constraintType;

            //Only need to do this if the user is editing.  This is skiped
            //when morphX just needs to display the value.
            if (set)
            {
                switch (newValue)
                {
                    case 0:
                        constraintType = LedgerJournalACType::Ledger;
                        break;
                    case 1:
                        constraintType = LedgerJournalACType::Bank;
                        break;
                }

                //Only update the actual record if the value changed
                if (exchSetup.AccountType != constraintType)
                {
                    exchSetup.AccountType = constraintType;

                    TrvExchSetup_ds.refresh();
                }
            }

            //Now return the correct value
            switch (exchSetup.AccountType)
            {
                case LedgerJournalACType::Ledger:
                    currentValue = 0;
                    break;
                case LedgerJournalACType::Bank:
                    currentValue = 1;
                    break;
            }

            return currentValue;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TrvExchSetup_AccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            ret = super();

            trvExchSetup.AdvanceAccountLedgerDimension = 0;
            trvExchSetup_ds.rereadReferenceDataSources();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvExchSetup_AdvAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Only Bank and Ledger are valid on the form, lookups for other account types are not provided.
            switch (trvExchSetup.AccountType)
            {
                case LedgerJournalACType::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;
                case LedgerJournalACType::Ledger:
                    super();
                    break;
                default:
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean ret;

            LedgerJournalACType accountType = any2Enum(_accountTypeEnumValue);
            switch (accountType)
            {
                case LedgerJournalACType::Bank:
                    ret = true;
                    break;
                default:
                    ret = false;
                    break;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvExchSetup</Name>
			<Table>TrvExchSetup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdvanceAccountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>TrvExchCodeIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS120457</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">TrvExchSetup</TitleDataSource>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Exchsetup</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Exchsetup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TrvExchSetup_ExchangeCode</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ExchangeCode</DataField>
						<DataSource>TrvExchSetup</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TrvExchSetup_AccountType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>constraintTypeFiltered</DataMethod>
						<DataSource>TrvExchSetup</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormSegmentedEntryControl">
						<Name>TrvExchSetup_AdvAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>SegmentedEntry</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension>
							<Name>SegmentedEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>String</Type>
									<Value>DimensionDynamicAccountController</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccountTypeEnumName</Name>
									<Type>String</Type>
									<Value>AccountType</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIsDefaultAccount</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValidateBlockedForManualEntry</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLockMainAccountSegment</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPostingType</Name>
									<Type>Enum</Type>
									<TypeName>LedgerPostingType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeTotalAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeFinancialAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<DataSource>TrvExchSetup</DataSource>
						<ReferenceField>AdvanceAccountLedgerDimension</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>AccName</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_TravelAndExpense:TrvExchSetup_AccName</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>AccountName</DataMethod>
						<DataSource>TrvExchSetup</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>TrvExchSetup</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>