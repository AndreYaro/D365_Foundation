<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MCRContinuityItemChange</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/// <summary>
/// The <c>MCRContinuityItemChange</c> form allows users to modify existing continuity orders.
/// </summary>
[Form]
public class MCRContinuityItemChange extends FormRun
{
    // Temporary table used to store the checked rows.
    TmpFrmVirtual           tmpFrmVirtualLines;
    InventDimCtrl_Frm       inventDimFormSetup;
    MCRContinuityScheduleID passedSched;

    private Map             dimension2Control = new Map(Types::Integer, Types::Class);
    private Map             dimension2AlternateControl = new Map(Types::Integer, Types::Class);

}
]]></Source>
			</Method>
			<Method>
				<Name>registerDimension</Name>
				<Source><![CDATA[
    private void registerDimension(FieldId _inventDimFieldId, FormStringControl _control, FormStringControl _alternateControl)
    {
        dimension2Control.insert(_inventDimFieldId, _control);
        dimension2AlternateControl.insert(_inventDimFieldId, _alternateControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerDimensions</Name>
				<Source><![CDATA[
    protected void registerDimensions()
    {
        this.registerDimension(fieldNum(InventDim, InventColorId), inventColorId, alternateInventColorID);
        this.registerDimension(fieldNum(InventDim, InventSizeId), inventSizeId, alternateInventSizeID);
        this.registerDimension(fieldNum(InventDim, InventStyleId), inventStyleId, alternateInventStyleId);
        this.registerDimension(fieldNum(InventDim, InventVersionId), inventVersionId, alternateInventVersionId);
        this.registerDimension(fieldNum(InventDim, ConfigId), configId, alternateConfigID);
    }

]]></Source>
			</Method>
			<Method>
				<Name>countLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Counts and displays the total number of lines from the query.
    /// </summary>
    void countLines()
    {
        select count(RecId) from tmpFrmVirtualLines;

        unselectedTotal.value(mcrContinuityCustLine_ds.numberOfRowsLoaded());
        selectedTotal.value(tmpFrmVirtualLines.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editCopy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies data to the temp table.
    /// </summary>
    /// <param name="_set">
    /// A <c>Boolean</c> value that defines whether the temporary table values
    /// should be set or not.
    /// </param>
    /// <param name="_line">
    /// The record to copy to the temp table.
    /// </param>
    /// <param name="_copy">
    /// A <c>Boolean</c> value defining whether to copy the to the temporary
    /// table or to clear it.
    /// </param>
    /// <returns>
    /// true if the record was copied to the temporary table; otherwise, false.
    /// </returns>
    NoYes editCopy(boolean          _set,
                   Common           _line,
                   NoYes            _copy)
    {
        NoYes  copy = NoYes::No;

        element.findTmpFrmVirtual(tmpFrmVirtualLines, _line.TableId, _line.RecId);

        if (tmpFrmVirtualLines)
        {
            copy   = NoYes::Yes;
        }

        if (_set)
        {
            if (_copy)
            {
                element.writeTmpFrmVirtual(tmpFrmVirtualLines,
                                           _line.TableId,
                                           _line.RecId);
                copy   = NoYes::Yes;
                selectedTotal.value(selectedTotal.value() + 1);
            }
            else
            {
                tmpFrmVirtualLines.delete();
                copy   = NoYes::No;
                selectedTotal.value(selectedTotal.value() - 1);
            }

            element.enableDisableButtons();
        }

        return copy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gives a warning if the user sets the from date greater than the to date.
    /// </summary>
    /// <param name="_set">
    /// A <c>Boolean</c> value defining whether to validate the dates or not.
    /// </param>
    /// <param name="_date">
    /// The date to be validated.
    /// </param>
    /// <returns>
    /// The date to which the <c>ToDate</c> field should be set.
    /// </returns>
    public edit EndDate editEndDate(boolean _set, EndDate _date)
    {
        if (_set)
        {
            if (fromDate.valueStr() != "" && _date != dateNull())
            {
                if (fromDate.dateValue() > _date)
                {
                    error("@MCR22774");
                }
                else
                {
                    toDate.dateValue(_date);
                }
            }
            else
            {
                toDate.dateValue(_date);
            }
        }

        return toDate.dateValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gives a warning if the user sets the from date greater than the to date.
    /// </summary>
    /// <param name="_set">
    /// A <c>Boolean</c> value defining whether to validate the dates or not.
    /// </param>
    /// <param name="_date">
    /// The date to be validated.
    /// </param>
    /// <returns>
    /// The date to which the <c>FromDate</c> field should be set.
    /// </returns>
    public edit StartDate editStartDate(boolean _set, StartDate _date)
    {
        if (_set)
        {
            if (_date != dateNull() && toDate.valueStr() != "")
            {
                if (_date > toDate.dateValue())
                {
                    error("@MCR22774");
                }
                else
                {
                    fromDate.dateValue(_date);
                }
            }
            else
            {
                fromDate.dateValue(_date);
            }
        }

        return fromDate.dateValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableButtons</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the buttons are enabled or disabled.
    /// </summary>
    void enableDisableButtons()
    {
        if (selectedTotal.value() != 0
            && subItem.valueStr() != "")
        {
            substitute_Button.enabled(true);
        }
        else
        {
            substitute_Button.enabled(false);
        }

        if (selectedTotal.value() != 0
            && (dateEdit.valueStr() != ""
            || daysOut.value() != 0))
        {
            changeDate.enabled(true);
        }
        else
        {
            changeDate.enabled(false);
        }

        if (selectedTotal.value() != 0 )
        {
            button_Delete.enabled(true);
        }
        else
        {
            button_Delete.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTmpFrmVirtual</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record stored in the tmp table.
    /// </summary>
    /// <param name="_tmpFrmVirtual">
    /// The temporary table to search.
    /// </param>
    /// <param name="_tableId">
    /// The <c>TableId</c> value of the record for which to search the temporary table.
    /// </param>
    /// <param name="_recId">
    /// The <c>RecId</c> value of the record for which to search the temporary table.
    /// </param>
    void findTmpFrmVirtual(TmpFrmVirtual _tmpFrmVirtual, TableId _tableId, RecId _recId)
    {
        select  firstonly _tmpFrmVirtual
            where _tmpFrmVirtual.TableNum   == _tableId
                && _tmpFrmVirtual.RecordNo   == _recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args().parm())
        {
            passedSched = element.args().parm();
            schedId.text(passedSched);
        }
        
        element.registerDimensions();
        element.updateDesign(InventDimFormDesignUpdate::Init);
        MCRContinuityCustLine_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markedRecords</Name>
				<Source><![CDATA[
    public void markedRecords()
    {
        MCRContinuityCustLine   mcrContinuityCustLineLoc;

        //loop through all datasource records and add to tmpFrmVirtualLines.
        delete_from tmpFrmVirtualLines;
        for (mcrContinuityCustLineLoc = mcrContinuityCustLine_ds.getFirst(1);
        mcrContinuityCustLineLoc;
        mcrContinuityCustLineLoc = mcrContinuityCustLine_ds.getNext())
        {
            tmpFrmVirtualLines.TableNum     = tableNum(MCRContinuityCustLine);
            tmpFrmVirtualLines.RecordNo     = mcrContinuityCustLineLoc.RecId;
            tmpFrmVirtualLines.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm dimParmLockedRightClick;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup = InventDimCtrl::newFromFormValidDataSource(element, inventDim_ds.name()) as InventDimCtrl_Frm;
                }
                dimParmLockedRightClick.setAllProductDimensions();
                dimParmLockedRightClick.InventSiteIdFlag = true;
                dimParmLockedRightClick.InventLocationIdFlag = true;
                dimParmLockedRightClick.toggleAllInventDim();
                inventDimFormSetup.parmDimParmLockedRightClick(dimParmLockedRightClick);
                inventDimFormSetup.formSetControls(true);

                break;

            case InventDimFormDesignUpdate::Active:
            case InventDimFormDesignUpdate::FieldChange:
                InventDimGroupSetup::newItemId(mcrContinuityCustLine.ItemId).inventDimParmActive(inventDimFormSetup.parmDimParmEnabled());
                inventDimFormSetup.formSetControls(false);
                break;

            default:
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeTmpFrmVirtual</Name>
				<Source><![CDATA[
    void writeTmpFrmVirtual(TmpFrmVirtual _tmpFrmVirtual, TableId _tableId, RecId _recId)
    {
        _tmpFrmVirtual.TableNum     = _tableId;
        _tmpFrmVirtual.RecordNo     = _recId;

        _tmpFrmVirtual.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInventDimRanges</Name>
				<Source><![CDATA[
    protected void createInventDimRanges(QueryBuildDataSource _qbdsInventDim)
    {
        MapEnumerator enumerator = dimension2Control.getEnumerator();
        while (enumerator.moveNext())
        {
            FormStringControl control = enumerator.currentValue();

            if (control.text())
            {
                _qbdsInventDim.addRange(enumerator.currentKey()).value(SysQuery::value(control.text()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAlternateInventDim</Name>
				<Source><![CDATA[
    private void initAlternateInventDim(InventDim _inventDim)
    {
        MapEnumerator enumerator = dimension2alternateControl.getEnumerator();
        while (enumerator.moveNext())
        {
            FormControl control = enumerator.currentValue();
            _inventDim.(enumerator.currentKey()) = control.valueStr();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetDimensionOnItemIdModified</Name>
				<Source><![CDATA[
    private void resetDimensionOnItemIdModified(InventTable _inventTable, Map _controlMap)
    {
        MapEnumerator enumerator = _controlMap.getEnumerator();
        while (enumerator.moveNext())
        {
            FormStringControl control = enumerator.currentValue();
            boolean active = true;

            if (_inventTable)
            {
                InventProductDimension dimension = InventDimension::singletonFromInventDimFieldId(enumerator.currentKey()) as InventProductDimension;
                if (dimension)
                {
                    active = dimension.isActiveForItem(_inventTable);
                }
            }

            control.enabled(active);
            control.text('');
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>MCRContinuityCustLine</Name>
				<Methods>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();
            selectedTotal.value(mcrContinuityCustLine_ds.recordsMarked().lastIndex());
            unselectedTotal.value(mcrContinuityCustLine_ds.numberOfRowsLoaded());
            element.enableDisableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            // Will only ever update/show lines that have not
            // been created yet
            this.queryBuildDataSource()
                .addRange(fieldNum(MCRContinuityCustLine, SalesId))
                .value(SysQuery::valueEmptyString());
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(InventDimFormDesignUpdate::Active);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>copy</Name>
						<Source><![CDATA[
        /// <summary>
        /// Copies data to the temp table.
        /// </summary>
        /// <param name="_set">
        /// A <c>Boolean</c> value that defines whether the temporary table values.
        /// </param>
        /// <param name="_custLine">
        /// The record to copy to the temp table.
        /// </param>
        /// <param name="_copy">
        /// A <c>Boolean</c> value defining whether to copy the to the temporary
        /// table or to clear it.
        /// </param>
        /// <returns>
        /// true if the record was copied to the temporary table; otherwise, false.
        /// </returns>
        public edit NoYes copy(boolean                  _set,
                                MCRContinuityCustLine   _custLine,
                                NoYes                   _copy)
        {
            NoYes       ret = false;

            ret = element.editCopy(_set,
                                    _custLine,
                                    _copy);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Builds the query to populate the grid, based on the select group.
        /// </summary>
        public void executeQuery()
        {
            QueryBuildDataSource qbdsLine, qbdsHeader;
            QueryBuildDataSource qbdsInventDim;

            qbdsLine = this.queryBuildDataSource();
            qbdsLine.clearRanges();
            qbdsLine.addSortField(fieldNum(MCRContinuityCustLine, ShipDate));

            qbdsHeader = this.query().dataSourceName(MCRContinuityCustHeader_ds.name());
            qbdsHeader.clearRanges();

            if (itemId.text())
            {
                qbdsLine.addRange(fieldNum(MCRContinuityCustLine, ItemId)).value(SysQuery::value(itemId.text()));
                qbdsInventDim = this.query().dataSourceName(inventDim_ds.name());
                element.createInventDimRanges(qbdsInventDim);
            }

            if (passedSched)
            {
                qbdsHeader.addRange(fieldNum(MCRContinuityCustHeader, ScheduleId)).value(passedSched);
            }

            if (fromDate.valueStr()
                || toDate.valueStr())
            {
                qbdsLine.addRange(fieldNum(MCRContinuityCustLine, ShipDate)).value(SysQuery::range(fromDate.valueStr(), toDate.valueStr()));
            }

            super();

            element.markedRecords();
            element.countLines();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>MCRContinuityCustHeader</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource queryBuilDataSource;

            if (schedId.text() != "")
            {
                queryBuilDataSource = this.queryBuildDataSource();
                queryBuilDataSource.clearRanges();
                queryBuilDataSource.addRange(fieldNum(MCRContinuityCustHeader, ScheduleId)).value(SysQuery::value(schedId.text()));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Skip call to super, parent table will handle inventdim operations.
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Find</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Finds the <c>SalesLine</c> records that are using the item with the configuration specified.
        /// </summary>
        void clicked()
        {
            super();

            // Delete temp table.
            delete_from tmpFrmVirtualLines;

            // Get the new sales lines.
            mcrContinuityCustLine_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>changeDate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>addDaysOut</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds the input days to the start date and then uses that date to make the ship date
        /// errors each time a record's start date will be before today.
        /// </summary>
        /// <param name="_daysToAdd">
        /// The input days to be added to the start date for ship date error validation.
        /// </param>
        void addDaysOut(int _daysToAdd)
        {
            MCRContinuityCustLine       mcrContinuityCustLineLocal;
            int                         substitutesMade = 0;
            int                         substitutesError = 0;
            MCRLoadContinuityCustInfo   mcrLoadContinuityCustInfo = new MCRLoadContinuityCustInfo();
            str                         verifyBox;

            element.markedRecords();

            while select tmpFrmVirtualLines
                outer join forupdate mcrContinuityCustLineLocal
                    where mcrContinuityCustLineLocal.RecId == tmpFrmVirtualLines.RecordNo
            {
                if (mcrContinuityCustLineLocal.StartDate+_daysToAdd < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
                {
                    substitutesError++;
                }
                else
                {
                    substitutesMade ++;
                }
            }

            if (substitutesMade == 0)
            {
                error("@MCR34557");
                return;
            }
            else if (substitutesError>0)
            {
                verifyBox = strFmt("@MCR34552", substitutesError, substitutesError+substitutesMade);
            }
            else
            {
                verifyBox = strFmt("@MCR33862", substitutesMade);
            }

            if (Box::okCancel(verifyBox, DialogButton::Ok, "@MCR34264") == DialogButton::Ok)
            {
                ttsbegin;
                while select tmpFrmVirtualLines
                    outer join forupdate mcrContinuityCustLineLocal
                    where mcrContinuityCustLineLocal.RecId == tmpFrmVirtualLines.RecordNo
                {
                    if (mcrContinuityCustLineLocal.StartDate+_daysToAdd >= DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
                    {
                        mcrContinuityCustLineLocal.StartDate = mcrContinuityCustLineLocal.StartDate + _daysToAdd;
                        mcrContinuityCustLineLocal.ShipDate = mcrLoadContinuityCustInfo.getShipDate(mcrContinuityCustLineLocal);
                        mcrContinuityCustLineLocal.update();
                    }
                }
                ttscommit;

                mcrContinuityCustLine_ds.executeQuery();

                info(strFmt("@MCR34267", int2str(substitutesMade), int2str(substitutesError)));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Prompts the user to ask if they want to change dates and throws any errors or warnings.
        /// </summary>
        void clicked()
        {
            date    tmpDateChange;

            if (dateEdit.dateValue())
            {
                if (dateEdit.dateValue() >= DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
                {
                    if (Box::okCancel(strFmt("@MCR33862", selectedTotal.value()),
                           DialogButton::Ok, "@MCR34264") == DialogButton::Ok)
                    {
                        tmpDateChange = dateEdit.dateValue();
                        this.dateChange(tmpDateChange);
                    }
                }
                else
                {
                    error("@MCR34557");
                }
            }
            else if (daysOut.value() != 0)
            {
                this.addDaysOut(daysOut.value());
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>dateChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Changes the customer line dates to the date input.
        /// </summary>
        /// <param name="_tmpDateChange">
        /// The date to which to change the customer line dates.
        /// </param>
        void dateChange(date _tmpDateChange)
        {
            MCRContinuityCustLine       mcrContinuityCustLineLocal;
            int                         substitutesMade = 0;
            int                         substitutesError = 0;
            MCRLoadContinuityCustInfo   mcrLoadContinuityCustInfo = new MCRLoadContinuityCustInfo();

            element.markedRecords();

            ttsbegin;
            while select tmpFrmVirtualLines
                outer join forupdate mcrContinuityCustLineLocal
                    where mcrContinuityCustLineLocal.RecId == tmpFrmVirtualLines.RecordNo
            {
                mcrContinuityCustLineLocal.StartDate = _tmpDateChange;
                mcrContinuityCustLineLocal.ShipDate = mcrLoadContinuityCustInfo.getShipDate(mcrContinuityCustLineLocal);
                mcrContinuityCustLineLocal.update();
                substitutesMade ++;
            }
            ttscommit;

            mcrContinuityCustLine_ds.executeQuery();

            info(strFmt("@MCR34266", int2str(substitutesMade)));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Substitute_Button</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Substitutes the items in the selected <c>SalesLine</c> records with the
        /// alternate items specified.
        /// </summary>
        void clicked()
        {
            int                     substitutesMade = 0;
            MCRContinuityCustLine   continuityCustLine;
            InventDim               inventDimLocal;

            super();

            // Validate the substitute item information.
            if (quantity.realValue() >= 0)
            {
                InventDim inventDimAlternateItem;
                element.initAlternateInventDim(inventDimAlternateItem);

                if (InventDimCombination::existEntry(subItem.valueStr(), inventDimAlternateItem)
                    && Box::okCancel(strFmt("@MCR33862", selectedTotal.value()),
                                        DialogButton::Ok, "@MCR34270") == DialogButton::Ok)
                {
                    element.markedRecords();

                    ttsbegin;
                    while select tmpFrmVirtualLines
                        join forupdate continuityCustLine
                        where continuityCustLine.RecId == tmpFrmVirtualLines.RecordNo
                    {
                        // Substitute the item.
                        continuityCustLine.ItemId = subItem.valueStr();

                        inventDimLocal = InventDim::find(continuityCustLine.InventDimId);
                        element.initAlternateInventDim(inventDimLocal);

                        continuityCustLine.InventDimId = InventDim::findOrCreate(inventDimLocal).InventDimId;

                        continuityCustLine.SalesQtyUOM = unitOfQty.valueStr();
                        if (quantity.realValue() != 0)
                        {
                            continuityCustLine.SalesQty = quantity.realValue();
                        }

                        continuityCustLine.update();

                        substitutesMade ++;
                    }
                    ttscommit;

                    mcrContinuityCustLine_ds.executeQuery();

                    info(strFmt("@MCR33811", int2str(substitutesMade)));
                }
            }
            else
            {
                error("@MCR34269");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up all items that are in uncompleted continuity orders.
        /// </summary>
        public void lookup()
        {
            TmpFrmVirtual           tmpLookupTable;
            MCRContinuityCustLine   mcrContinuityCustLineLocal;
            SysTableLookup          lookup = SysTableLookup::newParameters(tableNum(TmpFrmVirtual), this);

            while select ItemId from mcrContinuityCustLineLocal group by ItemId
                where mcrContinuityCustLineLocal.SalesId == ""
            {
                tmpLookupTable.ItemId      = mcrContinuityCustLineLocal.ItemId;
                tmpLookupTable._mcrString1 = InventTable::find(mcrContinuityCustLineLocal.ItemId).itemName();
                tmpLookupTable.insert();
            }

            lookup.parmTmpBuffer(tmpLookupTable);

            lookup.addLookupfield(fieldNum(TmpFrmVirtual, ItemId));
            lookup.setLabel("@SYS111673");
            lookup.addLookupfield(fieldNum(TmpFrmVirtual, _mcrString1));
            lookup.setLabel("@SYS5398");
            lookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Controls the enabling of the item dimensions.
        /// </summary>
        /// <returns>
        /// true if the <c>ItemId</c> field value was modified; otherwise false.
        /// </returns>
        public boolean modified()
        {
            boolean ret = super();

            InventTable inventTable;
            if (this.text())
            {
                // Valildate the item exists.
                inventTable = InventTable::find(itemId.text());
                if (!inventTable)
                {
                    info(strFmt("@MCR30897", itemId.text()));
                    return false;
                }

                // Reset the item to what was found.
                this.text(inventTable.ItemId);

            }

            element.resetDimensionOnItemIdModified(inventTable, dimension2Control);
            MCRContinuityCustLine_ds.executeQuery();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventSizeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible sizes associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResSize::mcrlookupByItemOrProduct(this, itemId.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventColorId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible colors associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResColor::mcrlookupByItemOrProduct(this, itemId.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ConfigId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible configurations associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResConfiguration::mcrlookupByItemOrProduct(this, itemId.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventStyleId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible styles associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResStyle::mcrlookupByItemOrProduct(this, itemId.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventVersionId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible versions associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResVersion::mcrlookupByItemOrProduct(this, itemId.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SchedId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            MCRContinuityScheduleHeader mcrContinuityScheduleHeader;
            Args                        args = new Args();
            MenuFunction                menuFunction;

            mcrContinuityScheduleHeader = MCRContinuityScheduleHeader::find(this.text());
            if (mcrContinuityScheduleHeader)
            {
                args.record(mcrContinuityScheduleHeader);
            }

            args.caller(element);
            menuFunction = new MenuFunction(
                    menuitemDisplayStr(MCRContinuitySchedule),
                    MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            passedSched = this.text();
            MCRContinuityCustLine_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            MCRContinuityCustLine_ds.executeQuery();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            MCRContinuityCustLine_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Button_Delete</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes records from the <c>continuityCustLine</c> and from the temporary table.
        /// </summary>
        void clicked()
        {
            int64                       deletesMade = 0;
            MCRContinuityCustLine       mcrContinuityCustLineLocal;
            MCRContinuityCustHeader     mcrContinuityCustHeaderLocal;
            boolean                     okContinue = true;

            super();

            element.markedRecords();

            // Validate the deletion.
            select firstonly tmpFrmVirtualLines
                join  mcrContinuityCustLineLocal
                where tmpFrmVirtualLines.RecordNo       == mcrContinuityCustLineLocal.RecId
                exists join  mcrContinuityCustHeaderLocal
                where mcrContinuityCustLineLocal.InventTransId == mcrContinuityCustHeaderLocal.InventTransId
                    &&    mcrContinuityCustHeaderLocal.BillUpFront == NoYes::Yes;

            if (tmpFrmVirtualLines)
            {
                error("@MCR34260");
                okContinue = false;
            }
            else if (Box::okCancel(strFmt("@MCR34088", selectedTotal.value()),
                    DialogButton::Ok, "@MCR34087") == DialogButton::Cancel)
            {
                okContinue = false;
            }

            // Only if there are no bill up front continuity orders.
            if (okContinue)
            {
                ttsbegin;

                select count(RecId) from tmpFrmVirtualLines;
                deletesMade = tmpFrmVirtualLines.RecId;

                delete_from mcrContinuityCustLineLocal
                        exists join tmpFrmVirtualLines
                        where mcrContinuityCustLineLocal.RecId == tmpFrmVirtualLines.RecordNo;

                delete_from tmpFrmVirtualLines;

                ttscommit;

                mcrContinuityCustLine_ds.executeQuery();

                info(strFmt("@MCR34085", int642str(deletesMade)));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateEdit</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            // Clears the days out edit field.
            daysOut.value(0);
            element.enableDisableButtons();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>daysOut</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            // Clears the date edit field.
            dateEdit.dateValue(dateNull());
            element.enableDisableButtons();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubItem</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible items in the inventory table.
        /// </summary>
        public void lookup()
        {
            SysTableLookup  lookup =
            SysTableLookup::newParameters(tableNum(InventTable), this);
            lookup.addLookupfield(fieldNum(InventTable, ItemId));
            lookup.addLookupMethod(tableMethodStr(InventTable, itemName));
            lookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables and disables the dimension fields based upon whether the specified
        /// item has those dimension inherently.
        /// </summary>
        /// <returns>
        /// true if the sub item was modified; otherwise, false.
        /// </returns>
        public boolean modified()
        {
            boolean             ret = super();
            InventTable         inventTable;

            unitOfQty.text("");

            if (this.text())
            {
                inventTable = InventTable::find(subItem.valueStr());
                if (!inventTable)
                {
                    info(strFmt("@MCR30897", subItem.valueStr()));
                    return false;
                }

                // Reset the item to what was found.
                this.text(inventTable.ItemId);

                element.enableDisableButtons();

                InventTableModule inventTableModule = InventTableModule::find(inventTable.ItemId, ModuleInventPurchSales::Sales);
                unitOfQty.text(inventTableModule.UnitId);
            }

            element.resetDimensionOnItemIdModified(inventTable, dimension2alternateControl);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AlternateInventSizeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible sizes associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResSize::mcrlookupByItemOrProduct(this, subItem.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                                 ret;
            EcoResSize                              ecoResSize;
            EcoResProductMasterSize                 ecoResProductMasterSize;
            RefRecId                                productID;

            productID = EcoResProductMaster::find(InventTable::find(SubItem.valuestr()).Product).RecId;

            if (productID)
            {
                select firstOnly RecId, Name from  ecoResSize
                    where ecoResSize.Name == this.valueStr()
                    join SizeProductMaster from ecoResProductMasterSize
                        where ecoResProductMasterSize.SizeProductMaster == productID
                        && ecoResSize.RecId == ecoResProductMasterSize.Size;
                ret = ecoResSize.RecId > 0;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AlternateInventColorId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible colors associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResColor::mcrlookupByItemOrProduct(this, subItem.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                                 ret;
            EcoResColor                             ecoResColor;
            EcoResProductMasterColor                ecoResProductMasterColor;
            RefRecId                                productID;

            productID = EcoResProductMaster::find(InventTable::find(SubItem.valuestr()).Product).RecId;

            if (productID)
            {
                select firstOnly RecId, Name from  ecoResColor
                    where ecoResColor.Name == this.valueStr()
                    join ColorProductMaster from ecoResProductMasterColor
                        where ecoResProductMasterColor.ColorProductMaster == productID
                        && ecoResColor.RecId == ecoResProductMasterColor.Color;
                ret = ecoResColor.RecId > 0;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AlternateConfigId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible configurations associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResConfiguration::mcrlookupByItemOrProduct(this, subItem.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                                 ret;
            EcoResConfiguration                     ecoResConfiguration;
            EcoResProductMasterConfiguration        ecoResProductMasterConfiguration;
            RefRecId                                productID;

            productID = EcoResProductMaster::find(InventTable::find(SubItem.valuestr()).Product).RecId;

            if (productID)
            {
                select firstOnly RecId, Name from  ecoResConfiguration
                    where ecoResConfiguration.Name == this.valueStr()
                    join ConfigProductMaster from ecoResProductMasterConfiguration
                        where ecoResProductMasterConfiguration.ConfigProductMaster == productID
                        && ecoResConfiguration.RecId == ecoResProductMasterConfiguration.Configuration;
                ret = ecoResConfiguration.RecId > 0;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AlternateInventStyleId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible styles associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResStyle::mcrlookupByItemOrProduct(this, subItem.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                                 ret;
            EcoResStyle                             ecoResStyle;
            EcoResProductMasterStyle                ecoResProductMasterStyle;
            RefRecId                                productID;

            productID = EcoResProductMaster::find(InventTable::find(SubItem.valuestr()).Product).RecId;

            if (productID)
            {
                select firstOnly RecId, Name from  ecoResStyle
                    where ecoResStyle.Name == this.valueStr()
                    join StyleProductMaster from ecoResProductMasterStyle
                        where ecoResProductMasterStyle.StyleProductMaster == productID
                        && ecoResStyle.RecId == ecoResProductMasterStyle.Style;
                ret = ecoResStyle.RecId > 0;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AlternateInventVersionId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Looks up the possible versions associated with the specified item.
        /// </summary>
        public void lookup()
        {
            EcoResVersion::mcrlookupByItemOrProduct(this, subItem.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                                 ret;
            EcoResVersion                           ecoResVersion;
            EcoResProductMasterVersion              ecoResProductMasterVersion;
            RefRecId                                productID;

            productID = EcoResProductMaster::find(InventTable::find(SubItem.valuestr()).Product).RecId;

            if (productID)
            {
                select firstOnly RecId, Name from  ecoResVersion
                    where ecoResVersion.Name == this.valueStr()
                    join ProductVersionProductMaster from ecoResProductMasterVersion
                        where ecoResProductMasterVersion.ProductVersionProductMaster == productID
                        && ecoResVersion.RecId == ecoResProductMasterVersion.ProductVersion;
                ret = ecoResVersion.RecId > 0;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MCRContinuityCustLine</Name>
			<Table>MCRContinuityCustLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EventId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransIDChild</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumTimesToRepeat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSchedLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceOverrideReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuantityOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailInfocodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesQtyUOM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleEventID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>MCRContinuityCustHeader</Name>
			<Table>MCRContinuityCustHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BillUpFront</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Complete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentScheduleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<JoinSource>MCRContinuityCustLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension12</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<JoinSource>MCRContinuityCustLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MCR34254</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Select_Buttons</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Find</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>120</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Text>@SYS25745</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS67077</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>dateChangeButtons</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>changeDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>120</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Text>@SYS73236</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS80293</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>SubItem_Buttons</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Substitute_Button</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>120</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Text>@MCR23197</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS110723</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS57714</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>BodyTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SelectTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ItemId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventSizeId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>EcoResSizeName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventColorId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>EcoResColorName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ConfigId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>EcoResConfigurationName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventStyleId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1968526675</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>EcoResStyleName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventVersionId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1968526675</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>EcoResVersionName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SchedId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>MCRContinuityScheduleID</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FromDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editStartDate</DataMethod>
								<Label>@SYS24050</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ToDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editEndDate</DataMethod>
								<Label>@SYS35904</Label>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@MCR23204</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LinesToUpdateTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>LineActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>LinesDeleteButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Button_Delete</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>954437176</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>120</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>Delete</NormalImage>
												<Text>@RET15016</Text>
											</AxFormControl>
										</Controls>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>DimensionsButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>InventDimParmFixed</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>InventDimParmFixed</MenuItemName>
												<Primary>Yes</Primary>
												<Text>@Retail:DisplayDimensions</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Substitute_OrderLine</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MCRContinuityCustHeader_SalesId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>483183819</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>MCRContinuityCustHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MCRContinuityCustHeader_CustAccount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>MCRContinuityCustHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MCRContinuityCustLine_ItemId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ProductDimensions</Name>
										<ElementPosition>966367638</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>ProductDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Warehouse</Name>
										<ElementPosition>1127428911</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Warehouse_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Warehouse_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>Warehouse</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>MCRContinuityCustLine_SalesQty</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesQty</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MCRContinuityCustLine_SalesQtyUOM</Name>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesQtyUOM</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>MCRContinuityCustLine_StartDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>MCRContinuityCustLine_ShipDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ShipDate</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MCRContinuityCustHeader_ScheduleId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ScheduleId</DataField>
										<DataSource>MCRContinuityCustHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>MCRContinuityCustLine_EventId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2004318064</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EventId</DataField>
										<DataSource>MCRContinuityCustLine</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>MCRContinuityCustLine</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CountGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>UnselectedTotal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@MCR30095</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>SelectedTotal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@MCR33837</Label>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@MCR34256</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DateTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DateEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>DatePhysical</ExtendedDataType>
								<Label>@SYS31152</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>daysOut</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@MCR33807</Label>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@MCR34261</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SubstitutionTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Sub_Item_Group</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>1</VerticalSpacing>
								<VerticalSpacingMode>Fixed</VerticalSpacingMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SubItem</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ItemId</ExtendedDataType>
										<Label>@MCR23043</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AlternateInventSizeId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1002159034</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>EcoResSizeName</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AlternateInventColorId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490186</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>EcoResColorName</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AlternateConfigId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1574821338</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>EcoResConfigurationName</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AlternateInventStyleId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1861152490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>EcoResStyleName</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AlternateInventVersionId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1861152490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>EcoResVersionName</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Sub_Quantity</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Quantity</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>InventQty</ExtendedDataType>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UnitOfQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS7867</Label>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS110723</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>