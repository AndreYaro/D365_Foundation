<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustOpenInvoicesListPage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustOpenInvoicesListPage extends FormRun
{
    // <GCN>
    #ISOCountryRegionCodes
    // </GCN>
    SysListPagePreviewPaneHtmlGen htmlGenerator;
    CustTransDetails custTransDetails;
    QueryBuildRange queryBuildRangeInvoice;
    QueryBuildRange criteriaCredit;
    boolean markOpenInvoiceLine;

    boolean isBillingClassificationEnabled;
    QueryBuildRange qbrBillingClassification;

}
]]></Source>
			</Method>
			<Method>
				<Name>allowEnable</Name>
				<Source><![CDATA[
    void allowEnable()
    {
        boolean enableButtons;

        if (custTransOpen_ds.getFirst())
        {
            enableButtons = true;
        }

        //Enable/Disable any non-new related buttons
        paySettle.enabled(enableButtons);
        payCollect.enabled(enableButtons);
        transactions.enabled(enableButtons);
        invoiceDocument.enabled(enableButtons);
        shipping.enabled(enableButtons);
        invoiceDetails.enabled(enableButtons);
        intercompany.enabled(enableButtons);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doRefresh</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes and rereads the <c>CustTransOpen</c> table data source.
    /// </summary>

    void doRefresh()
    {
        custTransOpen_ds.reread();
        custTransOpen_ds.refresh();
        custTransOpen_ds.active();
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterBillingClassification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filter invoices by billing classification.
    /// </summary>
    /// <param name="_billingClassification">
    /// The filter base on the <c>BillingClassification</c> value.
    /// </param>
    public void filterBillingClassification(BillingClassification _billingClassification)
    {
        if (_billingClassification == "")
        {
            qbrBillingClassification.value(queryValue(SysQuery::valueEmptyString()));
        }
        else
        {
            RefRecId custBillingClassificationRecId;

            custBillingClassificationRecId = CustBillingClassification::findByBillingClassification(_billingClassification).RecId;
            qbrBillingClassification.value(queryValue(custBillingClassificationRecId));
        }

        custTransOpen_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        isBillingClassificationEnabled = CustParameters::isBillingClassificationEnabled();

        super();

        criteriaCredit = custTable_DS.query().dataSourceTable(tableNum(CustTrans)).findRange(fieldNum(CustTrans, AmountCur));

        #SysSystemDefinedButtons
        OfficeAppCopilotForFinanceFeatureCallout::loadCopilotForFinanceFeatureCallout(#SystemDefinedManageViewFilters);

        switch (element.args().menuItemName())
        {
            case menuitemDisplayStr(CustOpenInvoicesDueTodayListPage):
                custTransOpen_TransDate.visible(false);
                custTransOpen_DueDatePastDue.visible(false);
                this.design().caption("@SYS110027");
                break;

            case menuitemDisplayStr(CustOpenInvoicesPastDueListPage):
                custTransOpen_TransDate.visible(false);
                custTransOpen_DueDatePastDue.visible(true);
                custTransOpen_DueDate.visible(false);
                this.design().caption("@SYS110025");
                break;
        }

        // PostR1AXLTODO: Replace AIF functionality to re-enable this application scenario
        // <GCN>
        //if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        //{
        //    this.disableTaxExternalInvoiceId_CN();
        //}
        // </GCN>

        element.setButtonAccess();
        markOpenInvoiceLine = CustParameters::find().MarkOpenInvoiceLine;

        filterBillingClassification.visible(isBillingClassificationEnabled);
        custTrans_ds.object(fieldNum(CustTrans, CustBillingClassification)).visible(isBillingClassificationEnabled);

        if (CreditCardPaymentBreakDownProcessFeatureExposureHelper::isEnabled())
        {
            element.addCallouts();
            element.setButtonVisible();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openRelatedForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens customer transaction form.
    /// </summary>
    /// <param name="_transType">
    /// The current transaction type of the open invoice.
    /// </param>
    /// <remarks>
    /// Open the customer transaction form by passing the transaction type.
    /// </remarks>
    void openRelatedForm(LedgerTransType _transType)
    {
        Args args;

        args = new Args(formStr(CustOpenInvoicesListPage));

        args.caller(element);
        args.parmEnumType(enumNum(LedgerTransType));
        args.parmEnum(enum2int(_transType));
        args.record(custTrans);

        new MenuFunction(menuitemDisplayStr(CustTrans), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printCopyOriginal</Name>
				<Source><![CDATA[
    void printCopyOriginal(PrintCopyOriginal _action, str _copy, str _original, str _originalPrint, Args _args)
    {
        switch (_action)
        {
            //print the copy, original, or originalPrint depending upon user selection.
            case PrintCopyOriginal::Copy:
                _args.name(_copy);
                new MenuFunction(_copy, MenuItemType::Output).run(_args);
                break;
            case PrintCopyOriginal::Original:
                _args.name(_original);
                new MenuFunction(_original, MenuItemType::Output).run(_args);
                break;
            case PrintCopyOriginal::OriginalPrint:
                _args.name(_originalPrint);
                new MenuFunction(_originalPrint, MenuItemType::Output).run(_args);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTransQueryRunForMarkedOrSelected</Name>
				<Source><![CDATA[
    QueryRun getCustTransQueryRunForMarkedOrSelected()
    {
        CustTransOpen custTransOpenLocal = getFirstSelection(custTransOpen_DS);

        Query custTransQ = new Query();
        QueryBuildDataSource custTransQbds = custTransQ.addDataSource(tableNum(CustTrans));

        str rangeValue = '';

        while (custTransOpenLocal)
        {
            rangeValue = rangeValue + queryValue(custTransOpenLocal.RefRecId) + ',';
            custTransOpenLocal = custTransOpen_ds.getNext();
        }

        custTransQbds.addRange(fieldNum(CustTrans, RecId)).value(rangeValue);

        return new QueryRun(custTransQ);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printInvoice</Name>
				<Source><![CDATA[
    void printInvoice(PrintCopyOriginal _action, boolean _acceptanceReport_RU = false)
    {
        const str ZipFileName = "@AccountsReceivable:PrintOpenInvoicesListPageFileCollectionNameLabel";

        // <GEERU>
        RecordSortedList custInvoiceJourList;

        if (_acceptanceReport_RU)
        {
            custInvoiceJourList = new RecordSortedList(tableNum(CustInvoiceJour));
            custInvoiceJourList.sortOrder(fieldNum(CustInvoiceJour, RecId));
        }
        // </GEERU>

        Args args = new Args();
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            args.caller(this);
        }
        // </GEERU>

        CustTrans custTransLocal;
        QueryRun qr = this.getCustTransQueryRunForMarkedOrSelected();

        boolean moreThan1InvoiceSelected = QueryRun::getQueryRowCount(qr.query(), maxInt()) > 1;

        if (moreThan1InvoiceSelected)
        {
            // Add the file collection parameter when the user selects to print more than 1 invoice.
            args.parmObject(CustInvoiceControllerFileURLsCollectionIdProvider::construct());
        }

        while (qr.next())
        {
            custTransLocal = qr.getNo(1);
            
            switch (custTransLocal.TransType)
            {
                // printing is multi-select enabled so for all selected records, print the appropriate
                // report depending upon the transaction type.

                case LedgerTransType::Sales:
                    // Sales order invoice
                    CustInvoiceJour custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTransLocal.Invoice, custTransLocal.TransDate, custTransLocal.AccountNum);
                    // <GEERU>
                    if (custInvoiceJourList)
                    {
                        custInvoiceJourList.ins(custInvoiceJour);
                    }
                    else
                    {
                        // </GEERU>
                        args.record(custInvoiceJour);
                        element.printCopyOriginal(_action, menuitemOutputStr(SalesInvoiceCopy), menuitemOutputStr(SalesInvoiceOriginal), menuitemOutputStr(SalesInvoice), args);
                        // <GEERU>
                    }
                    // </GEERU>
                    break;

                case LedgerTransType::Cust :
                    // Free text invoice
                    custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTransLocal.Invoice, custTransLocal.TransDate, custTransLocal.AccountNum);
                    // <GEERU>
                    if (custInvoiceJourList)
                    {
                        custInvoiceJourList.ins(custInvoiceJour);
                    }
                    else
                    {
                        // </GEERU>
                        args.record(custInvoiceJour);
                        element.printCopyOriginal(_action, menuitemOutputStr(FreeTextInvoiceCopy), menuitemOutputStr(FreeTextInvoiceOriginal), menuitemOutputStr(FreeTextInvoice), args);
                        // <GEERU>
                    }
                    // </GEERU>
                    break;

                case LedgerTransType::Project :
                    // <GEERU>
                    if (! _acceptanceReport_RU)
                    {
                        // </GEERU>
                        args.record(ProjInvoiceJour::find(custTransLocal.Invoice, custTransLocal.TransDate));
                        ProjInvoiceJour projInvoiceJour = ProjInvoiceJour::find(custTransLocal.Invoice, custTransLocal.TransDate);
                        args.record(projInvoiceJour);
                        element.printCopyOriginal(_action, menuitemOutputStr(PSAProjInvoiceCopy), menuitemOutputStr(PSAProjInvoiceOriginal), menuitemOutputStr(PSAProjInvoice), args);
                        // <GEERU>
                    }
                    // </GEERU>
                    break;
            }
        }
        // <GEERU>
        if (custInvoiceJourList && custInvoiceJourList.len())
        {
            args.object(custInvoiceJourList);
            new MenuFunction(menuitemOutputStr(SalesAcceptanceReport_RU), MenuItemType::Output).run(args);
        }
        // </GEERU>
        else if (moreThan1InvoiceSelected)
        {
            // Only download the file collection when the user selects to print more than 1 invoice.
            CustInvoiceControllerFileURLsCollectionIdProvider::downloadAndCompressFilesFromCollection(args, ZipFileName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendInvoice</Name>
				<Source><![CDATA[
    void sendInvoice(PrintCopyOriginal _printCopyOriginal)
    {
        QueryRun qr = this.getCustTransQueryRunForMarkedOrSelected();

        CustInvoiceJour custInvoiceJourLocal;
        CustTrans custTransLocal;

        while (qr.next())
        {
            custTransLocal = qr.getNo(1);

            switch (custTransLocal.TransType)
            {
                case LedgerTransType::Project:
                    ProjInvoiceJour projInvoiceJourLocal = ProjInvoiceJour::find(custTransLocal.Invoice, custTransLocal.TransDate);

                    if (projInvoiceJourLocal)
                    {
                        projInvoiceJourLocal.sendElectronically(_printCopyOriginal);
                    }
                    break;

                case LedgerTransType::Sales:
                case LedgerTransType::Cust:
                    custInvoiceJourLocal = CustInvoiceJour::findFromCustTrans(custTransLocal.Invoice, custTransLocal.TransDate, custTransLocal.AccountNum);

                    if (custInvoiceJourLocal)
                    {
                        custInvoiceJourLocal.sendElectronically(_printCopyOriginal);
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    void setButtonAccess()
    {
        CustInvoiceJour custInvoiceJour;

        element.allowEnable();

        if (custTrans.TransType == LedgerTransType::Sales)
        {
            // only enable this button if there is an intercompany id.
            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);

            if (!custInvoiceJour)
            {
                synchBatchSerialNumbers.enabled(false);
                invoicePosting.enabled(false);
            }
            else
            {
                synchBatchSerialNumbers.enabled((custInvoiceJour.InterCompanyCompanyId ? true : false));
                invoicePosting.enabled((custInvoiceJour.InterCompanyCompanyId ? true : false));
            }
        }
        else
        {
            synchBatchSerialNumbers.enabled(false);
            invoicePosting.enabled(false);
        }

        totals.enabled(custTrans.TransType == LedgerTransType::Project ||
            custTrans.TransType == LedgerTransType::Cust ||
            custTrans.TransType == LedgerTransType::Sales);

        miscellaneousCharges.enabled(
            (custTrans.TransType == LedgerTransType::Cust ||
            custTrans.TransType == LedgerTransType::Sales));

        commissionTransactions.enabled(
            (custTrans.TransType == LedgerTransType::Project ||
            custTrans.TransType == LedgerTransType::Cust ||
            custTrans.TransType == LedgerTransType::Sales));

        shipments.enabled(custTrans.TransType == LedgerTransType::Sales);
        billOfLading.enabled(custTrans.TransType == LedgerTransType::Sales);

        // this list page contains some disable/enabling logic when multiple
        // records are selected.
        this.setButtonAccessMultiSelect();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccessMultiSelect</Name>
				<Source><![CDATA[
    void setButtonAccessMultiSelect()
    {
        CustTransOpen custTransOpenLocal;
        boolean shouldBeEnabled = true;
        boolean recordsMarked = false;
        CustTrans custTransLocal;
        // <GEERU>
        boolean acceptanceEnabled = true;
        // </GEERU>

        // go through all marked records
        custTransOpenLocal = custTransOpen_ds.getFirst(1, false);

        if (!custTransOpenLocal)
        {
            //No marked records, use selected record
            custTransOpenLocal = custTransOpen;
        }

        // need to set this up initially because when the form first opens, no
        // record in the datasource is set as marked. Thus the loop below will
        // not run. This code will ensure that
        // the enabled property gets set appropriately in this case.
        shouldBeEnabled = (custTrans.TransType == LedgerTransType::Project ||
                            custTrans.TransType == LedgerTransType::Cust ||
                            custTrans.TransType == LedgerTransType::Sales);

        printManagement.enabled(shouldBeEnabled);
        viewCopy.enabled(shouldBeEnabled);
        viewOriginal.enabled(shouldBeEnabled);
        sendCopy.enabled(shouldBeEnabled);
        sendOriginal.enabled(shouldBeEnabled);
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            acceptanceReport_RU.enabled(custTrans.TransType == LedgerTransType::Cust ||
                                        custTrans.TransType == LedgerTransType::Sales);
        }
        // </GEERU>

        shouldBeEnabled = true;
        while (custTransOpenLocal && shouldBeEnabled)
        {
            // if one of the rows require print/send/view disabled then break out of the
            // loop since the buttons are to be disabled if even one selection requires it

            recordsMarked = true;

            select TransType from custTransLocal where
                custTransLocal.RecId == custTransOpenLocal.RefRecId;

            shouldBeEnabled = (custTransLocal.TransType == LedgerTransType::Project ||
                custTransLocal.TransType == LedgerTransType::Cust ||
                custTransLocal.TransType == LedgerTransType::Sales);
            // <GEERU>
            acceptanceEnabled = acceptanceEnabled && (custTrans.TransType == LedgerTransType::Cust ||
                                                      custTrans.TransType == LedgerTransType::Sales);
            // </GEERU>

            custTransOpenLocal = custTransOpen_ds.getNext();
        }

        if (recordsMarked)
        {
            printManagement.enabled(true);
            viewCopy.enabled(shouldBeEnabled);
            viewOriginal.enabled(shouldBeEnabled);
            sendCopy.enabled(shouldBeEnabled);
            sendOriginal.enabled(shouldBeEnabled);
            openTransactionEditing.enabled(true);
            closedTransactionEditing.enabled(true);
            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                acceptanceReport_RU.enabled(acceptanceEnabled);
            }
            // </GEERU>
        }
        else
        {
            openTransactionEditing.enabled(false);
            closedTransactionEditing.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTouched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh the currently selected invoice.
    /// </summary>
    public void setTouched()
    {
        custTransOpen_ds.active();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCallouts</Name>
				<Source><![CDATA[
    private void addCallouts()
    {
        const str trackVersionsKey = '{FA8FD7CD-4084-4269-9DB2-3A9FA2E9737E}';
        SystemNotificationsWhatsNewManager::AddWhatsNew(
          trackVersionsKey,
          "@CashManagement:CreditCardPaymentBreakDownCalloutTitle" ,
          "@CashManagement:CreditCardPaymentBreakDownCalloutContent",
          IncompleteCardPayment.name()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonVisible</Name>
				<Source><![CDATA[
    private void setButtonVisible()
    {
        IncompleteCardPayment.visible(CreditCardPaymentBreakDownProcessFeatureExposureHelper::isEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateButtonStatus</Name>
				<Source><![CDATA[
    private void updateButtonStatus(SalesId _salesId, SalesInvoiceId _salesInvoiceId)
    {
        CreditCardPaymentBreakDownTable creditCardPaymentBreakDownTable = CreditCardPaymentBreakDownTable::findBySalesIdAndInvoiceJourId(_salesId, _salesInvoiceId);
        if (creditCardPaymentBreakDownTable && creditCardPaymentBreakDownTable.CreditCardPaymentProcessingStatus != CreditCardPaymentProcessingState::Terminated)
        {
            IncompleteCardPayment.enabled(true);
        }
        else
        {
            IncompleteCardPayment.enabled(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustTransOpen</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Registers the specified display method for caching.
        /// </summary>
        /// <remarks>
        /// Cached methods perform calculations on fetched data, and then the calculated values are passed
        /// to the client together with the data. The calculated values are refreshed on reread.
        /// By default, the values are also refreshed on write and create.
        /// </remarks>
        public void init()
        {
            super();

            custTransOpen_ds.cacheAddMethod(tableMethodStr(CustTrans, paymentTerms));
            custTransOpen_ds.cacheAddMethod(tableMethodStr(CustTransOpen, interestAmount));
            custTransOpen_ds.cacheAddMethod(tableMethodStr(CustTransOpen, paymentAmount));
            custTransOpen_ds.cacheAddMethod(tableMethodStr(CustTransOpen, unpostedPaymentAmount));
            custTransOpen_ds.cacheAddMethod(tableMethodStr(CustTransOpen, unpostedInterestAmount));

            if (isBillingClassificationEnabled)
            {
                qbrBillingClassification = custTransOpen_ds.query().dataSourceTable(tableNum(CustTrans)).findRange(
                                                                            fieldNum(CustTrans, CustBillingClassification));

                if (!qbrBillingClassification)
                {
                    qbrBillingClassification = custTransOpen_ds.query().dataSourceTable(tableNum(CustTrans)).addRange(
                                                                                fieldNum(CustTrans, CustBillingClassification));
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();
            element.setButtonAccess();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (criteriaCredit)
            {
                switch (includeCreditNotesCheckBox.value())
                {
                    case 1:
                        criteriaCredit.value(strFmt('((%1 >= %2) || (%3 != %4))', fieldStr(CustTrans, AmountCur), queryValue(0), fieldStr(CustTrans, Invoice), SysQuery::valueEmptyString()));
                        break;
                    case 0:
                        criteriaCredit.value("0..");
                        break;
                }
            }

            super();
            element.setButtonAccess();

            element.setButtonVisible();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            element.setButtonAccess();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Renders the List Page preview pane.
        /// </summary>
        /// <returns>
        /// The integer value 1 if record is selected; 0 Otherwise.
        /// </returns>
        public int active()
        {
            int ret = super();

            // enable/disable logic
            if (!this.anyMarked())
            {
                element.setButtonAccess();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>amountCur</Name>
						<Source><![CDATA[
        display AmountCur amountCur(CustTransOpen _custTransOpen)
        {
            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters()
                && _custTransOpen.TaxWithholdAmountOrigin_IN)
            {
                return _custTransOpen.getTaxWithhold_IN(_custTransOpen);
            }
            // </GIN>
            // use display method to prevent the debit/credit formatting
            return _custTransOpen.AmountCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            if (CreditCardPaymentBreakDownProcessFeatureExposureHelper::isEnabled())
            {
                int totalMarked = 0;
                CustTransOpen markedRecords = this.getFirst(true);
                if (!markedRecords)
                {
                    IncompleteCardPayment.enabled(true);
                    return;
                }
                while (markedRecords)
                {
                    totalMarked += 1;
                    if (totalMarked > 1)
                    {
                        break;
                    }
                    markedRecords = this.getNext();
                }
                if (totalMarked > 1)
                {
                    IncompleteCardPayment.enabled(false);
                }
                markedRecords = this.getFirst(true);
                CustTrans curLine = CustTrans::find(markedRecords.RefRecId);
                CustInvoiceJour custInvoiceJour = CustInvoiceJour::findFromCustTrans(curLine.Invoice, curLine.TransDate, curLine.AccountNum);
                element.updateButtonStatus(custInvoiceJour.salesId, custInvoiceJour.InvoiceId);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTrans</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Retrieves data from joined data sources when a user navigates to a new record. The new record is then set as the current record.
        /// </summary>
        /// <returns>
        /// The integer value 1 if record is selected; 0 Otherwise.
        /// </returns>
        public int active()
        {
            int ret = super();

            custTransDetails.setCustVendTrans(custTrans);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Creates a data source query that is based on the data source properties.
        /// </summary>
        /// <remarks>
        /// The query generated by the method is used to the load data to be displayed in the form.
        /// This method also creates an instance of <c>CustTransDetails</c> class.
        /// </remarks>
        public void init()
        {
            super();
            custTransDetails = new CustTransDetails(custTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>amountCur</Name>
						<Source><![CDATA[
        display AmountCur amountCur(CustTrans _custTrans)
        {
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                return _custTrans.AmountCur
                    + TaxWithholdTrans_IN::adjustedTaxWithholdAmount(
                        TaxWithholdCodeType_IN::TCS,
                        _custTrans.Voucher,
                        _custTrans.TransDate)
                    + TaxWithholdTrans_IN::adjustedTaxWithholdAmount(
                        TaxWithholdCodeType_IN::TDS,
                        _custTrans.Voucher,
                        _custTrans.TransDate);
            }

            // use display method to prevent the debit/credit formatting
            return _custTrans.AmountCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayInvoiceString</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns a string representation of the invoice ID for the supplied transaction.
        /// </summary>
        /// <param name = "_custTrans">A <c>CustTrans</c> record for which to return the invoice string.</param>
        /// <returns></returns>
        public display str displayInvoiceString(CustTrans _custTrans)
        {
            return _custTrans.Invoice == "" && _custTrans.TransType == LedgerTransType::CollectionLetter ? "@SYS9154" : _custTrans.Invoice;
        }

]]></Source>
					</Method>
					<Method>
						<Name>tcsAmountCur</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns whole TCS amount of the customer transaction.
        /// </summary>
        /// <param name = "_custTrans">A <c>CustTrans</c> record for which to return the TCS amount.</param>
        /// <returns>TCS amount of the customer transaction.</returns>
        [SysClientCacheDataMethod(true)]
        internal display AmountCur tcsAmountCur(CustTrans _custTrans)
        {
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                return TaxWithholdTrans_IN::adjustedTaxWithholdAmount(
                    TaxWithholdCodeType_IN::TCS,
                    _custTrans.Voucher,
                    _custTrans.TransDate) * -1;
            }
            else
            {
                return 0;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>tdsAmountCur</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns whole TDS amount of the customer transaction.
        /// </summary>
        /// <param name = "_custTrans">A <c>CustTrans</c> record for which to return the TDS amount.</param>
        /// <returns>TDS amount of the customer transaction.</returns>
        [SysClientCacheDataMethod(true)]
        internal display AmountCur tdsAmountCur(CustTrans _custTrans)
        {
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                return TaxWithholdTrans_IN::adjustedTaxWithholdAmount(
                    TaxWithholdCodeType_IN::TDS,
                    _custTrans.Voucher,
                    _custTrans.TransDate) * -1;
            }
            else
            {
                return 0;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Totals</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            CustInvoiceJour custInvoiceJour;
            ProjInvoiceJour projInvoiceJour;

            super();

            // there is no relationship between ProjInvoiceJour/CustInvoiceJour and CustTransOpen.
            // The fields to create a relationship between these two tables aren't
            // in CustTransOpen, we have to go through CustTrans.
            args = new Args();
            switch (custTrans.TransType)
            {
                case LedgerTransType::Project :
                    projInvoiceJour = ProjInvoiceJour::find(custTrans.Invoice, custTrans.TransDate);
                    args.record(projInvoiceJour);
                    new MenuFunction(menuitemDisplayStr(ProjInvoiceJourTotals), MenuItemType::Display).run(args);
                    break;

                default :
                    custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);
                    args.record(custInvoiceJour);

                    new MenuFunction(menuitemDisplayStr(CustInvoiceJournalTotals), MenuItemType::Display).run(args);
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Vouchers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;

            super();

            // there is no relationship between LedgerTrans and CustTransOpen.
            // The fields to create a relationship between these two tables aren't even
            // in CustTransOpen, we have to go through CustTrans.
            args = new Args();
            args.record(custTrans);
            args.caller(this);

            new MenuFunction(menuitemDisplayStr(LedgerTransVoucher1), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Payments</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens customer Settlement form that shows all the payments for a given invoice.
        /// </summary>
        void clicked()
        {
            Args args;

            args = new Args(formStr(CustOpenInvoicesListPage));

            args.caller(element);
            args.record(custTrans);

            new MenuFunction(menuitemDisplayStr(CustSettlement), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InterestNote</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens customer transaction form.
        /// </summary>
        /// <remarks>
        /// Open the customer transaction form by passing the transaction type <c>LedgerTransType::Interest</c>.
        /// </remarks>
        void clicked()
        {
            super();

            element.openRelatedForm(LedgerTransType::Interest);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CollectionLetters</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens customer transaction form.
        /// </summary>
        /// <remarks>
        /// Open the customer transaction form by passing the transaction type <c>LedgerTransType::CollectionLetter</c>.
        /// </remarks>
        void clicked()
        {
            super();

            element.openRelatedForm(LedgerTransType::CollectionLetter);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InvoiceButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// This button is here only to provide a default action for the form. The button is invisible to the user.
        /// </summary>
        public void clicked()
        {
            super();
            custTrans.openOriginalInvoice(element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IncompleteCardPayment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args args = new Args(menuitemDisplayStr(CustOpenInvoicesListPage));

            int totalMarked = 0;
            CustTransOpen markedRecords = CustTransOpen_ds.getFirst(true);
            if (!markedRecords)
            {
                new MenuFunction(menuitemDisplayStr(CreditCardBreakDownRecover), MenuItemType::Display).run(args);
            }
            else
            {
                CustInvoiceJour custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);
                CreditCardPaymentBreakDownTable tableLine = CreditCardPaymentBreakDownTable::findBySalesIdAndInvoiceJourId(custInvoiceJour.SalesId, custInvoiceJour.InvoiceId);
                if (tableLine)
                {
                    args.record(tableLine);
                    args.caller(element);
                    args.lookupRecord(tableLine);
                }
                new MenuFunction(menuitemDisplayStr(CreditCardBreakDownRecover), MenuItemType::Display).run(args);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenTransactionEditing</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;

            // We want Open Transaction Editing to behave like it was opened from CustTable
            // form. Due to the complexity of Open Transaction Editing, the easiest way to
            // achieve this is to send in the CustTable record.
            args = new Args(formStr(CustTable));

            args.record(custTable);
            args.caller(element);
            args.lookupRecord(CustTransOpen);

            new MenuFunction(menuitemDisplayStr(CustOpenTrans), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Shipments</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            CustInvoiceJour custInvoiceJour;

            // there is no relationship between SalesShippingStat and CustTransOpen.
            // The fields to create a relationship between these two tables aren't even
            // in CustTransOpen, we have to go through CustInvoiceJour.
            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);

            args = new Args();
            args.record(custInvoiceJour);

            new MenuFunction(menuitemDisplayStr(SalesShippingStat), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BillOfLading</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            CustInvoiceJour custInvoiceJour;

            super();

            // there is no relationship between WMSBillOfLading and CustTransOpen.
            // The fields to create a relationship between these two tables aren't even
            // in CustTransOpen, we have to go through CustInvoiceJour.
            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);

            args = new Args();
            args.record(custInvoiceJour);

            new MenuFunction(menuitemDisplayStr(WMSBillOfLading), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MiscellaneousCharges</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            CustInvoiceJour custInvoiceJour;

            super();

            args = new Args();

            // there is no direct relationship between CustTransOpen and markupTrans so we need
            // some code to make the secondary window display properly.
            switch (custTrans.TransType)
            {
                case LedgerTransType::Sales :
                case LedgerTransType::Cust :
                    custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);

                    // if a markuptrans record exists then the only way to get the markuptrans form
                    // to display it properly is to use custInvoiceJour as the calling record.
                    // If it doesn't exist, then the markupTrans form gives us problems so we'll send
                    // in custTrans as the caller. This will effectively show an empty window.
                    if (custInvoiceJour && (MarkupTrans::exist(custInvoiceJour.TableId, custInvoiceJour.RecId)))
                    {
                        args.record(custInvoiceJour);
                    }
                    else
                    {
                        args.record(custTrans);
                    }

                    args.caller(this);
                    args.name(formStr(CustOpenInvoicesListPage));
                    new MenuFunction(menuitemDisplayStr(MarkupTrans_HeadingSales), MenuItemType::Display).run(args);
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostedSalesTax</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;

            super();

            // there is no relationship between TaxTrans and CustTransOpen.
            // The fields to create a relationship between these two tables aren't
            // in CustTransOpen, we have to go through CustTrans.
            args = new Args(formStr(TaxTrans));
            args.record(custTrans);
            args.caller(element);

            new MenuFunction(menuitemDisplayStr(TaxTrans), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommissionTransactions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            CustInvoiceJour custInvoiceJour;
            ProjInvoiceJour projInvoiceJour;

            super();

            args = new Args();

            // there is no relationship between CommissionTrans and CustTransOpen.
            // The fields to create a relationship between these two tables aren't
            // in CustTransOpen, we have to go through CustTrans.
            switch (custTrans.TransType)
            {
                case LedgerTransType::Project :
                    projInvoiceJour = ProjInvoiceJour::find(custTrans.Invoice, custTrans.TransDate);
                    args.record(projInvoiceJour);
                    new MenuFunction(menuitemDisplayStr(CommissionTrans), MenuItemType::Display).run(args);
                    break;

                default :
                    custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);
                    args.record(custInvoiceJour);

                    new MenuFunction(menuitemDisplayStr(CommissionTrans), MenuItemType::Display).run(args);
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SynchBatchSerialNumbers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustInvoiceJour custInvoiceJour;
            Args args;

            super();

            args = new Args();

            // The only valid way to launch this action is to send in the custInvoiceJour record
            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);
            args.record(custInvoiceJour);
            new MenuFunction(menuitemActionStr(InterCompanyTransferInventDim), MenuItemType::Action).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InvoicePosting</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustInvoiceJour custInvoiceJour;

            super();

            custInvoiceJour = CustInvoiceJour::findFromCustTrans(custTrans.Invoice, custTrans.TransDate, custTrans.AccountNum);

            if (custInvoiceJour)
            {
                custInvoiceJour.interCompanyUpdate();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AcceptanceReport_RU</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.printInvoice(PrintCopyOriginal::Original, true); // Acceptance report
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewCopy</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.printInvoice(PrintCopyOriginal::Copy);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewOriginal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.printInvoice(PrintCopyOriginal::Original);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SendCopy</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.sendInvoice(PrintCopyOriginal::Copy);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SendOriginal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.sendInvoice(PrintCopyOriginal::Original);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintManagement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.printInvoice(PrintCopyOriginal::OriginalPrint);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>filterBillingClassification</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Perform a lookup for the <c>BillingClassification</c> field of the <c>CustBillingClassification</c> table.
        /// </summary>
        public void lookup()
        {
            CustBillingClassification::custBillingClassificationLookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// filter invoices by selected <c>BillingClassification</c> value.
        /// </summary>
        /// <returns>
        /// The value from a call to super is returned.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                element.filterBillingClassification(this.text());
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IncludeCreditNotesCheckBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Show or hide credit notes based on user selection
        /// </summary>
        public void clicked()
        {
            super();
            custTransOpen_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustTransOpen_AccountNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args args = new Args();

            args.caller(element);
            args.record(custTransOpen);
            new MenuFunction(menuitemDisplayStr(CustTableDetails), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceQuery>CustOpenInvoicesListPage</DataSourceQuery>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpen</Name>
			<Table>CustTransOpen</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDiscNoticeDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealizedReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastInterestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PossibleCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledLinePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledTotalAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementPriorityCashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>AccountDateIdx</Index>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>CustTrans</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTrans</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionContractId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionSettlementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManLackDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>No</AllowAdd>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowAdd>Yes</AllowAdd>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>CustTable</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>CustTransOpen</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTable</Name>
			<Table>CustTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Affiliated_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgencyLocationCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCustPaymIdTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthCountyCode_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthPlace_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClearingPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNAE_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegister</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterInsetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterSection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyChainId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdSiret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNAFCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsDay_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationVoid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardCVC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditRating</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Curp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustClassificationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeCollectionFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeInterestCharges</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFinalUser_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTradingPartnerCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWhtContributionType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EinvoiceEANNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryCertificateRequired_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportSales_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressBillOfLading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FactoringAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FederalComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FedNonFedIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocType_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignResident_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateIncomingFiscalDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeAccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeCollectionletter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeFreeTextInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeInterestNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeProjInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSContributor_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IENum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>INSSCEI_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAutoCreateOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IRS1099CIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsResident_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssueOwnEntryCertificate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssuerCountry_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPaymTransCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainContactWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryCreditLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryVatDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedParent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedRoot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NIT_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderEntryDeadlineGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OurAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackageDepositExcempt_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackMaterialFeeLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyCountry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNo_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentReference_EE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAccrued</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateTMAGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegNum_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResidenceForeignCountryRegionId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDCaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDPalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDistrictId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierFuelSurcharge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInscription_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubsegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Suframa_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaNumber_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaPISCOFINS_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncEntityId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBorderNumber_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usePurchRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WebSalesOrderDisplay</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>CustTrans</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustInvoiceJour_CN</Name>
			<Table>CustInvoiceJour</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Backorder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfLadingId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceLineSpecific</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDiscMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRoundOffMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicingName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCorrection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDueAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCREmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OLAPCostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnAccountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParmId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintedOriginals</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintMgmtSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Proforma</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCSalesList_UK</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnItemNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReasonCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseCharge_UK</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversedRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesBalanceMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOriginId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDiscMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumMarkupMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumTaxMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPrintOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyByLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Updated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Volume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerSalesTaker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>CustTrans</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS110029</Caption>
		<DataSource xmlns="">CustTransOpen</DataSource>
		<NewRecordAction xmlns="">PaymentJournal</NewRecordAction>
		<Pattern xmlns="">ListPage</Pattern>
		<PatternVersion xmlns="">UX7 1.0</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">ListPage</Style>
		<TitleDataSource xmlns="">CustTransOpen</TitleDataSource>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<WindowType xmlns="">ContentPage</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>InvoiceNew</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>NewTransactionGroup</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FreeTextInvoice</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>CustTable</DataSource>
										<MenuItemName>CustFreeInvoiceNew</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PaymentJournal</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>LedgerJournalTable_CustPaym</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<OpenMode>New</OpenMode>
										<Parameters>FormOpenModeForNew</Parameters>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112305</Text>
									</AxFormControl>
								</Controls>
								<Text>@SYS2055</Text>
							</AxFormControl>
						</Controls>
						<Caption>@SYS2055</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>TotalsGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Totals</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<Primary>Yes</Primary>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS13865</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>VouchersGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Vouchers</Name>
								<ConfigurationKey>LedgerBasic</ConfigurationKey>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<Primary>Yes</Primary>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS115715</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>TransactionsGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TransactionsButton</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DefaultButton>Yes</DefaultButton>
								<MenuItemName>CustTrans</MenuItemName>
								<Primary>Yes</Primary>
								<ShowShortCut>No</ShowShortCut>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>Invoice</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Transactions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Payments</Name>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS58091</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>InterestNote</Name>
										<ConfigurationKey>CustInterest</ConfigurationKey>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS128531</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CollectionLetters</Name>
										<ConfigurationKey>CustCollectionLetter</ConfigurationKey>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS115290</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>InvoiceButton</Name>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<Type>Button</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>IncompleteCardPayment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CreditCardBreakDownRecover</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS53654</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PaySettle</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>OpenTransactionEditing</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>CustOpenTrans</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS114671</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ClosedTransactionEditing</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>CustTable</DataSource>
										<MenuItemName>CustOpenTransReverse</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS115278</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS114666</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PayCollect</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CreateCollectionLetter</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>939524094</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Create</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>CustTransOpen</DataSource>
										<MenuItemName>CustCollectionLetterCreateAction</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PrintPostCollectionLetters</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1409286141</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>CustTable</DataSource>
										<MenuItemName>CustCollectionLetterNoteAction</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>NewInterestNote</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CustomerInterestNote</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>CustTable</DataSource>
												<MenuItemName>CustInterestNoteCreate</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS24704</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>InvoiceInterestNote</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>CustTransOpen</DataSource>
												<MenuItemName>CustInvoiceInterestNoteCreate</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>No</MultiSelect>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS14204</Text>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS127768</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PrintPostInterestNote</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2063597566</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>CustTable</DataSource>
										<MenuItemName>CustInterestNoteAction</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WriteOff</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>CustTransOpen</DataSource>
										<MenuItemName>CustWriteOff</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustCollectionsTransactionStatusHistory</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>CustTrans</DataSource>
										<MenuItemName>CustCollectionsTransactionStatusHistory</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS50746</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Shipping</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Shipments</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>SalesShippingStat</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>BillOfLading</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>SalesShipments</ConfigurationKey>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112321</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS115265</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>InvoiceDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MiscellaneousCharges</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Markup</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS117387</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PostedSalesTax</Name>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112317</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CommissionTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Commission</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112319</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS80118</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Intercompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<NeededPermission>Manual</NeededPermission>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SynchBatchSerialNumbers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>TradeInterCompany</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112314</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>InvoicePosting</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS112325</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS118294</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>InvoiceDocument</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>View</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AcceptanceReport_RU</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<CountryRegionCodes>RU</CountryRegionCodes>
												<ElementPosition>715827880</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@GLS107021</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ViewCopy</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS80350</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ViewOriginal</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS5301</Text>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS5252</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Send</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>SendCopy</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS80350</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>SendOriginal</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS13700</Text>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS50570</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>Print_MenuButton</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintManagement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Manual</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Primary>Yes</Primary>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS24159</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PrintByRange</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>CustInvoicePrintJob_All</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS24771</Text>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS920</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS21873</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS14204</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterGroup</Name>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>filterBillingClassification</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PublicSector</ConfigurationKey>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SPS534</Label>
						<LabelAlignment>Center</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>IncludeCreditNotesCheckBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@AccountsPayable:IncludeCreditNotes</Label>
						<Style>Toggle</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1342177278</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTrans_Invoice</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Invoice</DataField>
						<DataSource>CustTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>CustTransOpen_DueDatePastDue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>58567734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>DueDate</DataField>
						<DataSource>CustTransOpen</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTrans_FiscalEstablishmentId_BR</Name>
						<ElementPosition>153740301</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>fiscalEstablishmentId_BR</DataMethod>
						<DataSource>CustTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTransOpen_AccountNum</Name>
						<ElementPosition>777414245</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<PreviewPartRef>CustFreeInvoiceCustAccountPreview</PreviewPartRef>
						<Type>String</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountNum</DataField>
						<DataSource>CustTransOpen</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>CustomerName</Name>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>CustTable</DataSource>
						<ReferenceField>Party</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>CustTransOpen_TransDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>204987069</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransDate</DataField>
						<DataSource>CustTransOpen</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>CustTransOpen_DueDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>234270936</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>DueDate</DataField>
						<DataSource>CustTransOpen</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>AmountCur</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>292838670</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>AmountCur</DataMethod>
						<DataSource>CustTrans</DataSource>
						<Label>@SYS9458</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTrans_CurrencyCode</Name>
						<ElementPosition>263554803</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CurrencyCode</DataField>
						<DataSource>CustTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>CustTransOpen_TDSAmount_IN</Name>
						<CountryRegionCodes>IN</CountryRegionCodes>
						<ElementPosition>322122546</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<CacheDataMethod>Yes</CacheDataMethod>
						<DataMethod>tdsAmountCur</DataMethod>
						<DataSource>CustTrans</DataSource>
						<Label>@GLS5470</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>CustTrans_CustBillingClassification</Name>
						<ElementPosition>536870911</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustTrans_CustBillingClassification_BillingClassification</Name>
								<DataRelationPath>CustBillingClassification</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>CustTrans</DataSource>
						<ReferenceField>CustBillingClassification</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>CustTransOpen_TCSAmount_IN</Name>
						<CountryRegionCodes>IN</CountryRegionCodes>
						<ElementPosition>1232705944</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<CacheDataMethod>Yes</CacheDataMethod>
						<DataMethod>tcsAmountCur</DataMethod>
						<DataSource>CustTrans</DataSource>
						<Label>@GLS5471</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>CustTrans_SettleAmountCur</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>SettleAmountCur</DataField>
						<DataSource>CustTrans</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>interestAmount</Name>
						<AllowEdit>No</AllowEdit>
						<ConfigurationKey>CustInterest</ConfigurationKey>
						<ElementPosition>1687308579</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>interestAmount</DataMethod>
						<DataSource>CustTransOpen</DataSource>
						<Label>@SYS10770</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>paymentAmount</Name>
						<AllowEdit>No</AllowEdit>
						<ConfigurationKey>LedgerBasic</ConfigurationKey>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>paymentAmount</DataMethod>
						<DataSource>CustTransOpen</DataSource>
						<Label>@SYS58091</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>CustTransOpen_AmountCur</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1994091957</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsReceivable:CustOpenInvoicesListPage_CustTransOpen_AmountCur</HelpText>
						<Type>Real</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>amountCur</DataMethod>
						<DataSource>CustTransOpen</DataSource>
						<Label>@SYS117286</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>CustTransOpen</DataSource>
				<DefaultAction>InvoiceButton</DefaultAction>
				<DefaultActionLabel>@SYS122402</DefaultActionLabel>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>