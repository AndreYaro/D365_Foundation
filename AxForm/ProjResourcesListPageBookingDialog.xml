<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjResourcesListPageBookingDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjResourcesListPageBookingDialog extends FormRun
{
    #TimeConstants
    ProjId      projectId;
    List        resourcesList;
    boolean     cdsLockingOptionProjectResourcing;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the booking button text as well as initial the resources list to be booked.
    /// </summary>
    public void init()
    {
        super();

        if (element.args().parmEnum() == ResCommitType::HardBook)
        {
            Book.text("@SYS4008806");
        }
        else if (element.args().parmEnum() == ResCommitType::SoftBook)
        {
            Book.text("@SYS4008817");
        }

        resourcesList = new List(Types::Class);
        Args args = element.args();
        if (args && args.dataset())
        {
            switch (args.dataset())
            {
                case tableNum(ResResourcesListView):
                    element.insertResourceList(args);
                    break;
                case tableNum(ResProjectResourceEffectiveDateRangeView):
                    element.insertResourceListV2(args);
                    break;
            }
        }

        cdsLockingOptionProjectResourcing = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::ProjectResourcing);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertResourceList</Name>
				<Source><![CDATA[
    private void insertResourceList(Args _args)
    {
        MultiSelectionContext multiSelectionContext = _args.multiSelectionContext();
            
        if (multiSelectionContext)
        {
            ResResourcesListView selectedResource = multiSelectionContext.getFirst();
            if (!selectedResource)
            {
                selectedResource = _args.record();
            }
            if (selectedResource)
            {
                ResReservationSchedule resource = ResReservationSchedule::construct();
                resource.Resource(selectedResource.Resource);
                resourcesList.addEnd(resource);
            }
            do
            {
                selectedResource = multiSelectionContext.getNext();
                if (selectedResource)
                {
                    ResReservationSchedule resource = ResReservationSchedule::construct();
                    resource.Resource(selectedResource.Resource);
                    resourcesList.addEnd(resource);
                }
            }
            while (selectedResource);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertResourceListV2</Name>
				<Source><![CDATA[
    private void insertResourceListV2(Args _args)
    {
        MultiSelectionContext multiSelectionContext = _args.multiSelectionContext();
            
        if (multiSelectionContext)
        {
            ResProjectResourceEffectiveDateRangeView selectedResource = multiSelectionContext.getFirst();
            if (!selectedResource)
            {
                selectedResource = _args.record();
            }
            if (selectedResource)
            {
                ResReservationSchedule resource = ResReservationSchedule::construct();
                resource.Resource(selectedResource.Resource);
                resourcesList.addEnd(resource);
            }
            do
            {
                selectedResource = multiSelectionContext.getNext();
                if (selectedResource)
                {
                    ResReservationSchedule resource = ResReservationSchedule::construct();
                    resource.Resource(selectedResource.Resource);
                    resourcesList.addEnd(resource);
                }
            }
            while (selectedResource);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ProjectName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Lookup projects which is not completed and end date is smaller than today.
        /// </summary>
        public void lookup()
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange queryBuildRange;
            date dateToday = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjTable), this);

            sysTableLookup.addLookupField(fieldNum(ProjTable, ProjId), true);
            sysTableLookup.addLookupField(fieldNum(ProjTable, Name));

            queryBuildDataSource = query.addDataSource(tableNum(ProjTable));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjTable, Status));
            queryBuildRange.value(SysQuery::valueNot(ProjStatus::Completed));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjTable, PSASchedStartDate));
            queryBuildRange.value(SysQuery::valueNot(""));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjTable, PSASchedEndDate));
            queryBuildRange.value(strFmt("((%1 >= %2))", fieldStr(ProjTable, PSASchedEndDate), date2StrXpp(dateToday)));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjTable, Template));
            queryBuildRange.value(SysQuery::value(NoYes::No));

            if (ProjCDSLockingOptionTable::get(ProjCDSLockingOption::ProjectResourcing))
            {
                queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjTable, ProjDataSource));
                queryBuildRange.value(SysQuery::value(0));
            }

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Modify project related values to be shown on the dialog form after user has picked a project.
        /// </summary>
        /// <returns>Boolean to indicate whether modification is successful.</returns>
        public boolean modified()
        {
            ProjTable   projectTable;
            CustTable customerTable;
            DirPartyTable partyTable, partyProjectManager;
            HcmWorker hcmWorker;

            boolean ret = super();

            if (this.text())
            {
                projectId = ProjectName.valueStr();

                if (this.validateProjectExternallyManaged(projectId))
                {
                    select firstOnly ProjId, CustAccount, WorkerResponsible, PSASchedStartDate, PSASchedEndDate, Name
                        from projectTable
                        where projectTable.ProjId == projectId
                        outer join RecId from hcmWorker
                            where hcmWorker.RecId == projectTable.WorkerResponsible
                        outer join Name, RecId from partyProjectManager
                            where partyProjectManager.RecId == hcmWorker.Person;

                    select firstOnly AccountNum, Party from customerTable
                        where customerTable.AccountNum == projectTable.CustAccount
                        join Name, RecId from partyTable
                            where partyTable.RecId == customerTable.Party;

                    Customer.text(partyTable.RecId ? partyTable.Name : '');
                    ProjectManager.text(partyProjectManager.RecId ? partyProjectManager.Name : '');

                    ProjectStartDate.dateValue(projectTable.PSASchedStartDate);
                    ProjectEndDate.dateValue(projectTable.PSASchedEndDate);

                    ProjectName.text(projectTable.Name);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateProjectExternallyManaged</Name>
						<Source><![CDATA[
        private boolean validateProjectExternallyManaged(ProjId _projId)
        {
            boolean ret = true;

            if (cdsLockingOptionProjectResourcing)
            {
                if (Project::isProjectExternallyManaged(_projId))
                {
                    ret = checkFailed(strfmt("@Proj:ProjCDSValueInvalidDueToExternal", "@Proj:ProjCDSProjectResourcing"));
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Book</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Book resources to the user specify project.
        /// </summary>
        void clicked()
        {
            ResCommitType               bookingType = element.args().parmEnum();
            ResReservationSchedule      resSchedule, selectedResource;
            ResIResourceManager         resourceManager = ResResourceManager::construct();
            ResIReserveProcessor        reserveProcessor = ResReserveProcessor::getProcessor(ResBookingType::RemainingCapacity);
            List                        schedulesList = new List(Types::Class);
            ActivityRecId               activity;
            utcdatetime                 projectStartDateTime, projectEndDateTime;
            ListEnumerator              resourcesListEnum;

            super();

            activity = ProjWBS::getRootActivityRecId(projectId);

            projectStartDateTime = datetobeginUtcDateTime(ProjectStartDate.dateValue(), 0);
            projectEndDateTime = datetoendUtcDateTime(ProjectEndDate.dateValue(), 0);

            resourcesListEnum = resourcesList.getEnumerator();
            while (resourcesListEnum.moveNext())
            {
                selectedResource = resourcesListEnum.current();
                resSchedule = ResReservationSchedule::construct();
                resSchedule.ReservationType(ResReservationType::Booking);
                resSchedule.Commitment(bookingType);
                resSchedule.Resource(selectedResource.Resource());
                resSchedule.Activity(activity);
                resSchedule.Start(projectStartDateTime);
                resSchedule.End(projectEndDateTime);
                schedulesList.addEnd(resSchedule);
            }

            // if the scheules contain soft reservation, ask user if user will cancel the soft reservation and cancel soft reservation accordingly
            ResCancelSoftReservation cancelSoftReservation = ResCancelSoftReservation::construct(schedulesList);
            if (cancelSoftReservation.hasSoftReservation() && cancelSoftReservation.getUserFeedBackOnSoftReservationCancelling())
            {
                cancelSoftReservation.cancelSoftReservation(true);
            }

            // reserve the scheduling collection
            resourceManager.ReserveProcessor(reserveProcessor);
            resourceManager.Schedules(schedulesList);
            resourceManager.Reserve(true);

            this.formRun().close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@Res:ResourceProjectBooking</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<MaximizeBox xmlns="">No</MaximizeBox>
		<MinimizeBox xmlns="">No</MinimizeBox>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<Scrollbars xmlns="">No</Scrollbars>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<ElementPosition>1073741822</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS4009155</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopContent</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ProjectInformation</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS15760</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Customer</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS302</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ProjectStartDate</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS4009396</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ProjectEndDate</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS339133</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProjectManager</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS70488</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Book</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@Res:Book</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>