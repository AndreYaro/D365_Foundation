<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTransCost</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTransCost extends FormRun implements TaxIFormCorrectableTaxAmount, LedgerILedgerJournalEngineProvider, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    QueryBuildRange                     ledgerJournalTransRange;
    LedgerJournalEngine_ProjectCost     ledgerJournalEngine;

    LedgerJournalFormTrans              journalFormTrans;

    DebCredProposal                     debCredProposal;
    DebCredProposal                     debCredProposalOld;
    LedgerJournalTable                  ledgerJournalTable;

    LedgerJournalId                     journalNum;

    ImageListAppl_LedgerJournal         imageListAppl;

    [FormObservable]
    TaxAmount                           correctedTaxAmountCur;
    boolean                             correctedTaxAmountCurEdited;

    ProjCostSalesPrice                  projCostSalesPrice;
    boolean                             cashDiscChanged;
    QueryBuildRange                     criteriaActivityId;
    boolean                             isInCreate;

    LedgerJournalTransEntityManager     ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.

    MainAccountRecId                    currentOffsetMainAccountId;
    DimensionAttributeRecId             mainAccountDimensionAttributeRecId;
    LedgerJournalACType                 priorOffsetAccountType;
    // <GCN>
    LedgerChineseVoucherEnabled_CN      chineseVoucher_CN;
    // </GCN>

    // <GIN>
    TaxExciseTypeController_IN  taxExciseTypeController;
    boolean                     isIndiaIndirectTaxParameterMarked;
    boolean                     isIndiaWHTMarked;
    #ISOCountryRegionCodes
    // </GIN>
    boolean                     keepSalesPriceOnWrite ;
    boolean                     correctedSalesTaxAmountCur;

    boolean                     cdsLockingOptionExpenseJournals;
    private boolean isTaxIntegrationEnabledForProj = Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project);
    private boolean isTaxIntegrationAccureUseTaxFlightEnabled = TaxIntegrationISVProjExpenseAccureUseTaxFlight::instance().isEnabled();


    #ISOCountryRegionCodes

}
]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        FormRun callerForm = element.args().caller();

        if (callerForm)
        {
            callerForm.bookRefresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        ledgerJournalEngine.close();
        ledgerJournalEngine.formMethodClosePre();
        journalFormTrans.formClosePre();
        element.bookRefresh(true);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteDIOTAdditionalinfo_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To delete DIOTAddlInfoForNoVendorLedger_MX table buffer
    /// while modifying OffsetAccountType TaxGroup/TaxItemGroup.
    /// </summary>
    /// <remarks>
    /// This method is called when LedgerJournalTrans data source fields OffsetAccountType TaxGroup/TaxItemGroup modified methods.
    /// </remarks>
    public void deleteDIOTAdditionalinfo_MX()
    {
        if (diotAddlInfoForNoVendorLedger_MX.RecId != 0)
        {
            diotAddlInfoForNoVendorLedger_MX.delete();
            diotAddlInfoForNoVendorLedger_MX_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableAddiotionalInfo_MX</Name>
				<Source><![CDATA[
    public void enableDisableAddiotionalInfo_MX()
    {
        boolean commonTaxCodes;

        switch (ledgerJournalTrans.OffsetAccountType)
        {
            case LedgerJournalACType::Vend,
                LedgerJournalACType::Cust,
                LedgerJournalACType::FixedAssets:

                diotInformation.enabled(ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend ? true : false);
                element.enableDisableVendorType_MX();
                break;

            default:
                commonTaxCodes = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
                diotInformation.enabled(commonTaxCodes);
                identification1.allowEdit(commonTaxCodes);
                element.enableDisableVendorType_MX();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableVendorType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Make editable/non-editable - the fields in the Additional info tab based on Venodor type selected by the user.
    /// </summary>
    /// <remarks>
    /// When it is ForeginVendor: Allow edit - Yes for the fields ForeignTaxRegistration, Nationality, DiotCountryCode and No  for the fields RFC, CURP;
    /// Otherwise:                Allow edit - No  for the fields ForeignTaxRegistration, Nationality, DiotCountryCode and Yes for the fields RFC, CURP;
    /// </remarks>
    public void enableDisableVendorType_MX()
    {
        boolean enableFields;

        enableFields = diotAddlInfoForNoVendorLedger_MX.VendorType != VendorType_MX::ForeignVendor;

        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Rfc)).allowEdit(enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Curp)).allowEdit(enableFields);
        foreign.allowEdit(!enableFields && ledgerJournalTrans.OffsetAccountType!= LedgerJournalACType::Vend);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, ForeignTaxRegistration)).allowEdit(!enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Nationality)).allowEdit(!enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, DiotCountryCode)).allowEdit(!enableFields);

        if (!enableFields)
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceMX00005, funcName());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjSalesCurrencyId</Name>
				<Source><![CDATA[
    void enableProjSalesCurrencyId()
    {
        if (ledgerJournalTrans.parmLedgerDimension() && ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::findByLedgerDimension(ledgerJournalTrans.parmLedgerDimension()).ProjInvoiceProjId))
        {
            ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(false);
            ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(true);
        }
        else
        {
            ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(true);
            ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lockOffsetAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lock the main account segment if "Fixed offset account" is selected in Journal Names
    /// </summary>
    private void lockOffsetAccount()
    {
        LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
        LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount1, ledgerJournalTable, ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerJournalTransAccountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// setLedgerJournalTransAccountCurrencyCode
    /// </summary>
    private void setLedgerJournalTransAccountCurrencyCode()
    {
        LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
        LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);
        Group1_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);

        LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
        LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeProjectPriceParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>ProjPriceParameters</c> object which is used to pass values to project pricing routines
    /// </summary>
    /// <param name = "_ledgerJournalTrans">
    /// <c>LedgerJournalTrans</c> record buffer.
    /// </param>
    /// <returns>
    /// <param name = "_ledgerJournalTrans_Project">
    /// LedgerJournalTrans_Project record buffer.
    /// </param>
    /// <returns>
    /// The <c>ProjPriceParameters</c> object.
    /// </returns>
    protected projPriceParameters initializeProjectPriceParameters(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalTrans_Project _ledgerJournalTrans_Project)
    {  
		ProjPriceParameters projPriceParameters = ProjPriceParameters::construct();
        if (_ledgerJournalTrans_Project.ProjId)
        {
            projPriceParameters.parmProjId(_ledgerJournalTrans_Project.ProjId);
        }

        if (_ledgerJournalTrans.parmAccount())
        {
            projPriceParameters.parmCustAccount(_ledgerJournalTrans.parmAccount());
        }

        if (_ledgerJournalTrans_Project.Resource)
        {
            projPriceParameters.parmResourceRecId(_ledgerJournalTrans_Project.Resource);
        }

        if (_ledgerJournalTrans_Project.CategoryId)
        {
            projPriceParameters.parmProjCategoryId(_ledgerJournalTrans_Project.CategoryId);
        }

        if (_ledgerJournalTrans_Project.ProjTransDate)
        {
            projPriceParameters.parmTransDate(_ledgerJournalTrans_Project.ProjTransDate);
        }
        else if (_ledgerJournalTrans.TransDate)
        {
            projPriceParameters.parmTransDate(_ledgerJournalTrans.TransDate);
        }

        if (_ledgerJournalTrans_Project.ProjPriceGroupID)
        {
            projPriceParameters.parmProjPriceGroupID(_ledgerJournalTrans_Project.ProjPriceGroupID);
        }

		return projPriceParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerJournalTransAccountTransCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// setLedgerJournalTransAccountTransCompany
    /// </summary>
    private void setLedgerJournalTransAccountTransCompany()
    {
        str ledgerJournalTransCompany;

        if (ledgerJournalTrans.Company)
        {
            ledgerJournalTransCompany = ledgerJournalTrans.Company;
        }
        else
        {
            ledgerJournalTransCompany = curext();
        }

        LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTransCompany);
        LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTransCompany);
        Group1_AccountNum.parmDataAreaId(ledgerJournalTransCompany);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerJournalTransAccountTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// setLedgerJournalTransAccountTransDate
    /// </summary>
    private void setLedgerJournalTransAccountTransDate()
    {
        LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
        LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);
        Group1_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);

        LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
        LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillAddInfoFields_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To clear all the fields in the Additional tab.
    /// </summary>
    public void fillAddInfoFields_MX()
    {
        VendTable   vendTable;

        vendTable = ledgerJournalTrans.findVendForOffset();

        if (vendTable)
        {
            diotAddlInfoForNoVendorLedger_MX.Rfc                    = vendTable.Rfc_MX;
            diotAddlInfoForNoVendorLedger_MX.Curp                   = vendTable.Curp_MX;
            diotAddlInfoForNoVendorLedger_MX.Name                   = vendTable.name();
            diotAddlInfoForNoVendorLedger_MX.VendorType             = vendTable.VendorType_MX;
            diotAddlInfoForNoVendorLedger_MX.ForeignTaxRegistration = vendTable.ForeignTaxRegistration_MX;
            diotAddlInfoForNoVendorLedger_MX.DiotCountryCode        = vendTable.DiotCountryCode_MX;
            diotAddlInfoForNoVendorLedger_MX.Nationality            = vendTable.Nationality_MX;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowTax</Name>
				<Source><![CDATA[
    public Tax getShowTax()
    {
        return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowWithholdTax_IN</Name>
				<Source><![CDATA[
    public TaxWithholdJournal_IN getShowWithholdTax_IN()
    {
        return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        // <GCN>
        boolean         allow;

        chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
        // </GCN>

        journalFormTrans = new LedgerJournalFormTrans(element);

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            isIndiaIndirectTaxParameterMarked   = TaxParameters::checkTaxParameters_IN();
            isIndiaWHTMarked                    = TaxWithholdParameters_IN::checkTaxParameters();
        }
        // </GIN>

        super();

        mainAccountDimensionAttributeRecId = DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount);
        cdsLockingOptionExpenseJournals = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::ExpenseJournals);

        LedgerJournalTrans_AccountNum.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_AccountNum1.parmPostingType(LedgerPostingType::LedgerJournal);
        Group1_AccountNum.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetAccount.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetAccount1.parmPostingType(LedgerPostingType::LedgerJournal);

        LedgerJournalTrans_AccountNum.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_AccountNum1.parmValidateBlockedForManualEntry(true);
        Group1_AccountNum.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetAccount.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetAccount1.parmValidateBlockedForManualEntry(true);

        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
        ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(
            ledgerJournalTrans_DS, null, ledgerJournalTrans_Project_DS, tax1099BoxDetail_DS);

        journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
        journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
        journalFormTrans.parmCtrlTriangulation(fieldTriangulation);
        journalFormTrans.parmCtrlExchRate(fieldExchRate);
        journalFormTrans.parmCtrlExchRateSecond(fieldExchRateSecond);
        journalFormTrans.parmCtrlCourseButton(buttonCourse);
        journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
        journalFormTrans.parmCtrlApproveButton(buttonApprove);
        journalFormTrans.parmCtrlRejectButton(buttonReject);
        journalFormTrans.parmCtrlPostJournalMenu(buttonPostJournal);
        journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
        journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
        journalFormTrans.parmCtrlBalanceControButton(buttonBalanceControl);
        journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
        journalFormTrans.parmCalculatedTaxAmount(taxAmountJournal1);
        journalFormTrans.parmActualTaxAmount(correctedTaxAmount);
        journalFormTrans.parmCtrlErrorExists(fieldError);

        journalFormTrans.formInitPost();

        this.initLedger();

        imageListAppl = new ImageListAppl_LedgerJournal();
        fieldError.imageList(imageListAppl.imageList());

        element.setVisible();

        // Disable the company accounts field on the general tab if Intercompany transactions are disabled
        if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            ledgerJournalTrans_Company.allowEdit(false);
        }

        // <GCN>
        if (chineseVoucher_CN)
        {
            allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually
                && ledgerJournalTable.VoucherAllocatedAtPosting == NoYes::No;
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
        }
        else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
        }
        // </GCN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            element.enableDisableAddiotionalInfo_MX();
        }

        boolean isUS = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]);

        // 1099 Tab should only be visible in the US
        tabLineTax1099.visible(isUS);

        if (isUS && isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            // Properly default the editability of the tax1099 fields
            element.setAllowEditTax1099();
            element.setAllowEdit1099SFields();
            element.setAllowEdit1099GFields();
        }

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            element.setTaxWithholdTransVisible_IN();
            element.setTaxWithholdVisible_IN();
            element.setVisibleTaxInformation_IN();
        }
        // </GIN>
        keepSalesPriceOnWrite = false;

        // <GIN> <GTE>
        if (TaxIntegrationUtils::isTaxInformationEnabled())
        {
            TransTaxInformation_Cost.visible(true);
            TransTaxInformation_Invoice.visible(true);
        }

        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            TaxDocumentLauncher.visible(true);
            TaxTransSource.visible(false);
            LedgerJournalTrans_TaxGroup.visible(false);
            LedgerJournalTrans_TaxItemGroup.visible(false);
            ProjectTax.visible(false);
            ProjectTax_TaxGroup.visible(false);
            ProjectTax_TaxItemGroup.visible(false);
        }
        // </GIN> </GTE>
        Correction.visible(LedgerParameters::find().TransactionReversalCorrection);

        if (ledgerJournalTable.isTaxIntegrationEnabled())
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdTransVisible_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set button TaxWithholdTrans_IN is visible when flighting is enable.
    /// </summary>
    private void setTaxWithholdTransVisible_IN()
    {
        TaxWithholdTrans_IN.visible(true);
        ButtonWithholdTax_IN.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntracomVATDueDate</Name>
				<Source><![CDATA[
    void initIntracomVATDueDate()
    {
        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, IntraComVATDueDate_W)).enabled(VendParameters::find().DocumentDateForIntracomVAT_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedger</Name>
				<Source><![CDATA[
    void initLedger()
    {
        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable = element.args().record();
            journalNum    = ledgerJournalTable.JournalNum;

            LedgerJournalTrans_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_AccountNum1.parmJournalName(ledgerJournalTable.JournalName);
            Group1_AccountNum.parmJournalName(ledgerJournalTable.JournalName);

            LedgerJournalTrans_OffsetAccount.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_OffsetAccount1.parmJournalName(ledgerJournalTable.JournalName);

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = LedgerJournalTrans_OffsetAccount.getValue(mainAccountDimensionAttributeRecId);
            }

            element.lockOffsetAccount();

            if (ledgerJournalTable.FixedOffsetAccount && ledgerJournalTable.parmOffsetLedgerDimension())
            {
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetLedgerDimension)).allowEdit(ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger);
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetAccountType)).allowEdit(false);
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetCompany)).allowEdit(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdditionalInfoToBeDeleted_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if Additional info has to be deleted.
    /// </summary>
    /// <returns>
    /// Returns true if Additional info has to be deleted based on
    /// Offset account type and the common tax codes between the Sales tax/Item sales tax groups.
    /// </returns>
    /// <remarks>
    /// This method is called when LedgerJournalTrans data source write method, leaveRecord method and TaxGroup/TaxItemGroup modified methods.
    /// </remarks>
    public boolean isAdditionalInfoToBeDeleted_MX()
    {
        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
        isVendorType          = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeVend(ledgerJournalTrans.OffsetAccountType);
        otherTypeNotAllowed   = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeNotAllowed(ledgerJournalTrans.OffsetAccountType);

        return (isVendorType || otherTypeNotAllowed || !isCommonTaxCodeMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetAddInfoFields_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To fill all the fields in the Additional tab when offsetType will be vend
    /// </summary>
    public void resetAddInfoFields_MX()
    {
        diotAddlInfoForNoVendorLedger_MX.Rfc                    = '';
        diotAddlInfoForNoVendorLedger_MX.Curp                   = '';
        diotAddlInfoForNoVendorLedger_MX.Name                   = '';
        diotAddlInfoForNoVendorLedger_MX.VendorType             = VendorType_MX::Blank;
        diotAddlInfoForNoVendorLedger_MX.ForeignTaxRegistration = '';
        diotAddlInfoForNoVendorLedger_MX.DiotCountryCode        = '';
        diotAddlInfoForNoVendorLedger_MX.Nationality            = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOperationType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To clear Operation type field when it is diabled.
    /// Enabling/disabling Operation type field depends on the selection of
    /// Account type, Offset account type, Tax group, Item tax group.
    /// </summary>
    /// <remarks>
    /// This method is called when any of the above mentioned fields are modified.
    /// </remarks>
    public void resetOperationType_MX()
    {
        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
        isVendorType          = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeVend(ledgerJournalTrans.OffsetAccountType);
        otherTypeNotAllowed   = DIOTAddlInfoForNoVendorLedger_MX::isOffsetTypeNotAllowed(ledgerJournalTrans.OffsetAccountType);

        if (!isVendorType && (otherTypeNotAllowed || !isCommonTaxCodeMarked))
        {
            ledgerJournalTrans.OperationType_MX = VendorOperationType_MX::Blank;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099GFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099GFields()
    {
        boolean canEdit;

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets()));

        tax1099GFields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099SFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099SFields()
    {
        boolean canEdit;

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()));

        tax1099SFields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEditTax1099</Name>
				<Source><![CDATA[
    void setAllowEditTax1099()
    {
        //Amounts on setup tab are not editable for 1099-S
        if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
        {
            tax1099Amount.allowEdit(false);
            fields1099_Tax1099StateAmount.allowEdit(false);
        }
        else
        {
            tax1099Amount.allowEdit(true);
            fields1099_Tax1099StateAmount.allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCorrectedTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Set the value of the corrected tax amount within caller form
    /// </summary>
    /// <param name="_correctedTaxAmountCur">
    ///     corrected tax amount from sales tax form.
    /// </param>
    /// <remarks>
    ///     Method is used to set the corrected tax amount to caller form
    /// </remarks>
    public void setCorrectedTaxAmount(TaxAmount _correctedTaxAmountCur)
    {
        ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,_correctedTaxAmountCur, true, false);
        correctedSalesTaxAmountCur = true;
        ledgerJournalTrans_ds.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDebCredProposal</Name>
				<Source><![CDATA[
    void setDebCredProposal(boolean _init)
    {
        if (_init)
            debCredProposal = DebCredProposal::None;
        if (debCredProposal != debCredProposalOld)
        {
            switch (debCredProposal)
            {
                case DebCredProposal::Credit  :
                    amountCurDebit.skip(true);
                    break;

                case DebCredProposal::Debit   :
                    amountCurCredit.skip(true);
                    break;

                case DebCredProposal::None    :
                    amountCurCredit.skip(false);
                    amountCurDebit.skip(false);
                    break;
            }
            debCredProposalOld = debCredProposal;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdEnabled_IN</Name>
				<Source><![CDATA[
    public void setTaxWithholdEnabled_IN()
    {
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).enabled(!ledgerJournalTransTaxExtensionIN.tcsGroup);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).enabled(!ledgerJournalTransTaxExtensionIN.tdsGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN    taxWithholdParameters;

        taxWithholdParameters = TaxWithholdParameters_IN::find();
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).visible(taxWithholdParameters.tdsActivate);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).visible(taxWithholdParameters.tcsActivate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        boolean isVendPayment = (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend);

        boolean isProject     = !(ledgerJournalTrans.ledgerJournalTable().JournalType == LedgerJournalType::Cost);

        totalBalance.visible(isProject);
        vendCashDiscTab.visible(isVendPayment);
        groupOverview.visible(isVendPayment);
        invoiceTab.visible(isVendPayment);
        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            tabLineTax1099.visible(isVendPayment);
        }
        approve_Approver.allowEdit(ledgerJournalTrans.Approved);
        if (!isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            taxAmountJournal.visible(!ledgerJournalTable.ledgerJournalName().TaxHideAmountFields);
        }

        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            if(ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                TaxDocumentLauncher.enabled(true);
            }
            else
            {
                TaxDocumentLauncher.enabled(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleTaxInformation_IN</Name>
				<Source><![CDATA[
    public void setVisibleTaxInformation_IN()
    {
        TaxParameters   taxParametersLoc = TaxParameters::find();
        withholdingTax_IN.visible(isIndiaWHTMarked);

        invoice_IN.visible(isIndiaIndirectTaxParameterMarked);
        cost_IN.visible(isIndiaIndirectTaxParameterMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No updates to the template settings are required.
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProjId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs a lookup on the string control that is passed in as a parameter.
    /// </summary>
    /// <param name="_ctrl">
    ///    The string control on which to perform the lookup.
    /// </param>
    /// <param name="_buffer">
    ///    The data to pass to the lookup form.
    /// </param>
    /// <remarks>
    ///    The <c>ProjtableLookup</c> form is used to display the lookup list for this string control.
    /// </remarks>
    private void lookupProjId(FormControl _ctrl, Common _buffer)
    {
        SegmentedEntryControl   segmentedEntryControl;
        Args                    args = new Args();
        FormRun                 formRun;

        args.name(formStr(ProjTableLookup));
        args.caller(_ctrl);
        args.record(_buffer);
        args.parmEnum(NoYes::No);

        formRun = classfactory.formRunClass(args);
        formRun.init();

        if (cdsLockingOptionExpenseJournals)
        {
            FormDataSource formDS = formRun.dataSource(1);
            QueryBuildDataSource qbds1 = formDS.queryBuildDataSource();
            QueryBuildDataSource qbds2 = qbds1.addDataSource(tableNum(ProjTable));
            qbds2.addLink(fieldNum(ProjProjectLookup, ProjId), fieldNum(ProjTable, ProjId));
            qbds2.joinMode(JoinMode::InnerJoin);
            qbds2.addRange(fieldNum(ProjTable, ProjDataSource)).value(SysQuery::value(0));
        }

        segmentedEntryControl = _ctrl as SegmentedEntryControl;
        segmentedEntryControl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProjectExternallyManaged</Name>
				<Source><![CDATA[
    private boolean validateProjectExternallyManaged(ProjId _projId)
    {
        boolean ret = true;

        if (cdsLockingOptionExpenseJournals)
        {
            if (Project::isProjectExternallyManaged(_projId))
            {
                ret = checkFailed(strfmt("@Proj:ProjCDSValueInvalidDueToExternal", "@Proj:ProjCDSExpenseJournals"));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableSalesTax</Name>
				<Source><![CDATA[
    private void enableSalesTax(LedgerJournalTransTaxExtension _ledgerJournalTransTaxExtension)
    {
        boolean overrideSalesTax = _ledgerJournalTransTaxExtension.OverrideSalesTax;
        LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(overrideSalesTax);
        LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(overrideSalesTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorChargedSalesTaxControl</Name>
				<Source><![CDATA[
    internal protected void updateVendorChargedSalesTaxControl()
    {
        if (isTaxIntegrationAccureUseTaxFlightEnabled)
        {
            boolean shouldVendorChargedSalesTaxVisible = this.shouldVendorChargedSalesTaxVisible();
            boolean shouldVendorChargedSalesTaxEditable = ledgerJournalTrans.isTaxIntegrationAccrueUseTaxEnabled();
            ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).visible(shouldVendorChargedSalesTaxVisible);
            ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).enabled(shouldVendorChargedSalesTaxEditable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAccrueSalesTaxTypeControl</Name>
				<Source><![CDATA[
    internal protected void updateAccrueSalesTaxTypeControl()
    {
        if (isTaxIntegrationAccureUseTaxFlightEnabled)
        {
            boolean shouldAccruedSalesTaxTypeVisiable = this.shouldVendorChargedSalesTaxVisible();
            ledgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, AccrueSalesTaxType)).visible(shouldAccruedSalesTaxTypeVisiable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldVendorChargedSalesTaxVisible</Name>
				<Source><![CDATA[
    private boolean shouldVendorChargedSalesTaxVisible()
    {
        return TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Project)
            && (ledgerJournalTrans.isVendLine());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>refreshBudgetControls</Name>
						<Source><![CDATA[
        public void refreshBudgetControls()
        {
            if (budgetCheckResultsImage.visible())
            {
                // Update the controls to display the latest values.
                ledgerJournalEngine.resetBudgetCheckResultsCache();
                budgetCheckResultsImage.update();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (!super())
            {
                // The LedgerJournalTrans' delete method requires an exception to be thrown
                // so that the transaction is aborted.
                throw Exception::Error;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = false;

            // If we are in the process of creating a new line on the grid we need to skip the super() for
            // validateWrite as it checks to see if fields that are marked as mandatory are set.  As we are
            // initializing a new record these fields are not yet set.
            //
            if (! isInCreate)
            {
                isValid = super();

                if (isValid && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
                {
                    isValid = false;
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            if (ledgerJournalTrans.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>exchRateTxt</Name>
						<Source><![CDATA[
        display ExchRateSecondTxt exchRateTxt()
        {
            return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
        /// </summary>
        /// <remarks>
        /// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c> and <c>LedgerJournalTrans_Project</c>.
        /// </remarks>
        public void write()
        {
            boolean isNewRecord = !ledgerJournalTrans.RecId; // Flag that indicates whether or not this is a new record. Used for clean-up purposes later.

            // <GEEPL>
            RefRecId serviceTariffNumber;
            // </GEEPL>

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // The kernel calls leaveRecord during the delete event which will cause this method to
                // be called if the user had made changes. This causes issues and must be special cased
                // until the behavior is changed.
                return;
            }

            try
            {
                ttsbegin;

                // Signal the start of the write event.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, null);
                ledgerJournalEngine.formMethodDataSourceWritePre();

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                // <GEEPL>
                serviceTariffNumber = taxServiceTariff.ServiceTariffNumber;
                // </GEEPL>

                // If super() is called directly, the client currently refreshes all of the linked datasources,
                // which causes the LedgerJournalTrans_Project datasource to be corrupted. The result is the
                // changes to the LedgerJournalTrans_Project table are not saved. The long term plan is to replace
                // the LedgerJournalTransEntityManager with unit of work.
                // super(); // the next line replaces this one
                ledgerJournalTrans.write();

                // <GIN>
                if (ledgerJournalTrans_ProjectTaxExtensionIN_ds.isNeeded())
                {
                    ledgerJournalTransTaxExtensionIN.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }
                // </GIN>

                // <GEEPL>
                // The service tariff relationship is lost during the super() call
                // from write since it is on a different data source. So, copy
                // the original value back in to ensure saving is done correctly.
                if (serviceTariffNumber && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
                {
                    taxServiceTariff.ServiceTariffNumber = serviceTariffNumber;
                    taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                    taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                }
                // </GEEPL>

                // <GCN>
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    ledgerJournalTrans.reread();
                }
                // </GCN>

                if (ledgerJournalTrans.isProjectTransaction())
                {
                    if (isTaxIntegrationEnabledForProj)
                    {
                        if (!LedgerJournalTransTaxExtension.RecId)
                        {
                            LedgerJournalTransTaxExtension.OverrideSalesTax = (LedgerJournalTransTaxExtension.OverrideSalesTax || ledgerJournalTable.OverrideSalesTax);
                            LedgerJournalTransTaxExtension.save(LedgerJournalTrans);
                        }
                        element.enableSalesTax(LedgerJournalTransTaxExtension);
                    }

                    // Synchronize, validate and write the project sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Project();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteProjectSibling(keepSalesPriceOnWrite);
                    if (correctedSalesTaxAmountCur)
                    {
                        LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, 0, false, true);
                        correctedSalesTaxAmountCur = false;
                    }
                    // <GIN>
                    if (ledgerJournalTrans_ProjectTaxExtensionIN_ds.isNeeded())
                    {
                        ledgerJournalTrans_ProjectTaxExtensionIN.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans_Project);
                    }
                    // </GIN>
                }
                else
                {
                    // If this is not a project transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a project transaction.
                    ledgerJournalTrans_Project.RecId = 0;
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    if (ledgerJournalTrans.isTax1099DetailTransaction())
                    {
                        // Synchronize, validate and write the Tax1099Detail sibling record. This call will throw
                        // an exception if validation fails. A snapshot of the current buffer is taken to support
                        // in-memory rollback of the buffer in the case the transaction is aborted.
                        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfTax1099Detail();
                        ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWrite1099Sibling();
                    }
                    else
                    {
                        // If this is not a 1099 transaction, and it had been, the super() call
                        // above should have deleted the sibling record in the database. Because of this,
                        // the RecId of the buffer needs to be cleared out so that it will be inserted if
                        // it gets changed back to being a 1099 transaction.
                        tax1099BoxDetail.RecId = 0;
                    }
                }

                // -----------------------------------------------------------------------------------

                if (isNewRecord && correctedTaxAmountCurEdited)
                {
                    ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans, correctedTaxAmountCur, true, false);
                }

                correctedTaxAmountCurEdited = false;

                ledgerJournalEngine.write(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    diotAddlInfoForNoVendorLedger_MX.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }

                ttscommit;

                // Refresh the budget controls after processing occurs on ttscommit
                this.refreshBudgetControls();

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();

                // We need to figure out if the current voucher is used and generate one if it is used.
                ledgerJournalEngine.forceNewVoucher(ledgerJournalTrans.Voucher);

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            super();

            if (ledgerJournalTable.JournalNum != journalNum)
            {
                // If the stored journalNum has become out of sync with the reference
                // to ledgerJournalTable, then we need to rerun initLedger. This
                // will occur when the user has switched journals on the parent form.
                element.initLedger();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            // <GIN>
            ProjTable projTable;
            // </Gin>
            if (ledgerJournalEngine.numberSeqFormHandlerJournal())
            {
                ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
            }

            super();

            ledgerJournalEngine.formMethodDataSourceCreatePost();
            ledgerJournalEngine.initValue(ledgerJournalTrans);

            correctedTaxAmountCur = 0;

            if (ledgerJournalTrans.OffsetLedgerDimension)
            {
                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.initFromOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.offsetAcctModified(ledgerJournalTrans, ledgerJournalTrans_Project);
            }

            // <GTE>
            projTable = ledgerJournalTrans.findProjTable();

            if (TaxIntegrationUtils::isTaxInformationEnabled() && projTable)
            {
                TransTaxInformationHelper::copyTransTaxInformation(projTable, ledgerJournalTrans);
            }
            // </GTE>
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalTransRange   = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
            ledgerJournalTransRange.value(strFmt('%1',0));

            ledgerJournalEngine = new LedgerJournalEngine_ProjectCost(element);
            journalFormTrans.datasourceInitPost(ledgerJournalTrans);

            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        void delete()
        {
            LedgerJournalTrans ledgerJournalTrans_Orig;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                // Signal that the entity delete event has started.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
                ledgerJournalTrans_Orig = ledgerJournalTrans.data();

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                if (!ledgerJournalTrans_Project_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                super();

                // -----------------------------------------------------------------------------------

                ledgerJournalEngine.delete(ledgerJournalTrans_Orig);

                // Signal that the entity delete event has finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();

                ttscommit;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();

                // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            // Ensure the record is written before any pre creation methods are called
            // We explictly call leaveRecord to account for scenarios where New is clicked or Ctrl-N is hit on an unsaved record

            this.leaveRecord();

            // This method is called when the new opens the form with no existing lines (as a new line is created)
            // or when the user creates a new line through Control N, using the new line icon or moving to a
            // new line on the grid.  In these scenarios we need to set a flag to let other method know that they
            // are being called during the create process.

            journalFormTrans.datasourceCreatePre();

            isInCreate = true;
            ledgerJournalEngine.preCreate(ledgerJournalTrans);
            keepSalesPriceOnWrite = false;

            super(append);

            if (ledgerJournalTrans.isProjectTransaction() && cdsLockingOptionExpenseJournals)
            {
                if (Project::isProjectExternallyManaged(ledgerJournalTrans.parmAccount()))
                {
                    ledgerjournaltrans.LedgerDimension = 0;
                }
            }

            if (ledgerJournalTrans.parmAccount() != '')
            {
                ledgerJournalEngine.accountNumModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, null);

                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    LedgerJournalTrans_ProjectTaxExtensionIN ledgerJourTrans_ProjTaxExtIN = ledgerJournalTrans_Project.ledgerJournalTrans_ProjectTaxExtensionIN();
                    ledgerJourTrans_ProjTaxExtIN.AssessableValue(ledgerJournalTrans_Project);
                    ledgerJournalTrans_Project.packLedgerJournalTrans_Project_IN(ledgerJourTrans_ProjTaxExtIN);
                }
                // </GIN>

                element.setDebCredProposal(false);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalTrans_ds.refresh();

                element.setVisible();
                element.enableProjSalesCurrencyId();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

            isInCreate = false;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            ledgerJournalEngine.active(ledgerJournalTrans);
            ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_project.SalesPrice);
            priorOffsetAccountType = ledgerJournalTrans.OffsetAccountType;

            element.setVisible();
            element.enableProjSalesCurrencyId();
            // <GEECZ>
            element.initIntracomVATDueDate();
            // </GEECZ>

            journalFormTrans.datasourceActivePost();

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                element.setAllowEditTax1099();
                element.setAllowEdit1099GFields();
                element.setAllowEdit1099SFields();
            }

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                element.setTaxWithholdEnabled_IN();
            }
            // </GIN>
            if (ledgerJournalTrans.RecId !=0)
            {
                keepSalesPriceOnWrite = true;
            }

            element.setLedgerJournalTransAccountCurrencyCode();
            element.setLedgerJournalTransAccountTransCompany();
            element.setLedgerJournalTransAccountTransDate();

            LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = MainAccount::getMainAccountRecIdFromLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension);
            }

            element.lockOffsetAccount();

            if (ledgerJournalTrans.isProjectTransaction())
            {
                LedgerJournalTrans journalTrans = this.cursor();
                boolean existingRecord = journalTrans.RecId;
                boolean isRecordExternallyManaged = Project::isProjectExternallyManaged(journalTrans.getProjectId());
                boolean lockFieldsForExpenseJournals = cdsLockingOptionExpenseJournals && isRecordExternallyManaged;

                ledgerJournalTrans_ds.allowDelete(existingRecord ? !lockFieldsForExpenseJournals : true);
                ledgerJournalTrans_ds.allowEdit(existingRecord ? !lockFieldsForExpenseJournals : true);

                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
                {
                    LedgerJournalTransTaxExtension taxExtension = ledgerJournalTrans.ledgerJournalTransTaxExtension();
                    element.enableSalesTax(taxExtension);
                }

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxAmountJournal</Name>
						<Source><![CDATA[
        display TaxAmountJournal taxAmountJournal(LedgerJournalTrans _ledgerJournalTrans)
        {
            TaxAmountJournal localTaxAmountJournal;

            localTaxAmountJournal = ledgerJournalEngine.taxAmountJournal(_ledgerJournalTrans);
            if (localTaxAmountJournal == 0)
            {
                correctedTaxAmount.enabled(false);
                if (correctedTaxAmountCur != 0)
                {
                    correctedTaxAmountCur = 0;
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, 0);
                }
            }
            else
            {
                correctedTaxAmount.enabled(true);
            }

            return localTaxAmountJournal;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes    res = -1;
            #resAppl;

            if (journalFormTrans.parmCheckPostResults().errorExists(_ledgerJournalTrans.Voucher))
            {
                res = imageListAppl.image(#ImageError);
            }
            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorLog</Name>
						<Source><![CDATA[
        display LogTxt errorLog()
        {
            return journalFormTrans.parmCheckPostResults().errorLog(ledgerJournalTrans.Voucher);
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedDateTime</Name>
						<Source><![CDATA[
        display JournalPostedDateTime postedDateTime()
        {
            return ledgerJournalEngine.postedDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>approvedBy</Name>
						<Source><![CDATA[
        display ApprovedByPersonnelNumber approvedBy()
        {
            return ledgerJournalEngine.approvedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>rejectedBy</Name>
						<Source><![CDATA[
        display UserId rejectedBy()
        {
            return ledgerJournalEngine.rejectedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reportedAsReadyBy</Name>
						<Source><![CDATA[
        display UserId reportedAsReadyBy()
        {
            return ledgerJournalEngine.reportedAsReadyBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalance</Name>
						<Source><![CDATA[
        display AmountMST journalBalance()
        {
            return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCredit</Name>
						<Source><![CDATA[
        display AmountMST journalCredit()
        {
            return ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebit</Name>
						<Source><![CDATA[
        display AmountMST journalDebit()
        {
            return ledgerJournalEngine.journalDebit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotal</Name>
						<Source><![CDATA[
        display AmountMST voucherTotal()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCredit</Name>
						<Source><![CDATA[
        display AmountMST voucherCredit()
        {
            return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebit</Name>
						<Source><![CDATA[
        display AmountMST voucherDebit()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>correctedTaxAmount</Name>
						<Source><![CDATA[
        edit TaxAmountJournal correctedTaxAmount(
            boolean             _set,
            LedgerJournalTrans  _ledgerJournalTrans,
            TaxAmountCur        _taxAmountCur)
        {
            TaxAmountCur    taxAmountCur = _taxAmountCur;

            if (_ledgerJournalTrans.RecId && !ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // This is not a new record and it's not in the LedgerJournalTrans entity's write event (LedgerJournalTrans_DS.write).

                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans);
                }
                else
                {
                    taxAmountCur = ledgerJournalEngine.correctedTaxAmount(_ledgerJournalTrans);
                }
            }
            else
            {
                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans);
                }
                else
                {
                    taxAmountCur = correctedTaxAmountCur;
                }
            }
            correctedTaxAmountCur = _taxAmountCur;
            if (_set)
            {
                correctedTaxAmountCurEdited = true;
            }

            return taxAmountCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBudgetCheckResultImage</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the budget check result value for the record.
        /// </summary>
        /// <returns>
        /// The budget check result value for the record.
        /// </returns>
        public display BudgetCheckResult displayBudgetCheckResultImage()
        {
            return ledgerJournalEngine.getBudgetCheckResult(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                //    super();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                //
                ledgerJournalEngine.amountCurCreditModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                //    super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                //
                ledgerJournalEngine.amountCurDebitModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                //    super();

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());

                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approved</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.initApprovedBy(ledgerJournalTrans);
                element.setVisible();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approver</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                HcmWorker ret;
                boolean isProject;

                ret = super(_formReferenceControl);

                isProject = ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project ||
                                        ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project;

                if (isProject && ret.RecId && !ProjWorkerLookup::validateWorker(ret.RecId, ledgerJournalTrans_Project))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                boolean isProject;

                isProject = ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project ||
                                        ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project;

                if (isProject)
                {
                    ret = ProjWorkerLookup::lookupWorker(_formReferenceControl, ledgerJournalTrans_Project);
                }
                else
                {
                    ret = super(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankAccountId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankCentralBankPurposeCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.bankCentralBankPurposeCodeModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankDepositVoucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.bankDepositVoucherModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                //    super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans, false);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.companyModified(ledgerJournalTrans, null);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                element.setLedgerJournalTransAccountTransCompany();

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.currencyModified(ledgerJournalTrans);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                element.setLedgerJournalTransAccountCurrencyCode();

                super();

                journalFormTrans.enableFieldsActive();

                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Project))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendAccount_PL</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.initFromCustVendVatRegNums_PL(ledgerJournalTrans);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                VendBankAccount::lookupBankAccount(_formControl,
                                                ledgerJournalTrans.parmAccount(),
                                                ledgerJournalTrans.Company,
                                                DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate,0));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DateCashDisc</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Invoice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.invoiceModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                //    super();

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ProjTable projTable = ledgerJournalTrans.findProjTable();

                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.accountNumModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                if (ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    ledgerJournalEngine.parmLedgerJournalTrans_Project(ledgerJournalTrans_Project);
                    ledgerJournalEngine.initDefaultDimension(ledgerJournalTrans);
                    ledgerJournalTrans.setOffsetLedgerDimension(ledgerJournalTable,
                                                            ledgerJournalTable.OffsetAccountType,
                                                            ledgerJournalTrans.getOffsetLedgerDimensionForLedgerType(ledgerJournalTable.OffsetLedgerDimension, ledgerJournalTrans.getOffsetCompany()));
                }

                //    super();

                debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, null, tax1099BoxDetail);

                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), true);

                element.setDebCredProposal(false);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalTrans_ds.refresh();

                element.setVisible();
                element.enableProjSalesCurrencyId();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEditTax1099();
                    element.setAllowEdit1099GFields();
                    element.setAllowEdit1099SFields();
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                // <GTE>
                if (TaxIntegrationUtils::isTaxInformationEnabled() && projTable)
                {
                    TransTaxInformationHelper helper = TransTaxInformationHelper::newHelper();
                    helper.updateTransTaxInformationFromProjTable(ledgerJournalTrans);
                    helper.updateTransTaxInformationFromProjTable(ledgerJournalTrans_Project);
                }
                // </GTE>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerVoucherType_CN</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                LedgerJournalACType ledgerJournalACType = this.getValue();

                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                //
                if (priorOffsetAccountType != ledgerJournalACType)
                {
                    priorOffsetAccountType = ledgerJournalACType;
                    ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                //  super();

                element.setVisible();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    element.deleteDIOTAdditionalinfo_MX();
                }

                if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    currentOffsetMainAccountId = LedgerJournalTrans_OffsetAccount.getValue(mainAccountDimensionAttributeRecId);
                }

                element.lockOffsetAccount();
                element.updateAccrueSalesTaxTypeControl();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, null);
                LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                //    super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.initFromOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);

                ledgerJournalEngine.offsetAcctModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_ds.refresh();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEditTax1099();
                    element.setAllowEdit1099GFields();
                    element.setAllowEdit1099SFields();
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    element.resetAddInfoFields_MX();
                    element.resetOperationType_MX();
                    element.enableDisableAddiotionalInfo_MX();
                    element.fillAddInfoFields_MX();
                }
                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>

                element.updateVendorChargedSalesTaxControl();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OperationType_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret
                    && diotAddlInfoForNoVendorLedger_MX.VendorType == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX ==  VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                if (ret
                    && ledgerJournalTrans.findVendForOffset().VendorType_MX == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX ==  VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Payment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                if (!ledgerJournalTrans)
                {
                    ledgerJournalTrans_DS.write();
                }
                ledgerJournalEngine.calcPaymentFee(ledgerJournalTrans);
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymSpec</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!ledgerJournalTrans)
                {
                    ledgerJournalTrans_DS.write();
                }
                ledgerJournalEngine.calcPaymentFee(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PostingProfile</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Debug::assert(ledgerJournalTrans.AccountType == LedgerJournalACType::Project);
                Debug::assert(ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend);
                Debug::assert(ledgerJournalTrans.OffsetCompany == ledgerJournalTrans.Company || ledgerJournalTrans.OffsetCompany == '');

                VendLedger::lookupPostingProfile(_formControl, _filterStr, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Prepayment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.prepaymentModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                //    super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Tax1099Fields</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                    element.setAllowEditTax1099();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxGroupHeading::taxGroupLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerjournaltrans_ds.refresh();

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    if (element.isAdditionalInfoToBeDeleted_MX())
                    {
                        element.deleteDIOTAdditionalinfo_MX();
                    }
                    element.resetOperationType_MX();
                    element.resetAddInfoFields_MX();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxItemGroupHeading::taxItemGrouplookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    if (element.isAdditionalInfoToBeDeleted_MX())
                    {
                        element.deleteDIOTAdditionalinfo_MX();
                    }
                    element.resetOperationType_MX();
                    element.resetAddInfoFields_MX();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
                ledgerJournalEngine.transDateModified(ledgerJournalTrans);

                element.setLedgerJournalTransAccountTransDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Triangulation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VatDueDate_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Project))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VATNumJournal</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::jumpRefVATNum(ledgerJournalTrans, element);
                }
                else
                {
                    super();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::lookupVATNum(_formControl, ledgerJournalTrans);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.formMethodDataSourceVoucherModified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher_CN</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // <GCN>
                if (ret
                    && chineseVoucher_CN)
                {
                    ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                }
                // </GCN>

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTransCashDisc</Name>
				<Methods>
					<Method>
						<Name>remainingAmount</Name>
						<Source><![CDATA[
        display AmountCur remainingAmount(VendTransCashDisc _vendTransCashDisc)
        {
            return ledgerJournalTrans.amount() - _vendTransCashDisc.CashDiscAmount;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Project</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Project.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Project.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            // <GIN>
            ProjTable projTable;
            // </GIN>
            super();

            ledgerJournalEngine.initValueProject(ledgerJournalTrans, ledgerJournalTrans_Project);

            // <GTE>
            projTable = ledgerJournalTrans.findProjTable();
            if (TaxIntegrationUtils::isTaxInformationEnabled()
                && projTable)
            {
                TransTaxInformationHelper::copyTransTaxInformation(projTable, ledgerJournalTrans_Project);
            }
            // </GTE>
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(ledgerJournalTrans_Project.ProjId), ProjParameters::find().BlockParentActivitySelection);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalTrans_Project.activityNumberModified();
                ledgerJournalEngine.projCategoryModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.setProjDefaultOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalEngine.projCategoryModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.setProjDefaultOffsetAccount(ledgerJournalTrans,ledgerJournalTrans_Project);

                // <GTE>
                if (TaxIntegrationUtils::isTaxInformationEnabled())
                {
                    TransTaxInformationHelper helper = TransTaxInformationHelper::newHelper();
                    helper.updateTransTaxInformationFromProjCategory(ledgerJournalTrans, ledgerJournalTrans_Project.CategoryId);
                    helper.updateTransTaxInformationFromProjCategory(ledgerJournalTrans_Project, ledgerJournalTrans_Project.CategoryId);
                }
                // </GTE>

                element.setVisible();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CostPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjTransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTrans.TransDate = ledgerJournalTrans_Project.ProjTransDate;
                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
                ledgerJournalEngine.transDateModified(ledgerJournalTrans);

                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                LedgerJournalTrans_Project_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalEngine.projQtyModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            /// <summary>
            /// Determines whether the input to the Resource field is a valid ResourceId or not.
            /// </summary>
            /// <param name = "_formReferenceControl">
            /// The form control that is bound to the Resource field.
            /// </param>
            /// <returns>
            /// The <c>HcmResource</c> record buffer that references the selected record.
            /// </returns>
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                ResourceView ret;
                boolean isProject;
                boolean validateResource;

                ResourceLookup resourceLookup;
                ProjParameters projParameters = ProjParameters::find();

                if (projParameters.ShowInactiveEmployees == NoYes::No)
                {
                    resourceLookup = ResourceLookup::newOnlyActiveResourcesWithinCompany();
                }
                else
                {
                    resourceLookup = ResourceLookup::newAllResourcesWithinCompany();
                }

                ret = super(_formReferenceControl);

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (projParameters.ValidationEmplProj == ProjValParameter::Mandatory)
                {
                    validateResource = !ResourceLookup::validateResource(ret.RecId, ledgerJournalTrans_Project);
                }
                else
                {
                    validateResource = !resourceLookup.validate(ret.RecId);
                }

                if (isProject && ret.RecId && validateResource)
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            /// Opens the resource lookup.
            /// </summary>
            /// <param name = "_formReferenceControl">
            /// The form control that is bound to the Resource field.
            /// </param>
            /// <returns>
            /// The <c>HcmResource</c> record buffer that references the selected record.
            /// </returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                boolean isProject;

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (isProject)
                {
                    ret = ResourceLookup::lookupResource(_formReferenceControl, ledgerJournalTrans_Project);
                }
                else
                {
                    ret = super(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Resets fields on modified.
            /// </summary>
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ProjPriceParameters projPriceParameters = element.initializeProjectPriceParameters(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project.CostPrice = ProjCostPriceExpense::findCostPriceByPriceParameters(projPriceParameters);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.parmLedgerJournalTrans_Project(ledgerJournalTrans_Project);
                ledgerJournalEngine.initDefaultDimension(ledgerJournalTrans);
                ledgerJournalEngine.setProjDefaultOffsetAccount(ledgerJournalTrans,ledgerJournalTrans_Project);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesCurrencyId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                super();

                ledgerJournalEngine.parmSalesPrice(ledgerJournalTrans_Project.SalesPrice);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                keepSalesPriceOnWrite = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            void jumpRef()
            {
                ProjCostTrans::jumpRefTransId(ledgerJournalTrans, element);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>DIOTAddlInfoForNoVendorLedger_MX</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            if (element.isAdditionalInfoToBeDeleted_MX())
            {
                element.deleteDIOTAdditionalinfo_MX();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean  ret;

            ret = super();

            if (ret)
            {
                ret = diotAddlInfoForNoVendorLedger_MX.checkMandatoryFields(ledgerJournalTrans.TaxGroup,
                                                                            ledgerJournalTrans.TaxItemGroup,
                                                                            LedgerJournalType::Cost,
                                                                            ledgerJournalTrans.AccountType,
                                                                            ledgerJournalTrans.OffsetAccountType);
            }
            if (ret
                && ledgerJournalTrans.OffsetAccountType != LedgerJournalACType::Vend)
            {
                ret = TaxRegistrationValidator_MX::construct(diotAddlInfoForNoVendorLedger_MX).validateDIOTAdditionInfoTaxRegistration();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>VendorType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret
                    && diotAddlInfoForNoVendorLedger_MX.VendorType == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX         ==  VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableDisableVendorType_MX();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxServiceTariff</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) && (!taxServiceTariff.ParentRecId || !taxServiceTariff.ParentTableId))
            {
                // Write can cause the child data source to lose it's foreign key values so restore them.
                taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                taxServiceTariff_ds.refresh();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>Tax1099BoxDetail</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                super();

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
                {
                    if (tax1099BoxDetail.Tax1099BuyersTax == 0.0)
                    {
                        warning(strFmt("@SPS14","@PublicSector:Tax1099S6BuyersPart"));
                    }

                    if (ledgerJournalTrans.Tax1099Amount == 0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::Yes)
                    {
                        warning(strFmt("@SPS18","@SYS23907","@SPS1066"));
                    }
                }

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets()))
                {
                    if (tax1099BoxDetail.Tax1099TaxYear > year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) && tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 15))
                    {
                        warning("@SPS2");
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid;
            ;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                isValid = super();

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
                {
                    if (isValid && ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc =="")))
                    {
                        isValid = checkFailed("@SPS3");
                    }
                }

                else if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets()))
                {
                    if (isValid && ((tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))-15) || tax1099BoxDetail.Tax1099TaxYear > (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10))))
                    {
                        isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) - 15), int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)));
                    }
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            ProjTable projTable = ledgerJournalTrans.findProjTable();

            super();

            // <GTE>
            if (TaxIntegrationUtils::isTaxInformationEnabled())
            {
                ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = LedgerJournalTrans.RecId;

                TransTaxInformationHelper::copyTransTaxInformation(projTable, LedgerJournalTrans);
            }
            // </GTE>
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TCSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tcsGroup, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TDSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tdsGroup, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_ProjectTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (isTaxIntegrationEnabledForProj)
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (isTaxIntegrationEnabledForProj)
            {
                LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OverrideSalesTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableSalesTax(LedgerJournalTransTaxExtension);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                fieldError.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                fieldError.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markReportAsReady();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonApprove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markApproved();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.markRejected();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTransSource</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                try
                {
                    Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnCost), element.getShowTax(), ledgerJournalTrans, element);
                }
                finally
                {
                    if (isTaxIntegrationEnabledForProj)
                    {
                        LedgerJournalTrans_DS.reread();
                        LedgerJournalTrans_DS.refresh();
                    }
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxDocumentLauncher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            this.parameters(classStr(TaxableDocumentDescriptorGeneralJournal));
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonWithholdTax_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdTrans_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (ledgerJournalTrans.isProjectTransaction())
            {
                element.lookupProjId(ledgerJournalTrans_AccountNum, ledgerJournalTrans);
            }
            else
            {
                if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
                {
                    super();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            RecId projRecId,smmActivityParentLink;
            str currentActivityNumber;

            ret = super();

            currentActivityNumber = ledgerJournalTrans_ActivityNumber.text();

            if (currentActivityNumber != '')
            {
                projRecId = ProjTable::find(ledgerJournalTrans_Project.ProjId).RecId;
                smmActivityParentLink = smmActivityParentLinkTable::findByActivityAndParent(currentActivityNumber, smmActivityParentType::Project, projRecId, tableNum(ProjTable)).RecId;

                if (smmActivityParentLink == 0)
                {
                    ledgerJournalTrans_Project.ActivityNumber = '';
                    ledgerJournalTrans_ActivityNumber.update();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();
        
            if (ret && ledgerJournalTrans.isProjectTransaction())
            {
                ret = element.validateProjectExternallyManaged(this.currentSegmentText());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTransTaxExtension_AccrueSalesTaxType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.updateVendorChargedSalesTaxControl();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (ledgerJournalTrans.isProjectTransaction())
            {
                element.lookupProjId(ledgerJournalTrans_AccountNum1, ledgerJournalTrans);
            }
            else
            {
                if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
                {
                    super();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();
        
            if (ret && ledgerJournalTrans.isProjectTransaction())
            {
                ret = element.validateProjectExternallyManaged(this.currentSegmentText());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount1, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>fieldExchRate</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group1_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (ledgerJournalTrans.isProjectTransaction())
            {
                element.lookupProjId(group1_AccountNum, ledgerJournalTrans);
            }
            else
            {
                if (!ledgerJournalEngine.accountNumLookup(group1_AccountNum, ledgerJournalTrans))
                {
                    super();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();
        
            if (ret && ledgerJournalTrans.isProjectTransaction())
            {
                ret = element.validateProjectExternallyManaged(this.currentSegmentText());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjectTransaction_ProjTransId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ProjCostTrans::jumpRefTransId(ledgerJournalTrans, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdditionalInfo_MX</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            if (!DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup))
            {
                element.resetAddInfoFields_MX();
                element.resetOperationType_MX();
            }

            element.fillAddInfoFields_MX();
            element.enableDisableAddiotionalInfo_MX();
            diotAddlInfoForNoVendorLedger_MX_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_VendorType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            element.fillAddInfoFields_MX();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_ForeignTaxRegistration</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            element.fillAddInfoFields_MX();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_DiotCountryCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            element.fillAddInfoFields_MX();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_Nationality</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            element.fillAddInfoFields_MX();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OldLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<CounterField>LineNum</CounterField>
			<Index>NumVoucherIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTransCashDisc</Name>
			<Table>VendTransCashDisc</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Manual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Project</Name>
			<Table>LedgerJournalTrans_Project</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPwp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReadyForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DIOTAddlInfoForNoVendorLedger_MX</Name>
			<Table>DIOTAddlInfoForNoVendorLedger_MX</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Curp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiotCountryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Nationality</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxServiceTariff</Name>
			<Table>TaxServiceTariff</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceTariffNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Tax1099BoxDetail</Name>
			<Table>Tax1099BoxDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099AddressorLegalDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099BuyersTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099DateOfClosing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099PropertyOrServices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxWithheld</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TaxYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TradeOrBusiness</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtensionIN</Name>
			<Table>LedgerJournalTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_ProjectTaxExtensionIN</Name>
			<Table>LedgerJournalTrans_ProjectTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans_Project</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans_Project</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtension</Name>
			<Table>LedgerJournalTransTaxExtension</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumTableType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS3096</Caption>
		<DataSource xmlns="">LedgerJournalTrans</DataSource>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLedgerJourTransProjCost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LedgerJourTransCost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPostCost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonPostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PostJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostLJTransCost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransCost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS6098</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>AccountDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>LedgerJourTransDimLedgerJourTransCost</MenuItemName>
								<Text>@SYS138491</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCourse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonApprove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TaxTransSource</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>TaxTransSourceLedgerJournalTrnCost</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TaxDocumentLauncher</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>TaxDocumentLauncher</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ButtonWithholdTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1268967609</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>TaxWithholdTmpWorkTrans_IN</MenuItemName>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TaxWithholdTrans_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1268967609</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>TaxWithholdTrans_IN</MenuItemName>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TaxGSTEditTaxInformation_MY</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonVoucherTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerTransVoucher1</MenuItemName>
										<SaveRecord>No</SaveRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonBalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerBalanceControlLdgrJourTrnCost</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BudgetCheckResultsInquiry</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BudgetCheckResults</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Print_MenuButton</Name>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JounalDetails</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TradeAgreement</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PriceDisc</ConfigurationKey>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SalesPriceExpense</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjSalesPriceCost</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS13768</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TaxInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransTaxInformation_Cost</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TransTaxInformation</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS6893</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransTaxInformation_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<MenuItemName>TransTaxInformation</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@Proj:Invoice</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS33614</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverView</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>OverViewGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>226050910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS16658</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>339076365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_ProjectDate</Name>
										<ElementPosition>395589092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransDate</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>452101820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS4534</Label>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ActivityNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>678152730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CategoryId</Name>
										<ElementPosition>791178185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1017229095</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_ProjQty</Name>
										<ElementPosition>1130254550</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CurrencyCode</Name>
										<ElementPosition>1243280005</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_CostPrice</Name>
										<ElementPosition>1356305460</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>CostPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_SalesPrice</Name>
										<ElementPosition>1469330915</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>SalesPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ProjStatusId</Name>
										<ElementPosition>1582356370</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType</Name>
										<ElementPosition>1695381825</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_LedgerVoucherType_CN</Name>
										<ElementPosition>1700091219</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN</Name>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1808407280</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>fieldError</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2034458190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>12</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<Label>@SYS2515</Label>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<VisibleCols>8</VisibleCols>
								<VisibleColsMode>Fixed</VisibleColsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupOverview</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupInvoice</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_Invoice</Name>
												<ElementPosition>477218588</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Invoice</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>GroupInvoice_Due</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Due</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_Payment</Name>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Payment</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_PaymId</Name>
												<ElementPosition>1193046470</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>PaymId</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_VATNumJournal</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>VATNumJournal</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_EnterpriseNumber</Name>
												<ElementPosition>1908874352</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>EnterpriseNumber</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_PurchIdRange</Name>
												<ElementPosition>1670265058</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>PurchIdRange</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_CFDIUUID_MX</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>CFDIUUID_MX</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_InvoiceSeries_MX</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceSeries_MX</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<DataGroup>Invoice</DataGroup>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupTax</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_TaxGroup1</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxGroup</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_TaxItemGroup2</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxItemGroup</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>taxAmountJournal1</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>taxAmountJournal</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
												<Label>@SYS128996</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>correctedTaxAmount</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>correctedTaxAmount</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
												<Label>@SYS128972</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>LedgerJournalTransTaxExtension_AccrueSalesTaxType</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccrueSalesTaxType</DataField>
												<DataSource>LedgerJournalTransTaxExtension</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>LedgerJournalTransTaxExtension_VendorChargedSalesTax</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>VendorChargedSalesTax</DataField>
												<DataSource>LedgerJournalTransTaxExtension</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS22916</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCashDiscount</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CashDiscCode</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CashDiscCode</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>VirtualCashDiscDate</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DateCashDisc</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>VirtualCashDiscAmount</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CashDiscAmount</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS4376</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupDocument</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CopyOfDocumentNum</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DocumentNum</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>CopyOfDocumentDate</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DocumentDate</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<DataGroup>Document</DataGroup>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1375731710</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN1</Name>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Transfer</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transfer</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS5711</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Account</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType1</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt1</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS2355</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTransTaxExtension_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_VatDueDate_W</Name>
										<ElementPosition>1503238551</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTransIntraComVATDueDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxAmountJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>TaxAmountJournal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS5878</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountInfo</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType1</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS11162</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>fieldTriangulation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS12227</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Description</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>crossrate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>crossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>exchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxt</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS6303</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithholdingTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TCSGroup_IN</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TDSGroup_IN</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS33817</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Cost_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1942961394</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AssessableValue_IN</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_MaximumRetailPrice_IN</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS13774</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrencyAndDescription</Name>
								<ElementPosition>1738439142</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<Breakable>No</Breakable>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectTab</Name>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>1677721597</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectIdentification</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Group1_TransDate</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransDate</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<Label>@SYS54242</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group1_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS4534</Label>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group1_ProjActivityNumber</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group1_ProjCategoryId</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Resource2</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group1_ProjLinePropertyId</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Correction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>Correction</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS89920</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTransaction</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_ProjTransId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_Txt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS15191</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectCostPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjCostPrice_ProjQty</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjCostPrice_CostPrice</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjSalesPrice_ProjSalesCurrencyId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesCurrencyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjSalesPrice_SalesPrice</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>SalesPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTax</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTax_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTax_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1932735281</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_ProjectTaxExtensionIN_AssessableValue</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTrans_ProjectTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_ProjectTaxExtensionIN_MaximumRetailPrice</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTrans_ProjectTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS14204</Caption>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS4534</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>VendCashDiscTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1979711486</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>536870911</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@sys60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>VendTransCashDisc</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridCashDisc</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransCashDisc_CashDiscdate</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscdate</DataField>
										<DataSource>VendTransCashDisc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransCashDisc_CashDiscAmount</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingAmount</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RemainingAmount</DataMethod>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>VendTransCashDisc</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4376</Caption>
						<DataSource>VendTransCashDisc</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InvoiceTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2046820350</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PostingProfile</Name>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PostingProfile</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfile</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_SettleVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS12919</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice</Name>
								<ElementPosition>644245092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CopyOfInvoice</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CopyOfDue</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Due</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CopyOfPayment</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Payment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CopyOfPaymId</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VATNumJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_EnterpriseNumber</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EnterpriseNumber</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CopyOfPurchIdRange</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>PurchIdRange</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_CFDIUUID_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIUUID_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_InvoiceSeries_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceSeries_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Invoice</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document</Name>
								<ElementPosition>858993456</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocumentNum</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocumentDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Document</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approve</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Approve_Approver</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Approve_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Approved</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Approved</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Approve_InvoiceReleaseDate</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Approve_ReleaseDateComment</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDateComment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Approve</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields</Name>
								<ElementPosition>1288490184</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields_Tax1099Fields</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099Amount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>805306366</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Fields1099_Tax1099State</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>1207959549</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Fields1099_Tax1099StateAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>1610612732</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentGroup</Name>
								<ElementPosition>1503238548</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymMode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymSpec</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS828</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ThirdPartyBank</Name>
								<ElementPosition>1717986912</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ThirdPartyBank_CustVendBankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendBankAccountId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>ThirdPartyBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VendInvoiceDeclaration</Name>
								<ElementPosition>1932735276</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS_InvoiceDeclarationId</Name>
												<DataRelationPath>InvoiceDeclarationId_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>VendInvoiceDeclaration_IS</ReferenceField>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>VendInvoiceDeclaration</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VatRegister_PL</Name>
								<ElementPosition>2145386494</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendAccount_PL</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendAccount_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_Addressing_PL</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Addressing_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_VATNumJournal</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendName_PL</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendName_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VatRegister_PL_VatDueDate_W</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VatRegister_PL_IntraComVATDueDate_W</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_TaxPeriodPaymentCode_PL</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxPeriodPaymentCode_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxServiceTariffNumber</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxServiceTariffNumber_ServiceTariffId_PL</Name>
												<DataRelationPath>ServiceTariffNumber_PL</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TaxServiceTariff</DataSource>
										<Label>@GLS115893</Label>
										<ReferenceField>ServiceTariffNumber</ReferenceField>
										<ReplacementFieldGroup>ServiceTariffId</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12128</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>History</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentJournal</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReportedAsReadyBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22056</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovedBy1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ApprovedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RejectedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostedDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PostedDateTime</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ErrorLog</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorLog</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22915</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS24582</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterCompany</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignCompany</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS3805</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Cust</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_LoadingDate</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LoadingDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS302</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabLineTax1099</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields1</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields1_Tax1099Fields</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields1_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>g1099Fields1_Tax1099State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099StateAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099GFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Tax1099GFields_Tax1099TaxYear</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TaxYear</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<LimitText>4</LimitText>
										<LimitTextMode>Fixed</LimitTextMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099GFields_Tax1099TradeOrBusiness</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TradeOrBusiness</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SPS1093</Caption>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099SFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099S</ConfigurationKey>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Tax1099SFields_Tax1099DateOfClosing</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099DateOfClosing</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099SFields_Tax1099AddressorLegalDesc</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099AddressorLegalDesc</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099SFields_Tax1099PropertyOrServices</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099PropertyOrServices</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099SFields_Tax1099BuyersTax</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099BuyersTax</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SPS1102</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118159</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdditionalInfo_MX</Name>
						<CountryRegionCodes>MX</CountryRegionCodes>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DiotInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DiotInformation_OperationType_MX</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OperationType_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>DiotInformation_MX</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification1</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_VendorType</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendorType</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Rfc</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Rfc</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Curp</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Curp</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Name</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS71494</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Foreign</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_ForeignTaxRegistration</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignTaxRegistration</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_DiotCountryCode</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiotCountryCode</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Nationality</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Nationality</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS313064</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS106810</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Balances</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalBalance</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalBalance</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalBalance</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherTotal</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherTotal</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS5804</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DebitBalance</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalDebit</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalDebit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherDebit</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherDebit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS24011</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CreditBalance</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalCredit</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalCredit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherCredit</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherCredit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS24012</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BudgetCheckResultsIndicatorGroup</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>BudgetCheckResultsImage</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<ExtendedStyle>budgetCheckResult_status</ExtendedStyle>
								<PreviewPartRef>BudgetCheckResultPreview</PreviewPartRef>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayBudgetCheckResultImage</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<Items />
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS342081</Caption>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<DataSource>LedgerJournalTrans</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>