<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTransApprove</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTransApprove extends FormRun implements TaxIFormShowTax, IFormRefreshable, LedgerILedgerJournalEngineProvider, LedgerIJournalFormRefreshable, LedgerIJournalFormCache, LedgerIJournalCashDiscount, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    LedgerJournalEngine_VendApprove ledgerJournalEngine;

    LedgerJournalFormTrans journalFormTrans;
    LogisticsLocationRecId postalAddressLocation;

    DebCredProposal debCredProposal;

    LedgerJournalTable ledgerJournalTable;
    LedgerJournalId vendInvoicePoolJournalId;

    ImageListAppl_LedgerJournal imageListAppl;

    LedgerJournalTransEntityManager ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.

    RecId currentMainAccountId;
    RecId currentOffsetMainAccountId;
    LedgerJournalACType priorAccountType;
    HcmWorkerLookup hcmWorkerLookupActiveCurrentCompany;
    // <GIN>
    boolean countryRegion_IN;
    // </GIN>
    boolean countryRegion_MX;

    DueDate priorDueDate;

    // <GEEPL>
    #ISOCountryRegionCodes
    // </GEEPL>
    boolean keepSalesPriceOnWrite;

    boolean enableProjectOperationsIntegrationFeature;

    private boolean isTaxIntegrationEnabledForApproval = TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(LedgerJournalType::Approval);

    boolean isFinTagConfigurationSetForCurrent = FinTagConfiguration::isFinTagConfigurationSet(curExt());

}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the event that fires when focus is given to the form.
    /// </summary>
    /// <param name="_active">
    /// true if the form is active; otherwise, false.
    /// </param>
    public void activate(boolean _active)
    {
        super(_active);

        journalFormTrans.manageEditingModeForApprovedWFApproval();
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    boolean allowEdit()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        LedgerIJournalFormRefreshable callerForm = element.args().caller() as LedgerIJournalFormRefreshable;

        if (callerForm)
        {
            callerForm.refresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerRefresh</Name>
				<Source><![CDATA[
    void callerRefresh()
    {
        ledgerJournalEngine.clearTaxAmountCacheVoucher(ledgerJournalTrans.Voucher);
        ledgerJournalEngine.reduceInternalContainers(ledgerJournalTrans);
        ledgerJournalTrans_ds.refresh();
        ledgerJournalEngine.updateInternalContainers(ledgerJournalTrans);
        ledgerJournalTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose;

        try
        {
            // Signal that the close event is beginning.
            ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();

            canClose = super();

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
        }
        catch (Exception::UpdateConflict)
        {
            // This exception should not be handled by the generic handling logic below.

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::UpdateConflict;
        }
        catch
        {
            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::Error;
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountType</Name>
				<Source><![CDATA[
    boolean checkAccountType(LedgerJournalACType _accountType, boolean _isOffsetAccount = false)
    {
        if (_accountType == LedgerJournalACType::Vend)
        {
            warning("@SYS28496");

            if (_isOffsetAccount)
            {
                ledgerJournalTrans.OffsetAccountType = LedgerJournalACType::Ledger;
            }
            else
            {
                ledgerJournalTrans.AccountType = LedgerJournalACType::Ledger;
            }

            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        ledgerJournalEngine.close();
        ledgerJournalEngine.formMethodClosePre();
        journalFormTrans.formClosePre();
        element.bookRefresh(true);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFinancialTags</Name>
				<Source><![CDATA[
    private void initFinancialTags()
    {
        if (isFinTagConfigurationSetForCurrent)
        {
            FinTagReferenceGroupControllerContract primaryContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_FinTag,
                fieldNum(LedgerJournalTrans, Company));

            FinTagReferenceGroupController::registerReferenceGroup(primaryContract);
        }
        else
        {
            LedgerJournalTrans_FinTag.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables various buttons.
    /// </summary>
    public void enableButtonsActive()
    {
        boolean enabled = journalFormTrans.isJournalEnabled();
        boolean workflowEnabled = enabled;
        boolean isCanceled = ledgerJournalTrans.Cancel;

        if (journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            workflowEnabled = workflowEnabled && ledgerJournalTable.isWFUserPermittedToEdit(journalFormTrans.parmWorkflowWorkItemTable());
        }

        buttonFetchVouchers.enabled(workflowEnabled); // fetch voucher button
        buttonRemoveVouchers.enabled(workflowEnabled && vendTrans.RecId != 0); //remove vouchers button
        buttonUpdateAppJournal.enabled(enabled && !isCanceled); // purchase order journal
        buttonCancel.enabled(workflowEnabled && !isCanceled); //cancel button

        if (ledgerJournalEngine.approveActive() && !journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            enabled = enabled && (!ledgerJournalEngine.approved());
            buttonCancel.enabled(enabled && !isCanceled);
            buttonInvoicePostings.enabled(enabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDepreciationStartDate</Name>
				<Source><![CDATA[
    //
    // This method enables or disables the depreciation start date control.
    //
    void enableDepreciationStartDate()
    {
        AssetBook assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);

        if (assetBook &&
            (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj) &&
            !assetBook.depreciationStarted() &&
            assetBook.DepreciationConvention == AssetDepreciationConvention::None)

        {
            depreciationStartDate.enabled(true);
        }
        else
        {
            depreciationStartDate.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method manages whether certain data sources and fields are editable.
    /// </summary>
    void enableFieldsActive()
    {
        vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(vendTrans.allowEditCompanyBankAccountId());
        vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(vendTrans.allowEditThirdPartyBankAccountId());

        if (journalFormTrans.parmIsDisableDataSourceForWFApproval())
        {
            vendTrans_ds.allowCreate(false);
            vendTrans_ds.allowDelete(false);
            vendTrans_ds.allowEdit(false);

            ledgerJournaltransInvoice_ds.allowCreate(false);
            ledgerJournaltransInvoice_ds.allowDelete(false);
            ledgerJournaltransInvoice_ds.allowEdit(false);
            LedgerJournalTransTaxExtension_ds.allowEdit(false);
        }

        boolean workflowEnabled = journalFormTrans.isJournalEnabled();

        if (journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            workflowEnabled = workflowEnabled && ledgerJournalTable.isWFUserPermittedToEdit(journalFormTrans.parmWorkflowWorkItemTable());
        }

        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TransDate)).allowEdit(workflowEnabled);

        // <GEEPL>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
        {
            VatRegister_PL.allowEdit(true);
        }
        // </GEEPL>
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjSalesCurrencyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the project sales currency code can be edited.
    /// </summary>
    void enableProjSalesCurrencyId()
    {
        ProjId projId = ledgerJournalTrans.getProjectId();

        if (projId)
        {
            if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(projId).ProjInvoiceProjId))
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(false);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(true);
            }
            else
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(true);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillTmpTaxWorkTransFromRegister</Name>
				<Source><![CDATA[
    public TmpTaxWorkTrans fillTmpTaxWorkTransFromRegister(LedgerJournalTrans _ledgerJournalTrans)
    {
        Voucher originalVoucher;
        TransDate originalTransDate;
        Voucher voucherLocal;
        TransDate transDateLocal;
        LedgerJournalVoucherChanged ledgerJournalVoucherChangedLocal;
        AmountCur totalOffsetAmountCur;
        Factor factor;
        LedgerJournalTrans ledgerJournalTransFieldList;
        LedgerJournalTrans ledgerJournalTransOffsetFieldList;
        LedgerDimensionAccount accountNum;
        TaxTrans taxTrans;
        TmpTaxWorkTrans tmpTaxWorkTrans;
        TmpTaxWorkTrans tmpTaxWorkTransLocal;
        AmountCur allocatedTaxAmount;
        AmountCur taxTotalAmountCur;
        TaxAmountCur taxAmount;
        TmpTaxWorkTrans tmpTaxWorkTransLocalRounding;
        // <GIN>
        boolean isINTaxParametersEnabled = TaxParameters::checkTaxParameters_IN();
        Set taxTransRecIds = new Set(Types::Int64);
        // </GIN>

        TaxTransGeneralJournalAccountEntry taxTransGeneralJournalAccountEntryTax;
        TaxTransGeneralJournalAccountEntry taxTransGeneralJournalAccountEntryUseTaxPayable;
        TaxTransGeneralJournalAccountEntry taxTransGeneralJournalAccountEntryTransactionLineAccount;
        GeneralJournalAccountEntry generalJournalAccountEntryTax;
        GeneralJournalAccountEntry generalJournalAccountEntryUseTaxPayable;
        GeneralJournalAccountEntry generalJournalAccountEntryTransactionLineAccount;

        CurrencyCode reportingCurrency = Ledger::reportingCurrency(CompanyInfo::current());

        select sum (AmountCurDebit), sum(AmountCurCredit) from ledgerJournalTransOffsetFieldList
            where ledgerJournalTransOffsetFieldList.JournalNum == _ledgerJournalTrans.JournalNum
               && ledgerJournalTransOffsetFieldList.Voucher == _ledgerJournalTrans.Voucher
               && ledgerJournalTransOffsetFieldList.TransDate == _ledgerJournalTrans.TransDate
               && ledgerJournalTransOffsetFieldList.PurchLedgerPosting == ArrivalPostingType::Offset;

        totalOffsetAmountCur += ledgerJournalTransOffsetFieldList.AmountCurDebit -
                                ledgerJournalTransOffsetFieldList.AmountCurCredit;

        if (totalOffsetAmountCur)
        {
            select FromDate, FromVoucher, RecId from ledgerJournalVoucherChangedLocal
                where ledgerJournalVoucherChangedLocal.JournalNum == _ledgerJournalTrans.JournalNum &&
                      ledgerJournalVoucherChangedLocal.ToDate == _ledgerJournalTrans.TransDate &&
                      ledgerJournalVoucherChangedLocal.ToVoucher == _ledgerJournalTrans.Voucher;

            if (ledgerJournalVoucherChangedLocal.RecId)
            {
                originalTransDate = ledgerJournalVoucherChangedLocal.FromDate;
                originalVoucher = ledgerJournalVoucherChangedLocal.FromVoucher;
            }
            else
            {
                originalTransDate = _ledgerJournalTrans.TransDate;
                originalVoucher = _ledgerJournalTrans.Voucher;
            }

            voucherLocal = originalVoucher;
            transDateLocal = originalTransDate;

            while select * from taxTrans
                    where taxTrans.Voucher == voucherLocal &&
                        taxTrans.TransDate == transDateLocal &&
                        (taxTrans.ExemptTax == NoYes::No ||
                          (taxTrans.ExemptTax == NoYes::Yes &&
                           (taxTrans.TaxDirection == TaxDirection::TaxExemptPurchase ||
                            taxTrans.TaxDirection == TaxDirection::TaxExemptSales)))
                outer join * from taxTransGeneralJournalAccountEntryTax
                    where taxTrans.RecId == taxTransGeneralJournalAccountEntryTax.TaxTrans &&
                          taxTransGeneralJournalAccountEntryTax.TaxTransRelationship == TaxTransRelationshipType::Tax
                outer join RecId, LedgerDimension from generalJournalAccountEntryTax
                    where generalJournalAccountEntryTax.RecId == taxTransGeneralJournalAccountEntryTax.GeneralJournalAccountEntry
                outer join * from taxTransGeneralJournalAccountEntryUseTaxPayable
                    where taxTrans.RecId == taxTransGeneralJournalAccountEntryUseTaxPayable.TaxTrans &&
                          taxTransGeneralJournalAccountEntryUseTaxPayable.TaxTransRelationship == TaxTransRelationshipType::UseTaxPayable
                outer join LedgerDimension, RecId from generalJournalAccountEntryUseTaxPayable
                    where generalJournalAccountEntryUseTaxPayable.RecId == taxTransGeneralJournalAccountEntryUseTaxPayable.GeneralJournalAccountEntry
                outer join * from taxTransGeneralJournalAccountEntryTransactionLineAccount
                    where taxTrans.RecId == taxTransGeneralJournalAccountEntryTransactionLineAccount.TaxTrans &&
                          taxTransGeneralJournalAccountEntryTransactionLineAccount.TaxTransRelationship == TaxTransRelationshipType::TransactionLineAccount
                outer join RecId, LedgerDimension from generalJournalAccountEntryTransactionLineAccount
                    where generalJournalAccountEntryTransactionLineAccount.RecId == taxTransGeneralJournalAccountEntryTransactionLineAccount.GeneralJournalAccountEntry
            {
                // <GIN>
                if (isINTaxParametersEnabled)
                {
                    if (taxTrans.taxTrans_W().ApplyExcise_IN == NoYes::Yes
                        || taxTransRecIds.in(taxTrans.RecId))
                    {
                        continue;
                    }
                    else
                    {
                        taxTransRecIds.add(taxTrans.RecId);
                    }
                }
                // </GIN>
                tmpTaxWorkTrans.clear();
                tmpTaxWorkTrans.TaxCode = taxTrans.TaxCode;
                tmpTaxWorkTrans.TaxGroup = taxTrans.TaxGroup;
                tmpTaxWorkTrans.TaxItemGroup = taxTrans.TaxItemGroup;
                tmpTaxWorkTrans.Source = taxTrans.Source;
                tmpTaxWorkTrans.Voucher = _ledgerJournalTrans.Voucher;
                tmpTaxWorkTrans.TransDate = _ledgerJournalTrans.TransDate;
                tmpTaxWorkTrans.CalculationDate = _ledgerJournalTrans.TransDate;
                tmpTaxWorkTrans.TaxDirection = taxTrans.TaxDirection;
                tmpTaxWorkTrans.CurrencyCode = taxTrans.CurrencyCode;
                tmpTaxWorkTrans.SourceCurrencyCode = taxTrans.SourceCurrencyCode;
                tmpTaxWorkTrans.TaxAutogenerated = taxTrans.TaxAutogenerated;
                tmpTaxWorkTrans.euroTriangulation = taxTrans.euroTriangulation;
                tmpTaxWorkTrans.TaxAmount = taxTrans.TaxAmount;
                tmpTaxWorkTrans.TaxAmountCur = taxTrans.TaxAmountCur;
                tmpTaxWorkTrans.TaxAmountRep = taxTrans.TaxAmountRep;
                tmpTaxWorkTrans.TaxBaseAmount = taxTrans.TaxBaseAmount;
                tmpTaxWorkTrans.TaxBaseAmountCur = taxTrans.TaxBaseAmountCur;
                tmpTaxWorkTrans.TaxBaseAmountRep = taxTrans.TaxBaseAmountRep;
                tmpTaxWorkTrans.TaxInCostPrice = taxTrans.TaxInCostPrice;
                tmpTaxWorkTrans.TaxInCostPriceMST = taxTrans.TaxInCostPriceMST;
                tmpTaxWorkTrans.TaxInCostPriceCur = taxTrans.TaxInCostPriceCur;
                tmpTaxWorkTrans.TaxInCostPriceRep = taxTrans.TaxInCostPriceRep;
                tmpTaxWorkTrans.TaxInCostPriceRegulated = taxTrans.TaxInCostPriceRegulated;
                tmpTaxWorkTrans.SourceTaxAmountCur = taxTrans.SourceTaxAmountCur;
                tmpTaxWorkTrans.SourceBaseAmountCur = taxTrans.SourceBaseAmountCur;
                tmpTaxWorkTrans.SourceRegulateAmountCur = taxTrans.SourceRegulateAmountCur;
                tmpTaxWorkTrans.TaxBaseQty = taxTrans.TaxBaseQty;

                tmpTaxWorkTrans.LedgerDimension = taxTransGeneralJournalAccountEntryTax.getLedgerDimension(generalJournalAccountEntryTax);
                tmpTaxWorkTrans.TaxOffsetUseTaxLedgerDimension = taxTransGeneralJournalAccountEntryUseTaxPayable.getLedgerDimension(generalJournalAccountEntryUseTaxPayable);
                tmpTaxWorkTrans.OperationLedgerDimension = taxTransGeneralJournalAccountEntryTransactionLineAccount.getLedgerDimension(generalJournalAccountEntryTransactionLineAccount);
                tmpTaxWorkTrans.TaxReports = NoYes::Yes;
                tmpTaxWorkTrans.ExemptTax = taxTrans.ExemptTax;
                tmpTaxWorkTrans.TaxAutogenerated = taxTrans.TaxAutogenerated;
                tmpTaxWorkTrans.TaxOrigin = TaxOrigin::Tax;
                tmpTaxWorkTrans.HeadingTableId = taxTrans.HeadingTableId;

                if (isTaxIntegrationEnabledForApproval)
                {
                    tmpTaxWorkTrans.TaxID = taxTrans.TaxID;
                    tmpTaxWorkTrans.PartyTaxId = taxTrans.PartyTaxId;
                }

                //<GEEPL>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
                {
                    tmpTaxWorkTrans.TaxPeriodPaymentCode_PL = taxTrans.taxTrans_W().TaxPeriodPaymentCode_PL;
                }
                //</GEEPL>
                tmpTaxWorkTrans.insert();

                if (tmpTaxWorkTrans.TaxDirection == TaxDirection::UseTax)
                {
                    if (tmpTaxWorkTrans.TaxAutogenerated)
                        taxAmount = -tmpTaxWorkTrans.TaxInCostPrice;
                    else
                        taxAmount = -tmpTaxWorkTrans.TaxInCostPriceRegulated;
                }
                else
                {
                    if (!tmpTaxWorkTrans.TaxAutogenerated)
                        taxAmount = tmpTaxWorkTrans.SourceRegulateAmountCur - tmpTaxWorkTrans.TaxInCostPriceRegulated;
                    else
                        taxAmount = tmpTaxWorkTrans.SourceTaxAmountCur - tmpTaxWorkTrans.TaxInCostPrice;
                }
                taxTotalAmountCur += taxAmount;
            }

            while select LineNum, AmountCurDebit, AmountCurCredit, LedgerDimension, DefaultDimension, CurrencyCode, Triangulation, TableId, RecId
                from ledgerJournalTransFieldList
                where ledgerJournalTransFieldList.JournalNum == _ledgerJournalTrans.JournalNum
                   && ledgerJournalTransFieldList.Voucher == _ledgerJournalTrans.Voucher
                   && ledgerJournalTransFieldList.TransDate == _ledgerJournalTrans.TransDate
                   && ledgerJournalTransFieldList.NoEdit == NoYes::No
            {
                factor = ledgerJournalTransFieldList.amount() / totalOffsetAmountCur;
                accountNum = ledgerJournalTransFieldList.parmLedgerDimension();

                while select tmpTaxWorkTrans
                {
                    tmpTaxWorkTransLocal.clear();
                    tmpTaxWorkTransLocal.HeadingRecId = ledgerJournalTransFieldList.RecId;
                    tmpTaxWorkTransLocal.HeadingTableId = tmpTaxWorkTrans.HeadingTableId;
                    tmpTaxWorkTransLocal.SourceTableId = ledgerJournalTransFieldList.TableId;
                    tmpTaxWorkTransLocal.SourceRecId = ledgerJournalTransFieldList.RecId;
                    tmpTaxWorkTransLocal.TaxCode = tmpTaxWorkTrans.TaxCode;
                    tmpTaxWorkTransLocal.TaxGroup = tmpTaxWorkTrans.TaxGroup;
                    tmpTaxWorkTransLocal.TaxItemGroup = tmpTaxWorkTrans.TaxItemGroup;
                    tmpTaxWorkTransLocal.Source = tmpTaxWorkTrans.Source;
                    tmpTaxWorkTransLocal.Voucher = tmpTaxWorkTrans.Voucher;
                    tmpTaxWorkTransLocal.TransDate = tmpTaxWorkTrans.TransDate;
                    tmpTaxWorkTransLocal.TaxDirection = tmpTaxWorkTrans.TaxDirection;
                    tmpTaxWorkTransLocal.CurrencyCode = tmpTaxWorkTrans.CurrencyCode;
                    tmpTaxWorkTransLocal.SourceCurrencyCode = tmpTaxWorkTrans.SourceCurrencyCode;
                    tmpTaxWorkTransLocal.TaxAutogenerated = tmpTaxWorkTrans.TaxAutogenerated;
                    tmpTaxWorkTransLocal.euroTriangulation = tmpTaxWorkTrans.euroTriangulation;
                    tmpTaxWorkTransLocal.OperationLedgerDimension = tmpTaxWorkTrans.OperationLedgerDimension;
                    tmpTaxWorkTransLocal.TaxAmount = tmpTaxWorkTrans.TaxAmount;
                    tmpTaxWorkTransLocal.TaxAmountCur = tmpTaxWorkTrans.TaxAmountCur;
                    tmpTaxWorkTransLocal.TaxAmountRep = tmpTaxWorkTrans.TaxAmountRep;
                    tmpTaxWorkTransLocal.TaxBaseAmount = tmpTaxWorkTrans.TaxBaseAmount;
                    tmpTaxWorkTransLocal.TaxBaseAmountCur = tmpTaxWorkTrans.TaxBaseAmountCur;
                    tmpTaxWorkTransLocal.TaxBaseAmountRep = tmpTaxWorkTrans.TaxBaseAmountRep;
                    tmpTaxWorkTransLocal.TaxInCostPrice = tmpTaxWorkTrans.TaxInCostPrice;
                    tmpTaxWorkTransLocal.TaxInCostPriceMST = tmpTaxWorkTrans.TaxInCostPriceMST;
                    tmpTaxWorkTransLocal.TaxInCostPriceCur = tmpTaxWorkTrans.TaxInCostPriceCur;
                    tmpTaxWorkTransLocal.TaxInCostPriceRep = tmpTaxWorkTrans.TaxInCostPriceRep;
                    tmpTaxWorkTransLocal.TaxInCostPriceRegulated = tmpTaxWorkTrans.TaxInCostPriceRegulated;
                    tmpTaxWorkTransLocal.SourceTaxAmountCur = tmpTaxWorkTrans.SourceTaxAmountCur;
                    tmpTaxWorkTransLocal.SourceBaseAmountCur = tmpTaxWorkTrans.SourceBaseAmountCur;
                    tmpTaxWorkTransLocal.SourceRegulateAmountCur = tmpTaxWorkTrans.SourceRegulateAmountCur;
                    tmpTaxWorkTransLocal.TaxBaseQty = tmpTaxWorkTrans.TaxBaseQty;
                    tmpTaxWorkTransLocal.LedgerDimension = tmpTaxWorkTrans.LedgerDimension;
                    tmpTaxWorkTransLocal.TaxOffsetUseTaxLedgerDimension = tmpTaxWorkTrans.TaxOffsetUseTaxLedgerDimension;
                    tmpTaxWorkTransLocal.TaxReports = tmpTaxWorkTrans.TaxReports;
                    tmpTaxWorkTransLocal.ExemptTax = tmpTaxWorkTrans.ExemptTax;
                    tmpTaxWorkTransLocal.TaxAutogenerated = tmpTaxWorkTrans.TaxAutogenerated;
                    tmpTaxWorkTransLocal.TaxOrigin = tmpTaxWorkTrans.TaxOrigin;

                    if (isTaxIntegrationEnabledForApproval)
                    {
                        tmpTaxWorkTransLocal.TaxId = tmpTaxWorkTrans.TaxId;
                        tmpTaxWorkTransLocal.PartyTaxId = tmpTaxWorkTrans.PartyTaxId;
                    }
                    //<GEEPL>
                    tmpTaxWorkTransLocal.TaxPeriodPaymentCode_PL = tmpTaxWorkTrans.TaxPeriodPaymentCode_PL;
                    //</GEEPL>

                    factor = abs(factor);
                    tmpTaxWorkTransLocal.TaxAmount = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxAmount * factor);
                    tmpTaxWorkTransLocal.TaxAmountCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxAmountCur * factor, tmpTaxWorkTransLocal.CurrencyCode);
                    tmpTaxWorkTransLocal.TaxAmountRep = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxAmountRep * factor, reportingCurrency);
                    tmpTaxWorkTransLocal.TaxBaseAmount = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxBaseAmount * factor);
                    tmpTaxWorkTransLocal.TaxBaseAmountCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxBaseAmountCur * factor, tmpTaxWorkTransLocal.CurrencyCode);
                    tmpTaxWorkTransLocal.TaxBaseAmountRep = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxBaseAmountRep * factor, reportingCurrency);
                    tmpTaxWorkTransLocal.TaxInCostPrice = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxInCostPrice * factor, tmpTaxWorkTransLocal.SourceCurrencyCode);
                    tmpTaxWorkTransLocal.TaxInCostPriceMST = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxInCostPriceMST * factor);
                    tmpTaxWorkTransLocal.TaxInCostPriceCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxInCostPriceCur * factor, tmpTaxWorkTransLocal.CurrencyCode);
                    tmpTaxWorkTransLocal.TaxInCostPriceRep = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxInCostPriceRep * factor, reportingCurrency);
                    tmpTaxWorkTransLocal.TaxInCostPriceRegulated = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.TaxInCostPriceRegulated * factor, tmpTaxWorkTransLocal.SourceCurrencyCode);
                    tmpTaxWorkTransLocal.SourceTaxAmountCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.SourceTaxAmountCur * factor, tmpTaxWorkTransLocal.SourceCurrencyCode);
                    tmpTaxWorkTransLocal.SourceBaseAmountCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.SourceBaseAmountCur * factor, tmpTaxWorkTransLocal.SourceCurrencyCode);
                    tmpTaxWorkTransLocal.SourceRegulateAmountCur = CurrencyExchangeHelper::amount(tmpTaxWorkTransLocal.SourceRegulateAmountCur * factor, tmpTaxWorkTransLocal.SourceCurrencyCode);
                    tmpTaxWorkTransLocal.TaxBaseQty = tmpTaxWorkTransLocal.TaxBaseQty * factor;

                    tmpTaxWorkTransLocal.OperationLedgerDimension = accountNum;
                    tmpTaxWorkTransLocal.insert();

                    if (tmpTaxWorkTransLocal.TaxDirection == TaxDirection::UseTax)
                    {
                        if (tmpTaxWorkTransLocal.TaxAutogenerated)
                        {
                            taxAmount = -tmpTaxWorkTransLocal.TaxInCostPrice;
                        }
                        else
                        {
                            taxAmount = -tmpTaxWorkTransLocal.TaxInCostPriceRegulated;
                        }
                    }
                    else
                    {
                        if (!tmpTaxWorkTransLocal.TaxAutogenerated)
                        {
                            taxAmount = tmpTaxWorkTransLocal.SourceRegulateAmountCur - tmpTaxWorkTransLocal.TaxInCostPriceRegulated;
                        }
                        else
                        {
                            taxAmount = tmpTaxWorkTransLocal.SourceTaxAmountCur - tmpTaxWorkTransLocal.TaxInCostPrice;
                        }
                    }
                    allocatedTaxAmount += taxAmount;
                }
            }
        }

        // Insert an extra taxtransaction with the missing amounts for each tax code
        boolean isAdjustNeeded = TmpTaxWorkTrans::isAdjustNeededAfterAllocationToLine(tmpTaxWorkTrans, tmpTaxWorkTransLocal);

        if (isAdjustNeeded)
        {
            while select sum (TaxAmount),
                sum (TaxAmountCur),
                sum (SourceTaxAmountCur),
                sum (TaxBaseAmount),
                sum (TaxBaseAmountCur),
                sum (SourceBaseAmountCur),
                sum (SourceRegulateAmountCur),
                sum (TaxBaseQty),
                sum (TaxInCostPrice),
                sum (TaxInCostPriceMST),
                sum (TaxInCostPriceCur),
                sum (TaxInCostPriceRegulated)
            from tmpTaxWorkTrans
            group by TaxCode, TaxDirection, CurrencyCode, TaxAutogenerated
            {
                select sum (TaxAmount),
                    sum (TaxAmountCur),
                    sum (SourceTaxAmountCur),
                    sum (TaxBaseAmount),
                    sum (TaxBaseAmountCur),
                    sum (SourceBaseAmountCur),
                    sum (SourceRegulateAmountCur),
                    sum (TaxBaseQty),
                    sum (TaxInCostPrice),
                    sum (TaxInCostPriceMST),
                    sum (TaxInCostPriceCur),
                    sum (TaxInCostPriceRegulated)
                from tmpTaxWorkTransLocal
                where tmpTaxWorkTransLocal.TaxCode == tmpTaxWorkTrans.TaxCode &&
                      tmpTaxWorkTransLocal.TaxDirection == tmpTaxWorkTrans.TaxDirection &&
                      tmpTaxWorkTransLocal.CurrencyCode == tmpTaxWorkTrans.CurrencyCode &&
                      tmpTaxWorkTransLocal.TaxAutogenerated == tmpTaxWorkTrans.TaxAutogenerated;

                tmpTaxWorkTransLocalRounding.setTmpData(tmpTaxWorkTransLocal);

                select firstonly forupdate tmpTaxWorkTransLocalRounding
                    order by TaxAmountCur desc
                    where tmpTaxWorkTransLocalRounding.TaxCode == tmpTaxWorkTrans.TaxCode &&
                          tmpTaxWorkTransLocalRounding.TaxDirection == tmpTaxWorkTrans.TaxDirection &&
                          tmpTaxWorkTransLocalRounding.CurrencyCode == tmpTaxWorkTrans.CurrencyCode &&
                          tmpTaxWorkTransLocalRounding.TaxAutogenerated == tmpTaxWorkTrans.TaxAutogenerated;

                if (tmpTaxWorkTransLocalRounding.RecId)
                {
                    tmpTaxWorkTransLocalRounding.TaxAmount += tmpTaxWorkTrans.TaxAmount - tmpTaxWorkTransLocal.TaxAmount;
                    tmpTaxWorkTransLocalRounding.TaxAmountCur += tmpTaxWorkTrans.TaxAmountCur - tmpTaxWorkTransLocal.TaxAmountCur;
                    tmpTaxWorkTransLocalRounding.SourceTaxAmountCur += tmpTaxWorkTrans.SourceTaxAmountCur - tmpTaxWorkTransLocal.SourceTaxAmountCur;
                    tmpTaxWorkTransLocalRounding.TaxBaseAmount += tmpTaxWorkTrans.TaxBaseAmount - tmpTaxWorkTransLocal.TaxBaseAmount;
                    tmpTaxWorkTransLocalRounding.TaxBaseAmountCur += tmpTaxWorkTrans.TaxBaseAmountCur - tmpTaxWorkTransLocal.TaxBaseAmountCur;
                    tmpTaxWorkTransLocalRounding.SourceBaseAmountCur += tmpTaxWorkTrans.SourceBaseAmountCur - tmpTaxWorkTransLocal.SourceBaseAmountCur;
                    tmpTaxWorkTransLocalRounding.SourceRegulateAmountCur += tmpTaxWorkTrans.SourceRegulateAmountCur - tmpTaxWorkTransLocal.SourceRegulateAmountCur;
                    tmpTaxWorkTransLocalRounding.TaxBaseQty += tmpTaxWorkTrans.TaxBaseQty - tmpTaxWorkTransLocal.TaxBaseQty;
                    tmpTaxWorkTransLocalRounding.TaxInCostPrice += tmpTaxWorkTrans.TaxInCostPrice - tmpTaxWorkTransLocal.TaxInCostPrice;
                    tmpTaxWorkTransLocalRounding.TaxInCostPriceMST += tmpTaxWorkTrans.TaxInCostPriceMST - tmpTaxWorkTransLocal.TaxInCostPriceMST;
                    tmpTaxWorkTransLocalRounding.TaxInCostPriceCur += tmpTaxWorkTrans.TaxInCostPriceCur - tmpTaxWorkTransLocal.TaxInCostPriceCur;
                    tmpTaxWorkTransLocalRounding.TaxInCostPriceRegulated += tmpTaxWorkTrans.TaxInCostPriceRegulated - tmpTaxWorkTransLocal.TaxInCostPriceRegulated;
                    tmpTaxWorkTransLocalRounding.update();
                }
            }
        }

        delete_from tmpTaxWorkTransLocal
            where tmpTaxWorkTransLocal.SourceRecId != _ledgerJournalTrans.RecId;

        tmpTaxWorkTrans.setTmpData(tmpTaxWorkTransLocal);

        return tmpTaxWorkTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowTax</Name>
				<Source><![CDATA[
    public Tax getShowTax()
    {
        return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the basic initialization of the form.
    /// </summary>
    public void init()
    {
        #ISOCountryRegionCodes
        DimensionAutocompleteVendDefaultFilter dimensionAutocompleteVendDefaultFilter;

        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>
        countryRegion_MX = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]);

        journalFormTrans = new LedgerJournalFormTrans_Approve(element);

        enableProjectOperationsIntegrationFeature = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();

        super();

        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable = element.args().record();
        }

        ledgerJournalEngine.newJournalActive(ledgerJournalTable);

        dimensionAutocompleteVendDefaultFilter = new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType));
        dimensionAutocompleteVendDefaultFilter.setVendorAccountNumFilterSource(vendTrans_ds, fieldStr(VendTrans, AccountNum));

        LedgerJournalTrans_AccountNum.parmDimensionAutocompleteFilter(dimensionAutocompleteVendDefaultFilter);
        LedgerJournalTrans_AccountNum1.parmDimensionAutocompleteFilter(dimensionAutocompleteVendDefaultFilter);
        Group2_AccountNum.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_OffsetAccount1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        Group2_OffsetAccount.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));

        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
        ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, ledgerJournalTrans_Project_DS, tax1099BoxDetail_DS);

        LedgerJournalTrans_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
        LedgerJournalTrans_AccountNum1.parmJournalName(ledgerJournalTable.JournalName);
        Group2_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
        LedgerJournalTrans_OffsetAccount1.parmJournalName(ledgerJournalTable.JournalName);
        Group2_OffsetAccount.parmJournalName(ledgerJournalTable.JournalName);

        journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
        journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
        journalFormTrans.parmCtrlCourseButton(buttonCourse);
        journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
        journalFormTrans.parmCtrlApproveButton(buttonApprove);
        journalFormTrans.parmCtrlRejectButton(buttonReject);
        journalFormTrans.parmCtrlPostJournalButton(postJournal);
        journalFormTrans.parmCtrlPostAndTransferJournalButton(ledgerJournalPostTransfer);
        journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
        journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
        journalFormTrans.parmCtrlAccrualButton(ledgerJournalTransAccrual);
        journalFormTrans.parmCtrlSplitPostingButton(splitPosting);
        journalFormTrans.parmCtrlFunctionMenuButton(functions);
        journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
        journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
        journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
        journalFormTrans.parmCtrlErrorExists(ErrorExist);
        journalFormTrans.parmCtrlReportingExchRate(reportingfieldExchRate);
        journalFormTrans.parmCtrlReportingExchRateSecond(reportingfieldExchRateSecond);
        journalFormTrans.parmCtrlExchRate(ExchRate);
        journalFormTrans.parmCtrlExchRateSecond(fieldexchRateSecond);
        journalFormTrans.parmCtrlMassTransactionReversalButton(TransactionReversalDialog);
        journalFormTrans.parmCtrlMassTransactionReversalFailuresButton(TransactionReversalFailures);

        // <GIN>
        if (countryRegion_IN)
        {
            if (TaxParameters::find().vat_in)
            {
                journalFormTrans.parmCtrlDefermentSchedule_IN(defermentSchedule_IN);
            }
        }
        // </GIN>
        journalFormTrans.formInitPost();
        journalFormTrans.hideTaxAmountFields();

        vendInvoicePoolJournalId = LedgerJournalTable::findVendorInvoicePool().JournalNum;

        if (ledgerJournalTable.LedgerJournalInclTax)
        {
            fieldVoucherTotalWithTax.visible(false);
        }
        imageListAppl = new ImageListAppl_LedgerJournal();
        errorExist.imageList(imageListAppl.imageList());

        groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));

        ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
        element.enableDepreciationStartDate();

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            element.setVisible_IN();
            element.setTaxWithholdVisible_IN();
        }
        // </GIN>

        // Disable the company accounts field on the general tab if Intercompany transactions are disabled
        if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            ledgerJournalTrans_Company.allowEdit(false);
        }
        hcmWorkerLookupActiveCurrentCompany = HcmWorkerLookup::newOnlyActiveWorkersWithinCompany();
        codes_Listcode.visible(IntrastatParameters::find().euSalesListTransferPurchases);

        // 1099 Tab should only be visible in the US
        tax1099Tab.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]));

        // <GCN>
        if (LedgerParameters::isChineseVoucher_CN())
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).enabled(false);
        }
        else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
        }
        // </GCN>

        // <GTH>
        if (TaxThaiGovCertificationFeatureChecker::isTaxBranchEnabled())
        {
            this.initTaxBranchControls();
        }
        if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
        {
            this.updateDesignForAverageVAT();
        }
        // </GTH>
        keepSalesPriceOnWrite = false;

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            TaxDocumentLauncher.visible(true);
            TaxTransSource.visible(false);
            LedgerJournalTrans_TaxGroup1.visible(false);
            LedgerJournalTrans_TaxItemGroup1.visible(false);
            LedgerJournalTrans_TaxGroup.visible(false);
            LedgerJournalTrans_TaxItemGroup.visible(false);
            LedgerJournalTrans_TaxCode.visible(false);
        }

        if (TaxIntegrationUtils::isTaxInformationEnabled())
        {
            TransTaxInformation.visible(true);
        }
        // </GTE>

		this.initFinancialTags();

        overviewVendTrans.setFocus();

        if (isTaxIntegrationEnabledForApproval)
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntracomVATDueDate</Name>
				<Source><![CDATA[
    void initIntracomVATDueDate()
    {
        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, IntraComVATDueDate_W)).enabled(VendParameters::find().DocumentDateForIntracomVAT_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTaxBranchControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the status of controls that for Thailand Multiple Tax branches feature.
    /// </summary>
    public void initTaxBranchControls()
    {
        // For Thailand MTB controls based on sys fields, they are set as invisiable by default.
        // Needs to init their status here.
        displayTaxBranchDimension_TH.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalNum</Name>
				<Source><![CDATA[
    LedgerJournalId journalNum()
    {
        return LedgerJournalTable::findVendorInvoicePool().JournalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddressLocation</Name>
				<Source><![CDATA[
    public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = ledgerJournalTrans.RemittanceLocation)
    {
        if (!prmisDefault(_postalAddressLocation))
        {
            postalAddressLocation = _postalAddressLocation;
        }

        return postalAddressLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshLedgerJournalTrans_IN</Name>
				<Source><![CDATA[
    public void refreshLedgerJournalTrans_IN()
    {
        ledgerJournalTrans_ds.reread();
        ledgerJournalTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    void research()
    {
        ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

        ledgerJournalTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        element.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    public void clearCache(Voucher _voucher)
    {
        ledgerJournalEngine.clearTaxAmountCacheVoucher(_voucher, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashDiscount</Name>
				<Source><![CDATA[
    public void updateCashDiscount(Voucher _voucher)
    {
        if (_voucher == ledgerJournalTrans.Voucher)
        {
            ledgerJournalEngine.updateCashDisc(ledgerJournalTrans);
        }
        else
        {
            LedgerJournalTrans journalTrans = LedgerJournalTrans::find(ledgerJournalTable.JournalNum, _voucher, false);
            ledgerJournalEngine.updateCashDisc(journalTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099GFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099GFields()
    {
        boolean canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::IncomeTaxRefundsCreditsOffsets()));

        tax1099GFields.allowEdit(canEdit);

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::UnemploymentCompensation()));

        tax1099G1Fields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099SFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099SFields()
    {
        boolean canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::GrossProceeds()));
        tax1099SFields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDebCredProposal</Name>
				<Source><![CDATA[
    void setDebCredProposal(boolean _init)
    {
        if (_init)
        {
            debCredProposal = DebCredProposal::None;
        }

        switch (debCredProposal)
        {
            case DebCredProposal::Credit:
                ledgerJournalTrans_AmountCurDebit.skip(true);
                amountCurDebit.skip(true);
                break;

            case DebCredProposal::Debit:
                ledgerJournalTrans_AmountCurCredit.skip(true);
                amountCurCredit.skip(true);
                break;

            case DebCredProposal::None:
                ledgerJournalTrans_AmountCurCredit.skip(false);
                amountCurCredit.skip(false);
                ledgerJournalTrans_AmountCurDebit.skip(false);
                amountCurDebit.skip(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionsForVendAccount</Name>
				<Source><![CDATA[
    public void setDefaultDimensionsForVendAccount(SegmentedEntryControl segmentedEntryControl)
    {
        MainAccountRecId selectedMainAccountId;
        Map vendTransDimensionSpecifiers;

        changecompany(segmentedEntryControl.parmDataAreaId())
        {
            if (segmentedEntryControl.getAccountStructure() != 0)
            {
                selectedMainAccountId = segmentedEntryControl.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));

                if (selectedMainAccountId != 0 && selectedMainAccountId != currentMainAccountId && vendTrans.DefaultDimension)
                {
                    vendTransDimensionSpecifiers = LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(vendTrans.DefaultDimension);

                    // Set values in controller
                    if (vendTransDimensionSpecifiers)
                    {
                        segmentedEntryControl.setDimensionSpecifiers(vendTransDimensionSpecifiers, false);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjAccountNum</Name>
				<Source><![CDATA[
    void setProjAccountNum()
    {
        group2_AccountNum.visible(true);
        group2_OffsetAccount.visible(false);

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
        {
            group2_AccountNum.visible(true);
            group2_OffsetAccount.visible(false);
        }

        if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
        {
            group2_AccountNum.visible(false);
            group2_OffsetAccount.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN taxWithholdParameters = TaxWithholdParameters_IN::find();

        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, tdsGroup)).visible(taxWithholdParameters.tdsInvoice);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, tcsGroup)).visible(taxWithholdParameters.tcsInvoice);
        withholdingTax_IN.visible(taxWithholdParameters.tdsInvoice || taxWithholdParameters.tcsInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWitholdEnabled_IN</Name>
				<Source><![CDATA[
    void setTaxWitholdEnabled_IN()
    {
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, tdsGroup)).enabled((!ledgerJournalTransTaxExtensionIN.tcsGroup));
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, tcsGroup)).enabled((!ledgerJournalTransTaxExtensionIN.tdsGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        boolean isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                                ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

        projectTab.visible(isProject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    private void setVisible_IN()
    {
        boolean isTaxParametersMarked = TaxParameters::checkTaxParameters_IN();

        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, AssessableValueTransactionCurrency)).visible(isTaxParametersMarked);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(ledgerJournalTransTaxExtensionIN, MaximumRetailPrice)).visible(isTaxParametersMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignForAverageVAT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the labels when Average VAT feature is active.
    /// </summary>
    private void updateDesignForAverageVAT()
    {
        // Tax invoice number
        document_DocumentNum.label("@SYS4082540");
        // Number of the tax invoice that generated the transaction.
        document_DocumentNum.helpText("@SYS4082541");
        // Tax invoice date
        document_DocumentDate.label("@SYS4082542");
        // Date of tax invoice.
        document_DocumentDate.helpText("@SYS4082543");
        // Invoice number
        vendTrans_Invoice.label("@SYS4726");
        invoice_Invoice.label("@SYS4726");

        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceDate)).visible(true);
        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceReceiptDate)).visible(true);
        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(true);
        LedgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTrans</Name>
				<Source><![CDATA[
    VendTrans vendTrans()
    {
        return vendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No updates to the template settings are required.
    }

]]></Source>
			</Method>
			<Method>
				<Name>docCursor</Name>
				<Source><![CDATA[
    public Common docCursor()
    {
        Common docCursor = super();

        if (docCursor.TableId == tableNum(LedgerJournalTrans))
        {
            docCursor = vendTrans;
        }

        return docCursor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVendTransApprover</Name>
				<Source><![CDATA[
    private void validateVendTransApprover()
    {
        VendTrans vendTransApprover;

        select firstonly Voucher from vendTransApprover
            where vendTransApprover.JournalNum == ledgerJournalTable.JournalNum 
				&& !vendTransApprover.Approver;
        if (vendTransApprover)
        {
            throw error(strFmt("@SYS18394", vendTransApprover.Voucher));
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExt_IN</Name>
						<Source><![CDATA[
        public void insertIntoLedgerJournalTransTaxExt_IN()
        {
            ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (ledgerJournalTransTaxExtensionIN_ds.validateWrite())
            {
                ledgerJournalTransTaxExtensionIN_ds.write();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExtension</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts <c>LedgerJournalTransTaxExtension</c> record while it is calidate.
        /// </summary>
        public void insertIntoLedgerJournalTransTaxExtension()
        {
            if (isTaxIntegrationEnabledForApproval)
            {
                journalFormTrans.insertIntoLedgerJournalTransTaxExtension(LedgerJournalTransTaxExtension);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshBudgetControls</Name>
						<Source><![CDATA[
        public void refreshBudgetControls()
        {
            if (budgetCheckResult.visible())
            {
                // Update the controls to display the latest values.
                ledgerJournalEngine.resetBudgetCheckResultsCache();
                budgetCheckResult.update();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (!super())
            {
                // The LedgerJournalTrans' delete method requires an exception to be thrown
                // so that the transaction is aborted.
                throw Exception::Error;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            journalFormTrans.datasourceExecuteQueryPost();
            journalFormTrans.setMassTransactionReversalButtonVisibility();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = super();

            if (isValid && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
            {
                isValid = false;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBudgetCheckResult</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the image position that displays the budget check result value for the <c>LedgerJournalTrans</c> record.
        /// </summary>
        /// <returns>
        /// The image position that displays the budget check result value for the <c>LedgerJournalTrans</c> record.
        /// </returns>
        public display BudgetCheckResult displayBudgetCheckResult()
        {
            return ledgerJournalEngine.getBudgetCheckResult(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            if (ledgerJournalTrans.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotalWithTax</Name>
						<Source><![CDATA[
        display AmountMST voucherTotalWithTax()
        {
            return ledgerJournalEngine.voucherTotalWithTax(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>exchRateTxt</Name>
						<Source><![CDATA[
        display ExchRateSecondTxt exchRateTxt()
        {
            return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
        /// </summary>
        /// <remarks>
        /// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c>, <c>LedgerJournalTrans_Asset</c> and <c>LedgerJournalTrans_Project</c> tables.
        /// </remarks>
        public void write()
        {
            // <GEEPL>
            RefRecId serviceTariffNumber;
            // </GEEPL>

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // The kernel calls leaveRecord during the delete event which will cause this method to
                // be called if the user had made changes. This causes issues and must be special cased
                // until the behavior is changed.
                return;
            }

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // The entity is already being written. The extra call to write is unnecessary.
                return;
            }

            try
            {
                ttsbegin;

                // Signal the start of the write event.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.formMethodDataSourceWritePre();

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                // <GEEPL>
                serviceTariffNumber = taxServiceTariff.ServiceTariffNumber;
                // </GEEPL>

                // If super() is called directly, the client currently refreshes all of the linked datasources,
                // which causes the LedgerJournalTrans_Project datasource to be corrupted. The result is the
                // changes to the LedgerJournalTrans_Project table are not saved.
                // super(); // the next line replaces this one
                ledgerJournalTrans.write();

                // <GEEPL>
                // The service tariff relationship is lost during the super() call
                // from write since it is on a different data source. So, copy
                // the original value back in to ensure saving is done correctly.
                if (serviceTariffNumber && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]))
                {
                    taxServiceTariff.ServiceTariffNumber = serviceTariffNumber;
                    taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                    taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                }
                // </GEEPL>

                // <GCN>
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    ledgerJournalTrans.reread();
                }
                // </GCN>

                if (ledgerJournalTrans.isFixedAssetsTransaction())
                {
                    // Synchronize, validate and write the fixed assets sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
                }
                else
                {
                    // If this is not a fixed assets transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a fixed assets transaction.
                    ledgerJournalTrans_Asset.RecId = 0;
                }

                if (ledgerJournalTrans.isProjectTransaction())
                {
                    // Synchronize, validate and write the project sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Project();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteProjectSibling(keepSalesPriceOnWrite);
                }
                else
                {
                    // If this is not a project transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a project transaction.
                    ledgerJournalTrans_Project.RecId = 0;
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    if (ledgerJournalTrans.isTax1099DetailTransaction())
                    {
                        // Synchronize, validate and write the Tax1099Detail sibling record. This call will throw
                        // an exception if validation fails. A snapshot of the current buffer is taken to support
                        // in-memory rollback of the buffer in the case the transaction is aborted.
                        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfTax1099Detail();
                        ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWrite1099Sibling();
                    }
                    else
                    {
                        // If this is not a 1099 transaction, and it had been, the super() call
                        // above should have deleted the sibling record in the database. Because of this,
                        // the RecId of the buffer needs to be cleared out so that it will be inserted if
                        // it gets changed back to being a 1099 transaction.
                        tax1099BoxDetail.RecId = 0;
                    }
                }

                // -----------------------------------------------------------------------------------

                element.setDebCredProposal(true);

                ledgerJournalEngine.write(ledgerJournalTrans);

                if (countryRegion_MX)
                {
                    LedgerJournalTrans_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }

                if (isTaxIntegrationEnabledForApproval)
                {
                    LedgerJournalTrans_ds.reread();
                    LedgerJournalTrans_ds.refresh();
                    LedgerJournalTransTaxExtension.save(LedgerJournalTrans);
                    journalFormTrans.updateTaxGroupAllowEditInTaxIntegration(
                        isTaxIntegrationEnabledForApproval,
                        LedgerJournalTransTaxExtension.OverrideSalesTax);
                }

                // reset ledgerJournalEngine state
                ledgerJournalEngine.postWrite();

                vendTrans_ds.refresh();

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();

                // <GTH>
                if (LedgerJournalTransExtensionTH_ds.isNeeded())
                {
                    if (LedgerJournalTransExtensionTH.LedgerJournalTrans == 0)
                    {
                        LedgerJournalTransExtensionTH.LedgerJournalTrans = LedgerJournalTrans.RecId;
                        if (LedgerJournalTransExtensionTH_ds.validateWrite())
                        {
                            LedgerJournalTransExtensionTH_ds.write();
                        }
                    }
                }
                // </GTH>

                ttscommit;

                // Refresh the budget controls after processing occurs on ttscommit
                this.refreshBudgetControls();
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                // reset ledgerJournalEngine state
                ledgerJournalEngine.postWrite();

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                // reset ledgerJournalEngine state
                ledgerJournalEngine.postWrite();

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            ledgerJournalTrans.VendTransId = vendTrans.RecId;

            super();

            ledgerJournalEngine.formMethodDataSourceCreatePost();
            ledgerJournalEngine.initValue(ledgerJournalTrans);

            // <GTH>
            if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
            {
                ledgerJournalEngine.initExtensionValueTH(LedgerJournalTransExtensionTH);
            }
            // </GTH>
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalEngine = new LedgerJournalEngine_VendApprove(element);
            journalFormTrans.datasourceInitPost(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            LedgerJournalTrans ledgerJournalTrans_Orig;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                // Signal that the entity delete event has started.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
                ledgerJournalTrans_Orig = ledgerJournalTrans.data();

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                if (!ledgerJournalTrans_Asset_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                if (!ledgerJournalTrans_Project_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
                super();
                // -----------------------------------------------------------------------------------

                ledgerJournalEngine.delete(ledgerJournalTrans_Orig);

                if (ledgerJournalTrans)
                {
                    element.setDebCredProposal(true);
                }
                vendTrans_ds.refresh();

                // Signal that the entity delete event has finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();

                ttscommit;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();

                // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            try
            {
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();

                ledgerJournalEngine.preCreate(ledgerJournalTrans);
                element.setDebCredProposal(true);

                super(append);

                // Set the line number less than existing lines so the manually created expenses appear before the generated reversing entries
                ledgerJournalTrans.LineNum = LedgerJournalTrans::firstLineNum(ledgerJournalTable.JournalNum) - 1;

                if (ledgerJournalTrans.LineNum == 0)
                {
                    // If LineNum is left at zero, it will be incremented in the ledgerJournalTrans.insert method
                    // That would cause a duplicate record with the invoice register reversing entries
                    ledgerJournalTrans.LineNum = -1;
                }

                ledgerJournalTrans.setDefaultAccount(true, vendTrans.AccountNum);
                ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                ledgerJournalTrans_AccountNum.setFocus();

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
                keepSalesPriceOnWrite = false;
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below.

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the event that is raised each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()
        {
            journalFormTrans.updateTaxGroupAllowEditInTaxIntegration(
                isTaxIntegrationEnabledForApproval,
                LedgerJournalTransTaxExtension.OverrideSalesTax);

            int ret;
            // <GIN>
            boolean isVatMarked = TaxParameters::find().vat_in;
            TransTaxInformation transTaxInformationLocal;
            // </GIN>

            ledgerJournalEngine.active(ledgerJournalTrans);
            priorAccountType = ledgerJournalTrans.AccountType;
            // <GIN>
            if (countryRegion_IN
                && isVatMarked)
            {
                journalFormTrans.parmDefermentScheduleEnable_IN();
            }
            // </GIN>
            journalFormTrans.datasourceActivePost();
            element.enableProjSalesCurrencyId();
            // <GEECZ>
            element.initIntracomVATDueDate();
            // </GEECZ>

            ret = super();

            LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            Group2_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            Group2_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);

            LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            Group2_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            Group2_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

            LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);
            Group2_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
            Group2_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
            {
                currentMainAccountId = LedgerJournalTrans_AccountNum.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));
            }
            else
            {
                currentMainAccountId = 0;
            }

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = Group2_OffsetAccount.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));
            }
            else
            {
                currentOffsetMainAccountId = 0;
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                element.setAllowEdit1099SFields();
                element.setAllowEdit1099GFields();
            }

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                element.setTaxWitholdEnabled_IN();
            }

            if (countryRegion_IN
                && isVatMarked)
            {
                transTaxInformationLocal = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(ledgerJournalTrans);
                if (ledgerJournalEngine.posted() &&
                    ledgerJournalTrans.taxAmountJournal() > 0 &&
                    ledgerJournalTrans.PurchLedgerPosting == ArrivalPostingType::None &&
                    transTaxInformationLocal.VATGoodsType == VATGoodsType_IN::CapitalGoods)
                {
                    defermentSchedule_IN.enabled(true);
                }
                else
                {
                    defermentSchedule_IN.enabled(false);
                }
            }

            // </GIN>
            if (LedgerJournalTrans.RecId != 0)
            {
                keepSalesPriceOnWrite = true;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorLog</Name>
						<Source><![CDATA[
        display LogTxt errorLog()
        {
            return journalFormTrans.parmCheckPostResults().errorLog(ledgerJournalTrans.Voucher);
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedDateTime</Name>
						<Source><![CDATA[
        display JournalPostedDateTime postedDateTime()
        {
            return ledgerJournalEngine.postedDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>approvedBy</Name>
						<Source><![CDATA[
        display ApprovedByPersonnelNumber approvedBy()
        {
            return ledgerJournalEngine.approvedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>rejectedBy</Name>
						<Source><![CDATA[
        display UserId rejectedBy()
        {
            return ledgerJournalEngine.rejectedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reportedAsReadyBy</Name>
						<Source><![CDATA[
        display UserId reportedAsReadyBy()
        {
            return ledgerJournalEngine.reportedAsReadyBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalance</Name>
						<Source><![CDATA[
        display AmountMST journalBalance()
        {
            return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCredit</Name>
						<Source><![CDATA[
        display AmountMST journalCredit()
        {
            return ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebit</Name>
						<Source><![CDATA[
        display AmountMST journalDebit()
        {
            return ledgerJournalEngine.journalDebit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotal</Name>
						<Source><![CDATA[
        display AmountMST voucherTotal()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res = -1;
            #resAppl;

            if (journalFormTrans.parmCheckPostResults().errorExists(_ledgerJournalTrans.Voucher))
            {
                res = imageListAppl.image(#ImageError);
            }

            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCredit</Name>
						<Source><![CDATA[
        display AmountMST voucherCredit()
        {
            return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebit</Name>
						<Source><![CDATA[
        display AmountMST voucherDebit()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret = super(_forceUpdate);

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // A write was requested on the sibling and the client did not write the entity. This happens
                // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
                // client only calls write on that specific sibling and not on the entire entity.

                // Write the entire entity.
                ledgerJournalTrans_DS.write();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayRemittanceAddress</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the vendor remittance address associated with the vendor <c>RemittanceLocation</c> or <c>RemittanceAddress</c> record id field on the <c>LedgerJournalTrans</c> table.
        /// </summary>
        /// <returns>
        /// The remittance address.
        /// </returns>
        /// <remarks>
        /// The remittance address on the trans date is returned if the journal is posted.
        /// The current date effective remittance address is returned for an unposted journal.
        /// </remarks>
        public display RemittanceAddressing displayRemittanceAddress()
        {
            if (!hasFieldAccess(tableNum(LogisticsPostalAddress), fieldNum(LogisticsPostalAddress, Address),AccessType::View))
            {
                error("@SYS57330");
            }

            return ledgerJournalEngine.displayRemittanceAddress(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl, ledgerJournalTrans, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                #ISOCountryRegionCodes

                LedgerJournalACType ledgerJournalACType = this.getValue();
                boolean ok = element.checkAccountType(ledgerJournalTrans.AccountType);

                if (ok)
                {
                    if (priorAccountType != ledgerJournalACType)
                    {
                        priorAccountType = ledgerJournalACType;
                        ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                    }

                    element.setVisible();
                    element.setProjAccountNum();
                    element.enableDepreciationStartDate();
                }

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCA]))
                {
                    ledgerJournalTrans.gsthstTaxType_CA = TaxRegistration_CA::getGSTHSTTaxType(ledgerJournalTrans.AccountType);
                }
                // <GEERU>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                // The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                // form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                // thus cannot be called from the super()

                ledgerJournalEngine.amountCurCreditModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and CreditAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                // The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                // form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                // thus cannot be called from the super()
                //

                ledgerJournalEngine.amountCurDebitModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and DebitAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approver</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return hcmWorkerLookupActiveCurrentCompany.lookupWorker(_formReferenceControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                HcmWorker hcmWorker = super(_formReferenceControl);

                if (hcmWorker != null && !hcmWorkerLookupActiveCurrentCompany.validateWorker(hcmWorker.RecId))
                {
                    hcmWorker = null;
                }

                return hcmWorker;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankDepositVoucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.bankDepositVoucherModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.companyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
                LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
                Group2_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());

                //
                // If the company has been modified on an editable invoice approval journal line, update the exchange rates on the
                // journal line to reflect the new company
                //
                if (ledgerJournalTrans.NoEdit == false)
                {
                    LedgerJournalTransApproveExchangeRateManager::updateExchangeRatesForEditableApprovalJournalTransaction(
                        ledgerJournalTable, 
                        ledgerJournalTrans, 
                        ledgerJournalEngine);
                }

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendAccount_PL</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.initFromCustVendVatRegNums_PL(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // Note: all bank accounts (not just active or not expired) are expected here
                VendBankAccount::lookupBankAccount(_formControl,
                                                    ledgerJournalTrans.parmAccount(),
                                                    ledgerJournalTrans.Company,
                                                    DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate,0));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Due</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Due)
                {
                    PaymCalendarAdjustedDate paymCalendarAdjustedDate = PaymCalendarSourceLedgerJournalTrans::getAdjustedDate(ledgerJournalTrans);

                    ledgerJournalTrans.Due = PaymCalendarProcessor::getAdjustedDueDate(ledgerJournalTrans.Due, priorDueDate, paymCalendarAdjustedDate);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRateSecond</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>GSTHSTTaxType_CA</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Invoice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.invoiceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.accountNumModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset, tax1099BoxDetail);

                element.setDebCredProposal(false);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());

                //catch-all defaulting of Currency
                if (!ledgerJournalTrans.CurrencyCode)
                {
                    ledgerJournalTrans.CurrencyCode = vendTrans.CurrencyCode;
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                }

                ledgerJournalTrans_ds.rereadReferenceDataSources();

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWitholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                boolean ok = element.checkAccountType(ledgerJournalTrans.OffsetAccountType, true);

                if (ok)
                {
                    ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                    currentOffsetMainAccountId = Group2_OffsetAccount.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));

                    element.setVisible();
                    element.setProjAccountNum();
                    element.enableDepreciationStartDate();
                }
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                Group2_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());

                if (ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets &&
                   ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                {
                    // The primary account is not of type fixed assets and the offset account was changed
                    // to a fixed asset account, so redefault the depreciation start date.
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OperationType_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret
                    && VendTable::find(vendTrans.AccountNum).VendorType_MX == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Payment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateOnPaymentMethodChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Prepayment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.prepaymentModified(ledgerJournalTrans, ledgerJournalTrans_Project);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceAddress</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Tax1099Fields</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();

                    Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box, tax1099BoxDetail.RecId);
                    tax1099BoxDetail_ds.executeQuery();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxGroupCompany)
                {
                    taxGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxGroupHeading::taxGroupLookup(_formControl, taxGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxItemGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxItemGroupCompany)
                {
                    taxItemGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxItemGroupHeading::taxItemGrouplookup(_formControl, taxItemGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                DialogButton dialogButton;
                boolean updateVoucher;
                boolean updateDate = true;
                
                str strMessage = "@AccountsPayable:InvoiceApprovalDateChangeVoucherChange";
                str strTitle = "@SYS68455";
                
                if (ledgerJournalEngine.isVoucherChangeRequired(ledgerJournalTrans.orig(), ledgerJournalTrans.TransDate))
                {
                    dialogButton = Box::okCancel(strMessage,
                                                DialogButton::Cancel, // Initial focus is on the Cancel button.
                                                strTitle);
                    
                    if (dialogButton == DialogButton::Ok)
                    {
                        updateVoucher = true;
                        updateDate = true;
                    }
                    else
                    {
                        updateDate = false;
                    }
                }
                
                if (updateDate)
                {
                    super();
                    ledgerJournalEngine.modifyDate(ledgerJournalTrans.orig(), LedgerJournalTrans.TransDate, ledgerJournalTrans, updateVoucher);
                    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                    {
                        ledgerJournalEngine.setProjTransDate(ledgerJournalTrans, ledgerJournalTrans_Project);
                    }
                }
                else
                {
                    ledgerJournalTrans.TransDate = ledgerJournalTrans.orig().TransDate;
                }
                
                ledgerJournalTrans_ds.write();
                ledgerJournalTrans_ds.research();
                vendTrans_ds.research(true);

                LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);
                Group2_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
                Group2_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Triangulation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
                ledgerJournalEngine.updateTaxAmountToPost(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VatDueDate_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GEEU>
                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                else if (TaxParameters::isBankExchRateEnabled_W())
                {
                    SalesTaxTransactionExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                // </GEEU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VendBankAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.formMethodDataSourceVoucherModified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTrans</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.enableFieldsActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            if (element.args().dataset() == tableNum(LedgerJournalTable))
            {
                ledgerJournalTable = element.args().record();
            }

            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Project</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the event that is raised each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()
        {
            int ret = super();

            element.setVisible();
            element.setProjAccountNum();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
            {
                // rerun defaulting logic if AccountType=Project
                ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                ledgerJournalTrans_AccountNum.setFocus();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Project.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Project.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if ((ledgerJournalTrans.AccountType == LedgerJournalACType::Project) ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project))
                {
                    HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(ledgerJournalTrans_Project.ProjId));
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalTrans_Project.activityNumberModified();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCategoryModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CostPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjTransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projQtyModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                boolean isProject;

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (isProject)
                {
                    ret = ResourceLookup::lookupResource(_formReferenceControl, ledgerJournalTrans_Project);
                }
                else
                {
                    ret = super(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                ResourceView ret;
                boolean isProject;

                ret = super(_formReferenceControl);

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (isProject && ret.RecId && !ResourceLookup::validateResource(ret.RecId, ledgerJournalTrans_Project))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group2_SalesPrice.update();
                projectCostPrice_CostPrice.update();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesCurrencyId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                keepSalesPriceOnWrite = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroupSales</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalTrans.TaxItemGroup = ledgerJournalTrans_Project.TaxItemGroupSales;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ProjCostTrans::jumpRefTransId(ledgerJournalTrans, element);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Asset</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
            {
                // rerun defaulting logic if AccountType=FixedAssets
                ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                ledgerJournalTrans_AccountNum.setFocus();
            }

            ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
            element.enableDepreciationStartDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the event that is raised each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()

        {
            int ret = super();

            element.enableDepreciationStartDate();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Asset.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Asset.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BookId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();

                ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                AssetBook::lookupOpenBookIdForAsset(_formControl,
                                                    ledgerJournalTrans_Asset.AssetId,
                                                    true, // CurrentOperationsTax must be considered
                                                    ledgerJournalTable.CurrentOperationsTax,
                                                    ledgerJournalTrans_Asset.Company,
                                                    true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        private boolean isNeeded()
        {
            return TaxParameters::checkTaxParameters_IN();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            ledgerJournalTransTaxExtensionIN.TaxModelDocLineExtensionIN::init(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TCSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWitholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TDSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWitholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxServiceTariff</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) && (!taxServiceTariff.ParentRecId || !taxServiceTariff.ParentTableId))
            {
                // Write can cause the child data source to lose it's foreign key values so restore them.
                taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                taxServiceTariff_ds.refresh();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>Tax1099BoxDetail</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                tax1099BoxDetail.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = tax1099BoxDetail.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;
            Tax1099Box tax1099Box = Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                isValid = super();

                if (isValid && tax1099Box == Tax1099G::UnemploymentCompensation().tax1099Box)
                {
                    if ((tax1099BoxDetail.Tax1099StateTaxWithheld > ledgerJournalTrans.Tax1099Amount))
                    {
                        isValid = checkFailed("@SPS1943");
                    }
                }

                if (isValid && ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::GrossProceeds()))
                {
                    if ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc ==""))
                    {
                        isValid = checkFailed("@SPS3");
                    }
                }

                if (isValid)
                {
                    if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::IncomeTaxRefundsCreditsOffsets()) && (tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))-15) || tax1099BoxDetail.Tax1099TaxYear > (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)))
                    {
                        isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) - 15), int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)));
                    }
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::GrossProceeds()))
                {
                    if (tax1099BoxDetail.Tax1099BuyersTax == 0.0)
                    {
                        warning(strFmt("@SPS14", "@PublicSector:Tax1099S6BuyersPart"));
                    }

                    if (ledgerJournalTrans.Tax1099Amount == 0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::Yes)
                    {
                        warning(strFmt("@SPS18", "@SYS23907"));
                    }
                }

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::IncomeTaxRefundsCreditsOffsets()))
                {
                    if (tax1099BoxDetail.Tax1099TaxYear > year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) && tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 15))
                    {
                        warning("@SPS2");
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>State</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Tax1099BoxDetail::lookupTax1099State(_formControl, LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension));
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                tax1099BoxDetail.Tax1099StateTaxID = VendStateTaxID::findByVendState(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State).StateTaxID;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Tax1099BoxDetail::jumpRefTax1099State(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransExtensionTH</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret= true;

            if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (LedgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks whether this data sources should be enable or not.
        /// </summary>
        /// <returns>
        /// true if it should be eneabled; otherwise, return false.
        /// </returns>
        /// <remarks>
        /// This data source is joined to its parent data source with join type <c>Passive</c>
        /// by default. It means this data source is disabled by default.
        /// If any related feature needs this data source, then add condition(s) here to
        /// mark that it should be enabled.
        /// </remarks>
        public boolean isNeeded()
        {
            return TaxThaiGovCertificationFeatureChecker::isTaxBranchEnabled() || TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_W</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = LedgerJournalTrans_W.LedgerJournalTrans ? super() : true;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (countryRegion_MX)
            {
                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (countryRegion_MX)
            {
                // Switch the link type as fields appear in the grid that require an outerjoin
                ledgerJournalTrans_W_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (countryRegion_MX && LedgerJournalTrans_W.LedgerJournalTrans != 0)
            {
                // Only write the child table if the country context is set to one that the table has fields linked to and the child table has the parent FK set
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>WithholdingTypeCode_MX</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (isTaxIntegrationEnabledForApproval)
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (isTaxIntegrationEnabledForApproval)
            {
                LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
                LedgerJournalTransTaxExtension.OverrideSalesTax = true;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OverrideSalesTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                journalFormTrans.updateTaxGroupAllowEditInTaxIntegration(
                    isTaxIntegrationEnabledForApproval,
                    LedgerJournalTransTaxExtension.OverrideSalesTax);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.validateVendTransApprover();

            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                errorExist.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();

                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.validateVendTransApprover();

            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonFetchVouchers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // <GIN>
            LedgerJournalTrans ledgerJournal;
            boolean exciseParameterMarked = TaxParameters::isExciseEnable_IN();
            boolean vATParameterMarked = TaxParameters::isVATEnable_IN();
            TransTaxInformation transTaxInformationLocal;
            TransTaxInformation preTransTaxInformation;
            // </GIN>

            unchecked(Uncheck::XDS)
            {
                if (!ledgerJournalEngine.fetchVouchers())
                {
                    return;
                }
            }

            ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable, true);


            List selectedTransList = ledgerJournalEngine.allFetchedVoucher();
            ListEnumerator selectedTransIterator = selectedTransList.getEnumerator();
            while (selectedTransIterator.moveNext())
            {
                LedgerJournalTrans selectedTrans = selectedTransIterator.current();

                element.args().lookupRecord(VendTrans::find(selectedTrans.VendTransId));
                vendTrans_ds.research(false);

                ledgerJournalTrans_DS.create();
            }

            element.args().lookupRecord(VendTrans::find(ledgerJournalEngine.firstFetchedVoucher().VendTransId));
            vendTrans_ds.research(false);

            // <GIN>
            if (countryRegion_IN
                && (TaxWithholdParameters_IN::checkTaxParameters() || exciseParameterMarked || vATParameterMarked))
            {
                ledgerJournal = LedgerJournalTrans::find(vendTrans.JournalNum,vendTrans.Voucher,false);
            }
            // </GIN>

            // <GIN>
            if (countryRegion_IN
                && TaxWithholdParameters_IN::checkTaxParameters())
            {
                LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExt = ledgerJournal.ledgerJournalTransTaxExtensionIN();
                ledgerJournalTransTaxExtensionIN.tdsGroup = ledgerJournalTransTaxExt.tdsGroup;
                ledgerJournalTransTaxExtensionIN.tcsGroup = ledgerJournalTransTaxExt.tcsGroup;
                element.setTaxWitholdEnabled_IN();
            }

            if (TaxParameters::checkTaxParameters_IN())
            {
                if (exciseParameterMarked)
                {
                    transTaxInformationLocal = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(ledgerJournalTrans);
                    preTransTaxInformation = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(ledgerJournal);
                    if (transTaxInformationLocal)
                    {
                        ttsbegin;
                        transTaxInformationLocal.selectForUpdate(true);
                        transTaxInformationLocal.ServiceTaxConsignmentNoteNum = preTransTaxInformation.ServiceTaxConsignmentNoteNum;
                        transTaxInformationLocal.update();
                        ttscommit;
                    }
                }
            }
            // </GIN>

            if (isTaxIntegrationEnabledForApproval)
            {
                LedgerJournalTransTaxExtension.OverrideSalesTax = true;
                journalFormTrans.updateTaxGroupAllowEditInTaxIntegration(isTaxIntegrationEnabledForApproval, true);
            }

            buttonRemoveVouchers.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonRemoveVouchers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            QueryRun qr;

            ledgerJournalEngine.removeVouchers(vendTrans_ds, true, ledgerJournalTable);

            ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable, true);

            ledgerJournalTrans.clear();
            vendTrans_ds.research();

            qr = new QueryRun(vendTrans_ds.queryRun().query());
            if (!qr.next())
            {
                vendTrans_ds.removeFilter();
                vendTrans_ds.executeQuery();
            }

            if (!vendTrans)
            {
                buttonRemoveVouchers.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markReportAsReady();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonApprove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markApproved();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.markRejected();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                errorExist.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerRestore</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.reduceInternalContainers(ledgerJournalTrans);
            ledgerJournalEngine.clearVoucher();
            super();
            ledgerJournalEngine.updateInternalContainers(ledgerJournalTrans);
            vendTrans_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonUpdateAppJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (ledgerJournalTrans.Approved == NoYes::No || !ledgerJournalTrans.Approver)
            {
                throw error(strFmt("@SYS18394",ledgerJournalTrans.Voucher));
            }

            ledgerJournalEngine.clearVoucher();

            ledgerJournalTrans_Ds.research();

            super();

            if (!LedgerJournalTrans::existVoucher(ledgerJournalTrans.JournalNum, vendTrans.Voucher))
            {
                ledgerJournalEngine.clearBalancesForVoucher(vendTrans.Voucher);
                vendTrans_Ds.research();
                ledgerJournalTrans_Ds.research();
            }
            else
            {
                // Research the VendTrans datasource to force the necessary display method(s) to run after coming back from the invoice screen.
                vendTrans_ds.research(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonCancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (!ledgerJournalTrans.hasPendingInvoice())
            {
                if (ledgerJournalEngine.hasSettledVoucher(ledgerJournalTrans))
                {
                    throw error("@AccountsPayable:CancelSettledInvoiceRegisterError");
                }

                ledgerJournalEngine.cancelVoucher(ledgerJournalTrans);
                vendTrans_DS.research();
                warning("@AccountsPayable:ForCancellationToCompletePostTheVoucher");
            }
            else
            {
                error("@AccountsPayable:ApprovalJournalCannotCancel");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonInvoicePostings</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalVoucherChanged ledgerJournalVoucherChangedLocal = LedgerJournalVoucherChanged::find(ledgerJournalTrans.JournalNum,ledgerJournalTrans.Voucher);

            if (ledgerJournalVoucherChangedLocal)
            {
                ledgerJournalTransInvoice.Voucher = ledgerJournalVoucherChangedLocal.FromVoucher;
                ledgerJournalTransInvoice.TransDate = ledgerJournalVoucherChangedLocal.FromDate;
            }
            else
            {
                ledgerJournalTransInvoice.Voucher = ledgerJournalTrans.Voucher;
                ledgerJournalTransInvoice.TransDate = ledgerJournalTrans.TransDate;
            }

            ledgerJournalTransInvoice.data(LedgerJournalTrans::findJournalForVoucher(ledgerJournalTransInvoice.Voucher, ledgerJournalTransInvoice.TransDate));

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTotals</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            ledgerJournalEngine.calculateTaxForCompleteJournal();
            LedgerJournalEngine::showTotalTaxes(ledgerJournalEngine);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FinancialDimension</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTrans.enableDimensionButtonsActive();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTransSource</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            LedgerJournalTrans ledgerJournalTransLocal;
            TmpTaxWorkTrans tmpTaxWorkTrans;
            Tax tax;

            if (!ledgerJournalTable.Posted)
            {
                tax = element.getShowTax();
                select firstonly RecId from ledgerJournalTransLocal
                    where ledgerJournalTransLocal.JournalNum == ledgerJournalTrans.JournalNum &&
                            ledgerJournalTransLocal.Voucher == ledgerJournalTrans.Voucher &&
                            ledgerJournalTransLocal.TransDate == ledgerJournalTrans.TransDate &&
                            (ledgerJournalTransLocal.TaxCode ||
                            (ledgerJournalTransLocal.TaxGroup && ledgerJournalTransLocal.TaxItemGroup));

                if (!ledgerJournalTransLocal.RecId)
                {
                    tmpTaxWorkTrans = element.fillTmpTaxWorkTransFromRegister(ledgerJournalTrans);
                    tax.tmpTaxWorkTrans(tmpTaxWorkTrans);
                }
                Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnApprove), tax, ledgerJournalTrans, element);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxDocumentLauncher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            this.parameters(classStr(TaxableDocumentDescriptorGeneralJournal));
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);
            element.setDefaultDimensionsForVendAccount(this);
            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(LedgerJournalTrans_AccountNum, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override this method when lookup is overriden, determines if the default
        /// or custom lookup is to be used.
        /// </summary>
        /// <param name="_accountTypeEnumValue">
        /// The account type enumeration value.
        /// </param>
        /// <param name="_secondaryAccountTypeEnumValue">
        /// The secondary account type enumeration value.
        /// </param>
        /// <returns>
        /// true to render server form, false to use the default form.
        /// </returns>
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_TaxGroup1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_TaxItemGroup1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountType1</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);
            element.setDefaultDimensionsForVendAccount(this);
            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(LedgerJournalTrans_AccountNum1, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccountType1</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// The event handler when a segment is modified.
        /// </summary>
        /// <param name = "_segment">The segment that was modified.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);
            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount1, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans, ledgerJournalTrans.OffsetAccountType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Invoice_Due</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            priorDueDate = this.dateValue();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CurrencyCode</DataField>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEl_TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExchRate</DataField>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExchRateSecond</DataField>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetFinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Triangulation</DataField>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>LedgerJournalVoucherChanged</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<Index>NumVoucherIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTrans</Name>
			<Table>VendTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Arrival</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCImportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingChangeVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileApprove</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileCancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileReOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBOVendTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleTax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleTax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Num</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoicePurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymentGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournaltransInvoice</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalVoucherChanged</Name>
			<Table>LedgerJournalVoucherChanged</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToVoucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>VendTrans</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendInvoiceInfo</Name>
			<Table>VendInvoiceInfo</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Unit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitPrice</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>RefIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>VendInvoiceInfo</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Project</Name>
			<Table>LedgerJournalTrans_Project</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPwp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReadyForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Asset</Name>
			<Table>LedgerJournalTrans_Asset</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPostingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsumptionQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAdjustedDepreciation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPriorYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowValuePoolType_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LVPTransferId_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefAssetID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReserveTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleFactor_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendInvoiceIntrastat</Name>
			<Table>VendInvoiceIntrastat</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceJour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtensionIN</Name>
			<Table>LedgerJournalTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CENVATCreditAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdAcknowledgementNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCountryRegionToRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdNatureOfRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxServiceTariff</Name>
			<Table>TaxServiceTariff</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceTariffNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Tax1099BoxDetail</Name>
			<Table>Tax1099BoxDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099AddressorLegalDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099BuyersTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099DateOfClosing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099PropertyOrServices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxWithheld</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TaxYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TradeOrBusiness</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransExtensionTH</Name>
			<Table>LedgerJournalTransExtensionTH</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReceiptDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpOtherDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealVendName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceReceiptDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNatureOfAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegNum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_W</Name>
			<Table>LedgerJournalTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashRegisterTerminal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIBeneficiaryRetains_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIFinancialSystem_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestLossAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestNominalAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestRealAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeBearer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPaymCFDIConfirmNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalInstrument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithholdingTypeCode_MX</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtension</Name>
			<Table>LedgerJournalTransTaxExtension</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumTableType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@AccountsPayable:VendorInvoiceApproval</Caption>
		<DataSource xmlns="">LedgerJournalTrans</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">VendTrans</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransApprove</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLJTransInvApprove</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LJTransInvApprove</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPostApprove</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>buttonFetchVouchers</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>VendInvoiceRegisterApproval</ConfigurationKey>
								<ElementPosition>894784850</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS58698</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>buttonRemoveVouchers</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>VendInvoiceRegisterApproval</ConfigurationKey>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS74270</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCourse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1252698790</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonApprove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Functions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransApprove</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerRestore</Name>
										<ElementPosition>585677358</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerReTransferToJournal</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonUpdateAppJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>PurchFormLetter_ApproveJournal</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonCancel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS12483</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalTransAccrual</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalTransAccrual</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS10340</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>1789569700</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonBalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerBalanceControl</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonInvoicePostings</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournaltransInvoice</DataSource>
										<MenuItemName>LedgerTransVoucher1</MenuItemName>
										<Text>@SYS62166</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonLedgerJournalTransTxt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalTransTxt</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>TaxTotals</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS62141</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BudgetCheckResultsInquiry</Name>
										<ElementPosition>1879048189</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BudgetCheckResults</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransactionReversalFailures</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalTransactionReversalFailures</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@GeneralLedger:TransactionReversalExecutionDetailHistory</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Print_MenuButton</Name>
								<ElementPosition>1968526670</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JounalDetails</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPerJournal</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerTransPerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DefermentSchedule_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>2146435070</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>DefermentScheduleTrans_IN</MenuItemName>
								<Text>@GLS5212</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>TransactionReversalDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJournalTransTransactionReversalDialog</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@GeneralLedger:TransactionReversalJournalReversalCaption</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>HeaderTabs</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>HeaderOverview</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>overviewVendTrans</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTrans_TransDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS7402</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_Voucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS12371</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_AccountNum</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@AccountsPayable:VendorFieldGroup</Label>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VendTableName</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_Invoice</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendTrans_Approver</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendTrans_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>VendTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_Txt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_CurrencyCode</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTrans_AmountCur</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PendingInvoice</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>hasPendingInvoice</DataMethod>
										<DataSource>VendTrans</DataSource>
										<Label>@sys109733</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldVoucherTotalWithTax</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>voucherTotalWithTax</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS67921</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>taxAmountReverse</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTaxAmountReverse</DataMethod>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS67811</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Splitter</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<FrameType>None</FrameType>
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverViewTab</Name>
						<ElementPosition>357913940</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverviewActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AddDelete</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Add</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Delete</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>OverviewFunctions</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>FinancialDimension</Name>
												<ElementPosition>715827880</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTransDimLedgerJourTrnVendInv</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>OffsetAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTrOffDimLedgerJourTrnVndInv</MenuItemName>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS138491</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxTransSource</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655760</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>TaxTransSourceLedgerJournalTrnApprove</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxDocumentLauncher</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxDocumentLauncher</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SplitPosting</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>390451572</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>LedgerJournalSplitPostingApproval</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>buttonVoucherTrans</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>LedgerTransVoucher</MenuItemName>
												<SaveRecord>No</SaveRecord>
												<Text>@SYS12371</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TransTaxInformation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>TransTaxInformation</MenuItemName>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>LedgerJournalTrans</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorExist</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>286331152</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>572662304</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTaxBranchDimension_TH</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>787410668</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTaxBranchDimension</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Label</Label>
										<ReferenceField>FinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1145324608</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Approved</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Approved</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CurrencyCode</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_LedgerVoucherType_CN</Name>
										<ElementPosition>1923787432</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN</Name>
										<ElementPosition>1968526674</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2004318064</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTransTaxExtension_OverrideSalesTax_Grid</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Footer</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SalesTax</Name>
										<ElementPosition>1610612733</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<Caption>@SYS67824</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>WithholdingTax_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>WithholdingTax_IN_TaxWithholdCalculate_TH</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxWithholdCalculate_TH</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTax_IN_TaxWithholdGroup</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxWithholdGroup</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH_TaxWithholdItemGroup</Name>
														<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTax_IN_TDSGroup_IN</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TDSGroup</DataField>
												<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTax_IN_TCSGroup_IN</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TCSGroup</DataField>
												<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@AccountsPayable:VendorInvoiceJournalList</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTab</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_Invoice1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN1</Name>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Transfer</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transfer</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Account</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalAccount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType1</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt1</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@AccountsPayable:AccountFieldGroup</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountInfo</Name>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType1</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11162</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_VatDueDate_W</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_IntraComVATDueDate_W</Name>
										<ElementPosition>1700091219</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_TaxDirectionControl</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxDirectionControl</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:SalesDirectionMainAcount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTransTaxExtension_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5878</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Triangulation</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtensionIN_AssessableValue_IN</Name>
										<ElementPosition>1700091219</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtensionIN_MaximumRetailPrice_IN</Name>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldexchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>exchRateTxt</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxt</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>crossrate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>crossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS7572</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportingCurrency</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingCrossrate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reportingCurrencyCrossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportingExchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxtForReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GeneralLedger:ReportingCurrency</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GSHT</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>CA</CountryRegionCodes>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GSHT_GSTHSTTaxType_CA</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GSTHSTTaxType_CA</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>GSTHSTTaxType_CA</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DiotInformation_MX</Name>
								<CountryRegionCodes>MX</CountryRegionCodes>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DiotInformation_MX_OperationType_MX</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OperationType_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>DiotInformation_MX</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReceiptDate_W</Name>
								<ElementPosition>1946157054</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ReceiptDate_W_ReceiptDate_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReceiptDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ReceiptDate_W</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CFDI_MX</Name>
								<CountryRegionCodes>MX</CountryRegionCodes>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CFDI_MX_CFDIUUID_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIUUID_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CFDI_MX</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InvoiceTab</Name>
						<ElementPosition>715827880</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_PurchIdRange</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PurchIdRange</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_VATNumJournal</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_EnterpriseNumber</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EnterpriseNumber</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_CFDIUUID_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIUUID_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceTH</Name>
								<ElementPosition>671088637</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Invoice_InvoiceDate_TH</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Invoice_InvoiceReceiptDate_TH</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Invoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashDiscount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>644245092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CashDiscDate</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DateCashDisc</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CashDiscAmount</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CashDiscCode</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>858993456</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_DocumentNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Document_DocumentDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalInvoiceDate</Label>
									</AxFormControl>
								</Controls>
								<DataGroup>Document</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document_TH</Name>
								<ElementPosition>1207959547</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Document_TaxInvoiceReceiptDate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_RealVendName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RealVendName</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Document_TH_TaxNatureOfAddress</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxNatureOfAddress</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_BranchNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BranchNumber</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_TaxRegNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxRegNum</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxInvoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Payment</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_Payment</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Payment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Invoice_Due</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Due</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymMode</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymSpec</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_PaymId</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Approve_InvoiceReleaseDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Approve_ReleaseDateComment</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDateComment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS828</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approve</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Approve_Approver</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Approve_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Approved_Approved</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Approved</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Agreement_RU</Name>
								<AllowEdit>No</AllowEdit>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>1717986912</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Agreement_RU_AgreementCompany_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AgreementCompany_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Agreement_RU_AccountAgreementId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Agreement_RU_M_accountAgreementDocumentTitle_RU</Name>
										<AllowEdit>No</AllowEdit>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Agreement_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VatRegister_PL</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>PL</CountryRegionCodes>
								<ElementPosition>1932735276</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendAccount_PL</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendAccount_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_Addressing_PL</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Addressing_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_VATNumJournal</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendName_PL</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendName_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VatRegister_PL_VatDueDate_W</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VatRegister_PL_IntraComVATDueDate_W</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_TaxPeriodPaymentCode_PL</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxPeriodPaymentCode_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxServiceTariffNumber</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxServiceTariffNumber_ServiceTariffId_PL</Name>
												<DataRelationPath>ServiceTariffNumber_PL</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TaxServiceTariff</DataSource>
										<Label>@GLS115893</Label>
										<ReferenceField>ServiceTariffNumber</ReferenceField>
										<ReplacementFieldGroup>ServiceTariffId</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CFDIWithholdingTax_MX</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CFDIWithholdingTax_MX_WithholdingTypeCode_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WithholdingTypeCode_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIBeneficiaryRetains_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIBeneficiaryRetains_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIFinancialSystem_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIFinancialSystem_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestBelongsDerivedFinOp_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestCashedInTheCurrentPeriod_MX</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestNominalAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestNominalAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestRealAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestRealAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestLossAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestLossAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CFDIWithholdingTax_MX</DataGroup>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12128</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentTab</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>894784850</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupNotificationToTheCentralBank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeText</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeText</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>GroupNotificationToTheCentralBank_ImportDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ImportDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankTransTypeCur_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankTransTypeCur_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU_BankCurrencyTransferId</Name>
												<DataRelationPath>BankCurrencyTransferLog_RU</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>BankCurrencyTransferLog_RU</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankPaymentRegistrationNum_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankPaymentRegistrationNum_LV</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NotificationToTheCentralBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS828</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>BankTab</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Bank</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Bank_BankTransType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Bank_PaymReference</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Bank_AnnouncementNum_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AnnouncementNum_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ThirdPartyBank</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ThirdPartyBank_CustVendBankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendBankAccountId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ThirdPartyBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS22173</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>1252698790</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTransaction</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_ProjTransId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_Txt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS15191</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectIdentificationLedger</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Group2_TransDate</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransDate</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<Label>@SYS54242</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group2_OffsetAccount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS80304</Label>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group2_AccountNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS80304</Label>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group2_ActivityNumber</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group2_ProjCategoryId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group2_ProjLinePropertyId</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5711</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectCostPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjectCostPrice_ProjQty</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjectCostPrice_CostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group2_ProjSalesCurrencyId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesCurrencyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group2_SalesPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesTax</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTax_ProjTaxGroupSales</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTax_ProjTaxItemGroupSales</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS4534</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AssetTab</Name>
						<ElementPosition>1431655760</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>LedgerJournalTrans_AssetTransType</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransType</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTrans_AssetBookId</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BookId</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DepreciationStartDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>DepreciationStartDate</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12578</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RemittanceTab</Name>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Remittance</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_RemittanceLocation</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_RemittanceLocation_Description</Name>
												<DataRelationPath>RemittanceLocation_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>RemittanceLocation</ReferenceField>
										<ReplacementFieldGroup>Description</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Remittance_RemittanceAddress</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayRemittanceAddress</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@sys152838</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@sys152838</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>HistoryTab</Name>
						<ElementPosition>1789569700</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentJournal</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReportedAsReadyBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22056</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovedBy</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ApprovedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RejectedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostedDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PostedDateTime</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ErrorLog</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorLog</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22915</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24582</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>VendInvoiceInfoTab</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1968526670</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendInvoiceInfo_OrderId</Name>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrderId</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendInvoiceInfo_ItemId</Name>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendInvoiceInfo_Name</Name>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ProductDimensions</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>ProductDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_Quantity</Name>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Quantity</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_Unit</Name>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Unit</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_UnitPrice</Name>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitPrice</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_LinePercent</Name>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePercent</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_LineDisc</Name>
										<ElementPosition>1651910490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineDisc</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_MultiLnPercent</Name>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MultiLnPercent</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendInvoiceInfo_MultiLnDisc</Name>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MultiLnDisc</DataField>
										<DataSource>VendInvoiceInfo</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>VendInvoiceInfo</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS74019</Caption>
						<DataSource>VendInvoiceInfo</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Tax1099Tab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields1</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields1_Tax1099Fields</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields1_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>g1099Fields1_Tax1099State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099StateAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099G1Fields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1342177278</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>State</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxID</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxWithheld</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxWithheld</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1936</Caption>
								<DataGroup>Tax1099G1Fields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099GFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Tax1099GFields_Tax1099TaxYear</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TaxYear</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099GFields_Tax1099TradeOrBusiness</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TradeOrBusiness</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1093</Caption>
								<DataGroup>Tax1099GFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099SFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099S</ConfigurationKey>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Tax1099SFields_Tax1099DateOfClosing</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099DateOfClosing</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099SFields_Tax1099AddressorLegalDesc</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099AddressorLegalDesc</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099SFields_Tax1099PropertyOrServices</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099PropertyOrServices</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099SFields_Tax1099BuyersTax</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099BuyersTax</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Tax1099SFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118159</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ForeignTradeTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForeignTrade</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1503238548</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_TransactionCode</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionCode</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_Transport</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transport</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_Port</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Port</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_StatProcId</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatProcId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Codes_Listcode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Listcode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Data_IntrastatCommodity</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>VendInvoiceIntrastat</DataSource>
										<ReferenceField>IntrastatCommodity</ReferenceField>
										<ReplacementFieldGroup>CommodityCode</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Data_NGPCodesTable_FR1</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>Data_NGPCodesTable_FR_NGPCode1</Name>
												<DataRelationPath>NGPCodesTable_FR</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<ReferenceField>NGPCodesTable_FR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Data_IntraUnit</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraUnit</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Data_StatisticsFactor</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatisticsFactor</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_OrigCountryRegionId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrigCountryRegionId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_OrigStateId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrigStateId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_CountyOrigDest</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CountyOrigDest</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@sys27650</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS27650</Caption>
					</AxFormControl>
				</Controls>
				<DataSource>LedgerJournalTrans</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Balances</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741822</ElementPosition>
				<ExtendedStyle>tabularFields</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>TabularFields</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TableCaption</Name>
						<ExtendedStyle>tabularFields_title</ExtendedStyle>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>RowHeaderGroup</Name>
						<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>UnusedColumn</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text></Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>DebitLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS9512</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>CreditLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS35221</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>DifferenceLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS95</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>BugetCheckResultsLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS342081</Text>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VoucherGroup</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1288490187</ElementPosition>
						<ExtendedStyle>tabularFields_row</ExtendedStyle>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>VoucherRowLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS86923</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherDebit</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherDebit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherCredit</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherCredit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>VoucherTotal</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>VoucherTotal</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>BudgetCheckResult</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
								<ExtendedStyle>budgetCheckResult_status</ExtendedStyle>
								<PreviewPartRef>BudgetCheckResultPreview</PreviewPartRef>
								<Skip>Yes</Skip>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayBudgetCheckResult</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS11131</Label>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<DataSource>LedgerJournalTrans</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>JournalGroup</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1717986916</ElementPosition>
						<ExtendedStyle>tabularFields_row</ExtendedStyle>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>JournalRowTextLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS10018</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalDebit</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalDebit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalCredit</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalCredit</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>JournalBalance</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>JournalBalance</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS24010</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<DataSource>LedgerJournalTrans</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BalancesFooter</Name>
						<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>None</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>