<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SalesAgreementCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SalesAgreementCreate extends FormRun implements AgreementCreateIForm
{
    SalesAgreementCreateForm salesAgreementCreateForm;
    SalesAgreementFormDatasourceManager salesAgreementFormDatasourceManager;
    AgreementFormArgs salesAgreementFormArgs;

    AgreementClassificationLookup agreementClassificationLookup;

    // <GEERU>
    #ISOCountryRegionCodes
    boolean                             countryRegion_RU;
}
]]></Source>
			</Method>
			<Method>
				<Name>parmSalesAgreementFormArgs</Name>
				<Source><![CDATA[
    // </GEERU>

    /// <summary>
    /// Gets or set the arguments object containing all parameters passed to the <see cref="SalesAgreement Form"/>.
    /// </summary>
    /// <param name = "_salesAgreementFormArgs">The <c>AgreementFormArgs</c> object.</param>
    /// <returns>
    /// The <c>AgreementFormArgs</c> object.
    /// </returns>
    public AgreementFormArgs parmSalesAgreementFormArgs(AgreementFormArgs _salesAgreementFormArgs = salesAgreementFormArgs)
    {
        salesAgreementFormArgs = _salesAgreementFormArgs;
        return salesAgreementFormArgs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the results of the Sales agreement creation process.
    /// </summary>
    /// <remarks>
    /// It is only relevant to call this method after the form has been closed with OK result.
    /// </remarks>
    /// <returns>
    /// The result of the creation. The object hold the new elements buffers and the result of the form.
    /// </returns>
    public AgreementCreateResult getResult()
    {
        AgreementCreateResult result = AgreementCreateResult::construct();

        result.parmCanceled(!element.closedOk());

        result.parmAgreementHeader(salesAgreementHeader);
        result.parmPurchSalesAgreementHeaderDefault(salesAgreementHeaderDefault);
        result.parmAgreementHeaderDefault(agreementHeaderDefault);
        result.parmAgreementHeaderExt_RU(salesAgreementHeaderExt_RU);
        result.parmTmsAgreementHeader(tmsSalesAgreementHeader);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSharedDatasourceManager</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the shared datasource manager between this form and <see cref="SalesAgreement Form"/>.
    /// </summary>
    void buildSharedDatasourceManager()
    {
        salesAgreementFormDatasourceManager = SalesAgreementFormDatasourceManager::construct();
        salesAgreementFormDatasourceManager.parmFormRun(element);
        salesAgreementFormDatasourceManager.parmAgreementHeader(salesAgreementHeader);
        salesAgreementFormDatasourceManager.parmPurchSalesAgreementHeaderDefault(salesAgreementHeaderDefault);
        salesAgreementFormDatasourceManager.parmAgreementHeaderDefault(agreementHeaderDefault);
        salesAgreementFormDatasourceManager.parmAgreementHeaderExt_RU(salesAgreementHeaderExt_RU);
        salesAgreementFormDatasourceManager.parmTmsAgreementHeader(tmsSalesAgreementHeader);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        if (!element.closedOk())
        {
            // Cancelling. Releasing sales agreement sequence id.
            salesAgreementCreateForm.parmNumberSeqFormHandler().formMethodClose();

            return true;
        }

        // Checking for mandatory fields.
        if (!salesAgreementHeader_ds.validateWrite())
        {
            return false;
        }

        // Essaie.
        ttsbegin;
        salesAgreementHeader_ds.write();

        // Setting up foreign keys in order to be able to validate data.
        agreementHeaderDefault.AgreementHeader = salesAgreementHeader.RecId;
        salesAgreementHeaderDefault.SalesAgreementHeader = salesAgreementHeader.RecId;
        if (countryRegion_RU)
        {
            salesAgreementHeaderExt_RU.initFromAgreementHeader(salesAgreementHeader);
        }
        tmsSalesAgreementHeader.initFromSalesAgreement(salesAgreementHeader.RecId);

        // Validating.
        if (!agreementHeaderDefault_ds.validateWrite() ||
            !salesAgreementHeaderDefault_ds.validateWrite() ||
            !salesAgreementHeaderExt_RU_ds.validateWrite() ||
            !tmsSalesAgreementHeader_ds.validateWrite())
        {
            // This case must never happen, the validation has to be performed on fields
            // before reaching this.
            throw Global::error("@SYS6144");
        }

        // Writing.
        agreementHeaderDefault_ds.write();
        salesAgreementHeaderDefault_ds.write();
        salesAgreementHeaderExt_RU_ds.write();
        tmsSalesAgreementHeader_ds.write();

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the Create Sales Agreement form and creates a new instance of the Sales Agreement Header class.
    /// </summary>
    public void init()
    {
        xArgs args = element.args() as xArgs;

        super();

        // Checking if the required parameter is passed.
        if (!args || !args.caller() || !args.parmObject())
        {
            throw error("@SYS22539");
        }

        element.buildSharedDatasourceManager();

        // Init of dependency objects.
        agreementClassificationLookup = AgreementClassificationLookup::newAgreementClassificationLookup(tablenum(SalesAgreementHeader));

        // Retrieving arguments of the SalesAgreement form and instantiate SalesAgreementCreateForm class.
        salesAgreementFormArgs = args.parmObject() as AgreementFormArgs;
        salesAgreementCreateForm = SalesAgreementCreateForm::newSalesAgreementCreateForm(element);
        salesAgreementCreateForm.getSysLastValue();
        salesAgreementCreateForm.parmAgreementFormArgs(salesAgreementFormArgs);

        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>        
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        // Creation of the new reccord.
        salesAgreementHeader_ds.create();

        // Focusing on customer account.
        salesAgreementHeader_CustAccount.setFocus();

        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SalesAgreementHeader</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Initializing values on a newly created Sales Agreement Header record.
        /// </summary>
        public void initValue()
        {
            super();

            salesAgreementHeader.DefaultAgreementLineType = salesAgreementCreateForm.parmDefaultCommitmentType();

            /// When SalesAgreement form has been called to create a new SalesAgreement and we have customer
            /// record passed via args, the SalesAgreementCreate form has to be prefilled
            /// with the customer account information.
            //
            // WE INITIALISE AccountNum field out of CustTable record passed with args.
            if (salesAgreementFormArgs.parmTransferAccountOnCreate())
            {
                salesAgreementHeader.CustAccount = salesAgreementFormArgs.parmTransferCustVendAccountAccountNum();
                salesAgreementHeader.CustomerDataAreaId = salesAgreementFormArgs.parmTransferCustVendAccountDataAreaId();

                salesAgreementFormDatasourceManager.transferCustAccount(false);
            }

            // <GEERU>
            if (countryRegion_RU)
            {
                salesAgreementHeaderExt_RU_ds.initValue();
                if (salesAgreementHeader.CustAccount)
                {
                    salesAgreementHeaderDefault.initFromCustTable_RU(CustTable::find(salesAgreementHeader.CustAccount));
                }
            }
            else 
            // </GEERU>

            // Specific init depending on the caller.
            switch (salesAgreementFormArgs.parmCallerDataSet())
            {
                case tableNum(ProjTable):
                    agreementHeaderDefault.initFromProjTable(salesAgreementFormArgs.parmCallerRecord());
                    if (!salesAgreementFormDatasourceManager.validateProject())
                    {
                        agreementHeaderDefault.Project = '';
                        agreementHeaderDefault.ProjectDataAreaId = '';
                    }
                    else
                    {
                        salesAgreementFormDatasourceManager.initFromProject();
                    }

                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Determines whether the current Sales Agreement Header is valid to be written.
        /// </summary>
        /// <returns>true if the record is valid; otherwise, false.</returns>
        public boolean validateWrite()
        {
            boolean ret;

            // <GEERU>
            if (countryRegion_RU)
            {
                if (salesAgreementHeader.AgreementClassification)
                {
                    salesAgreementCreateForm.parmNumberSeqFormHandler().formMethodDataSourceCreate();
                }
                else
                {
                    return checkFailed(strFmt("@SYS84753", fieldPName(SalesAgreementHeader, AgreementClassification)));
                }
                if (!salesAgreementHeaderExt_RU.AgreementDate)
                {
                    return checkFailed(strFmt("@SYS84753", fieldPName(SalesAgreementHeaderExt_RU, AgreementDate)));
                }

                if (!salesAgreementHeaderExt_RU.checkAgreementUniqueness(salesAgreementHeader))
                {
                    return false;
                }
            }
            // </GEERU>

            ret = super();

            // Check project information is set correctly...
            if (agreementHeaderDefault_ds.object(fieldNum(AgreementHeaderDefault, Project)).mandatory()
                && !agreementHeaderDefault.Project)
            {
                ret = checkFailed(strFmt("@SYS84753", fieldPName(AgreementHeaderDefault, Project)));
            }

            if (ret && !salesAgreementCreateForm.parmNumberSeqFormHandler().formMethodDataSourceValidateWrite())
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Committing the Number Sequence record and saving the current default commitment type before writing the
        /// Sales Agreement Header record to the database.
        /// Also hanles currency conversion if necessary.
        /// </summary>
        public void write()
        {
            boolean doRefresh = false;

            if (!element.closedOk())
            {
                return;
            }

            salesAgreementCreateForm.parmNumberSeqFormHandler().formMethodDataSourceWrite();

            // Save the default line commitment type
            salesAgreementCreateForm.parmDefaultCommitmentType(salesAgreementHeader.DefaultAgreementLineType);
            salesAgreementCreateForm.saveSysLastValue();

            super();

            if (doRefresh)
            {
                salesAgreementHeader_ds.reread();
                salesAgreementHeader_ds.refresh();
            }
            // <GEERU>
            if (countryRegion_RU)
            {
                salesAgreementHeaderExt_RU_DS.reread();
                salesAgreementHeaderExt_RU_DS.refresh();
            }
            // </GEERU>
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Creating a new Sales Agreement Header record.
        /// </summary>
        /// <param name="_append">Boolean indicating whether the new record should be appended.</param>
        public void create(boolean _append = false)
        {
            if (!salesAgreementHeader.RecId)
            {
                super(_append);

                tmsSalesAgreementHeader.initFromSalesAgreement(salesAgreementHeader.RecId);               
                tmsSalesAgreementHeader.setCarrierFieldsFromDlvMode(agreementHeaderDefault.DeliveryMode);

                salesAgreementCreateForm.parmNumberSeqFormHandler().formMethodDataSourceCreate();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>research</Name>
						<Source><![CDATA[
        public void research(boolean _retainPosition = false)
        {
            if (!SalesPurchAgreementCreateSkipResearchFlight::instance().isEnabled())
            {
                super(_retainPosition);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AgreementClassification</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            ///     Performs a custom lookup on the <c>AgreementClassification</c> table.
            /// </summary>
            /// <param name="_formReferenceControl">
            ///     The form control on which the lookup will be performed.
            /// </param>
            /// <returns>
            ///     A record of the type <c>AgreementClassification</c> selected by the user.
            /// </returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return agreementClassificationLookup.lookupAgreementClassification(_formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustAccount</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (salesAgreementHeader.CustAccount)
                {
                    if (!CustTable::exist(salesAgreementHeader.CustAccount))
                    {
                        ret = ret && checkFailed(strFmt("@SYS112224",salesAgreementHeader.CustAccount,fieldId2name(tableNum(CustTable),fieldNum(CustTable,AccountNum)),tableId2name(tableNum(CustTable))));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Called when the Customer Account is modified.
            /// </summary>
            /// <remarks>
            /// Transferring customer data to the Sales Agreement Header.
            /// </remarks>
            public void modified()
            {
                super();

                salesAgreementFormDatasourceManager.transferCustAccount();

                salesAgreementHeader_DefaultAgreementLineType.allowEdit(!salesAgreementHeader.isAgreementUsingActiveIntercompanyPartner());
                salesAgreementHeader_ds.refresh();

                // refresh delivery information
                agreementHeaderDefault_ds.refresh();

                salesAgreementFormDatasourceManager.tmsSetCarrierFieldsFromDlvMode(agreementHeaderDefault.DeliveryMode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SalesAgreementHeaderDefault</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Determines whether the current Sales Agreement Header is valid to be written.
        /// </summary>
        /// <returns>true if the record is valid; otherwise, false.</returns>
        public boolean validateWrite()
        {
            if (!element.closedOk())
            {
                return true;
            }

            boolean ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>AgreementHeaderDefault</Name>
				<Methods>
					<Method>
						<Name>editContactPersonName</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get and sets the Contact Person
        /// </summary>
        /// <param name="_set">
        /// true if the Contact Person Name is set; otherwise, false.
        /// </param>
        /// <param name="_agreementHeaderDefault">
        /// A table buffer containing the current Agreement Header Default table values.
        /// </param>
        /// <param name="_name">
        /// A string containing the Contact Person Name if the _set parameter is true; otherwise, empty.
        /// </param>
        /// <returns>
        /// Name of the Contact Person based on the Agreement Header Default record.
        /// </returns>
        edit ContactPersonName editContactPersonName(boolean                _set,
                                                     AgreementHeaderDefault _agreementHeaderDefault,
                                                     ContactPersonName      _name)
        {
            return salesAgreementFormDatasourceManager.editContactPersonName(_set,
                _agreementHeaderDefault,
                _name);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Determines whether the current Sales Agreement Header is valid to be written.
        /// </summary>
        /// <returns>true if the record is valid; otherwise, false.</returns>
        public boolean validateWrite()
        {
            if (!element.closedOk())
            {
                return true;
            }

            boolean ret;

            ret = super();

            ret = ret && salesAgreementFormDatasourceManager.validateProject();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Persists a record in the database when super is called.
        /// </summary>
        /// <remarks>
        ///    TMS sales agreement records can be created during super() call so we need to reread a corresponding data source
        /// </remarks>
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            TMSSalesAgreementHeader newTMSSalesAgreementHeader;

            super();

            newTMSSalesAgreementHeader = TMSSalesAgreementHeader::find(salesAgreementHeader.RecId);

            tmsSalesAgreementHeader.data(newTMSSalesAgreementHeader);
            tmsSalesAgreementHeader.reread();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DeliveryPostalAddress</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            /// Looks up the delivery address of the selected custAccount.
            /// </summary>
            /// <param name = "_formReferenceControl">
            /// The form reference control that is defined for the data type of the field.
            /// </param>
            /// <returns>
            /// The selected <c>LogisticsPostalAddress</c> record.
            /// </returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return AgreementHeader::logisticsLocationSelectionLookup(_formReferenceControl,
                                                             CustTable::find(salesAgreementHeader.CustAccount));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DeliveryTerm</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (countryRegion_RU && agreementHeaderDefault.DeliveryTerm)
                {
                    salesAgreementHeaderExt_RU.initFromDeliveryTerm(DlvTerm::find(agreementHeaderDefault.DeliveryTerm));
                    salesAgreementHeaderExt_RU_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Project</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && salesAgreementFormDatasourceManager.validateProject();

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                salesAgreementFormDatasourceManager.initFromProject();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SalesAgreementHeaderExt_RU</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            if (!element.closedOk())
            {
                return true;
            }

            boolean ret = true;

            if (countryRegion_RU)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            if (countryRegion_RU)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TMSSalesAgreementHeader</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Persists a record in the database when super is called.
        /// </summary>
        /// <remarks>
        /// Some sales agreement records don't have a corresponding tms transportation agreement record
        /// so call write method and not super and it will update database properly
        /// </remarks>
        public void write()
        {
            if (!element.closedOk())
            {
                return;
            }

            if (!tmsSalesAgreementHeader.RefRecId)
            {
                tmsSalesAgreementHeader.initFromSalesAgreement(salesAgreementHeader.RecId);
            }

            tmsSalesAgreementHeader.write();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the current record is valid and ready to be written to the database.
        /// </summary>
        /// <returns>
        /// true if the record is valid; otherwise, false.
        /// </returns>
        /// <remarks>
        /// Some sales agreement records don't have a corresponding tms transportation agreement record
        /// so call super only if corresponding record exists
        /// </remarks>
        public boolean validateWrite()
        {
            if (!element.closedOk())
            {
                return true;
            }

            boolean ret = true;

            if (tmsSalesAgreementHeader.CarrierCode != "" && tmsSalesAgreementHeader.CarrierServiceCode == "")
            {
                ret = checkFailed("@TRX733");
            }

            if (ret
            && tmsSalesAgreementHeader.CarrierCode
            && tmsSalesAgreementHeader.CarrierServiceCode
            && !TMSCarrierService::exist(tmsSalesAgreementHeader.CarrierServiceCode, tmsSalesAgreementHeader.CarrierCode))
            {
                ret = checkfailed("@TRX734");
            }

            if (ret && tmsSalesAgreementHeader.RecId != 0)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>editContactPersonName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            agreementHeaderDefault_ds.object(fieldNum(AgreementHeaderDefault, ContactPerson)).jumpRef();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ContactPerson::lookupCustContactPerson(agreementHeaderDefault_ContactPerson,
                                                   salesAgreementHeader.CustAccount,
                                                   editContactPersonName,
                                                   agreementHeaderDefault.ContactPerson);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            salesAgreementHeader_ds.validateWrite();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SalesAgreementHeader</Name>
			<Table>SalesAgreementHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgreementClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultAgreementLineEffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultAgreementLineExpirationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultAgreementLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentExternalReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarliestLineEffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Language</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestLineExpirationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Originator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesNumberSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SellingLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoSearch>No</AutoSearch>
			<DelayActive>No</DelayActive>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesAgreementHeaderDefault</Name>
			<Table>SalesAgreementHeaderDefault</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Campaign</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CampaignDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionCustomerGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionCustomerGroupDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionSalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionSalesGroupDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerInvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerInvoiceAccountDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerMethodOfPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerMethodOfPaymentDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerPaymentSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerPaymentSpecDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRequisitionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryCertificateRequired_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchangeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssueOwnEntryCertificate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsExcludeFromRebate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesAgreementHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPool</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnitDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerSalesResponsible</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SalesAgreementHeader</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>AgreementHeaderDefault</Name>
			<Table>AgreementHeaderDefault</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgreementHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryModeDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTermDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargeGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargeGroupApplicationModule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargeGroupDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSchedule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentScheduleDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentTerms</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentTermsDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Project</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>LogisticsPostalAddress</Name>
					<Table>LogisticsPostalAddress</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Address</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Apartment_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Building_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BuildingCompliment</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>City</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CityKana_JP</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CityRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CountryRegionId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>County</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>District</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DistrictName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FlatId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>HouseId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsPrivate</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Latitude</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Location</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Longitude</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PostBox</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PrivateForParty</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>State</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Street</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetId_RU</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetKana_JP</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StreetNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TimeZone</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ValidFrom</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ValidTo</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ZipCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ZipCodeRecId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>AgreementHeaderDefault</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>DeliveryPostalAddress</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<JoinSource>SalesAgreementHeader</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesAgreementHeaderExt_RU</Name>
			<Table>SalesAgreementHeaderExt_RU</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgencyAgreement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementSubject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementVatAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CellularPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPrepaymentPostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneLocal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoicePostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountDifference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TeleFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Telex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Url</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SalesAgreementHeader</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TMSSalesAgreementHeader</Name>
			<Table>TMSSalesAgreementHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CarrierCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierServiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteConfigCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationTemplateId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SalesAgreementHeader</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SCM:SalesAgreementCreateTitle</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabControl">
						<Name>ContentTabs</Name>
						<Type>Tab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTabPageControl">
								<Name>CustomerTab</Name>
								<Type>TabPage</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CustomerMain</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>AgreementHeaderDefault_ContactPerson</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataField>ContactPerson</DataField>
												<DataSource>AgreementHeaderDefault</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeader_CustAccount</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>644245092</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CustAccount</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CustName</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>429496728</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>custName</DataMethod>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>editContactPersonName</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993456</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editContactPersonName</DataMethod>
												<DataSource>AgreementHeaderDefault</DataSource>
												<LookupButton>Always</LookupButton>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>HeaderDeliveryAddress</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>NameAndAddress</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>AgreementHeaderDefault_DeliveryName</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>DeliveryName</DataField>
														<DataSource>AgreementHeaderDefault</DataSource>
														<FastTabSummary>Yes</FastTabSummary>
														<MultiLine>Yes</MultiLine>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>LogisticsPostalAddressDeliveryHeader_Address</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Address</DataField>
														<DataSource>LogisticsPostalAddress</DataSource>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Columns>2</Columns>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GroupHeaderAddress</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Pattern>HorizontalFieldsButtonsGroup</Pattern>
												<PatternVersion>UX7 1.2</PatternVersion>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>ReferenceGroup</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ReferenceGroup_Location_Description</Name>
																<DataRelationPath>DeliveryPostalAddress.Location</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>AgreementHeaderDefault</DataSource>
														<Label>@SYS7924</Label>
														<ReferenceField>DeliveryPostalAddress</ReferenceField>
														<ReplacementFieldGroup>LocationReference</ReplacementFieldGroup>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>LogisticsLocationSelect</Name>
														<ElementPosition>1288490187</ElementPosition>
														<ExtendedStyle>button_inlineImageOnly</ExtendedStyle>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<DataSource>AgreementHeaderDefault</DataSource>
														<MenuItemName>LogisticsLocationSelect</MenuItemName>
														<NormalImage>Map</NormalImage>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>LogisticsPostalAddressNewHeader</Name>
														<ElementPosition>1717986916</ElementPosition>
														<ExtendedStyle>button_inlineImageOnly</ExtendedStyle>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<DataSource>AgreementHeaderDefault</DataSource>
														<MenuItemName>DirPartyPostalAddressNew</MenuItemName>
														<NormalImage>New</NormalImage>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Columnspace>4</Columnspace>
												<ColumnspaceMode>Fixed</ColumnspaceMode>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7924</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DocumentMain</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>SalesAgreementHeader_AgreementClassification</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>SalesAgreementHeader</DataSource>
												<Label>@SYS311168</Label>
												<ReferenceField>AgreementClassification</ReferenceField>
											</AxFormControl>
										</Controls>
										<Caption>@SYS124781</Caption>
									</AxFormControl>
								</Controls>
								<Caption>@SYS302</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabPageControl">
								<Name>GeneralTab</Name>
								<Type>TabPage</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Customer</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>AgreementHeaderDefault_ExternalReference</Name>
												<ElementPosition>1288490185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ExternalReference</DataField>
												<DataSource>AgreementHeaderDefault</DataSource>
												<Label>@SYS23010</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeaderDefault_CustomerInvoiceAccount</Name>
												<ElementPosition>1503238550</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CustomerInvoiceAccount</DataField>
												<DataSource>SalesAgreementHeaderDefault</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeader_Currency</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1717986915</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Currency</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS302</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ValidityPeriod</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DefaultAgreementLineEffectiveDate</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DefaultAgreementLineEffectiveDate</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DefaultAgreementLineExpirationDate</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DefaultAgreementLineExpirationDate</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS343991</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Document</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeader_SalesNumberSequence</Name>
												<ElementPosition>390451572</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>SalesNumberSequence</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
												<FastTabSummary>Yes</FastTabSummary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeader_DocumentTitle</Name>
												<ElementPosition>585677358</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DocumentTitle</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
												<FastTabSummary>Yes</FastTabSummary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>SalesAgreementHeaderExt_RU_AgreementDate</Name>
												<ElementPosition>780903144</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>AgreementDate</DataField>
												<DataSource>SalesAgreementHeaderExt_RU</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SalesAgreementHeader_DocumentExternalReference</Name>
												<ElementPosition>1171354716</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DocumentExternalReference</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>SalesAgreementHeader_DefaultAgreementLineType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1757032074</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DefaultAgreementLineType</DataField>
												<DataSource>SalesAgreementHeader</DataSource>
												<Items />
											</AxFormControl>
										</Controls>
										<Caption>@SYS124781</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Project</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Project_Project</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Project</DataField>
												<DataSource>AgreementHeaderDefault</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS4534</Caption>
										<DataGroup>Project</DataGroup>
										<DataSource>AgreementHeaderDefault</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<ColumnsMode>Fill</ColumnsMode>
								<Caption>@SYS316573</Caption>
							</AxFormControl>
						</Controls>
						<Style>FastTabs</Style>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitButtons</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>