<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjTableLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjTableLookup extends FormRun implements ProjITypeFilterable
{
    TableId                 tmpTableId;

    ResourceRecId           resourceRecId;
    ProjCategoryId          categoryId;
    ProjGroupId             projGroupId;
    ProjType                projType;
    boolean                 useProjType;
    NoYes                   returnTemplate;
    SMAServiceOrderTable    smaServiceOrderTable;

}
]]></Source>
			</Method>
			<Method>
				<Name>byProjGroup</Name>
				<Source><![CDATA[
    void byProjGroup(ProjGroupId  _projGroupId)
    {
        projGroupId     = _projGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>byProjType</Name>
				<Source><![CDATA[
    void byProjType(ProjType _projType)
    {
        projType        = _projType;
        useProjType     = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        ProjValCheckTrans projValTrans = element.args().parmObject();
        returnTemplate                 = element.args().parmEnum();

        if (element.args() && element.args().dataset())
        {
            tmpTableId = element.args().dataset();
        }

        if (tableNum(SMAServiceOrderTable) == tmpTableId)
        {
            smaServiceOrderTable = element.args().record();
        }

        if (!projValTrans)
        {
            projValTrans = new ProjValCheckTrans();

            if (projValTrans.checkBuffer(element.args()))
            {
                projValTrans.setVariablesFromBuffer(element.args());
                if (projValTrans.checkProjType())
                {
                    projType = projValTrans.parmProjType();
                    useProjType = true;
                }
            }
        }

        categoryId = projValTrans.parmCategoryId();
        resourceRecId = projValTrans.parmResource();

        super();

        element.selectMode(projTable_ProjId);

        ProjMutilContractLinesFeatureFormController::updateFormControlVisibity(element, [Type.id()]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ProjOpsManagementLogger logger = ProjOpsManagementLogger::createLogger(formStr(ProjTableLookup));
        using (var activityContext = logger.projOpsManagementActivity().projTableLookupContext())
        {
            activityContext.addCustomProperty(ProjOpsManagementInstrumentationActivities::Action, ProjOpsManagementInstrumentationActivities::ProjTableLookup);

            FormControl                 callingControl = SysTableLookup::getCallerControl(element.args());
            boolean                     filterLookup  = false;
            FormStringControl           formStringControl;
            SegmentedEntryControl       segmentedEntryControl;

            if (callingControl is FormStringControl)
            {
                formStringControl = callingControl as FormStringControl;

                filterLookup = SysTableLookup::filterLookupPreRun(formStringControl, projTable_ProjId, ProjProjectLookup_DS);

                super();

                SysTableLookup::filterLookupPostRun(filterLookup, formStringControl.text(), projTable_ProjId, ProjProjectLookup_DS);
            }
            else if (callingControl is SegmentedEntryControl)
            {
                segmentedEntryControl = callingControl as SegmentedEntryControl;

                filterLookup =
                SegmentedEntryTableLookup::filterSegmentedLookupPreRun(segmentedEntryControl, projTable_ProjId, ProjProjectLookup_DS);

                super();

                SysTableLookup::filterLookupPostRun(filterLookup, segmentedEntryControl.currentSegmentText(), projTable_ProjId, ProjProjectLookup_DS);
            }
            else
            {
                throw error(Error::wrongUseOfFunction(funcName()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelectRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Override this method to support custom server form call backs
    ///  in the SegmentedEntryControl.
    /// </summary>
    /// <param name = "_selectedRecord">The record selected in the lookup.</param>
    public void closeSelectRecord(Common _selectedRecord)
    {
        FormControl callingControl = SysTableLookup::getCallerControl(element.args());
        if (callingControl is SegmentedEntryControl)
        {
            SegmentedEntryControl sec = callingControl as SegmentedEntryControl;
            ProjProjectLookup selectedProject = _selectedRecord as ProjProjectLookup;
            sec.updateCustomLookupNaturalKey(selectedProject.ProjId);
            this.close();
        }
        else
        {
            super(_selectedRecord);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParmToProjLookup</Name>
				<Source><![CDATA[
/// <summary>
///     Updates the parm variables of <c>ProjTableLookup</c> object.
/// </summary>
/// <returns>
///     <c>ProjTableLookup</c> object.
/// </returns>
    public ProjTableLookup setParmToProjLookup()
    {
        ProjTableLookup pLookup = new ProjTableLookup();

        pLookup.parmProjType(projType);
        pLookup.parmSMAServiceOrderTable(smaServiceOrderTable);
        pLookup.parmUseProjType(useProjType);

        return pLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProjLookupQuery</Name>
				<Source><![CDATA[
/// <summary>
///     Creates project lookup query.
/// </summary>
/// <returns>
///     <c>ProjTableLookup</c> query object.
/// </returns>
    protected query createProjLookupQuery()
    {
        Query q;
        ProjTableLookup pLookup = element.setParmToProjLookup();
        
        if (element.args().dataset() == tableNum(TSTimesheetLine) && element.args().parm())
        {
            pLookup.parmCustAccount(element.args().parm());
        }

        // Build query used for the Project lookup
        if (element.args().dataset() == tableNum(TSTimesheetFavorites) && element.args().parm())
        {
            q = new Query(queryStr(ProjProjectWorkerGroup_Validation));
            q.dataSourceTable(tableNum(ProjValEmplProjSetup)).addRange(fieldNum(ProjValEmplProjSetup, GroupId)).value(queryValue(element.args().parm()));
        }
        else if (element.args().dataset() == tableNum(VendInvoiceInfoLine_Project))
        {
            q = pLookup.buildProjectLookupQueryResource(tmpTableId, categoryId, resourceRecId, true);
        }
        else
        {
            q = pLookup.buildProjectLookupQueryResource(tmpTableId, categoryId, resourceRecId);
        }

        if (returnTemplate)
        {
            q.dataSourceTable(tableNum(ProjProjectLookup)).addRange(fieldNum(ProjProjectLookup, Template)).value('1');
        }
        else
        {
            q.dataSourceTable(tableNum(ProjProjectLookup)).addRange(fieldNum(ProjProjectLookup, Template)).value('0');
        }

        return q;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjProjectLookup</Name>
				<Methods>
					<Method>
						<Name>showFinished</Name>
						<Source><![CDATA[
        boolean showFinished()
        {
            return ProjParameters::find().ShowClosedProjectsInLookup;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Creates project lookup query.
        /// </summary>
        void init()
        {
            super();

            Query q = element.createProjLookupQuery();
            this.query(q);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjProjectLookup</Name>
			<Table>ProjProjectLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Header</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Stage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StageLanguage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Template</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<LinkType>Active</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Caption xmlns="">@SYS4534</Caption>
		<DataSource xmlns="">ProjProjectLookup</DataSource>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProjTable_ProjId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ProjId</DataField>
						<DataSource>ProjProjectLookup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProjTable_Name</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>ProjProjectLookup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Type</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Type</DataField>
						<DataSource>ProjProjectLookup</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustAccount</Name>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustAccount</DataField>
						<DataSource>ProjProjectLookup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Stage</Name>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Stage</DataField>
						<DataSource>ProjProjectLookup</DataSource>
						<Items />
					</AxFormControl>
				</Controls>
				<DataSource>ProjProjectLookup</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>