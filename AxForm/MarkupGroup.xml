<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MarkupGroup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class MarkupGroup extends FormRun
    {
        QueryBuildRange blockModule;
        MarkupModule    module;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void  init()
    {
        Object  callerObject;
        super();

        blockModule = markupGroup_ds.query().dataSourceTable(tablenum(MarkupGroup)).addRange(fieldnum(MarkupGroup, Module));
        if (element.args().parmEnumType())
        {
            module      = element.args().parmEnum();
            blockModule.value(queryValue(module));
        }
        else
        {
            switch (element.args().dataset())
            {
                case tablenum(InventTableModule):
                case tablenum(InventParameters):
                    module =
                            MarkupModuleType::Invent;
                    blockModule.value(queryValue(module));
                    break;
                case tablenum(CustTable):
                case tablenum(SalesTable):
                    module =
                            MarkupModuleType::Cust;
                    blockModule.value(queryValue(module));
                    break;
                case tablenum(VendTable):
                case tablenum(PurchTable):
                    module =
                            MarkupModuleType::Vend;
                    blockModule.value(queryValue(module));
                    break;
                default:
                    if (element.args().lookupValue() && element.args().name() == formstr(MarkupGroup))
                    {
                        callerObject = element.args().caller();
                        module = callerObject.module();
                        blockModule.value(queryValue(module));
                    }
                    break;
            }
        }
        if (element.args() && element.args().menuItemName())
        {
            this.design().caption(SysDictMenu::newMenuItem(element.args().menuItemName(), element.args().menuItemType()).label());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    MarkupModule module()
    {
        return module;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>MarkupGroup</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            markupGroup.Module = module;
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void  write()
        {
            if (element.args().parmEnumType())
            {
                markupGroup.Module = module;
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            markupGroup_Group.allowEdit(!markupGroup.RecId);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MarkupGroup</Name>
			<Table>MarkupGroup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailConcessionFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Sys3905</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">MarkupGroup</TitleDataSource>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MarkupGroup_Group</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>GroupId</DataField>
						<DataSource>MarkupGroup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MarkupGroup_Txt</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Txt</DataField>
						<DataSource>MarkupGroup</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>MarkupGroup</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>