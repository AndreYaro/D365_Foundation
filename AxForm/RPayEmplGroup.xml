<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayEmplGroup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RPayEmplGroup extends FormRun
    {
        RHRMEmplTable   emplTable;
        str             groupTypeQueryValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupType</Name>
				<Source><![CDATA[
        public str groupType()
    {
        return groupTypeQueryValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        Common common = element.args().record();

        groupTypeQueryValue = queryValue(enum2int(element.args().parmEnum()));

        super();

        if (common.TableId == tablenum(RHRMEmplTable))
        {
            emplTable = common;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRage</Name>
				<Source><![CDATA[
        public void updateRage()
    {
        QueryBuildRange         qbrGroupTable;
        str                     strQuery;
        RHRMEmplTable           localEmplTable;

        if (element.args().record() && element.args().record().TableId == tableNum(RHRMEmplTable))
        {
            localEmplTable = element.args().record();

            qbrGroupTable = findOrCreateRange_W(RPayGroupTable_ds.queryBuildDataSource(), fieldNum(RPayGroupTable, DataAreaId));

            strQuery = strFmt('((%1.PersonEmplId=="%3") && (%2.Type==%4)) || ((%1.PersonEmplId=="%5") && (%2.Type==%6))',
                                        PayGroupMember_ds.name(),
                                        RPayGroupTable_ds.name(),
                                        queryValue(localEmplTable.EmployeeId),
                                        any2int(RPayGroupType::Employee),
                                        queryValue(localEmplTable.personTable().PersonnelNumber),
                                        any2int(RPayGroupType::Person));

            qbrGroupTable.value(strQuery);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayGroupMember</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
                public void linkActive()
        {
            element.updateRage();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
                public void init()
        {
            super();

            this.cacheAddMethod(tablemethodstr(RPayGroupMember, groupName));
            this.cacheAddMethod(tablemethodstr(RPayGroupMember, groupType));
            this.cacheAddMethod(tablemethodstr(RPayGroupMember, hasQuery));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
                public int active()
        {
            int ret;

            ret = super();
            this.allowEdit(! RPayGroupTable::find(payGroupMember.PayGroup).hasQuery());
            this.allowDelete(this.allowEdit());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PayGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
                        public void modified()
            {
                RPayGroupTable localGroupTable;

                super();

                payGroupMember_ds.cacheCalculateMethod(tablemethodstr(RPayGroupMember,groupName));
                payGroupMember_ds.cacheCalculateMethod(tablemethodstr(RPayGroupMember,groupType));
                payGroupMember_ds.cacheCalculateMethod(tablemethodstr(RPayGroupMember,hasQuery));

                if (emplTable)
                {
                    localGroupTable = RPayGroupTable::find(PayGroupMember.PayGroup);

                    if (localGroupTable.Type == RPayGroupType::Person)
                    {
                        PayGroupMember.PersonEmplId = emplTable.personTable().PersonnelNumber;
                    }

                    if (localGroupTable.Type == RPayGroupType::Employee)
                    {
                        PayGroupMember.PersonEmplId = emplTable.EmployeeId;
                    }
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
                        public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret)
                {
                    if (RPayGroupTable::find(payGroupMember.PayGroup).hasQuery())
                    {
                        ret = checkFailed(strfmt("@GLS106198", payGroupMember.PayGroup));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RPayGroupTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
                public void write()
        {
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
                public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
                public void init()
        {
            super();

            element.updateRage();

            findOrCreateRange_W(RPayGroupTable_ds.queryBuildDataSource(), fieldNum(RPayGroupTable, Type), element.groupType());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Refresh</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
                void clicked()
        {
            super();

            if (emplTable.EmployeeId)
            {
                RPayGroupMemberEngine::refreshEmpl(emplTable);
                payGroupMember_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PayGroupMember_PayGroup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
                public void lookup()
        {
            RPayGroupTable::lookupGroupWithoutQuery(this, groupTypeQueryValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayGroupMember</Name>
			<Table>RPayGroupMember</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonEmplId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>IndxPayGroup</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RPayGroupTable</Name>
			<Table>RPayGroupTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Query</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayGroupMember</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS105278</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">PayGroupMember</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Refresh</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<LeftMode>RightEdge</LeftMode>
								<NeededPermission>Delete</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RUP1208</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1252698793</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>groupType</Name>
						<ElementPosition>409044504</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>groupType</DataMethod>
						<DataSource>PayGroupMember</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PayGroupMember_PayGroup</Name>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PayGroup</DataField>
						<DataSource>PayGroupMember</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Name</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>GroupName</DataMethod>
						<DataSource>PayGroupMember</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>PayGroupMember_FromDate</Name>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FromDate</DataField>
						<DataSource>PayGroupMember</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>PayGroupMember_ToDate</Name>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ToDate</DataField>
						<DataSource>PayGroupMember</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>hasQuery</Name>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataMethod>hasQuery</DataMethod>
						<DataSource>PayGroupMember</DataSource>
						<Label>@SYS13579</Label>
					</AxFormControl>
				</Controls>
				<DataSource>PayGroupMember</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>