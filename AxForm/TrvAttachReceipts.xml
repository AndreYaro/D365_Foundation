<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvAttachReceipts</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvAttachReceipts extends FormRun
{
    TrvExpTable                         trvExpTable;
    TrvExpTrans                         trvExpTrans;
    HcmWorkerRecId                      creatingWorker;
    TrvUnreconciledExpenseTransaction   unreconciledReceiptContainer;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args() && element.args().record())
        {
            if (element.args().dataset() == tablenum(TrvExpTable))
            {
                select firstonly trvExpTable where trvExpTable.RecId == element.args().record().RecId;
                creatingWorker = trvExpTable.CreatingWorker;

                Instructions.text("@Expense:AddExistingReceiptInstruction_ExpenseReport");
            }
            else if (element.args().dataset() == tablenum(TrvExpTrans))
            {
                select firstonly trvExpTrans where trvExpTrans.RecId == element.args().record().RecId;

                select firstonly ExpNumber, RecId from trvExpTable
                    where trvExpTable.RecId == trvExpTrans.TrvExpTable;

                creatingWorker = trvExpTrans.CreatingWorker;

                Instructions.text("@Expense:AddExistingReceiptInstruction_ExpenseLine");
            }
            else
            {
                throw error("@SYS22996");
            }

            unreconciledReceiptContainer = TrvReceiptsHelper::getOrCreateUnreconciledReceiptContainer(creatingWorker);

            if (trvExpTrans)
            {
                //
                // Create a query that shows all documents attached to the unreconciledReceiptContainer
                // and the expense report, but excludes all documents already attached to the current line.
                //
                Query documentQuery = new Query();
                documentQuery.queryType(QueryType::Union);
                QueryBuildDataSource unattachedDocuments = documentQuery.addDataSource(tableNum(DocuRef), 'unattached');
                unattachedDocuments.addRange(fieldnum(DocuRef, RefTableId)).value(queryValue(tablenum(TrvUnreconciledExpenseTransaction)));
                unattachedDocuments.addRange(fieldnum(DocuRef, RefRecId)).value(queryValue(unreconciledReceiptContainer.RecId));

                QueryBuildDataSource headerDocuments = documentQuery.addDataSource(tableNum(DocuRef), 'header');
                headerDocuments.addRange(fieldnum(DocuRef, RefTableId)).value(queryValue(tablenum(TrvExpTable)));
                headerDocuments.addRange(fieldnum(DocuRef, RefRecId)).value(queryValue(trvExpTable.RecId));
                headerDocuments.addRange(fieldNum(DocuRef, ValueRecId)).value(this.buildLineRangeString(trvExpTrans.RecId));

                QueryBuildDataSource docuValueDS = unattachedDocuments.addDataSource(tableNum(DocuValue));
                docuValueDS.joinMode(JoinMode::ExistsJoin);
                docuValueDS = headerDocuments.addDataSource(tableNum(DocuValue));
                docuValueDS.joinMode(JoinMode::ExistsJoin);

                DocuRef_DS.query(documentQuery);
            }
            else
            {
                DocuRef_DS.query().dataSourceName(tableStr(DocuRef)).addRange(fieldnum(DocuRef, RefTableId)).value(queryValue(tablenum(TrvUnreconciledExpenseTransaction)));
                DocuRef_DS.query().dataSourceName(tableStr(DocuRef)).addRange(fieldnum(DocuRef, RefRecId)).value(queryValue(unreconciledReceiptContainer.RecId));
            }
        }
        else
        {
            throw error("@SYS22996");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLineRangeString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a range string for all receipt RecIds already attached to the given line.
    /// </summary>
    /// <param name = "trvExpTransRecId">The expense line to build the exclusion range for.</param>
    /// <returns>The string to be used for a query range.</returns>
    private str buildLineRangeString(RefRecId trvExpTransRecId)
    {
        str rangeString;
        DocuRef exclude;

        while select ValueRecId from exclude where exclude.RefTableId == tableNum(TrvExpTrans) && exclude.RefRecId == trvExpTransRecId
        {
            if (!rangeString)
            {
                rangeString = strFmt('!%1', exclude.ValueRecId);
            }
            else
            {
                rangeString = strFmt('%1, !%2', rangeString, exclude.ValueRecId);
            }
        }

        return rangeString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh the datasources for caller.
    /// </summary>
    private void refreshCaller()
    {
        FormDataSource  callerReceiptDataSource = element.args().parmObject();
        FormDataSource  callerEntityDataSource  = FormDataUtil::getFormDataSource(element.args().record());

        if (callerReceiptDataSource)
        {
            // New receipts will show up in the caller.
            callerReceiptDataSource.research();
        }

        if (callerEntityDataSource)
        {
            // Update the caller form's entity.
            callerEntityDataSource.reread();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocuRef</Name>
				<Methods>
					<Method>
						<Name>getThumbnail</Name>
						<Source><![CDATA[
        public display container getThumbnail(DocuRef _docuRef)
        {
            return DocumentManagement::getThumbnailAsContainer(_docuRef);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            MultiSelectionHelper    selectionHelper;
            DocuRef                 selectedReceipt;
            Common                  entity;

            selectionHelper = MultiSelectionHelper::construct();
            selectionHelper.parmDatasource(DocuRef_DS);
            selectedReceipt = selectionHelper.getFirst();

            while (selectedReceipt)
            {
                if (trvExpTable)
                {
                    if (selectedReceipt.RefTableId == tableNum(TrvUnreconciledExpenseTransaction))
                    {
                        TrvReceiptsHelper::transferReceipt(selectedReceipt.RecId, trvExpTable);
                    }

                    if (trvExpTrans)
                    {
                        TrvReceiptsHelper::attachReceiptToLine(selectedReceipt.RecId, trvExpTrans);
                    }
                }
                else
                {
                    TrvReceiptsHelper::transferReceipt(selectedReceipt.RecId, trvExpTrans);
                }

                selectedReceipt = selectionHelper.getNext();
            }

            element.refreshCaller();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocuRef</Name>
			<Table>DocuRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Author</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AuthorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BusRelAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PartyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncyclopediaItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Restriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smm.smmEMailEntryID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smm.smmEMailStoreID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smm.smmTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocuValue</Name>
			<Table>DocuValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>File</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDocuSubject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalFileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Path</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocuRef</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:AttachExistingReceipts</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>Instructions</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@Expense:AddExistingReceiptInstruction</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>UnreconciledReceipts</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ReceiptsList</Name>
						<ExtendedStyle>cardList</ExtendedStyle>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Receipt</Name>
								<ExtendedStyle>BusinessCard</ExtendedStyle>
								<Pattern>BusinessCardThreeFields</Pattern>
								<PatternVersion>1.0</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Thumbnail</Name>
										<PreviewPartRef>TrvReceiptPreview</PreviewPartRef>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>getThumbnail</DataMethod>
										<DataSource>DocuRef</DataSource>
										<Label>@SYS15953</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuValue_FileName</Name>
										<ExtendedStyle>Heading</ExtendedStyle>
										<PreviewPartRef>TrvReceiptPreview</PreviewPartRef>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>DocuRef</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>None</ArrangeMethod>
								<Style>Card</Style>
							</AxFormControl>
						</Controls>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>OkCancelGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>