<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailFiscalIntegrationTechnicalProfileOverride</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailFiscalIntegrationTechnicalProfileOverride extends FormRun
{
    private RetailFiscalIntegrationConfigurationHelper configurationHelper;
    private RetailFiscalIntegrationTechnicalProfile fiscalTechnicalProfile;
    private str onFiscalPropertyFieldModifiedEventHandlerMethodName = 'onFiscalPropertyFieldModifiedCallBack';
    private Array connectorPropertiesArray;

    private Common lookupRecord;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #SysSystemDefinedButtons

        configurationHelper = new RetailFiscalIntegrationConfigurationHelper();
        super();

        if (this.args())
        {
            lookupRecord = this.args().record();

            switch (lookupRecord.TableId)
            {
                case tableNum(RetailFiscalIntegrationTechnicalProfile):
                    DetailsHeader_TechnicalProfileId.enabled(false);
                    break;

                case tableNum(RetailStoreTable):
                    DetailsHeader_StoreId.enabled(false);
                    break;

                case tableNum(RetailTerminalTable):
                    DetailsHeader_StoreId.enabled(false);
                    DetailsHeader_TerminalId.enabled(false);
                    break;
            }
        }

        this.control(this.controlId(#SystemDefinedShowFiltersButton)).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onFiscalPropertyFieldModifiedCallBack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves or writes the modified property changes into <c>RetailFiscalIntegrationTechnicalProfile</c> table.
    /// </summary>
    /// <param name = "_control">The form control whose value is modified.</param>
    /// <returns>True if the write operation succeeded; false otherwise.</returns>
    public boolean onFiscalPropertyFieldModifiedCallBack(FormControl _control)
    {
        boolean ret = RetailFiscalIntegrationTechnicalProfileOverride_ds.forceWrite(true);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFiscalTechnicalProperties</Name>
				<Source><![CDATA[
    private void displayFiscalTechnicalProperties()
    {
        boolean shouldDisplayPropertyGroup = RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileId != '';

        if (shouldDisplayPropertyGroup)
        {
            element.clear();

            element.addDeviceGroup();
            configurationHelper.displayPropertyValues();
        }

        DeviceGroup.visible(shouldDisplayPropertyGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDeviceGroup</Name>
				<Source><![CDATA[
    private void addDeviceGroup()
    {
        XMLNodeList connectionXmlNodeList;

        if (RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileProperties)
        {
            connectionXmlNodeList = configurationHelper.getFiscalIntegrationPropertyNodeListByNameSpace(RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileProperties, RetailFiscalIntegrationConnectorContants::ConnectorConnectionInfo);
            connectorPropertiesArray = configurationHelper.getFiscalIntegrationProperties(connectionXmlNodeList).getPropertiesArray();
            configurationHelper.setParentControl(DeviceGroup, onFiscalPropertyFieldModifiedEventHandlerMethodName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears dynamics controls.
    /// </summary>
    private void clear()
    {
        while (DeviceGroup.controlCount() > 0)
        {
            DeviceGroup.formRun().design().removeControl(DeviceGroup.controlNum(1).id());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates profile properties.
    /// </summary>
    private void updateProfile()
    {
        RetailFiscalIntegrationTechnicalProfileOverride technicalProfileOverride = RetailFiscalIntegrationTechnicalProfileOverride_DS.cursor();
        RetailFiscalIntegrationTechnicalProfile technicalProfile = RetailFiscalIntegrationTechnicalProfile::findProfileId(technicalProfileOverride.TechnicalProfileId);

        if (technicalProfile)
        {
            technicalProfileOverride.initFromFiscalTechnicalProfile(technicalProfile);

            element.displayFiscalTechnicalProperties();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailFiscalIntegrationTechnicalProfileOverride</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int isActive = super();

            fiscalTechnicalProfile = RetailFiscalIntegrationTechnicalProfile::findProfileId(RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileId);

            if (fiscalTechnicalProfile)
            {
                element.displayFiscalTechnicalProperties();
            }

            return isActive;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            element.clear();

            fiscalTechnicalProfile = RetailFiscalIntegrationTechnicalProfile::findProfileId(RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileId);

            if (fiscalTechnicalProfile)
            {
                RetailFiscalIntegrationTechnicalProfileOverride.initFromFiscalTechnicalProfile(fiscalTechnicalProfile);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            XmlDocument doc = XmlDocument::newBlank();
            doc.appendChild(doc.createElement(RetailFiscalIntegrationConnectorContants::ConfigurationProperties));
            doc = configurationHelper.appendPropertyXmlNode(doc, DeviceGroup, connectorPropertiesArray, RetailFiscalIntegrationConnectorContants::ConnectorConnectionInfo);
            RetailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileProperties = doc.outerXml();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            element.clear();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            switch (lookupRecord.TableId)
            {
                case tableNum(RetailFiscalIntegrationTechnicalProfile):
                    retailFiscalIntegrationTechnicalProfileOverride.TechnicalProfileId = (lookupRecord as RetailFiscalIntegrationTechnicalProfile).ProfileId;
                    break;

                case tableNum(RetailStoreTable):
                    retailFiscalIntegrationTechnicalProfileOverride.StoreId = (lookupRecord as RetailStoreTable).StoreNumber;
                    break;

                case tableNum(RetailTerminalTable):
                    RetailTerminalTable terminal = lookupRecord as RetailTerminalTable;
                    RetailStoreTable store = RetailStoreTable::findRecId(terminal.StoreRecId);
                
                    retailFiscalIntegrationTechnicalProfileOverride.TerminalId = terminal.terminalId;
                    retailFiscalIntegrationTechnicalProfileOverride.StoreId = store.StoreNumber;
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            var ds = this.queryBuildDataSource();

            switch (lookupRecord.TableId)
            {
                case tableNum(RetailFiscalIntegrationTechnicalProfile):
                    Global::findOrCreateRange_W(ds, fieldNum(RetailFiscalIntegrationTechnicalProfileOverride, TechnicalProfileId),
                        any2str((lookupRecord as RetailFiscalIntegrationTechnicalProfile).ProfileId));
                    break;

                case tableNum(RetailStoreTable):
                    Global::findOrCreateRange_W(ds, fieldNum(RetailFiscalIntegrationTechnicalProfileOverride, StoreId),
                        any2str((lookupRecord as RetailStoreTable).StoreNumber));
                    break;

                case tableNum(RetailTerminalTable):
                    Global::findOrCreateRange_W(ds, fieldNum(RetailFiscalIntegrationTechnicalProfileOverride, TerminalId),
                        any2str((lookupRecord as RetailTerminalTable).terminalId));
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>StoreId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(RetailStoreView), _formControl);

                QueryBuildDataSource retailStoreTable_DS = query.addDataSource(tableNum(RetailStoreView));
                retailStoreTable_DS.addSortField(fieldNum(RetailStoreView, StoreNum), SortOrder::Ascending);

                sysTableLookup.parmQuery(query);

                sysTableLookup.addLookupField(fieldNum(RetailStoreView, StoreNum), true);
                sysTableLookup.addLookupField(fieldNum(RetailStoreView, Name));

                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TechnicalProfileId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(RetailFiscalIntegrationTechnicalProfile), _formControl);

                QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(RetailFiscalIntegrationTechnicalProfile));

                sysTableLookup.addLookupField(fieldNum(RetailFiscalIntegrationTechnicalProfile, ProfileId), true);
                sysTableLookup.addLookupField(fieldNum(RetailFiscalIntegrationTechnicalProfile, ConnectorName));
                sysTableLookup.addLookupField(fieldNum(RetailFiscalIntegrationTechnicalProfile, Description));

                sysTableLookup.parmQuery(query);

                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TerminalId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(RetailStoreTerminalsView), _formControl);

                QueryBuildDataSource retailTerminalTable_DS = query.addDataSource(tableNum(RetailStoreTerminalsView));
                retailTerminalTable_DS.addSortField(fieldNum(RetailStoreTerminalsView, TerminalId), SortOrder::Ascending);
                retailTerminalTable_DS.addSortField(fieldNum(RetailStoreTerminalsView, StoreId), SortOrder::Ascending);

                if (RetailFiscalIntegrationTechnicalProfileOverride.StoreId)
                {
                    retailTerminalTable_DS.addRange(fieldNum(RetailStoreTerminalsView, StoreId)).value(queryValue(any2str(RetailFiscalIntegrationTechnicalProfileOverride.StoreId)));
                }

                sysTableLookup.addLookupField(fieldNum(RetailStoreTerminalsView, TerminalId));
                sysTableLookup.addLookupField(fieldNum(RetailStoreTerminalsView, TerminalName));
                sysTableLookup.addLookupField(fieldNum(RetailStoreTerminalsView, StoreId));
                sysTableLookup.addLookupField(fieldNum(RetailStoreTerminalsView, StoreName));

                sysTableLookup.parmQuery(query);

                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DetailsHeader_TechnicalProfileId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateProfile();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetailsHeader_StoreId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            RetailStoreTerminalsView retailStoreTerminalsView = RetailStoreTerminalsView::findByStoreIdAndTerminalId(this.text(), RetailFiscalIntegrationTechnicalProfileOverride.TerminalId);

            if (!retailStoreTerminalsView.RecId)
            {
                RetailFiscalIntegrationTechnicalProfileOverride.TerminalId = '';
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetailsHeader_TerminalId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.text())
            {
                RetailStoreId storeId = RetailStoreTerminalsView::findStoreNumberByTerminalId(this.text());

                RetailFiscalIntegrationTechnicalProfileOverride.StoreId = storeId;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();

            if (this.text() && lookupRecord is RetailStoreTable)
            {
                RetailStoreId storeId = RetailStoreTerminalsView::findStoreNumberByTerminalId(this.text());

                if (RetailFiscalIntegrationTechnicalProfileOverride.StoreId != storeId)
                {
                    ret = checkFailed(strFmt("@RetailFiscalIntegration:WrongTerminalNumberSelected", RetailFiscalIntegrationTechnicalProfileOverride.StoreId));
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailFiscalIntegrationTechnicalProfileOverride</Name>
			<Table>RetailFiscalIntegrationTechnicalProfileOverride</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TechnicalProfileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TechnicalProfileProperties</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TerminalId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RetailFiscalIntegration:ConnectorTechnicalProfileOverride</Caption>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<Caption>@RET490481</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>DirPersonName_FirstName1</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_TechnicalProfileId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TechnicalProfileId</DataField>
								<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_StoreId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StoreId</DataField>
								<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_TerminalId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TerminalId</DataField>
								<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataGroup>DetailsGroup</DataGroup>
						<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SplitterGroup</Name>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsHeader_TechnicalProfileId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>TechnicalProfileId</DataField>
						<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsHeader_StoreId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>StoreId</DataField>
						<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsHeader_TerminalId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>TerminalId</DataField>
						<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<DataGroup>DetailsGroup</DataGroup>
				<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Device</Name>
						<ElementPosition>456340273</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeviceGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@RetailFiscalIntegration:Device</Caption>
						<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>RetailFiscalIntegrationTechnicalProfileOverride</DataSource>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>