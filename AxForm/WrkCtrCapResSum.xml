<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WrkCtrCapResSum</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WrkCtrCapResSum extends FormRun
{
    #MACROLIB.resAppl

    private const int DefaultNumberOfDays = 50;

    static private readonly Decimals capacityRemainHoursDecimals = new DictType(extendedTypeNum(CapacityRemainHours)).effectivePrecision();

    QueryBuildRange         criteriaReqPlanVersion1;
    QueryBuildRange         criteriaDate1;
    QueryBuildRange         criteriaWrkCtrId1;

    QueryBuildRange         criteriaReqPlanVersion2;
    QueryBuildRange         criteriaDate2;
    QueryBuildRange         criteriaWrkCtrId2;

    WrkCtrCapacitySum       capacitySum;
    WrkCtrReservedSum       reservedSum;

    ReqPlanId               reqPlanId;
    RefRecId                reqPlanVersionRefRecIdActive;
    Map                     mapReqPlanRefRecIdPlanId;

    SchedDate               fromDate;
    SchedDate               toDate;
    SchedDate               findDate;

    WorkPeriodTemplateRecId  periodTemplateId;
    boolean                  usePeriodTemplateCheckbox;
    CapacityLoadNumberOfDays numberOfDays;

    #define.CurrentVersion(3)
    #localmacro.CurrentList
            reqPlanId,
            periodTemplateId,
            usePeriodTemplateCheckbox,
            numberOfDays
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>addDays</Name>
				<Source><![CDATA[
    Days addDays()
    {
        return 5;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        xSysLastValue::saveLast(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doFindToday</Name>
				<Source><![CDATA[
    void doFindToday(TransDate _fromDate)
    {
        WorkCalendarDate workCalendarDateTmp;

        workCalendarDateTmp.setTmpData(workCalendarDate);

        select workCalendarDateTmp
            where workCalendarDateTmp.TransDate    == _fromDate;

        if (workCalendarDateTmp.RecId)
        {
            workCalendarDate_DS.positionToRecord(workCalendarDateTmp);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearch</Name>
				<Source><![CDATA[
    void doResearch()
    {
        findDate = workCalendarDate.TransDate;

        workCalendarDate_DS.executeQuery();
        wrkCtrCapResPeriodTmp_DS.executeQuery();

        capacitySum    = new WrkCtrCapacitySum(true,true);
        reservedSum    = WrkCtrReservedSum::newForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();
        capacitySum              = new WrkCtrCapacitySum(true,true);
        reservedSum              = WrkCtrReservedSum::newForm();
        mapReqPlanRefRecIdPlanId = new Map(typeOf(reqPlanVersionRefRecIdActive),typeOf(reqPlanId));

        ctrlNumberOfDays.visible(true);

        xSysLastValue::getLast(this);

        element.setFromDate();
        element.setToDate();
        findDate = fromDate;

        element.setReqPlanId();
        element.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
        // When no SysLastValue record can be found in xSysLastValue.GetLast() just use the dynamic plan
        reqPlanId = ReqPlanSched::defaultDynamicId();

        // When no SysLastValue record can be found in xSysLastValue.GetLast() just use 50 days of ahead
        numberOfDays = DefaultNumberOfDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    public dataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    public identifierName lastValueDesignName()
    {
        if (element.args() && element.args().caller())
        {
            return element.args().caller().name();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    public identifierName lastValueElementName()
    {
        return this.name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    public UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    public userId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReqPlanVersionRefRecIdActive</Name>
				<Source><![CDATA[
    public RefRecId parmReqPlanVersionRefRecIdActive(RefRecId _reqPlanVersionRefRecId = reqPlanVersionRefRecIdActive)
    {
        reqPlanVersionRefRecIdActive = _reqPlanVersionRefRecId;

        return reqPlanVersionRefRecIdActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodTemplateId</Name>
				<Source><![CDATA[
    edit WorkPeriodTemplateRecId periodTemplateId(boolean _set, WorkPeriodTemplateRecId _periodTemplateId)
    {
        if (_set)
        {
            periodTemplateId = _periodTemplateId;
            this.doResearch();
        }

        return periodTemplateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfDays</Name>
				<Source><![CDATA[
    edit CapacityLoadNumberOfDays numberOfDays(boolean _set, CapacityLoadNumberOfDays _numberOfDays)
    {
        if (_set)
        {
            numberOfDays = _numberOfDays;
            this.setToDate();
            this.doResearch();
        }

        return numberOfDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reqPlanId</Name>
				<Source><![CDATA[
    edit ReqPlanId reqPlanId(boolean _set, ReqPlanId _reqPlanId)
    {
        if (_set)
        {
            reqPlanId = _reqPlanId;
            this.doResearch();
        }

        return reqPlanId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromToDate</Name>
				<Source><![CDATA[
    void setFromToDate()
    {
        fieldId fieldId;

        if (element.args().caller() && element.args().dataset())
        {
            fieldId = fieldName2id(element.args().dataset(),fieldStr(ProdRoute,FromDate));
            if (!fieldId)
            {
                fieldId = fieldName2id(element.args().dataset(),fieldStr(ProjForecastEmpl,SchedFromDate));
            }

            if (fieldId && element.args().record().(fieldId))
            {
                fromDate = element.args().record().(fieldId);
                findDate = fromDate;
            }

            fieldId = fieldName2id(element.args().dataset(),fieldStr(ProdRoute,ToDate));
            if (!fieldId)
            {
                fieldId = fieldName2id(element.args().dataset(),fieldStr(ProjForecastEmpl,SchedToDate));
            }

            if (fieldId && element.args().record().(fieldId))
            {
                toDate = element.args().record().(fieldId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromDate</Name>
				<Source><![CDATA[
    private void setFromDate()
    {
        fromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToDate</Name>
				<Source><![CDATA[
    private void setToDate()
    {
        toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) + numberOfDays - 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReqPlanId</Name>
				<Source><![CDATA[
    void setReqPlanId()
    {
        ReqPlanId reqPlanIdLocal = ReqCalc::argsReqPlanId(element.args());

        if (reqPlanIdLocal)
        {
            reqPlanId = reqPlanIdLocal; // use this value instead of one from SysLastValue
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion    :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates design of the form depending on the current state of filter controls.
    /// </summary>
    public void updateDesign()
    {
        boolean             isOverviewTabActive = false;

        ctrlUsePeriodTemplateCheckBox.allowEdit(WorkPeriodTemplate::checkAnyExistInCompany(curext()));

        if (usePeriodTemplateCheckbox)
        {
            // if we are using period template try to set either previously stored or default value
            if (!periodTemplateId || !WorkPeriodTemplate::checkExistInCompany(periodTemplateId, curext()))
            {
                periodTemplateId = WorkPeriodTemplate::findDefault(CompanyInfo::findDataArea(curext()).RecId).RecId;
            }

            ctrlWorkPeriodTemplateReferenceGroup.value(periodTemplateId);
        }
        else
        {
            // if we are not using period template clear the combobox control value
            // but keep currently selected period template internally in periodTemplateId
            ctrlWorkPeriodTemplateReferenceGroup.value(0);
        }

        ctrlWorkPeriodTemplateReferenceGroup.allowEdit(usePeriodTemplateCheckbox && ctrlUsePeriodTemplateCheckBox.allowEdit());

        if (ctrlOverviewTab.isActivePage() || ctrlOverviewByPeriodTab.isActivePage())
        {
            // if one of Overview tabs is active - remember it and make the visible one active later after
            isOverviewTabActive = true;
        }

        ctrlOverviewTab.visible(!usePeriodTemplateCheckbox);
        ctrlOverviewByPeriodTab.visible(usePeriodTemplateCheckbox);

        if (isOverviewTabActive)
        {
            // make one of Overview tabs active
            if (ctrlOverviewTab.visible())
            {
                ctrlOverviewTab.activatePage();
            }

            if (ctrlOverviewByPeriodTab.visible())
            {
                ctrlOverviewByPeriodTab.activatePage();
            }
        }

        element.doResearch();
    }

]]></Source>
			</Method>
			<Method>
				<Name>usePeriodTemplateCheckbox</Name>
				<Source><![CDATA[
    edit NoYes usePeriodTemplateCheckbox(NoYes _set, boolean _usePeriodTemplateCheckbox)
    {
        if (_set)
        {
            usePeriodTemplateCheckbox = _usePeriodTemplateCheckbox;
            element.updateDesign();
        }

        return usePeriodTemplateCheckbox;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WrkCtrTable</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.doResearch();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            element.setFromToDate();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            ProjForecastEmpl        projForecastEmpl;
            QueryBuildDataSource    queryBuildDataSource;

            super();

            queryBuildDataSource = this.query().dataSourceName(wrkCtrTable_ds.name());
            queryBuildDataSource.clearDynalinks();
            queryBuildDataSource.clearRanges();

            switch (element.args().dataset())
            {
                case tableNum(WrkCtrTable):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(WrkCtrTable,WrkCtrId));
                    break;
                case tableNum(JmgJobTable):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(JmgJobTable,WrkCtrId));
                    break;

                case tableNum(ProdRouteJob):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(ProdRouteJob,WrkCtrId));
                    break;

                case tableNum(ReqRouteJob):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(ReqRouteJob,WrkCtrId));
                    break;

                case tableNum(ProdRouteSchedulingView):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(ProdRouteSchedulingView,WrkCtrId));
                    break;

                case tableNum(ProjForecastEmpl):
                    projForecastEmpl = element.args().record() as ProjForecastEmpl;
                    if (projForecastEmpl.SchedWrkCtrId)
                    {
                        queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                            element.args().record(), fieldNum(ProjForecastEmpl,SchedWrkCtrId));
                    }
                    break;

                case tableNum(ReqRouteSchedulingView):
                    queryBuildDataSource.addDynalink(fieldNum(WrkCtrTable,WrkCtrId),
                                    element.args().record(), fieldNum(ReqRouteSchedulingView,WrkCtrId));
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WorkCalendarDate</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            findDate = workCalendarDate.TransDate;

            ret = super();

            if (ret)
            {
                wrkCtrCapRes_DS.executeQuery();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            QueryBuildDataSource    queryBuildDataSource;

            super();

            queryBuildDataSource = workCalendarDate_ds.query().dataSourceName(workCalendarDate_ds.name());
            queryBuildDataSource.clearSortIndex();
            queryBuildDataSource.addSortField(fieldNum(WorkCalendarDate,TransDate));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            WorkCalendarDate    workCalendarDateTmp;

            element.parmReqPlanVersionRefRecIdActive(
                                                     ReqPlan::findReqPlanId(reqPlanId).findActiveVersion().RecId
                                                     );

            workCalendarDateTmp.setTmp();
            wrkCtrTable.addAllCalendarDatesToTemporaryBuffer(workCalendarDateTmp, fromDate, toDate);

            workCalendarDate.setTmp();
            workCalendarDate.setTmpData(workCalendarDateTmp);

            super();

            element.doFindToday(findDate);
        }

]]></Source>
					</Method>
					<Method>
						<Name>remain</Name>
						<Source><![CDATA[
        display CapacityRemainHours remain(WorkCalendarDate _workCalendarDate)
        {
            if (capacitySum.find(wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate,false) &&
                reservedSum.find(element.parmReqPlanVersionRefRecIdActive(),wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate)
                )
            {
                return capacitySum.rec_Capacity() / 3600 - (reservedSum.rec_ReservedOperation() + reservedSum.rec_ReservedJob()) / 3600;
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reservedDetail</Name>
						<Source><![CDATA[
        display CapacityReservedHoursDetail reservedDetail(WorkCalendarDate _workCalendarDate)
        {
            if (reservedSum.find(element.parmReqPlanVersionRefRecIdActive(),wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate))
            {
                return reservedSum.rec_ReservedJob() / 3600;
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reservedRough</Name>
						<Source><![CDATA[
        display CapacityReservedHoursRough reservedRough(WorkCalendarDate _workCalendarDate)
        {
            if (reservedSum.find(element.parmReqPlanVersionRefRecIdActive(),wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate))
            {
                return reservedSum.rec_ReservedOperation() / 3600;
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>remainDetail</Name>
						<Source><![CDATA[
        display CapacityRemainHoursDetail remainDetail(WorkCalendarDate _workCalendarDate)
        {
            if (capacitySum.find(wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate,false) &&
                reservedSum.find(element.parmReqPlanVersionRefRecIdActive(),wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate))
            {
                return capacitySum.rec_Capacity() / 3600 - reservedSum.rec_ReservedJob() / 3600;
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>overBooked</Name>
						<Source><![CDATA[
        display Integer overBooked(WorkCalendarDate _workCalendarDate)
        {
            return decRound(workCalendarDate_ds.remain(_workCalendarDate), capacityRemainHoursDecimals) < 0 ? #ImageWarning : #ImageBlank2;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reserved</Name>
						<Source><![CDATA[
        display CapacityReservedHours reserved(WorkCalendarDate _workCalendarDate)
        {
            return this.reservedDetail(_workCalendarDate) + this.reservedRough(_workCalendarDate);
        }

]]></Source>
					</Method>
					<Method>
						<Name>capacity</Name>
						<Source><![CDATA[
        display CapacityHours capacity(WorkCalendarDate _workCalendarDate)
        {
            if (capacitySum.find(wrkCtrTable.WrkCtrId,_workCalendarDate.TransDate,false))
            {
                return capacitySum.rec_Capacity() / 3600;
            }

            return 0;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrCapRes</Name>
				<Methods>
					<Method>
						<Name>reqPlanId</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Retrieves the plan ID related to the current <c>WrkCtrCapRes</c> record.
        /// </summary>
        /// <param name="_wrkCtrCapRes">
        ///    A <c>WrkCtrCapRes</c> record.
        /// </param>
        /// <returns>
        ///    The plan ID.
        /// </returns>
        /// <remarks>
        ///    Plan IDs are cached in a <c>Map</c> to avoid repeated lookups of the same <c>ReqPlanVersion</c> record.
        /// </remarks>
        public display ReqPlanId reqPlanId(WrkCtrCapRes _wrkCtrCapRes)
        {
            ReqPlanId   reqPlanIdLocal;

            if (_wrkCtrCapRes.PlanVersion)
            {
                if (mapReqPlanRefRecIdPlanId.exists(_wrkCtrCapRes.PlanVersion))
                {
                    reqPlanIdLocal = mapReqPlanRefRecIdPlanId.lookup(_wrkCtrCapRes.PlanVersion);
                }
                else
                {
                    reqPlanIdLocal = ReqPlanVersion::find(_wrkCtrCapRes.PlanVersion).ReqPlanId;
                    mapReqPlanRefRecIdPlanId.insert(_wrkCtrCapRes.PlanVersion,reqPlanIdLocal);
                }
            }

            return reqPlanIdLocal;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            Query                   q = new Query();

            QueryBuildDataSource    qbdsWrkCtrCapResDirectly;

            QueryBuildDataSource    qbdsWrkCtrCapResGroupMembers;
            QueryBuildDataSource    qbdsWrkCtrResourceGroup;
            QueryBuildDataSource    qbdsWrkCtrResourceGroupResource;

            super();

            q.queryType(QueryType::Union);

            // Select bookings made directly on the resource or group
            qbdsWrkCtrCapResDirectly = q.addDataSource(tableNum(WrkCtrCapRes), 'WrkCtrCapResDirectly');
            criteriaReqPlanVersion1  = qbdsWrkCtrCapResDirectly.addRange(fieldNum(WrkCtrCapRes,PlanVersion));
            criteriaDate1            = qbdsWrkCtrCapResDirectly.addRange(fieldNum(WrkCtrCapRes,TransDate));
            criteriaWrkCtrId1        = qbdsWrkCtrCapResDirectly.addRange(fieldNum(WrkCtrCapRes,WrkCtrId));
            qbdsWrkCtrCapResDirectly.addSortField(fieldNum(WrkCtrCapRes,StartTime));

            // Union with bookings made on resources from the group
            qbdsWrkCtrCapResGroupMembers = q.addDataSource(tableNum(WrkCtrCapRes), 'WrkCtrCapResGroupMembers');
            qbdsWrkCtrCapResGroupMembers.unionType(UnionType::Union);
            criteriaReqPlanVersion2  = qbdsWrkCtrCapResGroupMembers.addRange(fieldNum(WrkCtrCapRes,PlanVersion));
            criteriaDate2            = qbdsWrkCtrCapResGroupMembers.addRange(fieldNum(WrkCtrCapRes,TransDate));

            qbdsWrkCtrResourceGroupResource = qbdsWrkCtrCapResGroupMembers.addDataSource(tableNum(WrkCtrResourceGroupResource));
            qbdsWrkCtrResourceGroupResource.joinMode(JoinMode::ExistsJoin);
            qbdsWrkCtrResourceGroupResource.addLink(fieldNum(WrkCtrCapRes, WrkCtrId),fieldNum(WrkCtrResourceGroupResource, WrkCtrId), qbdsWrkCtrCapResGroupMembers.name());

            qbdsWrkCtrResourceGroup = qbdsWrkCtrResourceGroupResource.addDataSource(tableNum(WrkCtrResourceGroup));
            qbdsWrkCtrResourceGroup.joinMode(JoinMode::ExistsJoin);
            qbdsWrkCtrResourceGroup.addLink(fieldNum(WrkCtrResourceGroupResource,ResourceGroup),fieldNum(WrkCtrResourceGroup, RecId),qbdsWrkCtrResourceGroupResource.name());
            criteriaWrkCtrId2        = qbdsWrkCtrResourceGroup.addRange(fieldNum(WrkCtrResourceGroup,WrkCtrId));

            this.query(q);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (!wrkCtrTable.WrkCtrId || !workCalendarDate.TransDate)
            {
                return;
            }

            // Set criteria for the directly made reservations
            criteriaReqPlanVersion1.value(strFmt("%1,%2",
                queryValue(element.parmReqPlanVersionRefRecIdActive()),
                queryValue(0)));

            if (reqPlanId != ReqPlanSched::defaultDynamicId() &&
                ReqPlanSched::defaultDynamicId())
            {
                criteriaReqPlanVersion1.status(RangeStatus::Locked);
            }
            else
            {
                criteriaReqPlanVersion1.status(RangeStatus::Open);
            }

            if (usePeriodTemplateCheckbox)
            {
                criteriaDate1.value(queryRange(wrkCtrCapResPeriodTmp.FromDate, wrkCtrCapResPeriodTmp.ToDate));

                // Limit time state tables in the query to the transdata
                this.query().validTimeStateDateRange(wrkCtrCapResPeriodTmp.FromDate, wrkCtrCapResPeriodTmp.ToDate);
            }
            else
            {
                criteriaDate1.value(queryValue(workCalendarDate.TransDate));

                // Limit time state tables in the query to the transdata
                this.query().validTimeStateAsOfDate(workCalendarDate.TransDate);
            }

            criteriaWrkCtrId1.value(queryValue(wrkCtrTable.WrkCtrId));

            // Set criteria for the reservations made to the resources of the group
            criteriaReqPlanVersion2.value(criteriaReqPlanVersion1.value());
            criteriaReqPlanVersion2.status(criteriaReqPlanVersion1.status());
            criteriaDate2.value(criteriaDate1.value());
            criteriaWrkCtrId2.value(criteriaWrkCtrId1.value());

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrCapResPeriodTmp</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                wrkCtrCapRes_DS.executeQuery();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            WrkCtrCapResPeriodTmp                   wrkCtrCapResPeriodTmpEmpty;
            WrkCtrCapResPeriodTemplateCalculate     periodCalculator = WrkCtrCapResPeriodTemplateCalculate::construct();

            if (ctrlWorkPeriodTemplateReferenceGroup.value()
             && WorkPeriodTemplate::checkExistInCompany(ctrlWorkPeriodTemplateReferenceGroup.value(), curext()))
            {
                wrkCtrCapResPeriodTmp.setTmpData(periodCalculator.calcCapacityLoadByPeriod(ctrlWorkPeriodTemplateReferenceGroup.value(), fromDate, toDate, workCalendarDate_ds));
            }
            else
            {
                wrkCtrCapResPeriodTmp.setTmpData(wrkCtrCapResPeriodTmpEmpty);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>overBookedImage</Name>
						<Source><![CDATA[
        display Integer overBookedImage(WrkCtrCapResPeriodTmp _wrkCtrCapResPeriodTmp)
        {
            return (_wrkCtrCapResPeriodTmp.CapacityRemainHours < 0) ? #ImageWarning : #ImageBlank2;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ctrlNumberOfDays</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = super();

            if (ret && this.value() <= 0)
            {
                ret = checkFailed("@SCM:WrkCtrCapResNumberOfDaysGreaterThanZero_Warning");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlWorkPeriodTemplateReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WorkPeriodTemplate::lookupReferencePeriodTemplate(this,curext());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;

            ret = super();

            if (ret && this.value()) // skip check if value is empty
            {
                ret = WorkPeriodTemplate::checkExistInCompany(this.value(), curext());
            }

            if (ret)
            {
                periodTemplateId = this.value();
            }

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrTable</Name>
			<Table>WrkCtrTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BottleneckResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Capacity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapLimited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Created</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectivityPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exclusive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsIndividualResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationSchedPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PMFSequenceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcessCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcessPerQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcessTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyLimited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueueTimeAfter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueueTimeBefore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceIssueLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceIssueOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetUpCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TranspTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPIssueLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPValuationLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WorkCalendarDate</Name>
			<Table>WorkCalendarDate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedForPickup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkTimeControl</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrCapRes</Name>
			<Table>WrkCtrCapRes</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvMth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvQr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvWk</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Locked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigJobRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Timestamp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrLoadPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrSec</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrCapResPeriodTmp</Name>
			<Table>WrkCtrCapResPeriodTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CapacityHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityRemainHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityRemainHoursDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityReservedHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityReservedHoursDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CapacityReservedHoursRough</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS25856</Caption>
		<DataSource xmlns="">WorkCalendarDate</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">WrkCtrTable</TitleDataSource>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FiltersGroup</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>reqPlanId</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>reqPlanId</DataMethod>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WrkCtrTable_WrkCtrId</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>WrkCtrId</DataField>
						<DataSource>WrkCtrTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WrkCtrTable_Name</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>WrkCtrTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>ctrlNumberOfDays</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<AllowNegative>No</AllowNegative>
						<DataMethod>numberOfDays</DataMethod>
						<ExtendedDataType>CapacityLoadNumberOfDays</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ctrlUsePeriodTemplateCheckBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>usePeriodTemplateCheckbox</DataMethod>
						<Label>@SCM:UsePeriodTemplate</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>ctrlWorkPeriodTemplateReferenceGroup</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ctrlWorkPeriodTemplateReferenceGroup_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>WorkPeriodTemplateRecId</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ctrlOverviewTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Calendar</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>WorkCalendarDate_TransDate</Name>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>WorkCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DateDayName</Name>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>DateDayName</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Week</Name>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>Week</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WorkCalendarDate_CalendarId</Name>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalendarId</DataField>
										<DataSource>WorkCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Capacity</Name>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>Capacity</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>reservedRough</Name>
										<ElementPosition>1156337343</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:WrkCtrCapResSum_reservedRough</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reservedRough</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>reservedDetail</Name>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reservedDetail</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Reserved</Name>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>Reserved</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>remainDetail</Name>
										<ElementPosition>1651910490</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>remainDetail</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Remain</Name>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>Remain</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Overbooked</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>12</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>65</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>OverBooked</DataMethod>
										<DataSource>WorkCalendarDate</DataSource>
										<Imagemode>Center</Imagemode>
										<Label>@SYS310382</Label>
									</AxFormControl>
								</Controls>
								<DataSource>WorkCalendarDate</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ctrlOverviewByPeriodTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PeriodCalendar</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Identification</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Identification_Description</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Description</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>Identification_FromDate</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>FromDate</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>Identification_ToDate</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ToDate</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>Identification</DataGroup>
										<DataSource>WrkCtrCapResPeriodTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CapacityHours</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>CapacityHours_CapacityHours</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityHours</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>CapacityHours</DataGroup>
										<DataSource>WrkCtrCapResPeriodTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ReservedHours</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ReservedHours_CapacityReservedHoursRough</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_CostManagement:WrkCtrCapResSum_ReservedHours_CapacityReservedHoursRough</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityReservedHoursRough</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ReservedHours_CapacityReservedHoursDetail</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityReservedHoursDetail</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ReservedHours_CapacityReservedHours</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityReservedHours</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>ReservedHours</DataGroup>
										<DataSource>WrkCtrCapResPeriodTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemainHours</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>RemainHours_CapacityRemainHoursDetail</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityRemainHoursDetail</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>RemainHours_CapacityRemainHours</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>CapacityRemainHours</DataField>
												<DataSource>WrkCtrCapResPeriodTmp</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>RemainHours</DataGroup>
										<DataSource>WrkCtrCapResPeriodTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PeriodOverbookedImage</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>12</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>65</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>overBookedImage</DataMethod>
										<DataSource>WrkCtrCapResPeriodTmp</DataSource>
										<Imagemode>Center</Imagemode>
										<Label>@SYS310382</Label>
									</AxFormControl>
								</Controls>
								<DataSource>WrkCtrCapResPeriodTmp</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HSplitterGroup</Name>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabReference</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Reference</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>WrkCtrCapResGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WrkCTrCapRes_ReqPlanId</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reqPlanId</DataMethod>
										<DataSource>WrkCtrCapRes</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>WrkCtrCapRes_TransDate</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>WrkCtrCapRes_LoadType</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LoadType</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>WrkCtrCapRes_RefType</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RefType</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WrkCtrCapRes_RefId</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CostManagement:WrkCtrCapResSum_WrkCtrCapRes_RefId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RefId</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>WrkCtrHours</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>WrkCtrHours</DataMethod>
										<DataSource>WrkCtrCapRes</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>WrkCtrCapRes_StartTime</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartTime</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>WrkCtrCapRes_EndTime</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndTime</DataField>
										<DataSource>WrkCtrCapRes</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>WrkCtrCapRes</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS15217</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>