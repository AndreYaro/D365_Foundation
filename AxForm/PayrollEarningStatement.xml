<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PayrollEarningStatement</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PayrollEarningStatement extends FormRun implements SysIFilterConsumerForm
{
    NumberSeqFormHandler            numberSeqFormHandler;
    Array                           needsResearch;

    // Properties used for caching the fact boxes that require refreshing upon earning statement line updates.
    List                            factBoxRefreshList;
    ListEnumerator                  factBoxToRefresh;

}
]]></Source>
			</Method>
			<Method>
				<Name>registerDatasourceOnQueryingEvent</Name>
				<Source><![CDATA[
    public void registerDatasourceOnQueryingEvent()
    {
        PayrollEarningStatement_ds.OnQueryExecuting += eventhandler(this.parmFilterFormQueryEventHandler().applyFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnableManualLineControl</Name>
				<Source><![CDATA[
    private boolean canEnableManualLineControl()
    {
        return PayrollEarningCode::canBeManual(payrollEarningCode.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkandPopulateExisitingStatement</Name>
				<Source><![CDATA[
    public void checkandPopulateExisitingStatement()
    {
        PayrollEarningStatement earningStatementExisting;

        earningStatementExisting = PayrollEarningStatement::findByWorkerPayPeriod(payrollEarningStatement.Worker, payrollEarningStatement.PayPeriod);

        if (earningStatementExisting)
        {
            //
            // have to wrap NumberSeqFormHandler method with ttsbegin and ttscommit
            // in case number sequence's continuous is set
            //
            if (earningStatementExisting.DocumentNumber != payrollEarningStatement.DocumentNumber)
            {
                ttsbegin;
                element.numberSeqFormHandler().formMethodDataSourceDelete();
                ttscommit;

                select firstonly payrollEarningStatement
                                        where payrollEarningStatement.RecId == earningStatementExisting.RecId;

                payrollEarningStatement_ds.research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearNeedsResearchArray</Name>
				<Source><![CDATA[
    public void clearNeedsResearchArray()
    {
        needsResearch = new Array(Types::Integer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        //
        // have to wrap NumberSeqFormHandler method with ttsbegin and ttscommit
        // in case number sequence's continuous is set
        //
        ttsbegin;
        element.numberSeqFormHandler().formMethodDataSourceDelete();
        ttscommit;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableLineControls</Name>
				<Source><![CDATA[
    public void enableDisableLineControls()
    {
        // initally access non-primary linked FormDataSource data using cursor() method on AllowPreloading=No forms to ensure corresponding buffers
        PayrollEarningStatementLine payrollEarningStatementLineLocal = PayrollEarningStatementLine_ds.cursor();

        accountingDistributionsLineButton.enabled(payrollEarningStatementLineLocal.AccountingCurrencyAmount != 0);

        removeLine.enabled(payrollEarningStatementLine.PaymentStatus != PayrollPaymentProcessingStatus::Processed);

        payrollEarningStatementLine_IsManual.enabled(this.canEnableManualLineControl());

        if (payrollEarningStatementLine.PaymentStatus == PayrollPaymentProcessingStatus::Released
                        || payrollEarningStatementLine.PaymentStatus == PayrollPaymentProcessingStatus::Processed
                        || (payrollEarningStatementLine.GenerationSource == PayrollGenerationSource::Salary
                                && payrollEarningStatement.AutoGeneratedSalary == PayrollAutoGenerateSalary::Active))
        {
            payrollEarningStatementLine_ds.allowEdit(false);
        }
        else
        {
            payrollEarningStatementLine_ds.allowEdit(true);
        }

        if (!payrollEarningCode.IsEarningStatementLineRateEditable)
        {
            payrollEarningStatementLine_ds.object(fieldNum(PayrollEarningStatementLine, EarningRate)).allowEdit(false);
        }
        else
        {
            payrollEarningStatementLine_ds.object(fieldNum(PayrollEarningStatementLine, EarningRate)).allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        element.clearNeedsResearchArray();

        super();

        info("@PayrollProcessing:PayrollDeprecationWarningMessage");
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(NumberSeqReference::findReference(extendedTypeNum(PayrollEarningStatementId)).NumberSequenceId,
                                                                                                                                 element,
                                                                                                                                 payrollEarningStatement_ds,
                                                                                                                                 fieldNum(PayrollEarningStatement, DocumentNumber));
        }

        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFactBoxes</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Manages the refreshing of the fact boxes upon earning statement line updates.
    /// </summary>
    public void refreshFactBoxes()
    {
        FormRun     factBox;

        factBoxToRefresh.reset();

        while (factBoxToRefresh.moveNext())
        {
            factBox = factBoxToRefresh.current();

            if (factBox && factBox.design() && factBox.design().visible())
            {
                factBox.dataSource().research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        payrollPayCycleLookup.allowEdit(payrollEarningStatement.RecId == 0);
        element.enableDisableLineControls();

        // Cache the fact boxes that require refreshing upon earning statement line updates.
        element.setFactBoxesToRefresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableEarningStatementLevelcontrols</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls the enabled or disabled behaviour of the earnings statement level buttons.
    /// </summary>
    public void enableDisableEarningStatementLevelcontrols()
    {
        if (payrollEarningStatement.Worker && payrollEarningStatement.PayPeriod)
        {
            GenerateEarningStatementLines.enabled(true);
            GeneratePremiumEarningStatement.enabled(true);
            ReleaseEarningStatementHeader.enabled(true);
            HoldEarningStatementHeader.enabled(true);
            AccountingDistributionsDocumentView.enabled(true);
        }
        else
        {
            generateEarningStatementLines.enabled(false);
            GeneratePremiumEarningStatement.enabled(false);
            ReleaseEarningStatementHeader.enabled(false);
            HoldEarningStatementHeader.enabled(false);
            AccountingDistributionsDocumentView.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFactBoxesToRefresh</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Caches the fact boxes that require refreshing upon earning statement line updates.
    /// </summary>
    private void setFactBoxesToRefresh()
    {
        PartList    partList;
        FormRun     factBox;

        factBoxRefreshList = new List(Types::Class);
        factBoxToRefresh = factBoxRefreshList.getEnumerator();

        partList = new PartList(element);

        for (int i = 1; i <= partList.partCount(); i++)
        {
            factBox = partList.getPartById(i);
            if (factBox && factBox.name())
            {
                switch (factBox.name())
                {
                    // Factboxes that have to be refreshed;
                    case identifierStr(PayrollEarningsStatementWorkerEarning):
                        factBoxRefreshList.addEnd(factBox);
                        break;

                    case identifierStr(PayrollEarningsStatementTotals):
                        factBoxRefreshList.addEnd(factBox);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayrollEarningStatement</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            ttsbegin;
            element.numberSeqFormHandler().formMethodDataSourceDelete();
            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>setHeaderText</Name>
						<Source><![CDATA[
        public void setHeaderText()
        {
            HcmWorker       worker = HcmWorker::find(payrollEarningStatement.Worker);
            str             headerText;

            headerText = strFmt("%1 : %2 - %3",
                                                                        payrollEarningStatement.DocumentNumber,
                                                                        worker.PersonnelNumber,
                                                                        DirPerson::find(worker.Person).Name);

            headertitle.text(headerText);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            element.numberSeqFormHandler().formMethodDataSourceCreate();

            payrollPayCycleLookup.enabled(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = payrollpaycyclelookup.validate();

            ret = super() && ret;

            ret = ret && element.numberSeqFormHandler().formMethodDataSourceValidateWrite();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //
            // have to wrap NumberSeqFormHandler method with ttsbegin and ttscommit
            // in case number sequence's continuous is set
            //
            ttsbegin;
            element.numberSeqFormHandler().formMethodDataSourceWrite();
            ttscommit;

            payrollEarningStatement.AutoGeneratedSalary = calculateSalary.toggleValue() ? PayrollAutoGenerateSalary::Active : PayrollAutoGenerateSalary::InActive;

            if (payrollEarningStatement.Worker && payrollEarningStatement.PayPeriod)
            {
                element.checkandPopulateExisitingStatement();
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int             ret;
            PayrollPayCycle payCycle;

            ret = super();

            payCycle = PayrollPayCycle::find(PayrollPayPeriod::find(payrollEarningStatement.PayPeriod).PayCycle);
            payrollPayCycleLookup.text(payCycle.PayCycleId);
            this.setHeaderText();
            element.enableDisableEarningStatementLevelcontrols();
            calculateSalary.toggleValue(payrollEarningStatement.AutoGeneratedSalary == PayrollAutoGenerateSalary::Active);
            payrollPayCycleLookup.allowEdit(payrollEarningStatement.RecId == 0);

            generatePayStatement.enabled(PayrollEarningStatement::hasReleasedLines(PayrollEarningStatement.RecId));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PayPeriod</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //Check there is a existing earning statement there for the new record that user is inserting
                if (payrollEarningStatement.Worker)
                {
                    element.checkandPopulateExisitingStatement();
                }
                super();

                element.enableDisableEarningStatementLevelcontrols();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = super(_formReferenceControl);

                if (ret)
                {
                    ret = PayrollPayPeriod::resolveReferencePayPeriodByPayCycle(_formReferenceControl, payrollPayCyclelookup.text());
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollPayPeriod::lookupPayPeriodByPayCycle(_formReferenceControl, payrollPaycyclelookup.valueStr());
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                //There is no form for this field, hence overriding the method on purpose and commenting the super() call
                //super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Worker</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                //Check there is a existing earning statement there for the new record that user is inserting
                if (payrollEarningStatement.PayPeriod)
                {
                    element.checkandPopulateExisitingStatement();
                }

                element.enableDisableEarningStatementLevelcontrols();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>PayrollEarningStatementLine</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = super();

            if (!HcmPositionWorkerAssignment::existActivePositionWorker(payrollEarningStatement.Worker,
                                                                                                                                                payrollEarningStatementLine.Position,
                                                                                                                                                payrollEarningStatementLine.getCompanyTimeZoneEarningDateTime()))
            {
                if (Box::okCancel ("@SYS4000899", DialogButton::Cancel) == DialogButton::Cancel)
                {
                    payrollEarningStatementLine_Position.controlNum(1).setFocus();
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            payrollEarningStatementLine_ds.queryBuildDataSource().addOrderByField(fieldNum(PayrollEarningStatementLine, EarningDate), SortOrder::Ascending);
            payrollEarningStatementLine_ds.queryBuildDataSource().addOrderByField(fieldNum(PayrollEarningStatementLine, EarningCode), SortOrder::Ascending);
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        public void deleteMarked()
        {
            PayrollEarningStatementLine payrollEarningStatementLineLocal;

            needsResearch = this.recordsMarked();

            if (needsResearch.lastIndex() > 1)
            {
                for (int i = 1; i <= needsResearch.lastIndex(); i++)
                {
                    payrollEarningStatementLineLocal = this.cursor(needsResearch.value(i));

                    if (payrollEarningStatementLineLocal.GenerationSource == PayrollGenerationSource::Salary)
                    {
                        error ("@Payroll:YouCanRemoveOnlyOneLineAtATimeThatHasASourceOfSalaryClearAll");
                        return;
                    }
                }
            }

            super();

            // Refresh the earning statement line related fact boxes.
            element.refreshFactBoxes();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;

            if (payrollEarningStatementLine.GenerationSource == PayrollGenerationSource::Salary
                                && payrollEarningStatement.AutoGeneratedSalary == PayrollAutoGenerateSalary::Active)
            {
                if (Box::okCancel("@Payroll:IfYouDeleteThisEarningsStatementLineTheWorkerMayNotReceiveTh", DialogButton::Ok) == DialogButton::Ok)
                {
                    ret = super();
                }
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>statusIcon</Name>
						<Source><![CDATA[
        display container statusIcon(PayrollEarningStatementLine _payrollEarningStatementLine)
        {
            ImageReference imgRef;
            str imageName;
            container imgContainer;

            switch (_payrollEarningStatementLine.PaymentStatus)
            {
                case PayrollPaymentProcessingStatus::OnHold:
                    imageName = identifierstr(Pause);
                    break;
                case PayrollPaymentProcessingStatus::Released:
                    imageName = identifierstr(Release);
                    break;
                case PayrollPaymentProcessingStatus::Processed:
                    imageName = identifierstr(FieldCorrect);
                    break;
                case PayrollPaymentProcessingStatus::None:
                Default:
                    break;
            }

            if (imageName)
            {
                imgRef = ImageReference::constructForSymbol(imageName);
                imgContainer = imgRef.pack();
            }

            return imgContainer;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            needsResearch = this.recordsMarked();

            super();

            if (!needsResearch.lastIndex())
            {
                this.research();

                // Refresh the earning statement line related fact boxes.
                element.refreshFactBoxes();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            payrollEarningStatementLine.initFromPayrollEarningStatement(payrollEarningStatement);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if (needsResearch.lastIndex())
            {
                element.clearNeedsResearchArray();
            }

            payrollEarningStatementLine.EarningStatement = payrollEarningStatement.RecId;
            super(_append);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            boolean needAdjustSalary = false;

            needAdjustSalary = payrollEarningStatementLine.needAdjustingSalary();

            if (payrollEarningStatementLine.GenerationSource != PayrollGenerationSource::UserEntry)
            {
                payrollEarningStatementLine.IsEdited = true;
            }

            super();

            if (needAdjustSalary)
            {
                this.research(true);
            }

            // Refresh the earning statement line related fact boxes.
            element.refreshFactBoxes();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            element.enableDisableLineControls();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountingCurrencyAmount</DataField>
						<Methods>
							<Method>
								<Name>dataChanged</Name>
								<Source><![CDATA[
            public void dataChanged()
            {
                super();
                element.enableDisableLineControls();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>EarningCode</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollEarningCode::resolveReferenceEarningCodeByPaymentType(_formReferenceControl,
                                                                                            payrollEarningStatementLine.EarningDate);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollEarningCode::lookupEarningCodeByPaymentType(_formReferenceControl,
                                                                                            PayrollIncludeInPaymentType::Auto,
                                                                                            payrollEarningStatementLine.EarningDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Position</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common              ret;
                PayrollPayPeriod    payPeriod       = PayrollPayPeriod::find(payrollEarningStatement.PayPeriod);
                HcmPositionLookup   positionLookup  = HcmPositionLookup::newAllPositions();
                HcmPositionId       positionId;

                ret = super(_formReferenceControl);

                positionId = _formReferenceControl.filterValue(AbsoluteFieldBinding::construct(fieldStr(HcmPosition, PositionId), tableStr(HcmPosition))).value();

                if (ret != null && !positionLookup.validatePositionWorkerLegalEntity(HcmPosition::findByPosition(positionId).RecId,
                                                                                                                                                                        payrollEarningStatement.Worker, payPeriod.PayCycle,
                                                                                                                                                                        CompanyInfo::current(), true, true))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                PayrollPayPeriod    payPeriod       = PayrollPayPeriod::find(payrollEarningStatement.PayPeriod);
                HcmPositionLookup   positionLookup  = HcmPositionLookup::newAllPositions();

                return positionLookup.lookupPositionWorkerLegalEntity(_formReferenceControl,
                                                                                                                                        payrollEarningStatement.Worker, payPeriod.PayCycle,
                                                                                                                                        CompanyInfo::current(), true, true, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjActivity), _formControl);
                sysTableLookup.addLookupfield(fieldNum(ProjActivity, ActivityNumber));
                sysTableLookup.addLookupfield(fieldNum(ProjActivity, Txt));
                sysTableLookup.addLookupfield(fieldNum(ProjActivity, CategoryDefault));
                sysTableLookup.addLookupfield(fieldNum(ProjActivity, JobId));

                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(ProjActivity));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjCategoryId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (payrollEarningCode.QuantityUnit == PayrollQuantityUnit::Hours)
                {
                    ProjCategory::lookupProjCategoryType(_formControl, ProjCategoryType::Hour);
                }
                else
                {
                    ProjCategory::lookupProjCategoryType(_formControl, ProjCategoryType::Cost);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WorkerCompensationBenefit</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return HcmBenefit::resolveReferenceEarningStatHcmBenefit(_formReferenceControl,
                                                                        PayrollPayPeriod::companyTimeZonePeriodEndDateTime(payrollEarningStatement.PayPeriod),
                                                                        payrollEarningStatement.Worker);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return HcmBenefit::lookupEarningStatHcmBenefit(_formReferenceControl,
                                                                PayrollPayPeriod::companyTimeZonePeriodEndDateTime(payrollEarningStatement.PayPeriod),
                                                                payrollEarningStatement.Worker);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WorkerGLIBenefit</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return HcmBenefit::lookupEarningStatHcmBenefit(_formReferenceControl,
                                                                PayrollPayPeriod::companyTimeZonePeriodEndDateTime(payrollEarningStatement.PayPeriod),
                                                                payrollEarningStatement.Worker,
                                                                PayrollCategory::GeneralLiabilityInsurance);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return HcmBenefit::resolveReferenceEarningStatHcmBenefit(_formReferenceControl,
                                                                        PayrollPayPeriod::companyTimeZonePeriodEndDateTime(payrollEarningStatement.PayPeriod),
                                                                        payrollEarningStatement.Worker,
                                                                        PayrollCategory::GeneralLiabilityInsurance);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WorkerTaxRegion</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollWorkerTaxRegion::resolveReferenceTaxRegionByWorker(_formReferenceControl, payrollEarningStatement.Worker);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (payrollEarningStatementLine.WorkerCompensationBenefit
                                        && PayrollWorkerTaxRegion::validateBenefitTaxRegionState(payrollEarningStatementLine.Position,
                                                                                                payrollEarningStatementLine.WorkerTaxRegion,
                                                                                                payrollEarningStatementLine.WorkerCompensationBenefit))
                {
                    payrollEarningStatementLine.WorkerCompensationBenefit = 0;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollWorkerTaxRegion::lookupTaxRegionByWorker(_formReferenceControl, payrollEarningStatement.Worker);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DeleteEarningStatement</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // delete the unsaved record here before calling the deletion earning statements
            if (payrollEarningStatement_DS.recordsMarked().lastIndex() == 0)
            {
                payrollEarningStatement_DS.delete();
            }
            else
            {
                super();
            }
            payrollEarningStatement_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GenerateEarningStatementLines</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            PayrollEarningStatementLine_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReleaseEarningStatementHeader</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            payrollEarningStatementLine_Ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HoldEarningStatementHeader</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            payrollEarningStatementLine_Ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CalculateSalary</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            payrollEarningStatement.AutoGeneratedSalary = this.toggleValue() ? PayrollAutoGenerateSalary::Active : PayrollAutoGenerateSalary::InActive;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PayrollPayCycleLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            PayrollPayCycle::jumpRefPayCycle(this.text(), this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            PayrollPayCycle::lookupPayCycle(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            payrollEarningStatement.PayPeriod = PayrollPayPeriod::findOpenPeriodByPayCycle(PayrollPayCycle::findByPayCycle(this.text()).RecId).RecId;

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReleaseEarningStatementLines</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            PayrollEarningStatementLine earningStatementLine;
            boolean                     lineDistributed = true, validGrossEarningLine;
            PayrollWorkerTaxRegionRecId workerTaxRegionRecId;

            //
            // This set will be used to show error message for the earning statement lines that
            // have gross up earning code and invalid tax regions
            //
            Set grossEarningStatmentDocNum = new Set(Types::String);

            SetEnumerator               grossEarningStatmentDocNumEnumerator;
            PayrollPayCycleRecId        payCycleRecId = PayrollPayCycle::findByPayCycle(payrollPayCycleLookup.text()).RecId;

            PayrollAccrualProcess payrollAccrualProcess = new PayrollAccrualProcess();

            for (earningStatementLine = payrollEarningStatementLine_DS.getFirst(1) ? payrollEarningStatementLine_DS.getFirst(1) : payrollEarningStatementLine_DS.cursor(); earningStatementLine; earningStatementLine = payrollEarningStatementLine_DS.getNext())
            {
                if (earningStatementLine.PaymentStatus != PayrollPaymentProcessingStatus::Released
                                        && earningStatementLine.PaymentStatus != PayrollPaymentProcessingStatus::Processed)
                {
                    validGrossEarningLine = true;
                    //
                    // Checks the type of the earning statement line and then validates that all the gross earning statement lines
                    // have the same tax region for the pay cycle
                    //
                    if (PayrollEarningCode::find(earningStatementLine.EarningCode).IncludeInPaymentType == PayrollIncludeInPaymentType::GrossUp)
                    {
                        // This check is to avoid the redundent calls for the validation of the gross up earning statement lines
                        if  (workerTaxRegionRecId != earningStatementLine.WorkerTaxRegion)
                        {
                            validGrossEarningLine = PayrollEarningStatementLine::validateGrossUpEarningStmtLine(payrollEarningStatement.Worker, payCycleRecId, earningStatementLine.WorkerTaxRegion, earningStatementLine.RecId, grossEarningStatmentDocNum);
                            workerTaxRegionRecId = earningStatementLine.WorkerTaxRegion;
                        }
                    }

                    if (validGrossEarningLine && payrollAccrualProcess.validateUsage(earningStatementLine.data()))
                    {
                        lineDistributed = PayrollEarningStatementLine::releaseLine(earningStatementLine.data()) && lineDistributed;
                    }
                }

                //
                // Showing the earning statement document numbers which have invalid tax region and
                // have lines of type gross up earning statement line
                //
                if (grossEarningStatmentDocNum.elements() > 0)
                {
                    grossEarningStatmentDocNumEnumerator =   grossEarningStatmentDocNum.getEnumerator();
                    setPrefix("@SYS4090109");

                    while (grossEarningStatmentDocNumEnumerator.moveNext())
                    {
                        info (grossEarningStatmentDocNumEnumerator.current());
                    }
                }
            }

            if (!lineDistributed)
            {
                warning("@Payroll:OneOrMoreEarningsWereNotFullyDistributedAndCouldNotBeRelease");
            }

            payrollEarningStatementLine_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HoldEarningStatementLines</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            PayrollEarningStatementLine earningStatementLine;
            boolean                     lineUpdated;

            for (earningStatementLine = payrollEarningStatementLine_DS.getFirst(1) ? payrollEarningStatementLine_DS.getFirst(1) : payrollEarningStatementLine_DS.cursor(); earningStatementLine; earningStatementLine = payrollEarningStatementLine_DS.getNext())
            {
                if (earningStatementLine.PaymentStatus == PayrollPaymentProcessingStatus::None ||
                                                        earningStatementLine.PaymentStatus == PayrollPaymentProcessingStatus::Released)
                {
                    earningStatementLine.PaymentStatus = PayrollPaymentProcessingStatus::OnHold;

                    // Skip adjusting salary with this update to improve performance
                    earningStatementLine.update(true);

                    lineUpdated = true;
                }
            }

            if (lineUpdated)
            {
                payrollEarningStatementLine_DS.executeQuery();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayrollEarningStatement</Name>
			<Table>PayrollEarningStatement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutoGeneratedSalary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Note</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayrollEarningStatementLine</Name>
			<Table>PayrollEarningStatementLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarningCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarningDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarningRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarningStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerationSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isEdited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsManual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Note</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginatingEarningStatementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayStatementEarningLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Position</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PremiumEarningCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetroactivePriorRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerCompensationBenefit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerGLIBenefit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerTaxRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkPeriod</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>PayrollEarningCode</Name>
					<Table>PayrollEarningCode</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>BaseDefinition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>BasisEarningGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Description</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EarningCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FringeBenefitType</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>GrossUpEarningCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IncludeInPaymentType</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsBaseEarningsComponent</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsEarningStatementLineRateEditable</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsProductive</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsRetroactive</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>QuantityUnit</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetroactiveEarningCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TrackFMLAHours</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>PayrollEarningStatementLine</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<OnlyFetchActive>No</OnlyFetchActive>
					<JoinRelation>EarningCode</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<JoinSource>PayrollEarningStatement</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Payroll:EarningsStatement1</Caption>
		<DataSource xmlns="">PayrollEarningStatement</DataSource>
		<Pattern xmlns="">DetailsMaster</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">Yes</ShowNewButton>
		<Style xmlns="">DetailsFormMaster</Style>
		<TitleDataSource xmlns="">PayrollEarningStatement</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPaneHeader</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>EarningStatements</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DeleteEarningStatement</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>PayrollEarningStatement</DataSource>
								<MenuItemName>PayrollEarningsStatementDelete</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<SaveRecord>No</SaveRecord>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>EarningStatement</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>GenerateEarnings</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GenerateEarningStatementLines</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>PayrollEarningsStmtGenNoDialog</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<Text>@Payroll:Earnings</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GeneratePremiumEarningStatement</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>PayrollEarningStatement</DataSource>
										<MenuItemName>PayrollPremiumEarningsStmtGenDialog</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@Payroll:PremiumEarnings</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS318742</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ProcessPayments</Name>
								<ElementPosition>1188785589</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ReleaseEarningStatementHeader</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PayrollEarningsStatementRelease</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HoldEarningStatementHeader</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PayrollEarningsStatementHold</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GeneratePayStatement</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>PayrollEarningStatement</DataSource>
										<MenuItemName>PayrollPayStatementGenerationNoBatch</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@Payroll:PayStatement1</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS114631</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>CreateSalary</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1418873123</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<NeededPermission>Manual</NeededPermission>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>CalculateSalary</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>No</MultiSelect>
										<Primary>Yes</Primary>
										<SaveRecord>No</SaveRecord>
										<Text>@Payroll:CalculateSalary</Text>
										<ToggleButton>Check</ToggleButton>
										<ToggleValue>On</ToggleValue>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@Payroll:Salary</Caption>
								<DataSource>PayrollEarningStatement</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Accounting</Name>
								<ElementPosition>1303829356</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AccountingDistributionsDocumentView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>PayrollEarningStatement</DataSource>
										<MenuItemName>AccountingDistributionsDocumentView</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<Text>@SYS323891</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>Accounting</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@Payroll:EarningStatement</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>PayrollEarningStatement</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>ListStyleGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>PayrollEarningStatement_DocumentNumber_ListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ListStyleGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayrollEarningStatement_DocumentNumber_ListGrid</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>DocumentNumber</DataField>
								<DataSource>PayrollEarningStatement</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollEarningStatement_Worker_ListGrid</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>PayrollEarningStatement</DataSource>
								<ReferenceField>Worker</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollEarningStatement_PayPeriod_ListGrid</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>PayrollEarningStatement</DataSource>
								<ReferenceField>PayPeriod</ReferenceField>
								<ReplacementFieldGroup>Period</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<DataSource>PayrollEarningStatement</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDetails</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderInfo</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HeaderTitle</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@Payroll:EarningsStatement</Label>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<Caption>@Payroll:EarningsStatement1</Caption>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>DetailsTab</Name>
								<AlignControl>No</AlignControl>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Tab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Header</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Group_Group</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PayrollEarningStatement_Worker</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>707306120</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatement_Worker_DirPerson_FK_Name</Name>
																<DataRelationPath>Worker.DirPerson_FK</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>PayrollEarningStatement</DataSource>
														<ReferenceField>Worker</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PayrollPayCycleLookup</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1060959181</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Label>@Payroll:PayCycle</Label>
														<Mandatory>Yes</Mandatory>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PayrollEarningStatement_PayPeriod</Name>
														<ElementPosition>1712873859</ElementPosition>
														<EnableFormRef>No</EnableFormRef>
														<FilterExpression>%1</FilterExpression>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>PayrollEarningStatement_PayPeriod_PeriodStartDate</Name>
																<DataRelationPath>PayPeriod</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Date</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>PayrollEarningStatement_PayPeriod_PeriodEndDate</Name>
																<DataRelationPath>PayPeriod</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Date</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>PayrollEarningStatement</DataSource>
														<ReferenceField>PayPeriod</ReferenceField>
														<ReplacementFieldGroup>Period</ReplacementFieldGroup>
													</AxFormControl>
												</Controls>
												<DataSource>PayrollEarningStatement</DataSource>
												<FrameType>None</FrameType>
												<ViewEditMode>Edit</ViewEditMode>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>RightGroup</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PayrollEarningStatement_DocumentNumber</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>DocumentNumber</DataField>
														<DataSource>PayrollEarningStatement</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PayrollEarningStatement_Note</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Note</DataField>
														<DataSource>PayrollEarningStatement</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>PayrollEarningStatement</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@Payroll:EarningsStatementHeader</Caption>
										<DataSource>PayrollEarningStatement</DataSource>
										<FastTabExpanded>Yes</FastTabExpanded>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Lines</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>LinesActionPaneStrip</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>LinesRecordActions</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>AddLine</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Add</NormalImage>
																<Primary>Yes</Primary>
																<Text>@SYS319116</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>RemoveLine</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Delete</NormalImage>
																<Primary>Yes</Primary>
																<SaveRecord>No</SaveRecord>
																<Text>@SYS135131</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<DataSource>PayrollEarningStatementLine</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>EarningStatementAccDistButtons</Name>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>AccountingDistributionsLineButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataSource>PayrollEarningStatementLine</DataSource>
																<MenuItemName>AccountingDistPayrollEarningStatement</MenuItemName>
																<Primary>Yes</Primary>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>ButtonGroup</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>ReleaseEarningStatementLines</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<DataSource>PayrollEarningStatementLine</DataSource>
																<MenuItemName>PayrollEarningsStatementLinesRelease</MenuItemName>
																<MenuItemType>Action</MenuItemType>
																<MultiSelect>Yes</MultiSelect>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>HoldEarningStatementLines</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<MenuItemName>PayrollEarningsStatementLinesHold</MenuItemName>
																<MenuItemType>Action</MenuItemType>
																<MultiSelect>Yes</MultiSelect>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>PayrollEarningStatementLine</DataSource>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>LinesGrid</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>PayrollEarningStatementLine_PaymentStatusIcon</Name>
														<ElementPosition>238609292</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>16</Height>
														<HeightMode>Auto</HeightMode>
														<Type>Image</Type>
														<VerticalSpacingMode>Fixed</VerticalSpacingMode>
														<Width>16</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>statusIcon</DataMethod>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<Imagemode>SizeToFit</Imagemode>
														<Label>@Payroll:PaymentStatus</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>PayrollEarningStatementLine_EarningDate</Name>
														<ElementPosition>402653181</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>EarningDate</DataField>
														<DataSource>PayrollEarningStatementLine</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PayrollEarningStatementLine_Position</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>536870910</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_Position_PositionId</Name>
																<DataRelationPath>Position</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<ReferenceField>Position</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PayrollEarningStatementLine_WorkerTaxRegion</Name>
														<ElementPosition>715827880</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_WorkerTaxRegion_TaxRegion_FK_Logistics_FK_Description</Name>
																<DataRelationPath>WorkerTaxRegion.TaxRegion_FK.Logistics_FK</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<ReferenceField>WorkerTaxRegion</ReferenceField>
														<ReplacementFieldGroup>TaxRegion</ReplacementFieldGroup>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PayrollEarningStatementLine_EarningCode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>894784850</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_EarningCode_EarningCode</Name>
																<DataRelationPath>EarningCode</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<ReferenceField>EarningCode</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PayrollEarningCode_Description</Name>
														<ElementPosition>1073741820</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Description</DataField>
														<DataSource>PayrollEarningCode</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>PayrollEarningStatementLine_Quantity</Name>
														<ElementPosition>1252698790</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Quantity</DataField>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>PayrollEarningCode_QuantityUnit</Name>
														<ElementPosition>1431655760</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>QuantityUnit</DataField>
														<DataSource>PayrollEarningCode</DataSource>
														<Label>@SYS112871</Label>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>PayrollEarningStatementLine_EarningRate</Name>
														<ElementPosition>1610612730</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>EarningRate</DataField>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>PayrollEarningStatementLine_AccountingCurrencyAmount</Name>
														<ElementPosition>1789569700</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>AccountingCurrencyAmount</DataField>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>PayrollEarningStatementLine_PaymentStatus</Name>
														<ElementPosition>1968526673</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymentStatus</DataField>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataSource>PayrollEarningStatementLine</DataSource>
												<Style>Tabular</Style>
												<VisibleRows>5</VisibleRows>
												<VisibleRowsMode>Fixed</VisibleRowsMode>
											</AxFormControl>
										</Controls>
										<Caption>@Payroll:EarningsStatementLines</Caption>
										<DataSource>PayrollEarningStatementLine</DataSource>
										<FastTabExpanded>Always</FastTabExpanded>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>LineDetails</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>Custom</Pattern>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>LineDetailsTabs</Name>
												<AlignControl>No</AlignControl>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Tab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineGeneral</Name>
														<ElementPosition>820645532</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>LineRightGroup</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>PayrollEarningStatementLine_WorkerCompensationBenefit</Name>
																		<ElementPosition>858993458</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PayrollEarningStatementLine_WorkerCompensationBenefit_HcmBenefitPlan_BenefitPlanID</Name>
																				<DataRelationPath>WorkerCompensationBenefit.HcmBenefitPlan</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PayrollEarningStatementLine_WorkerCompensationBenefit_HcmBenefitOption_BenefitOptionID</Name>
																				<DataRelationPath>WorkerCompensationBenefit.HcmBenefitOption</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<ReferenceField>WorkerCompensationBenefit</ReferenceField>
																		<ReplacementFieldGroup>Reference</ReplacementFieldGroup>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>PayrollEarningStatementLine_WorkerGeneralLiabilityInsuranceBenefit</Name>
																		<ElementPosition>1288490187</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PayrollEarningStatementLine_WorkerGeneralLiabilityInsuranceBenefit_HcmBenefitPlan_BenefitPlanID</Name>
																				<DataRelationPath>WorkerGeneralLiabilityInsuranceBenefit.HcmBenefitPlan</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PayrollEarningStatementLine_WorkerGeneralLiabilityInsuranceBenefit_HcmBenefitOption_BenefitOptionID</Name>
																				<DataRelationPath>WorkerGeneralLiabilityInsuranceBenefit.HcmBenefitOption</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<ReferenceField>WorkerGLIBenefit</ReferenceField>
																		<ReplacementFieldGroup>Reference</ReplacementFieldGroup>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>ReferenceGroup_PayrollWorkPeriod</Name>
																		<ElementPosition>1503238551</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<ReferenceField>WorkPeriod</ReferenceField>
																		<ReplacementFieldGroup>Periods</ReplacementFieldGroup>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCheckBoxControl">
																		<Name>PayrollEarningStatementLine_IsManual</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1717986916</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>CheckBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>IsManual</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormDateControl">
																		<Name>PayrollEarningStatementLine_AccountingDate</Name>
																		<ElementPosition>1932735281</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Date</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>AccountingDate</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>PayrollEarningStatementLine</DataSource>
																<FrameType>None</FrameType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>LineLeftGroup</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>PayrollEarningStatementLine_GenerationSource</Name>
																		<ElementPosition>636291450</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ComboBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>GenerationSource</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCheckBoxControl">
																		<Name>PayrollEarningStatementLine_isEdited</Name>
																		<ElementPosition>954437176</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>CheckBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>isEdited</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>PayrollEarningStatementLine_PayrollPremiumEarningCode</Name>
																		<ElementPosition>1193046470</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<ReferenceField>PremiumEarningCode</ReferenceField>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>PayrollEarningStatementLine_RetroactivePriorRate</Name>
																		<ElementPosition>1193046470</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>Real</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>RetroactivePriorRate</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<NoOfDecimals>-1</NoOfDecimals>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>PayrollEarningStatementLine_Note</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Note</DataField>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>PayrollEarningStatementLine</DataSource>
																<FrameType>None</FrameType>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<HideIfEmpty>No</HideIfEmpty>
														<Caption>@SYS2952</Caption>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<Scrollbars>Auto</Scrollbars>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineProject</Name>
														<ElementPosition>1230968298</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_ProjId</Name>
																<ElementPosition>715827882</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ProjId</DataField>
																<DataSource>PayrollEarningStatementLine</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_ProjCategoryId</Name>
																<ElementPosition>1073741823</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ProjCategoryId</DataField>
																<DataSource>PayrollEarningStatementLine</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_ProjActivityNumber</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ProjActivityNumber</DataField>
																<DataSource>PayrollEarningStatementLine</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PayrollEarningStatementLine_ProjLinePropertyId</Name>
																<ElementPosition>1789569705</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ProjLinePropertyId</DataField>
																<DataSource>PayrollEarningStatementLine</DataSource>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@SYS39770</Caption>
														<DataSource>PayrollEarningStatementLine</DataSource>
														<Scrollbars>Auto</Scrollbars>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>DimensionsFastTab</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1689225972</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>DistributionTemplateHeader</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>PayrollEarningStatementLine_AccountingDistributionTemplate</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Type>ReferenceGroup</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormStringControl">
																				<Name>PayrollEarningStatementLine_AccountingDistributionTemplate_Name</Name>
																				<DataRelationPath>AccountingDistributionTemplate</DataRelationPath>
																				<FilterExpression>%1</FilterExpression>
																				<HeightMode>Auto</HeightMode>
																				<Type>String</Type>
																				<VerticalSpacing>-1</VerticalSpacing>
																				<WidthMode>Auto</WidthMode>
																				<FormControlExtension
																					i:nil="true" />
																			</AxFormControl>
																		</Controls>
																		<DataSource>PayrollEarningStatementLine</DataSource>
																		<ReferenceField>AccountingDistributionTemplate</ReferenceField>
																	</AxFormControl>
																</Controls>
																<HideIfEmpty>No</HideIfEmpty>
																<LeftMargin>10</LeftMargin>
																<LeftMarginMode>Fixed</LeftMarginMode>
																<FrameType>None</FrameType>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>GroupFinancialDimensionHeader</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Type>Group</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormContainerControl">
																		<Name>DimensionEntryControl</Name>
																		<Type>Container</Type>
																		<FormControlExtension>
																			<Name>DimensionEntryControl</Name>
																			<ExtensionComponents />
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmControllerClassName</Name>
																					<Type>ExtendedDataType</Type>
																					<TypeName>ClassName</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmControlLabelText</Name>
																					<Type>String</Type>
																					<Value>@SYS138487</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmEnumerationName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSourceName</Name>
																					<Type>String</Type>
																					<Value>PayrollEarningStatementLine</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmValueSetReferenceField</Name>
																					<Type>String</Type>
																					<Value>DefaultDimension</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmEnumValueSetReferenceField</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</FormControlExtension>
																		<Controls />
																	</AxFormControl>
																</Controls>
																<HideIfEmpty>No</HideIfEmpty>
																<DataSource>PayrollEarningStatementLine</DataSource>
																<FrameType>None</FrameType>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@SYS101181</Caption>
														<Scrollbars>Auto</Scrollbars>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<BottomMargin>0</BottomMargin>
										<BottomMarginMode>Fixed</BottomMarginMode>
										<LeftMargin>0</LeftMargin>
										<LeftMarginMode>Fixed</LeftMarginMode>
										<RightMargin>0</RightMargin>
										<RightMarginMode>Fixed</RightMarginMode>
										<TopMargin>0</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<Caption>@SYS23823</Caption>
										<FastTabExpanded>No</FastTabExpanded>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<ShowTabs>No</ShowTabs>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Scrollbars>Auto</Scrollbars>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomFilterGroup</Name>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>QuickFilterControl3</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>MainGrid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>MainGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayrollEarningStatement_DocumentNumber_MainGrid</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNumber</DataField>
										<DataSource>PayrollEarningStatement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PayrollEarningStatement_Worker_MainGrid</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>PayrollEarningStatement</DataSource>
										<ReferenceField>Worker</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PayrollEarningStatement_WorkerPN_MainGrid</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>PayrollEarningStatement</DataSource>
										<Label>@SYS303656</Label>
										<ReferenceField>Worker</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PayrollEarningStatement_PayPeriodCycle_MainGrid</Name>
										<EnableFormRef>No</EnableFormRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>PayrollEarningStatement</DataSource>
										<Label>@Payroll:PayCycle1</Label>
										<ReferenceField>PayPeriod</ReferenceField>
										<ReplacementFieldGroup>PayrollPeriod</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PayrollEarningStatement_PayPeriod_MainGrid</Name>
										<EnableFormRef>No</EnableFormRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>PayrollEarningStatement</DataSource>
										<ReferenceField>PayPeriod</ReferenceField>
										<ReplacementFieldGroup>Period</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DefaultAction>MainGridDefaultAction</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>MainGridDefaultAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>HcmWorkerDetailPositionPart</Name>
			<DataSource>PayrollEarningStatement</DataSource>
			<DataSourceRelation>PayrollEarningStatement.Worker</DataSourceRelation>
			<ElementPosition>429496729</ElementPosition>
			<MenuItemName>HcmWorkerDetailPositionPart</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>PayrollEarningsStatementWorkerEarnings</Name>
			<DataSource>PayrollEarningStatement</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>858993458</ElementPosition>
			<MenuItemName>PayrollEarningsStatementWorkerEarning</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>PayrollEarningsStatementTotals</Name>
			<DataSource>PayrollEarningStatement</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>1288490187</ElementPosition>
			<MenuItemName>PayrollEarningsStatementTotals</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>PayrollEarningsPayStatementsSummary</Name>
			<DataSource>PayrollEarningStatement</DataSource>
			<DataSourceRelation>PayrollEarningStatementLine.EarningStatement</DataSourceRelation>
			<ElementPosition>1717986916</ElementPosition>
			<MenuItemName>PayrollEarningsPayStatementsSummary</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
	</Parts>
</AxForm>