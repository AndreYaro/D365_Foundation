<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailStoreItemPriceList</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailStoreItemPriceList extends FormRun
{
    date activeDate;
    Catalog catalogTable;
    Map mapDiscountAmount;
    Map mapActivePrice;
    Map mapProductPromotionOffIds;
    Map mapProductNonPromotionOffIds;
    Map mapAssortmentLookup;
    int i;
    private boolean dataGenerated, isChannelComboModified;
    private TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValues;

    [FormObservable]
    int formTableId;

}
]]></Source>
			</Method>
			<Method>
				<Name>getChannelTable</Name>
				<Source><![CDATA[
    /*
        Child Join on RetailAssortmentLookup recordset will be in following order, so functions should use this as per following:
        =============================================================================================================================
        RetailAssortmentLookup
        RetailAssortmentLookupChannelGroup
        RetailChannelTable
        InventTable
        OMOperatingUnit
        RetailCatalogChannelCollapsed
        EcoResProductTranslation
        RetailProductParentView
        InventTableModule
        RetailChannelItemPriceAgreement
        InventDimCombination
        CatalogProduct

        if the form opened from channel or released product form, recordset will be in following order
        ================================================================================================================================
        RetailAssortmentLookup
        RetailAssortmentLookupChannelGroup
        RetailChannelTable
        InventTable
        OMOperatingUnit
        EcoResProductTranslation
        RetailProductParentView
        InventTableModule
        RetailChannelItemPriceAgreement
        InventDimCombination
    */

    /// <summary>
    /// Gets the RetailChannelTable for current assorted item.
    /// </summary>
    /// <param name="_assortmentLookup">
    /// An <c>RetailAssortmentLookup</c> recod.
    /// </param>
    /// <returns>
    /// Retail channel table for current RetailAssortmentLookup.
    /// </returns>
    public RetailChannelTable getChannelTable(RetailAssortmentLookup _assortmentLookup)
    {
        RetailChannelTable          localRetailChannelTable;
        localRetailChannelTable = _assortmentLookup.joinChild().joinChild();
        return localRetailChannelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOfferIds</Name>
				<Source><![CDATA[
    public Str60 getOfferIds(RetailAssortmentLookup _retailAssortmentLookup, str _offerTypeRangeValue)
    {
        this.calculateDisplayDetails(_retailAssortmentLookup);

        str key = element.getKeyForPriceList(_retailAssortmentLookup);

        if (_offerTypeRangeValue == queryValue(RetailDiscountOfferTypeBase::Promotion))
        {
            if (mapProductPromotionOffIds.exists(key))
            {
                return mapProductPromotionOffIds.lookup(key);
            }
        }
        else
        {
            if (mapProductNonPromotionOffIds.exists(key))
            {
                return mapProductNonPromotionOffIds.lookup(key);
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        OMOperatingUnit operatingUnit;
        InventTable LocalInventTable;
        super();

        mapActivePrice                  = new Map(Types::String, Types::Real);
        mapDiscountAmount               = new Map(Types::String, Types::Real);
        mapProductPromotionOffIds       = new Map(Types::String, Types::String);
        mapProductNonPromotionOffIds    = new Map(Types::String, Types::String);
        mapAssortmentLookup             = new Map(Types::String, Types::Int64);

        if (this.args() && this.args().record())
        {
            formTableId = this.args().record().TableId;
            switch (formTableId)
            {
                case tableNum(InventTable):
                    EcoResProductTranslation_Name.visible(false);
                    LocalInventTable = element.args().record();
                    // Disable dataSources if caller is not RetailCatalog.
                    invent_ds.query().dataSourceTable(Tablenum(InventTable)).addRange(fieldNum(InventTable, ItemId)).value(LocalInventTable.ItemId);
                    RCP_ds.query().dataSourceTable(tableNum(CatalogProduct)).enabled(false);
                    RCatChannelCol_ds.query().dataSourceTable(tableNum(RetailCatalogChannelCollapsed)).enabled(false);
                    catalog_ds.query().dataSourceTable(tableNum(Catalog)).enabled(false);
                    channelCombo.visible(false);
                    break;
                case tableNum(OMOperatingUnit):

                    operatingUnit = element.args().record();
                    OMOperatingUnit_OMOperatingUnitNumber.visible(false);
                    // Disable dataSources if caller is not RetailCatalog.
                    ALKPCG_ds.query().dataSourceTable(tableNum(RetailAssortmentLookupChannelGroup)).addRange(fieldNum(RetailAssortmentLookupChannelGroup, OMOperatingUnitId)).value(queryValue(operatingUnit.RecId));
                    RCP_ds.query().dataSourceTable(tableNum(CatalogProduct)).enabled(false);
                    RCatChannelCol_ds.query().dataSourceTable(tableNum(RetailCatalogChannelCollapsed)).enabled(false);
                    catalog_ds.query().dataSourceTable(tableNum(Catalog)).enabled(false);
                    channelCombo.add(operatingUnit.Name);
                    break;
                case tableNum(Catalog):
                    OMOperatingUnit_OMOperatingUnitNumber.visible(false);
                    catalogTable = element.args().record();
                    // add the range on the catalog.
                    catalog_ds.query().dataSourceTable(tableNum(Catalog)).addRange(fieldNum(Catalog, RecId)).value(int642str(catalogTable.RecId));
                    RCP_ds.query().dataSourceTable(tableNum(CatalogProduct)).addRange(fieldNum(CatalogProduct, Catalog)).value(int642str(catalogTable.RecId));
                    RCatChannelCol_ds.queryBuildDataSource()
                        .addRange(fieldNum(RetailCatalogChannelCollapsed, Catalog))
                        .value(int642str(catalogTable.RecId));

                    element.populateChannelSelector();

                    oMOperatingUnit_ds.queryBuildDataSource()
                        .addRange(fieldNum(OMOperatingUnit, Name))
                        .value(channelCombo.valueStr());

                    break;
            }
        }

        InventTblMod_DS.cacheCalculateMethod('getPrice');
        retailAssortmentLookup_DS.cacheCalculateMethod('promotions');
        retailAssortmentLookup_DS.cacheCalculateMethod('discountOffers');

        retailAssortmentLookup_DS.cacheCalculateMethod('getActivePrice');
        retailAssortmentLookup_DS.cacheCalculateMethod('getDiscountAmount');

        // set default active date to today
        activeDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
        activeDateEdit.dateValue(activeDate);

        // set product translations to default language
        ProductTrans_ds.queryBuildDataSource()
            .addRange(fieldNum(EcoResProductTranslation, LanguageId))
            .value(SysQuery::value(LanguageTable::defaultLanguage()));

        this.setRetailCatalogChannelCollapsedDateRange();

        using(var _ = RetailPricingInstrumentationSegment::construct('PriceList', 'executeQuery'))
        {
            retailAssortmentLookup_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateChannelSelector</Name>
				<Source><![CDATA[
    private void populateChannelSelector()
    {
        while select Name from OMOperatingUnit
            join RecId from Channel
                where Channel.OMOperatingUnitID == OMOperatingUnit.RecId
            join Channel, Catalog from RCatChannelCol
                where RCatChannelCol.Channel == Channel.RecId
                && RCatChannelCol.Catalog == catalogTable.RecId
        {
            channelCombo.add(OMOperatingUnit.Name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailCatalogChannelCollapsedDateRange</Name>
				<Source><![CDATA[
    public void setRetailCatalogChannelCollapsedDateRange()
    {
        QueryBuildDataSource collapsed_ds = RCatChannelCol_ds.queryBuildDataSource();

        str validFromRange = strFmt('((%1 < %2) || (%1 == 0))',
                fieldStr(RetailCatalogChannelCollapsed, ValidFrom),
                date2StrXpp(activeDate + 1));

        str validToRange = strFmt('((%1 > %2) || (%1 == 0))',
                fieldStr(RetailCatalogChannelCollapsed, ValidTo),
                date2StrXpp(activeDate - 1));

        collapsed_ds.clearRange(fieldNum(RetailCatalogChannelCollapsed, ValidFrom));
        collapsed_ds.addRange(fieldNum(RetailCatalogChannelCollapsed, ValidFrom))
            .value(validFromRange);

        collapsed_ds.clearRange(fieldNum(RetailCatalogChannelCollapsed, ValidTo));
        collapsed_ds.addRange(fieldNum(RetailCatalogChannelCollapsed, ValidTo))
            .value(validToRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTradeAgreementDateRange</Name>
				<Source><![CDATA[
    public void setTradeAgreementDateRange()
    {
        QueryBuildDataSource agreement_ds = ChanneIItemPriceAgr_ds.queryBuildDataSource();

        str validFromRange = strFmt('((%1 < %2) || (%1 == 0))',
                fieldStr(RetailChannelItemPriceAgreement, FromDate),
                date2StrXpp(activeDate + 1));

        str validToRange = strFmt('((%1 > %2) || (%1 == 0))',
                fieldStr(RetailChannelItemPriceAgreement, ToDate),
                date2StrXpp(activeDate - 1));

        agreement_ds.clearRange(fieldNum(RetailChannelItemPriceAgreement, FromDate));
        agreement_ds.addRange(fieldNum(RetailChannelItemPriceAgreement, FromDate))
            .value(validFromRange);

        agreement_ds.clearRange(fieldNum(RetailChannelItemPriceAgreement, ToDate));
        agreement_ds.addRange(fieldNum(RetailChannelItemPriceAgreement, ToDate))
            .value(validToRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateDisplayDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the active price and discount amount.
    /// </summary>
    /// <param name="_assortmentLookup">
    /// An <c>RetailAssortmentLookup</c> record to calculate price, discount and offer ids for product.
    /// </param>
    /// <default>
    /// This function calculates the active price and discount amount and put them into caching.
    /// </default>
    public void calculateDisplayDetails(RetailAssortmentLookup _assortmentLookup)
    {
        RetailAssortmentLookup          localAssortmentLookup;
        SalesUnit                       salesUnit;
        InventTable                     localInventTable;
        RetailChannelTable              localChannelTable;
        CatalogProduct                  localCatalogProduct;
        RetailProductParentView         localProductParent;
        InventTableModule               localInventTableModule;
        InventDimCombination            localInventDimCombination;
        RetailChannelItemPriceAgreement localPriceAgreement;
        EcoResProductTranslation        localProdTranslation;
        List                            priceDiscountLines, priceDiscountLinesProduct;
        ListEnumerator                  priceDiscountLinesEnumerator, priceDiscountLinesEnumeratorProduct;
        RetailPriceDiscountLine         priceDiscountLine;
        Map                             mapProductPromOffIds;
        Map                             mapProductNonPromOffIds;
        Map                             mapChannelId;
        MapEnumerator                   channelIdEnumerator;
        RefRecId                        assortmentLookUpRecId;
        int                             recordCount;
        boolean                         multipleStores;
        boolean firstStoreCheck;
                
        Set setProductsRecIds = new Set(Types::Int64);

        TmpRetailPriceCheckProduct      tmpRetailPriceCheckProduct;
        RecordInsertList                listOfRetailPriceCheckProduct = new RecordInsertList(tableNum(TmpRetailPriceCheckProduct),
                                                                                             false, // skip insert
                                                                                             false, // skip database log
                                                                                             false, // skip events
                                                                                             false, // skip aos validation
                                                                                             false, // skip RLS validation
                                                                                             tmpRetailPriceCheckProduct);

        priceDiscountLines = new List(Types::Class);

        priceDiscountLinesProduct = new List(Types::Class);
        mapChannelId = new Map(Types::Int64, Types::Integer);
        firstStoreCheck = true;

        recordCount = retailAssortmentLookup_ds.numberOfRowsLoaded();

        // Find out from where price list form is being called.
        // When called from product we get all channels having product.
        // When called from a channel we get products selling in those channels.
        // When called from catalog we will filter based on channel and have catalog products.
        for (i = 1; i <= recordCount; i++)
        {
            localAssortmentLookup = retailAssortmentLookup_ds.cursor(i);

            str key = element.getKeyForPriceList(localAssortmentLookup);

            if (!mapAssortmentLookup.exists(key))
            {
                localChannelTable = this.getChannelTable(localAssortmentLookup);
                localInventTable = localChannelTable.joinChild();

                if (mapChannelId.exists(localChannelTable.RecId))
                {
                    multipleStores = false;
                }
                else
                {
                    mapChannelId.insert(localChannelTable.RecId, 1);

                    if (firstStoreCheck)
                    {
                        multipleStores = false;
                        firstStoreCheck = false;
                    }
                    else
                    {
                        multipleStores = true;
                    }
                }

                switch (formTableId)
                {
                    case tableNum(InventTable):
                    case tableNum(OMOperatingUnit):
                        localProdTranslation = localInventTable.joinChild().joinChild();
                        localProductParent = localProdTranslation.joinChild();
                        localInventTableModule = localProductParent.joinChild();
                        break;

                    case tableNum(Catalog):
                        localProdTranslation = localInventTable.joinChild().joinChild().joinChild();
                        localProductParent = localProdTranslation.joinChild();
                        localInventTableModule = localProductParent.joinChild();
                        localCatalogProduct = localInventTableModule.joinChild().joinChild().joinChild();
                        break;
                }

                localPriceAgreement = localInventTableModule.joinChild();
                localInventDimCombination = localPriceAgreement.joinChild();

                salesUnit = InventTableModule::find(localInventTable.ItemId, ModuleInventPurchSales::Sales).UnitId;

                priceDiscountLine = new RetailPriceDiscountLine();
                priceDiscountLine.parmCatalogRefRecId(catalogTable.RecId);
                priceDiscountLine.parmChannelRefRecId(localChannelTable.RecId);
                priceDiscountLine.parmInventDimId(localInventDimCombination.InventDimId);
                priceDiscountLine.parmItemId(localInventTable.ItemId);
                priceDiscountLine.parmQty(1);
                priceDiscountLine.parmReferenceRecId(localAssortmentLookup.RecId);
                priceDiscountLine.parmSalesUnit(salesUnit);
                priceDiscountLines.addEnd(priceDiscountLine);

                var productRecId = localInventTable.Product;
                if (!setProductsRecIds.in(productRecId))
                {
                    setProductsRecIds.add(productRecId);

                    tmpRetailPriceCheckProduct.Product = productRecId;
                    listOfRetailPriceCheckProduct.add(tmpRetailPriceCheckProduct);
                }

                mapAssortmentLookup.insert(key, localInventTable.Product);
            }
        }

        listOfRetailPriceCheckProduct.insertDatabase();

        TmpRetailPriceCheckProduct countTmpRetailPriceCheckProduct;
        countTmpRetailPriceCheckProduct.linkPhysicalTableInstance(tmpRetailPriceCheckProduct);

        select count(RecId) from countTmpRetailPriceCheckProduct;

        // Price list form is called for a product.
        if (multipleStores)
        {
            channelIdEnumerator = mapChannelId.getEnumerator();
            priceDiscountLinesEnumerator = priceDiscountLines.getEnumerator();

            while (channelIdEnumerator.moveNext())
            {
                priceDiscountLinesProduct = new List(Types::Class);
                priceDiscountLinesEnumerator.moveNext();
                priceDiscountLinesProduct.addEnd(priceDiscountLinesEnumerator.current());

                // Calls into pricing engine.
                RetailPricingCalculatorCreator::getInstance().createPriceCheck().calculateIndependentPriceDiscounts(channelIdEnumerator.currentKey(), priceDiscountLinesProduct);

                // Get promtion offerIds
                mapProductPromOffIds = RetailPeriodicDiscount::getOfferIdsByProductsV2(channelIdEnumerator.currentKey(), catalogTable.RecId, tmpRetailPriceCheckProduct, queryValue(RetailDiscountOfferTypeBase::Promotion), activeDate);

                // Get non-promotion offerIds
                mapProductNonPromOffIds = RetailPeriodicDiscount::getOfferIdsByProductsV2(channelIdEnumerator.currentKey(), catalogTable.RecId, tmpRetailPriceCheckProduct, SysQuery::valueNot(RetailDiscountOfferTypeBase::Promotion), activeDate);

                priceDiscountLinesEnumeratorProduct = priceDiscountLinesProduct.getEnumerator();
                this.PopulatePriceDiscountsOfferIds(priceDiscountLinesEnumeratorProduct, mapProductPromOffIds, mapProductNonPromOffIds);
            }
        }
        else if (countTmpRetailPriceCheckProduct.RecId != 0)
        {
            // Price list form called for a channel.

            // Pricing engine call.
            RetailPricingCalculatorCreator::getInstance().createPriceCheck().calculateIndependentPriceDiscounts(localChannelTable.RecId, priceDiscountLines);

            // Get promtion offerIds
            mapProductPromOffIds = RetailPeriodicDiscount::getOfferIdsByProductsV2(localChannelTable.RecId, catalogTable.RecId, tmpRetailPriceCheckProduct, queryValue(RetailDiscountOfferTypeBase::Promotion), activeDate);

            // Get non-promotion offerIds
            mapProductNonPromOffIds = RetailPeriodicDiscount::getOfferIdsByProductsV2(localChannelTable.RecId, catalogTable.RecId, tmpRetailPriceCheckProduct, SysQuery::valueNot(RetailDiscountOfferTypeBase::Promotion), activeDate);

            priceDiscountLinesEnumerator = priceDiscountLines.getEnumerator();
            this.PopulatePriceDiscountsOfferIds(priceDiscountLinesEnumerator, mapProductPromOffIds, mapProductNonPromOffIds);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PopulatePriceDiscountsOfferIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate map with discounts and price adjustments from discount line enumerator.
    /// </summary>
    /// <param name = "priceDiscountLinesEnumerator">Enumerator for discount lines.</param>
    /// <param name = "mapProductPromOffIds">Map to store discount offers.</param>
    /// <param name = "mapProductNonPromOffIds">Map to store price adjustments.</param>
    private void PopulatePriceDiscountsOfferIds(ListEnumerator priceDiscountLinesEnumerator, Map mapProductPromOffIds, Map mapProductNonPromOffIds)
    {
        RefRecId assortmentLookUpRecId, channelRecId;
        RetailPriceDiscountLine priceDiscountLine;

        while (priceDiscountLinesEnumerator.moveNext())
        {
            priceDiscountLine = priceDiscountLinesEnumerator.current();

            assortmentLookUpRecId = priceDiscountLine.parmReferenceRecId();
            channelRecId = priceDiscountLine.parmChannelRefRecId();

            str key = int642Str(assortmentLookUpRecId) + int642Str(channelRecId);

            // Set active price
            mapActivePrice.insert(key, priceDiscountLine.parmPrice());

            // Set discount amount
            mapDiscountAmount.insert(key, priceDiscountLine.parmDiscount());

            // Set promotion offerIds
            if (mapProductPromOffIds.exists(mapAssortmentLookup.lookup(key)))
            {
                mapProductPromotionOffIds.insert(key, mapProductPromOffIds.lookup(mapAssortmentLookup.lookup(key)));
            }

            // Set non promotion offerIds
            if (mapProductNonPromOffIds.exists(mapAssortmentLookup.lookup(key)))
            {
                mapProductNonPromotionOffIds.insert(key, mapProductNonPromOffIds.lookup(mapAssortmentLookup.lookup(key)));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populatePriceDiscountsOfferIdInTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate temp table with discounts and price adjustments from discount line enumerator.
    /// </summary>
    /// <param name = "priceDiscountLinesEnumerator">Enumerator for discount lines.</param>
    private void populatePriceDiscountsOfferIdInTempTable(ListEnumerator priceDiscountLinesEnumerator)
    {
        RefRecId assortmentLookUpRecId, channelRecId;
        RetailPriceDiscountLine priceDiscountLine;
        RecordInsertList listOfDisplayDetails = new RecordInsertList(tableNum(TmpRetailPriceListDisplayValues),
                                                                                false, // skip insert
                                                                                false, // skip database log
                                                                                false, // skip events
                                                                                false, // skip aos validation
                                                                                false, // skip RLS validation
                                                                                tmpRetailPriceListDisplayValues);

        while (priceDiscountLinesEnumerator.moveNext())
        {
            TmpRetailPriceCheckProduct  tmpRetailPriceCheckProductLocal;
            InventTable inventTableOffers;
            RefRecId productRecId;
            container offerIdsCont, promotionsCont;
            RetailMemo discountOffers, promotionOffers;

            priceDiscountLine = priceDiscountLinesEnumerator.current();

            assortmentLookUpRecId = priceDiscountLine.parmReferenceRecId();
            channelRecId = priceDiscountLine.parmChannelRefRecId();

            productRecId = InventTable::find(priceDiscountLine.parmItemId()).Product;

            str key = int642Str(assortmentLookUpRecId) + int642Str(channelRecId);

            tmpRetailPriceListDisplayValues.AssortmentRecId = assortmentLookUpRecId;
            tmpRetailPriceListDisplayValues.ChannelRecId = channelRecId;
            tmpRetailPriceListDisplayValues.CatalogRecId = priceDiscountLine.parmCatalogRefRecId();
            tmpRetailPriceListDisplayValues.ItemId = priceDiscountLine.parmItemId();
            tmpRetailPriceListDisplayValues.ActivePrice = priceDiscountLine.parmPrice();
            tmpRetailPriceListDisplayValues.CalculatedDiscount = priceDiscountLine.parmDiscount();

            // Get discount offers.
            offerIdsCont += RetailPriceListHelper::getOffersAssignedToCategory(channelRecId, productRecId, activeDate);
            offerIdsCont += priceDiscountLine.parmCatalogRefRecId() ?
                             RetailPriceListHelper::getOffersDirectlyAssignedToCategoryAndCatalog(priceDiscountLine.parmCatalogRefRecId(), productRecId, activeDate) : '';
            offerIdsCont += RetailPriceListHelper::getOffersDirectlyAssignedToProduct(channelRecId, productRecId, activeDate);
            offerIdsCont += priceDiscountLine.parmCatalogRefRecId() ?
                             RetailPriceListHelper::getOffersDirectlyAssignedToProductAndCatalog(priceDiscountLine.parmCatalogRefRecId(), productRecId, activeDate) : '';

            // Get promotional offers.
            promotionsCont += RetailPriceListHelper::getOffersAssignedToCategory(channelRecId, productRecId, activeDate, true);
            promotionsCont += priceDiscountLine.parmCatalogRefRecId() ?
                               RetailPriceListHelper::getOffersDirectlyAssignedToCategoryAndCatalog(priceDiscountLine.parmCatalogRefRecId(), productRecId, activeDate, true) : '';
            promotionsCont += RetailPriceListHelper::getOffersDirectlyAssignedToProduct(channelRecId, productRecId, activeDate, true);
            promotionsCont += priceDiscountLine.parmCatalogRefRecId() ?
                               RetailPriceListHelper::getOffersDirectlyAssignedToProductAndCatalog(priceDiscountLine.parmCatalogRefRecId(), productRecId, activeDate, true) : '';

            // Separate offers with comma and store them in a variable.
            for (i=1; i <= conlen(offerIdsCont); i++)
            {
                if (conpeek(offerIdsCont,i))
                {
                    discountOffers += (discountOffers ? ', ' : '') + conpeek(offerIdsCont,i);
                }
            }

            // Separate promotional offers with comma and store them in a variable.
            for (i=1; i <= conlen(promotionsCont); i++)
            {
                if (conpeek(promotionsCont,i))
                {
                    promotionOffers += (promotionOffers ? ', ' : '') + conpeek(promotionsCont,i);
                }
            }

            tmpRetailPriceListDisplayValues.DiscountOffers = discountOffers;
            tmpRetailPriceListDisplayValues.Promotions = promotionOffers;

            listOfDisplayDetails.add(tmpRetailPriceListDisplayValues);
        }

        listOfDisplayDetails.insertDatabase();

    }

]]></Source>
			</Method>
			<Method>
				<Name>getKeyForPriceList</Name>
				<Source><![CDATA[
    /// <summary>
   /// Calculates key for price list form.
   /// </summary>
   /// <param name = "_assortmentLookup">Assortment lookup row.</param>
   /// <returns>Unique key for assortment and channel.</returns>
    private str getKeyForPriceList(RetailAssortmentLookup _assortmentLookup)
    {
        RetailChannelTable localChannelTable = element.getChannelTable(_assortmentLookup);
        return int642Str(_assortmentLookup.RecId) + int642Str(localChannelTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateDisplayDetailsForCallerOperatingUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the active price and discount amount when the form caller table is OMOperatingUnit.
    /// </summary>
    /// <param name = "_query"> Query object that has to be iterated and prepare item data.</param>
    private void calculateDisplayDetailsForCallerOperatingUnit(Query _query)
    {
        RetailAssortmentLookup localAssortmentlookUp;
        InventTable localInventTable;
        RetailChannelTable localChannelTable;
        RetailChannelItemPriceAgreement localPriceAgreement;
        SalesUnit salesUnit;
        InventDimCombination localInventDimCombination;
        RetailPriceDiscountLine priceDiscountLine;
        List priceDiscountLines;
        ListEnumerator priceDiscountLinesEnumerator;
        RefRecId channelRecId;
        QueryRun queryRun = new QueryRun(_query);

        TmpRetailPriceCheckProduct      tmpRetailPriceCheckProduct;
        RecordInsertList                listOfRetailPriceCheckProduct = new RecordInsertList(tableNum(TmpRetailPriceCheckProduct),
                                                                                             false, // skip insert
                                                                                             false, // skip database log
                                                                                             false, // skip events
                                                                                             false, // skip aos validation
                                                                                             false, // skip RLS validation
                                                                                             tmpRetailPriceCheckProduct);
        priceDiscountLines = new List(Types::Class);

        while(queryRun.next())
        {
            localAssortmentlookUp = queryRun.get(tableNum(RetailAssortmentLookup));
            localInventTable = queryRun.get(tableNum(InventTable));
            localChannelTable = queryRun.get(tableNum(RetailChannelTable));

            channelRecId = localChannelTable.RecId;

            localPriceAgreement = queryRun.get(tableNum(RetailChannelItemPriceAgreement));
            localInventDimCombination = queryRun.get(tableNum(InventDimCombination));

            salesUnit = InventTableModule::find(localInventTable.ItemId, ModuleInventPurchSales::Sales).UnitId;

            priceDiscountLine = new RetailPriceDiscountLine();
            priceDiscountLine.parmCatalogRefRecId(catalogTable.RecId);
            priceDiscountLine.parmChannelRefRecId(localChannelTable.RecId);
            priceDiscountLine.parmReferenceRecId(localAssortmentLookup.RecId);
            priceDiscountLine.parmInventDimId(localInventDimCombination.InventDimId);
            priceDiscountLine.parmItemId(localInventTable.ItemId);
            priceDiscountLine.parmQty(1);
            priceDiscountLine.parmSalesUnit(salesUnit);
            priceDiscountLines.addEnd(priceDiscountLine);

        }

        // Pricing engine call.
        RetailPricingCalculatorCreator::getInstance().createPriceCheck().calculateIndependentPriceDiscounts(channelRecId, priceDiscountLines);

        priceDiscountLinesEnumerator = priceDiscountLines.getEnumerator();

        // Populates discounts, active pirce and offers data.
        element.PopulatePriceDiscountsOfferIdInTempTable(priceDiscountLinesEnumerator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcDisplayDetailsForCallerInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the active price and discount amount when the form caller table is InventTable.
    /// </summary>
    /// <param name = "_query"> Query object that has to be iterated and prepare item data.</param>
    private void calcDisplayDetailsForCallerInventTable(Query _query)
    {
        RetailAssortmentLookup localAssortmentlookUp;
        InventTable localInventTable;
        RetailChannelTable localChannelTable;
        RetailChannelItemPriceAgreement localPriceAgreement;
        SalesUnit salesUnit;
        InventDimCombination localInventDimCombination;
        RetailPriceDiscountLine priceDiscountLine;
        List priceDiscountLines;
        ListEnumerator priceDiscountLinesEnumerator, priceDiscountLinesEnumeratorOffers;
        RefRecId channelRecId;
        QueryRun queryRun = new QueryRun(_query);

        TmpRetailPriceCheckProduct      tmpRetailPriceCheckProduct;
        RecordInsertList                listOfRetailPriceCheckProduct = new RecordInsertList(tableNum(TmpRetailPriceCheckProduct),
                                                                                             false, // skip insert
                                                                                             false, // skip database log
                                                                                             false, // skip events
                                                                                             false, // skip aos validation
                                                                                             false, // skip RLS validation
                                                                                             tmpRetailPriceCheckProduct);

        while(queryRun.next())
        {
            priceDiscountLines = new List(Types::Class);

            localAssortmentlookUp = queryRun.get(tableNum(RetailAssortmentLookup));
            localInventTable = queryRun.get(tableNum(InventTable));
            localChannelTable = queryRun.get(tableNum(RetailChannelTable));

            channelRecId = localChannelTable.RecId;

            localPriceAgreement = queryRun.get(tableNum(RetailChannelItemPriceAgreement));
            localInventDimCombination = queryRun.get(tableNum(InventDimCombination));

            salesUnit = InventTableModule::find(localInventTable.ItemId, ModuleInventPurchSales::Sales).UnitId;

            priceDiscountLine = new RetailPriceDiscountLine();
            priceDiscountLine.parmCatalogRefRecId(catalogTable.RecId);
            priceDiscountLine.parmChannelRefRecId(localChannelTable.RecId);
            priceDiscountLine.parmReferenceRecId(localAssortmentLookup.RecId);
            priceDiscountLine.parmInventDimId(localInventDimCombination.InventDimId);
            priceDiscountLine.parmItemId(localInventTable.ItemId);
            priceDiscountLine.parmQty(1);
            priceDiscountLine.parmSalesUnit(salesUnit);
            priceDiscountLines.addEnd(priceDiscountLine);

            // Pricing engine call.
            RetailPricingCalculatorCreator::getInstance().createPriceCheck().calculateIndependentPriceDiscounts(channelRecId, priceDiscountLines);

            priceDiscountLinesEnumerator = priceDiscountLines.getEnumerator();

            // Populates discounts, active pirce and offers data.
            element.PopulatePriceDiscountsOfferIdInTempTable(priceDiscountLinesEnumerator);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailAssortmentLookup</Name>
				<Methods>
					<Method>
						<Name>promotions</Name>
						<Source><![CDATA[
        public display Str60 promotions(RetailAssortmentLookup _retailAssortmentLookup)
        {
            return element.getOfferIds(_retailAssortmentLookup, queryValue(RetailDiscountOfferTypeBase::Promotion));
        }

]]></Source>
					</Method>
					<Method>
						<Name>discountOffers</Name>
						<Source><![CDATA[
        public display Str60 discountOffers(RetailAssortmentLookup _retailAssortmentLookup)
        {
            return element.getOfferIds(_retailAssortmentLookup, SysQuery::valueNot(RetailDiscountOfferTypeBase::Promotion));
        }

]]></Source>
					</Method>
					<Method>
						<Name>getDiscountAmount</Name>
						<Source><![CDATA[
        public display SalesLineDisc getDiscountAmount(RetailAssortmentLookup _assortmentLookup)
        {
            element.calculateDisplayDetails(_assortmentLookup);

            str key = element.getKeyForPriceList(_assortmentLookup);

            if (mapDiscountAmount.exists(key))
            {
                return mapDiscountAmount.lookup(key);
            }
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getActivePrice</Name>
						<Source><![CDATA[
        public display Price getActivePrice(RetailAssortmentLookup _retailAssortmentLookup)
        {
            element.calculateDisplayDetails(_retailAssortmentLookup);

            str key = element.getKeyForPriceList(_retailAssortmentLookup);

            if (mapActivePrice.exists(key))
            {
                return mapActivePrice.lookup(key);
            }
            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getPrice</Name>
						<Source><![CDATA[
        public display Price getPrice(RetailAssortmentLookup _retailAssortmentLookup)
        {
            RetailChannelTable              localChannelTable;
            InventTableModule               localInventTableModule;
            RetailChannelItemPriceAgreement localChannelItemPriceAgreement;
            InventTable                     localInventTable;

            localChannelTable = _retailAssortmentLookup.joinChild().joinChild();
            localInventTable = localChannelTable.joinChild();

            switch (formTableId)
            {
                case tableNum(InventTable):
                case tableNum(OMOperatingUnit):
                    localInventTableModule = localInventTable.joinChild().joinChild().joinChild().joinChild();
                    break;
                case tableNum(Catalog):
                    localInventTableModule = localInventTable.joinChild().joinChild().joinChild().joinChild().joinChild();
                    break;
            }

            localChannelItemPriceAgreement = localInventTableModule.joinChild();

            return localChannelItemPriceAgreement.Amount ? localChannelItemPriceAgreement.Amount : localInventTableModule.Price;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            Query generatedQuery;
            element.setTradeAgreementDateRange();

            super();

            if (!dataGenerated || isChannelComboModified)
            {
                generatedQuery = this.query();

                switch (formTableId)
                {
                    case tableNum(InventTable):
                        element.calcDisplayDetailsForCallerInventTable(generatedQuery);
                        break;
                    case tableNum(OMOperatingUnit):
                        element.calculateDisplayDetailsForCallerOperatingUnit(generatedQuery);
                        break;
                    case tableNum(Catalog):
                        OMOperatingUnit operatingUnitLocal;
                        RetailChannelTable retailChannelTableLocal;
                        TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValuesLocal;

                        tmpRetailPriceListDisplayValuesLocal.linkPhysicalTableInstance(tmpRetailPriceListDisplayValues);

                        select firstonly tmpRetailPriceListDisplayValuesLocal
                            exists join retailChannelTableLocal
                            where retailChannelTableLocal.RecId == tmpRetailPriceListDisplayValuesLocal.ChannelRecId
                                exists join operatingUnitLocal
                                where operatingUnitLocal.RecId == retailChannelTableLocal.OMOperatingUnitID
                                &&    operatingUnitLocal.Name == channelCombo.valueStr();

                        if (!tmpRetailPriceListDisplayValuesLocal.RecId)
                        {
                            element.calculateDisplayDetailsForCallerOperatingUnit(generatedQuery);
                        }

                        break;
                }

                dataGenerated = true;
                isChannelComboModified = false;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>getActivePriceDisp</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets active price of an item.
        /// </summary>
        /// <param name = "_assortmentLookup">RetailAssortmentLookup table buffer.</param>
        /// <returns> Active price.</returns>
        public display Price getActivePriceDisp(RetailAssortmentLookup _assortmentLookup)
        {
            TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValuesLocal;
            InventTable                     localInventTable;
            RetailChannelTable              localChannelTable;

            localChannelTable = element.getChannelTable(_assortmentLookup);
            localInventTable = localChannelTable.joinChild();

            tmpRetailPriceListDisplayValuesLocal.linkPhysicalTableInstance(tmpRetailPriceListDisplayValues);

            select firstonly tmpRetailPriceListDisplayValuesLocal
                where tmpRetailPriceListDisplayValuesLocal.itemId == localInventTable.itemId 
                &&  tmpRetailPriceListDisplayValuesLocal.ChannelRecId == localChannelTable.RecId
                &&  tmpRetailPriceListDisplayValuesLocal.AssortmentRecId == _assortmentLookup.RecId;

            return tmpRetailPriceListDisplayValuesLocal.ActivePrice;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getPromotionsDisp</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets Price adjustments for an item.
        /// </summary>
        /// <param name = "_assortmentLookup">RetailAssortmentLookup table buffer.</param>
        /// <returns> Price adjustments.</returns>
        public display str getPromotionsDisp(RetailAssortmentLookup _assortmentLookup)
        {
            TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValuesLocal;
            InventTable                     localInventTable;
            RetailChannelTable              localChannelTable;

            localChannelTable = element.getChannelTable(_assortmentLookup);
            localInventTable = localChannelTable.joinChild();

            tmpRetailPriceListDisplayValuesLocal.linkPhysicalTableInstance(tmpRetailPriceListDisplayValues);

            select firstonly tmpRetailPriceListDisplayValuesLocal
                where tmpRetailPriceListDisplayValuesLocal.itemId == localInventTable.itemId
                &&  tmpRetailPriceListDisplayValuesLocal.ChannelRecId == localChannelTable.RecId
                &&  tmpRetailPriceListDisplayValuesLocal.AssortmentRecId == _assortmentLookup.RecId;

            return tmpRetailPriceListDisplayValuesLocal.Promotions;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getDiscountsDisp</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets discounts for an item.
        /// </summary>
        /// <param name = "_assortmentLookup">RetailAssortmentLookup table buffer.</param>
        /// <returns> Discounts.</returns>
        public display str getDiscountsDisp(RetailAssortmentLookup _assortmentLookup)
        {
            TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValuesLocal;
            InventTable                     localInventTable;
            RetailChannelTable              localChannelTable;

            localChannelTable = element.getChannelTable(_assortmentLookup);
            localInventTable = localChannelTable.joinChild();

            tmpRetailPriceListDisplayValuesLocal.linkPhysicalTableInstance(tmpRetailPriceListDisplayValues);

            select firstonly tmpRetailPriceListDisplayValuesLocal
                where tmpRetailPriceListDisplayValuesLocal.itemId == localInventTable.itemId
                &&  tmpRetailPriceListDisplayValuesLocal.ChannelRecId == localChannelTable.RecId
                &&  tmpRetailPriceListDisplayValuesLocal.AssortmentRecId == _assortmentLookup.RecId;

            return tmpRetailPriceListDisplayValuesLocal.DiscountOffers;
        }

]]></Source>
					</Method>
					<Method>
						<Name>getCalcDiscDisp</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets Calculated discount for an item.
        /// </summary>
        /// <param name = "_assortmentLookup">RetailAssortmentLookup table buffer.</param>
        /// <returns> Calculated discount.</returns>
        public display Price getCalcDiscDisp(RetailAssortmentLookup _assortmentLookup)
        {
            TmpRetailPriceListDisplayValues tmpRetailPriceListDisplayValuesLocal;
            InventTable                     localInventTable;
            RetailChannelTable              localChannelTable;

            localChannelTable = element.getChannelTable(_assortmentLookup);
            localInventTable = localChannelTable.joinChild();

            tmpRetailPriceListDisplayValuesLocal.linkPhysicalTableInstance(tmpRetailPriceListDisplayValues);

            select firstonly tmpRetailPriceListDisplayValuesLocal
                where tmpRetailPriceListDisplayValuesLocal.itemId == localInventTable.itemId
                &&  tmpRetailPriceListDisplayValuesLocal.ChannelRecId == localChannelTable.RecId
                &&  tmpRetailPriceListDisplayValuesLocal.AssortmentRecId == _assortmentLookup.RecId;

            return tmpRetailPriceListDisplayValuesLocal.CalculatedDiscount;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTblMod</Name>
				<Methods>
					<Method>
						<Name>getPrice</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the item's base price.
        /// </summary>
        public display Price getPrice(InventTableModule _inventTableModule)
        {
            RetailChannelItemPriceAgreement localChannelItemPriceAgreement;
    
            if (tableNum(RetailChannelItemPriceAgreement) == _inventTableModule.joinChild().tableId)
            {
                localChannelItemPriceAgreement = _inventTableModule.joinChild();
            }
    
            return localChannelItemPriceAgreement.Amount ? localChannelItemPriceAgreement.Amount : _inventTableModule.Price;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ActiveDateEdit</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// When ActiveDateEdit control has changed date, this method will be executed.
        /// </summary>
        /// <returns>
        /// Returns True or False
        /// </returns>
        /// <remarks>
        /// When ActiveDateEdit control has changed date, this method will be executed.
        /// </remarks>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            // when date is changed, update the activeDate variable and re-run the form's query
            activeDate = this.dateValue();

            delete_from tmpRetailPriceListDisplayValues;
            dataGenerated = false; // data must be generated for new date.

            element.setRetailCatalogChannelCollapsedDateRange();
            retailAssortmentLookup_ds.executeQuery();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>channelCombo</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            oMOperatingUnit_ds.queryBuildDataSource().clearRanges();
            oMOperatingUnit_ds.queryBuildDataSource()
                .addRange(fieldNum(OMOperatingUnit, Name))
                .value(channelCombo.valueStr());

            // Enabling this flag will calculate all display values in executeQuery().
            isChannelComboModified = true;

            retailAssortmentLookup_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceQuery>RetailStorelItemPriceList</DataSourceQuery>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailAssortmentLookup</Name>
			<Table>RetailAssortmentLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssortmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RIDimC</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>ALKPCG</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Channel</Name>
			<Table>RetailChannelTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashOffice_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelTimeZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelTimeZoneInfoId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCustDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EventNotificationProfileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventLocationDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceIncludesSalesTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StoreArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionServiceProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayTaxPerTaxComponent</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>ChanneIItemPriceAgr</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>OMOperatingUnit</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RCatChannelCol</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RIDimC</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>ALKPCG</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>Channel_RetailStoreTable</Name>
					<Table>RetailStoreTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>closingMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createLabelsForZeroPrice</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>cultureName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DatabaseName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>functionalityProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>generatesItemLabels</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>generatesShelfLabels</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>hideTrainingMode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>InventLocationIdForCustomerOrder</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>inventoryLookup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>itemIdOnReceipt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maximumPostingDifference</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maximumTextLengthOnReceipt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxRoundingAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxRoundingTaxAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxShiftDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxTransactionDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>numberOfTopOrBottomLines</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>OfflineProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>oneStatementPerDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>openFrom</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>openTo</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PackedExtensions</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Password</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>phone</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>poItemFilter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>removeAddTender</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>replicationCounter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailReqPlanIdSched</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReturnTaxGroup_W</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RoundingAccountLedgerDimension</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>roundingTaxAccount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>separateStmtPerStaffTerminal</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>serviceChargePct</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>serviceChargePrompt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SQLServerName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>statementMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>stmtCalcBatchEndTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>stmtPostAsBusinessDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StoreNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>taxGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxGroupDataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxIdentificationNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxOverrideGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>tenderDeclarationCalculation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseCustomerBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseDefaultCustAccount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseDestinationBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UserName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EFTStoreNumber</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>Channel_RetailOnlineChannelTable</Name>
					<Table>RetailOnlineChannelTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>OnlineCatalogName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>Channel_RetailMCRChannelTable</Name>
					<Table>RetailMCRChannelTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>MCRCustomerCreditRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableDirectedSelling</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableOrderCompletion</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableOrderPriceControl</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCRPriceOverrideRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCRReasonCodeRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Invent</Name>
			<Table>InventTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ABCContributionMargin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCRevenue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCTieUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholManufacturerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholProductionTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholStrength_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproxTaxValue_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroupId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoReportFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchMergeDateCalculationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMCalcGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMManualReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsExportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsImportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Density</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Depth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPCManager</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EximProductGroupTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFOAvoidCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValueCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossDepth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossHeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossWidth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSOnService_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Intracode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatExclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatProcId_CZ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventFiscalLIFOGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProductType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemDimCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemPriceToleranceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTaggingLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NRTaxGroup_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackagingGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Packing_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSBaseAttributeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBestBefore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSMinimumPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSQtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSStandardPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAllocationGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSPotencyAttribRecording</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfAdvice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfLife</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSTargetFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendorCheckItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phantom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfPlanningItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfProductType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryVendorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdFlushingPrincip</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>projCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>qtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SADRateCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesContributionRatio</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPercentMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPriceModelBasic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapConst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapVar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SerialNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipIntraCompanySync_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>standardPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaraWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationOrigin_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxFiscalClassification_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPackagingQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitVolume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSArrivalHandlingTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPalletTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPickingQtyTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DSA_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>ChanneIItemPriceAgr</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>InventTblMod</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>ProductTrans</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RetailAssortmentLookup</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RIDimC</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>PPV</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProductTrans</Name>
			<Table>EcoResProductTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTblMod</Name>
			<Table>InventTableModule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllocateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Markup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSPricingPrecision</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnderDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGSTReliefCategory_MY</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>ChanneIItemPriceAgr</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ChanneIItemPriceAgr</Name>
			<Table>RetailChannelItemPriceAgreement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>InventTblMod</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>OMOperatingUnit</Name>
			<Table>OMOperatingUnit</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DunsNumberRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HcmWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KnownAs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrganizationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryAddressLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactTelex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactURL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RCatChannelCol</Name>
			<Table>RetailCatalogChannelCollapsed</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogInternalOrg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Channel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Distance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Catalog</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Catalog</Name>
			<Table>Catalog</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnableSnapshot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Owner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFromDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>RCatChannelCol</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RIDimC</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RetailAssortmentLookup</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ALKPCG</Name>
			<Table>RetailAssortmentLookupChannelGroup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssortmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannelTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Channel</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RetailAssortmentLookup</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PPV</Name>
			<Table>RetailProductParentView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>Invent</Name>
				</AxFormDataSourceRootLink>
				<AxFormDataSourceRootLink>
					<Name>RCP</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RCP</Name>
			<Table>CatalogProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseHierarchy</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks>
				<AxFormDataSourceRootLink>
					<Name>PPV</Name>
				</AxFormDataSourceRootLink>
			</DataSourceLinks>
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS8983</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Details</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>RetailAssortmentExploded_ItemId</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ActiveDateEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ValidFromDate</ExtendedDataType>
								<Label>@SYS134388</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>channelCombo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@RET490298</Label>
								<Items />
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
						<BottomMargin>10</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<LeftMargin>10</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<TopMargin>10</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
						<Style>CustomFilter</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailAssortmentExploded_ItemId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>357913940</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemId</DataField>
						<DataSource>Invent</DataSource>
						<Label>@SYS133863</Label>
						<LookupButton>Never</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResProductTranslation_Name</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>ProductTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>OMOperatingUnit_OMOperatingUnitNumber</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>894784850</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>OMOperatingUnitNumber</DataField>
						<DataSource>OMOperatingUnit</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailChannelTable_Currency</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Currency</DataField>
						<DataSource>Channel</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PriceGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Price</Name>
								<ElementPosition>1252698790</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>getPrice</DataMethod>
								<DataSource>InventTblMod</DataSource>
								<FormatMST>Yes</FormatMST>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataSource>InventTblMod</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Promotions</Name>
						<ElementPosition>1431655760</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getPromotionsDisp</DataMethod>
						<DataSource>RetailAssortmentLookup</DataSource>
						<Label>@RET3794</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DiscountOffers</Name>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getDiscountsDisp</DataMethod>
						<DataSource>RetailAssortmentLookup</DataSource>
						<Label>@RET3313</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>getActivePrice</Name>
						<ElementPosition>1789569702</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getActivePriceDisp</DataMethod>
						<DataSource>RetailAssortmentLookup</DataSource>
						<Label>@REX4040113</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>calculatedDiscAmt</Name>
						<ElementPosition>1968526674</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getCalcDiscDisp</DataMethod>
						<DataSource>RetailAssortmentLookup</DataSource>
						<Label>@REX4040112</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>RetailAssortmentLookup</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>