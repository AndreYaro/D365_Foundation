<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendWriteOffFinancialReasonsSetup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendWriteOffFinancialReasonsSetup extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        FormRun callingForm = element.args().caller() as FormRun;

        if (callingForm)
        {
            callingForm.doRefresh();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>VendWriteOffFinancialReasonsSetup</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            vendWriteOffFinancialReasonsSetup.Company = curExt();
            vendWriteOffFinancialReasonsSetup_WriteOffLedgerDimension.setDataAreaId(vendWriteOffFinancialReasonsSetup.Company,  true);

            if (!VendWriteOffFinancialReasonsSetup::findDefaultWriteOffReasonByCompany())
            {
                vendWriteOffFinancialReasonsSetup.IsDefault = NoYes::Yes;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                vendWriteOffFinancialReasonsSetup_WriteOffLedgerDimension.setDataAreaId(vendWriteOffFinancialReasonsSetup.Company,  true);

                if (!VendWriteOffFinancialReasonsSetup::findDefaultWriteOffReasonByCompany(vendWriteOffFinancialReasonsSetup.Company))
                {
                    vendWriteOffFinancialReasonsSetup.IsDefault = NoYes::Yes;
                }
                else
                {
                    vendWriteOffFinancialReasonsSetup.IsDefault = NoYes::No;
                }

                // If the reason code matches across companies, go find the equivalent values from the new company.
                // If not, then remove the values.
                ReasonTable reasonTable;

                changecompany (vendWriteOffFinancialReasonsSetup.getCompany())
                {
                    select firstonly reasonTable
                        where reasonTable.Cust == NoYes::Yes &&
                            reasonTable.Reason == vendWriteOffFinancialReasonsSetup.Reason;
                }
                if (reasonTable.RecId)
                {
                    vendWriteOffFinancialReasonsSetup.Reason = reasonTable.Reason;
                    vendWriteOffFinancialReasonsSetup.Description = reasonTable.Description;
                }
                else
                {
                    vendWriteOffFinancialReasonsSetup.Reason = '';
                    vendWriteOffFinancialReasonsSetup.Description = '';
                }

                vendWriteOffFinancialReasonsSetup.WriteOffLedgerDimension = 0;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Reason</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// This lookup filters the write-off reason codes to vendor reason codes.
            /// </summary>
            /// <param name = "_formControl">The control on which to perform the lookup</param>
            /// <param name = "_filterStr">Filter string value</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ReasonTable), _formControl);

                Query query = new Query();
                query.allowCrossCompany(true);
                query.addCompanyRange(vendWriteOffFinancialReasonsSetup.getCompany());

                QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(ReasonTable));

                sysTableLookup.addLookupfield(fieldNum(ReasonTable, Reason));
                sysTableLookup.addLookupfield(fieldNum(ReasonTable, Description));

                queryBuildDataSource.addRange(fieldNum(ReasonTable, Vend)).value(enum2Str(NoYes::Yes));
                queryBuildDataSource.addRange(fieldNum(ReasonTable, Reason)).value(_filterStr);

                sysTableLookup.parmQuery(query);

                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WriteOffLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                changecompany (vendWriteOffFinancialReasonsSetup.getCompany())
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>VendWriteOffFinancialReasonsSetup_IsDefault</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            if (VendWriteOffFinancialReasonsSetup_IsDefault.checked())
            {
                if (vendWriteOffFinancialReasonsSetup.canBeMarkedAsDefault())
                {
                    ret = super();
                }
                else
                {
                    ret = false;
                    checkFailed("@AccountsPayable:DefaultReasonCodeExists");
                }
            }
            else
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>VendWriteOffFinancialReasonsSetup</Name>
			<Table>VendWriteOffFinancialReasonsSetup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffLedgerDimension</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@AccountsPayable:VendorWriteOffReasonCodeSetup</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>WriteOffGridSetup</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>WriteOffGridSetup</Name>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendWriteOffFinancialReasonsSetup_Company</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Company</DataField>
						<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendWriteOffFinancialReasonsSetup_Reason</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Reason</DataField>
						<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendWriteOffFinancialReasonsSetup_Description</Name>
						<AllowEdit>No</AllowEdit>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormSegmentedEntryControl">
						<Name>VendWriteOffFinancialReasonsSetup_WriteOffLedgerDimension</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>SegmentedEntry</Type>
						<FormControlExtension>
							<Name>SegmentedEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>String</Type>
									<Value>LedgerDimensionDefaultAccountController</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccountTypeEnumName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIsDefaultAccount</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValidateBlockedForManualEntry</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLockMainAccountSegment</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPostingType</Name>
									<Type>Enum</Type>
									<TypeName>LedgerPostingType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeTotalAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeFinancialAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
						<Mandatory>Yes</Mandatory>
						<ReferenceField>WriteOffLedgerDimension</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>VendWriteOffFinancialReasonsSetup_IsDefault</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>IsDefault</DataField>
						<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>VendWriteOffFinancialReasonsSetup</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>