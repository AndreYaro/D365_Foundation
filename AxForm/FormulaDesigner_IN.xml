<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>FormulaDesigner_IN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* PostR1AXLTODO: (Code Upgrade) Group control MisCharges had LeftMode property set to AutoRight. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
/* PostR1AXLTODO: (Code Upgrade) Group control CtrlSplitVertical had LeftMode property set to Center. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
/* PostR1AXLTODO: (Code Upgrade) Group control CalculationGroup had LeftMode property set to Center. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
/* PostR1AXLTODO: (Code Upgrade) Group control ButtonGroup had LeftMode property set to LeftEdge. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
    [Form]
    public class FormulaDesigner_IN extends FormRun
    {
        int                handle;
        int                handleDel;
        int                idValueOfExpressionEdit;
        int                idValue;
        str                dExpression;
        TmpTaxWorkTrans    tmpTaxWorkTrans;
        TaxItemGroup       taxItemGroup;
        #Operator_IN
        boolean            deleteRecord;
        int                newIdValue;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        if (!this.checkCalcExpression())
        {
           ret = checkFailed("@GLS5284");
        }
        else
        {
            ret = super();
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCalcExpression</Name>
				<Source><![CDATA[
    public boolean checkCalcExpression()
    {
        boolean ret;
        str last;

        last = substr(formulaDesigner_IN.CalcExp, strlen(formulaDesigner_IN.CalcExp), 1);
        if (last == num2char(#fourTwo) || last == num2char(#fourthree) || last == num2char(#fourfive) || last == num2char(#fourseven))
        {
            ret = false;
        }
        else
        {
            ret =  true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEmptyRecord</Name>
				<Source><![CDATA[
    public void checkEmptyRecord()
    {
        RefRecId recId;

        recId = FormulaDesigner_IN::findByTaxItemGroup(taxOnItem.TaxItemGroup).RecId;
        if (!FormulaDesigner_IN::exist(recId))
        {
            throw error("@SYS4205");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLeaveRecord</Name>
				<Source><![CDATA[
    public boolean checkLeaveRecord()
    {
        boolean ret = true;

        if (FormulaDesigner_IN::findByTaxCode(formulaDesigner_IN.TaxItemGroup,formulaDesigner_IN.TaxCode))
        {
            if (!element.checkCalcExpression())
            {
                ret = false;
            }
            else
            {
                ret = true;
            }
            //keep the id the current record since user may continue editing the record expression.
            idValueOfExpressionEdit = formulaDesigner_IN.ID;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriorRecord</Name>
				<Source><![CDATA[
    public int checkPriorRecord()
    {
        int checkStatus = 0;

        if (FormulaDesigner_IN::findByTaxCode(taxOnItem.TaxItemGroup,taxTable.TaxCode).id < formulaDesigner_IN.id && FormulaDesigner_IN::findByTaxCode(taxOnItem.TaxItemGroup,taxTable.TaxCode).id > 0)
        {
            checkStatus = 1;
        }
        return checkStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRecord</Name>
				<Source><![CDATA[
    public void deleteRecord()
    {
        FormulaDesigner_IN  formulaDesignerLoc;

        if (formulaDesigner_IN.id == 0)
        {
            element.checkEmptyRecord();
        }

        ttsbegin;
        formulaDesignerLoc = FormulaDesigner_IN::findByTaxItemGroup(formulaDesigner_IN.TaxItemGroup);
        if (!formulaDesignerLoc.TaxCode)
        {
            FormulaDesigner_IN::deleteFormulaDesignerItemLines(newIdValue, formulaDesignerLoc.TaxItemGroup, formulaDesigner_IN);
            formulaDesigner_IN_ds.executeQuery();
            formulaDesigner_IN_ds.refresh();
        }
        else
        {
            if (FormulaDesigner_IN::findCountTaxLines(formulaDesigner_IN.TaxItemGroup, formulaDesigner_IN.TaxCode, formulaDesigner_IN.id) == 1)
            {
                element.updatevalue();
                formulaDesigner_IN_ds.allowEdit(true);
                formulaDesigner_IN_ds.allowCreate(true);
            }
            else
            {
                FormulaDesigner_IN::deleteFormulaDesignerItemLines(newIdValue, formulaDesignerLoc.TaxItemGroup, formulaDesigner_IN);
                formulaDesigner_IN_ds.executeQuery();
                formulaDesigner_IN_ds.refresh();
            }
        }
        ttscommit;
        element.enableDisableButtons(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableMRP</Name>
				<Source><![CDATA[
    public void disableMRP()
    {
        if (formulaDesigner_IN.TaxableBasis == TaxableBasis_IN::MRP)
        {
            formulaDesigner_IN.PriceInclTax = NoYes::Yes;
        }
        else
        {
            formulaDesigner_IN.PriceInclTax = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDataSource</Name>
				<Source><![CDATA[
    public void enableDataSource()
    {
        if (!element.checkCalcExpression())
        {
            formulaDesigner_IN_ds.allowEdit(false);
            formulaDesigner_IN_ds.allowCreate(false);
        }
        else
        {
            formulaDesigner_IN_ds.allowEdit(true);
            formulaDesigner_IN_ds.allowCreate(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableButtons</Name>
				<Source><![CDATA[
    public void enableDisableButtons(boolean _status)
    {
        add.enabled(_status);
        sub.enabled(_status);
        multiply.enabled(_status);
        divide.enabled(_status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterTaxType</Name>
				<Source><![CDATA[
    public Query filterTaxType()
    {
        Query                   query = new Query();
        QueryBuildDataSource    qdb;
        QueryBuildDataSource    queryBuildDataSource2;
        DictRelation            dictRelation;
        QueryBuildRange         queryBuildRange;

        if (element.args().dataset() == tablenum(TmpTaxWorkTrans))
        {
            tmpTaxWorkTrans = element.args().record();
            taxItemGroup    = tmpTaxWorkTrans.TaxItemGroup;
        }
        else
        {
            taxItemGroup = taxOnItem.TaxItemGroup;
        }

        qdb = query.addDataSource(tablenum(TaxTable));
        qdb.joinMode(JoinMode::InnerJoin);
        queryBuildDataSource2   = qdb.addDataSource(tablenum(TaxOnItem));
        queryBuildDataSource2.joinMode(JoinMode::InnerJoin);
        dictRelation            = new DictRelation(tablenum(TaxOnItem));
        dictRelation.loadFieldRelation(fieldnum(TaxOnItem,TaxCode));
        queryBuildDataSource2.addRelation(dictRelation);
        queryBuildRange         = queryBuildDataSource2.addRange(fieldnum(TaxOnItem, TaxItemGroup));
        queryBuildRange.value(taxItemGroup);
        queryBuildRange         = qdb.addRange(fieldnum(TaxTable,TaxType_IN));
        queryBuildRange.value(enum2str(TaxType_IN::Customs));
        queryBuildRange         = qdb.addRange(fieldnum(TaxTable,TaxType_IN));
        queryBuildRange.value(enum2str(TaxType_IN::Excise));
        queryBuildRange         = qdb.addRange(fieldnum(TaxTable,TaxType_IN));
        queryBuildRange.value(enum2str(TaxType_IN::SalesTax));
        queryBuildRange         = qdb.addRange(fieldnum(TaxTable,TaxType_IN));
        queryBuildRange.value(enum2str(TaxType_IN::ServiceTax));
        queryBuildRange         = qdb.addRange(fieldnum(TaxTable,TaxType_IN));
        queryBuildRange.value(enum2str(TaxType_IN::VAT));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalString</Name>
				<Source><![CDATA[
    public str finalString(str _par)
    {
        str finalString;

        if (_par == num2char(#fourTwo) || _par == num2char(#fourthree) || _par == num2char(#fourfive) || _par == num2char(#fourseven))
        {
            finalString = formulaDesigner_IN.CalcExp + _par;
        }
        else
        {
            finalString = formulaDesigner_IN.CalcExp + num2char(#nintyOne) + _par + num2char(#nintyThree) ;
        }
        return finalString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalStringDummy</Name>
				<Source><![CDATA[
    public str finalStringDummy(str _par, Common _source = null)
    {
        str finalString;

        if (_par == num2char(#fourTwo) || _par == num2char(#fourthree) || _par == num2char(#fourfive) || _par == num2char(#fourseven))
        {
            finalString = formulaDesigner_IN.CalcExp1 + _par;
        }
        else
        {
            if (_source is TaxTable)
            {
                finalString = formulaDesigner_IN.CalcExp1 + num2char(164) + _par + num2char(164);
            }
            else if (_source is MarkupTable)
            {
                if (markupTable.ModuleType == MarkupModuleType::Vend)
                {
                    finalString = formulaDesigner_IN.CalcExp1 + num2char(240) + _par + num2char(240);
                }
                else
                if (markupTable.ModuleType == MarkupModuleType::Cust)
                {
                    finalString = formulaDesigner_IN.CalcExp1 + num2char(356) + _par + num2char(356);
                }
            }
        }
        return finalString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Query                   query = new Query();
        QueryBuildDataSource    qdb;
        QueryBuildRange         queryBuildRange;

        super();
        if (element.args().dataset() == tablenum(TmpTaxWorkTrans))
        {
            tmpTaxWorkTrans = element.args().record();
            taxItemGroup = tmpTaxWorkTrans.TaxItemGroup;

            if (taxItemGroup != "")
            {
                qdb = query.addDataSource(tablenum(FormulaDesigner_IN));
                queryBuildRange = qdb.addRange(fieldnum(FormulaDesigner_IN, TaxItemGroup));
                queryBuildRange.value(taxItemGroup);
                formulaDesigner_IN_Ds.query(query);
            }

            formulaDesigner_IN_ds.allowCreate(false);
            formulaDesigner_IN_ds.allowDelete(false);
            formulaDesigner_IN_ds.allowEdit(false);
            element.enableDisableButtons(false);
            clear.enabled(false);
            delete.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalcExpression</Name>
				<Source><![CDATA[
    public void setCalcExpression(str _par, Common _source = null)
    {
        int        lenStr;
        str        intLastChar;
        str        finalLastChar;
        str        finalString;
        str        finalStringDummy;
        boolean    checkStatus;
        boolean    checkExp = true;

        element.checkEmptyRecord();
        if (TaxTable::find(formulaDesigner_IN.TaxCode).TaxBase != TaxBaseType::AmountByUnit)
        {
            lenStr = strlen(formulaDesigner_IN.CalcExp);
            if (lenStr == 0 && (_par == num2char(#fourTwo) || _par == num2char(#fourthree) || _par == num2char(#fourfive) || _par == num2char(#fourseven)))
            {
                formulaDesigner_IN.CalcExp = _par;
                formulaDesigner_IN.CalcExp1 = _par;
                checkExp = false;
            }
            else
            {
                intLastChar     = substr(formulaDesigner_IN.CalcExp,lenStr,lenStr);
                finalString     = element.finalString(_par);
                finalStringDummy = element.finalStringDummy(_par, _source);
                finalLastChar   = substr(finalString,strlen(finalString),strlen(finalString));
                checkStatus     = (intLastChar != num2char(#fourTwo) && intLastChar != num2char(#fourthree) && intLastChar != num2char(#fourfive) && intLastChar != num2char(#fourseven));
                if ((intLastChar != finalLastChar) && ((finalLastChar != num2char(#fourTwo) && finalLastChar != num2char(#fourthree) && finalLastChar != num2char(#fourfive) && finalLastChar != num2char(#fourseven)) || (checkStatus)))
                {
                    formulaDesigner_IN.CalcExp = finalString;
                    formulaDesigner_IN.CalcExp1= finalStringDummy;
                    checkExp = false;
                }
            }
            if (checkExp)
            {
                throw error("@GLS5284");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(boolean _ret)
    {
        if (element.args().dataset() != tablenum(TmpTaxWorkTrans))
        {
            if (formulaDesigner_IN.RecId != 0 )
            {
                // if not focus on a record with expression editing
                if (idValueOfExpressionEdit != formulaDesigner_IN.id)
                {
                    if (formulaDesigner_IN.CalcExp == grid_CalcExp.valueStr() && element.checkCalcExpression())
                    {
                        element.enableDisableButtons(false);
                    }
                }
            }
            else
            {
                element.enableDisableButtons(true);
                element.enableDataSource();
            }

            if (_ret)
            {
                if (formulaDesigner_IN.id == 0)
                {
                    formulaDesigner_IN.id = idValue;
                }
            }
        }
        else
        {
            clear.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatevalue</Name>
				<Source><![CDATA[
    public void updatevalue()
    {
        element.checkEmptyRecord();
        if (formulaDesigner_IN.resetTaxPriority())
        {
            info("@GLS5282");
        }
        select formulaDesigner_IN
            where formulaDesigner_IN.TaxItemGroup == formulaDesigner_IN.TaxItemGroup;

        formulaDesigner_IN_Ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAndSetMarkupCode</Name>
				<Source><![CDATA[
    public void validateAndSetMarkupCode()
    {
        if (element.validateSyntax(markupTable.MarkupCode))
        {
            throw error("@GLS5284");
        }
        if (formulaDesigner_IN.CalcExp != "" && markupTable.MarkupCode != "")
        {
            element.setCalcExpression(markupTable.MarkupCode, markupTable);
        }
        element.enableDataSource();
        grid.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAndSetTaxCode</Name>
				<Source><![CDATA[
    public void validateAndSetTaxCode()
    {
        if (element.validateSyntax(taxTable.TaxCode))
        {
            throw error("@GLS5284");
        }
        if (formulaDesigner_IN.id != 1 &&  formulaDesigner_IN.CalcExp != "" && element.checkPriorRecord())
        {
            element.setCalcExpression(taxTable.TaxCode, taxTable);
        }
        element.enableDataSource();
        grid.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSyntax</Name>
				<Source><![CDATA[
    public int validateSyntax(str _par)
    {
        int checkStatus = 1;
        str intLastChar;
        str finalString;
        str finalLastChar;

        element.checkEmptyRecord();
        intLastChar     = substr(formulaDesigner_IN.CalcExp,strlen(formulaDesigner_IN.CalcExp),strlen(formulaDesigner_IN.CalcExp));
        finalString     = element.finalString(_par);
        finalLastChar   = substr(finalString,strlen(finalString),strlen(finalString));
        if (intLastChar != finalLastChar && strlen(formulaDesigner_IN.CalcExp))
        {
            checkStatus = 0;
        }
        return checkStatus;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>FormulaDesigner_IN</Name>
				<Methods>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret;

            ret = super(_forceUpdate);

            if (ret)
            {
                handleDel = 0;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            if (formulaDesigner_IN.TaxCode)
            {
                ret = element.checkLeaveRecord();
            }
            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            formulaDesigner_IN.id = FormulaDesigner_IN::getMaxIdValue(taxOnItem.TaxItemGroup);
            newIdValue = formulaDesigner_IN.id;
            //keep the id the current record since user may continue editing the record expression.
            idValueOfExpressionEdit = newIdValue;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(ret);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TaxableBasis</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.disableMRP();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup        sysTableLookup;

                if (taxOnItem.TaxItemGroup != "")
                {
                    sysTableLookup = SysTableLookup::newParameters(tablenum(TaxTable), _formControl);
                    sysTableLookup.addLookupfield(fieldnum(TaxTable, TaxCode));
                    sysTableLookup.addLookupfield(fieldnum(TaxTable, TaxName));
                    sysTableLookup.parmQuery(element.filterTaxType());
                    sysTableLookup.performFormLookup();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxOnItem</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            taxOnItem.data(element.args().record());

            formulaDesigner_IN.TaxItemGroup = taxOnItem.TaxItemGroup;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>MarkupTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(tableNum(MarkupTable)).clearDynalinks();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TaxTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (taxOnItem.TaxItemGroup != "")
            {
                this.query(element.filterTaxType());
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>MarkupTable_IN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(tableNum(MarkupTable_IN)).addRange(
                fieldNum(MarkupTable_IN, AllowTax)).value(queryValue(NoYes::Yes));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Add</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.setCalcExpression(add.text());
            element.enableDataSource();
            Clear.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Sub</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.setCalcExpression(sub.text());
            element.enableDataSource();
            Clear.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Multiply</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.setCalcExpression(multiply.text());
            element.enableDataSource();
            Clear.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Divide</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.setCalcExpression(divide.text());
            element.enableDataSource();
            Clear.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Clear</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.checkEmptyRecord();
            if (strlen(formulaDesigner_IN.CalcExp)==1)
            {
                formulaDesigner_IN.CalcExp = '';
                formulaDesigner_IN.CalcExp1 = '';

                formulaDesigner_IN_ds.reread();
                formulaDesigner_IN_ds.refresh();
            }
            else
            {
                formulaDesigner_IN.CalcExp = '';
                formulaDesigner_IN.CalcExp1 = '';
                formulaDesigner_IN_ds.refresh();
            }

            //keep the id the current record since user may continue editing the record expression.
            idValueOfExpressionEdit = formulaDesigner_IN.ID;
            element.enableDisableButtons(true);
            element.enableDataSource();
        }

]]></Source>
					</Method>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            handleDel = 0;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Delete</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            FormulaDesigner_IN::deleteFormulaDesignerItemLines(formulaDesigner_IN.id, formulaDesigner_IN.TaxItemGroup, formulaDesigner_IN);
            formulaDesigner_IN_ds.executeQuery();
            formulaDesigner_IN_ds.refresh();
         
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxAddButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (formulaDesigner_IN.id != 1 &&  formulaDesigner_IN.CalcExp != "" && element.checkPriorRecord())
            {
                element.setCalcExpression(taxTable.TaxCode, taxTable);
                element.enableDataSource();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTable_TaxCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();

            clear.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MisChargeAddButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (formulaDesigner_IN.CalcExp != "" && markupTable.MarkupCode != "")
            {
                element.setCalcExpression(markupTable.MarkupCode, markupTable);
                element.enableDataSource();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MarkupTable_MarkupCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();

            clear.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>FormulaDesigner_IN</Name>
			<Table>FormulaDesigner_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalcExp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcExp1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxableBasis</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<Index>RecId</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxOnItem</Name>
			<Table>TaxOnItem</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AbatementPercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsChargeAsExpensePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExemptTax_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadOnInventory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadOnInventoryPercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationCodeTable_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithoutTaxCredit_BR</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>MarkupTable</Name>
			<Table>MarkupTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustomerLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomPaymType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_IncludeIntoIntrastat_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Intrastat_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeIntoIntrastatInvoiceValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeIntoIntrastatStatisticalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsLetterOfCredit_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupClassification_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRBrokerContractFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRProRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCustPostingTypeTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseInMatching</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxTable</Name>
			<Table>TaxTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BusinessType_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomCalcMethod_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomChargeType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomCombinedRate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsPractice_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomUnitId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiotAddInfo_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DomesticMarketTaxCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludeFromInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludedTax_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGST_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegativeTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotEUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentTaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseIncoming</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseIncomingCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseIncomingDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseOutgoing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseOutgoingCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseOutgoingDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTaxCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTaxDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTaxOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTaxOffsetCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldBaseUseTaxOffsetDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeBuy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeBuyCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeBuyDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeSalesCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxFreeSalesDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxIncoming</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxIncomingCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxIncomingDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxOutgoing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxOutgoingCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldTaxOutgoingDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTaxCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTaxDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTaxOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTaxOffsetCreditNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepFieldUseTaxOffsetDebitNote_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetainedTax_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAccountGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationCodeTable_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBorderNumReq_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCalcMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxComponentTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCountryRegionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIncludeInTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxJurisdictionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLedgerAccountGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLimitBase</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxOnTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPackagingSort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPackagingTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPurchaseTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRoundOffType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSubstitutionBaseRedCalcMode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSubstitution_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_SG</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxValueQty_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxVatReportCategory_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteSelection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnrealizedTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATChargeSource_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>MarkupTable_IN</Name>
			<Table>MarkupTable_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>MarkupTable</JoinSource>
			<LinkType>NotExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS5279</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<TitleDataSource xmlns="">FormulaDesigner_IN</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Designer</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CalculationGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Left>0</Left>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>350</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>Tab1</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<Type>Tab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>Calculation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>TabPage</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>ButtonGroupActionPane</Name>
														<Type>ActionPane</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>FormButtonGroup</Name>
																<Type>ButtonGroup</Type>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Add</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>536870910</ElementPosition>
																		<Enabled>No</Enabled>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>+</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Sub</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>805306365</ElementPosition>
																		<Enabled>No</Enabled>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>-</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Multiply</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1073741820</ElementPosition>
																		<Enabled>No</Enabled>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>*</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Divide</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1342177275</ElementPosition>
																		<Enabled>No</Enabled>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>/</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Clear</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1610612730</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>@SYS22525</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>Delete</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1879048185</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Delete</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>55</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<DisabledImage>3145</DisabledImage>
																		<DisabledImageLocation>EmbeddedResource</DisabledImageLocation>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>@sys14425</Text>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<DataSource>FormulaDesigner_IN</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>Identification</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>Grid</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<DragDrop>Manual</DragDrop>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Height>0</Height>
																<Type>Grid</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>0</Width>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormIntegerControl">
																		<Name>Grid_ID</Name>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Integer</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ID</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Grid_TaxCode</Name>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxCode</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>Grid_TaxableBasis</Name>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ComboBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxableBasis</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCheckBoxControl">
																		<Name>Grid_PriceInclTax</Name>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CheckBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<BackgroundColor>WindowBackground</BackgroundColor>
																		<DataField>PriceInclTax</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Grid_CalcExp1</Name>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>CalcExp1</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Grid_CalcExp</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1670265058</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>CalcExp</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Grid_TaxItemGroup</Name>
																		<ElementPosition>1908874352</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Visible>No</Visible>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxItemGroup</DataField>
																		<DataSource>FormulaDesigner_IN</DataSource>
																	</AxFormControl>
																</Controls>
																<DataGroup>Identification</DataGroup>
																<DataSource>FormulaDesigner_IN</DataSource>
															</AxFormControl>
														</Controls>
														<Caption>@SYS84660</Caption>
													</AxFormControl>
												</Controls>
												<Caption>@SYS7523</Caption>
												<Scrollbars>Auto</Scrollbars>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CtrlSplitVertical</Name>
								<AlignControl>Yes</AlignControl>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Left>0</Left>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>4</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AlignChild>No</AlignChild>
								<BottomMargin>0</BottomMargin>
								<BottomMarginMode>Fixed</BottomMarginMode>
								<HideIfEmpty>No</HideIfEmpty>
								<TopMargin>0</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
								<BackgroundColor>WindowBackground</BackgroundColor>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MisCharges</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Group_Group</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>Tab2</Name>
												<AlignControl>No</AlignControl>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<Type>Tab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>Taxes</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>TaxesButtonActionPane</Name>
																<Type>ActionPane</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>TaxButtonGroup</Name>
																		<Type>ButtonGroup</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonControl">
																				<Name>TaxAddButton</Name>
																				<Type>Button</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Text>@TaxLocalization:AddToExpression</Text>
																			</AxFormControl>
																		</Controls>
																	</AxFormControl>
																</Controls>
																<DataSource>TaxTable</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>Grid1</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<DragDrop>Manual</DragDrop>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Height>0</Height>
																<Type>Grid</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>0</Width>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TaxTable_TaxCode</Name>
																		<ElementPosition>858993458</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxCode</DataField>
																		<DataSource>TaxTable</DataSource>
																		<Label>@SYS76477</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TaxName</Name>
																		<ElementPosition>1288490187</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxName</DataField>
																		<DataSource>TaxTable</DataSource>
																		<Label>@SYS7576</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>TaxType</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1717986916</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ComboBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxType_IN</DataField>
																		<DataSource>TaxTable</DataSource>
																		<Label>@SYS33553</Label>
																		<Items />
																	</AxFormControl>
																</Controls>
																<DataSource>TaxTable</DataSource>
															</AxFormControl>
														</Controls>
														<Caption>@GLS5290</Caption>
														<Scrollbars>Auto</Scrollbars>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>Tab3</Name>
												<AlignControl>No</AlignControl>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<Type>Tab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>MisCharge</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>TabPage</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>MisChargeButtonActionPane</Name>
																<Type>ActionPane</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>MisChargeButtonGroup</Name>
																		<Type>ButtonGroup</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonControl">
																				<Name>MisChargeAddButton</Name>
																				<Type>Button</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Text>@TaxLocalization:AddToExpression</Text>
																			</AxFormControl>
																		</Controls>
																	</AxFormControl>
																</Controls>
																<DataSource>MarkupTable</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>Grid2</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<DragDrop>Manual</DragDrop>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Height>0</Height>
																<Type>Grid</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>0</Width>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>MarkupTable_MarkupCode</Name>
																		<ElementPosition>858993458</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>MarkupCode</DataField>
																		<DataSource>MarkupTable</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>MarkupTable_Txt</Name>
																		<ElementPosition>1288490187</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Txt</DataField>
																		<DataSource>MarkupTable</DataSource>
																		<Label>@SYS6303</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>MarkupTable_ModuleType</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1717986916</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<HelpText>@GLS5310</HelpText>
																		<Type>ComboBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>CustVendType_IN</DataMethod>
																		<DataSource>MarkupTable</DataSource>
																		<Label>@SYS23298</Label>
																		<Items />
																	</AxFormControl>
																</Controls>
																<DataSource>MarkupTable</DataSource>
															</AxFormControl>
														</Controls>
														<Caption>@SYS8371</Caption>
														<Scrollbars>Auto</Scrollbars>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<HideIfEmpty>No</HideIfEmpty>
							</AxFormControl>
						</Controls>
						<Columns>4</Columns>
						<Caption>@SYS67084</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>