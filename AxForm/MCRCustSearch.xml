<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MCRCustSearch</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
/// <summary>
///     Displays the results from a user search for a customer.
/// </summary>
public class MCRCustSearch extends FormRun
{
    boolean search;
    boolean createCust;
    boolean mcrCallCenterEnabled;
    str previousSearchText;

    #define.MCRCustMerge('MCRCustMerge')
}
]]></Source>
			</Method>
			<Method>
				<Name>enableMergeButton</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Enables the merge button.
    /// </summary>
    void enableMergeButton()
    {
        int MCRCountUnmergedSelected;
        TmpMCRCustSearchTable localTmpMCRCustSearchTable;

        localTmpMCRCustSearchTable = TmpMCRCustSearchTable_ds.getFirst(1);
        while (localTmpMCRCustSearchTable)
        {
            // Only want to enable merge when 2 customers that are not already merged are seleced.
            // due to the nature of customer search also showing customers that were merged
            if (!localTmpMCRCustSearchTable.MCRMergedRoot && localTmpMCRCustSearchTable.CustAccount)
            {
                MCRCountUnmergedSelected++;
            }

            localTmpMCRCustSearchTable = TmpMCRCustSearchTable_ds.getNext();
        }

        merge.enabled(MCRCountUnmergedSelected == 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeSearch</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Executes customer search.
    /// </summary>
    void executeSearch()
    {
        delete_from TmpMCRCustSearchTable;

        if (SearchString.text())
        {
            element.populateMCRTMPCustSearchTable(List::create(MCRCustSearch::search(SearchString.text(), any2Enum(CustSearchType.selection()))));

            // Set focus on grid so user can arrow up & down.
            grid.setFocus();

            TmpMCRCustSearchTable_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        str             callingFrom;
        Args            localArgs;

        mcrCallCenterEnabled = isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter));

        super();

        localArgs = element.args();

        search = false;
        createCust = false;

        if (localArgs.parm() != '' )
        {
            SearchString.text(localArgs.parm());
        }

        if (localArgs.parmEnum() && localArgs.parmEnumType() == enumNum(MCRCustSearchType))
        {
            CustSearchType.selection(localArgs.parmEnum());
        }

        if (localArgs.caller())
        {
            callingFrom = element.args().callerName();

            if (callingFrom == FormStr(MCRCustomerService)
                || callingFrom == FormStr(SalesCreateOrder))
            {
                createCust = true;
            }

        }

        if (localArgs.parmObject())
        {
            element.populateMCRTMPCustSearchTable(localArgs.parmObject());
        }
        this.setAsCustMerge();

        // Clear parm so the search text is not returned
        localArgs.parm('');
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateMCRTMPCustSearchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>TmpMCRCustSearchTable</c> datasource
    ///     with the records in the list.
    /// </summary>
    /// <param name="_listSearch">
    /// A list of <c>TmpMCRCustSearchTable</c> records.
    /// </param>
    private void populateMCRTMPCustSearchTable(List _listSearch)
    {
        ListEnumerator          listEnumeratorSearch;
        TmpMCRCustSearchTable   tmpMCRCustSearchTableLocal;

        if (_listSearch)
        {
            listEnumeratorSearch = _listSearch.getEnumerator();

            while (listEnumeratorSearch.moveNext())
            {
                tmpMCRCustSearchTableLocal.data(listEnumeratorSearch.current());
                tmpMCRCustSearchTableLocal.insert();
                tmpMCRCustSearchTableLocal.clear();
            }

            TmpMCRCustSearchTable.setTmpData(tmpMCRCustSearchTableLocal);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptNewCust</Name>
				<Source><![CDATA[
    boolean promptNewCust()
    {
        str promptMessage;
        DialogButton dialogButton;

        // prompt user
        promptMessage = strFmtLB("@MCR26406");

        dialogButton = box::yesNo(promptMessage, DialogButton::No, "@MCR26340");

        if (dialogButton == DialogButton::No)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets focus on search text.
    /// </summary>
    public void run()
    {
        super();

        SearchString.setFocus();

        // Delete the option to search by "Loyalty Card" from the MCRCustSearchType combo box
        // if the user is not in the Call Center channel when the form first runs.
        FormComboBoxControl formComboBoxControl = this.control(this.controlId('CustSearchType'));
        McrCustSearch::deleteListItemFromComboBox(formComboBoxControl, enum2Str(MCRCustSearchType::LoyaltyCardNumber), !mcrCallCenterEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAsCustMerge</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets labels to make customer merge searching more efficient.
    /// </summary>
    private void setAsCustMerge()
    {
        if (element.args().lookupValue() == #MCRCustMerge)
        {
            this.design().caption("@MCR36028");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Executes logic in <c>buttonSelect</c> clicked method.
    /// </summary>
    /// <param name="_taskId">
    /// The ID of the task.
    /// </param>
    /// <returns>
    /// The ID of the task.
    /// </returns>
    public int task(int _taskId)
    {
        #Task

        int ret;
        ret = super(_taskId);

        if ((_taskId == #TaskEnter)
            && (TmpMCRCustSearchTable.CustAccount
            || TmpMCRCustSearchTable.BusRelAccount))
        {
            buttonSelect.clicked();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpMCRCustSearchTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Sorts the grid.
        /// </summary>
        public void executeQuery()
        {
            QueryBuildDataSource queryBuildDataSource = this.queryBuildDataSource();

            queryBuildDataSource.clearDynalinks();
            queryBuildDataSource.clearRanges();

            queryBuildDataSource.addSortField(fieldNum(TmpMCRCustSearchTable, BusRelAccount), SortOrder::Ascending);
            queryBuildDataSource.addSortField(fieldNum(TmpMCRCustSearchTable, CustAccount), SortOrder::Ascending);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Enables the merge buttons if two and only two records are selected
        ///     from the customer search grid.
        /// </summary>
        public void markChanged()
        {
            super();

            element.enableMergeButton();
            search = false;

            // If the selected record is a BR cannot modify
            if (TmpMCRCustSearchTable.BusRelAccount
                && !TmpMCRCustSearchTable.CustAccount)
            {
                ModifyCust.enabled(false);
            }
            else
            {
                ModifyCust.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewCust</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args formArgs;
            FormRun formRun;

            formArgs = new Args(formStr(DirPartyQuickCreateForm));
            formArgs.caller(element);
            formArgs.openMode(OpenMode::New);
            formArgs.parmEnumType(FormOpenMode::ForNew);

            formArgs.parm(tableStr(CustTable));
            formRun = ClassFactory.formRunClass(formArgs);

            formRun.init();
            formRun.run();
            formRun.wait();

            if (formArgs.parmObject() && formArgs.parmObject() is MCRCustTableConfigure)
            {
                MCRCustTableConfigure mcrCustTableConfigure = formArgs.parmObject();
                element.args().parm(mcrCustTableConfigure.parmCustAccount());
                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Merge</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Calls merge logic.
        /// </summary>
        void clicked()
        {
            TmpMCRCustSearchTable tmpMCRCustSearchTable_Parent;
            TmpMCRCustSearchTable tmpMCRCustSearchTable_Child;
            TmpMCRCustSearchTable tmpMCRCustSearchTable_Error;
            MCRMergeConfirmationConfigure mergeConfirmationConfigure = new MCRMergeConfirmationConfigure();
            Args args;
            FormRun formRun;

            super();

            tmpMCRCustSearchTable_Parent = TmpMCRCustSearchTable_ds.getFirst(1);
            tmpMCRCustSearchTable_Child = TmpMCRCustSearchTable_ds.getNext();
            tmpMCRCustSearchTable_Error = TmpMCRCustSearchTable_ds.getNext();

            // ensures that exactly two records are selected.
            if (!tmpMCRCustSearchTable_Parent || !tmpMCRCustSearchTable_Child || tmpMCRCustSearchTable_Error)
            {
                error("@MCR12295");
            }
            else
            {
                mergeConfirmationConfigure.parmMergedFromCust(tmpMCRCustSearchTable_Child.CustAccount);
                mergeConfirmationConfigure.parmMergedToCust(tmpMCRCustSearchTable_Parent.CustAccount);

                args = new Args();
                args.name(formStr(MCRMergeConfirmationForm));
                args.caller(this);
                args.parmObject(mergeConfirmationConfigure);

                formRun = classFactory.formRunClass(args);
                formRun.init();
                formRun.run();
                formRun.wait();

                // Return from customer search with the survivor selected
                if (args.parm())
                {
                    element.args().parm(args.parm());
                    element.close();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SendCatalog</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (TmpMCRCustSearchTable.MCRMergedRoot
                || !TmpMCRCustSearchTable.CustAccount)
            {
                error("@MCR24320");
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustSearchType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets search variable to true.
        /// </summary>
        /// <returns>
        /// true if modified; otherwise, false.
        /// </returns>
        /// <remarks>
        /// This is used to determine whether or not
        ///     pressing ENTER shall return the marked record or display the new search criteria.
        ///     The search variable is true if the search criteria was modified.
        /// </remarks>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            search = true;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Actions to take on entry of the MCRCustSearchType combo box.
        /// </summary>
        public void enter()
        {
            super();

            // Delete the option to search by "Loyalty Card" from the MCRCustSearchType combo box
            // if the user is not in the Call Center channel when the form first runs.
            McrCustSearch::deleteListItemFromComboBox(this, enum2Str(MCRCustSearchType::LoyaltyCardNumber), !mcrCallCenterEnabled);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes customer search.
        /// </summary>
        /// <returns>
        /// true if modified, false otherwise.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            search = true;

            element.executeSearch();
            previousSearchText = SearchString.text();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Executes a new search.
        /// </summary>
        void clicked()
        {
            if (!MCRCustSearchPerfFlight::instance().isEnabled() || SearchString.text() != previousSearchText)
            {
                element.executeSearch();
            }

            previousSearchText = '';
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelect</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Passes back the selected customer to the form which it was called.
        /// </summary>
        void clicked()
        {
            CustTable custTable;
            smmBusRelTable  smmBusRelTable;
            boolean shouldClose = true;

            if (search == false)
            {
                if (TmpMCRCustSearchTable.CustAccount)
                {
                    custTable = CustTable::find(TmpMCRCustSearchTable.CustAccount);
                    if (custTable.MCRMergedRoot)
                    {
                        checkFailed(strfmt("@MCR12337", custTable.AccountNum, custTable.MCRMergedRoot));
                        element.args().parm(custTable.MCRMergedRoot);
                    }
                    else
                    {
                        element.args().parm(custTable.AccountNum);
                    }
                }
                else if (TmpMCRCustSearchTable.BusRelAccount)
                {
                    if (createCust)
                    {
                        smmBusRelTable = smmBusRelTable::find(TmpMCRCustSearchTable.BusRelAccount);

                        if (element.promptNewCust())
                        {
                            if (smmBusRelTable::convert2Customer(smmBusRelTable))
                            {
                                if (CustTable::find(smmBusRelTable.CustAccount()).validateWrite()
                                    && (CustTable::find(smmBusRelTable.custAccount()).postalAddress().CountryRegionId))
                                {
                                    info("@MCR25568");
                                }
                                else
                                {
                                    info("@MCR35158");
                                    smmBusRelTable::MCROpenCustTable(smmBusRelTable, true);
                                }
                                element.args().parm(smmBusRelTable.CustAccount());
                            }
                        }
                        else
                        {
                            shouldClose = false;
                        }
                    }
                    else
                    {
                        element.args().parm(TmpMCRCustSearchTable.BusRelAccount);
                    }
                }

                if (shouldClose)
                {
                    element.close();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpMCRCustSearchTable</Name>
			<Table>TmpMCRCustSearchTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Address</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusRelAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusRelTypeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>City</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>County</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCompanyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedRoot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRSmmListType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ZipCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MCR10449</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Left xmlns="">0</Left>
		<LeftMode xmlns="">Center</LeftMode>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<Top xmlns="">0</Top>
		<TopMode xmlns="">Center</TopMode>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>CustomerFunctionsGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>NewCust</Name>
								<HelpText>@SYS59636</HelpText>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>CustomerquickCreate</MenuItemName>
								<OpenMode>New</OpenMode>
								<Text>@SYS2055</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ModifyCust</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@MCR10643</HelpText>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>TmpMCRCustSearchTable</DataSource>
								<MenuItemName>CustTable</MenuItemName>
								<Text>@SYS453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Merge</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MCR12164</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>110</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@MCR35577</Text>
							</AxFormControl>
						</Controls>
						<Caption>@SYS302</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>OtherFunctionsGroup</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SendCatalog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>MCRCatalog</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>110</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>TmpMCRCustSearchTable</DataSource>
								<MenuItemName>MCRCatalogRequest</MenuItemName>
								<Text>@MCR10742</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@MCR10282</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CustomerSearch</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>QuickFilter</Name>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>Grid</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>CustSearchType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>MCRCustSearchType</EnumType>
								<Label>@MCR11899</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SearchString</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@MCR23969</Label>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonSearch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MCR24264</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>110</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>Find</NormalImage>
								<Text>@SYS3340</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_CustAccount</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CustAccount</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_BusRelAccount</Name>
								<ElementPosition>690262600</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>BusRelAccount</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_Name</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_MCRCompanyName</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>MCRCompanyName</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_Phone</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Phone</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_Address</Name>
								<ElementPosition>1380525201</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Address</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
								<DisplayHeight>2</DisplayHeight>
								<DisplayHeightMode>Fixed</DisplayHeightMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>TmpMCRCustSearchTable_MCRSmmListType</Name>
								<ElementPosition>2070787801</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>MCRSmmListType</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>MCRCustSearchTable_MCRMergedRoot</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2096353083</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@MCR12354</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>MCRMergedRoot</DataField>
								<DataSource>TmpMCRCustSearchTable</DataSource>
								<Label>@MCR12353</Label>
							</AxFormControl>
						</Controls>
						<DataSource>TmpMCRCustSearchTable</DataSource>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ButtonSelect</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@MCR24263</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>110</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS109925</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ButtonCancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
