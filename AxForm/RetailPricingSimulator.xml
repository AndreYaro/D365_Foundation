<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailPricingSimulator</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailPricingSimulator extends FormRun
{
    CustTable                               selectedCustomer;

    SysLookupMultiSelectCtrl                msCtrlAffiliations;
    SysLookupMultiSelectCtrl                msCtrlLoyaltyTiers;
    SysLookupMultiSelectCtrl                msCtrlCatalog;
    SysLookupMultiSelectCtrl                msCtrlDiscountCodes;
    SysLookupMultiSelectCtrl                msCtrlPriceGroups;
    String255                               currentSalesLineNum;

    InventDimCtrl_Frm                       salesLineInventDimFormSetup;

}
]]></Source>
			</Method>
			<Method>
				<Name>bindAffiliations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets affliations for current selected simulation.
    /// </summary>
    void bindAffiliations()
    {
        container                           affliationsIds, affiliationsValues;
        RetailPricingSimulatorAffiliation   psAffiliations;
        RetailAffiliation                   retailAffiliation;

        // Get existing affiliations associated with current transaction and bing it to UI control.
        while select RetailAffiliation, AffiliationType, RetailPricingSimulatorSalesTransaction
            from psAffiliations
             where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId &&
                psAffiliations.AffiliationType == RetailAffiliationType::General
            join retailAffiliation
                where retailAffiliation.RecId == psAffiliations.RetailAffiliation
        {
            affliationsIds += [retailAffiliation.RecId];
            affiliationsValues += [retailAffiliation.Name];
        }

        msCtrlAffiliations.set([affliationsIds, affiliationsValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindLoyaltyTiers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets loyalty tiers for the current selected simulation.
    /// </summary>
    void bindLoyaltyTiers()
    {
        container                           loyaltyTierIds, loyaltyTierValues;
        RetailPricingSimulatorAffiliation   psAffiliations;
        RetailAffiliation                   retailAffiliation;
        RetailLoyaltyTier                   retailLoyaltyTier;
        RetailLoyaltyProgramAndTier         retailLoyaltyProgramAndTier;

        // Get existing loyalty tiers associated with current transaction and bing it to UI control.
        while select RetailAffiliation, RetailLoyaltyTier, AffiliationType, RetailPricingSimulatorSalesTransaction
            from psAffiliations
            where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId &&
                 psAffiliations.AffiliationType == RetailAffiliationType::Loyalty
            join RecId from retailLoyaltyTier
                where retailLoyaltyTier.RecId == psAffiliations.RetailLoyaltyTier
            join RecId from retailAffiliation
                where retailAffiliation.RecId == psAffiliations.RetailAffiliation
            join LoyaltyProgramTier, RecId from retailLoyaltyProgramAndTier
                where retailLoyaltyProgramAndTier.RecId1 == retailLoyaltyTier.RecId &&
                    retailLoyaltyProgramAndTier.RecId2 == retailAffiliation.RecId
        {
            loyaltyTierIds += [retailLoyaltyProgramAndTier.RecId];
            loyaltyTierValues += [retailLoyaltyProgramAndTier.LoyaltyProgramTier];
        }

        msCtrlLoyaltyTiers.set([loyaltyTierIds, loyaltyTierValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindCatalogs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets catalags for the current selected simulation.
    /// </summary>
    void bindCatalogs()
    {
        container                       catalogIds, catalogValues;
        RetailPricingSimulatorCatalog   psCatalogs;
        Catalog                         catalog;
        CatalogTranslation              catalogTranslation;

        // Join to get catalog name for corresponding to catalog recIds.
        while select Catalog, RetailPricingSimulatorSalesTransaction
            from psCatalogs
                where psCatalogs.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
            join RecId from catalog
                where catalog.RecId == psCatalogs.Catalog
            join Catalog, FriendlyName from  catalogTranslation
                where catalogTranslation.Catalog == catalog.RecId &&
                    catalogTranslation.Language == SystemParameters::getSystemLanguageId()
        {
            catalogIds += [catalog.RecId];
            catalogValues += [catalogTranslation.FriendlyName];
        }

        msCtrlCatalog.set([catalogIds, catalogValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindDiscountCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets discounts codes for the current selected simulation.
    /// </summary>
    void bindDiscountCodes()
    {
        RetailPricingSimulatorDiscountCode  psDiscountCode;
        RetailCouponCodeTable               retailCouponCodeTable;

        container   discountCodeIds, discountCodeValues;

        // Get existing discount codes associated with current transaction and bing it to UI control.
        while select RetailDiscountCode, RetailPricingSimulatorSalesTransaction
            from psDiscountCode
                where psDiscountCode.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
            join retailCouponCodeTable
                where retailCouponCodeTable.RecId == psDiscountCode.RetailDiscountCode
        {
            discountCodeIds += [retailCouponCodeTable.RecId];
            discountCodeValues += [retailCouponCodeTable.CouponCode];
        }

        msCtrlDiscountCodes.set([discountCodeIds, discountCodeValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindPriceGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets price groups for the current selected simulation.
    /// </summary>
    void bindPriceGroups()
    {
        RetailPricingSimulatorPriceGroup    psPriceGroup;
        RetailDiscountPriceGroup            retailDiscountPriceGroup;
        PriceDiscGroup                      priceDiscGroup;

        container   priceGroupIds, priceGroupValues;

        // Get existing price groups associated with current transaction and bing it to UI control.
        while select RetailDiscountPriceGroup, RetailPricingSimulatorSalesTransaction
            from psPriceGroup
                where psPriceGroup.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
            join priceDiscGroup
                where priceDiscGroup.RecId == psPriceGroup.RetailDiscountPriceGroup
        {
            priceGroupIds += [priceDiscGroup.RecId];
            priceGroupValues += [priceDiscGroup.GroupId];
        }

        msCtrlPriceGroups.set([priceGroupIds, priceGroupValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindMultiSelectControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets values in all multiselect controls on UI based on the current selected simulation.
    /// </summary>
    void bindMultiSelectControls()
    {
        element.bindAffiliations();
        element.bindLoyaltyTiers();
        element.bindCatalogs();
        element.bindDiscountCodes();
        element.bindPriceGroups();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculatePricesAndDiscounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates prices and discounts on current transaction.
    /// </summary>
    /// <param name = "clearOnly">True, if we are clearing out discounts and prices for an empty transaction, false otherwise.</param>
    public void calculatePricesAndDiscounts(boolean clearOnly = false)
    {
        RetailPricingSimulator      pricingSimulator;

        retailPricingSimulatorSalesTransaction_ds.write();
        if (!clearOnly)
        {
            retailPricingSimulatorSalesLine_ds.write();
        }
        
        pricingSimulator = RetailPricingSimulator::construct(retailPricingSimulatorSalesTransaction.RecId);
        pricingSimulator.parmRetailPricingSimulatorSalesLineRecId(retailPricingSimulatorSalesLine.RecId);
        pricingSimulator.calculatePricesAndDiscounts();

        currentSalesLineNum = pricingSimulator.parmPricingSimulatorSalesLineNum();

        retailPricingSimulatorSalesTransaction_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFormControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables form controls.
    /// </summary>
    /// <param name = "enable">True, if controls are to be enabled, else false</param>
    void enableFormControls(boolean enable = false)
    {
        copyButton.enabled(enable);
        pricingSimulatorSalesTransaction_RetailChannelTable.enabled(true);

        pricingSimulatorSalesTransaction_SimulationDateTime.enabled(enable);
        if (RetailPricingFeatureToggle::isRetailDiscountPerformanceImprovementFeatureEnabled() && !RetailPricingKillSwitch::isPriceSimulatorSupportsDisabledDiscountsWhenPerformanceImprovementFeatureEnabled())
        {
            PricingSimulatorSalesTransaction_IncludeDisabledDiscounts.value(0);
            PricingSimulatorSalesTransaction_IncludeDisabledDiscounts.enabled(false);
        }
        else
        {
            // Only enable the option to include disabled discounts if the feature is not enabled.
            pricingSimulatorSalesTransaction_IncludeDisabledDiscounts.enabled(enable);
        }

        pricingSimulatorSalesTransaction_CustAccount.enabled(enable || !this.isChannelInfoRequired());
        pricingSimulatorCatalogs_Catalogs.enabled(enable);
        pricingSimulatorAffiliations_Affiliations.enabled(enable);
        pricingSimulatorAffiliations_LoyaltyTier.enabled(enable);
        pricingSimulatorDiscountCode_BarCode.enabled(enable);
        PricingSimulatorPriceGroups_PriceGroups.enabled(enable);
        pricingSimulatorSalesLinesTabPage.enabled(enable);
        pricingSimulatorSalesTransSummaryTabPage.enabled(enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesAgreementFormControl</Name>
				<Source><![CDATA[
    void setSalesAgreementFormControl()
    {
        boolean allowEditSalesAgreementId = false;

        if (FeatureStateProvider::isFeatureEnabled(RetailSalesAgreementPriceSupportFeature::instance()) && retailPricingSimulatorSalesTransaction.CustAccount != '')
        {
            RetailChannelTable channelTable = RetailChannelTable::findByRecId(RetailPricingSimulatorSalesTransaction.RetailChannelTable);

            if (channelTable.ChannelType == RetailChannelType::MCRCallCenter)
            {
                allowEditSalesAgreementId = true;
            }
        }

        // Reset when disabled.
        if (!allowEditSalesAgreementId)
        {
            retailPricingSimulatorSalesTransaction.SalesAgreementId = '';
        }

        pricingSimulatorSalesTransaction_SalesAgreementId.enabled(allowEditSalesAgreementId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intializes data source for multiselect controls on form.
    /// </summary>
    public void init()
    {
        super();

        msCtrlAffiliations = SysLookupMultiSelectCtrl::construct(element, pricingSimulatorAffiliations_Affiliations, queryStr(RetailAffiliationLookUp));
        msCtrlLoyaltyTiers = SysLookupMultiSelectCtrl::construct(element, pricingSimulatorAffiliations_LoyaltyTier, queryStr(RetailLoyaltyProgramLookUp));
        msCtrlCatalog = SysLookupMultiSelectCtrl::construct(element, pricingSimulatorCatalogs_Catalogs, queryStr(RetailCatalogLookup));
        msCtrlDiscountCodes = SysLookupMultiSelectCtrl::construct(element, pricingSimulatorDiscountCode_BarCode, queryStr(RetailDiscountCodeLookUp));
        msCtrlPriceGroups = SysLookupMultiSelectCtrl::construct(element, PricingSimulatorPriceGroups_PriceGroups, queryStr(PriceDiscGroup));

        this.initChannelInfoControls();
        this.hideSelectedPriceAdjustmentIfNotAvailable();
        this.updateDesignForSalesLine(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public Object inventDimSetupObject()
    {
        return salesLineInventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignForSalesLine</Name>
				<Source><![CDATA[
    internal void updateDesignForSalesLine(InventDimFormDesignUpdate _mode)
    {
        InventDimParm inventDimParm = InventDimParm::allInventDim();

        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!salesLineInventDimFormSetup)
                {
                    salesLineInventDimFormSetup = InventDimCtrl::newFromFormDataSource(SalesLineInventDim_ds);
                }

                salesLineInventDimFormSetup.parmSkipOnHandLookUp(true);
                salesLineInventDimFormSetup.parmDimParmEnabled(inventDimParm);
                salesLineInventDimFormSetup.parmDimParmVisibleGrid(InventDimParm::siteAndWarehouse(), true);
                salesLineInventDimFormSetup.formSetControls(true);
                break;
            default:
                break;
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>isChannelInfoRequired</Name>
				<Source><![CDATA[
    protected boolean isChannelInfoRequired()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initChannelInfoControls</Name>
				<Source><![CDATA[
    private void initChannelInfoControls()
    {
        PricingSimulatorSalesTransaction_RetailChannelTable.mandatory(this.isChannelInfoRequired());
        pricingSimulatorSalesTransaction_CustAccount.enabled(!this.isChannelInfoRequired());
        PricingSimulatorSalesTransaction_ChannelCurrency.allowEdit(!this.isChannelInfoRequired());
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideSelectedPriceAdjustmentIfNotAvailable</Name>
				<Source><![CDATA[
    private void hideSelectedPriceAdjustmentIfNotAvailable()
    {
        System.Type salesLineType = CLRInterop::getType('Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesLine');

        if (!RetailPricingEngineHelper::classHasProperty(salesLineType, 'PriceLines'))
        {
            RetailPricingSimulatorPromotion_Selected.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineItemExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks, if line items is added to the transaction grid
    /// </summary>
    /// <returns>
    /// True, if line item exists
    /// </returns>
    public boolean lineItemExists()
    {
        boolean lineItemAdded = false;

        // reread sales lines data source
        retailPricingSimulatorSalesLine_ds.executeQuery();

        if (retailPricingSimulatorSalesLine.RecId > 0)
        {
            lineItemAdded = true;
        }

        return lineItemAdded;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveCatalogs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the catalogs for current simulation.
    /// </summary>
    void saveCatalogs()
    {
        int                             counter;
        RecId                           recId;
        RetailPricingSimulatorCatalog   psCatalogs;

        container   catalogIds = msCtrlCatalog.get();

        // For new simulation, needs to save transaction first.
        if (!retailPricingSimulatorSalesTransaction.RecId)
        {
            retailPricingSimulatorSalesTransaction_ds.write();
        }

        // Check to verify retailPricingSimulatorSalesTransaction record exists.
        if (retailPricingSimulatorSalesTransaction.RecId)
        {
            ttsBegin;

            // Delete existing mmapped catalogs.
            delete_from psCatalogs
                where psCatalogs.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId;

            // Save newly selected catalogs.
            for (counter = 1; counter <= conlen(catalogIds); counter++)
            {
                recId = any2int64(conpeek(catalogIds, counter));

                if (recId)
                {
                    psCatalogs.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                    psCatalogs.Catalog = recId;

                    psCatalogs.insert();
                }
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveDiscountCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the discount codes for current simulation.
    /// </summary>
    void saveDiscountCodes()
    {
        int                                 counter;
        RecId                               recId;
        RetailPricingSimulatorDiscountCode  psDiscountCode;

        container   discountCodes = msCtrlDiscountCodes.get();

        // For new simulation, needs to save transaction first.
        if (!retailPricingSimulatorSalesTransaction.RecId)
        {
            retailPricingSimulatorSalesTransaction_ds.write();
        }

        // Check to verify retailPricingSimulatorSalesTransaction record exists.
        if (retailPricingSimulatorSalesTransaction.RecId)
        {
            ttsBegin;

            // Delete existing mapped discount codes.
            delete_from psDiscountCode
                where psDiscountCode.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId;

            // Save newly selected discount codes.
            for (counter = 1; counter <= conlen(discountCodes); counter++)
            {
                recId = any2int64(conpeek(discountCodes, counter));

                if (recId)
                {
                    psDiscountCode.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                    psDiscountCode.RetailDiscountCode = recId;

                    psDiscountCode.insert();
                }
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>savePriceGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the discount codes for current simulation.
    /// </summary>
    void savePriceGroups()
    {
        int                                 counter;
        RecId                               recId;
        RetailPricingSimulatorPriceGroup    psPriceGroup;

        container   priceGroups = msCtrlPriceGroups.get();

        // For new simulation, needs to save transaction first.
        if (!retailPricingSimulatorSalesTransaction.RecId)
        {
            retailPricingSimulatorSalesTransaction_ds.write();
        }

        // Check to verify retailPricingSimulatorSalesTransaction record exists.
        if (retailPricingSimulatorSalesTransaction.RecId)
        {
            ttsBegin;

            // Delete existing mapped price groups.
            delete_from psPriceGroup
                where psPriceGroup.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId;

            // Save newly selected price groups.
            for (counter = 1; counter <= conlen(priceGroups); counter++)
            {
                recId = any2int64(conpeek(priceGroups, counter));

                if (recId)
                {
                    psPriceGroup.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                    psPriceGroup.RetailDiscountPriceGroup = recId;

                    psPriceGroup.insert();
                }
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveLoyaltyTier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the loyalty tiers for current simulation.
    /// </summary>
    void saveLoyaltyTier()
    {
        int                                 counter;
        RecId                               recId;
        RetailPricingSimulatorAffiliation   psAffiliations;
        RetailLoyaltyProgramAndTier         retailLoyaltyProgramAndTier;

        container   loyaltyTierIds = msCtrlLoyaltyTiers.get();

        // For new simulation, needs to save transaction first.
        if (!retailPricingSimulatorSalesTransaction.RecId)
        {
            retailPricingSimulatorSalesTransaction_ds.write();
        }

        // Check to verify retailPricingSimulatorSalesTransaction record exists
        if (retailPricingSimulatorSalesTransaction.RecId)
        {
            ttsBegin;

            // Delete existing mapped loyalty tiers.
            delete_from psAffiliations
                where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
                && psAffiliations.AffiliationType == RetailAffiliationType::Loyalty;

            // Save newly selcted loyyalty tiers.
            for (counter = 1; counter <= conlen(loyaltyTierIds); counter++)
            {
                recId = any2int64(conpeek(loyaltyTierIds, counter));

                if (recId)
                {
                    retailLoyaltyProgramAndTier = RetailLoyaltyProgramAndTier::findLoyaltyprogramAndTier(recId);

                    psAffiliations.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                    psAffiliations.AffiliationType = RetailAffiliationType::Loyalty;
                    psAffiliations.RetailAffiliation = retailLoyaltyProgramAndTier.RecId2;
                    psAffiliations.RetailLoyaltyTier = retailLoyaltyProgramAndTier.RecId1;

                    psAffiliations.insert();
                }
            }

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInfoFromCustomerWithoutChannelInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is a delegate to set currency from customer master information
    /// </summary>
    delegate void setInfoFromCustomerWithoutChannelInfo(RetailPricingSimulatorSalesTransaction _retailPricingSimulatorSalesTransaction, CustTable _selectedCustomer)
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>setAffiliationForCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets customer's affiliations + all manually selected affiliations
    /// </summary>
    void setAffiliationForCustomer()
    {
        container                           affliationsIds, affiliationsValues;
        RetailAffiliation                   retailAffiliation;
        RetailCustAffiliation               retailCustAffiliation;
        RetailPricingSimulatorAffiliation   psAffiliations;

        ttsBegin;

        // Delete existing mapped affiliations which were not added manually to transaction.
        delete_from psAffiliations
            where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
            && psAffiliations.AffiliationType == RetailAffiliationType::General
            && psAffiliations.IsManullyAdded == NoYes::No;

        while select CustAccountNum, RetailAffiliationId
            from retailCustAffiliation
            where retailCustAffiliation.CustAccountNum == selectedCustomer.AccountNum
            join retailAffiliation
            where retailCustAffiliation.RetailAffiliationId == retailAffiliation.RecId
        {
            psAffiliations = RetailPricingSimulatorAffiliation::findManuallyAddedRetailAffiliation(retailPricingSimulatorSalesTransaction.RecId, retailCustAffiliation.RetailAffiliationId);

            //If this retail affiliation is not already added manually, add it as a customer's affiliation
            if (!psAffiliations.RecId)
            {
                psAffiliations.clear();

                psAffiliations.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                psAffiliations.RetailAffiliation = retailCustAffiliation.RetailAffiliationId;
                psAffiliations.AffiliationType = RetailAffiliationType::General;
                psAffiliations.IsManullyAdded = NoYes::No;
                psAffiliations.RetailLoyaltyTier = 0;

                psAffiliations.insert();

                affliationsIds += [retailCustAffiliation.RetailAffiliationId];
                affiliationsValues += [retailAffiliation.Name];
            }
        }

        //Add manual affiliation to the container
        while select RetailAffiliation
            from psAffiliations
                where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
                && psAffiliations.AffiliationType == RetailAffiliationType::General
                && psAffiliations.IsManullyAdded == NoYes::Yes
            join Name from retailAffiliation
                where psAffiliations.RetailAffiliation == retailAffiliation.RecId
        {
            affliationsIds += [psAffiliations.RetailAffiliation];
            affiliationsValues += [retailAffiliation.Name];
        }

        ttsCommit;

        msCtrlAffiliations.set([affliationsIds, affiliationsValues]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCatalogForSelectedChannal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets catalogs for selected channel
    /// </summary>
    void setCatalogForSelectedChannal()
    {
        container                       catalogIds, catalogValues;
        RetailChannelTable              retailChannelTable;
        RetailInternalOrganization      retailInternalOrganization;
        Catalog                         catalog;
        CatalogTranslation              catalogTranslation;
        RetailCatalogInternalOrg        retailCatalogInternalOrg;

        // Join to get catalogs associated with channel.
        while select RecId, OMOperatingUnitID
            from retailChannelTable
                where retailChannelTable.RecId == retailPricingSimulatorSalesTransaction.RetailChannelTable
            join InternalOrganization, RecId from retailInternalOrganization
                where retailInternalOrganization.InternalOrganization == retailChannelTable.OMOperatingUnitID
            join InternalOrganization, Catalog from retailCatalogInternalOrg
                where retailCatalogInternalOrg.InternalOrganization == retailInternalOrganization.RecId
            join RecId from catalog
                where catalog.RecId == retailCatalogInternalOrg.Catalog
            join Catalog, FriendlyName from catalogTranslation
                where catalogTranslation.Catalog == catalog.RecId &&
                    catalogTranslation.Language == SystemParameters::getSystemLanguageId()
        {
            catalogIds += [catalog.RecId];
            catalogValues += [catalogTranslation.FriendlyName];
        }

        msCtrlCatalog.set([catalogIds, catalogValues]);

        element.saveCatalogs();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLoyaltyProgramForCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets loyalty programs + Tier for selected customer
    /// </summary>
    void setLoyaltyProgramForCustomer()
    {
        container                       loyaltyIds, loyaltyValues;
        CustTable                       custTable;
        RetailAffiliation               retailAffiliation;
        RetailLoyaltyCard               retailLoyaltyCard;
        RetailLoyaltyCardTier           retailLoyaltyCardTier;
        RetailLoyaltyProgramAndTier     retailLoyaltyProgramAndTier;

        // Get count of loyalty cards associated with customer.
        select count(RecId)
            from custTable
                where custTable.AccountNum == selectedCustomer.AccountNum
            join retailLoyaltyCard
                where custTable.Party == retailLoyaltyCard.Party;

        if (custTable.RecId != 1) // Customer has zero or more than one loyalty cards, don't add any loyalty tier
        {
            loyaltyIds = conNull();
            loyaltyValues = conNull();
        }
        else // customer has only one laoyalty card, so loyalty tiers are added to transaction automatically on customer added.
        {
            // Join to get loyalty tiers associated with loyalty card
            while select AccountNum, Party
                from custTable
                    where custTable.AccountNum == selectedCustomer.AccountNum
                join Party, RecId from retailLoyaltyCard
                    where retailLoyaltyCard.Party == custTable.Party
                join LoyaltyTier from retailLoyaltyCardTier
                    where retailLoyaltyCardTier.LoyaltyCard == retailLoyaltyCard.RecId
                join RecId from retailAffiliation
                    where retailAffiliation.RecId == retailLoyaltyCardTier.Affiliation
                join LoyaltyProgramTier, RecId from  retailLoyaltyProgramAndTier
                    where retailLoyaltyProgramAndTier.RecId1 == retailLoyaltyCardTier.LoyaltyTier
                    && retailLoyaltyProgramAndTier.RecId2 == retailAffiliation.RecId
            {
                loyaltyIds += [retailLoyaltyProgramAndTier.RecId];
                loyaltyValues += [retailLoyaltyProgramAndTier.LoyaltyProgramTier];
            }
        }

        msCtrlLoyaltyTiers.set([loyaltyIds, loyaltyValues]);

        element.saveLoyaltyTier();
    }

]]></Source>
			</Method>
			<Method>
				<Name>channelDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to convert the date time from the form input into a date time with timezone UTC and date time equal to
    /// the form input plus the negation of the channel time zone offset. This is a workaround, as the pricing engine
    /// will convert the saved SimulationDateTime using the channel time zone offset.
    /// </summary>
    /// <param name = "Set">Required by the system. Indicates if the field is set.</param>
    /// <param name = "valueOnForm">Value input from the form.</param>
    /// <returns>Value to display.</returns>
    /// <remarks>
    /// The field's Timezone Preference attribute is set to NoConversion which ensures that valueOnForm will always contain
    /// exactly the value which is displayed on the form, without any conversions.
    /// </remarks>
    edit utcdatetime channelDateTime(boolean set, utcdatetime valueOnForm)
    {
        int offsetInMinutes;
        RetailChannelTable channelTable = RetailChannelTable::findByRecId(RetailPricingSimulatorSalesTransaction.RetailChannelTable);
        if (set)
        {
            // We need to manually create the offset as the builtin functions in DateTimeUtil for conversion will adjust any timezones backing the
            // utcdatetime being adjusted, and for our purposes we need to maintain UTC as the time zone.
            offsetInMinutes = DateTimeUtil::getTimeZoneOffset(valueOnForm, channelTable.ChannelTimeZone);
            RetailPricingSimulatorSalesTransaction.SimulationDateTime = DateTimeUtil::addMinutes(valueOnForm, -offsetInMinutes);
            
            if (element.lineItemExists())
            {
                element.calculatePricesAndDiscounts();
            }

            return valueOnForm;
        }
        else // A refresh of the form not triggered by an edit to the value in this field will call this function with null inputs.
        {   
            // Restore the display value based on what is saved.
            offsetInMinutes = DateTimeUtil::getTimeZoneOffset(RetailPricingSimulatorSalesTransaction.SimulationDateTime, channelTable.ChannelTimeZone);            
            return DateTimeUtil::addMinutes(RetailPricingSimulatorSalesTransaction.SimulationDateTime, offsetInMinutes);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailPricingSimulatorSalesTransaction</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        // On new data source record creation (which is yet to be committed to db), disable all controls except channel selection and simulation name text box.
        public void create(boolean _append = false)
        {
            super(_append);

            element.enableFormControls(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initialize datetime to current date and time.
        /// </summary>
        public void initValue()
        {
            super();

            retailPricingSimulatorSalesTransaction.SimulationDateTime = DateTimeUtil::getSystemDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Binding multiselect controls in this method.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;
            container defaultContainer;

            ret = super();

            if (ret)
            {
                if (retailPricingSimulatorSalesTransaction.RecId) // Bind only, if record is commited to db
                {
                    element.enableFormControls(true);
                    element.bindMultiSelectControls();
                }
                else
                {
                    element.enableFormControls(false);

                    msCtrlAffiliations.set(defaultContainer);
                    msCtrlLoyaltyTiers.set(defaultContainer);
                    msCtrlCatalog.set(defaultContainer);
                    msCtrlDiscountCodes.set(defaultContainer);
                    msCtrlPriceGroups.set(defaultContainer);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>RetailChannelTable</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Disable jumpref for channel combobox as View details does not work for this lookup.
            /// </summary>
            public void jumpRef()
            {
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SimulationName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // On simulation name modified -->
                // If retailPricingSimulatorSalesTransaction record is not commited to db and a retail channel is already selected,
                // enable controls on form.
                if ((!retailPricingSimulatorSalesTransaction.RecId) && (retailPricingSimulatorSalesTransaction.RetailChannelTable))
                {
                    element.enableFormControls(true);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailPricingSimulatorSalesLine</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validations when a record is written to RetailPricingSimulatorSalesLine datasource.
        /// </summary>
        /// <returns>True, if validation is successful</returns>
        public boolean validateWrite()
        {
            boolean         ret = true;
            EcoResProduct   ecoResProduct;
            RecId           ecoResProductRecId;

            ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).inventDimId;
                if (!retailPricingSimulatorSalesLine.Variant) // Return false, if variant is not specified and product is product master type.
                {                    
                    ecoResProductRecId = InventTable::find(pricingSimulatorSalesLines_DisplayProductNumber.valueStr()).Product;
                    ecoResProduct = EcoresProduct::find(ecoResProductRecId);

                    if (ecoResProduct.isProductMaster())
                    {
                        error("@Retail:ProductVariantSelectionRequired");
                        ret = false;
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sorts the RetailPricingSimulatorSalesLine records based on LineNum field.
        /// </summary>
        public void init()
        {
            super();

            retailPricingSimulatorSalesLine_ds.query().dataSourceName(formDataSourceStr(RetailPricingSimulator, RetailPricingSimulatorSalesLine)).sortClear();
            retailPricingSimulatorSalesLine_ds.query().dataSourceName(formDataSourceStr(RetailPricingSimulator, RetailPricingSimulatorSalesLine)).addSortField(fieldNum(RetailPricingSimulatorSalesLine, SalesLineNum), SortOrder::Ascending);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            RetailPricingSimulatorSalesLine_ds.positionToRecord(RetailPricingSimulatorSalesLine::findSalesLineNum(RetailPricingSimulatorSalesLine.RetailPricingSimulatorSalesTransaction,
                str2Num(currentSalesLineNum)));
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Delete is called once per line being deleted.
        /// We recalculate only after all the selected records are deleted.
        /// </summary>
        public void delete()
        {
            boolean recordExisted = retailPricingSimulatorSalesLine.RecId != 0;

            super();

            int remainingRecords = this.recordsMarked().lastIndex();

            if (remainingRecords == 0 && recordExisted)
            {
                element.calculatePricesAndDiscounts(true);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// Create an pricing simulator sales line.
        /// </summary>
        /// <param name="_append">
        /// true if the simulator sales line is appended; otherwise, false.
        /// </param>
        public void create(boolean _append = false)
        {
            // forcing line to always be appended to the end.
            super(true);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DisplayProductNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // Lookup for items
                InventTable::lookupItem(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DisplayProductVariantNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Lookup method for variant selection.
            /// </summary>
            /// <param name = "_formControl">Control name</param>
            /// <param name = "_filterStr">Filter string for lookup records.</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                FormRun formRun = classfactory.formRunClass(new Args(formStr(RetailVariantLookup)));
                FormStringControl formControl = _formControl;

                formRun.args().parm(retailPricingSimulatorSalesLine.DisplayProductNumber);
                formRun.args().caller(_formControl);
                formRun.init();

                formRun.run();
                formControl.performFormLookup(formRun);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailPricingSimulatorDiscount</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initalize the datasource.
        /// </summary>
        public void init()
        {
            super();

            Query query = this.query();
            QueryBuildDataSource dataSource = query.dataSourceName('RetailPricingSimulatorDiscount');
            dataSource.addRange(fieldNum(RetailPricingSimulatorDiscount,PeriodicDiscountType ))
                      .value('!' + enum2Str(RetailDiscountOfferTypeBase::Promotion));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OfferId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailPricingSimulatorPromotion</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initialize datasource.
        /// </summary>
        public void init()
        {
            super();

            Query query = this.query();
            QueryBuildDataSource dataSource = query.dataSourceName('RetailPricingSimulatorPromotion');
            dataSource.addRange(fieldNum(RetailPricingSimulatorDiscount,PeriodicDiscountType ))
                          .value(enum2Str(RetailDiscountOfferTypeBase::Promotion));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OfferId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Add new record, if current record has been commited, i.e.; retailPricingSimulatorSalesTransaction.RecId = true,
        /// Or, if no record exists.
        /// </summary>
        void clicked()
        {
            if ((!retailPricingSimulatorSalesTransaction.RecId) && (retailPricingSimulatorSalesTransaction.SimulationDateTime))
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesTransaction_RetailChannelTable</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                     ret;
            RetailChannelTable          retailChannelTable;

            ret = super();

            if (ret)
            {
                // On retail channel modified -->
                // If retailPricingSimulatorSalesTransaction record is not commited to db and simulation name is already filled in,
                // enable controls on form.
                if ((!retailPricingSimulatorSalesTransaction.RecId) && (strLTrim(strRTrim(retailPricingSimulatorSalesTransaction.SimulationName)) != ''))
                {
                    element.enableFormControls(true);
                }

                retailChannelTable = RetailChannelTable::findByRecId(retailPricingSimulatorSalesTransaction.RetailChannelTable);

                retailPricingSimulatorSalesTransaction.ChannelCurrency = retailChannelTable.Currency;

                element.setSalesAgreementFormControl();

                // Do not select catalog associated with channel automatically, since this should be selected by user.

                // Refresh of prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesTransaction_SimulationDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        [
            SysObsolete('This field is no longer visible from the form and is now modified via the channelDateTime edit field',
            true,
            30\11\2017)
        ]
        public boolean modified()
        {
            boolean ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesTransaction_IncludeDisabledDiscounts</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorCatalogs_Catalogs</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.saveCatalogs();

                 // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesTransaction_CustAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                selectedCustomer = custTable::find(retailPricingSimulatorSalesTransaction.CustAccount);

                // Mark affiliations associated with the selected customer
                element.setAffiliationForCustomer();

                // Mark loyalty tiers associated with the selected customer
                element.setLoyaltyProgramForCustomer();

                // calling into a delegate if channel is not required, for example, global unified pricing is not requiring channel infomation
                element.setInfoFromCustomerWithoutChannelInfo(retailPricingSimulatorSalesTransaction, selectedCustomer);
            
                element.setSalesAgreementFormControl();

                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorAffiliations_Affiliations</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            int     indexOfItem, counter;
            RecId   recId;

            container                           affiliationIdAllSelected, custAffiliationIdToBeRemoved;
            RetailPricingSimulatorAffiliation   psAffiliations;

            ttsBegin;

            // Delete all manual aafiliation for this transaction
            delete_from psAffiliations
                where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
                && psAffiliations.AffiliationType == RetailAffiliationType::General
                && psAffiliations.IsManullyAdded == NoYes::Yes;

            ret = super();

            // get RecIds of the selected rows
            affiliationIdAllSelected = msCtrlAffiliations.get();

            // Loop on existing customer's affiliation for this transaction
            while select RetailAffiliation
                from psAffiliations
                    where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
                    && psAffiliations.AffiliationType == RetailAffiliationType::General
                    && psAffiliations.IsManullyAdded == NoYes::No
            {
                // Check If customer's affiliation is there in current selection of affiliation
                indexOfItem = conFind(affiliationIdAllSelected, psAffiliations.RetailAffiliation);

                // customer's affiliation is found in current selection of affiliation
                // this has to be one of the affiliation that is automatically added by customer
                if (indexOfItem != 0)
                {
                    affiliationIdAllSelected = conDel(affiliationIdAllSelected, indexOfItem, 1);
                }
                else // If customer's affiliation is found in current selection of affiliation, this has to be removed as a customer's affiliation
                {
                    custAffiliationIdToBeRemoved += [psAffiliations.RetailAffiliation];
                }
            }

            // Delete cutomer's affiliation, that are removed in this selection
            for (counter = 1; counter <= conlen(custAffiliationIdToBeRemoved); counter++)
            {
                recId = any2int64(conpeek(custAffiliationIdToBeRemoved, counter));

                if (recId)
                {
                    // Delete all manual aafiliation for this transaction
                    delete_from psAffiliations
                        where psAffiliations.RetailPricingSimulatorSalesTransaction == retailPricingSimulatorSalesTransaction.RecId
                        && psAffiliations.AffiliationType == RetailAffiliationType::General
                        && psAffiliations.IsManullyAdded == NoYes::No;
                }
            }

            // Add all manul affiliations
            for (counter = 1; counter <= conlen(affiliationIdAllSelected); counter++)
            {
                recId = any2int64(conpeek(affiliationIdAllSelected, counter));

                if (recId)
                {
                    psAffiliations.clear();

                    psAffiliations.RetailPricingSimulatorSalesTransaction = retailPricingSimulatorSalesTransaction.RecId;
                    psAffiliations.RetailAffiliation = recId;
                    psAffiliations.AffiliationType = RetailAffiliationType::General;
                    psAffiliations.IsManullyAdded = NoYes::Yes;
                    psAffiliations.RetailLoyaltyTier = 0;

                    psAffiliations.insert();
                }
            }

            ttsCommit;

            if (ret)
            {
                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorAffiliations_LoyaltyTier</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.saveLoyaltyTier();

                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorDiscountCode_BarCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.saveDiscountCodes();

                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnableDiagnostics</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            DiagnosticsTab.visible(this.value() == 1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorPriceGroups_PriceGroups</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (ret)
            {
                element.savePriceGroups();

                // Refresh prices and discounts.
                if (element.lineItemExists())
                {
                    element.calculatePricesAndDiscounts();
                }
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesTransaction_SalesAgreementId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            
            ret = super();
    
            if (ret && element.lineItemExists())
            {
                // Refresh prices and discounts.
                element.calculatePricesAndDiscounts();
            }
            
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SalesTable salesTable;
            salesTable.CustAccount = retailPricingSimulatorSalesTransaction.CustAccount;
            salesTable.ShippingDateRequested = DateTimeUtil::date(retailPricingSimulatorSalesTransaction.SimulationDateTime);

            SalesAgreementHeader::salesAgreementLookup(this, salesTable);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesLines_DisplayProductNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                 ret;
            ItemIdSmall             itemId;
            UnitOfMeasureSymbol     unitSymbol;
            EcoResProduct           ecoResProduct;
            RecId                   ecoResProductRecId;

            ret = super();

            if (ret)
            {
                itemId = pricingSimulatorSalesLines_DisplayProductNumber.text();
                                
                ecoResProductRecId = InventTable::find(itemId).Product;
                ecoResProduct = EcoresProduct::find(ecoResProductRecId);

                if (ecoResProduct.RecId)
                {
                    unitSymbol = InventTableModule::find(itemId, ModuleInventPurchSales::Sales).UnitId;

                    // Set sales line attributes to default values based on the product selection.
                    retailPricingSimulatorSalesLine.ProductName = ecoResProduct.productName();
                    retailPricingSimulatorSalesLine.Product = ecoResProduct.RecId;
                    retailPricingSimulatorSalesLine.Variant = 0;
                    retailPricingSimulatorSalesLine.DisplayProductVariantNumber = '';
                    retailPricingSimulatorSalesLine.UoM = UnitOfMeasure::findBySymbol(unitSymbol).RecId;
                    retailPricingSimulatorSalesLine.Quantity = 1;

                    SalesLineInventDim.InventColorId = '';
                    salesLineInventDim.InventSizeId = '';
                    salesLineInventDim.InventStyleId = '';
                    salesLineInventDim.configId = '';

                    retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;

                    // Refresh prices and discounts, only if selected product is not a product master
                    if (!ecoResProduct.isProductMaster())
                    {
                        element.calculatePricesAndDiscounts();
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesLines_DisplayProductVariantNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                         ret;
            InventDimCombination            inventDimCombination;
            RetailVariantId                 retailVariantId;

            ret = super();

            if (ret)
            {
                retailVariantId = pricingSimulatorSalesLines_DisplayProductVariantNumber.text();

                inventDimCombination = InventDimCombination::findVariantId(retailVariantId);

                if (inventDimCombination.RecId) // If a valid variant is selected
                {
                    retailPricingSimulatorSalesLine.Variant = inventDimCombination.DistinctProductVariant;

                    InventDim variantInventDim = InventDim::find(inventDimCombination.InventDimId);

                    salesLineInventDim.InventColorId = variantInventDim.InventColorId;
                    salesLineInventDim.inventSizeId = variantInventDim.InventSizeId;
                    salesLineInventDim.InventStyleId = variantInventDim.InventStyleId;
                    salesLineInventDim.configId = variantInventDim.configId;

                    retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).inventDimId;

                    // Refresh prices and discounts
                    element.calculatePricesAndDiscounts();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesLines_UoM</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;
            ItemId itemId = pricingSimulatorSalesLines_DisplayProductNumber.text();
            UnitOfMeasureSymbol unitSymbol;

            // Find out the From Unit of measure
            if (itemId)
            {
                // Item's inventory unit.
                unitSymbol = InventTableModule::find(itemId, ModuleInventPurchSales::Invent).UnitId;
            }

            //UoM lookup
            // Lookup will show all convertible units for inventory unit of item.
            ret = UnitOfMeasureLookup::lookupReference(this,
                    true,
                    UnitOfMeasure::findBySymbol(unitSymbol).RecId,
                    retailPricingSimulatorSalesLine.Product);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                // Refresh prices and discounts
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_configId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventSizeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventColorId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventStyleId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_wMSLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_InventStatusId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_LicensePlateId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_inventBatchId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensionsGrid_inventSerialId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                retailPricingSimulatorSalesLine.InventDimId = InventDim::findOrCreate(salesLineInventDim).InventDimId;
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PricingSimulatorSalesLines_Quantity</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                // Refresh prices and discounts.
                element.calculatePricesAndDiscounts();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorSalesTransaction</Name>
			<Table>RetailPricingSimulatorSalesTransaction</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ChannelCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeDisabledDiscounts</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineItemCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PricingDiagnostics</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannelTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SimulationDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SimulationName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalDiscount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalMargin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionTotal</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorSalesLine</Name>
			<Table>RetailPricingSimulatorSalesLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayProductNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayProductVariantNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Margin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OfferName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPricingSimulatorSalesTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UoM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Variant</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesTransaction</JoinSource>
			<CounterField>SalesLineNum</CounterField>
			<Index>SimulatorSalesLineIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorDiscount</Name>
			<Table>RetailPricingSimulatorDiscount</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ConcurrencyMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateValidationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Disclaimer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountPercentValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDiscountCodeRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OfferId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodicDiscountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PricingPriorityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPricingSimulatorTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationPeriodId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesTransaction</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorPriceDiscTable</Name>
			<Table>RetailPricingSimulatorPriceDiscTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfigurationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percent1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percent2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPricingSimulatorTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTransactionLineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesTransaction</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorPromotion</Name>
			<Table>RetailPricingSimulatorDiscount</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ConcurrencyMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateValidationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Disclaimer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountPercentValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDiscountCodeRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OfferId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodicDiscountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PricingPriorityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPricingSimulatorTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationPeriodId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesTransaction</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingSimulatorSalesAgreement</Name>
			<Table>RetailPricingSimulatorSalesAgreement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommitmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfigurationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPriceAndDiscountFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxIsEnforced</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailPricingSimulatorTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesAgreementHeaderRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesAgreementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesAgreementLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Unit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesTransaction</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesLineInventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension12</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA3HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailPricingSimulatorSalesLine</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Retail:PricingSimulator</Caption>
		<DataSource xmlns="">RetailPricingSimulatorSalesTransaction</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RecordBasics</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>NewButton</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<Command>New</Command>
								<NormalImage>Add</NormalImage>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CopyButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@Retail:CopyPricingSimulation</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RetailPricingSimulatorCopyList</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@RET3843</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PricingSimulatorSalesTransaction_SimulationName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>SimulationName</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PricingSimulatorSalesTransaction_Description</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PricingSimulatorSalesTransaction_SimulationName1</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>SimulationName</DataField>
						<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PricingSimulatorSalesTransaction_Description1</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>tabPageGeneral</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Column</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>grpLeftColumn</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PricingSimulatorSalesTransaction_RetailChannelTable</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
										<Label>@SYS88563</Label>
										<ReferenceField>RetailChannelTable</ReferenceField>
										<ReplacementFieldGroup>OperatingUnit</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesTransaction_ChannelCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ChannelCurrency</DataField>
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PricingSimulatorSalesTransaction_SimulationDateTime</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>SimulationDateTime</DataField>
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
										<Label>@SYS112412</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PricingSimulatorSalesTransaction_ChannelDateTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>channelDateTime</DataMethod>
										<Label>@Retail:RetailPriceSimulatorChannelDateTime</Label>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PricingSimulatorSalesTransaction_IncludeDisabledDiscounts</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@RetailPricing:PricingSimulatorSalesTransaction_IncludeDisabledDiscounts_ToolTip</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncludeDisabledDiscounts</DataField>
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
										<Label>@Retail:IncludeDisabledDiscountLabel</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>grpRightColumn</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorCatalogs_Catalogs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS334080</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesTransaction_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorAffiliations_Affiliations</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@REX51</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorAffiliations_LoyaltyTier</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@REX4160324</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorDiscountCode_BarCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@Retail:RetailCouponCodeTable</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>EnableDiagnostics</Name>
										<HelpText>@Retail:EnableDiagnosticsHelp</HelpText>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Retail:EnableDiagnosticsLabel</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorPriceGroups_PriceGroups</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Retail:RetailPriceGroups</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesTransaction_SalesAgreementId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesAgreementId</DataField>
										<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS35893</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PricingSimulatorSalesLinesTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>Column</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>PricingSimulatorSalesLinesActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>PricingSimulatorSalesLinesActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>BasicButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddSalesLine</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<MultiSelect>Yes</MultiSelect>
														<NormalImage>Add</NormalImage>
														<Text>@SYS319116</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveSalesLines</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<MultiSelect>Yes</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS311855</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>RetailPricingSimulatorSalesLine</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>RetailPricingSimulatorSalesLine</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PricingSimulatorSalesLinesGrid</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesLines_DisplayProductNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>330382098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DisplayProductNumber</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesLines_DisplayProductVariantNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DisplayProductVariantNumber</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesLines_ProductName</Name>
										<ElementPosition>660764196</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProductName</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PricingSimulatorSalesLines_UoM</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Mandatory>Yes</Mandatory>
										<ReferenceField>UoM</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PricingSimulatorSalesLines_InventoryDimensionsGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1419725293</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension1</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension1</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension2</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension2</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension3</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension3</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension4</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension4</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension5</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension5</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension6</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension6</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension7</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension7</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension8</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension8</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateTimeControl">
												<Name>InventoryDimensionsGrid_InventDimension9</Name>
												<Type>DateTime</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension9</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventoryDimensionsGrid_InventDimension10</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension10</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension11</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension11</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventDimension12</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventDimension12</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>SalesLineInventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>SalesLineInventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_Quantity</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Quantity</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Mandatory>Yes</Mandatory>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_OriginalPrice</Name>
										<ElementPosition>1156337343</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalPrice</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Label>@MCR11528</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_SalesPrice</Name>
										<ElementPosition>1321528392</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Label>@SYS5755</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PricingSimulatorSalesLines_OfferName</Name>
										<ElementPosition>1486719441</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OfferName</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Label>@RET6318</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_DiscountAmount</Name>
										<ElementPosition>1651910490</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscountAmount</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Label>@SYS182433</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_DiscPct</Name>
										<ElementPosition>1817101539</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscPct</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PricingSimulatorSalesLines_Margin</Name>
										<ElementPosition>1982292592</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Margin</DataField>
										<DataSource>RetailPricingSimulatorSalesLine</DataSource>
										<Label>@MCR36320</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>RetailPricingSimulatorSalesLine</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@MCR10727</Caption>
						<DataSource>RetailPricingSimulatorSalesLine</DataSource>
						<Scrollbars>Auto</Scrollbars>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PricingSimulatorSalesTransSummaryTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Column</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PricingSimulatorSalesTransaction_LineItemCount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>LineItemCount</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
								<Label>@Retail:LineItemCount</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PricingSimulatorSalesTransaction_TransactionTotal</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransactionTotal</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
								<Label>@SYS7470</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PricingSimulatorSalesTransaction_TotalDiscount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TotalDiscount</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
								<Label>@RET3621</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PricingSimulatorSalesTransaction_TotalMargin</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TotalMargin</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
								<Label>@Retail:TotalMarginPercent</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@Retail:TransactionSummary</Caption>
						<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RetailDiscountSummaryTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RetailDiscountGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailPricingSimulatorDiscount_Selected</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Selected</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
										<Label>@Retail:IsApplied</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorDiscount_OfferId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OfferId</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorDiscount_Name</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorDiscount_Status</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Status</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorDiscount_ConcurrencyMode</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ConcurrencyMode</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorDiscount_PeriodicDiscountType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodicDiscountType</DataField>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorDiscount_DiscountMethod</Name>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>DiscountMethod</DataMethod>
										<DataSource>RetailPricingSimulatorDiscount</DataSource>
										<Label>@RET5013</Label>
									</AxFormControl>
								</Controls>
								<DataSource>RetailPricingSimulatorDiscount</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@REX4520128</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TradeAgreementSummaryTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>TradeAgreementGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPriceDiscTable_relation</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>relation</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPriceDiscTable_AccountCode</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountCode</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_AccountRelation</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountRelation</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPriceDiscTable_ItemCode</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
										<Label>@SYS8631</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_ItemRelation</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemRelation</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
										<Label>@SYS58740</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_ColorId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ColorId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_SizeId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SizeId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_StyleId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StyleId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_SiteId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SiteId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_WarehouseId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WarehouseId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPriceDiscTable_UnitId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitId</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorPriceDiscTable_Amount</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorPriceDiscTable_Percent1</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Percent1</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorPriceDiscTable_Percent2</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Percent2</DataField>
										<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RetailPricingSimulatorPriceDiscTable</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS28190</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RetailPriceAdjustmentsSummaryTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PriceAdjustmentGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailPricingSimulatorPromotion_Selected</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Selected</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPromotion_OfferId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OfferId</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorPromotion_Name</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPromotion_Status</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Status</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPromotion_ConcurrencyMode</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ConcurrencyMode</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorPromotion_PeriodicDiscountType</Name>
										<Type>ComboBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodicDiscountType</DataField>
										<DataSource>RetailPricingSimulatorPromotion</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>RetailPricingSimulatorPromotion</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@RET3794</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RetailSalesAgreementSummaryTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SalesAgreementGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailPricingSimulatorSalesAgreement_Selected</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Selected</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
										<Label>@Retail:IsApplied</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_SalesAgreementId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesAgreementId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_ItemId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_ColorId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ColorId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_SizeId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SizeId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_StyleId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StyleId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_SiteId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SiteId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_WarehouseId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WarehouseId</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RetailPricingSimulatorSalesAgreement_CommitmentType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CommitmentType</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorSalesAgreement_DiscountAmount</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscountAmount</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorSalesAgreement_DiscountPercentage</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscountPercentage</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorSalesAgreement_Price</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Price</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RetailPricingSimulatorSalesAgreement_PriceUnit</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PriceUnit</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailPricingSimulatorSalesAgreement_Unit</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Unit</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailPricingSimulatorSalesAgreement_MaxIsEnforced</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaxIsEnforced</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailPricingSimulatorSalesAgreement_IsPriceAndDiscountFixed</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsPriceAndDiscountFixed</DataField>
										<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RetailPricingSimulatorSalesAgreement</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS302515</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DiagnosticsTab</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FillText</Pattern>
						<PatternVersion>UX7 1.0</PatternVersion>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RetailPricingSimulatorSalesTransaction_PricingDiagnostics</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PricingDiagnostics</DataField>
								<DataSource>RetailPricingSimulatorSalesTransaction</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Retail:PricingDiagnosticsCaption</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>