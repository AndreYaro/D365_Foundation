<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchRFQEditLinesParameters</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class PurchRFQEditLinesParameters extends FormRun
    {
        PurchRFQEditLinesForm   purchRFQEditLinesForm;
        PurchRFQFormLetter      purchRFQFormLetter;

        PurchRFQUpdate          specQty;
        PurchRFQStatusFilter    lineStatusFilter;
        PurchRFQReasonId        reasonId;
        ReasonComment           reasonComment;
        LateSelection           lateSelection;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[

    /// <summary>
    /// Calls the <c>setExternalParameters</c> in the <c>PurchRFQEditLines</c> form, when the OK button is clicked.
    /// </summary>
    public void closeOk()
    {
        super();
        element.args().caller().setExternalParameters(specQty,lineStatusFilter,reasonId,reasonComment,lateSelection);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editLateSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the late selection field.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicate if the late selection is to be set.
    /// </param>
    /// <param name="_lateSelection">
    /// The value of the late selection.
    /// </param>
    /// <returns>
    /// The value of the late selection.
    /// </returns>
    public edit LateSelection editLateSelection(boolean _set,LateSelection _lateSelection)
    {
        PurchRFQParmUpdate  purchRFQParmUpdate;

        if  (_set)
        {
            purchRFQParmUpdate = element.args().record();

            if  (purchRFQParmUpdate.TableId == tableNum(PurchRFQParmUpdate))
            {
                purchRFQParmUpdate.LateSelection = _lateSelection;
                purchRFQFormLetter.purchRFQParmUpdate(purchRFQParmUpdate);

                if (purchRFQFormLetter.lateSelectionRemoveLines())
                {
                    lateSelection = _lateSelection;
                }
            }
        }

        return lateSelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editLineStatusFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the line status filter.
    /// </summary>
    /// <param name="_set">
    /// A boolean to indicate if the line status is to be set.
    /// </param>
    /// <param name="_lineStatusFilter">
    /// The line status filter value.
    /// </param>
    /// <returns>
    /// The line status filter value.
    /// </returns>
    public edit PurchRFQStatusFilter editLineStatusFilter(boolean _set,PurchRFQStatusFilter _lineStatusFilter)
    {
        if  (_set)
        {
            lineStatusFilter = _lineStatusFilter;
        }
        return lineStatusFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the reason comment field.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicate if the reason comment is to be set.
    /// </param>
    /// <param name="_reasonComment">
    /// The reason comment.
    /// </param>
    /// <returns>
    /// The reason comment.
    /// </returns>
    public edit ReasonComment editReasonComment(boolean _set,ReasonComment _reasonComment)
    {
        if  (_set)
        {
            reasonComment = _reasonComment;
        }
        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the reason ID.
    /// </summary>
    /// <param name="_set">
    /// A boolean to indicate if the reason ID is to be set.
    /// </param>
    /// <param name="_reasonId">
    /// The reason ID.
    /// </param>
    /// <returns>
    /// The reason ID.
    /// </returns>
    public edit PurchRFQReasonId editReasonId(boolean _set,PurchRFQReasonId _reasonId)
    {
        ReasonTable reasonTable;

        if  (_set)
        {
            reasonId = _reasonId;

            reasonTable = ReasonTable::find(reasonId);
            reasonComment = reasonTable.Description;
            form_ReasonComment.text(reasonTable.Description);
            form_ReasonComment.update();
        }
        return reasonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSpecQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the selection field.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicate if the selection is to be set.
    /// </param>
    /// <param name="_specQty">
    /// The selection value.
    /// </param>
    /// <returns>
    /// The selection value.
    /// </returns>
    public edit PurchRFQUpdate editSpecQty(boolean _set,PurchRFQUpdate _specQty)
    {
        if  (_set)
        {
            specQty = _specQty;
        }
        return specQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form, and sets the parameters variables, as well as the <c>PurchRFQEditLinesForm</c> and
    /// <c>purchRFQFormLetter</c> objects.
    /// </summary>
    public void init()
    {
        boolean     parametersCalled;
        super();

        purchRFQEditLinesForm = this.args().caller().parmPurchRFQEditLinesForm();
        purchRFQFormLetter    = this.args().caller().parmPurchRFQFormLetter();

        [specQty,lineStatusFilter,reasonId,reasonComment,lateSelection,parametersCalled] = this.args().caller().getExternalParameters();

        if  (!parametersCalled)
        {
            specQty = PurchRFQUpdate::All;  // Default on first time to "All"
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLineSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes not-applicable dropdown values from the line status enum field.
    /// </summary>
    void initLineSelection()
    {
        DictEnum enum = new DictEnum(enumNum(PurchRFQStatusFilter));

        form_LineStatusFilter.delete(enum.value2Label(PurchRFQStatusFilter::Received));
        form_LineStatusFilter.delete(enum.value2Label(PurchRFQStatusFilter::Rejected));
        form_LineStatusFilter.delete(enum.value2Label(PurchRFQStatusFilter::Accepted));
        form_LineStatusFilter.selection(lineStatusFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSpecQtySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the selection field.
    /// </summary>
    void initSpecQtySelection()
    {
        form_SpecQty.selection(specQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes visibility on selected fields, paints the form and initialize form field values.
    /// </summary>
    void  run()
    {
        form_ReasonId.label(purchRFQEditLinesForm.reasonCodeCaption());

        form_LateSelection.visible(purchRFQEditLinesForm.lateSelection());
        form_SpecQty.visible(purchRFQEditLinesForm.specQty());
        form_ReasonId.visible(purchRFQEditLinesForm.reasonCode());
        form_ReasonComment.visible(purchRFQEditLinesForm.reasonCode());
        form_LineStatusFilter.visible(purchRFQEditLinesForm.lineStatusFilter());

        super();

        if (purchRFQEditLinesForm.lineStatusFilter())
        {
            this.initLineSelection();
        }

        if (purchRFQEditLinesForm.specQty())
        {
            this.initSpecQtySelection();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Form_ReasonId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
                public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange;
            SysTableLookup          sysTableLookup;

            sysTableLookup = SysTableLookup::newParameters(tableNum(ReasonTable), this);

            //Add the Fields to be shown in the lookup form
            sysTableLookup.addLookupfield(fieldNum(ReasonTable, Reason), true);
            sysTableLookup.addLookupfield(fieldNum(ReasonTable, Description));

            //create the query datasource
            queryBuildDataSource = query.addDataSource(tableNum(ReasonTable));

            //To make sure the reason code can be used with transactions that have a vendor transaction type
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(ReasonTable, Vend));
            queryBuildRange.value(queryValue(NoYes::Yes));

            //Assign the query to the lookup form
            sysTableLookup.parmQuery(query);

            //Perform lookup
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
                public boolean validate()
        {
            ReasonTable reasonTableLocal;
            ReasonCode  currentReasonCode;
            boolean     ret;

            currentReasonCode = form_ReasonId.text();

            ret = super();

            if (ret)
            {
                select firstonly RecId from reasonTableLocal
                    where reasonTableLocal.Reason == currentReasonCode &&
                          reasonTableLocal.Vend == NoYes::Yes;
                if (!reasonTableLocal)
                {
                    ret = checkFailed(strFmt("@SYS112224",currentReasonCode,"@SYS111246","@SYS111245"));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS27350</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupParameters</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Form_SpecQty</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS1511</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editSpecQty</DataMethod>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Form_LineStatusFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editLineStatusFilter</DataMethod>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Form_ReasonId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editReasonId</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Form_ReasonComment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editReasonComment</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>Form_LateSelection</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editLateSelection</DataMethod>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@SYS35881</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroupParm</Name>
				<ElementPosition>1879048185</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkCommandButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoRight</LeftMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
