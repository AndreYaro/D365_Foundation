<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvRequisitionDetails</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvRequisitionDetails extends FormRun implements TrvIDimensionEnabled, TrvIUpdateEnabled
{
    NumberSeqFormHandler            numberSeqFormHandler;
    TrvNewExpenseReportParameter    newExpenseReportParameter;
    boolean                         ignoreSaveOperations = false;

}
]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and returns an instance of the number sequence form handler.
    /// </summary>
    /// <returns>
    /// An instance of the number sequence handler for the form.
    /// </returns>
    public NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(TrvParameters::numRefRequisitionNumber().NumberSequenceId,
                                                             element,
                                                             TrvRequisitionTable_DS,
                                                             fieldNum(TrvRequisitionTable,RequisitionNumber));
        }
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the values with relevant data and visibilities for fields on the form.
    /// </summary>
    public void run()
    {
        super();

        if (element.args().record() && element.args().OpenMode() == OpenMode::Edit)
        {
            TrvRequisitionTable.data(TrvRequisitionTable::find(element.args().record().RecId));
            TrvRequisitionTable_DS.query().dataSourceName(tablestr(TrvRequisitionTable)).addRange(fieldnum(TrvRequisitionTable, RecId)).value(queryValue(element.args().record().RecId));
            if (TrvRequisitionTable.isEditable())
            {
                element.design().caption("@SYS153191");
            }
            else
            {
                element.design().caption("@SYS153193");
            }
        }
        else if (element.args().openMode() == OpenMode::New)
        {
            if (newExpenseReportParameter && newExpenseReportParameter.parmTrvWorkerParameter()
                                         && newExpenseReportParameter.parmTrvWorkerParameter().parmHcmWorkerRecId())
            {
                TrvRequisitionTable_DS.object(fieldNum(TrvRequisitionTable, CreatingWorker)).setValue(newExpenseReportParameter.parmTrvWorkerParameter().parmHcmWorkerRecId());
            }
            else
            {
                throw error("@SYS22996");
            }

            TrvRequisitionTable_DS.object(fieldNum(TrvRequisitionTable, ApprovalStatus)).setValue(TrvRequisitionApprovalStatus::Create);
            element.design().caption("@SYS153189");
            
        }
        element.setControlEditability();

        // Set the dialog size/width based on whether the dimensions control is visible, since the control needs more width.
        this.design().dialogSize(1);
        element.updateDefaultDimensionCurrentCompany();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>TrvNewExpenseReportParameter</c> passed to this form by the calling form.
    /// </summary>
    public void init()
    {
        super();
        newExpenseReportParameter = element.args().parmObject();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionControlVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set dimension control's visibility as the visible and enabled method on data source field does not work for reference group.
    /// </summary>
    public void setDimensionControlVisibility()
    {
        FormDataObject formDataObject = TrvRequisitionTable_DS.object(fieldnum(TrvExpTable, DefaultDimension));

        TrvRequisitionTable_DefaultDimension.visible(formDataObject.visible());
        // Check allowEdit property on the data source instead of data field,
        // as it will be set to false when the expense report is not editable in visibility manager.
        TrvRequisitionTable_DefaultDimension.allowEdit(TrvRequisitionTable_DS.allowEdit() && formDataObject.allowEdit());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlEditability</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set controls editability.
    /// </summary>
    public void setControlEditability()
    {
        TrvRequisitionTable_TravelPurpose.allowEdit(TrvRequisitionTable.isEditable());
        TrvRequisitionTable_Destination.allowEdit(TrvRequisitionTable.isEditable());
        TrvRequisitionTable_Description.allowEdit(TrvRequisitionTable.isEditable());
        TrvRequisitionTable_DefaultDimension.allowEdit(TrvRequisitionTable.isEditable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDefaultDimensionCurrentCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the Dimension Entry Control current company if it does not match with the expense line's legal entity name.
    /// </summary>
    public void updateDefaultDimensionCurrentCompany()
    {
        if (TrvRequisitionTable_DefaultDimension.visible())
        {
            TrvRequisitionTable_DefaultDimension.parmCompany(TrvRequisitionTable.ReferenceDataAreaId);

            // Due to a limitation on the framework, executing TrvRequisitionTable_DefaultDimension.reactivate() triggers a spurious
            // TrvRequisitionTable save. The undesirable side effect is that a new record could be created if the user starts creating
            // a new travel requisition but then cancels. The ignoreSaveOperations flag is a workaround to this, allowing the
            // Dimension Entry Control to remain in this form.
            try
            {
                ignoreSaveOperations = true;
                TrvRequisitionTable_DefaultDimension.reactivate();
            }
            finally
            {
                ignoreSaveOperations = false;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCallerDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh the caller data source to reflect the recent changes made by the user in the form.
    /// </summary>
    public void refreshCallerDataSource()
    {
        FormDataSource callerEntityDataSource;

        if (element.args().record())
        {
            callerEntityDataSource = FormDataUtil::getFormDataSource(element.args().record());

            if (callerEntityDataSource)
            {
                // Update the caller form's entity.
                callerEntityDataSource.reread();
                callerEntityDataSource.refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the form and possibly bubble up the call.
    /// </summary>
    public void updateForm()
    {
        TrvIUpdateEnabled updateEnabledCaller;

        // There is nothing to refresh here, bubbling up the call.
        if (element.args())
        {
            updateEnabledCaller = element.args().caller() as TrvIUpdateEnabled;
            if (updateEnabledCaller)
            {
                updateEnabledCaller.updateForm();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openDetailsPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Open the details for the travel requisition
    /// </summary>
    /// <param name = "_isNewOpenMode">
    /// Whether details page should be opened in new mode witn an empty record inserted
    /// </param>
    public void openDetailsPage(boolean _isNewOpenMode)
    {
        Args args = new Args();
        args.caller(element);
        args.record(trvRequisitionTable);

        if (_isNewOpenMode)
        {
            args.openMode(OpenMode::New);
        }

        new MenuFunction(MenuItemDisplayStr(TrvRequisitions), MenuItemType::Display).run(Args);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvRequisitionTable</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets the number sequence on create.
        /// </summary>
        /// <param name = "_append">
        /// The parameter determines insert relative to current cursor position.
        /// </param>
        public void create(boolean _append = false)
        {
            if (!ignoreSaveOperations)
            {
                super(_append);
                element.numberSeqFormHandler().formMethodDataSourceCreatePre();
                element.numberSeqFormHandler().formMethodDataSourceCreate();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the number sequence on delete.
        /// </summary>
        public void delete()
        {
            element.numberSeqFormHandler().formMethodDataSourceDelete();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the number sequence on write.
        /// </summary>
        public void write()
        {
            if (!ignoreSaveOperations)
            {
                element.numberSeqFormHandler().formMethodDataSourceWrite();
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TrvRequisitionTable_TravelPurpose</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open purposes lookup.
        /// </summary>
        public void lookup()
        {
            TrvExpenseLookupHelper::createExpenseReportPurposeLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvRequisitionTable_Destination</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open lookup with location.
        /// </summary>
        public void lookup()
        {
            TrvExpenseLookupHelper::createExpenseReportLocationLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Redirects the user to expense lines page after creating a new travel requisition.
        /// </summary>
        public void clicked()
        {
            super();

            if (element.args().openMode() == OpenMode::Edit)
            {
                element.refreshCallerDataSource();
            }

            // If this is a new record and save succeeded, navigate to the travel requisition details page.
            if (element.args().openMode() == OpenMode::New && trvRequisitionTable.RecId != 0)
            {
                element.openDetailsPage(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvRequisitionTable</Name>
			<Table>TrvRequisitionTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Destination</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReconciliationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TravelPurpose</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:TravelRequisitionDetails</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>RequisitionFieldsGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Content</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvRequisitionTable_TravelPurpose</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TravelPurpose</DataField>
								<DataSource>TrvRequisitionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvRequisitionTable_Destination</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Destination</DataField>
								<DataSource>TrvRequisitionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvRequisitionTable_Description</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>TrvRequisitionTable</DataSource>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>RequisitionContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>DimensionEntryControl</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>EmptyGroup</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<ColumnsMode>Fill</ColumnsMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DimensionFieldsGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>TrvRequisitionTable_DefaultDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>TrvRequisitionTable</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<HideIfEmpty>No</HideIfEmpty>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>RequisitionAction</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>