<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PCRuntimeConfiguratorValidate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PCRuntimeConfiguratorValidate extends FormRun
{
    str                         xmlModel;
    str                         xmlValidationFocus;
    PCProductConfigurationModel model;

}
]]></Source>
			</Method>
			<Method>
				<Name>parmXmlModel</Name>
				<Source><![CDATA[
    public str parmXmlModel(str _xmlModel = xmlModel)
    {
        xmlModel = _xmlModel;

        return xmlModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmXmlValidationFocus</Name>
				<Source><![CDATA[
    public str parmXmlValidationFocus(str _xmlValidationFocus = xmlValidationFocus)
    {
        xmlValidationFocus = _xmlValidationFocus;

        return xmlValidationFocus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        Object    caller = element.args().caller();
        PCClass   subComponent;

        PCRuntimeConfiguratorValidate runtimeConfiguratorValidate = PCRuntimeConfiguratorValidate::construct();

        model = element.args().record();
        if (!model)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        if (caller && caller.name() == formstr(PCProductConfigurationModelDetails))
        {
            subComponent = PCProductModelDetailsController::getCommonComponent(caller.selectedComponentPath());
        }

        if (xmlModel == '')
        {
            if ( subcomponent.RecId != 0 )
            {
                xmlModel = PCRuntimeLibrary::getSubModelXML(subComponent, PCPriceMethod::Cost, PCRuntimePriceModelInstance::construct());
            }
            else
            {
                xmlModel = PCRuntimeLibrary::getModelXML(model, null, PCPriceMethod::Cost, PCRuntimePriceModelInstance::construct());
            }
        }

        PCRuntimeValidateControl.xmlModel(xmlModel);
        PCRuntimeValidateControl.xmlModelValidationFocus(xmlValidationFocus);
        PCRuntimeValidateControl.solverStrategy(model.getSolverStrategy());
        PCRuntimeValidateControl.correlationId(strFmt('%1', getCurrentThreadActivityId()));
        PCRuntimeValidateControl.jsonEnabledFeatures(PCRuntimeFeaturesJson::instance().enabledFeatures());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PCRuntimeValidateControl</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>ValidationCompleted</Name>
						<Source><![CDATA[
        public void ValidationCompleted(str _args)
        {
            var result = new Microsoft.Dynamics.Ax.Frameworks.Controls.ProductConfiguration.ProductConfigurationValidationEventArgs();
            Microsoft.Dynamics.Ax.Frameworks.Controls.ProductConfiguration.ProductConfigurationValidationEventArgs args = new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(_args, result.GetType());

            if (args.get_Validity() == Microsoft.Dynamics.Ax.Frameworks.Controls.ProductConfiguration.ConfigurationValidity::Valid)
            {
                MainInstruction.text('@SYS40526');
            }
            else if (args.get_Validity() == Microsoft.Dynamics.Ax.Frameworks.Controls.ProductConfiguration.ConfigurationValidity::InvalidSyntax)
            {
                MainInstruction.text('@SYS104505');
                if (args.get_Error() != null)
                {
                    Message.text(PCRuntimeErrorHandler::construct().handleError(args.get_Error()));
                }
            }
            else if (args.get_Validity() == Microsoft.Dynamics.Ax.Frameworks.Controls.ProductConfiguration.ConfigurationValidity::Contradiction)
            {
                MainInstruction.text('@SYS330961');
            }
            else
            {
                error(error::wrongUseOfFunction(funcName()));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS183826</Caption>
		<Pattern xmlns="">DialogReadOnly</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>MainGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>MainInstruction</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Skip>Yes</Skip>
						<Type>StaticText</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@GLS130210</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>grpMessage</Name>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Message</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SCM:PCRuntimeConfiguratorValidate_Message</Label>
								<LookupOnly>Yes</LookupOnly>
								<MultiLine>Yes</MultiLine>
								<ShowLabel>No</ShowLabel>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS80118</Caption>
					</AxFormControl>
					<AxFormControl>
						<Name>PCRuntimeValidateControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FormControlExtension>
							<Name>PCRuntimeValidateControl</Name>
							<ExtensionComponents />
							<ExtensionProperties />
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>btnGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>btnClose</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS15212</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>