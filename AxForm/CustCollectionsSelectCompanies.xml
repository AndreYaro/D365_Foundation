<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustCollectionsSelectCompanies</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustCollectionsSelectCompanies extends FormRun
{
    private const int ColumnCheckBox = 1;
    private const int ColumnCompanyId = 2;
    private const int ColumnCompanyName = 3;

}
]]></Source>
			</Method>
			<Method>
				<Name>getSelectedCompanies</Name>
				<Source><![CDATA[
    private Set getSelectedCompanies()
    {
        var selectedCompanies = new Set(Types::String);
        var companyCount = CompaniesList.rows();

        for (var i = 1; i <= companyCount; i++)
        {
            if (CompaniesList.cell(ColumnCheckBox, i).data())
            {
                selectedCompanies.add(CompaniesList.cell(ColumnCompanyId, i).data());
            }
        }

        return selectedCompanies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        var caller = element.args().caller();
        this.populateCompaniesList(caller.parmAllCompanies(), caller.parmSelectedCompanies());
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateCompaniesList</Name>
				<Source><![CDATA[
    protected void populateCompaniesList(container _allCompanies, container _selectedCompanies)
    {
        var allCompaniesCount = conlen(_allCompanies);

        CompaniesList.rows(allCompaniesCount);
        CompaniesList.setColLabel(ColumnCompanyId, "@SYS14025");
        CompaniesList.setColLabel(ColumnCompanyName, "@SYS115442");

        for (var i = 1; i <= allCompaniesCount; i++)
        {
            DataAreaId dataAreaId = conPeek(_allCompanies, i);
            DataArea dataArea;
            select firstonly name from dataArea where dataArea.id == dataAreaId;

            CompaniesList.cell(ColumnCheckBox, i).data(confind(_selectedCompanies, dataAreaId) > 0);
            CompaniesList.cell(ColumnCompanyId, i).data(dataAreaId);
            CompaniesList.cell(ColumnCompanyName, i).data(dataArea.name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAll</Name>
				<Source><![CDATA[
    private void setAll(boolean _selected)
    {
        var companyCount = CompaniesList.rows();

        for (var i = 1; i <= companyCount; i++)
        {
            CompaniesList.cell(ColumnCheckBox, i).data(_selected);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        if (_taskId == #taskEnter)
        {
            if (okButton.enabled())
            {
                okButton.clicked();
            }
            return 0;
        }
        else
        {
            return super(_taskId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableOKButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable OK button if any company is selected, otherwise disable it.
    /// </summary>
    private void enableOKButton()
    {
        OKButton.enabled(!element.getSelectedCompanies().empty());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SelectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.setAll(true);
            element.enableOKButton();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectNone</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.setAll(false);
            element.enableOKButton();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompaniesList</Name>
				<Type>Table</Type>
				<Methods>
					<Method>
						<Name>editControl</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the control based on cell's column and row index.
        /// </summary>
        /// <param name = "_Column">The column index of table cell</param>
        /// <param name = "_Row">The row index of table cell</param>
        /// <returns>If column index equals to 1, returns the CheckBox control; 2, returns CompanyIdentifider String control, 3, returns CompanyName String ctonrol.</returns>
        public FormControl editControl(int _Column, int _Row)
        {
            if (_Column == ColumnCheckBox)
            {
                return Selected;
            }
            else if (_Column == ColumnCompanyId)
            {
                return CompanyId;
            }
            else
            {
                return CompanyName;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Selected</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.enableOKButton();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            var caller = element.args().caller();
            var enumerateCompanies = element.getSelectedCompanies().getEnumerator();
            container companies;

            while (enumerateCompanies.moveNext())
            {
                companies += enumerateCompanies.current();
            }

            caller.parmSelectedCompanies(companies);
            caller.setTouched();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS311990</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>SelectCompanyActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>SelectCompanyButtons</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<LeftMode>AutoLeft</LeftMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SelectAll</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS113182</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SelectNone</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS307298</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Columns>2</Columns>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTableControl">
						<Name>CompaniesList</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>SizeToAvailable</HeightMode>
						<NeededPermission>Manual</NeededPermission>
						<Type>Table</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>Selected</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS5965</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CompanyId</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS10499</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CompanyName</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS115442</Label>
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
						<ShowRowLabels>No</ShowRowLabels>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoRight</LeftMode>
						<Top>0</Top>
						<TopMode>BottomEdge</TopMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<LeftMargin>0</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>