<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>AssetProposalDepreciation</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class AssetProposalDepreciation extends FormRun implements AssetIProposalDepreciation
{
    #Characters
    #isoCountryRegionCodes

    AssetProposalDepreciation assetProposalDepreciation;
    CurrentOperationsTax postingLayer;

    FormBuildControl            legalEntitiesBuildControl;
    SysLookupMultiSelectCtrl    legalEntitiesMultiSelectControl;
    str                         legalEntitiesSelected;

}
]]></Source>
			</Method>
			<Method>
				<Name>getPostingLayerString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Posting Layer.
    /// </summary>
    /// <returns>
    /// The <c>PostingLayerExtended</c> value of the control.
    /// </returns>
    public AssetPostingLayerString getPostingLayerString()
    {
        return PostingLayerString.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingLayerString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the posting layer.
    /// </summary>
    /// <param name = "_postingLayer">
    /// Posting layer for the depreciation proposal.
    /// </param>
    public void setPostingLayerString(AssetPostingLayerString _postingLayer)
    {
        PostingLayerString.text(_postingLayer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Journal Name used for the proposal.
    /// </summary>
    /// <returns>
    /// The <c>PostingLayerExtended</c> value of the control.
    /// </returns>
    public LedgerJournalNameId getJournalName()
    {
        return JournalName.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChineseVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Chinese Voucher used for the proposal.
    /// </summary>
    /// <returns>
    /// The <c>LedgerVoucherTypeId_CN</c> value of the control.
    /// </returns>
    public LedgerVoucherTypeId_CN getChineseVoucher()
    {
        return ChineseVoucher.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the Journal Name.
    /// </summary>
    /// <param name = "_journalName">
    /// Journal Name for the depreciation proposal.
    /// </param>
    public void setJournalName(LedgerJournalNameId _journalName)
    {
        JournalName.text(_journalName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDepreciationToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the depreciation to date.
    /// </summary>
    /// <returns>
    /// The <c>ToDateControl</c> value of the control.
    /// </returns>
    public AssetTransDate getDepreciationToDate()
    {
        return ToDateControl.dateValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDepreciationToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the depreciation to date.
    /// </summary>
    /// <param name = "_toDate">
    /// Final date used for the depreciation proposal.
    /// </param>
    public void setDepreciationToDate(AssetTransDate _toDate)
    {
        ToDateControl.dateValue(_toDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEntitiesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the legal entities control.
    /// </summary>
    /// <param name = "_entitiesList">
    /// List of legal entities used for the depreciation proposal.
    /// </param>
    public void setEntitiesList(str _entitiesList)
    {
        EntitiesListControl.text(_entitiesList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntitiesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the legal entities.
    /// </summary>
    /// <returns>
    /// The <c>EntitiesListControl</c> value of the control.
    /// </returns>
    public str getEntitiesList()
    {
        return EntitiesListControl.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsSumDepreciation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of Summarized depreciation check box control.
    /// </summary>
    /// <param name = "_enabled">
    /// true if the summarized check box control should be enabled; otherwise, false.
    /// </param>
    public void setIsSumDepreciation(NoYes _enabled)
    {
        SummarizedDepreciationControl.checked(_enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsSumDepreciation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether the Summarized depreciation option is selected.
    /// </summary>
    /// <returns>
    /// The <c>SummarizedDepreciationControl</c> value of the control.
    /// </returns>
    public NoYes getIsSumDepreciation()
    {
        return SummarizedDepreciationControl.checked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsPostJournals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of Post journals check box control.
    /// </summary>
    /// <param name = "_enabled">
    /// true if the posting check box control should be enabled; otherwise, false.
    /// </param>
    public void setIsPostJournals(NoYes _enabled)
    {
        PostJournalControl.checked(_enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsPostJournals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether the Post journals option is selected.
    /// </summary>
    /// <returns>
    /// The <c>PostJournalControl</c> value of the control.
    /// </returns>
    public NoYes getIsPostJournals()
    {
        return PostJournalControl.checked();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Asset Ids used for the proposal.
    /// </summary>
    /// <returns>
    /// The <c>QueryAssetIdControl</c> value of the control.
    /// </returns>
    public str getQueryAssetId()
    {
        return QueryAssetIdControl.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the range value of the Asset Ids.
    /// </summary>
    /// <param name = "_queryAssetId">
    /// Asset Ids used for the depreciation proposal.
    /// </param>
    public void setQueryAssetId(str _queryAssetId)
    {
        QueryAssetIdControl.text(_queryAssetId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryBookId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Books Ids used for the proposal.
    /// </summary>
    /// <returns>
    /// The <c>QueryAssetBookControl</c> value of the control.
    /// </returns>
    public str getQueryBookId()
    {
        return QueryAssetBookControl.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryBookId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the range value of the Books Ids.
    /// </summary>
    /// <param name = "_queryBookId">
    /// Asset Ids used for the depreciation proposal.
    /// </param>
    public void setQueryBookId(str _queryBookId)
    {
        QueryAssetBookControl.text(_queryBookId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryAssetGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the value of the Asset Group Ids used for the proposal.
    /// </summary>
    /// <returns>
    /// The <c>QueryAssetGroupControl</c> value of the control.
    /// </returns>
    public str getQueryAssetGroupId()
    {
        return QueryAssetGroupControl.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryAssetGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the range value of the Asset Group Ids.
    /// </summary>
    /// <param name = "_queryAssetGroupId">
    /// Asset Ids used for the depreciation proposal.
    /// </param>
    public void setQueryAssetGroupId(str _queryAssetGroupId)
    {
        QueryAssetGroupControl.text(_queryAssetGroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalNameLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup of journal names.
    /// </summary>
    /// <param name = "_control">The control on which to apply the lookup.</param>
    public void journalNameLookup(FormStringControl _control)
    {
        SysTableLookup          sysTableLookup;
        QueryBuildDataSource    queryBuildDataSource;

        Query                   query = new Query();

        sysTableLookup = SysTableLookup::newParameters(tableNum(LedgerJournalName), _control);

        sysTableLookup.addLookupfield(fieldNum(LedgerJournalName, JournalName));
        sysTableLookup.addLookupfield(fieldNum(LedgerJournalName, Name));

        queryBuildDataSource = query.addDataSource(tableNum(LedgerJournalName));
        QueryBuildRange queryBuildRangeJournalType = queryBuildDataSource.addRange(fieldNum(LedgerJournalName, JournalType));
        queryBuildRangeJournalType.value(int2str(enum2int(LedgerJournalType::Assets)));

        QueryBuildRange queryBuildRangePostingLayer = queryBuildDataSource.addRange(fieldNum(LedgerJournalName, CurrentOperationsTax));
        CurrentOperationsTax chosenLayer =
            AssetPostingLayerXdsTmp::getValueByString(PostingLayerString.text());
        queryBuildRangePostingLayer.value(enum2str(chosenLayer));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLegalEntitiesContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will return a list of all legal entities selected for the proposal.
    /// </summary>
    /// <returns>A container with a list of legal entities</returns>
    public container getLegalEntitiesContainer()
    {
        container stringLegalEntitiesValues;
        container idLegalEntitiesValues;
        container returnValue;
        DataArea legalEntitiesTable;

        int legalEntitiesLength;
        int legalEntitiesCounter;
        SelectableDataArea entityName;

        if (legalEntitiesSelected)
        {
            stringLegalEntitiesValues = str2con(legalEntitiesSelected, #SEMICOLON);
            legalEntitiesLength = conLen(stringLegalEntitiesValues);

            if (legalEntitiesLength)
            {
                for (legalEntitiesCounter = 1; legalEntitiesCounter <= legalEntitiesLength; legalEntitiesCounter++)
                {
                    entityName = conPeek(stringLegalEntitiesValues, legalEntitiesCounter);

                    select RecId from legalEntitiesTable
                        where legalEntitiesTable.Id == entityName;

                    idLegalEntitiesValues = conIns(idLegalEntitiesValues, legalEntitiesCounter, legalEntitiesTable.RecId);
                }

                returnValue = [idLegalEntitiesValues, stringLegalEntitiesValues];
            }
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allAssetGroupLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a custom lookup for the asset's group field.
    /// </summary>
    /// <param name = "_formControl">Control associated with Asset Group Id field</param>
    public void allAssetGroupLookup(FormStringControl _formControl)
    {
        container companies = this.getAllFixedAssetInterCompanies();
        container displayFields;

        displayFields = [fieldnum(AssetGroup, GroupId),
            fieldnum(AssetGroup, DataAreaId),
            fieldnum(AssetGroup, Name)];

        this.executeAssetCrossCompanyLookup(
            _formControl,
            tablenum(AssetGroup),
            fieldnum(AssetGroup, GroupId),
            displayFields,
            companies);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allValueModelsLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a custom lookup for the asset's book field.
    /// </summary>
    /// <param name = "_formControl">Control associated with Book Id field</param>
    public void allValueModelsLookup(FormStringControl _formControl)
    {
        container companies = this.getAllFixedAssetInterCompanies();
        container displayFields;

        displayFields = [fieldnum(AssetBookTable, BookId),
            fieldnum(AssetBookTable, DataAreaId),
            fieldnum(AssetBookTable, Description)];

        this.executeAssetCrossCompanyLookup(
            _formControl,
            tablenum(AssetBookTable),
            fieldnum(AssetBookTable, BookId),
            displayFields,
            companies,
            fieldStr(AssetBookTable, CurrentOperationsTax),
            enum2Str(postingLayer));
    }

]]></Source>
			</Method>
			<Method>
				<Name>allAssetTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a custom lookup for the asset field.
    /// </summary>
    /// <param name = "_formControl">Control associated with Asset Id field</param>
    public void allAssetTableLookup(FormStringControl _formControl)
    {
        container companies = this.getAllFixedAssetInterCompanies();
        container displayFields;

        displayFields = [fieldnum(AssetTable, AssetId),
            fieldnum(AssetTable, DataAreaId),
            fieldnum(AssetTable, Name),
            fieldnum(AssetTable, AssetGroup)];

        this.executeAssetCrossCompanyLookup(
            _formControl,
            tablenum(AssetTable),
            fieldnum(AssetTable, AssetId),
            displayFields,
            companies);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllFixedAssetInterCompanies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will return a list of legal entities for which depreciation proposal is defined.
    /// </summary>
    /// <returns>A container with a list of legal entities</returns>
    public container getAllFixedAssetInterCompanies()
    {
        container companies;
        Query queryAssetLegalEntities;
        QueryRun queryRunCompanies;
        AssetProposalLegalEntitiesView legalEntity;

        queryAssetLegalEntities = new Query(queryStr(AssetProposalLegalEntitiesQuery));

        queryRunCompanies = new queryRun(queryAssetLegalEntities);

        while (queryRunCompanies.next())
        {
            if (queryRunCompanies.changed(tableNum(AssetProposalLegalEntitiesView)))
            {
                legalEntity = queryRunCompanies.get(tableNum(AssetProposalLegalEntitiesView)) as AssetProposalLegalEntitiesView;
                companies += legalEntity.id;
            }
        }
        companies += curext();

        return companies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAssetCrossCompanyLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// A common method to execute a custom lookup that uses cross company query.
    /// </summary>
    /// <param name = "_formControl">A control that custom lookup is defined</param>
    /// <param name = "_lookupTable">A table for the custom lookup</param>
    /// <param name = "_selectableLookupFiled">Field ID of column selected in the lookup</param>
    /// <param name = "_lookupColumns">A list of column used in the lookup</param>
    /// <param name = "_companies">A list of companies that cross company lookup will use</param>
    /// <param name = "_filterFieldName">An optional field id that the lookup will use</param>
    /// <param name = "_filterFieldValue">An optional field value that the lookup will use</param>
    public void executeAssetCrossCompanyLookup(
        FormControl _formControl,
        TableId _lookupTable,
        FieldId _selectableLookupFiled,
        container _lookupColumns,
        container _companies,
        str       _filterFieldName = '',
        str       _filterFieldValue = '')
    {
        SysTableLookUp lookUp;
        Query lookupQuery = new Query();
        QueryBuildDataSource lookupDataSource;
        int i;

        lookUp = SysTableLookup::newParameters(_lookupTable, _formControl, false);

        for (i= 1; i <= conlen(_lookupColumns); i++)
        {
            lookUp.addLookupfield(conpeek(_lookupColumns, i));
        }

        lookUp.addSelectionField(_selectableLookupFiled);

        if (conLen(_companies))
        {
            lookupQuery.allowCrossCompany(true);

            for (i= 1; i <= conlen(_companies); i++)
            {
                lookupQuery.addCompanyRange((conpeek(_companies, i)));
            }
        }

        lookupDataSource = lookupQuery.addDataSource(_lookupTable);

        if (_filterFieldName)
        {
            QueryFilter postingLayerFilter =
                lookupQuery.addQueryFilter(lookupDataSource, _filterFieldName);
            if (postingLayerFilter)
            {
                postingLayerFilter.value(_filterFieldValue);
            }
        }

        lookUp.parmQuery(lookupQuery);
        lookUp.parmSkipApplicationOfFilter(true);

        lookUp.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        assetProposalDepreciation = element.args().caller().runbase();

        super();

        element.initLegalEntitiesControl();

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            PostingLayerString.visible(false);
            postingLayer = CurrentOperationsTax::Current;
        }

        PostingLayerString.text(AssetPostingLayerXdsTmp::getStringByValue(postingLayer));
        JournalName.text(AssetParametersProposalJournalNames::getLedgerJournalNameId(postingLayer));

        // Hide the DialogStartGrp to hide the parameters that are added by the sys operation framework.
        dialogStartGrp.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLegalEntitiesControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method will initialize the multi selection controls that displays legal entities.
    /// </summary>
    public void initLegalEntitiesControl()
    {
        Query                   queryAssetLegalEntities;
        QueryBuildRange         qbr;
        container               selectedFields;

        queryAssetLegalEntities = new Query(queryStr(AssetProposalLegalEntitiesQuery));

        qbr = SysQuery::findOrCreateRange(
        queryAssetLegalEntities.dataSourceTable(tablenum(AssetParametersProposalJournalNames)),
            fieldNum(AssetParametersProposalJournalNames, PostingType));

        if (qbr)
        {
            qbr.value(enum2str(postingLayer));
        }

        // Force to have Legal Entity Id to be displayed in Entity list after selection.
        selectedFields = [tableNum(DataArea), fieldNum(DataArea, Id)];

        legalEntitiesMultiSelectControl = SysLookupMultiSelectCtrl::constructWithQuery(
            this, EntitiesListControl, queryAssetLegalEntities, false, selectedFields);
        legalEntitiesMultiSelectControl.set(element.getLegalEntitiesContainer());
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    // This method is needed in order for the batch framework to recognize the selections
    // the user makes in the dialog, such as whether or not to use batch processing.
    public boolean canClose()
    {
        boolean canClose = super();

        if (canClose && element.closedOk())
        {
            canClose = assetProposalDepreciation.checkCloseDialog();
        }

        return canClose;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PostingLayerString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Will assign the default journal name for a given Posting Layer value.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            postingLayer = AssetPostingLayerXdsTmp::getValueByString(this.text());
            JournalName.text(AssetParametersProposalJournalNames::getLedgerJournalNameId(postingLayer));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// A custom lookup to allow None posting layer based journal names to be displayed.
        /// </summary>
        public void lookup()
        {
            element.journalNameLookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Perform actions that are required after the field modification.
        /// </summary>
        /// <returns>true if ends correctly; otherwise false.</returns>
        public boolean modified()
        {
            boolean ret = super();

            if (ret && LedgerParameters::isChineseVoucher_CN())
            {
                ChineseVoucher.allowEdit(this.text() != "");
                ChineseVoucher.text("");
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>QueryAssetIdControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// A custom lookup to allow cross company lookup values.
        /// </summary>
        public void lookup()
        {
            element.allAssetTableLookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any assets values.
        /// </summary>
        /// <returns>Returns the value specified in the field</returns>
        public str resolveAmbiguousReference()
        {
            return this.valueStr();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any assets values.
        /// </summary>
        /// <returns>Always return true to disable the validation.</returns>
        public boolean validate()
        {
            return true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>QueryAssetGroupControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// A custom lookup to allow cross company lookup values.
        /// </summary>
        public void lookup()
        {
            element.allAssetGroupLookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any assets values.
        /// </summary>
        /// <returns>Returns the value specified in the field</returns>
        public str resolveAmbiguousReference()
        {
            return this.valueStr();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any assets values.
        /// </summary>
        /// <returns>Always return true to disable the validation.</returns>
        public boolean validate()
        {
            return true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>QueryAssetBookControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// A custom lookup to allow cross company lookup values.
        /// </summary>
        public void lookup()
        {
            element.allValueModelsLookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any books values.
        /// </summary>
        /// <returns>Always return true to disable the validation.</returns>
        public boolean validate()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disabling the validation of the values as the user is allowed to enter any books values.
        /// </summary>
        /// <returns>Returns the value specified in the field</returns>
        public str resolveAmbiguousReference()
        {
            return this.valueStr();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@FixedAssets:FA_WorkspaceTile_DepreciationProposal</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ParametersTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PostingLayerString</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>AssetPostingLayerString</ExtendedDataType>
										<LookupOnly>Yes</LookupOnly>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
										<Label>@SYS1436</Label>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ChineseVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>CN</CountryRegionCodes>
										<HelpText>@GLS54489</HelpText>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>LedgerVoucherTypeId_CN</ExtendedDataType>
										<Label>@GLS54929</Label>
									</AxFormControl>
								</Controls>
								<Caption>@FixedAssets:AssetBatchJournal</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ParametersGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ToDateControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@SYS71107</HelpText>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>AssetTransDate</ExtendedDataType>
										<Label>@SYS14656</Label>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EntitiesListControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS129100</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SummarizedDepreciationControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@FixedAssets:FA_TaskTooltip_SummarizeDepreciation</HelpText>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS78878</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PostJournalControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS86511</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS7764</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS7764</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RecordsIncludedTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedAssetQueryGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>QueryAssetIdControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS67376</Label>
										<LimitText>1000</LimitText>
										<LimitTextMode>Fixed</LimitTextMode>
										<ReplaceOnLookup>No</ReplaceOnLookup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>QueryAssetGroupControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS67417</Label>
										<ReplaceOnLookup>No</ReplaceOnLookup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>QueryAssetBookControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@FixedAssets:FA_EntityField_Book</Label>
										<ReplaceOnLookup>No</ReplaceOnLookup>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12578</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DialogStartGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@ProductFramework_Dialog:QueryTabCaption</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommit</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@FixedAssets:CreateJournalButton</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>