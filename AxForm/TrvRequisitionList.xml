<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvRequisitionList</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvRequisitionList extends FormRun implements TrvIWorkflowEnabledForm, TrvIFormRefreshWorker, TrvIUpdateEnabled
{
    NumberSeqFormHandler        numberSeqFormHandler;
    TrvWorkerParameter          trvWorkerParameter;
    str                         formCaption;
    FormDataSource              activeRequisitionDS;
    FormControl                 workflowButton;
    boolean                     isSelfServiceView = true;
    boolean                     cancelFormInitialization = false;
    const str                   personalizedViewKey = 'TrvRequisitionListLastView';

}
]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and returns an instance of the number sequence form handler.
    /// </summary>
    /// <returns>
    /// An instance of the number sequence handler for the form.
    /// </returns>
    public NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(TrvParameters::numRefRequisitionNumber().NumberSequenceId,
                                                             element,
                                                             TrvRequisitionTableView_DS,
                                                             fieldNum(trvRequisitionTableView, RequisitionNumber));
        }
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTrvWorkerParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>TrvWorkerParameter</c> parameter.
    /// </summary>
    /// <param name="_trvWorkerParameter">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>TrvWorkerParameter</c> parameter.
    /// </returns>
    public TrvWorkerParameter parmTrvWorkerParameter(TrvWorkerParameter _trvWorkerParameter = trvWorkerParameter)
    {
        trvWorkerParameter = _trvWorkerParameter;
        return trvWorkerParameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workflowActionDone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Workflow event handler. Updates the UI to reflect the status after workflow action is taken.
    /// </summary>
    void workflowActionDone(TrvWorkflowAction actionType)
    {
        if (element.configurationHelper().getConfigurationValue(personalizedViewKey) == formControlStr(TrvRequisitionList, GridViewButton)
            || !isSelfServiceView)
        {
            // If there is no grouping (i.e. form is in a grid view), reread is enough.
            activeRequisitionDS.reread();
        }
        else
        {
            // If there is grouping, the workflow action might have caused the report to switch
            // to a new group. Reread is not enough as it doesn't trigger a relayout.
            activeRequisitionDS.research();
        }

        // If TrvRequisitionTable_DS wasn't updated, do it now to guarantee that both datasources
        // remain in sync after workflow processing.
        if (activeRequisitionDS != TrvRequisitionTable_DS)
        {
            TrvRequisitionTable_DS.reread();
        }

        this.updateWorkflowControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>workflowActionFailed</Name>
				<Source><![CDATA[
    void workflowActionFailed(TrvWorkflowAction actionType)
    {
        // No op. We can consider opening the travel requisition so that user can take action on the failure.
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the worker parameter object to current worker and current legal entity,
    /// Change the caption based one the menu item.
    /// </summary>
    public void init()
    {
        if (!element.args())
        {
            throw error("@SYS22996");
        }

        TrvHcmWorkerRecId currentWorkerRecId = HcmWorkerLookup::currentWorker();

        if (!currentWorkerRecId)
        {
            // The user is not a worker; prevent the form from initializing and running.
            cancelFormInitialization = true;
        }
        else
        {
            // Set the worker parameter object to current worker and current legal entity.
            this.parmTrvWorkerParameter(TrvWorkerParameter::newStandard(currentWorkerRecId, CompanyInfo::current()));
        }

        super();

        if (cancelFormInitialization)
        {
            // The form must close because the user is not a worker.
            this.lifecycleHelper().cancelFormInitialization(Exception::Error, TrvListPageHelper::getCurrentUserNotWorkerErrorMessage(TrvRequisitionTable_DS.table()));
        }
        else
        {
            if (isSelfServiceView)
            {
                // For cards view, the DS used is TrvRequisitionTableViewDS.
                activeRequisitionDS = TrvRequisitionTableView_DS;

                this.initializeSelfServiceView();
            }
            else
            {
                activeRequisitionDS = TrvRequisitionTable_DS;
            }

            MenuFunction menuItem = new MenuFunction(element.args().menuItemName(), MenuItemType::Display);

            if (menuItem != null)
            {
                formCaption = menuItem.label();
                element.design().caption(formCaption);
            }
            else
            {
                formCaption = element.design().caption();
            }

            // Get reference to the dynamically added workflow button.
            workflowButton = element.control(element.controlId(identifierStr(WorkflowActionBarButtonGroup)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>navigateToTrvRequisitionLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will navigate to requisition expense lines form for the current requisition record.
    /// </summary>
    private void navigateToTrvRequisitionLines()
    {
        Args    args = new Args();
        args.caller(element);
        args.record(trvRequisitionTable);
        args.parmObject(element.parmTrvWorkerParameter());
        args.parmEnumType(element.args().parmEnumType());
        args.parmEnum(element.args().parmEnum());

        new MenuFunction(menuitemdisplaystr(TrvRequisitions), MenuItemType::Display).run(Args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableAppBarRequisitionActionsForWorker</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enable or disable requisition actions in the AppBar for the worker.
    /// </summary>
    /// <param name = "_allow">
    ///     A boolean parameter to indicate if the desired action is to allow or disallow.
    /// </param>
    private void enableAppBarRequisitionActionsForWorker(boolean _enable)
    {
        boolean userHasAccess = false;

        if (_enable)
        {
            // Check if worker has employment in current company or has delegate access.
            userHasAccess = TrvAccessHelper::canCreateNewTransactions(this.parmTrvWorkerParameter().parmHcmWorkerRecId());
        }

        // If travel requisitions can't be created, disallow new action through button as well as keyboard shortcuts.
        activeRequisitionDS.allowCreate(_enable && userHasAccess);
        activeRequisitionDS.allowDelete(_enable && userHasAccess);
        RequisitionCreateDelete.visible(_enable && userHasAccess);
        CreateCommandButton.enabled(_enable && userHasAccess);
        DeleteCommandButton.enabled(_enable && userHasAccess);
        TrvTravelRequisitionDuplicateDialog.visible(_enable && userHasAccess);
        CloseCommandButton.enabled(_enable && userHasAccess);
    
        ViewModesGroup.visible(_enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlsVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the app bar controls and tab controls visibility.
    /// </summary>
    private void setControlsVisibility()
    {
        // Show the Travel requisition for worker only if the current user is a delegate
        RequisitionFor.visible(TrvAppEmplSub::existForCurrentUser());
        // Allow employee app bar actions if worker has permission.
        this.enableAppBarRequisitionActionsForWorker(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableActionsBasedOnSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable or disable delete and close buttons according with the status of the selected travel requisition.
    /// If at least one travel requisition is not in create or none status the delete button will be disabled.
    /// Close button is set enable or disable by calling IsCloseable method.
    /// </summary>
    private void enableActionsBasedOnSelection()
    {
        boolean enableDeleteRequisition = DeleteCommandButton.isVisible();
        boolean enableCloseRequisition = false;
        TrvRequisitionTable selectedRequisition;
        TrvRequisitionTableView selectedRequisitionView;

        // Iterate over TrvRequisitionTableViewDS or TrvRequisitionTableDS whichever is the active one.
        if (isSelfServiceView)
        {
            selectedRequisitionView = activeRequisitionDS.getFirst(true);

            if (selectedRequisitionView == null)
            {
                selectedRequisitionView = activeRequisitionDS.cursor();
            }
        }
        else
        {
            selectedRequisition = activeRequisitionDS.getFirst(true);

            if (selectedRequisition == null)
            {
                selectedRequisition = activeRequisitionDS.cursor();
            }
        }

        // There is no need to iterate through all travel requisitions if there are selected records that will make
        // Delete and Close button to be enabled or disabled.
        while ((selectedRequisition || selectedRequisitionView) && (enableDeleteRequisition))
        {
            TrvRequisitionApprovalStatus appStatus = selectedRequisition ? selectedRequisition.ApprovalStatus : selectedRequisitionView.ApprovalStatus;
            
            if (appStatus != TrvRequisitionApprovalStatus::Create)
            {
                enableDeleteRequisition = false;
            }

            enableCloseRequisition = selectedRequisition ? selectedRequisition.isClosable() : selectedRequisitionView.isClosable();

            if (selectedRequisition)
            {
                selectedRequisition = activeRequisitionDS.getNext();
            }
            else
            {
                selectedRequisitionView = activeRequisitionDS.getNext();
            }
        }

        // Disallow deleting from this form.
        DeleteCommandButton.enabled(enableDeleteRequisition);
        activeRequisitionDS.allowDelete(enableDeleteRequisition);

        CloseCommandButton.enabled(enableCloseRequisition);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFormCaption</Name>
				<Source><![CDATA[
    private void refreshFormCaption()
    {
        TrvFormHelper::refreshFormCaption(element, element.parmTrvWorkerParameter(), formCaption, "@Expense:TravelReqUserCaption");
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExpenseWorkerContext</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Update the worker context, related filters and legal entity on requisitions.
    /// </summary>
    /// <param name = "_workerParameter">
    ///     An instance of a <c>TrvWorkerParameter</c>
    /// </param>
    public void updateExpenseWorkerContext(TrvWorkerParameter _workerParameter)
    {
        if (_workerParameter != null)
        {
            // Update the current company if it has changed as per worker
            TrvFormHelper::setCompanyContext(CompanyInfo::findRecId(_workerParameter.parmLegalEntity()).DataArea);

            if ( _workerParameter.parmHcmWorkerRecId())
            {
                // Keep the worker parameter object upto date
                this.parmTrvWorkerParameter(_workerParameter);

                // Add ranges to the TrvRequisitionTableView for the worker and related legal entity.
                TrvRequisitionTableView_DS.initQuery(_workerParameter.parmLegalEntity(), _workerParameter.parmHcmWorkerRecId());
                TrvRequisitionTableView_DS.executeQuery();

                // Refresh the TrvRequisitionTable_DS query with the new worker and legal entity values.
                TrvRequisitionTable_DS.initQuery(_workerParameter.parmLegalEntity(), _workerParameter.parmHcmWorkerRecId());
                TrvRequisitionTable_DS.executeQuery();
            }
        }

        this.refreshFormCaption();
        this.enableAppBarRequisitionActionsForWorker(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the AppBar controls.
    /// </summary>
    public void run()
    {
        super();

        if (!cancelFormInitialization)
        {
            // Form is not being cancelled; set the control visibility.
            this.setControlsVisibility();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the form and possibly bubble up the call.
    /// </summary>
    public void updateForm()
    {
        activeRequisitionDS.research(true);
        element.updateWorkflowControls();

        this.updateCallerForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCallerForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the caller form, if any.
    /// </summary>
    private void updateCallerForm()
    {
        if (element.args())
        {
            TrvIUpdateEnabled updateEnabledCaller = element.args().caller() as TrvIUpdateEnabled;
            if (updateEnabledCaller)
            {
                updateEnabledCaller.updateForm();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSelectedRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete selected requisition records.
    /// </summary>
    private void deleteSelectedRecords()
    {
        if (Box::confirm('@Expense:DeleteConfirmation'))
        {
            MultiSelectionHelper        selectionHelper;
            TrvRequisitionTableView     selectedRecord;

            element.numberSeqFormHandler().formMethodDataSourceDelete();
            selectionHelper = MultiSelectionHelper::construct();
            selectionHelper.parmDatasource(TrvRequisitionTableView_DS);
            selectedRecord = selectionHelper.getFirst();

            ttsbegin;
            while (selectedRecord)
            {
                TrvRequisitionTable::findByRequisitionNumber(selectedRecord.RequisitionNumber, true).delete();
                selectedRecord = selectionHelper.getNext();
            }
            ttscommit;

            TrvRequisitionTableView_DS.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsOnMultiSelect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable or disable appbar buttons based on multiSelect.
    /// </summary>
    private void enableButtonsOnMultiSelect()
    {
        boolean areMultipleRecordsSelected = TrvRequisitionTableView_DS.recordsMarked().lastIndex() > 1;

        // Enable these button groups if and only if a single record is selected.
        // Disable on multi select or when no records are selected.
        RequisitionActions.enabled(!areMultipleRecordsSelected && TrvRequisitionTableView.RecId);
        PrintActionsGroup.enabled(!areMultipleRecordsSelected && TrvRequisitionTableView.RecId);
        workflowButton.enabled(!areMultipleRecordsSelected && TrvRequisitionTableView.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// If the caller form is <c>TrvIUpdateEnabled</c>, call updateForm() before closing.
    /// </summary>
    public void close()
    {
        this.updateCallerForm();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeRequisitionDatasources</Name>
				<Source><![CDATA[
    /// <summary>
    /// When in cards mode (employee) both <c>TrvRequisitionTable</c> and <c>TrvRequisitionTableView</c> datasources are
    /// used and so need to be kept in sync. In grid mode, only <c>TrvRequisitionTable</c> is necessary.
    /// For the first case, if both datasources are referencing different records update <c>TrvRequisitionTable</c>
    /// to match the same record as <c>TrvRequisitionTableView</c>.
    /// </summary>
    private void synchronizeRequisitionDatasources()
    {
        if (isSelfServiceView && TrvRequisitionTable.RecId != TrvRequisitionTableView.RecId)
        {
            TrvRequisitionTable.data(TrvRequisitionTable::find(activeRequisitionDS.cursor().RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSelfServiceView</Name>
				<Source><![CDATA[
    private void initializeSelfServiceView()
    {
        this.setSelfServiceView(element.configurationHelper().getConfigurationValue(personalizedViewKey));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelfServiceView</Name>
				<Source><![CDATA[
    private void setSelfServiceView(str _button)
    {
        RecId selectedRequisition = TrvRequisitionTableView.RecId;

        // Set personalization setting
        element.configurationHelper().saveConfigurationValue(personalizedViewKey, _button);

        switch (_button)
        {
            case formControlStr(TrvRequisitionList, GroupByStatus):
                
                // Update sort
                RequisitionList.groupBy(identifierStr(TrvRequisitionTableView_ApprovalStatus));
                activeRequisitionDS.queryBuildDataSource().sortClear();
                activeRequisitionDS.query().dataSourceTable(tablenum(TrvRequisitionTableView)).addSortField(fieldNum(TrvRequisitionTableView, ReorderedApprovalStatus), SortOrder::Ascending);
                activeRequisitionDS.query().dataSourceTable(tablenum(TrvRequisitionTableView)).addSortField(fieldNum(TrvRequisitionTableView, RequisitionDate), SortOrder::Descending);
                activeRequisitionDS.executeQuery();
                // Toggle controls
                RequisitionList.visible(true);
                RequisitionGrid.visible(false);
                RequisitionList.setFocus();
                break;

            case formControlStr(TrvRequisitionList, GridViewButton):
            default:

                // Update sort
                RequisitionList.groupBy("");
                activeRequisitionDS.queryBuildDataSource().sortClear();
                activeRequisitionDS.query().dataSourceTable(tablenum(TrvRequisitionTableView)).addSortField(fieldNum(TrvRequisitionTableView, RequisitionNumber), SortOrder::Descending);
                activeRequisitionDS.executeQuery();
                // Toggle controls
                RequisitionList.visible(false);
                RequisitionGrid.visible(true);
                RequisitionGrid.setFocus();
                break;
        }

        // Move cursor to the travel requisition which was selected before the sort.
        activeRequisitionDS.positionToRecordByValue(fieldNum(TrvRequisitionTableView, RecId), int642Str(selectedRequisition));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvRequisitionTable</Name>
				<Methods>
					<Method>
						<Name>initQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update the worker context, related filters and legal entity on requisitions.
        /// </summary>
        public void initQuery(LegalEntity _legalEntity = CompanyInfo::current(), HcmWorkerRecId _worker = HcmWorkerLookup::currentWorker())
        {
            // Reset the travel requisition query
            Query q = new Query(querystr(TrvRequisitionTable_MyListPage));

            // Add ranges to the TrvRequisitionTable for the worker and related legal entity
            TrvListPageHelper::addCompanyRange(q, _legalEntity);
            TrvListPageHelper::addWorkerRange(q, _worker);

            this.query(q);
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Check the status of the travel requisitions to enable/disable buttons when selection changes.
        /// </summary>
        public void selectionChanged()
        {
            super();
            element.enableActionsBasedOnSelection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        /// <summary>
        /// Reread DS. Pass this action on to TrvRequisitionTableView DS since child forms may have
        /// triggered the reread only on TrvRequisitionTable DS.
        /// </summary>
        public void reread()
        {
            super();
            TrvRequisitionTableView_DS.reread();
        }

]]></Source>
					</Method>
					<Method>
						<Name>research</Name>
						<Source><![CDATA[
        /// <summary>
        /// Research DS. Pass this action on to TrvRequisitionTableView DS since child forms may have
        /// triggered the research only on TrvRequisitionTable DS.
        /// </summary>
        public void research(boolean _retainPosition = false)
        {
            super(_retainPosition);
            TrvRequisitionTableView_DS.research(_retainPosition);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TrvRequisitionTableView</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Skip fetching records in ap clerk view when the DS is not used.
        /// </summary>
        public void executeQuery()
        {
            if (isSelfServiceView)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the ranges and set the default layout to group by approval status on init.
        /// </summary>
        public void initQuery(LegalEntity _legalEntity = CompanyInfo::current(), HcmWorkerRecId _worker = HcmWorkerLookup::currentWorker())
        {
            if (isSelfServiceView)
            {
                Query                q = new Query();
                QueryBuildDataSource qbds = q.addDataSource(tablenum(TrvRequisitionTableView));

                qbds.sortClear();
                qbds.addSortField(fieldNum(TrvRequisitionTableView, ReorderedApprovalStatus), SortOrder::Ascending);
                qbds.addSortField(fieldNum(TrvRequisitionTableView, CreatedDateTime1), SortOrder::Descending);

                QueryBuildRange legalEntityRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvRequisitionTableView, LegalEntity));
                legalEntityRange.value(queryValue(_legalEntity));
                legalEntityRange.status(RangeStatus::Locked);

                QueryBuildRange currentWorkerRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvRequisitionTableView, CreatingWorker));
                currentWorkerRange.value(queryValue(_worker));
                currentWorkerRange.status(RangeStatus::Locked);

                this.query(q);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the default layout to group by approval status on init.
        /// </summary>
        public void init()
        {
            this.initQuery();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// When selection changes, set the buttons and set the TrvRequisitionTable DS record since workflow depends on it.
        /// </summary>
        public void selectionChanged()
        {
            super();
            element.enableActionsBasedOnSelection();
            element.enableButtonsOnMultiSelect();

            // Workflow is tied to TrvRequisitionTable, so update the TrvRequisitionTableDS record even if the form
            // uses only TrvRequisitionTableView.
            element.synchronizeRequisitionDatasources();
            element.updateWorkflowControls();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>GridViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Switch to view travel requisition in grid view
        /// </summary>
        public void clicked()
        {
            element.setSelfServiceView(formControlStr(TrvRequisitionList, GridViewButton));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupByStatus</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Switch to view travel requisition in tiles grouped by approval status
        /// </summary>
        public void clicked()
        {
            element.setSelfServiceView(formControlStr(TrvRequisitionList, GroupByStatus));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateCommandButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the new travel requisition.
        /// </summary>
        public void clicked()
        {
            Args                            args = new Args();
            FormRun                         formRun;
            TrvNewExpenseReportParameter    newExpenseReportParameter = new TrvNewExpenseReportParameter();

            args.caller(element);
            args.openMode(OpenMode::New);
            newExpenseReportParameter.parmTrvWorkerParameter(element.parmTrvWorkerParameter());
            args.parmObject(newExpenseReportParameter);

            // Call the form to create a new travel requisition.
            new MenuFunction(MenuItemDisplayStr(TrvRequisitionDetails), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteCommandButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Delete selected travel requisitions.
        /// </summary>
        public void clicked()
        {
            super();
            element.deleteSelectedRecords();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequisitionLines</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the requisition expense lines form.
        /// </summary>
        public void clicked()
        {
            element.navigateToTrvRequisitionLines();
            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EditCommandButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the requisition details.
        /// </summary>
        public void clicked()
        {
            Args    args = new Args();
            args.caller(element);
            args.record(trvRequisitionTable);
            args.openMode(OpenMode::Edit);
            new MenuFunction(MenuItemDisplayStr(TrvRequisitionDetails), MenuItemType::Display).run(Args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CloseCommandButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Close selected travel requisitions.
        /// </summary>
        public void clicked()
        {
            trvRequisitionTable.closeRequisition();
            TrvRequisitionTableView_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvRequisitionTableView_RequisitionNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the requisition lines form on clicking the requisition number.
        /// </summary>
        public void jumpRef()
        {
            // When a user clicks on TrvRequisitionTableView_ReqNumber two interactions are sent by the browser to
            // the server: ExecuteHyperlink and SelectionChanged. The latter is a deferred event so no guarantees
            // can be made about its synchronousness. The side effect is that this method may execute before the override
            // of TrvRequisitionTableView_DS.selectionChanged() and consequently the user would open a different travel requisition
            // than the one clicked. On the other hand, TrvRequisitionTableView is already pointing to the correct record so
            // we manually synchronize both datasources before opening TrvRequisitions.
            element.synchronizeRequisitionDatasources();
            element.navigateToTrvRequisitionLines();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvRequisitionTable</Name>
			<Table>TrvRequisitionTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Destination</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReconciliationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TravelPurpose</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HcmWorker</Name>
			<Table>HcmWorker</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Person</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonnelNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TrvRequisitionTable</JoinSource>
			<LinkType>Passive</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DirPerson</Name>
			<Table>DirPerson</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AnniversaryDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnniversaryMonth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnniversaryYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthMonth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChildrenNames</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommunicatorSignIn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AnniversaryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_DirPerson_Shadow_DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_EntityType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_FirstName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_FirstNameKana_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_GenerationalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_INN__RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_InstanceRelationTypeName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_LastName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_LastNameKana_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MiddleName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NameSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PartyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PersonNameKana_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PersonNameOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PhoneticName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Prefix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ProfessionalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_RelationTypeName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Salutation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SIPElectronicAddressType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Gender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hobbies</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Initials</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KnownAs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaritalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonalTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticFirstName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticLastName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticMiddleName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryAddressLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactTelex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactURL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>HcmWorker</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DirPersonName</Name>
			<Table>DirPersonName</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Shadow_DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FirstName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiddleName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Person</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DirPerson</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvRequisitionTableView</Name>
			<Table>TrvRequisitionTableView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Destination</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReconciliationStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecVersion1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReorderedApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequisitionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TravelPurpose</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS317015</Caption>
		<DataSource xmlns="">TrvRequisitionTable</DataSource>
		<NewRecordAction xmlns="">CreateCommandButton</NewRecordAction>
		<Pattern xmlns="">Custom</Pattern>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<WorkflowDataSource xmlns="">TrvRequisitionTable</WorkflowDataSource>
		<WorkflowEnabled xmlns="">Yes</WorkflowEnabled>
		<WorkflowType xmlns="">TrvRequisitionTemplate</WorkflowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>TravelRequisitionActions</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ViewModesGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ViewModesButton</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>GridViewButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Expense:GridView</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>GroupByStatus</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS101302</Text>
									</AxFormControl>
								</Controls>
								<NormalImage>View</NormalImage>
								<Text>@SYS28196</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RequisitionCreateDelete</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CreateCommandButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>No</MultiSelect>
								<NormalImage>New</NormalImage>
								<Text>@SYS153189</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>DeleteCommandButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Delete</NormalImage>
								<Text>@SYS332993</Text>
							</AxFormControl>
						</Controls>
						<DataSource>TrvRequisitionTableView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RequisitionActions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RequisitionLines</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>TrvRequisitions</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Related</NormalImage>
								<Text>@SYS105283</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>EditCommandButton</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@Expense:TravelReqHeaderHelp</HelpText>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@SYS314510</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CloseCommandButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Close</NormalImage>
								<Text>@SYS301990</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TrvTravelRequisitionDuplicateDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@Expense:TravelReqCopyHelp</HelpText>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<AutoRefreshData>Yes</AutoRefreshData>
								<CopyCallerQuery>Yes</CopyCallerQuery>
								<MenuItemName>TrvRequisitionDuplicateDialog</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Copy</NormalImage>
							</AxFormControl>
						</Controls>
						<DataSource>TrvRequisitionTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RequisitionWorker</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RequisitionFor</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@Expense:TravelReqDelegateUserHelp</HelpText>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>TrvWorkerPickerExpenseReports</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<Text>@Expense:TravelRequisitionForOtherWorkers</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>PrintActionsGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PrintActions</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TrvRequisition</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TrvRequisitionTable</DataSource>
										<MenuItemName>TrvRequisition</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS317015</Text>
									</AxFormControl>
								</Controls>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Print</NormalImage>
								<Text>@SYS101620</Text>
							</AxFormControl>
						</Controls>
						<DataSource>TrvRequisitionTable</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>TrvRequisitionTable</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>RequisitionTabControl</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RequisitionTab</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FilterAndGroupBy</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>MyRequisitionFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>RequisitionList</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RequisitionList</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ExtendedStyle>cardList</ExtendedStyle>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RequisitionCard</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>BusinessCard</ExtendedStyle>
										<Pattern>BusinessCardStatus</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TrvRequisitionTableView_EstimatedAmount</Name>
												<ExtendedStyle>Heading</ExtendedStyle>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Left</Alignment>
												<DataMethod>totalWithCurrencyCode</DataMethod>
												<DataSource>TrvRequisitionTableView</DataSource>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TrvRequisitionTableView_TravelPurpose</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TravelPurpose</DataField>
												<DataSource>TrvRequisitionTableView</DataSource>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TrvRequisitionTableView_RequisitionNumber</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>RequisitionNumber</DataField>
												<DataSource>TrvRequisitionTableView</DataSource>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TrvRequisitionTableView_DummyPlaceholder</Name>
												<ExtendedStyle>ImageCaption</ExtendedStyle>
												<Type>String</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<ChangeCase>UpperCase</ChangeCase>
												<Label>@SYS4004564</Label>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>TrvRequisitionTableView_ApprovalStatus</Name>
												<ExtendedStyle>Footer1</ExtendedStyle>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ApprovalStatus</DataField>
												<DataSource>TrvRequisitionTableView</DataSource>
												<ShowLabel>No</ShowLabel>
												<Items />
											</AxFormControl>
										</Controls>
										<ArrangeMethod>None</ArrangeMethod>
										<DataSource>TrvRequisitionTableView</DataSource>
										<Style>Card</Style>
									</AxFormControl>
								</Controls>
								<DataSource>TrvRequisitionTableView</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<Style>List</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RequisitionGrid</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReqNumber_Grid</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RequisitionNumber</DataField>
										<DataSource>TrvRequisitionTableView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CreatedDateTime_Grid_New</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RequisitionDate</DataField>
										<DataSource>TrvRequisitionTableView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ApprovalStatus_Grid</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovalStatus</DataField>
										<DataSource>TrvRequisitionTableView</DataSource>
										<Label>@SYS101302</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReconciliationStatus_Grid</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReconciliationStatus</DataField>
										<DataSource>TrvRequisitionTableView</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AmountMST_Grid</Name>
										<AllowEdit>No</AllowEdit>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>totalWithCurrencyCode</DataMethod>
										<DataSource>TrvRequisitionTableView</DataSource>
										<Label>@SYS153124</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountToReconcile_Grid</Name>
										<AllowEdit>No</AllowEdit>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>amountToBeReconciled</DataMethod>
										<DataSource>TrvRequisitionTableView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Purpose_Grid</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TravelPurpose</DataField>
										<DataSource>TrvRequisitionTableView</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TrvRequisitionTableView</DataSource>
								<DefaultAction>RequisitionLines</DefaultAction>
							</AxFormControl>
						</Controls>
						<Caption>@SYS153185</Caption>
						<DataSource>TrvRequisitionTableView</DataSource>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
				</Controls>
				<DataSource>TrvRequisitionTableView</DataSource>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>