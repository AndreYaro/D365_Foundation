<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTransCustPaym</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTransCustPaym extends FormRun implements TaxIFormShowTax, LedgerIJournalTransCustPaymCallback, LedgerILedgerJournalEngineProvider, CustPaymISettlementAmountCallback, OfficeIMenuCustomizer, 
    OfficeITemplateCustomExporter, LedgerIJournalFormRefreshable, LedgerIJournalForm
{
    #isoCountryRegionCodes
    QueryBuildRange ledgerJournalTransRange;
    LedgerJournalEngine_CustPayment ledgerJournalEngine;

    LedgerJournalFormTrans_Payment journalFormTrans;

    LedgerJournalId journalNum;
    DebCredProposal debCredProposal;
    DebCredProposal debCredProposalOld;
    LedgerJournalTable ledgerJournalTable;

    ImageListAppl_LedgerJournal imageListAppl;

    LedgerJournalTransEntityManager ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.

    boolean previousIsSettlementEnabled;
    utcdatetime lastEnteredReleaseDate;
    [FormObservable]
    boolean norwayEnabled;

    RecId currentMainAccountId;
    RecId currentOffsetMainAccountId;
    RecId currentPaymentFeeMainAccountId;
    LedgerJournalACType priorOffsetAccountType;
    // <GCN>
    LedgerChineseVoucherEnabled_CN chineseVoucher_CN;
    // </GCN>
    // <GEEU><GCN>
    #ISOCountryRegionCodes
    // </GCN></GEEU>
    // <GIN>
    boolean countryRegion_IN;
    // </GIN>
    // <GEERU>
    boolean countryRegion_RU;
    // </GEERU>
    boolean postDatedCheckEnabled;
    boolean enableLedgerJournalTrans_W;

    BankLCExportLineNumController bankLCExportLineNumController;

    PCDataSourceEventNotify ledgerJournalTransDSEventNotifier;

    boolean mcrAllowPayment;

    CustVendTrans custVendTransPaymRef_RU;

}
]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTransActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Invoked after the <c>LedgerJournalTrans</c> form data source activate application code has been executed.
    /// </summary>
    /// <param name = "_ledgerJournalTransDS">
    /// The <c>LedgerJournalTrans</c> form data source.
    /// </param>
    protected void ledgerJournalTransActivated(FormDataSource _ledgerJournalTransDS)
    {
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    /// <summary>
    /// Research the journal.
    /// </summary>
    protected void research()
    {
        ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

        ledgerJournalTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the refresh of this journal form.
    /// </summary>
    public void refresh()
    {
        element.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableMandate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Enables or disables the mandate related controls.
    /// </summary>
    protected void enableDisableMandate()
    {
        boolean sepaPayment = CustPaymModeTable::find(ledgerJournalTrans.PaymMode).IsSEPA;
        boolean isPrepayment = sepaPayment && !LedgerJournalTrans_MarkedInvoice.text();
        boolean isFromInvoice = sepaPayment && LedgerJournalTrans_MarkedInvoice.text();

        if (isFromInvoice)
        {
            CustDirectDebitMandate mandate;
            SpecTransDirectDebitMandate_W specTransDirectDebitMandate;

            select firstonly crosscompany TableId from specTransDirectDebitMandate
                where specTransDirectDebitMandate.SpecCompany == ledgerJournalTrans.DataAreaId
                    && specTransDirectDebitMandate.SpecRecId == ledgerJournalTrans.RecId
                    && specTransDirectDebitMandate.SpecTableId == ledgerJournalTrans.TableId
            join MandateReference from mandate
                where mandate.RecId == specTransDirectDebitMandate.DirectDebitMandate;

            LedgerJournalTrans_InvoiceDirectDebitMandate.text(mandate.MandateReference);
            ledgerJournalTrans.DirectDebitMandate = 0;
        }

        LedgerJournalTrans_DirectDebitMandate.visible(isPrepayment);
        LedgerJournalTrans_DirectDebitMandate.enabled(isPrepayment);
        LedgerJournalTrans_InvoiceDirectDebitMandate.visible(isFromInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountNumModifiedPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the form when the account number field is modified.
    /// </summary>
    public void accountNumModifiedPost()
    {
        changecompany(ledgerJournalTrans.Company)
        {
            debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
            element.setDebCredProposal(false);
            element.initLedgerJournalEngineCustPostingProfile();

            // Clear out the MarkedInvoice-related fields.
            ledgerJournalTrans.MarkedInvoice = '';
            ledgerJournalTrans.MarkedInvoiceRecId = 0;
            ledgerJournalTrans.MarkedInvoiceCompany = '';

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
            {
                ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                element.enableDepreciationStartDate();
            }
            // <GEECZ>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
            {
                ledgerJournalTransSymbol.initFromLedgerJournalTransCust(ledgerJournalTrans);
                ledgerJournalTrans_DS.refresh();
                ledgerJournalTransSymbol_DS.forceWrite(true);
            }
            // </GEECZ>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedgerJournalEngineCustPostingProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the Customer Posting Profile in from the <c>LedgerJournalEngine_CustPayment</c>, using the <c>LedgerJournalTrans</c> instance.
    /// </summary>
    protected void initLedgerJournalEngineCustPostingProfile()
    {        
        ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the event that fires when focus is given to the form.
    /// </summary>
    /// <param name="_active">
    /// true if the form has focus; otherwise, false.
    /// </param>
    public void activate(boolean _active)
    {
        super(_active);

        journalFormTrans.manageEditingModeForApprovedWFApproval();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        LedgerIJournalFormRefreshable callingForm = element.args().caller() as LedgerIJournalFormRefreshable;

        if (callingForm)
        {
            callingForm.refresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose;

        try
        {
            // Signal that the close event is beginning.
            ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();

            canClose = super();

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
        }
        catch (Exception::UpdateConflict)
        {
            // This exception should not be handled by the generic handling logic below.

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::UpdateConflict;
        }
        catch
        {
            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::Error;
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFinancialTags</Name>
				<Source><![CDATA[
    private void initFinancialTags()
    {
        // In this form, an offset company could be different from a primary company and set FinTag configured while a primary company does not.
        // Thus, checking FinTag configuration over all comapanies determines FinTag usability in this form.
        if (FinTagConfiguration::isFinTagConfigurationSetInAtLeastOneCompany())
        {
            FinTagReferenceGroupControllerContract primaryContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_FinTag,
                fieldNum(LedgerJournalTrans, Company));

            FinTagReferenceGroupControllerContract offsetContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_OffsetFinTag,
                fieldNum(LedgerJournalTrans, OffsetCompany));

            FinTagReferenceGroupController::registerReferenceGroup(primaryContract);
            FinTagReferenceGroupController::registerReferenceGroup(offsetContract);
        }
        else
        {
            LedgerJournalTrans_FinTag.visible(false);
            LedgerJournalTrans_OffsetFinTag.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPaymentStatusForSEPAReject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the payment status to determine whether or not to reject for SEPA.
    /// </summary>
    /// <param name="ledgerJournalTransSEPA">The <c>LedgerJournalTrans</c> record to check.</param>
    /// <returns>true if payment status indicates rejection; otherwise, false.</returns>
    protected boolean checkPaymentStatusForSEPAReject(LedgerJournalTrans ledgerJournalTransSEPA)
    {
        return (ledgerJournalTransSEPA.PaymentStatus == CustVendPaymStatus::Sent
                || ledgerJournalTransSEPA.PaymentStatus == CustVendPaymStatus::Confirmed
                || ledgerJournalTransSEPA.PaymentStatus == CustVendPaymStatus::Recieved);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSEPAPaymentReject</Name>
				<Source><![CDATA[
    boolean checkSEPAPaymentReject()
    {
        LedgerJournalTrans ledgerJournalTransSEPA;
        CustPaymModeTable custPaymModeTable;

        select firstonly RecId from ledgerJournalTransSEPA
            where ledgerJournalTransSEPA.JournalNum == ledgerJournalTrans.JournalNum
            exists join TableId from custPaymModeTable
                where custPaymModeTable.IsSEPA
                   && custPaymModeTable.PaymMode == ledgerJournalTransSEPA.PaymMode;

        if (ledgerJournalTransSEPA)
        {
            for (ledgerJournalTransSEPA = ledgerJournalTrans_ds.getFirst(true) ? ledgerJournalTrans_ds.getFirst(true) : ledgerJournalTrans_ds.cursor();
            ledgerJournalTransSEPA;
            ledgerJournalTransSEPA = ledgerJournalTrans_ds.getNext())
            {
                if (this.checkPaymentStatusForSEPAReject(ledgerJournalTransSEPA)
                    && CustPaymModeTable::find(ledgerJournalTransSEPA.PaymMode).IsSEPA)
                {
                    if (Box::yesNo("@SYS4004033", DialogButton::Yes, "@SYS4004034") == DialogButton::Yes)
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        ledgerJournalEngine.close();
        ledgerJournalEngine.formMethodClosePre();
        journalFormTrans.formClosePre();
        element.bookRefresh(true);

        if (ledgerJournalTransDSEventNotifier)
        {
            ledgerJournalTrans_DS.removeNotifyHandler(ledgerJournalTransDSEventNotifier);
        }
        super();

        TaxWithhold::clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureLineStatusButton_BR</Name>
				<Source><![CDATA[
    void configureLineStatusButton_BR()
    {
        boolean canClose;
        boolean canReopen;

        canClose = ledgerJournalTrans.canCloseTaxWithholdEditStatus_BR();
        canReopen = ledgerJournalTrans.canReopenTaxWithholdEditStatus_BR();
        taxWithholdLineStatusMenuButton.enabled(canClose || canReopen);
        taxWithholdClosePaymlLine_BR.enabled(canClose);
        taxWithholdReopenPaymlLine_BR.enabled(canReopen);
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the settlement related controls.
    /// </summary>
    /// <remarks>
    /// Whether the controls were enable at the time of this call is stored for later use.
    /// </remarks>
    public void disableSettlement()
    {
        previousIsSettlementEnabled = buttonSettlement.enabled();
        buttonSettlement.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonDepositSlip</Name>
				<Source><![CDATA[
    public void enableButtonDepositSlip()
    {
        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, BankDepositVoucher)).enabled(!ledgerJournalTable.BankTransSummarizationEnabled);

        // We do not allow creating a deposit slip after the journal has been posted and it has been reconciled.
        if (ledgerJournalTrans.ledgerJournalTable().Posted)
        {
            NoYes isReconciled;

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank && ledgerJournalTrans.OffsetLedgerDimension)
            {
                isReconciled = BankAccountTrans::findIsReconciled(
                    ledgerJournalTrans.Voucher,
                    ledgerJournalTrans.TransDate,
                    ledgerJournalTrans.CurrencyCode,
                    ledgerJournalTrans.parmOffsetAccount(),
                    -ledgerJournalTrans.amount());
            }

            if (!isReconciled && ledgerJournalTrans.AccountType == LedgerJournalACType::Bank)
            {
                isReconciled = BankAccountTrans::findIsReconciled(
                    ledgerJournalTrans.Voucher,
                    ledgerJournalTrans.TransDate,
                    ledgerJournalTrans.CurrencyCode,
                    ledgerJournalTrans.parmAccount(),
                    ledgerJournalTrans.amount());
            }

            if (!isReconciled && ledgerJournalTrans.isBankDepositVoucherSplit())
            {
                isReconciled = BankAccountTrans::findByVoucher(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate).Reconciled;
            }

            buttonDepositSlip.enabled(!isReconciled && !ledgerJournalTable.BankTransSummarizationEnabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables certain controls that are managed at the form level.
    /// </summary>
    public void enableButtonsActive()
    {
        boolean enabled;
        boolean paymentStatusEnabled;

        enabled = journalFormTrans.isJournalEnabled();

        ledgerJournalPrintOutInvoice_Cust.enabled(enabled && ledgerJournalTrans.Prepayment);

        if (journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            buttonPaymentProposal.enabled(enabled && journalFormTrans.parmIsUIElementWFApprovalEnabled());
            paymentStatusEnabled = enabled && journalFormTrans.parmIsPayStatusButtonAvailForWFApproval();
        }
        else
        {
            buttonPaymentProposal.enabled(enabled);
            enabled = enabled && ledgerJournalEngine.approved();
            paymentStatusEnabled = enabled;
        }

        buttonPaymentReconciliation.enabled(paymentStatusEnabled);

        enabled = enabled && !ledgerJournalTrans.BankChequeNum;

        // <GEERU>
        if (countryRegion_RU)
        {
            enabled = enabled && !ledgerJournalTrans.BankCurrencyTransferLog_RU;
        }
        // </GEERU>

        paymReconciliationNone.enabled(enabled);
        paymReconciliationConfirm.enabled(enabled);
        paymReconciliationRecieved.enabled(enabled);
        paymReconciliationSent.enabled(enabled);
        // <GEERU>
        if (countryRegion_RU)
        {
            element.enableButtonsActive_RU();
        }
        // </GEERU>
        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ,#isoHU,#isoPL]))
        {
            element.enableButtonsActive_CZ();
        }
        // </GEEU>
        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]))
        {
            ledgerJournalPreview.enabled(ledgerJournalEngine.posted());
            ledgerJournalVoucherPreview.enabled(ledgerJournalEngine.posted());
        }
        // </GEEU>

        if (postDatedCheckEnabled)
        {
            printAckReceipt.enabled(CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans));
        }

        element.enableBankPaymAdviceCustPrint();

    }

]]></Source>
			</Method>
			<Method>
				<Name>enableBankPaymAdviceCustPrint</Name>
				<Source><![CDATA[
    public void enableBankPaymAdviceCustPrint()
    {
        boolean enabled = false;

        if (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent)
        {
            enabled = true;
        }

        BankPaymAdviceCustPrint.enabled(enabled);
        BankPaymAdviceCustV2.enabled(enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive_CZ</Name>
				<Source><![CDATA[
    void enableButtonsActive_CZ()
    {
        boolean taxDocumentCreate;

        taxDocumentCreate = ledgerJournalEngine.taxDocumentCreateButton_CZ(ledgerJournalTrans);

        if (taxDocumentCreate)
        {
            buttonFunctions.enabled(true);
        }

        czTaxDocumentCreate_Cust.enabled(taxDocumentCreate);
        advanceInvoiceLink_CZ.enabled(ledgerJournalTrans.Prepayment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive_RU</Name>
				<Source><![CDATA[
    void enableButtonsActive_RU()
    {
        boolean paymentJourExists;

        if (ledgerJournalTrans.Voucher)
        {
            paymentJourExists = ledgerJournalTrans.existBankPaymentOrderJour_RU();

            paymentOrderDelete.enabled(!ledgerJournalEngine.posted() && paymentJourExists);

            custVendOutPaymReport_RU.enabled(ledgerJournalTrans.BankChequeNum != "" && paymentJourExists);
        }
        
        commissionTrade_RU.visible(ledgerJournalTrans.Prepayment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableCashRegister_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables section with Cash Register information.
    /// If section is enabled, fills it.
    /// </summary>
    public void enableDisableCashRegister_W()
    {
        CashRegisterFiscalTrans_W cashRegisterFiscalTrans = 
            CashRegisterFiscalTrans_W::findVoucherDate(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate);
        boolean existsCashRegisterFiscalTrans = cashRegisterFiscalTrans.RecId != 0;
        boolean enabledCashProcessing = false;
        if(existsCashRegisterFiscalTrans)
        {
            // Cash Transaction is already selected.
            ClassId cashRegisterProcessingClassId = CashRegister_W::find(cashRegisterFiscalTrans.CashRegister).ProcessingClassId; 
            enabledCashProcessing = CashRegisterProcessingBase::isEnabled(cashRegisterProcessingClassId);
        }
        else
        {
            enabledCashProcessing = CashRegisterProcessingBase::isEnabledForCurrentUser();
        }

        if (enabledCashProcessing)
        {
            CashRegisterReceipt_W.enabled(existsCashRegisterFiscalTrans);
            boolean isCashRegisterSectionEmpty = true;

            if (LedgerJournalTrans_W_DS.object(fieldNum(LedgerJournalTrans_W, CashRegisterTerminal)).allowEdit(
                ledgerJournalEngine.needInitCashRegisterTerminal_W(ledgerJournalTrans)))
            {
                CashRegisterOperator_W cashRegisterOperator = CashRegisterOperator_W::currentOperator();
                CashRegisterTerminal_W cashRegisterTerminal = CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal);

                if (cashRegisterOperator)
                {
                    isCashRegisterSectionEmpty = false;
                    LocationRecId.value(cashRegisterOperator.Location);
                    RegisterRecId.value(cashRegisterTerminal.CashRegister);
                    OperatorRecId.value(cashRegisterOperator.RecId);
                }
            }
            
            if (isCashRegisterSectionEmpty)
            {
                LocationRecId.value(0);
                RegisterRecId.value(0);
                OperatorRecId.value(0);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDepreciationStartDate</Name>
				<Source><![CDATA[
    // This method enables or disables the depreciation start date control.
    void enableDepreciationStartDate()
    {
        AssetBook assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);

        if (assetBook
            && (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition
                || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj)
            && !assetBook.depreciationStarted()
            && assetBook.DepreciationConvention == AssetDepreciationConvention::None)
        {
            depreciationStartDate.enabled(true);
        }
        else
        {
            depreciationStartDate.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enablePostDatedChecksTab</Name>
				<Source><![CDATA[
    public void enablePostDatedChecksTab()
    {
        if (postDatedCheckEnabled)
        {
            custPDCRegister_ds.allowEdit(true);
            pdc.visible(true);
        }
        else
        {
            custPDCRegister_ds.allowEdit(false);
            pdc.visible(false);
            printAckReceipt.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableBridgingBankAccountFields</Name>
				<Source><![CDATA[
    private void enableBridgingBankAccountFields()
    {
        if (FeatureStateProvider::isFeatureEnabled(BankBridgedTransAutoClearingFeature::instance()))
        {
            boolean isBridgingAccountByBank = CustVendPaymModeTable::isPaymModeBridgingAccountByBank(ledgerJournalTrans.PaymMode, ModuleCustVend::Cust);
            boolean isFurtherPosting = CustPaymModeTable::find(ledgerJournalTrans.PaymMode).FurtherPosting;
            // According to LedgerJournalFormTrans::enableCashDueAnnounceRelatedField_RU(), if the AnnouncementNum_RU field is true, then both BankDepositVoucher and OffsetAccountType should not allow edit.
            boolean isAnnouncementNum_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) && ledgerJournalTrans.AnnouncementNum_RU;
            boolean hasMCRCustPaym = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId, ledgerJournalTrans.TableId).RecId;

            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, BridgingBankAccount)).enabled(isBridgingAccountByBank);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetAccountType)).enabled(!isBridgingAccountByBank && !ledgerJournalTable.FixedOffsetAccount && !isAnnouncementNum_RU && !hasMCRCustPaym);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, BankDepositVoucher)).enabled(!isFurtherPosting && !ledgerJournalTable.BankTransSummarizationEnabled && !isAnnouncementNum_RU);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableReplacementFields</Name>
				<Source><![CDATA[
    public void enableReplacementFields()
    {
        if (custPDCRegister.IsReplacementCheck)
        {
            replacement_Comments.allowEdit(true);
            replacement_OriginalCheck.allowEdit(true);
        }
        else
        {
            replacement_Comments.allowEdit(false);
            replacement_OriginalCheck.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the settlement related controls.
    /// </summary>
    /// <remarks>
    /// The controls are returned to the state they had before being disabled.
    /// </remarks>
    public void enableSettlement()
    {
        buttonSettlement.enabled(previousIsSettlementEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowTax</Name>
				<Source><![CDATA[
    public Tax getShowTax()
    {
        return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowWithholdTax_IN</Name>
				<Source><![CDATA[
    public TaxWithholdJournal_IN getShowWithholdTax_IN()
    {
        return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables certain controls that are managed at the form level.
    /// </summary>
    public void init()
    {
        // <GCN>
        boolean allow;
        // </GCN>
        // <GCN>
        chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
        // </GCN>
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>
        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>

        enableLedgerJournalTrans_W = LedgerJournalTrans_W::isLegalEntityInCountryRegion() || EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled();

        enableLedgerJournalTrans_W = LedgerJournalTrans_W::isLegalEntitySupported() || EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled();

        journalFormTrans = new LedgerJournalFormTrans_Payment(element);

        super();

        norwayEnabled = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]);

        LedgerJournalTrans_AccountNum.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_AccountNum1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_OffsetAccount.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        LedgerJournalTrans_OffsetAccount1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));

        LedgerJournalTrans_AccountNum.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_AccountNum1.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetAccount.parmPostingType(LedgerPostingType::LedgerJournal);
        LedgerJournalTrans_OffsetAccount1.parmPostingType(LedgerPostingType::LedgerJournal);
        CustPaymJournalFee_CustAccount.parmPostingType(LedgerPostingType::LedgerJournal);

        LedgerJournalTrans_AccountNum.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_AccountNum1.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetAccount.parmValidateBlockedForManualEntry(true);
        LedgerJournalTrans_OffsetAccount1.parmValidateBlockedForManualEntry(true);
        CustPaymJournalFee_CustAccount.parmValidateBlockedForManualEntry(true);

        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
        ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, null);

        journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
        journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
        journalFormTrans.parmCtrlExchRate(fieldExchRate);
        journalFormTrans.parmCtrlExchRateSecond(fieldExchrateSecond);
        journalFormTrans.parmCtrlReportingExchRate(reportingfieldExchRate);
        journalFormTrans.parmCtrlReportingExchRateSecond(reportingfieldExchRateSecond);
        journalFormTrans.parmCtrlTriangulation(fieldTriangulation);
        journalFormTrans.parmCtrlBankDepositVoucherGrid(fieldBankDepositVoucherGrid);
        journalFormTrans.parmCtrlBankDepositVoucherTab(fieldBankDepositVoucher);
        journalFormTrans.parmCtrlSettlementButton(buttonSettlement);
        journalFormTrans.parmCtrlDepositSlipButton(buttonDepositSlip);
        journalFormTrans.parmCtrlCourseButton(buttonCourse);
        journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
        journalFormTrans.parmCtrlApproveButton(buttonApprove);
        journalFormTrans.parmCtrlRejectButton(buttonReject);
        journalFormTrans.parmCtrlPostJournalButton(postJournal);
        journalFormTrans.parmCtrlPostJournalBatchButton(postJournalBatch);
        journalFormTrans.parmCtrlPostAndTransferJournalButton(ledgerJournalPostTransfer);
        journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
        journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
        journalFormTrans.parmCtrlDeleteTransactionsButton(buttonDeleteTransactions);
        journalFormTrans.parmCtrlBalanceControButton(buttonBalanceControl);
        journalFormTrans.parmCtrlCopyPeriodicButton(buttonCopyPeriodicJournal);
        journalFormTrans.parmCtrlBankChequeReuseButton(bankChequeReuse);
        journalFormTrans.parmCtrlMassTransactionReversalButton(TransactionReversalDialog);
        journalFormTrans.parmCtrlMassTransactionReversalFailuresButton(TransactionReversalFailures);

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            journalFormTrans.parmCtrlOrderPaymentTab_RU(orderPayment_RU);
        }
        // </GEERU>
        journalFormTrans.parmCtrlFunctionMenuButton(buttonFunctions);
        journalFormTrans.parmCtrlCreatePaymentButton(buttonCreatePayment);
        journalFormTrans.parmCtrlPaymentReconciliationButton(buttonPaymentReconciliation);
        journalFormTrans.parmCtrlPaymentProposalButton(buttonPaymentProposal);
        journalFormTrans.parmCtrlImportPaymentsButton(custInpayment);
        journalFormTrans.parmCtrlExecutionDateButton(custPaymentExecDate_BE);
        journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
        journalFormTrans.parmCtrlOffsetAccountTypeGrid(ledgerJournalTrans_OffsetAccountType);
        journalFormTrans.parmCtrlOffsetAccountTypeTab(ledgerJournalTrans_OffsetAccountType1);
        journalFormTrans.parmCtrlOffsetAccountGrid(ledgerJournalTrans_OffsetAccount);
        journalFormTrans.parmCtrlOffsetAccountTab(ledgerJournalTrans_OffsetAccount1);
        journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
        journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
        journalFormTrans.parmCtrlPaymFeeAccountDimensionButton(paymentFeeAccountDimension);
        journalFormTrans.parmMCRCtrlDeductionButton(tamDeductionCreate);
        journalFormTrans.parmCtrlErrorExists(ErrorExist);

        journalFormTrans.formInitPost();

        this.initLedger();

        imageListAppl = new ImageListAppl_LedgerJournal();
        errorExist.imageList(imageListAppl.imageList());
        if (norwayEnabled)
        {
            errorPaym.visible(true);
            errorPaym.imageList(imageListAppl.imageList());
        }
        else
        {
            errorPaym.visible(false);
        }

        lastEnteredReleaseDate = utcDateTimeNull() ;
        // <GEEPL>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]) && ledgerJournalTable.JournalType == journalFormTrans.getJournalTypeId())
        {
            if (ledgerJournalTable.ledgerJournalTable_W().Prepayment_W)
            {
                ledgerJournalTrans_MarkedInvoice.allowEdit(false);
            }
        }
        // </GEEPL>
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            element.setTaxWithholdTransVisible_IN();
            element.setVisible_IN();
            element.setTaxWithholdVisible_IN();
        }
        // </GIN>

        // Disable the company accounts field on the general tab and on the grid in the overview tab if Intercompany transactions are disabled
        if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            ledgerJournalTrans_Company.allowEdit(false);
            ledgerJournalTrans_CompanyAccount.allowEdit(false);
        }

        // <GCN>
        if (chineseVoucher_CN)
        {
            allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually
                && ledgerJournalTable.VoucherAllocatedAtPosting == NoYes::No;
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
        }
        else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
        }
        // </GCN>
        // Post dated checks
        postDatedCheckEnabled = BankParameters::find().EnablePDC;
        element.enablePostDatedChecksTab();

        if (BankLCExportFeatureChecker::checkBankLCExportEnabled())
        {
            bankLCExportGroup.visible(true);
            bankLCExportLineNumController = BankLCExportLineNumController::construct();
        }
        else
        {
            bankLCExportGroup.visible(false);
        }

        if (#PmfEnabled)
        {
            ledgerJournalTransDSEventNotifier = PCDataSourceEventNotify::construct(this);
            // we are interested in extendeding "Active", so form needs to implement "OnActive" interface
            ledgerJournalTrans_DS.addNotifyHandler(ledgerJournalTransDSEventNotifier);
        }

        // <GTH>
        if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
        {
            this.updateDesignForUnrealizedVAT();
        }
        // </GTH>

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, TaxWithholdItemGroupHeading_TH)).visible(false);
        }
        // </GBR>

        // If the current user is not tied to a call center channel, hide the
        // payment button
        if (isConfigurationkeyEnabled(configurationKeyNum(MCRPayment)))
        {
            mcrAllowPayment = RetailMCRChannelTable::findForCurrentUser().mcrEnableOrderCompletion;

            if (mcrAllowPayment)
            {
                mcrCustPaymButton.visible(true);
            }
        }
        // </GTE>

        if (CashRegisterProcessingBase::isEnabledForCurrentUser())
        {
            CashRegister_W.visible(true);
            CashRegisterReceipt_W.visible(true);
        }

        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            TaxDocumentLauncher.visible(true);
            TaxTransSource.visible(false);
            TaxGroup.visible(false);
            TaxItemGroup.visible(false);

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                GSTPayment_IN.visible(true);
            }
            // </GIN>
        }
        // <GTE>
        if (TaxIntegrationUtils::isTaxInformationEnabled())
        {
            TransTaxInformation.visible(true);
            TransTaxInformationPaymentFeeButton_IN.visible(true);
        }
        // </GTE>        

        boolean useReportingCurrency = Ledger::reportingCurrency() != '';
        totalsGroupTabularReportingCurrency.visible(useReportingCurrency);
        accountingCurrencytotalHeaderCaption.visible(useReportingCurrency);

        if (BankPaymAdviceReportV2FeatureExposure::isEnabled())
        {
            BankPaymAdviceCustV2.visible(true);
            BankPaymAdviceCustPrint.visible(false);
        }

        LedgerJournalTrans_W_ds.object(fieldNum(LedgerJournalTrans_W, CategoryPurpose)).visible(enableLedgerJournalTrans_W);
        LedgerJournalTrans_W_ds.object(fieldNum(LedgerJournalTrans_W, ChargeBearer)).visible(enableLedgerJournalTrans_W);
        LedgerJournalTrans_W_ds.object(fieldNum(LedgerJournalTrans_W, LocalInstrument)).visible(enableLedgerJournalTrans_W);
        LedgerJournalTrans_W_ds.object(fieldNum(LedgerJournalTrans_W, ServiceLevel)).visible(enableLedgerJournalTrans_W);

        if (!FeatureStateProvider::isFeatureEnabled(PaymentJournalAccountTypeValidateFeature::instance()))
        {
            ledgerJournalTrans_AccountType1.allowEdit(true);
        }

        if (ledgerJournalTable.isTaxIntegrationEnabled())
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(true);
            LedgerJournalTrans_VATNumJournal.visible(true);
            TaxVATNumTable::enableLookupVATNum(LedgerJournalTrans_VATNumJournal);
        }
        else
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(false);
            LedgerJournalTrans_VATNumJournal.visible(false);
            TaxVATNumTable::disableLookupVATNum(LedgerJournalTrans_VATNumJournal);
        }

        this.initFinancialTags();

        LedgerJournalTrans_BridgingBankAccount.visible(FeatureStateProvider::isFeatureEnabled(BankBridgedTransAutoClearingFeature::instance()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdTransVisible_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set button TaxWithholdTrans_IN is visible when flighting is enable.
    /// </summary>
    private void setTaxWithholdTransVisible_IN()
    {
        TaxWithholdTrans_IN.visible(true);
        ButtonWithholdTax_IN.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedger</Name>
				<Source><![CDATA[
    void initLedger()
    {
        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable = element.args().record();
            journalNum = ledgerJournalTable.JournalNum;

            LedgerJournalTrans_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_AccountNum1.parmJournalName(ledgerJournalTable.JournalName);

            LedgerJournalTrans_OffsetAccount.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_OffsetAccount1.parmJournalName(ledgerJournalTable.JournalName);

            CustPaymJournalFee_CustAccount.parmJournalName(ledgerJournalTable.JournalName);

            // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
            LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount1, ledgerJournalTable, ledgerJournalTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPaymEditAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether the current payment can be edited.
    /// </summary>
    /// <returns>
    /// true if the current payment can be edited; otherwise, false.
    /// </returns>
    public boolean isPaymEditAllowed()
    {
        return ledgerJournalTrans_ds.allowCreate() // required by workflow
            && (ledgerJournalTrans.RecId != 0) // the paym has to exist to be edited
            && !journalFormTrans.journalTable().Posted; // the paym can't be posted
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTable</Name>
				<Source><![CDATA[
    LedgerJournalTable ledgerJournalTable()
    {
        return ledgerJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Makes an args object containing the form and datasource objects.
    /// </summary>
    /// <returns>
    /// An args object.
    /// </returns>
    public Args makeArgs()
    {
        Args args = new Args(formStr(LedgerJournalTransCustPaym));
        args.caller(element);
        args.record(ledgerJournalTrans);
        args.menuItemName(menuItemDisplayStr(LedgerJournalTransCustPaym));

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActive</Name>
				<Source><![CDATA[
    public void onActive(FormObjectSet _sender)
    {
        if (_sender
            && (_sender.name() == ledgerJournalTrans_DS.name()))
        {
            element.pdsEnableRebateButton();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsEnableRebateButton</Name>
				<Source><![CDATA[
    public void pdsEnableRebateButton()
    {
        pdsRebateTableBtn.enabled(ledgerJournalTrans.AccountType == LedgerJournalACType::Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGrid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the grid from the database.
    /// </summary>
    /// <remarks>
    /// Use this when the underlying records have been changed by another form or process.
    /// </remarks>
    public void refreshGrid()
    {
        ledgerJournalTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshProposal</Name>
				<Source><![CDATA[
    void refreshProposal()
    {
        ledgerJournalTrans_DS.research();
        element.bookRefresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshTotalAmount</Name>
				<Source><![CDATA[
    public void refreshTotalAmount(LedgerJournalTrans _ledgerJournalTrans)
    {
        ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable, true);
        ledgerJournalEngine.voucherTotals(_ledgerJournalTrans, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeLedgerJournalEngine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>LedgerJournalEngine_CustPayment</c>, writing the provided <c>LedgerJournalTrans</c>.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The <c>LedgerJournalTrans</c> table to be written.</param>
    protected void writeLedgerJournalEngine(LedgerJournalTrans _ledgerJournalTrans)
    {       
        ledgerJournalEngine.write(_ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDebCredProposal</Name>
				<Source><![CDATA[
    void setDebCredProposal(boolean _init)
    {
        if (_init)
        {
            debCredProposal = DebCredProposal::None;
        }

        if (debCredProposal != debCredProposalOld)
        {
            switch (debCredProposal)
            {
                case DebCredProposal::Credit :
                    ledgerJournalTrans_AmountCurDebit.skip(true);
                    amountCurDebit.skip(true);
                    break;

                case DebCredProposal::Debit :
                    ledgerJournalTrans_AmountCurCredit.skip(true);
                    amountCurCredit.skip(true);
                    break;

                case DebCredProposal::None :
                    ledgerJournalTrans_AmountCurCredit.skip(false);
                    amountCurCredit.skip(false);
                    ledgerJournalTrans_AmountCurDebit.skip(false);
                    amountCurDebit.skip(false);
                    break;
            }
            debCredProposalOld = debCredProposal;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLookupButton_BR</Name>
				<Source><![CDATA[
    void setLookupButton_BR()
    {
        var payMode = CustPaymModeTable::find(ledgerJournalTrans.PaymMode);
        
        if (!payMode.UseGERConfiguration && payMode.ClassId != classNum(CustOutPaym_CNAB_BR))
        {
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,DocumentType)).allowEdit(false);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,BankFolder)).allowEdit(false);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_1)).allowEdit(false);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_2)).allowEdit(false);
        }
        else if (ledgerJournalTrans.RecId)
        {
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,DocumentType)).allowEdit(true);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,BankFolder)).allowEdit(true);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_1)).allowEdit(true);
            custEPRemitInfo_BR_ds.object(fieldNum(CustEPRemitInfo_BR,Instruction_2)).allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymentByLetterOfCredit</Name>
				<Source><![CDATA[
    public void setPaymentByLetterOfCredit()
    {
        if (ledgerJournalTrans.getLedgerJournalTransBankLC().BankLCLine)
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymMode)).allowEdit(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymSpec)).allowEdit(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Prepayment)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdEnabled_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdEnabled_IN()
    {
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).enabled((!ledgerJournalTransTaxExtensionIN.tcsGroup));
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).enabled((!ledgerJournalTransTaxExtensionIN.tdsGroup));
        taxWithhold_IN.enabled(ledgerJournalTransTaxExtensionIN.tdsGroup || ledgerJournalTransTaxExtensionIN.tcsGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN taxWithholdParameters;

        taxWithholdParameters = TaxWithholdParameters_IN::find();
        withholdingTax_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).visible(taxWithholdParameters.tdsPayment);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).visible(taxWithholdParameters.tcsPayment);
        taxWithhold_IN.visible(taxWithholdParameters.tdsPayment || taxWithholdParameters.tcsPayment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    private void setVisible_IN()
    {
        boolean isTaxParametersMarked = TaxParameters::checkTaxParameters_IN();

        ledgerJournalTrans_AssessableValue_IN.visible(isTaxParametersMarked);
        ledgerJournalTrans_MaximumRetailPrice_IN.visible(isTaxParametersMarked);
        withholdingTax_IN.visible(TaxWithholdParameters_IN::checkTaxParameters());

        boolean shouldGSTTDSVisible = TaxSolutionScopeIntegrationUtil::isCompanyEnabled();
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, InvoiceSettleAmountGSTTDS)).visible(shouldGSTTDSVisible);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, ExcludeGSTAmountGSTTDS)).visible(shouldGSTTDSVisible);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, TaxableAmountGSTTDS)).visible(shouldGSTTDSVisible);

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignForUnrealizedVAT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets fields not visible.
    /// </summary>
    private void updateDesignForUnrealizedVAT()
    {
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceReceiptDate)).visible(false);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(false);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(false);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceDate)).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        LedgerJournalTrans_TransDate.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateForNewSettlementAmount</Name>
				<Source><![CDATA[
    public void updateForNewSettlementAmount(AmountCur _totalSettledAmount)
    {
        if (_totalSettledAmount != ledgerJournalTrans.AmountCurCredit
            && Box::yesNo("@SYS58110", DialogButton::Yes, "@CashManagement:SettleInvoiceLines", "@SYS29050") == DialogButton::Yes)
        {
            ledgerJournalTrans.AmountCurCredit = _totalSettledAmount;
            ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
            ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, null);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No updates to the template settings are required.
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMenuFunctionForCustBankAccountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the menu function for the <c>CustVendBankAccountId</c> form control lookup.
    /// </summary>
    /// <returns>
    /// Menu function with a display menu <c>CustBankAccounts</c>.
    /// </returns>
    protected MenuFunction getMenuFunctionForCustBankAccountJumpRef()
    {
        return new MenuFunction(menuitemDisplayStr(CustBankAccounts), MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArgsForCustBankAccountJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an instance <c>Args</c> of used to open the look up form for <c>CustVendBankAccountId</c> form control.
    /// </summary>
    /// <returns>
    /// An instance of <c>Args</c> with <c>ledgerJournalTrans</c> table buffer.
    /// </returns>
    protected Args getArgsForCustBankAccountJumpRef()
    {
        Args args = new Args();
        args.record(ledgerJournalTrans);

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTaxGroupAllowEditInTaxIntegration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the allowEdit of Tax group and Item tax group according to OverrideSalesTax field of <c>LedgerJournalTransTaxExtension</c>.
    /// </summary>
    private void updateTaxGroupAllowEditInTaxIntegration()
    {
        if (ledgerJournalTrans.isTaxIntegrationEnabled())
        {
            LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
            LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDeleteJournalPaymentIfExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method checks whether current journal line has payment or not.
    /// If payment exists then it will ask for user confirmation to delete payment.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">
    /// The <c>LedgerJournalTrans</c> form data source.
    /// </param>
    /// <returns>
    /// True, if payment doesn't exists or payment exists and user confirmation is yes. Else, false.
    /// </returns>
    private boolean canDeleteJournalPaymentIfExists(LedgerJournalTrans _ledgerJournalTrans)
    {
        boolean ret = true;

        if (RetailCheckJournalLineHasPaymentAndAskUserConfirmationOnUpdateFlight::instance().isEnabled())
        {
            MCRCustPaymTable mcrCustPaymLocal = MCRCustPaymTable::findByRefRecIDRefTableID(_ledgerJournalTrans.RecId, _ledgerJournalTrans.TableId, true);
            
            if (mcrCustPaymLocal.RecId != 0)
            {
                DialogButton userInput = Box::yesNo("@Retail:CanModifyJournalLineField",DialogButton::No);

                if (userInput == DialogButton::No)
                {
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteJournalPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method checks whether current journal line has payment or not.
    /// If payment exists then it will delete the payment record.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">
    /// The <c>LedgerJournalTrans</c> form data source.
    /// </param>
    private void deleteJournalPayment(LedgerJournalTrans _ledgerJournalTrans)
    {
        MCRCustPaymTable mcrCustPaymLocal = MCRCustPaymTable::findByRefRecIDRefTableID(_ledgerJournalTrans.RecId, _ledgerJournalTrans.TableId, true);
            
        if (mcrCustPaymLocal.RecId != 0)
        {
            mcrCustPaymLocal.delete();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExtension</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts <c>LedgerJournalTransTaxExtension</c> record if it is valid.
        /// </summary>
        internal void insertIntoLedgerJournalTransTaxExtension()
        {
            LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (LedgerJournalTransTaxExtension.validateWrite())
            {
                LedgerJournalTransTaxExtension.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRefBankLC</Name>
						<Source><![CDATA[
        public void jumpRefBankLC()
        {
            LedgerJournalTransBankLC ledgerJournalTransBankLC;

            if (bankLCExportLineNumController)
            {
                ledgerJournalTransBankLC = ledgerJournalTrans.getLedgerJournalTransBankLC();
                if (ledgerJournalTransBankLC.BankLCLine)
                {
                    bankLCExportLineNumController.parmBankLCRecId(ledgerJournalTransBankLC.getBankLCLine().BankLC);
                }
                bankLCExportLineNumController.jumpRef();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret = super(_forceUpdate);

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // A write was requested on the sibling and the client did not write the entity. This happens
                // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
                // client only calls write on that specific sibling and not on the entire entity.

                // Write the entire entity.
                ledgerJournalTrans_DS.write();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorPaym</Name>
						<Source><![CDATA[
        display ImageRes errorPaym(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res = -1;
            #resAppl;
            if (norwayEnabled && _ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected)
            {
                res = imageListAppl.image(#ImageError);
            }
            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (!super())
            {
                // The LedgerJournalTrans' delete method requires an exception to be thrown
                // so that the transaction is aborted.
                throw Exception::Error;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = super();
            //<GBR>
            TaxWithholdTrans taxWithholdTrans;
            //</GBR>

            if (ret && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
            {
                ret = false;
            }

            // <GCN>
            if (ret
                && chineseVoucher_CN
                && !ledgerJournalTable.VoucherAllocatedAtPosting
                && !ledgerJournalTrans.Voucher_CN)
            {
                // Voucher number must be filled in
                ret = checkFailed(strFmt("@SYS26332", "@SYS5732"));
            }
            // </GCN>

            //<GBR>
            if (BrazilParameters::isEnabled()
                && ret
                && ledgerJournalTrans.orig().TransDate != ledgerJournalTrans.TransDate
                && ledgerJournalTrans.hasTaxWithholdingTransactions_BR())
            {
                if (dateStartMth(ledgerJournalTrans.orig().TransDate) == dateStartMth(ledgerJournalTrans.TransDate))
                {
                    update_recordset taxWithholdTrans
                        setting TransDate = ledgerJournalTrans.TransDate
                        where taxWithholdTrans.LedgerJourTransRecId_BR == ledgerJournalTrans.RecId;
                }
                else
                {
                    ret = checkFailed("@GLS2086");
                }
            }
            //</GBR>

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            if (ledgerJournalTrans.RecId != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>exchRateTxt</Name>
						<Source><![CDATA[
        display ExchRateSecondTxt exchRateTxt()
        {
            return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            if (ledgerJournalEngine.numberSeqFormHandlerJournal())
            {
                ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
            }
            super();

            ledgerJournalEngine.formMethodDataSourceCreatePost();
            ledgerJournalEngine.initValue(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write operation for the tables related to the <c>LedgerJournalTrans</c> table.
        /// </summary>
        /// <remarks>
        /// This method controls the write operation for the related tables. This includes
        /// <c>LedgerJournalTrans</c> table, <c>LedgerJournalTrans_Asset</c> table and
        /// <c>LedgerJournalTrans_Project</c> table.
        /// </remarks>
        public void write()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // The kernel calls leaveRecord during the delete event which will cause this method to
                // be called if the user had made changes. This causes issues and must be special cased
                // until the behavior is changed.
                return;
            }

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // The entity is already being written. The extra call to write is unnecessary.
                return;
            }

            try
            {
                ttsbegin;

                // Signal the start of the write event.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.preWrite(ledgerJournalTrans);
                ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.formMethodDataSourceWritePre();

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                // <GCN>
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    ledgerJournalTrans.write();
                    ledgerJournalTrans.reread();
                }
                // </GCN>

                super();

                if (ledgerJournalTrans.isFixedAssetsTransaction())
                {
                    // Synchronize, validate and write the fixed assets sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
                }
                else
                {
                    // If this is not a fixed assets transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a fixed assets transaction.
                    ledgerJournalTrans_Asset.RecId = 0;
                }

                // -----------------------------------------------------------------------------------

                if (ledgerJournalTrans.MarkedInvoice != LedgerJournalEngine_CustPayment::getMarkedInvoiceSettlementIndicator()
                    && ledgerJournalTrans.MarkedInvoiceCompany != '')
                {
                    // Synchronize SpecTrans with MarkedInvoice fields.
                    LedgerJournalEngine_CustPayment::updateMarkedInvoiceSpecTrans(ledgerJournalTrans);
                }

                ledgerJournalEngine.write(ledgerJournalTrans);

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();

                if (ledgerJournalTrans.isTaxIntegrationEnabled())
                {
                    LedgerJournalTrans_ds.reread();
                    LedgerJournalTrans_ds.refresh();
                    LedgerJournalTransTaxExtension.save(LedgerJournalTrans);
                    element.updateTaxGroupAllowEditInTaxIntegration();
                }

                // <GTH>
                if (ledgerJournalTransExtensionTH_ds.isNeeded())
                {
                    if (ledgerJournalTransExtensionTH.LedgerJournalTrans == 0)
                    {
                        ledgerJournalTransExtensionTH.LedgerJournalTrans = ledgerJournalTrans.RecId;
                        if (ledgerJournalTransExtensionTH_ds.validateWrite())
                        {
                            ledgerJournalTransExtensionTH_ds.write();
                        }
                    }
                }
                // </GTH>

                // <GBR>
                if (BrazilParameters::isEnabled())
                {
                    ledgerJournalTransPayment_BR.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }
                // </GBR>

                TradeBLWIJournalPurposeCodes::createRecord(TradeBLWICustVend::Customer,
                    ledgerJournalTrans.RecId,
                    '',
                    TradeBLWITypeOfForm::LedgerJournalTrans,
                    0,
                    ledgerJournalTrans.BankCentralBankPurposeCode);

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();

                if (enableLedgerJournalTrans_W)
                {
                    LedgerJournalTrans_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }

                ttscommit;
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                throw Exception::Error;
            }

            // <GIN>
            if (ledgerJournalTransTaxExtensionIN_ds.isNeeded())
            {
                TaxModelDocLineExtensionController_IN::insertTaxExtensionRecord(ledgerJournalTransTaxExtensionIN, ledgerJournalTrans);
            }
            // </GIN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            super();

            if (ledgerJournalTable.JournalNum != journalNum)
            {
                // If the stored journalNum has become out of sync with the reference
                // to ledgerJournalTable, then we need to rerun initLedger. This
                // will occur when the user has switched journals on the parent form.
                element.initLedger();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalTransRange = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
            ledgerJournalTransRange.value(queryValue(0));

            ledgerJournalEngine = LedgerJournalEngine::construct(LedgerJournalType::CustPayment, element);
            journalFormTrans.datasourceInitPost(ledgerJournalTrans);

            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        void delete()
        {
            LedgerJournalTrans ledgerJournalTrans_Orig;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                // Signal that the entity delete event has started.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
                ledgerJournalTrans_Orig = ledgerJournalTrans.data();

                // <GIN>
                if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                {
                    ledgerJournalEngine.parmNewAccountNum_IN("");
                    ledgerJournalEngine.parmPrevAccountNum_IN("");
                }
                // </GIN>

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                if (!ledgerJournalTrans_Asset_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
                super();
                // -----------------------------------------------------------------------------------

                ledgerJournalEngine.delete(ledgerJournalTrans_Orig);

                if (ledgerJournalTrans)
                {
                    element.setDebCredProposal(true);
                }

                element.bookRefresh();

                // Signal that the entity delete event has finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();

                ttscommit;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();

                // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);

                throw Exception::Error;
            }

            buttonSettlement.enabled(false);
            markInvoiceLine.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            // <GIN>
            if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
            {
                ledgerJournalEngine.parmNewAccountNum_IN("");
                ledgerJournalEngine.parmPrevAccountNum_IN("");
            }
            // </GIN>

            try
            {
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();

                journalFormTrans.datasourceCreatePre();

                element.setDebCredProposal(true);

                ledgerJournalEngine.preCreate(ledgerJournalTrans);

                super(append);
                if (lastEnteredReleaseDate != utcDateTimeNull())
                {
                    ledgerJournalTrans.ReleaseDate = lastEnteredReleaseDate;
                }

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below.

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the event that is fired each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()
        {
            UserGroupId approveGroupId = ledgerJournalTable.ledgerJournalName().ApproveGroupId;
            boolean markedInvoice;
            MCRCustPaymTable mcrCustPaymTable;

            if (mcrAllowPayment)
            {
                mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId,
                                                                              ledgerJournalTrans.TableId);
                if (mcrCustPaymTable)
                {
                    ledgerJournalTrans_OffsetAccountType.enabled(false);
                    ledgerJournalTrans_OffsetAccount.enabled(false);
                }
                else
                {
                    ledgerJournalTrans_OffsetAccountType.enabled(true);
                    ledgerJournalTrans_OffsetAccount.enabled(true);
               } 
            }

            element.updateTaxGroupAllowEditInTaxIntegration();

            int ret = super();

            if (ret)
            {
                ledgerJournalEngine.active(ledgerJournalTrans);
                priorOffsetAccountType = ledgerJournalTrans.OffsetAccountType;

                ledgerJournalEngine.setChildDataSourceAccess(ledgerJournalTrans,custVendPaymJournalFee);

                journalFormTrans.datasourceActivePost();
                custVendNACHAIATInfoTable_US.enabled(
                            CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                {
                    currentMainAccountId = MainAccount::getMainAccountRecIdFromLedgerDimension(ledgerJournalTrans.LedgerDimension);
                }
                else
                {
                    currentMainAccountId = 0;
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                {
                    currentOffsetMainAccountId = MainAccount::getMainAccountRecIdFromLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension);
                }
                else
                {
                    currentOffsetMainAccountId = 0;
                }
            }

            journalFormTrans.setDelTransButtonEnabledForJournalLine(ledgerJournalTrans.PaymentStatus);

            if (ledgerJournalTable.Approver)
            {
                if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
                {
                    buttonDeleteTransactions.enabled(false);
                    custPaymProposalCreate.enabled(false);
                }
            }

            if (ledgerJournalTable.ledgerJournalName().ApproveActive)
            {
                if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
                {
                    buttonApprove.enabled(false);
                    buttonReject.enabled(false);
                }
            }

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                element.setTaxWithholdEnabled_IN();
            }
            // </GIN>

            element.enableButtonDepositSlip();
            // <GIN>
            if (TaxParameters::checkTaxParameters_IN() || TaxWithholdParameters_IN::checkTaxParameters())
            {
                element.setTaxWithholdEnabled_IN();
            }
            // </GIN>

            markInvoiceLine.enabled(CustOpenTransLineManager::setMarkInvoiceButton(element.makeArgs()));

            LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTrans.Company);
            LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company);

            LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

            LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);

            LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);

            LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);

            LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);

            CustPaymJournalFee_CustAccount.parmControlDate(ledgerJournalTrans.TransDate);

            if (TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled()
                && ledgerJournalTrans.LedgerDimension)
            {
                markedInvoice = (SpecTrans::getSpecTransCount(
                                            ledgerJournalTrans.company(),
                                            ledgerJournalTrans.TableId,
                                            ledgerJournalTrans.RecId) != 0);

                // Disable fields below as they were used during calculation of the withholding tax in Open Trans form.
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdCalculate_TH)).allowEdit(!markedInvoice);
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,TaxWithholdGroup)).allowEdit(!markedInvoice);
            }

            element.setPaymentByLetterOfCredit();

            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                element.setLookupButton_BR();

                if (CustPaymModeTable::find(ledgerJournalTrans.PaymMode).ClassId == classNum(CustOutPaym_CNAB_BR)
                    && (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Recieved
                        || ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected))
                {
                    ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, PaymentStatus)).allowEdit(false);
                }

                element.configureLineStatusButton_BR();

                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Due)).allowEdit(!ledgerJournalTrans.hasCustVendTransOpen_BR());
            }
            // </GBR>

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
            {
                eInvoiceCFDIReference_MX.enabled(ledgerJournalTrans.RecId != 0 && ! ledgerJournalTrans.ledgerJournalTable().Posted);
            }

            if (mcrAllowPayment)
            {
                // Only allow users to create/modify the related card if a
                // payment exists for it.
                if (ledgerJournalTrans.AmountCurCredit
                    || ledgerJournalTrans.AmountCurDebit)
                {
                    mcrCustPaymButton.enabled(true);
                }
                else
                {
                    mcrCustPaymButton.enabled(false);
                }
            }

            element.enableDisableCashRegister_W();

            // Enable/disable PDCs
            if (postDatedCheckEnabled)
            {
                custPDCRegister_ds.allowEdit(CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans) &&
                                            ledgerJournalTrans.PaymentStatus != CustVendPaymStatus::Sent);
            }

            element.enableDisableMandate();

            element.ledgerJournalTransActivated(this);
            
            if (CFMParameters::isPaymentRequestsEnabled())
            {
                boolean allowEditPR = !CFMPaymentRequestPaymentLink::isGeneratedFromPaymentSchedule(ledgerJournalTrans);

                ledgerJournalTrans_ds.allowCreate(allowEditPR);
                ledgerJournalTrans_ds.allowDelete(allowEditPR);
            }

            LedgerJournalPostTransfer.enabled(!LedgerJournalTable.BankTransSummarizationEnabled);

            element.enableBridgingBankAccountFields();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res = -1;
            #resAppl;

            if (journalFormTrans.parmCheckPostResults().errorExists(_ledgerJournalTrans.Voucher)
                || (norwayEnabled
                    && _ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected))
            {
                res = imageListAppl.image(#ImageError);
            }
            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorLog</Name>
						<Source><![CDATA[
        display LogTxt errorLog()
        {
            return journalFormTrans.parmCheckPostResults().errorLog(ledgerJournalTrans.Voucher);
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedDateTime</Name>
						<Source><![CDATA[
        display JournalPostedDateTime postedDateTime()
        {
            return ledgerJournalEngine.postedDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>approvedBy</Name>
						<Source><![CDATA[
        display ApprovedByPersonnelNumber approvedBy()
        {
            return ledgerJournalEngine.approvedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>rejectedBy</Name>
						<Source><![CDATA[
        display UserId rejectedBy()
        {
            return ledgerJournalEngine.rejectedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reportedAsReadyBy</Name>
						<Source><![CDATA[
        display UserId reportedAsReadyBy()
        {
            return ledgerJournalEngine.reportedAsReadyBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalance</Name>
						<Source><![CDATA[
        display AmountMST journalBalance()
        {
            return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCredit</Name>
						<Source><![CDATA[
        display AmountMST journalCredit()
        {
            return ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebit</Name>
						<Source><![CDATA[
        display AmountMST journalDebit()
        {
            return ledgerJournalEngine.journalDebit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotal</Name>
						<Source><![CDATA[
        display AmountMST voucherTotal()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCredit</Name>
						<Source><![CDATA[
        display AmountMST voucherCredit()
        {
            return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebit</Name>
						<Source><![CDATA[
        display AmountMST voucherDebit()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotalReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherTotalReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans) - ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherCreditReportingCurrency()
        {
            return ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherDebitReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalanceReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalBalanceReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency() - ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalCreditReportingCurrency()
        {
            return ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalDebitReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Force the LedgerJournalEngine to update its internal variables
        /// storing the balances after the delete is completed.
        /// </summary>
        public void deleteMarked()
        {
            // The journal lines can safely be deleted in batch mode if all records are marked and
            // other requirements are met - if these requirements are not met, revert to row by row.
            if (LedgerJournalDeleteTransaction::deleteInBatch(this.formRun(), ledgerJournalTrans))
            {
                LedgerJournalTrans_DS.research();
            }
            else
            {
                super();
            }

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

            buttonSettlement.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            journalFormTrans.setMassTransactionReversalButtonVisibility();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl, ledgerJournalTrans, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            // Handles the AccountType modified event.
            public void modified()
            {
                super();
                ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);
                // The selected invoice and related fields must be cleared so that
                // related SpecTrans records are cleared on save.
                ledgerJournalTrans.MarkedInvoice = '';
                ledgerJournalTrans.MarkedInvoiceRecId = 0;
                element.enableDepreciationStartDate();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>

                element.enableDisableCashRegister_W();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalTrans.AmountCurCredit = CurrencyExchange::round(ledgerJournalTrans.AmountCurCredit, ledgerJournalTrans.CurrencyCode);

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                // enable/disable mark invoice line button on the basis of Credit field amount.
                markInvoiceLine.enabled(CustOpenTransLineManager::setMarkInvoiceButton(element.makeArgs()));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalTrans.AmountCurDebit = CurrencyExchange::round(ledgerJournalTrans.AmountCurDebit, ledgerJournalTrans.CurrencyCode);

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankAccountId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankCentralBankPurposeCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.bankCentralBankPurposeCodeModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankDepositVoucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                CustVendPaymJournalFee::updateBankDepositVoucherForPaymentLine(ledgerJournalTrans.RecId, ledgerJournalTrans.BankDepositVoucher);

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankRemittanceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BridgingBankAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                if (ledgerJournalTrans.parmLedgerDimension())
                {
                    // Clear AccountNum if already set, not clearing can cause validation errors due to new company
                    ledgerJournalTrans.parmLedgerDimension(0);
                    element.accountNumModifiedPost();
                    element.enableBridgingBankAccountFields();
                }

                return super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.companyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                LedgerJournalTrans_AccountNum1.setDataAreaId(ledgerJournalTrans.Company, true);
                LedgerJournalTrans_AccountNum.setDataAreaId(ledgerJournalTrans.Company, true);

                ledgerJournalTrans_ds.refresh();
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                journalFormTrans.enableFieldsActive();
                CurrencyCode currencyCodeOrig = ledgerJournalTrans.orig().CurrencyCode;

                super();

                if (SpecTrans::getSpecTransCount(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId) > 0)
                {
                    ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                }

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);

                LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);

                if (currencyCodeOrig != ledgerJournalTrans.CurrencyCode
                    && TaxWithholdSetupWithholdingTaxCurrencyExchRateHelper::isEnabledWHTCurrencyExchRateParam()
                    && TaxWithholdTrans::isTaxWithholdTransExistForMarkedTrans(ledgerJournalTrans))
                {
                    warning("@Tax_WithholdTax:WithholdingTaxPaymentCurrencySwitchMessage");
                }

            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustBankAccount::lookupBankAccount(_formControl, ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                element.getMenuFunctionForCustBankAccountJumpRef().run(element.getArgsForCustBankAccountJumpRef());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                if (ledgerJournalTrans.orig().DocumentDate != LedgerJournalTrans.DocumentDate
                    && TaxWithholdSetupWithholdingTaxCurrencyExchRateHelper::isEnabledWHTCurrencyExchRateParam()
                    && LedgerParameters::find().TaxWithholdCalcDateType == TaxWithholdCalcDateType::DocumentDate
                    && TaxWithholdTrans::isTaxWithholdTransExistForMarkedTrans(ledgerJournalTrans))
                {
                    warning("@Tax_WithholdTax:WarningWhenWHTCalcDateTypeIsDocumentDate");
                }

                super();

                ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                if (element.canDeleteJournalPaymentIfExists(ledgerJournalTrans))
                {
                    if (RetailCheckJournalLineHasPaymentAndAskUserConfirmationOnUpdateFlight::instance().isEnabled())
                    {
                        element.deleteJournalPayment(ledgerJournalTrans);
                    }

                    super();

                    // <GIN>
                    if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                    {
                        ledgerJournalEngine.parmNewAccountNum_IN(ledgerJournalTrans.parmAccount());
                    }
                    // </GIN>

                    element.accountNumModifiedPost();
                    journalFormTrans.enableButtonsActive();
                    journalFormTrans.enableFieldsActive();
                    element.enableBridgingBankAccountFields();

                    ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                    ledgerJournalTrans_ds.rereadReferenceDataSources();

                    // <GIN>
                    if (TaxWithholdParameters_IN::checkTaxParameters())
                    {
                        element.setTaxWithholdEnabled_IN();
                    }
                    // </GIN>

                    element.enableDisableCashRegister_W();

                    element.updateTaxGroupAllowEditInTaxIntegration();
                }
                else
                {
                    ledgerJournalTrans.LedgerDimension = ledgerJournalTrans.orig().LedgerDimension;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                CustTable::jumpRefCustomer(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerVoucherType_CN</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MarkedInvoice</DataField>
						<Methods>
							<Method>
								<Name>updatePaymentTerms</Name>
								<Source><![CDATA[
            /// <summary>
            /// Updates the default Payment terms with posted invoices payment terms.
            /// </summary>
            protected void updatePaymentTerms()
            {
                ledgerJournalTrans.setCustPaymentTermsOfPaymentByInvoice();
            }

]]></Source>
							</Method>
							<Method>
								<Name>calculateWithholdTax_TH</Name>
								<Source><![CDATA[
            private void calculateWithholdTax_TH()
            {
                if ((TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled() || BrazilParameters::isEnabled())
                    && ledgerJournalTrans.TaxWithholdCalculate_TH
                    && ledgerJournalTrans.MarkedInvoice)
                {
                    TaxWithhold::construct(ledgerJournalTrans).createAllTaxWithholdTrans();
                    ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>updatePaymentAmount</Name>
								<Source><![CDATA[
            // Updates AmountCurCredit and AmountCurDebit for the total of the marked invoice.
            // If the current values are non-zero and are different from the total, the user is
            // prompted by a message box to update the amounts.
            protected void updatePaymentAmount()
            {
                Amount paymentAmount;
                boolean updateAmount = false;
                // <GBR>
                CustTransOpen custTransOpen;
                // </GBR>

                if (ledgerJournalTrans.MarkedInvoiceCompany != ''
                    || ledgerJournalTrans.MarkedInvoice != ''
                    || ledgerJournalTrans.MarkedInvoiceRecId != 0)
                {
                    // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                    // should be in sync with each other. All with valid values or all empty.
                    Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany != ''
                        && ledgerJournalTrans.MarkedInvoice != ''
                        && ledgerJournalTrans.MarkedInvoiceRecId != 0);

                    paymentAmount = LedgerJournalEngine_CustPayment::calculateOpenInvoiceAmount(
                        ledgerJournalTrans.MarkedInvoiceCompany,
                        ledgerJournalTrans.MarkedInvoiceRecId,
                        ledgerJournalTrans.CurrencyCode,
                        ledgerJournalTrans.Company,
                        ledgerJournalTrans.TransDate,
                        ledgerJournalTrans.ExchRate,
                        ledgerJournalTrans.PaymMode);
                }
                else
                {
                    // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                    // should be in sync with each other. All with valid values or all empty.
                    Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany == ''
                        && ledgerJournalTrans.MarkedInvoice == ''
                        && ledgerJournalTrans.MarkedInvoiceRecId == 0);

                    // No invoice is selected so paymentAmount should be 0
                    paymentAmount = 0;
                }

                if (paymentAmount != 0 && (ledgerJournalTrans.AmountCurCredit != 0 || ledgerJournalTrans.AmountCurDebit != 0))
                {
                    if (paymentAmount != ledgerJournalTrans.AmountCurCredit || ledgerJournalTrans.AmountCurDebit != 0)
                    {
                        // Ask the user if amount should be updated.
                        updateAmount = Box::yesNo("@SYS58110", DialogButton::Yes, "@SYS8801", "@SYS29050") == DialogButton::Yes;
                    }
                }
                else
                {
                    // Need to update the amount.
                    updateAmount = true;
                }

                if (updateAmount)
                {
                    ledgerJournalTrans.AmountCurCredit = paymentAmount;
                    ledgerJournalTrans.AmountCurDebit = 0;
                    // <GBR>
                    if (BrazilParameters::isEnabled())
                    {
                        if (ledgerJournalTrans.MarkedInvoice != '' && ledgerJournalTrans.MarkedInvoiceCompany != '')
                        {
                            changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                            {
                                // Find open invoice record
                                custTransOpen = CustTransOpen::find(ledgerJournalTrans.MarkedInvoiceRecId);
                            }
                        }

                        ledgerJournalTransPayment_BR.FinInterestAmountCur_BR = custTransOpen.InterestAmountPaymCur_BR;
                        ledgerJournalTransPayment_BR.FineAmountCur_BR = custTransOpen.FineAmountPaymCur_BR;
                    }
                    // </GBR>
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            // Displays a custom lookup form that provides the user with the means of selecting
            // a MarkedInvoice record filtered by the AccountNum (customer) field.
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Args args = new Args(formStr(CustOpenInvoicesLookup));
                args.record(ledgerJournalTrans);
                args.caller(element);
                args.lookupValue(ledgerJournalTrans.MarkedInvoice);

                if (_filterStr != '')
                {
                    args.parm(_filterStr);
                }

                FormRun formRun = ClassFactory::formRunClassOnClient(args);
                formRun.init();

                this.performFormLookup(formRun, _formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>initFromMarkedInvoice</Name>
								<Source><![CDATA[
            // Sets the default currency and accountnum for this LedgerJournalTrans record.
            protected void initFromMarkedInvoice()
            {
                if (ledgerJournalTrans.MarkedInvoiceCompany != ''
                    || ledgerJournalTrans.MarkedInvoice != ''
                    || ledgerJournalTrans.MarkedInvoiceRecId != 0)
                {
                    // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                    // should be in sync with each other. All with valid values or all empty.
                    Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany != ''
                        && ledgerJournalTrans.MarkedInvoice != ''
                        && ledgerJournalTrans.MarkedInvoiceRecId != 0);

                    if (!ledgerJournalTrans.parmLedgerDimension())
                    {
                        changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                        {
                            CustTrans custTrans;
                            if (ledgerJournalTrans.MarkedInvoiceRecId && LedgerJournalTransCustPaymMarkedInvoiceLookUpFlight::instance().isEnabled())
                            {
                                CustTransOpen custTransOpen;
                                select firstonly custTrans
                                    exists join custTransOpen
                                    where custTrans.RecId == custTransOpen.RefRecId
                                        && custTransOpen.RecId == ledgerJournalTrans.MarkedInvoiceRecId;
                            }
                            else
                            {
                                custTrans = CustTrans::findFromInvoice(ledgerJournalTrans.MarkedInvoice);
                            }

                            if (custTrans.RecId != 0)
                            {
                                ledgerJournalTrans.Company = ledgerJournalTrans.MarkedInvoiceCompany;
                                ledgerJournalTrans.parmAccount(custTrans.AccountNum);

                                // Default values based on AccountNum
                                ledgerJournalEngine.accountModified(ledgerJournalTrans);
                                ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);

                                if (ledgerJournalTrans.CurrencyCode != custTrans.CurrencyCode)
                                {
                                    // Override with the invoice currency and default based on it
                                    ledgerJournalTrans.CurrencyCode = custTrans.CurrencyCode;
                                    ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                                }
                            }
                        }
                    }
                }
                else
                {
                    // After LedgerJournalTrans.MarkedInvoice validate executes the MarkedInvoice fields
                    // should be in sync with each other. All with valid values or all empty.
                    Debug::assert(ledgerJournalTrans.MarkedInvoiceCompany == ''
                        && ledgerJournalTrans.MarkedInvoice == ''
                        && ledgerJournalTrans.MarkedInvoiceRecId == 0);

                    // <GBR>
                    if (BrazilParameters::isEnabled())
                    {
                        ledgerJournalTransPayment_BR.FinInterestAmountCur_BR = 0;
                        ledgerJournalTransPayment_BR.FineAmountCur_BR = 0;

                        // //clear Interest/Fine information from the OpenTrans related to this journal
                        CustVendOpenTransManager::clearInterestAndFineAmounts_BR(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                    }
                    // </GBR>

                    ledgerJournalTrans.SettleVoucher = SettlementType::None;

                    // MarkedInvoice fields are not set, delete any existing SpecTrans for this LedgerJournalTrans record
                    SpecTransManager::newFromSpec(ledgerJournalTrans).deleteAll();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            // Sets defaults for fields related to MarkedInvoice.
            public void modified()
            {
                if (element.canDeleteJournalPaymentIfExists(ledgerJournalTrans))
                {
                    if (RetailCheckJournalLineHasPaymentAndAskUserConfirmationOnUpdateFlight::instance().isEnabled())
                    {
                        element.deleteJournalPayment(ledgerJournalTrans);
                    }

                    super();

                    this.initFromMarkedInvoice();

                    // Update the Payment Terms.
                    this.updatePaymentTerms();

                    // Update the amount of the payment.
                    this.updatePaymentAmount();

                    ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                    ledgerJournalEngine.updateCustBankAccountIdFromDebitMandateId(ledgerJournalTrans);

                    ledgerJournalTrans_DS.write();
                    ledgerJournalTrans_ds.rereadReferenceDataSources();
                    this.calculateWithholdTax_TH();
                }
                else
                {
                    ledgerJournalTrans.MarkedInvoice = ledgerJournalTrans.orig().MarkedInvoice;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            // Validation for the MarkedInvoice field.
            // Remarks: Synchronizes the MarkedInvoice and MarkedInvoiceRecId fields if necessary.
            public boolean validate()
            {
                CustTrans custTrans;
                CustTransOpen custTransOpen;

                boolean isValid = super();

                if (isValid)
                {
                    if (ledgerJournalTrans.MarkedInvoice != '')
                    {
                        CustVendAC accountDisplay = ledgerJournalTrans.accountDisplay();

                        boolean doInvoiceAndInvoiceRecIdMatch = false;

                        // The MarkedInvoice field was updated to some non-empty value, so synchronize
                        // MarkedInvoiceRecId if necessary and validate that the change is okay.
                        if (ledgerJournalTrans.MarkedInvoiceRecId != 0 && ledgerJournalTrans.MarkedInvoiceCompany != '')
                        {
                            changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                            {
                                if (LedgerJournalEngine_CustPayment::doInvoiceAndOpenRecIdMatchUp(
                                    ledgerJournalTrans.MarkedInvoice,
                                    ledgerJournalTrans.MarkedInvoiceRecId))
                                {
                                    doInvoiceAndInvoiceRecIdMatch = true;
                                }
                                else
                                {
                                    doInvoiceAndInvoiceRecIdMatch = false;
                                    ledgerJournalTrans.MarkedInvoiceRecId = 0;
                                    ledgerJournalTrans.MarkedInvoiceCompany = '';
                                }
                            }
                        }

                        if (doInvoiceAndInvoiceRecIdMatch == false && (ledgerJournalTrans.MarkedInvoiceRecId == 0 || ledgerJournalTrans.MarkedInvoiceCompany == ''))
                        {
                            // The MarkedInvoice and MarkedInvoiceRecId fields have fallen out of synchronization; the
                            // MarkedInvoice field was changed manually.

                            // Get companies that are in the shared service boundary with the company specified on the transaction.
                            container sharedServiceCompanies = CustVendOpenTransManager::findSharedServiceCompanies(ledgerJournalTrans.Company);

                            boolean sharedServiceCompanyRecordFound = false;
                            boolean matchingCustTransOpenRecFound = false;

                            // Get the earliest due CustTransOpen RecId for this invoice.
                            // Find matching CustTransOpen record, if more than one record is returned then fail.
                            while select crosscompany:sharedServiceCompanies RecId, DataAreaId from custTransOpen
                                order by DueDate asc
                                join RecId from custTrans
                                where custTrans.RecId == custTransOpen.RefRecId
                                    && custTrans.Invoice == ledgerJournalTrans.MarkedInvoice
                            {
                                if (!matchingCustTransOpenRecFound)
                                {
                                    ledgerJournalTrans.MarkedInvoiceRecId = custTransOpen.RecId;
                                    ledgerJournalTrans.MarkedInvoiceCompany = custTransOpen.DataAreaId;
                                    matchingCustTransOpenRecFound = true;
                                    doInvoiceAndInvoiceRecIdMatch = true;
                                }
                                else
                                {
                                    // A second record was found, fail. The lookup will have to be used.
                                    ledgerJournalTrans.MarkedInvoiceRecId = 0;
                                    ledgerJournalTrans.MarkedInvoiceCompany = '';
                                    matchingCustTransOpenRecFound = false;
                                    doInvoiceAndInvoiceRecIdMatch = false;
                                    break;
                                }
                                // An invoice in the shared service boundary was located.
                                sharedServiceCompanyRecordFound = true;
                            }

                            if (sharedServiceCompanyRecordFound == false)
                            {
                                // Looking for an Invoice that is not in the Shared Service Boundary
                                select firstonly crosscompany RecId, DataAreaId from custTransOpen
                                    order by DueDate asc
                                    join custTrans
                                    where custTrans.RecId == custTransOpen.RefRecId
                                        && custTrans.Invoice == ledgerJournalTrans.MarkedInvoice
                                        && custTrans.AccountNum == accountDisplay;

                                if (custTransOpen)
                                {
                                    // The Invoice is for a company that is outside of the Shared Service Boundary.
                                    isValid = checkFailed("@SYS105827");
                                    return isValid;
                                }
                            }
                        }

                        if (doInvoiceAndInvoiceRecIdMatch)
                        {
                            boolean isTransFullyMarkedToBeSettled;
                            changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                            {
                                // Find existing CustTrans for the MarkedInvoice field.
                                custTrans = CustTrans::findOpenTransFromInvoice(ledgerJournalTrans.MarkedInvoice, accountDisplay);

                                // Find existing SpecTrans for the MarkedInvoice field.
                                isTransFullyMarkedToBeSettled = custTrans.transOpen().transOpenData().findRemainingAmountCur() == 0;
                            }

                            if (custTrans.RecId == 0
                                || ledgerJournalTrans.MarkedInvoiceRecId == 0
                                || custTrans.remainAmountCur() <= 0
                                || isTransFullyMarkedToBeSettled)
                            {
                                // The Invoice either does not exist or there is an existing SpecTrans from another transaction.
                                isValid = checkFailed("@SYS105400");
                            }
                        }
                        else
                        {
                            // Direct the user to use the lookup button to select the Invoice.
                            isValid = checkFailed("@SYS116479");
                            return isValid;
                        }

                        if (ledgerJournalTrans.parmLedgerDimension())
                        {
                            // Retreive the Party for the LedgerJournalTrans AccountNum and the CustTrans AccountNum
                            DirPartyRecId custTransAccountNumParty = CustTable::findByCompany(custTrans.company(), custTrans.AccountNum).Party;
                            DirPartyRecId ledgerJournalTransAccountNumParty = CustTable::findByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.parmAccount()).Party;

                            if (custTransAccountNumParty != ledgerJournalTransAccountNumParty)
                            {
                                // The invoice does not fall under the payment customer.
                                isValid = checkFailed("@SYS105827");
                            }
                        }
                    }
                    else
                    {
                        // <GBR>
                        if (BrazilParameters::isEnabled())
                        {
                            if (ledgerJournalTrans.MarkedInvoiceCompany != '')
                            {
                                // Clearing Interest/Fine Amounts
                                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                                {
                                    // Find open invoice record
                                    custTransOpen = CustTransOpen::find(ledgerJournalTrans.MarkedInvoiceRecId);
                                }

                                changecompany(ledgerJournalTrans.company())
                                {
                                    custTransOpen.selectForUpdate(true);
                                    custTransOpen.FineAmount_BR = 0;
                                    custTransOpen.FineAmountPaymCur_BR = 0;
                                    custTransOpen.InterestAmount_BR = 0;
                                    custTransOpen.InterestAmountPaymCur_BR = 0;
                                    custTransOpen.update();
                                }
                            }

                            ledgerJournalTransPayment_BR.FinInterestAmountCur_BR = 0;
                            ledgerJournalTransPayment_BR.FineAmountCur_BR = 0;

                            if (ledgerJournalTrans.MarkedInvoiceCompany != '')
                            {
                                changecompany(ledgerJournalTrans.MarkedInvoiceCompany)
                                {
                                    TaxWithhold::uncheckWithholdTrans_BR(ledgerJournalTrans);
                                }
                            }
                        }
                        // </GBR>

                        // The invoice was blanked out or the company was not set, so clear the remaining 'MarkedInvoice' fields.
                        ledgerJournalTrans.MarkedInvoiceRecId = 0;
                        ledgerJournalTrans.MarkedInvoiceCompany = '';
                        LedgerJournalTransBankLC::syncSettlement(ledgerJournalTrans, 0);
                    }
                }

                return isValid;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl,
                    ledgerJournalTrans,
                    _filterStr,
                    AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                LedgerJournalACType offsetACType = this.getValue();

                // The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                // form-specific, and defaulting for asset was moved to the LedgerJournalEngine class and requires multiple table buffers and
                // thus cannot be called from the super()
                if (priorOffsetAccountType != offsetACType)
                {
                    priorOffsetAccountType = offsetACType;
                    ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);

                    if (ledgerJournalTrans.modifiedFieldRemovesAccruals(fieldNum(LedgerJournalTrans, OffsetAccountType)))
                    {
                        ledgerJournalTrans.removeAccruals();
                    }
                }

                element.enableDepreciationStartDate();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>

                element.enableDisableCashRegister_W();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

                journalFormTrans.enableFieldsActive();

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, null, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets
                    && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                {
                    // The primary account is not of type fixed assets and the offset account was changed
                    // to a fixed asset account, so redefault the depreciation start date.
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                element.enableDisableCashRegister_W();

                element.updateTaxGroupAllowEditInTaxIntegration();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Payment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                {
                    // A custom lookup is required for ledger accounts because different tables are
                    // accessed depending on the calling form. in all other supported cases the table
                    // relation provides the necessary link.
                    CustPaymModeTable::lookupPaymMethod(_formControl, _filterStr, ledgerJournalTrans.Company);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                // <GEERU>
                Object obj = ledgerJournalEngine;
                // </GEERU>
                boolean allowPostDatedChecks;

                ledgerJournalEngine.paymModeModified(ledgerJournalTrans);

                super();
                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableOrderPaymentFields_RU();
                    obj.updatePaymentOrderBudgetTrans_RU(ledgerJournalTrans);
                }
                // </GEERU>
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                ledgerJournalEngine.updateCustBankAccountIdFromDebitMandateId(ledgerJournalTrans);

                ledgerJournalTrans_ds.rereadReferenceDataSources();
                custVendNACHAIATInfoTable_US.enabled(
                                CustVendNACHAIATInfoTable_US::isValidCustVendNACHAIATInfoTable_US(ledgerJournalTrans));

                // Enable/disable PDCs
                if (postDatedCheckEnabled)
                {
                    allowPostDatedChecks = CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans);
                    custPDCRegister_ds.allowEdit(allowPostDatedChecks && ledgerJournalTrans.PaymentStatus != CustVendPaymStatus::Sent);
                    printAckReceipt.visible(allowPostDatedChecks);
                    printAckReceipt.enabled(allowPostDatedChecks);
                }
                // <GBR>
                if (BrazilParameters::isEnabled())
                {
                    custEPRemitInfo_BR_ds.reread();
                    custEPRemitInfo_BR_ds.refresh();
                    ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, ledgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                    ledgerJournalTransPayment_BR_ds.reread();
                    ledgerJournalTransPayment_BR_ds.refresh();
                    element.setLookupButton_BR();
                }
                // </GBR>

                element.enableDisableCashRegister_W();

                element.enableBridgingBankAccountFields();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymSpec</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                // <GBR>
                if (BrazilParameters::isEnabled())
                {
                    ledgerJournalTransPayment_BR.setPaymentSetting_BR(ledgerJournalTrans.AccountType, ledgerJournalTrans.RecId, ledgerJournalTrans.PaymSpec, ledgerJournalTrans.PaymMode);
                    ledgerJournalTransPayment_BR_ds.reread();
                    ledgerJournalTransPayment_BR_ds.refresh();
                }
                // </GBR>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PostingProfile</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalEngine::lookupPostingProfileForAccountType(_formControl, _filterStr, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Prepayment</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ledgerJournalTrans.Prepayment
                    && CustParameters::find().TaxOnPrepayment
                    && !ledgerJournalTrans.ledgerJournalTable().LedgerJournalInclTax)
                {
                    error ("@SYS98399");
                    ret = false;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
                element.enableButtonsActive();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReleaseDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Handles change of release date field.
            /// </summary>
            /// <remarks>
            /// Gives a warning if the date is in the past. Saves the entered value in internal variable.
            /// </remarks>
            public void modified()
            {
                super();
                if (ledgerJournalTrans.ReleaseDate != utcDateTimeNull()
                    && DateTimeUtil::addDays(ledgerJournalTrans.ReleaseDate, 1) < DateTimeUtil::utcNow())
                {
                    warning("@SYS114595");
                }
                lastEnteredReleaseDate = ledgerJournalTrans.ReleaseDate;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxGroupCompany)
                {
                    taxGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxGroupHeading::taxGroupLookup(_formControl, taxGroupCompany);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxItemGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxItemGroupCompany)
                {
                    taxItemGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxItemGroupHeading::taxItemGrouplookup(_formControl, taxItemGroupCompany);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                if (ledgerJournalTrans.orig().TransDate != LedgerJournalTrans.TransDate
                    && TaxWithholdSetupWithholdingTaxCurrencyExchRateHelper::isEnabledWHTCurrencyExchRateParam()
                    && (LedgerParameters::find().TaxWithholdCalcDateType == TaxWithholdCalcDateType::PaymentDate
                        || (LedgerParameters::find().TaxWithholdCalcDateType == TaxWithholdCalcDateType::DocumentDate
                            && ledgerJournalTrans.DocumentDate == dateNull()))
                    && TaxWithholdTrans::isTaxWithholdTransExistForMarkedTrans(ledgerJournalTrans))
                {
                    warning("@Tax_WithholdTax:WarningWhenWHTCalcDateTypeIsPaymentDate");
                }

                super();
                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
                ledgerJournalEngine.transDateModified(ledgerJournalTrans);
                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);

                LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);

                LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);

                CustPaymJournalFee_CustAccount.parmControlDate(ledgerJournalTrans.TransDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Triangulation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VATNumJournal</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::jumpRefVATNum(ledgerJournalTrans, this);
                }
                else
                {
                    super();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::lookupVATNum(_formControl, ledgerJournalTrans);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.formMethodDataSourceVoucherModified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher_CN</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                // <GCN>
                if (ret && chineseVoucher_CN)
                {
                    ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                }
                // </GCN>

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustVendPaymJournalFee</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
            super();
            ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
            ledgerJournalEngine.preWriteUpdateDefaultDimensionPaymFee(custVendPaymJournalFee);
            super();
            ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            custVendPaymJournalFee.Module = ModuleCustVend::Cust;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>FeeCurrency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                CustPaymJournalFee_CustAccount.parmCurrency(custVendPaymJournalFee.FeeCurrency);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                CompanyId validationCompany;
                // This needs to happen in the correct company context
                if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust
                    || custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Vend)
                {
                    validationCompany = ledgerJournalTrans.Company;
                }
                else
                {
                    validationCompany = ledgerJournalTrans.company();
                }

                boolean ret;
                changecompany(validationCompany)
                {
                    ret = super();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerJournalACType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Clear the account when the account type changes
                custVendPaymJournalFee.parmLedgerDimension(0);

                if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger
                    || custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust)
                {
                    custPaymJournalFee_CustAccount.enabled(true);
                }
                else
                {
                    // Disable the account lookup if the value is not Ledger or Customer
                    custPaymJournalFee_CustAccount.enabled(false);
                }
                custVendPaymJournalFee_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Asset</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
            element.enableDepreciationStartDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.enableDepreciationStartDate();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Asset.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Asset.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BookId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.initFromAssetTable(ledgerJournalTrans, ledgerJournalTrans_Asset);
                }

                ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                AssetBook::lookupOpenBookIdForAsset(
                    _formControl,
                    ledgerJournalTrans_Asset.AssetId,
                    true, // CurrentOperationsTax must be considered
                    ledgerJournalTable.CurrentOperationsTax,
                    ledgerJournalTrans_Asset.Company,
                    true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustPDCRegister</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.enableReplacementFields();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            custPDCRegister.LedgerJournalTrans = ledgerJournalTrans.RecId;
            custPDCRegister.AccountType = CustVendACType::Cust;
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OriginalCheck</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustVendPDCRegister::lookupCheckNumber(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransExtensionTH</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret= true;

            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks whether this data sources should be enable or not.
        /// </summary>
        /// <returns>
        /// true if it should be eneabled; otherwise, return false.
        /// </returns>
        /// <remarks>
        /// This data source is joined to its parent data source with join type <c>Passive</c>
        /// by default. It means this data source is disabled by default.
        /// If any related feature needs this data source, then add condition(s) here to
        /// mark that it should be enabled.
        /// </remarks>
        public boolean isNeeded()
        {
            boolean ret = TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled()
                || TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>PaymentOrderBudgetTrans_RU</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            Object obj = ledgerJournalEngine;
            if (obj.needWritePaymentOrderBudgetTrans_RU())
            {
                ret = super();
            }
            else
            {
                ret = true;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            Object obj = ledgerJournalEngine;
            if (obj.needWritePaymentOrderBudgetTrans_RU())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PeriodCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                Object obj = ledgerJournalEngine;
                super();

                obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PeriodNumber</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                Object obj = ledgerJournalEngine;
                super();

                obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxPeriodDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                Object obj = ledgerJournalEngine;
                super();

                obj.paymOrderTransTaxPeriodDateModified_RU(paymentOrderBudgetTrans_RU);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>year</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                Object obj = ledgerJournalEngine;
                super();

                obj.paymOrderTransPeriodCodeModified_RU(paymentOrderBudgetTrans_RU);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustEPRemitInfo_BR</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                custEPRemitInfo_BR_ds.linkType(FormLinkType::Active);
            }
            // </GBR>
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BankFolder</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                EPBankFolders_BR::EPBankFoldersLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentType</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                EPDocumentTypes_BR::EPDocumentTypeLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Instruction_1</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Instruction_2</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                EPInstructions_BR::EPInstructionsLookup(_formControl,CustVendType_BR::Customer, ledgerJournalTrans.PaymMode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransPayment_BR</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (BrazilParameters::isEnabled()
                && ledgerJournalTransPayment_BR.RefRecId)
            {
                ledgerJournalTransPayment_BR.epPaymentType_BR = ledgerJournalTrans.PaymSpec ? CustPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).epPaymentType_BR : '';
                ledgerJournalTransPayment_BR.epPaymentWay_BR = ledgerJournalTrans.PaymSpec ? CustPaymModeSpec::findSpec(ledgerJournalTrans.PaymMode, ledgerJournalTrans.PaymSpec).epPaymentWay_BR : '';
                // no-op because a record with an empty FK is not valid
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                ledgerJournalTransPayment_BR_ds.linkType(FormLinkType::OuterJoin);
            }
            // </GBR>
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransPayment_LV</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            return super()
                && ledgerJournalTransPayment_LV_ds.allowEdit(!ledgerJournalEngine.posted()
                && !(ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent
                    || ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Confirmed
                    || (ledgerJournalTrans.PaymentStatus == CustVendPaymStatus::Rejected)));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransSymbol</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
            {
                // Only enable the symbol datasource if the country context is correct
                ledgerJournalTransSymbol_DS.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            if (!ledgerJournalTransSymbol.LedgerJournalTrans)
            {
                ledgerJournalTrans_DS.write();
                ledgerJournalTransSymbol.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }

            return super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
                ledgerJournalTransTaxExtensionIN.CalculateWithTaxableAmountGSTTDS = NoYes::Yes;
            }
            // </GIN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);

                if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
                {
                    LedgerJournalTransTaxExtensionIN_ExcludedGSTAmountCur.visible(true);
                }
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TCSGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWithholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tcsGroup, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TDSGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWithholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tdsGroup, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_W</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (enableLedgerJournalTrans_W && LedgerJournalTrans_W.LedgerJournalTrans != 0)
            {
                // Only write the child table if the country context is set to one that the table has fields linked to and the child table has the parent FK set
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return LedgerJournalTrans_W.LedgerJournalTrans ? super() : true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (enableLedgerJournalTrans_W)
            {
                // Switch the link type as fields appear in the grid that require an outerjoin
                ledgerJournalTrans_W_ds.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CashRegisterTerminal</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                RegisterRecId.value(CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal).CashRegister);
                LedgerJournalTrans_W_DS.write();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();
                if (ret)
                {
                    if (LedgerJournalTrans_W.CashRegisterTerminal
                        && CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal).Location != LocationRecId.value())
                    {
                        ret = checkFailed(strFmt("@FiscalServices:AS_LedgerJournalTransCustPaym_Form_CashTerm", CashRegisterLocation_W::find(LocationRecId.value()).Code));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return CashRegisterTerminal_W::lookupTerminalForLocation(_formReferenceControl, LocationRecId.value());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (ledgerJournalTrans.isTaxIntegrationEnabled())
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (ledgerJournalTrans.isTaxIntegrationEnabled())
            {
                LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>OverrideSalesTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateTaxGroupAllowEditInTaxIntegration();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {                                
                using (SysInstrumentationActivityContext activityContext = 
                    this.getActivityContextForCustPaymPost(ledgerJournalEngine.ledgerJournalTable().numOfLines()))
                {                    
                    super();
                }                
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getpostingResults());

                if (journalFormTrans.parmCheckPostResults().errorInJournal())
                {
                    errorExist.visible(true);
                }

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>getActivityContextForCustPaymPost</Name>
						<Source><![CDATA[
        private SysInstrumentationActivityContext getActivityContextForCustPaymPost(int64 _numOfLines)
        {
            SysInstrumentationLogger logger = SysInstrumentationLoggerFactory::CreateLogger(classId2Name(classIdGet(this)));
            SysInstrumentationActivity activity =
                SysInstrumentationActivity::construct(
                    CustVendInstrumentationConstants::ModuleCustomer + '.Payments.Post',
                    CustVendInstrumentationConstants::InstrumentationNamespace);

            return logger.activityContextWithCustomProperties(activity)                
                .addCustomProperty(CustVendInstrumentationConstants::NumOfLines, int642Str(_numOfLines));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostJournalBatch</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                LedgerJournalMultiPost::singleJournalPost(ledgerJournalTable);
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getpostingResults());

                if (journalFormTrans.parmCheckPostResults().errorInJournal())
                {
                    errorExist.visible(true);
                }

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markReportAsReady();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonApprove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalEngine.markApproved();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.markRejected();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonCopyPeriodicJournal</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();
            ledgerJournalTable = LedgerJournalTable::find(journalNum);
            Args args = new Args();
            args.record(ledgerJournalTable);
            LedgerJournalCopyPeriodic::main(args);

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            CustVendPaymProposalLine::deleteByJournalId(ledgerJournalTable.JournalNum);
            ledgerJournalTrans_ds.research();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustPaymProposalCreate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // clear unused vouchers prior to invoking creation process
            ledgerJournalEngine.clearVoucher();

            boolean allowEditSave = ledgerJournalTrans_ds.allowEdit();
            boolean allowCreateSave = ledgerJournalTrans_ds.allowCreate();
            boolean allowDeleteSave = ledgerJournalTrans_ds.allowDelete();

            ledgerJournalTrans_ds.allowEdit(false);
            ledgerJournalTrans_ds.allowCreate(false);
            ledgerJournalTrans_ds.allowDelete(false);

            try
            {
                super();
            }
            finally
            {
                ledgerJournalTrans_ds.allowEdit(allowEditSave);
                ledgerJournalTrans_ds.allowCreate(allowCreateSave);
                ledgerJournalTrans_ds.allowDelete(allowDeleteSave);

                journalFormTrans.researchJournalLines();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustPaymProposalEdit</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            try
            {
                ledgerJournalEngine.lock();

                CustVendPaymProposalEditForm::newLedgerJournalTrans(ledgerJournalTrans).run();

                ledgerJournalEngine.newJournalActive(ledgerJournalTrans.ledgerJournalTable(), true);
                CustVendPaymProposalLine::deleteByJournalId(ledgerJournalTable.JournalNum);
            }
            finally
            {
                ledgerJournalEngine.unlock();

                // Active needs to be called to ensure that the LedgerJournalTrans line is editable
                // because ledgerJournalEngine.newJournalActive() sets it to not be editable.
                ledgerJournalTrans_DS.active();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustPaymProposalBatchProgress</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            CustVendPaymProposalBatchProgressController controller;
            controller = CustVendPaymProposalBatchProgressController::construct(journalNum, element);
            controller.initForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getpostingResults());

                if (journalFormTrans.parmCheckPostResults().errorInJournal())
                {
                    errorExist.visible(true);
                }

                ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
                CustVendPaymProposalLine::deleteByJournalId(ledgerJournalTable.JournalNum);
                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonCreatePayment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean ret = true;

            ledgerJournalEngine.clearVoucher();

            if (postDatedCheckEnabled && CustVendPDCManager::allowPostDatedChecks(ledgerJournalTrans))
            {
                custPDCRegister_ds.write();
            }

            // PostR1AXLTODO
            //if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
            //{
            //    ret = CustVendPaymAbroad_NO::checkForeignCustPaym(ledgerJournalTable.JournalNum);
            //}

            ret = ret && CustVendNACHAIATInfoTable_US::checkValuesIATpaymRecords(ledgerJournalTable.JournalNum);

            if (ret)
            {
                super();

                if (ledgerJournalTrans.parmLedgerDimension())
                {
                    journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getpostingResults());

                    if (journalFormTrans.parmCheckPostResults().errorInJournal())
                    {
                        errorExist.visible(true);
                    }
                    ledgerJournalTrans_ds.research();
                    ledgerJournalTrans_ds.active();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MCRCustPaymButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            MCRCustPaymTable mcrCustPaymTable;
            MCRCustPaym mcrCustPaymLocal;
            container paymAccounts;

            Args paymentArgs = new Args();

            paymentArgs.record(ledgerJournalTrans);

            FormRun paymentFormRun = new MenuFunction(menuitemDisplayStr(MCRCustPaym), MenuItemType::Display).create(paymentArgs);

            paymentFormRun.run();
            paymentFormRun.wait();

            mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId, ledgerJournalTrans.TableId);
            if (mcrCustPaymTable)
            {
                ttsbegin;
                mcrCustPaymLocal = MCRCustPaym::construct(mcrCustPaymTable);
                paymAccounts = mcrCustPaymLocal.getPaymAccount();
                ledgerJournalTrans.OffsetAccountType = conPeek(paymAccounts,1);

                if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    ledgerJournalTrans.OffsetLedgerDimension = LedgerDimensionFacade::serviceCreateLedgerDimensionForType(LedgerDimensionType::Account, conPeek(paymAccounts,2));
                }
                else
                {
                    ledgerJournalTrans.OffsetLedgerDimension = conPeek(paymAccounts,2);
                }

                if (ledgerJournalTrans.validateWrite())
                {
                    ledgerJournalTrans.update();
                }
                else
                {
                    throw error("@SYS104318");
                }
                ledgerJournalTrans_ds.research();
                ttscommit;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonDepositSlip</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonDeleteTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            CustVendPaymProposalLine::deleteByJournalId(ledgerJournalTable.JournalNum);
            ledgerJournalTrans_ds.research();
            journalFormTrans.enableButtonsActive();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustInpayment</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            Args args = new Args();
            args.caller(element);
            args.record(ledgerJournalTable);
            new MenuFunction(menuItemActionStr(CustInpayment), MenuItemType::Action).run(args);

            journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getpostingResults());

            if (journalFormTrans.parmCheckPostResults().errorInJournal())
            {
                errorExist.visible(true);
            }

            ledgerJournalTrans_ds.research();
            ledgerJournalTrans_ds.active();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Print_MenuButton</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // <GTE><GIN>
            taxEngineLedgerJournalTransHeader taxEngineLedgerJournalTransHeader;
            taxDocumentExtension_in taxDocumentExtension;
            TaxDocument taxDocument;
            // </GTE></GIN>

            super();

            // <GTE><GIN>
            if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled() && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                select firstOnly TableId, RecId from taxEngineLedgerJournalTransHeader
                    where taxEngineLedgerJournalTransHeader.JournalNum == ledgerJournalTrans.JournalNum
                        && taxEngineLedgerJournalTransHeader.Voucher    == ledgerJournalTrans.Voucher;

                taxDocument = TaxDocumentUtils::getTaxDocumentBySource(taxEngineLedgerJournalTransHeader.TableId, taxEngineLedgerJournalTransHeader.RecId);

                if (taxDocument)
                {
                    taxDocumentExtension = taxDocumentExtension_in::findByTaxDocument(taxDocument.TaxDocumentGuid);
                }

                GSTPayment_IN.enabled(LedgerJournalTrans::isCustomerPayment(ledgerJournalTrans) && ledgerJournalEngine.posted() && taxDocumentExtension.TaxInvReferenceType != GSTReference_IN::None);
            }
            // </GTE></GIN>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendPaymProposal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args args = new Args();

            args.caller(this);
            args.record(ledgerJournalTrans);

            if (TaxThaiGovCertificationFeatureChecker::isUnrealizedVATEnabled())
            {
                CustTrans custTrans = CustTrans::findVoucherDate(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate);
                CustTransExtensionTH custTransExtensionTH = custTrans.custTransExtensionTH();
                if (custTransExtensionTH.ReceiptId || custTrans.DocumentNum)
                {
                    if (custTransExtensionTH.ReceiptId && custTrans.DocumentNum)
                    {
                        args.parmEnumType(InvoiceTaxType::Both);
                    }
                    else if (custTransExtensionTH.ReceiptId)
                    {
                        args.parmEnumType(InvoiceTaxType::Realized);
                    }
                    else if (custTrans.DocumentNum)
                    {
                        args.parmEnumType(InvoiceTaxType::Unrealized);
                    }

                    new MenuFunction(menuitemOutputStr(PaymReceiptTaxInv), MenuItemType::Output).run(args);
                }
                else
                {
                    super();
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintAckReceipt</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args args = new Args();
            CustVendPDCReceiptController controller;
            MenuFunction menuFunc;

            super();

            controller = new CustVendPDCReceiptController();

            controller.parmAccountName(ledgerJournalTrans.accountName());
            controller.parmAccountType(CustVendACType::Cust);
            controller.parmBankBranch(custPDCRegister.BankBranch);
            controller.parmBankName(custPDCRegister.BankName);
            controller.parmCheckAmount(ledgerJournalTrans.displayCustPaymAmount());
            controller.parmCheckNum(custPDCRegister.CheckNumber);
            controller.parmCurrency(ledgerJournalTrans.CurrencyCode);
            controller.parmDateReceived(custPDCRegister.DateReceived);
            controller.parmMaturityDate(custPDCRegister.MaturityDate);
            args.parmObject(controller);

            menuFunc = new MenuFunction(menuitemOutputStr(CustVendPDCReport),MenuItemType::Output);
            menuFunc.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonWithholdTax_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdTrans_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdClosePaymlLine_BR</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalTrans.closeTaxWithholdEditStatus_BR();
            ledgerJournalTransPayment_BR.write();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdReopenPaymlLine_BR</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalTrans.reopenTaxWithholdEditStatus_BR();
            ledgerJournalTransPayment_BR.write();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSettlement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalTrans localLedgerJournalTrans;
            element.disableSettlement();

            localLedgerJournalTrans.data(ledgerJournalTrans);

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                TaxWithholdUncommitted_IN::deleteForInvoice(
                    tableNum(LedgerJournalTable),
                    localLedgerJournalTrans.ledgerJournalTable().RecId,
                    localLedgerJournalTrans.Voucher,
                    localLedgerJournalTrans.Invoice);
            }
            // </GIN>

            super();
            ledgerJournalEngine.settleTrans(ledgerJournalTrans);
            ledgerJournalEngine.preWrite(ledgerJournalTrans);

            // Update MarkedInvoice fields based on settleTrans() result
            ledgerJournalEngine.updateMarkedInvoiceFromSettlement(ledgerJournalTrans);

            ledgerJournalEngine.updateCustBankAccountIdFromDebitMandateId(ledgerJournalTrans);
            ledgerJournalEngine.updatePaymentNotes(ledgerJournalTrans);

            changecompany(ledgerJournalTrans.company())
            {
                ledgerJournalTrans.update();
                ledgerJournalTrans_ds.active();
                ledgerJournalTrans_ds.reread();
                element.writeLedgerJournalEngine(ledgerJournalTrans);

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
            }

            ledgerJournalTrans_ds.executeQuery();

            // Recalculate balances
            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            CustVendPaymProposalLine::deleteByJournalId(ledgerJournalTable.JournalNum);
            element.args().lookupRecord(localLedgerJournalTrans);
            ledgerJournalTrans_ds.research();

            element.enableDisableMandate();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MarkInvoiceLine</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args args;
            args = new Args(formStr(LedgerJournalTransCustPaym));
            args.caller(element);
            args.parmObject(ledgerJournalEngine);
            args.record(ledgerJournalTrans);

            new MenuFunction(menuitemDisplayStr(CustPaymEntryByLine), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FinancialDimension</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTrans.enableDimensionButtonsActive(custVendPaymJournalFee);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymentFeeAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openPaymFeeAccountFinancialDimensionForm(custVendPaymJournalFee, paymentFeeAccountDimension.menuItemType(), paymentFeeAccountDimension.menuItemName());

            custVendPaymJournalFee.write();
            custVendPaymJournalFee_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTransSource</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            #Task
            if (!ledgerJournalTable.Posted)
            {
                Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnCustPaym), element.getShowTax(), ledgerJournalTrans, element);
            }
            else
            {
                super();
            }

            if (ledgerJournalTable.isTaxIntegrationEnabled())
            {
                element.task(#taskRefresh);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxDocumentLauncher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            this.parameters(classStr(TaxableDocumentDescriptorGeneralJournal));
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonPaymentReconciliation</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean visible = false;
            boolean enabled = false;
            LedgerJournalTrans localLedgerJournalTrans;
            FormDataSource formDS;
            FormButtonControl ctrlBankChequeReuseButton = bankChequeReuse;
            if (ctrlBankChequeReuseButton)
            {
                visible = BankParameters::find().AllowCheckReuse;
                ctrlBankChequeReuseButton.visible(visible);

                if (visible)
                {
                    formDS = FormDataUtil::getFormDataSource(ledgerJournalTrans);
                    if (formDS)
                    {
                        for (localLedgerJournalTrans = getFirstSelection(formDS);
                        localLedgerJournalTrans;
                        localLedgerJournalTrans = formDS.getNext())
                        {
                            if (localLedgerJournalTrans.PaymentStatus == CustVendPaymStatus::Sent
                                && localLedgerJournalTrans.PaymReference)
                            {
                                enabled = true;
                                break;
                            }
                        }
                    }
                }

                ctrlBankChequeReuseButton.enabled(enabled);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymReconciliationNone</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!element.checkSEPAPaymentReject())
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankChequeReuse</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalTrans ledgerJournalTransRecord;
            ledgerJournalTransRecord.reuseCheck(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymReconciliationReject</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!element.checkSEPAPaymentReject())
            {
                return;
            }

            super();

            // <GEERU>
            if (countryRegion_RU)
            {
                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }

            if (!countryRegion_RU
                || (countryRegion_RU
                    && !ledgerJournalTrans.BankCurrencyTransferLog_RU
                    && !ledgerJournalTrans.existBankPaymentOrderJour_RU()))
            {
                // </GEERU>
                paymReconciliationNone.enabled(true);
                paymReconciliationConfirm.enabled(true);
                paymReconciliationRecieved.enabled(true);
                paymReconciliationSent.enabled(true);
                // <GEERU>
            }
            // </GEERU>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendPaymReconciliationDelete</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalTrans findRecord;

            findRecord.data(ledgerJournalTrans);
            super();
            element.args().lookupRecord(findRecord);
            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendPaymReconciliationSentDelete</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalTrans findRecord;

            findRecord.data(ledgerJournalTrans);
            super();
            element.args().lookupRecord(findRecord);
            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendPaymReconciliationDeleted</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            LedgerJournalTrans findRecord;

            findRecord.data(ledgerJournalTrans);
            super();
            element.args().lookupRecord(findRecord);
            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(this, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_MarkedInvoice</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.enableDisableMandate();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret && mcrAllowPayment)
            {
                ttsbegin;
                MCRCustPaymTable custPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(ledgerJournalTrans.RecId,
                                                                ledgerJournalTrans.TableId, true);
                if (custPaymTable)
                {
                    custPaymTable.Amount = abs(ledgerJournalTrans.amount());
                    custPaymTable.update();
                }
                ttscommit;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(this, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_PaymMode1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.enableDisableMandate();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_PaymentStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            ledgerJournalTrans.write();

            CustVendPaymReconciliationSetStatus::runForPaymentLine(ledgerJournalTrans, ledgerJournalTrans.PaymentStatus);

            ledgerJournalTrans_ds.reread();
            ledgerJournalTrans_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_Company</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            // Update the related segmented entry controls to ensure they are set to the correct company
            LedgerJournalTrans_AccountNum.setDataAreaId(this.text(), true);

            return super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(this, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetCompany</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            LedgerJournalTrans_OffsetAccount.setDataAreaId(this.text(), true);

            return super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(this, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransTaxInformationPaymentFeeButton_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args parm = new Args();
            
            parm.record(LedgerJournalTrans::findRecId(CustVendPaymJournalFee.feeTransRecId, false));
            parm.caller(element);
            new MenuFunction(menuitemdisplaystr(TransTaxInformation), MenuItemType::Display).run(parm);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustPaymJournalFee_CustAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger
                || custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentPaymentFeeMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(this, _segment, currentPaymentFeeMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_PaymMode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.enableDisableMandate();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_DirectDebitMandate</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            changecompany(LedgerJournalTrans.Company)
            {
                return CustDirectDebitMandate::lookupReference(ledgerJournalTrans.parmAccount(), this);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            changecompany(LedgerJournalTrans.Company)
            {
                return CustDirectDebitMandate::resolveReference(ledgerJournalTrans.parmAccount(), this);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OrigPaymReference_RU</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            custVendTransPaymRef_RU = LedgerJournalTrans_W::lookupPrePayment(this, FactureTaxCorrectionContragentType_RU::Customer, false, ledgerJournalTrans.parmAccount());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                if (custVendTransPaymRef_RU)
                {
                    ledgerJournalTrans_W.initPrePaymRef(custVendTransPaymRef_RU);
                    custVendTransPaymRef_RU = null;
                }
                else
                {
                    ledgerJournalTrans_W.clearPrePaymRef();
                }

                LedgerJournalTrans_W_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankLCNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ledgerJournalTrans_ds.jumpRefBankLC();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankLCLineNum</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ledgerJournalTrans_ds.jumpRefBankLC();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Replacement_IsReplacementCheck</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.enableReplacementFields();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BridgingBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthTransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElectronicPaymentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FBSpedEcfDerexClasificationCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntentLetterId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonBusinessUsagePercentage_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetFinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OldLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlafondDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOriginalDocumentAsFacture_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorVATDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CounterField>LineNum</CounterField>
			<Index>NumVoucherIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustVendPaymJournalFee</Name>
			<Table>CustVendPaymJournalFee</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>feeTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPaymFeeCoveredByVendor_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalACType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirection_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Asset</Name>
			<Table>LedgerJournalTrans_Asset</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPostingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsumptionQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAdjustedDepreciation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPriorYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowValuePoolType_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LVPTransferId_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefAssetID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReserveTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleFactor_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustPDCRegister</Name>
			<Table>CustVendPDCRegister</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBranch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReplacementCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaturityDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDCStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonForStop</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StopPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerCollectionAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerSalesPerson</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransExtensionTH</Name>
			<Table>LedgerJournalTransExtensionTH</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReceiptDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpOtherDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealVendName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceReceiptDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNatureOfAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegNum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PaymentOrderBudgetTrans_RU</Name>
			<Table>PaymentOrderBudgetTrans_RU</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BaseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetReceiptClassCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalACType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderOfPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintKPP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecipientRCOAD</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UIN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>year</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustEPRemitInfo_BR</Name>
			<Table>CustEPRemitInfo_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankFolder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarCodeInfo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Instruction_1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Instruction_2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransPayment_BR</Name>
			<Table>LedgerJournalTransPayment_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BorderoSequenceNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPCompanyDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPPaymentType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPPaymentWay_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinInterestAmountCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdEditStatus_BR</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransPayment_LV</Name>
			<Table>LedgerJournalTransPayment_LV</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankCommissionPayer_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBankCommissionPayer_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransSymbol</Name>
			<Table>LedgerJournalTransSymbol</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankConstantSymbol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecificSymbol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtensionIN</Name>
			<Table>LedgerJournalTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalculateWithTaxableAmountGSTTDS</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CENVATCreditAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CENVATCreditAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdAcknowledgementNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdCountryRegionToRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxWithholdNatureOfRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludedGSTAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludeGSTAmountGSTTDS</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSettleAmountGSTTDS</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxableAmountGSTTDS</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAcknowledgementNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCountryRegionToRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdNatureOfRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithIGSTPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WouldYouClaimRefund</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_W</Name>
			<Table>LedgerJournalTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashRegisterTerminal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeBearer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalInstrument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtension</Name>
			<Table>LedgerJournalTransTaxExtension</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS10719</Caption>
		<DataSource xmlns="">LedgerJournalTrans</DataSource>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransCustPaym</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournalBatch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransCustPaym</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<Text>@GeneralLedger:LedgerJournalPostInBatch</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870908</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLJTransCustPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LJTransCustPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPostCustPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCourse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306362</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonApprove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>buttonCopyPeriodicJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerBasic</ConfigurationKey>
								<ElementPosition>1073741816</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3868</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonPaymentProposal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1476394997</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustPaymProposalCreate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustPaymProposalCreate</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CzAdvancePaymentProposal_Cust</Name>
										<ElementPosition>894784852</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CzAdvancePaymentProposal_Cust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustPaymProposalEdit</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustPaymProposalEdit</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustPaymProposalBatchProgress</Name>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustPaymProposalProgress</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BankCustPaymProposalSpec</Name>
										<CountryRegionCodes>NO</CountryRegionCodes>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>BankCustPaymProposalSpec</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS66014</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonFunctions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1207959543</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransCustPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonCreatePayment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustSumForPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MCRCustPaymButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>MCRPayment</ConfigurationKey>
										<ElementPosition>878516037</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@MCR20754</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonDepositSlip</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BankDepositSlip</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator3</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonDeleteTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJourDelTransLJTransCustPaym</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustInpayment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustInpayment</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustVendNACHAIATInfoTable_US</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendNACHAIATInfoTable_US</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>custPaymentExecDate_BE</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>custPaymentExecDate_BE</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator1</Name>
										<ElementPosition>2144687443</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PaymentOrderDelete</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<AutoRefreshData>Yes</AutoRefreshData>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendOutPaymentOrderDelete_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>CzSeparator_TaxDocument</Name>
										<CountryRegionCodes>CZ,HU,PL</CountryRegionCodes>
										<ElementPosition>2146085544</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CzTaxDocumentCreate_Cust</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CzTaxDocumentCreate_Cust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@GLS108299</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AdvanceInvoiceLink_CZ</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146784594</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CzCustAdvanceInvoiceLink</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS10340</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>1610612724</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonBalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerBalanceControlLdgrJourTrnCustPaym</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PaymentControl</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerPaymCntrlLedgerJourTransCust</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>btnPaymFeeInquiry</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>PaymFeeInquiry</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>SeparatorRebate</Name>
										<ConfigurationKey>PdsRebate</ConfigurationKey>
										<ElementPosition>2097151998</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PdsRebateTableBtn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>PdsRebateTableDetails</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PdsRebatePayment</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>PdsRebatePayment</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransactionReversalFailures</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalTransactionReversalFailures</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@GeneralLedger:TransactionReversalExecutionDetailHistory</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Print_MenuButton</Name>
								<ElementPosition>1744830451</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JounalDetails</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPerJournal</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerTransPerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPrintOutInvoice_Cust</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalPrintOutInvoice_Cust</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustPaymentJournal</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CustPaymentJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustVendPaymProposal</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendPaymProposal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PrintAckReceipt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS327038</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPreview</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2002453930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalPreview</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalVoucherPreview</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2072172584</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalVoucherPreview</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator4_RU</Name>
										<ConfigurationKey>Bank</ConfigurationKey>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2141891240</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CustVendOutPaymReport_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2144687442</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendOutPaymReport_RU</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BankPaymAdviceCustPrint</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Bank</ConfigurationKey>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BankPaymAdviceCustPrint</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BankPaymAdviceCustV2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Bank</ConfigurationKey>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BankPaymAdviceCustV2</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CashRegisterReceipt_W</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CashRegisterReceiptPrint_W</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GSTPayment_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxGSTPayment_IN</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<Text>@TaxGST:GSTPaymentReceiptForIndia</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TaxWithhold_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2122317822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonWithholdTax_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxWithholdTmpWorkTrans_IN</MenuItemName>
										<Text>@SYS33817</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxWithholdTrans_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxWithholdTrans_IN</MenuItemName>
										<Text>@SYS33817</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TaxWithholdLineStatusMenuButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2134900734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>TaxWithholdClosePaymlLine_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>BR</CountryRegionCodes>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@GLS2079</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>TaxWithholdReopenPaymlLine_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>BR</CountryRegionCodes>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@GLS2081</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@GLS2077</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>EInvoiceCFDIReference_MX</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>MX</CountryRegionCodes>
								<Enabled>No</Enabled>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>EInvoiceCFDIReference_MX</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>TransactionReversalDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJournalTransTransactionReversalDialog</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@GeneralLedger:TransactionReversalJournalReversalCaption</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverView</Name>
						<ElementPosition>429496728</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverviewActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AddDelete</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Add</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Delete</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>OverviewFunctions</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSettlement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>390451572</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Manual</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@CashManagement:SettleTransactions</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>MarkInvoiceLine</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265905</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>CustPaymEntryByLine</MenuItemName>
												<Text>@CashManagement:SettleInvoiceLines</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>FinancialDimension</Name>
												<ElementPosition>671088635</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTransDimLedgerJourTrnCstPaym</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>OffsetAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTrOffDimLedgerrJourTrnCstPay</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymentFeeAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>CustVendPaymJournalFee</DataSource>
														<MenuItemName>LedgerJourTrPayFeeDimLedgerJourTrnCstPay</MenuItemName>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS138491</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxTransSource</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>939524089</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>TaxTransSourceLedgerJournalTrnCustPaym</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxDocumentLauncher</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxDocumentLauncher</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>GAFInformation</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>buttonPaymentReconciliation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1342177270</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_buttonPaymentReconciliation</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymReconciliationNone</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>357913940</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconNoneCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymReconciliationSent</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>536870910</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconSentCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymReconciliationRecieved</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>715827880</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconReceivedCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymReconciliationConfirm</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>894784850</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconConfirmCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>BankChequeReuse</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<CountryRegionCodes>CA,US</CountryRegionCodes>
														<ElementPosition>1073741820</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Manual</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MultiSelect>Yes</MultiSelect>
														<Text>@SYS93951</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymReconciliationReject</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1252698790</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconRejectCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonSeparatorControl">
														<Name>Separator4</Name>
														<AllowEdit>No</AllowEdit>
														<CountryRegionCodes>NO</CountryRegionCodes>
														<ElementPosition>1431655760</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ButtonSeparator</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>CustVendPaymReconciliationDelete</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612731</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconDeleteCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>CustVendPaymReconciliationSentDelete</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1789569702</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconSentDeleteCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>CustVendPaymReconciliationDeleted</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1968526673</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>PaymReconDeletedCustPaym</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<Text>@SYS22176</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>buttonVoucherTrans</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>LedgerTransVoucher1</MenuItemName>
												<SaveRecord>No</SaveRecord>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TAMDeductionCreate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2141192190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>TAMDeductionCreate</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>CustShowSpecifikation</Name>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>CustShowSpecifikation</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TransTaxInformation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>TransTaxInformation</MenuItemName>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>overviewGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorPaym</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>NO</CountryRegionCodes>
										<ElementPosition>286331152</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>errorPaym</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorExist</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>572662304</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_TransDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Voucher</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_LedgerVoucherType_CN</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN</Name>
										<ElementPosition>596523235</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CompanyAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS13342</Label>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AccountName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>AccountName</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Label</Label>
										<ReferenceField>FinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_MarkedInvoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1002159032</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_MarkedInvoice</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MarkedInvoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1145324608</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Txt</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_AmountCurCredit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CurrencyCode1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_BridgingBankAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>BridgingBankAccount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_OffsetAccountType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_OffsetFinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Journal_ColHead_OffsetFinTags</Label>
										<ReferenceField>OffsetFinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymMode1</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_PaymentStatus</Name>
										<ElementPosition>2004318067</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_PaymentStatus</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentStatus</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTransPayment_BR_TaxWithholdEditStatus_BR</Name>
										<ElementPosition>2075900856</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdEditStatus_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymentReference</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>fieldBankDepositVoucherGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>BankDepositVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupHeader</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupDocument_TH</Name>
										<ElementPosition>1550960411</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>GroupDocument_TaxInvoiceReceiptDate_TH</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxInvoiceReceiptDate</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
												<Label>@SYS4082745</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupDocument_RealVendName_TH</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>RealVendName</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
												<Label>@SYS4082724</Label>
											</AxFormControl>
										</Controls>
										<DataGroup>TaxInvoice</DataGroup>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>WithHoldingTax</Name>
										<CountryRegionCodes>TH,SA,GB,IE,BR</CountryRegionCodes>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>WithholdingTax_IN_TaxWithholdCalculate_TH</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxWithholdCalculate_TH</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithHoldingTax_TaxWithholdGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxWithholdGroup</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH_TaxWithholdItemGroup</Name>
														<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TaxWithholdCertificate</Name>
										<CountryRegionCodes>TH</CountryRegionCodes>
										<ElementPosition>2028178999</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxWithholdCertificate_CertificateNumber</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CertificateNumber</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>TaxWithholdCertificate_CertificateDate</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CertificateDate</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>Certificate</DataGroup>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6188</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>644245092</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FBSpedEcfDerexClasificationCode_BR</Name>
										<HelpText>@SpedECFLayout4:FBSpedEcfDerexClassificationHelpText</HelpText>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SpedECFLayout4:FBSpedEcfDerexClassificationTable</Label>
										<ReferenceField>FBSpedEcfDerexClasificationCode_BR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Voucher1</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_TransDate1</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN1</Name>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Transfer</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transfer</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Account</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS13342</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType1</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt1</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Txt1</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AgreementCompany_RU</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AgreementCompany_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AccountAgreementId_RU</Name>
										<ElementPosition>1968526675</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>accountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2058005160</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_AmountCurCredit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS40757</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountInfo</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_OffsetAccountType1</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetAgreementCompany_RU</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAgreementCompany_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetAccountAgreementId_RU</Name>
										<ElementPosition>1968526675</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>offsetAccountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2058005160</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>offsetAccountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11162</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxCode</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax_TaxDirectionControl</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxDirectionControl</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@Tax:SalesTaxDirection</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax_TaxBase_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>PL</CountryRegionCodes>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxBase_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Tax_VatDueDate_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax_IntraComVATDueDate_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_VATNumJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CommissionTrade_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CommissionTrade_RU_CommProfileType_RU</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CommProfileType_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>CommissionTrade_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CFDI_MX</Name>
								<CountryRegionCodes>MX</CountryRegionCodes>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CFDI_MX_EPaymCFDIConfirmNumber_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPaymCFDIConfirmNumber_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CFDI_MX</DataGroup>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithholdingTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>2097151998</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxWithholdGroup</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendPaym_LedgerJournalTrans_TaxWithholdGroup</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TDSGroup_IN</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TCSGroup_IN</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtensionIN_ExcludedGSTAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExcludedGSTAmountCur</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@Tax:WithholdingTax</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExchangeRates</Name>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>fieldTriangulation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Update</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AssessableValue_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1700091219</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_MaximumRetailPrice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Update</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>exchRateTxt</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxt</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>crossrate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>crossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS4996</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportingExchangeRates</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Update</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Update</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingCrossrate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reportingCurrencyCrossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportingExchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxtForReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GeneralLedger:ReportingCurrencyExchRates</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PostingRelease</Name>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostingRelease_ReleaseDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_PostingRelease_ReleaseDate</HelpText>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PostingRelease</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterestAndFine_BR</Name>
								<CountryRegionCodes>BR</CountryRegionCodes>
								<ElementPosition>2013265915</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFine_BR_FineAmountCur_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FineAmountCur_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFine_BR_FinInterestAmountCur_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FinInterestAmountCur_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>InterestAndFineAmounts</DataGroup>
								<DataSource>LedgerJournalTransPayment_BR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GSTTDS</Name>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>GSTTDS_InvoiceSettleAmountGSTTDS</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceSettleAmountGSTTDS</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>GSTTDS_ExcludeGSTAmountGSTTDS</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExcludeGSTAmountGSTTDS</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>GSTTDS_TaxableAmountGSTTDS</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxableAmountGSTTDS</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GSTTDS_CalculateWithTaxableAmountGSTTDS</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalculateWithTaxableAmountGSTTDS</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>GSTTDS</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentFee</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@SYS60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>CustVendPaymJournalFee</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>GAFInformation_MY</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>GAFInformation_MYButton</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustVendPaymJournalFee</DataSource>
														<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
													</AxFormControl>
												</Controls>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>TransTaxInformationPaymentFee_IN</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>TransTaxInformationPaymentFeeButton_IN</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>MenuFunctionButton</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustVendPaymJournalFee</DataSource>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@SYS33614</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridPaymFee</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_FeeId</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeId</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustPaymJournalFee_FeeValue</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeValue</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_FeeCurrency</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeCurrency</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_TaxGroup</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_TaxItemGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustVendPaymJournalFee_LedgerJournalACType</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalACType</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>CustPaymJournalFee_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>LedgerJournalACType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataSource>CustVendPaymJournalFee</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS57605</Caption>
						<DataSource>CustVendPaymJournalFee</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Bank</Name>
						<ElementPosition>1288490184</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpBank</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankTransType</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymentReference</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpBank_AnnouncementNum_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AnnouncementNum_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Depositslip</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>fieldBankDepositVoucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankDepositVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankDepositNum</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_BankDepositNum</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankDepositNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankTransSummarization</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SummarizationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ThirdPartyBank</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ThirdPartyBank_CustVendBankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_ThirdPartyBank_CustVendBankAccountId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendBankAccountId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ThirdPartyBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Symbol</Name>
								<ElementPosition>1865626417</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTransSymbol_BankConstantSymbol</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTransSymbol_BankConstantSymbol_ConstantSymbol</Name>
												<DataRelationPath>BankConstantSymbol</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransSymbol</DataSource>
										<ReferenceField>BankConstantSymbol</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTransSymbol_SpecificSymbol</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SpecificSymbol</DataField>
										<DataSource>LedgerJournalTransSymbol</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GLS107997</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PrintPaymentOrder_RU</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PrintPaymentOrder_RU_BankPrintAccountNum_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankPrintAccountNum_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PrintPaymentOrder_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS22173</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AssetTab</Name>
						<ElementPosition>1503238548</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>LedgerJournalTrans_AssetTransType</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransType</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTrans_AssetBookId</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_AssetBookId</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BookId</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DepreciationStartDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>DepreciationStartDate</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12578</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>History</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1717986912</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentJournal</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReportedAsReadyBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22056</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovedBy1</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ApprovedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RejectedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostedDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PostedDateTime</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ErrorLog</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorLog</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22915</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24582</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterCompany</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignCompany</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_ForeignCompany</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_ForeignVoucher</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS3805</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Cust</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_LoadingDate</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LoadingDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS302</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExportPayments</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ExportPayments_FileCreated</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileCreated</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ExportPayments_PaymentSequenceNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentSequenceNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ExportPayments_CustEinvoicePaymDeliveryNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustEinvoicePaymDeliveryNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ExportPayments_CustEinvoicePaymSectionNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustEinvoicePaymSectionNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ExportPayments_CustEinvoicePaymTransNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustEinvoicePaymTransNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ExportPayments</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Payment</Name>
						<ElementPosition>1825361094</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpPayment</Name>
								<ElementPosition>402653182</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymMode</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_DirectDebitMandate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>DirectDebitMandate</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_InvoiceDirectDebitMandate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS4002620</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymSpec</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_EPPaymentType_BR</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>894784850</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPPaymentType_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_EPPaymentWay_BR</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>984263335</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPPaymentWay_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Prepayment</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Prepayment</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Prepayment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OrigPaymReference_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editDocumentNum</DataMethod>
										<DataSource>LedgerJournalTrans_W</DataSource>
										<Label>@Facture:OrigPaymRefRecId_Label</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymId</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_PaymId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymentNotes</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_PaymentNotes</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentNotes</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_TaxWithholdCalculate</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdCalculate_TH</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS316746</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymPurpose_LT</Name>
										<ElementPosition>2004877307</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymPurpose_LT</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_CustFactureAutoCreate_RU</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustFactureAutoCreate_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_UseOriginalDocumentAsFacture_RU</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseOriginalDocumentAsFacture_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AddRemittanceInfo</Name>
								<ElementPosition>603979773</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_EPCompanyDocument_BR</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPCompanyDocument_BR</DataField>
										<DataSource>LedgerJournalTransPayment_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustEPRemitInfo_BR_DocumentType</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentType</DataField>
										<DataSource>CustEPRemitInfo_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustEPRemitInfo_BR_Instruction_1</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Instruction_1</DataField>
										<DataSource>CustEPRemitInfo_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustEPRemitInfo_BR_Instruction_2</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Instruction_2</DataField>
										<DataSource>CustEPRemitInfo_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustEPRemitInfo_BR_BankFolder</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankFolder</DataField>
										<DataSource>CustEPRemitInfo_BR</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GLS1164</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpDue</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_Due</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_Due</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Due</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS14021</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpPostingProfile</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PostingProfile</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_PostingProfile</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfile</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetPostingProfile_RU</Name>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetPostingProfile_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_SettleVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_LedgerJournalTrans_SettleVoucher</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS12919</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpDocument</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocumentNum</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_DocumentNum</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocumentDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_DocumentDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Document</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpDocument_TH</Name>
								<ElementPosition>1476395002</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>GrpDocument_TaxInvoiceReceiptDate_TH</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Label>@SYS4082745</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpDocument_RealVendName_TH</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RealVendName</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Label>@SYS4082724</Label>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxInvoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentOrder_LV</Name>
								<CountryRegionCodes>LV</CountryRegionCodes>
								<ElementPosition>1476395002</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymentOrder_LV_BankCommissionPayer_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCommissionPayer_LV</DataField>
										<DataSource>LedgerJournalTransPayment_LV</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymentOrder_LV_IntBankCommissionPayer_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntBankCommissionPayer_LV</DataField>
										<DataSource>LedgerJournalTransPayment_LV</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentOrder_LV</DataGroup>
								<DataSource>LedgerJournalTransPayment_LV</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpNotificationToTheCentralBank</Name>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpNotificationToTheCentralBank_BankCentralBankPurposeCode</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_GrpNotificationToTheCentralBank_BankCentralBankPurposeCode</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpNotificationToTheCentralBank_BankCentralBankPurposeText</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeText</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>GrpNotificationToTheCentralBank_ImportDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_GrpNotificationToTheCentralBank_ImportDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ImportDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpNotificationToTheCentralBank_BankCentralBankTransTypeCur_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankTransTypeCur_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>GrpNotificationToTheCentralBank_BankCurrencyTransferLog_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GrpNotificationToTheCentralBank_BankCurrencyTransferLog_RU_BankCurrencyTransferId</Name>
												<DataRelationPath>BankCurrencyTransferLog_RU</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>BankCurrencyTransferLog_RU</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpNotificationToTheCentralBank_BankPaymentRegistrationNum_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankPaymentRegistrationNum_LV</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NotificationToTheCentralBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankLCExportGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BankDocument</ConfigurationKey>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankLCNumber</Name>
										<ConfigurationKey>BankDocument</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_BankLCNumber</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankLCNumber</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>BankLCLineNum</Name>
										<ConfigurationKey>BankDocument</ConfigurationKey>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_BankLCLineNum</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankLCLineNum</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS316286</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankClientDocumentType_RU</Name>
								<ElementPosition>2013265915</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankClientDocumentType_RU_BankClientDocumentTypeId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankClientDocumentTypeId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankClientDocumentType_RU_M_paymentDocumentName_RU</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>paymentDocumentName_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>BankClientDocumentType_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForeignPayments_LT</Name>
								<ElementPosition>2080374780</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignPayments_LT_InformByTelex_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InformByTelex_LT</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignPayments_LT_InformByPhone_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InformByPhone_LT</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ForeignPayments_LT_DebitCurrencyCode_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DebitCurrencyCode_LT</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ForeignPayments_LT</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashRegister_W</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LocationRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterLocationRecId_W</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>CashRegisterTerminal_W</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>CashRegisterTerminal</ReferenceField>
										<ReplacementFieldGroup>Code</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>RegisterRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterRecId_W</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>OperatorRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterOperatorRecId_W</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@FiscalServices:AS_LedgerJournalTransCustPaym_From_TabCashRegister</Caption>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentFormatCodes_W</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_ServiceLevel</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>ServiceLevel</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_LocalInstrument</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>LocalInstrument</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_CategoryPurpose</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>CategoryPurpose</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_ChargeBearer</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>ChargeBearer</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentFormatCodes_W</DataGroup>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS828</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PDC</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1932735276</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PDCGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PDCGroup_MaturityDate</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_PDCGroup_MaturityDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaturityDate</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PDCGroup_DateReceived</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DateReceived</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PDCGroup_PDCStatus</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_PDCGroup_PDCStatus</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PDCStatus</DataField>
										<DataSource>CustPDCRegister</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PDCGroup_CheckNumber</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CheckNumber</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PDCGroup_WorkerCollectionAgent</Name>
										<ElementPosition>2058005160</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PDCGroup_WorkerCollectionAgent_PersonnelNumber</Name>
												<DataRelationPath>WorkerCollectionAgent_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>CustPDCRegister</DataSource>
										<ReferenceField>WorkerCollectionAgent</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PDCGroup_WorkerSalesPerson</Name>
										<ElementPosition>2102744402</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PDCGroup_WorkerSalesPerson_PersonnelNumber</Name>
												<DataRelationPath>WorkerSalesPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>CustPDCRegister</DataSource>
										<ReferenceField>WorkerSalesPerson</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PDCGroup_ReasonForStop</Name>
										<ElementPosition>2117657483</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReasonForStop</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PDCGroup_StopPayment</Name>
										<ElementPosition>2132570564</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StopPayment</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PDC</DataGroup>
								<DataSource>CustPDCRegister</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Amount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Amount_currencyCode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Amount_amountCur</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>amountCurPdc</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS311147</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Replacement</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Replacement_IsReplacementCheck</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsReplacementCheck</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Replacement_Comments</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Comments</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Replacement_OriginalCheck</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalCheck</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>CustPDCRegister</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PDCBank</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PDCBank_BankBranch</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankBranch</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PDCBank_BankName</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankName</DataField>
										<DataSource>CustPDCRegister</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>CustPDCRegister</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS322452</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OrderPayment_RU</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Bank</ConfigurationKey>
						<CountryRegionCodes>RU</CountryRegionCodes>
						<ElementPosition>2122317822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentOrder</Name>
								<ElementPosition>238609294</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymentOrder_OrderOfPayment</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrderOfPayment</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>PaymentOrder_PrintKPP</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PrintKPP</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentOrder</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Status</Name>
								<ElementPosition>357913941</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Status_StatusCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatusCode</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Status_M_statusName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>statusName</DataMethod>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Status</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BudgetClassification</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BudgetClassification_BudgetReceiptClassCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BudgetReceiptClassCode</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BudgetClassification_M_budgetReceiptClassName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>budgetReceiptClassName</DataMethod>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>BudgetClassification</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OriginPayment</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OriginPayment_BaseCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BaseCode</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OriginPayment_M_baseCodeName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>baseCodeName</DataMethod>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>OriginPayment</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentType</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymentType_TypeCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TypeCode</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymentType_M_typeName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>typeName</DataMethod>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentType</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymPeriod</Name>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>PeriodCode_year</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>year</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PeriodCode_PeriodCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodCode</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>PeriodCode_PeriodNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodNumber</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PeriodDate_TaxPeriodDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxPeriodDate</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS40</Caption>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document</Name>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_DocNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocNum</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Document_DocDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_Document_DocDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocDate</DataField>
										<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Document</DataGroup>
								<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@GLS102632</Caption>
						<DataSource>PaymentOrderBudgetTrans_RU</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Balances</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TabularBalances</Name>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TableCaption</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AccountingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS333999</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RowHeaderGroup</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnusedColumn</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS35221</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS101235</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherGroup</Name>
								<ElementPosition>1288490187</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>VoucherRowLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_VoucherRowLabel</HelpText>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS86923</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_CashAndBankManagement:LedgerJournalTransCustPaym_VoucherDebit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS12371</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCredit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotal</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalGroup</Name>
								<ElementPosition>1717986916</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>JournalRowTextLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS10018</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS10018</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCredit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalance</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Footer</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalsGroupTabularReportingCurrency</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesCaptionRowReportingCurrency</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ReportingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@GeneralLedger:ReportingCurrency</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsHeaderReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS35221</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS95</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>613566756</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebitReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCreditReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotalReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotalReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>920350134</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebitReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCreditReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalanceReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalanceReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesRowFooterReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>