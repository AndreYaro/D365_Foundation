<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>smmResponsibilities</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class smmResponsibilities extends FormRun
{
    Common  callerRecord;

    HcmWorkerLookup     hcmWorkerLookupCurrentCompany;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        hcmWorkerLookupCurrentCompany = HcmWorkerLookup::newCustomOptions(true, true, true, false, false, true, true, true, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (!element.args().record())
        {
            // Form called incorrectly
            throw error("@SYS22996");
        }
        callerRecord = element.args().record();

        element.setButtons();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtons</Name>
				<Source><![CDATA[
    void setButtons()
    {
        smmCampaignTable campaignTable;
        boolean isCampaignClosedOrCancelled;
        // If sales unit or case category, make apply buttons invisible
        if (callerRecord.TableId == tableNum(smmSalesUnit) ||
        callerRecord.TableId == tableNum(CaseCategoryHierarchyDetail))
        {
            applyAll.visible(false);
            applySelected.visible(false);
        }
        else if (callerRecord.TableId == tableNum(smmCampaignTable))
        {
            campaignTable = callerRecord;
            isCampaignClosedOrCancelled = campaignTable.isCampaignClosedOrCancelled();

            smmResponsibilitiesEmplTable_ds.allowEdit(!isCampaignClosedOrCancelled);
            smmResponsibilitiesEmplTable_ds.allowDelete(!isCampaignClosedOrCancelled);
            smmResponsibilitiesEmplTable_ds.allowCreate(!isCampaignClosedOrCancelled);

            applyAll.enabled(smmResponsibilitiesEmplTable.RecId && !isCampaignClosedOrCancelled);
            applySelected.enabled(smmResponsibilitiesEmplTable.RecId && !isCampaignClosedOrCancelled);
        }
        else
        {
            applyAll.enabled(smmResponsibilitiesEmplTable.RecId);
            applySelected.enabled(smmResponsibilitiesEmplTable.RecId);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>smmResponsibilitiesEmplTable</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            Object                  callerFormRun;
            smmResponsibilityId     responsibilityId;
            smmBusRelTable          smmBusRelTable;
            CustTable               custTable;
            VendTable               vendTable;
            CaseDetail              caseDetail;

            callerFormRun = element.args().caller();

            if (element.args().dataset() == tableNum(smmBusRelTable))
            {
                smmBusRelTable = element.args().record();
                if (smmBusRelTable.BusRelTypeId == smmBusRelTypeGroup::getCustomerType())
                {
                    custTable = CustTable::findByPartyRecId(smmBusRelTable.Party);

                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).clearDynalinks();

                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefTableId),
                                                            custTable,
                                                            fieldNum(CustTable,TableId));
                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefRecId),
                                                            custTable,
                                                            fieldNum(CustTable,RecId));
                }
                else if (smmBusRelTable.BusRelTypeId == smmBusRelTypeGroup::getVendorType())
                {
                    vendTable = VendTable::findByPartyRecId(smmBusRelTable.Party);
                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).clearDynalinks();

                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefTableId),
                                                            vendTable,
                                                            fieldNum(VendTable,TableId));
                    this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefRecId),
                                                            vendTable,
                                                            fieldNum(VendTable,RecId));
                }
            }
            else if (element.args().dataset() == tableNum(CaseDetail))
            {
                caseDetail = element.args().record();
                this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).clearDynalinks();

                this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefTableId),
                                                        caseDetail,
                                                        fieldNum(CaseDetail,TableId));
                this.query().dataSourceTable(tableNum(smmResponsibilitiesEmplTable)).addDynalink(fieldNum(smmResponsibilitiesEmplTable,RefRecId),
                                                        caseDetail,
                                                        fieldNum(CaseDetail,RecId));
            }

            super();

            if (callerFormRun)
            {
                if (formHasMethod(callerFormRun, identifierStr(parmResponsibilityId)))
                {
                    responsibilityId = callerFormRun.parmResponsibilityId();
                }
            }

            smmResponsibilitiesEmplTable_ds.positionToRecordByValue(fieldNum(smmResponsibilitiesEmplTable, ResponsibilityId),responsibilityId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            recId origRecId;
            origRecId = smmResponsibilitiesEmplTable.orig().RecId;

            super();

            if (origRecId != smmResponsibilitiesEmplTable.RecId)
            {
                element.setButtons();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            applyAll.enabled(smmResponsibilitiesEmplTable.RecId);
            applySelected.enabled(smmResponsibilitiesEmplTable.RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            // Enable caching for display fields
            smmResponsibilitiesEmplTable_ds.cacheAddMethod(tableMethodStr(smmResponsibilitiesEmplTable, respDescription));
            smmResponsibilitiesEmplTable_ds.cacheAddMethod(tableMethodStr(smmResponsibilitiesEmplTable, emplName));
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            element.setButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.setButtons();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ResponsibilityId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(smmResponsibilityGroup), _formControl);
                QueryBuildDataSource            queryBuildDataSource;
                Query                           query;
                QueryBuildRange                 queryBuildRange;
                smmSalesUnit                    salesUnit;

                sysTableLookup.addLookupfield(fieldNum(smmResponsibilityGroup, ResponsibilityId),true);
                sysTableLookup.addLookupfield(fieldNum(smmResponsibilityGroup, Description));

                query = new Query();

                queryBuildDataSource = query.addDataSource(tableNum(smmResponsibilityGroup));

                queryBuildRange = queryBuildDataSource.addRange(smmResponsibility::refTableid2FieldIdForFlag(smmResponsibilitiesEmplTable.RefTableId));

                queryBuildRange.value(queryValue(NoYes::Yes));

                if (callerRecord && callerRecord.TableId == tableNum(smmSalesUnit))
                {
                    salesUnit = callerRecord;
                    queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(smmResponsibilitiesTable));
                    queryBuildDataSource.addLink(fieldNum(smmResponsibilityGroup,ResponsibilityId),fieldNum(smmResponsibilitiesTable,ResponsibilityId));

                    queryBuildRange = queryBuildDataSource.addRange(fieldNum(smmResponsibilitiesTable,HierarchyType));
                    queryBuildRange.value(queryValue(HierarchyType::None));

                    queryBuildRange = queryBuildDataSource.addRange(fieldNum(smmResponsibilitiesTable,SalesUnitId));
                    queryBuildRange.value(queryValue(salesUnit.SalesUnitId));
                }

                sysTableLookup.parmQuery(query);

                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Worker</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(HcmWorker), _formControl);
                QueryBuildDataSource            queryBuildDataSource;
                Query                           query;
                QueryBuildRange                 queryBuildRange;
                smmSalesUnit                    salesUnit;

                if (callerRecord && callerRecord.TableId == tableNum(smmSalesUnit))
                {
                    salesUnit = callerRecord;

                    sysTableLookup.addLookupfield(fieldNum(HcmWorker, RecId),true);

                    query = new Query();

                    queryBuildDataSource = query.addDataSource(tableNum(HcmWorker));
                    queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(smmSalesUnitMembers));
                    queryBuildDataSource.addLink(fieldNum(HcmWorker,RecId),fieldNum(smmSalesUnitMembers,SalesPersonWorker));

                    queryBuildRange = queryBuildDataSource.addRange(fieldNum(smmSalesUnitMembers,SalesUnitId));

                    queryBuildRange.value(queryValue(salesUnit.SalesUnitId));

                    sysTableLookup.parmQuery(query);

                    sysTableLookup.performFormLookup();
                }
                else
                {
                    super(_formControl,_filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ApplyAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            // Apply resp assignments to activities for all responsibilities
            smmResponsibility::applyResponsibilities(smmResponsibilitiesEmplTable.RefTableId,
                smmResponsibilitiesEmplTable.RefRecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ApplySelected</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

           // Apply resp assignments to activities for selected responsibilities
            smmResponsibility::applyResponsibilitiesToSelected(smmResponsibilitiesEmplTable_ds);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>smmResponsibilitiesEmplTable_Worker</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;

            ret = hcmWorkerLookupCurrentCompany.lookupWorker(this);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            HcmWorker ret;

            ret = super();

            if (ret != null && !hcmWorkerLookupCurrentCompany.validateWorker(ret.RecId))
            {
                ret = null;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>smmResponsibilitiesEmplTable</Name>
			<Table>smmResponsibilitiesEmplTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResponsibilityId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>RespEmpldx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS80335</Caption>
		<DataSource xmlns="">smmResponsibilitiesEmplTable</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>mbActions</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS342626</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ApplyAll</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>SmmCRM</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS102497</HelpText>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>No</MultiSelect>
										<Text>@SYS102496</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ApplySelected</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>SmmCRM</ConfigurationKey>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS102499</HelpText>
										<NeededPermission>Manual</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS102498</Text>
									</AxFormControl>
								</Controls>
								<Primary>Yes</Primary>
								<Text>@SYS40422</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>smmResponsibilities_Responsibility</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ResponsibilityId</DataField>
						<DataSource>smmResponsibilitiesEmplTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>smmResponsibilitiesEmplTable_Worker</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>smmResponsibilitiesEmplTable_Worker_DirPerson_FK_Name</Name>
								<DataRelationPath>Worker.DirPerson_FK</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>smmResponsibilitiesEmplTable</DataSource>
						<ReferenceField>Worker</ReferenceField>
						<ReplacementFieldGroup>Person</ReplacementFieldGroup>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>smmResponsibilitiesEmplTable</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
