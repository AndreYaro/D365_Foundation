<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DemoDataPost</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DemoDataPost extends FormRun implements OfficeIMenuCustomizer, OfficeITemplateCustomExporter
{
    protected boolean canEditRun;
    protected boolean shouldAllowEditDocumentTarget;
    protected boolean shouldAllowEditDateRange;
    protected boolean shouldAllowEditNameRange;
    protected DemoDataPostDocumentTarget defaultDocumentTarget;

    private const str TemplateExcelOfficeMenuId = 'DemoDataPostRunTemplate';

}
]]></Source>
			</Method>
			<Method>
				<Name>setRunControls</Name>
				<Source><![CDATA[
    private void setRunControls()
    {
        AddDocument.enabled(canEditRun);
        DemoDataPostRun_ds.allowEdit(canEditRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocumentLineControls</Name>
				<Source><![CDATA[
    private void setDocumentLineControls()
    {
        MoveUp.enabled(DemoDataPostRunDocument.RecId != 0 && canEditRun);
        MoveDown.enabled(DemoDataPostRunDocument.RecId != 0 && canEditRun);

        DemoDataPostRunDocument_ds.allowEdit(canEditRun);
        DemoDataPostRunDocument_ds.allowDelete(canEditRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRangeControls</Name>
				<Source><![CDATA[
    private void setRangeControls(boolean _forceDocumentTargetToDefault = false)
    {
        DemoDataPostRunDocument_FromDocumentDate.enabled(shouldAllowEditDateRange);
        DemoDataPostRunDocument_ToDocumentDate.enabled(shouldAllowEditDateRange);
        DemoDataPostRunDocument_FromDocumentId.enabled(shouldAllowEditNameRange);
        DemoDataPostRunDocument_ToDocumentId.enabled(shouldAllowEditNameRange);

        if (!shouldAllowEditNameRange && canEditRun)
        {
            DemoDataPostRunDocument.FromDocumentId = '';
            DemoDataPostRunDocument.ToDocumentId = '';
        }

        if (!shouldAllowEditDateRange && canEditRun)
        {
            date defaultDate;
            DemoDataPostRunDocument.FromDocumentDate = defaultDate;
            DemoDataPostRunDocument.ToDocumentDate = defaultDate;
        }

        // Set the document target to default for active lines when the
        // document type only has a single option or when overriden
        if (canEditRun &&
            (!shouldAllowEditDocumentTarget || _forceDocumentTargetToDefault))
        {
            DemoDataPostRunDocument.DocumentTarget = defaultDocumentTarget;
        }
        DemoDataPostRunDocument_DocumentTargetLookup.allowEdit(shouldAllowEditDocumentTarget);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findControlStateByDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine which document controls should activate by document type.
    /// </summary>
    public void findControlStateByDocumentType()
    {
        switch (DemoDataPostRunDocument.Document)
        {
            case DemoDataPostDocument::CustPaymentJournal,
                DemoDataPostDocument::VendPaymentJournal,
                DemoDataPostDocument::GeneralJournal,
                DemoDataPostDocument::FixedAssetJournal,
                DemoDataPostDocument::InvoiceJournal,
                DemoDataPostDocument::InventoryAdjustment,
                DemoDataPostDocument::BudgetTransaction,
                DemoDataPostDocument::VendorInvoice:
                shouldAllowEditDateRange = true;
                shouldAllowEditNameRange = true;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Post;
                break;

            case DemoDataPostDocument::TradeAgreement:
                shouldAllowEditDateRange = false;
                shouldAllowEditNameRange = true;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Post;
                break;

            case DemoDataPostDocument::FreeTextInvoice:
                shouldAllowEditDateRange = true;
                shouldAllowEditNameRange = false;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Post;
                break;

            case DemoDataPostDocument::SalesOrder,
                DemoDataPostDocument::PurchaseOrder:
                shouldAllowEditDateRange = false;
                shouldAllowEditNameRange = true;
                shouldAllowEditDocumentTarget = true;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Invoice;
                break;

            case DemoDataPostDocument::CostingVersion:
                shouldAllowEditDateRange = false;
                shouldAllowEditNameRange = true;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Activate;
                break;

            case DemoDataPostDocument::PriceCalculation:
                shouldAllowEditDateRange = false;
                shouldAllowEditNameRange = true;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Calculate;
                break;

            default:
                shouldAllowEditDateRange = false;
                shouldAllowEditNameRange = false;
                shouldAllowEditDocumentTarget = false;
                defaultDocumentTarget = DemoDataPostDocumentTarget::Post;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        DemoDataPostDocumentTargetCombinations::initIfEmpty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openExcelTemplate</Name>
				<Source><![CDATA[
    private void openExcelTemplate()
    {
        // Variables used for opening Excel template
        DocuTemplateName templateName = resourceStr(DemoDataPostEntityTemplate);

        str entityName = tableStr(DemoDataPostEntity);
        str entityJob = fieldStr(DemoDataPostEntity, DemoDataJob);

        DocuTemplate template = DocuTemplate::findTemplate(OfficeAppApplicationType::Excel, templateName);

        // Ensure the template was present
        if (template && template.TemplateID == templateName)
        {
            Map filtersToApply = new Map(Types::String, Types::Class);

            // Create run filter
            ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(entityName);

            var filter = filterBuilder.areEqual(entityJob, DemoDataPostRun.RunId);
            filtersToApply.insert(entityName, filter);

            DocuTemplateRender renderer = new DocuTemplateRender();
            str documentUrl = renderer.renderTemplateToStorage(template, filtersToApply);

            // Pass the workbook to the user
            if (documentUrl)
            {
                Browser b = new Browser();
                b.navigate(documentUrl, false, false);
            }
            else
            {
                error(strFmt("@ApplicationFoundation:DocuTemplateGenerationFailed", templateName));
            }
        }
        else
        {
            warning(strFmt("@ApplicationFoundation:DocuTemplateNotFound", templateName));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the Office integration menu to add the Definition Group Header entity template.
    /// </summary>
    /// <param name = "_menuOptions">The Office integration menu.</param>
    /// <remarks>There are no default entities associated with the <c>DemoDataPostRun</c> form data source.</remarks>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        OfficeTemplateExportMenuItem demoDataPostTemplateMenuItem;

        demoDataPostTemplateMenuItem = OfficeTemplateExportMenuItem::construct(
            OfficeAppApplicationType::Excel,
            resourceStr(DemoDataPostEntityTemplate),
            TemplateExcelOfficeMenuId);

        demoDataPostTemplateMenuItem.displayName("@DemoDataPost:DemoDataPostEntityTemplate");

        _menuOptions.customMenuItems().addEnd(demoDataPostTemplateMenuItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the filters necessary for the Excel template to reflect only the active form data when called from the Office menu.
    /// </summary>
    /// <param name = "_menuItem">The menu item which triggered the Office integration call.</param>
    /// <returns>A map of filters to apply to the Office integration data.</returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        Map filtersToApply = new Map(Types::String, Types::Class);

        if (_menuItem.id() == TemplateExcelOfficeMenuId)
        {
            str entityName = tableStr(DemoDataPostEntity);
            str entityJob = fieldStr(DemoDataPostEntity, DemoDataJob);

            // Create run filter
            ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(entityName);

            var runFilter = filterBuilder.areEqual(entityJob, DemoDataPostRun.RunId);

            filtersToApply.insert(entityName, runFilter);
        }

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        //Required by the OfficeITemplateCustomExporter interface but unused for this scenario
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DemoDataPostRun</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            canEditRun = DemoDataPostRun::canEdit(DemoDataPostRun);

            element.setRunControls();
            element.setDocumentLineControls();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            DemoDataPostRun.RunStatus = DemoDataPostRunStatus::Open;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>DemoDataPostRunDocument</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            DemoDataPostRunDocument.RunStatus = DemoDataPostRunStatus::Ready;
            DemoDataPostRunDocument.DocumentTarget = DemoDataPostDocumentTarget::Post;

            defaultDocumentTarget = DemoDataPostDocumentTarget::Post;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.findControlStateByDocumentType();
            element.setRangeControls();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            element.setDocumentLineControls();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editDocumentTarget</Name>
						<Source><![CDATA[
        /// <summary>
        /// Allows modification of the document target exclusively by lookup in the document grid.
        /// </summary>
        /// <param name = "Set">Flag whether the control has been set by a user.</param>
        /// <param name = "_demoDataPostRunDocument">The document context.</param>
        /// <param name = "value">The edit value.</param>
        /// <returns>The document target.</returns>
        edit str editDocumentTarget(boolean Set, DemoDataPostRunDocument _demoDataPostRunDocument, str value)
        {
            if (Set)
            {
                DemoDataPostDocumentTarget lookupDocumentTarget;
                lookupDocumentTarget = str2Enum(lookupDocumentTarget, value);

                DemoDataPostRunDocument.DocumentTarget = lookupDocumentTarget;
            }

            return enum2Str(_demoDataPostRunDocument.DocumentTarget);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ProcessNow</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            DemoDataPostRun selectedDemoDataPostRun;

            for (selectedDemoDataPostRun = getFirstSelection(DemoDataPostRun_ds); selectedDemoDataPostRun; selectedDemoDataPostRun = DemoDataPostRun_ds.getNext())
            {
                if (selectedDemoDataPostRun.RunStatus == DemoDataPostRunStatus::Open
                    || selectedDemoDataPostRun.RunStatus == DemoDataPostRunStatus::Ready)
                {
                    Args args = new Args();
                    args.caller(element);
                    args.record(selectedDemoDataPostRun);

                    new MenuFunction(menuItemActionStr(DemoDataPostProcessNow), MenuItemType::Action).run(args);

                    info(strFmt("@DemoDataPost:ProcessNowScheduled", selectedDemoDataPostRun.RunId));
                }
                else
                {
                    warning(strFmt("@DemoDataPost:ProcessNowAlreadyScheduled", selectedDemoDataPostRun.RunId));
                }
            }

            DemoDataPostRun_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReadyForMonitor</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            DemoDataPostRun selectedDemoDataPostRun;

            ttsbegin;

            for (selectedDemoDataPostRun = getFirstSelection(DemoDataPostRun_ds); selectedDemoDataPostRun; selectedDemoDataPostRun = DemoDataPostRun_ds.getNext())
            {
                if (selectedDemoDataPostRun.RunStatus == DemoDataPostRunStatus::Open)
                {
                    selectedDemoDataPostRun.RunStatus = DemoDataPostRunStatus::Ready;
                    selectedDemoDataPostRun.update();
                }
            }

            ttscommit;

            DemoDataPostRun_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DemoDataPostRun_ExecutionId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args args = new Args();
            args.caller(element);
            args.record(DMFExecution);

            new menuFunction(menuItemDisplayStr(DMFExecutionHistoryList), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddDocument</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.setDocumentLineControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            DemoDataPostRunDocument priorDocument;

            select maxof(LineNum), RecId from priorDocument
                where priorDocument.RunId == DemoDataPostRunDocument.RunId
                    && priorDocument.LineNum < DemoDataPostRunDocument.LineNum;

            if (priorDocument)
            {
                DemoDataPostFormHelper::swapLineNum(DemoDataPostRunDocument.RunId, DemoDataPostRunDocument.LineNum, priorDocument.LineNum);

                DemoDataPostRunDocument_ds.research(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            DemoDataPostRunDocument nextDocument;

            select minof(LineNum), RecId from nextDocument
                where nextDocument.RunId == DemoDataPostRunDocument.RunId
                    && nextDocument.LineNum > DemoDataPostRunDocument.LineNum;

            if (nextDocument)
            {
                DemoDataPostFormHelper::swapLineNum(DemoDataPostRunDocument.RunId, DemoDataPostRunDocument.LineNum, nextDocument.LineNum);

                DemoDataPostRunDocument_ds.research(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DemoDataPostRunDocument_Document</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.setDocumentLineControls();
            element.findControlStateByDocumentType();
            element.setRangeControls(true);

            DemoDataPostRunDocument_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DemoDataPostRunDocument_DocumentTargetLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Create lookup based on the document targets valid for the given document type.
        /// </summary>
        public void lookup()
        {
            DemoDataPostDocumentTargetCombinations::createLookup(this, DemoDataPostRunDocument.Document);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RunDocumentStatus_DocumentName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            DemoDataPostFormHelper::linkToDocument(DemoDataPostRunDocumentStatus, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DemoDataPostRun</Name>
			<Table>DemoDataPostRun</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CompletionTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExecutionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DemoDataPostRunDocument</Name>
			<Table>DemoDataPostRunDocument</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CompletionTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Document</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentTarget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDocumentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDocumentId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DemoDataPostRun</JoinSource>
			<CounterField>LineNum</CounterField>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DemoDataPostRunDocumentStatus</Name>
			<Table>DemoDataPostRunDocumentStatus</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CompletionTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunDocumentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DemoDataPostRunDocument</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DMFExecution</Name>
			<Table>DMFExecution</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DemoDataPostRun</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Batch</Name>
			<Table>Batch</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutomaticTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Caption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClassNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConstraintType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataPartition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_BatchJournalLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExecutedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IgnoreOnFail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Info</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Parameters</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrivateTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>retriesOnFailure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>retryCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunTimeTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RunType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionIdx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DemoDataPostRun</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DemoDataPost:ReadyToPost</Caption>
		<Pattern xmlns="">DetailsMasterTabs</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">DetailsFormMaster</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ActionPaneButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ProcessNow</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>DemoDataPostRun</DataSource>
								<MenuItemName>DemoDataPostProcessNow</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ReadyForMonitor</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@DemoDataPost:ReadyForMonitor</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CreateMonitor</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>DemoDataPostSchedulerBatchJob</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<SaveRecord>No</SaveRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>BatchJob</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>Batch</DataSource>
								<MenuItemName>BatchJob</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS105729</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationListGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>NavigationListGridFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Navigation_RunId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RunId</DataField>
								<DataSource>DemoDataPostRun</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>DemoDataPostRun</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>MainTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DetailsTitleGroup</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DetailsHeaderString</Name>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RunId</DataField>
										<DataSource>DemoDataPostRun</DataSource>
										<Label>@DemoDataPost:RunId</Label>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>HeaderAndLinePanels</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>LinesPanel</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>LineViewTab</Name>
												<Type>Tab</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewHeaderDetails</Name>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DemoDataPostRun_RunId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>RunId</DataField>
																<DataSource>DemoDataPostRun</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>DemoDataPostRun_RunStatus</Name>
																<AllowEdit>No</AllowEdit>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>RunStatus</DataField>
																<DataSource>DemoDataPostRun</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DemoDataPostRun_ExecutionId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ExecutionId</DataField>
																<DataSource>DemoDataPostRun</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>Batch_Status</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Status</DataField>
																<DataSource>Batch</DataSource>
																<Label>@DemoDataPost:BatchJobStatus</Label>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateTimeControl">
																<Name>Batch_StartDateTime</Name>
																<Type>DateTime</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>StartDateTime</DataField>
																<DataSource>Batch</DataSource>
																<Label>@DemoDataPost:BatchStartTime</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateTimeControl">
																<Name>Batch_EndDateTime</Name>
																<Type>DateTime</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>EndDateTime</DataField>
																<DataSource>Batch</DataSource>
																<Label>@DemoDataPost:BatchEndTime</Label>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@DemoDataPost:DemoDataJob</Caption>
														<DataSource>DemoDataPostRun</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLines</Name>
														<HeightMode>SizeToAvailable</HeightMode>
														<Pattern>ToolbarList</Pattern>
														<PatternVersion>1.2</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>LineViewActionPane</Name>
																<Type>ActionPane</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormActionPaneTabControl">
																		<Name>LineViewActionPaneTab</Name>
																		<Type>ActionPaneTab</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormButtonGroupControl">
																				<Name>LineViewActionCommandButtonGroup</Name>
																				<Type>ButtonGroup</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormCommandButtonControl">
																						<Name>AddDocument</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>CommandButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<Command>New</Command>
																						<NormalImage>Add</NormalImage>
																						<Text>@SYS319116</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormCommandButtonControl">
																						<Name>DeleteDocuments</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>CommandButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																						<Command>DeleteRecord</Command>
																						<NormalImage>Delete</NormalImage>
																						<Text>@SYS135131</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>MoveUp</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>Button</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MultiSelect>No</MultiSelect>
																						<NeedsRecord>Yes</NeedsRecord>
																						<Text>@SYS40189</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormButtonControl">
																						<Name>MoveDown</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>Button</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MultiSelect>No</MultiSelect>
																						<NeedsRecord>Yes</NeedsRecord>
																						<Text>@SYS40190</Text>
																					</AxFormControl>
																				</Controls>
																			</AxFormControl>
																		</Controls>
																	</AxFormControl>
																</Controls>
																<DataSource>DemoDataPostRunDocument</DataSource>
																<Style>Strip</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>LineViewGrid</Name>
																<Type>Grid</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>DemoDataPostRunDocument_Document</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>ComboBox</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Document</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DemoDataPostRunDocument_DocumentTargetLookup</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>String</Type>
																		<WidthMode>SizeToAvailable</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>editDocumentTarget</DataMethod>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																		<Label>@DemoDataPost:DocumentTarget</Label>
																		<LookupOnly>Yes</LookupOnly>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormDateControl">
																		<Name>DemoDataPostRunDocument_FromDocumentDate</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>Date</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>FromDocumentDate</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormDateControl">
																		<Name>DemoDataPostRunDocument_ToDocumentDate</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>Date</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ToDocumentDate</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DemoDataPostRunDocument_FromDocumentId</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>FromDocumentId</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DemoDataPostRunDocument_ToDocumentId</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ToDocumentId</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>DemoDataPostRunDocument_RunStatus</Name>
																		<AllowEdit>No</AllowEdit>
																		<Type>ComboBox</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>RunStatus</DataField>
																		<DataSource>DemoDataPostRunDocument</DataSource>
																		<Items />
																	</AxFormControl>
																</Controls>
																<DataSource>DemoDataPostRunDocument</DataSource>
																<Style>Tabular</Style>
																<VisibleRows>5</VisibleRows>
																<VisibleRowsMode>Fixed</VisibleRowsMode>
															</AxFormControl>
														</Controls>
														<Caption>@DemoDataPost:Document</Caption>
														<DataSource>DemoDataPostRunDocument</DataSource>
														<FastTabExpanded>Always</FastTabExpanded>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLineDetails</Name>
														<Pattern>ToolbarList</Pattern>
														<PatternVersion>1.2</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>LineDetailsListToolbar</Name>
																<Type>ActionPane</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>DemoDataPostRunDocumentStatus</DataSource>
																<Style>Strip</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>LineDetailsGrid</Name>
																<AllowEdit>No</AllowEdit>
																<Type>Grid</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>RunDocumentStatus_DocumentName</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DocumentName</DataField>
																		<DataSource>DemoDataPostRunDocumentStatus</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>RunDocumentStatus_DocumentStatus</Name>
																		<Type>ComboBox</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DocumentStatus</DataField>
																		<DataSource>DemoDataPostRunDocumentStatus</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormDateTimeControl">
																		<Name>RunDocumentStatus_CompletionTime</Name>
																		<Type>DateTime</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>CompletionTime</DataField>
																		<DataSource>DemoDataPostRunDocumentStatus</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>DemoDataPostRunDocumentStatus</DataSource>
																<MultiSelect>No</MultiSelect>
																<ShowRowLabels>No</ShowRowLabels>
															</AxFormControl>
														</Controls>
														<Caption>@DemoDataPost:PostingResults</Caption>
														<DataSource>DemoDataPostRunDocumentStatus</DataSource>
														<FastTabExpanded>Yes</FastTabExpanded>
													</AxFormControl>
												</Controls>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
										<Caption>@AccountsPayable:Lines</Caption>
									</AxFormControl>
								</Controls>
								<ShowTabs>No</ShowTabs>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridPanelFilterGroup</Name>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>GridQuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>Grid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>Grid_RunStatus</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Grid_RunId</Name>
										<AllowEdit>No</AllowEdit>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RunId</DataField>
										<DataSource>DemoDataPostRun</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Grid_RunStatus</Name>
										<AllowEdit>No</AllowEdit>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RunStatus</DataField>
										<DataSource>DemoDataPostRun</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Grid_CompletionTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CompletionTime</DataField>
										<DataSource>DemoDataPostRun</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Grid_RunCompany</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DataAreaId</DataField>
										<DataSource>DemoDataPostRun</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>DemoDataPostRun</DataSource>
								<DefaultAction>GridCommandButton</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>GridCommandButton</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>