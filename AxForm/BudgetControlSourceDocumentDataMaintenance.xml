<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetControlSourceDocumentDataMaintenance</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetControlSourceDocumentDataMaintenance extends FormRun implements BudgetControlISourceDocumentDataMaintenanceRequestable
{
    private Map sourceDocIntegratorsMap;
    private Map sourceDocLabelsMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>getRequest</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public BudgetControlSourceDocumentDataMaintenanceRequest getRequest()
    {
        BudgetControlSourceDocumentDataMaintenanceRequest request;
        str filterStr = DocumentInputText.valueStr();
        int selection = SourceIntegratorComboBox.selection();
        NoYes removeFoundDocuments = RemoveFoundDocumentsCheckBox.value();
        if (sourceDocIntegratorsMap.exists(selection))
        {
            BudgetControlSourceIntegrator sourceIntegrator = sourceDocIntegratorsMap.lookup(selection);
            request = BudgetControlSourceDocumentDataMaintenanceRequest::constructFromDialog(filterStr, sourceIntegrator, removeFoundDocuments);
        }

        return request;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        sourceDocIntegratorsMap = new Map(Types::Integer, Types::Enum);
        sourceDocLabelsMap = new Map(Types::Integer, Types::String);

        Map sourceDocIntegrators = BudgetControlSourceDocumentQueryableFactory::getInstancesByLabel();

        if (sourceDocIntegrators)
        {
            SourceIntegratorComboBox.clear();

            MapEnumerator mapEnumerator = sourceDocIntegrators.getEnumerator();
            while (mapEnumerator.moveNext())
            {
                var sourceDocQueryable = mapEnumerator.currentValue() as BudgetControlISourceDocumentQueryable;
                if (sourceDocQueryable)
                {
                    int comboBoxIndex = SourceIntegratorComboBox.items();

                    BudgetControlSourceIntegrator sourceIntegrator = sourceDocQueryable.getSourceIntegrator();
                    sourceDocIntegratorsMap.add(comboBoxIndex, sourceIntegrator);
                    sourceDocLabelsMap.add(comboBoxIndex, this.getTrackingNumberLabel(sourceDocQueryable));

                    SourceIntegratorComboBox.add(mapEnumerator.currentKey());
                }
            }
        }

        element.updateFilterCaption(SourceIntegratorComboBox.selection());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTrackingNumberLabel</Name>
				<Source><![CDATA[
    private str getTrackingNumberLabel(BudgetControlISourceDocumentQueryable _sourceDocQueryable)
    {
        str inputTextLabel = "@Budget:SourceDocumentDataMaintenanceTrackingNumber";

        if (_sourceDocQueryable)
        {
            SysDictField field = new SysDictField(_sourceDocQueryable.getTableId(), _sourceDocQueryable.getTrackingNumberFieldId());
            LabelId fieldLabelId = field.labelLabel();
            if (SysLabel::isLabelId(fieldLabelId))
            {
                inputTextLabel = SysLabel::labelId2String(fieldLabelId, SystemParameters::getSystemLanguageId());
            }
        }

        return inputTextLabel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFilterCaption</Name>
				<Source><![CDATA[
    private void updateFilterCaption(int _sourceDocIntegratorsIndex)
    {
        if (sourceDocLabelsMap.exists(_sourceDocIntegratorsIndex))
        {
            str inputTextLabel = sourceDocLabelsMap.lookup(_sourceDocIntegratorsIndex);
            if (inputTextLabel != DocumentInputText.label())
            {
                DocumentInputText.label(inputTextLabel);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SourceIntegratorComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateFilterCaption(this.selection());
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (DocumentInputText.validate())
            {
                element.closeOk();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Budget:SourceDocumentDataMaintenanceProviderName</Caption>
		<DefaultAction xmlns="">OKButton</DefaultAction>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SecondaryInstructions</Name>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@Budget:SourceDocumentDataMaintenanceInstruction</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>SourceIntegratorComboBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocumentInputText</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HelpText>@Budget:BudgetControlDataMaintenanceMultiDocumentHelpText</HelpText>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Budget:SourceDocumentDataMaintenanceTrackingNumber</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>RemoveFoundDocumentsCheckBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HelpText>@Budget:RemoveExistingFoundDocumentsHelpText</HelpText>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Budget:RemoveExistingFoundDocumentsLabel</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitContainer</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@SYS5469</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>