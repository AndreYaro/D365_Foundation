<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailStoreLocatorGroupMemberPicker</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailStoreLocatorGroupMemberPicker extends FormRun
{
    Set selectedItems;
    RetailStoreLocatorGroup parentTable;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fill in available warehouses and get recId of associated RetailStoreLocatorGroup.
    /// </summary>
    public void init()
    {
        super();
        selectedItems = new Set(Types::String);
        parentTable = element.args().record();
        element.populateSelection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateSelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fill in available warehouses.
    /// </summary>
    private void populateSelection()
    {
        FulfillmentGroupMemberView fulfillmentGroupMemberView;
        FormListItem listItem;
        while select crossCompany InventLocationId from fulfillmentGroupMemberView
            group by InventLocationId
            order by InventLocationId
            where fulfillmentGroupMemberView.dataareaid == curExt()
            && fulfillmentGroupMemberView.InventLocationType == InventLocationType::Standard
        {
            listItem = new FormListItem(fulfillmentGroupMemberView.InventLocationId);
            selectView.addItem(listItem);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Research data sources on parent form after closing this form.
    /// </summary>
    public void closeOk()
    {
        super();
    
        // Get an instance of the calling form.
        FormRun retailStoreLocatorGroupForm;
        retailStoreLocatorGroupForm = element.args().caller();
        RetailStoreLocatorGroupIRefreshDatasource parentForm = retailStoreLocatorGroupForm as RetailStoreLocatorGroupIRefreshDatasource;
        if (parentForm)
        {
            parentForm.researchDS();  
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Add</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds selected records to selectedView. Records already in selectedView are not added.
        /// </summary>
        public void clicked()
        {
            super();
            int numSelected = selectView.getSelectedCount();
            if (numSelected == 0)
            {
                checkFailed(strFmt("@Retail:RetailStoreLocatorGroupMemberNoneSelected"));
            }
            else
            {
                // Index of first selected item.
                int currentIndex = selectView.getNextItem(FormListNext::Selected);
                int numCheckedForAdd = 0;
                FormListItem listItem;

                while (numCheckedForAdd < numSelected)
                {
                    listItem = selectView.getItem(currentIndex);
                    currentIndex += 1;

                    if(!listItem.stateSelected())
                    {
                        continue;
                    }
                    else
                    {
                        numCheckedForAdd += 1;
                        if(!selectedItems.in(listItem.text()))
                        {
                            selectedView.addItem(listItem);
                            selectedItems.add(listItem.text());
                        }
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Remove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes selected warehouses from selectedView.
        /// </summary>
        public void clicked()
        {
            super();
            int numSelected = selectedView.getSelectedCount();
            if (numSelected == 0)
            {
                checkFailed(strFmt("@Retail:RetailStoreLocatorGroupMemberNoneSelected"));
            }
            else
            {
                // Index of first selected item.
                int currentIndex = selectedView.getNextItem(FormListNext::Selected);
                int numDeleted = 0;
                FormListItem listItem;

                while (numDeleted < numSelected)
                {
                    listItem = selectedView.getItem(currentIndex);
                    if (!listItem.stateSelected())
                    {
                        currentIndex += 1;
                        continue;
                    }
                    else
                    {
                        selectedItems.remove(listItem.text());
                        selectedView.delete(currentIndex);
                        numDeleted += 1;
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Insert into RetailStoreLocatorGroupMember the appropriate line(s) for the selected warehouse(s).
        /// </summary>
        public void clicked()
        {
            super();
            RecordInsertList insertList = new RecordInsertList(tableNum(RetailStoreLocatorGroupMember));
            FormListItem listItem;
            int currentIndex = 0;
            int lastIndex = selectedView.getCount();

            while (currentIndex < lastIndex)
            {
                RetailStoreLocatorGroupMember toInsert;
                RetailStoreLocatorGroupMember retailStoreLocatorGroupMember;
                RetailStoreView retailStoreView;
                listItem = selectedView.getItem(currentIndex);
                str InventLocationId = listItem.text();
                select firstonly RecId from retailStoreView where retailStoreView.StoreNum == InventLocationId;

                // Check if already in table.
                select count(RecId) from retailStoreLocatorGroupMember
                    where retailStoreLocatorGroupMember.InventLocationId == InventLocationId
                    && retailStoreLocatorGroupMember.Store == retailStoreView.recId
                    && retailStoreLocatorGroupMember.LocatorGroup == parentTable.recId
                    && retailStoreLocatorGroupMember.InventLocationDataAreaId == curExt();

                if (retailStoreLocatorGroupMember.recId == 0)
                {
                    toInsert.InventLocationId = InventLocationId;
                    toInsert.Store = retailStoreView.recId;
                    toInsert.LocatorGroup = parentTable.recId;
                    toInsert.InventLocationDataAreaId = curExt();
                    insertList.add(toInsert);
                }
                currentIndex += 1;
            }
            insertList.insertDatabase();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Retail:RetailStoreLocatorGroupMemberSelection</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GroupMemberSelection</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ListPanel</Pattern>
						<PatternVersion>1.3</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupMembers</Name>
								<ExtendedStyle>listPanel</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SelectGroup</Name>
										<ExtendedStyle>listPanel_availPanel</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormListViewControl">
												<Name>SelectView</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>ListView</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<CheckBox>Yes</CheckBox>
												<SingleSelection>No</SingleSelection>
											</AxFormControl>
										</Controls>
										<Caption>@Retail:RetailStoreLocatorGroupMemberAvailable</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>AddRemoveGroup</Name>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Add</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveRight</NormalImage>
												<Text>@SYS2318</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Remove</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveLeft</NormalImage>
												<Text>@SYS311855</Text>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SelectedGroup</Name>
										<ExtendedStyle>listPanel_selPanel</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormListViewControl">
												<Name>SelectedView</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>ListView</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<SingleSelection>No</SingleSelection>
											</AxFormControl>
										</Controls>
										<Caption>@Retail:RetailStoreLocatorGroupMemberSelected</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>OKCancel</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>