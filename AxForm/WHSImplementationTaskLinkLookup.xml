<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSImplementationTaskLinkLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSImplementationTaskLinkLookup extends FormRun
{
    private WHSImplementationTaskILinkLookupCaller lookupCaller;
    private MenuItemLookupTreeBuilder taskActionTreeBuilder;
    private MenuItemType selectedMenuItemType;
    private WHSImplementationAction selectedAction;

    private const int MenuItemTypeURL = 255;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        lookupCaller = element.args().caller() as WHSImplementationTaskILinkLookupCaller;

        super();

        taskActionTreeBuilder = MenuItemLookupTreeBuilder::construct(
            Tree,
            [SysCountryRegionCode::countryInfo(curExt())]);

        WHSImplementationTaskAction initialSelection;

        if (lookupCaller.selectedMenuItemType() == MenuItemTypeURL)
        {
            initialSelection = WHSImplementationTaskAction::Url;
            selectedMenuItemType = MenuItemTypeURL;
            selectedAction = lookupCaller.selectedMenuItem();
            URL.text(selectedAction);
        }
        else
        {
            initialSelection = WHSImplementationTaskAction::MenuItem;
        }

        TaskActionType.selection(initialSelection);
        element.updateTaskActionToSelect(initialSelection);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOkButton</Name>
				<Source><![CDATA[
    protected void updateOkButton()
    {
        Ok.enabled(strLen(selectedAction) > 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTaskActionToSelect</Name>
				<Source><![CDATA[
    protected void updateTaskActionToSelect(WHSImplementationTaskAction _actionSelected)
    {
        URL.visible(_actionSelected == WHSImplementationTaskAction::URL);
        Tree.visible(_actionSelected == WHSImplementationTaskAction::MenuItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        lookupCaller.selectAction(selectedAction, selectedMenuItemType);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>TaskActionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateTaskActionToSelect(this.selection());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>URL</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            selectedMenuItemType = MenuItemTypeURL;
            selectedAction = this.text();
            element.updateOkButton();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _OldItem, FormTreeItem _NewItem, FormTreeSelect _how)
        {
            super(_OldItem, _NewItem, _how);

            if (_how != FormTreeSelect::Unknown)
            {
                [selectedAction, selectedMenuItemType] = taskActionTreeBuilder.getUserSelection();
                element.updateOkButton();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        public boolean expanding(int _Idx, FormTreeExpand _action, anytype _data)
        {
            taskActionTreeBuilder.menuTreeExpanding(_Idx, _action, _data);
            return super(_Idx, _action, _data);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Clear</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            selectedMenuItemType = 0;
            selectedAction = '';
    
            element.closeOk();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@WAX:WarehouseImplementationTaskMenuLookup</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>View</Name>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TaskActionType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<EnumType>WHSImplementationTaskAction</EnumType>
						<ShowLabel>No</ShowLabel>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>URL</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>URL</Label>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTreeControl">
				<Name>Tree</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tree</Type>
				<FormControlExtension
					i:nil="true" />
				<CascadeSelect>No</CascadeSelect>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ActionGroup</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>OK</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>OK</Command>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>Clear</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>Clear</Command>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
						<Style>DialogCommitContainer</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>DialogCommit</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>