<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCouponUsage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailCouponUsage extends FormRun
{
    SalesTable                  salesTable;
    RefRecId                    retailChannel;
    RetailChannelId             retailChannelId;
    QueryBuildRange             qbrTransactionStatus;
    RetailMCRChannelTable       retailMCRChannelTable;
    boolean isCouponUsageUpdated;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes the variables and enables/disables the relevant controls.
    /// </summary>
    public void init()
    {
        super();

        if (!element.args().dataset())
        {
            throw error(strfmt("@SYS22678", element.name()));
        }

        if (element.args().dataset() == tableNum(SalesTable))
        {
            salesTable = element.args().record();
        }

        if(RetailSalesTable::isCallCenterUserDisabledToEditCouponsAndAffiliationsOnRetailOrder(salesTable))
        {
            RetailCouponUsage_ds.allowCreate(false);
            RetailCouponUsage_ds.allowDelete(false);
            RetailCouponUsage_ds.allowEdit(false);
        }

        RetailSalesTable retailSalesTable = RetailSalesTable::findSalesTable(salesTable);
        RetailChannelTable retailChannelTable = RetailChannelTable::findByRecId(retailSalesTable.RetailChannel);
        retailChannel   = retailSalesTable.RetailChannel;
        retailChannelId = retailChannelTable.RetailChannelId;

        isCouponUsageUpdated = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        if (isCouponUsageUpdated &&
            Box::yesNo("@RetailPricing:RecalculateForSalesCouponChange", DialogButton::Yes) == DialogButton::Yes)
        {
            FormRun formRun = element.args().caller();
            if (formRun && (formRun.name() == formStr(SalesTable) || formRun.name() == formStr(SalesQuotationTable)))
            {
                if (formHasMethod(formRun, identifierStr(recalculateRetailPricesDiscounts)))
                {
                    formRun.recalculateRetailPricesDiscounts();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailCouponUsage</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets filters to show only the relevant records in the grid.
        /// </summary>
        public void init()
        {
            super();

            qbrTransactionStatus = this.query().dataSourceTable(tableNum(RetailCouponUsage)).addRange(fieldNum(RetailCouponUsage, Status));
            qbrTransactionStatus.value(
                strFmt('((%1.%2 == %3) || (%1.%2 == %4))',
                tableStr(RetailCouponUsage),
                fieldStr(RetailCouponUsage, Status),
                enum2int(RetailCouponUsageStatus::Completed),
                enum2int(RetailCouponUsageStatus::NotApplied)));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate the created row.
        /// </summary>
        /// <returns>true if the coupon is valid; false otherwise</returns>
        public boolean validateWrite()
        {
            boolean ret = super();
            
            if (ret && !RetailCouponUsage.RecId)
            {
                RetailCouponCodeTable couponCodeTable;
                RetailCoupon retailCoupon;

                select firstonly * from couponCodeTable
                    join * from retailCoupon
                where retailCoupon.CouponNumber == couponCodeTable.CouponNumber
                    && couponCodeTable.CouponCodeId == RetailCouponUsage.CouponCodeId;
                if (RetailCouponHelper::validateCoupon(couponCodeTable, retailChannel))
                {
                    if(!RetailCouponHelper::ValidateCouponLimits(couponCodeTable.CouponCodeId, retailChannelId, salesTable.InvoiceAccount, salesTable.SalesId))
                    {
                        ret = checkFailed("@Retail:CouponUsagelimitExceeded");
                    }
                }
                else
                {
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the values that are not entered by the user.
        /// </summary>
        public void write()
        {
            // If the UsageId is empty, set it and other values that are not entered by user.
            if(!RetailCouponUsage.UsageId)
            {
                RetailCouponUsage.CustomerAccount   = salesTable.InvoiceAccount;
                RetailCouponUsage.RetailChannelId   = retailChannelId;
                RetailCouponUsage.Status = RetailCouponUsageStatus::NotApplied;
                RetailCouponUsage.UsageId           = newGuid();
            }

            super();

            isCouponUsageUpdated = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            isCouponUsageUpdated = true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CouponCodeId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Override this method to open the <c>RetailCoupon</c> which has the selected coupon code.
            /// </summary>
            public void jumpRef()
            {
                RetailCouponUsage couponUsage;
                RetailCouponCodeTable couponCodeTable;
                RetailCoupon retailCoupon;

                select firstonly * from retailCoupon
                join couponCodeTable
                join couponUsage
            where retailCoupon.CouponNumber == couponCodeTable.CouponNumber
                && couponCodeTable.CouponCodeId == couponUsage.CouponCodeId
                && couponUsage.SalesId == salesTable.SalesId
                && couponUsage.CouponCodeId == RetailCouponUsage.CouponCodeId;

                if (retailCoupon.RecId)
                {
                    MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr('RetailCoupon'), MenuItemType::Display);
                    Args args = new Args(menuFunction.object());
                    args.caller(element);
                    args.record(retailCoupon);
                    menuFunction.run(args);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// This method provides a custom dropdown for selecting coupon code.
            /// </summary>
            /// <param name = "_formControl">The control.</param>
            /// <param name = "_filterStr">Filter for the lookup.</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // Removing old lookup and new lookup will cover if all active coupons needs to be shown or only non usage coupons.
                RetailCouponCodeTable::lookupActiveCouponsNonUsage(_formControl, salesTable.MCROrderStopped);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailCouponUsage</Name>
			<Table>RetailCouponUsage</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CouponCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountOfferId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplicationCounterFromOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UsageId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@MCR25553</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailCouponUsage_SalesId</Name>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>SalesId</DataField>
						<DataSource>RetailCouponUsage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailCouponUsage_CouponCodeId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CouponCodeId</DataField>
						<DataSource>RetailCouponUsage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CouponCode</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayCouponCode</DataMethod>
						<DataSource>RetailCouponUsage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CouponDesc</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayCouponDesc</DataMethod>
						<DataSource>RetailCouponUsage</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>RetailCouponUsage</DataSource>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>