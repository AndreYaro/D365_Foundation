<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RTax25CorrectionJournalDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RTax25CorrectionJournalDialog extends FormRun
{
    RTax25CorrectionJournalCreate   journalCreate;
    RTax25RegisterJournalTable      registerJournalTable,
                                    originalJournalTable;

    Set                             correctedRegisters;
    TmpRTax25RegisterDependences    tmpRegisterDependences;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        ret = super();

        if (this.closedOk() && !correctedRegisters.elements())
        {
            ret = checkFailed("@SYP4861155");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        journalCreate.parmCorrectedRegistersSet(correctedRegisters.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillTmpRegisterDependencies</Name>
				<Source><![CDATA[
    private void fillTmpRegisterDependencies()
    {
        RTax25RegType               rTax25RegType;
        RTax25RegisterJournalTrans  regJournalTrans;
        container                   childRegisters;
        int                         i;

        while select RegisterId from regJournalTrans
            where regJournalTrans.RegisterJournalType == originalJournalTable.RegisterJournalType &&
                  regJournalTrans.FiscalYear          == originalJournalTable.FiscalYear          &&
                  regJournalTrans.PeriodNum           == originalJournalTable.PeriodNum           &&
                  regJournalTrans.PeriodType          == originalJournalTable.PeriodType          &&
                  regJournalTrans.JournalNum          == originalJournalTable.JournalNum
        {
            rTax25RegType = RTax25RegType::construct(RTax25RegisterTable::registerId2Type(regJournalTrans.RegisterId));

            childRegisters = rTax25RegType.childRegisters();

            for (i = 1; i <= conLen(childRegisters); i++)
            {
                tmpRegisterDependences.clear();
                tmpRegisterDependences.ParentRegisterId = regJournalTrans.RegisterId;
                tmpRegisterDependences.ChildRegisterId  = RTax25RegisterTable::registerType2Id(conPeek(childRegisters, i));

                if (tmpRegisterDependences.ChildRegisterId)
                {
                    tmpRegisterDependences.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().caller())
        {
            throw error(Error::missingParameter(this));
        }

        journalCreate        = element.args().caller();
        registerJournalTable = element.args().record();

        originalJournalTable = RTax25RegisterJournalTable::findRecId(registerJournalTable.CorrectedRecId);

        super();

        correctedRegisters = Set::create(journalCreate.parmCorrectedRegistersSet());

        this.fillTmpRegisterDependencies();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RTax25RegisterJournalTrans</Name>
				<Methods>
					<Method>
						<Name>unmarkRegisterAndChildren</Name>
						<Source><![CDATA[
        private void unmarkRegisterAndChildren(RTax25RegisterId _registerId)
        {
            TmpRTax25RegisterDependences    regDependencesLocal;

            correctedRegisters.remove(_registerId);

            regDependencesLocal.setTmpData(tmpRegisterDependences);

            while select regDependencesLocal
                where regDependencesLocal.ParentRegisterId == _registerId
            {
                this.unmarkRegisterAndChildren(regDependencesLocal.ChildRegisterId);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>markRegisterAndParents</Name>
						<Source><![CDATA[
        private void markRegisterAndParents(RTax25RegisterId _registerId)
        {
            TmpRTax25RegisterDependences    regDependencesLocal;

            correctedRegisters.add(_registerId);

            regDependencesLocal.setTmpData(tmpRegisterDependences);

            while select regDependencesLocal
                where regDependencesLocal.ChildRegisterId == _registerId
            {
                this.markRegisterAndParents(regDependencesLocal.ParentRegisterId);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>recalculate</Name>
						<Source><![CDATA[
        public edit NoYes recalculate(boolean _set, RTax25RegisterJournalTrans _journalTrans, NoYes _recalculate)
        {
            if (_set)
            {
                if (_recalculate)
                {
                    this.markRegisterAndParents(_journalTrans.RegisterId);
                }
                else
                {
                    this.unmarkRegisterAndChildren(_journalTrans.RegisterId);
                }

                RTax25RegisterJournalTrans_DS.refreshEx(-1);
            }

            return correctedRegisters.in(_journalTrans.RegisterId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            qbds = this.query().dataSourceTable(tableNum(RTax25RegisterJournalTrans));
            qbds.clearDynalinks();

            qbds.addRange(fieldNum(RTax25RegisterJournalTrans, RegisterJournalType)).value(queryValue(originalJournalTable.RegisterJournalType));
            qbds.addRange(fieldNum(RTax25RegisterJournalTrans, FiscalYear)).value(queryValue(originalJournalTable.FiscalYear));
            qbds.addRange(fieldNum(RTax25RegisterJournalTrans, PeriodNum)).value(queryValue(originalJournalTable.PeriodNum));
            qbds.addRange(fieldNum(RTax25RegisterJournalTrans, PeriodType)).value(queryValue(originalJournalTable.PeriodType));
            qbds.addRange(fieldNum(RTax25RegisterJournalTrans, JournalNum)).value(queryValue(originalJournalTable.JournalNum));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RTax25RegisterJournalTrans</Name>
			<Table>RTax25RegisterJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssessedTaxRegisterType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalculationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancelled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ApprovedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegisterId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegisterJournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYP4861156</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">RTax25RegisterJournalTrans</TitleDataSource>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Recalculate</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>recalculate</DataMethod>
										<DataSource>RTax25RegisterJournalTrans</DataSource>
										<Label>@SYS40695</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RegisterId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RegisterId</DataField>
										<DataSource>RTax25RegisterJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>registerName</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>registerName</DataMethod>
										<DataSource>RTax25RegisterJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RTax25RegisterJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomButtonGrp</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Skip>Yes</Skip>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>6</VerticalSpacing>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>