<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PayrollAccrualTransactionsInquiry</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PayrollAccrualTransactionsInquiry extends FormRun implements OfficeIGeneratedWorkbookCustomExporter
{
    PayrollWorkerEnrolledAccrual calledFromWorkerEnrolledAccrual;
    boolean setupWorkerLink;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().dataset() == tableNum(PayrollWorkerEnrolledAccrual))
        {
            if (element.args().record())
            {
                // A worker enrolled accrual record was provided.
                setupWorkerLink = true;
                calledFromWorkerEnrolledAccrual = element.args().record();
            }
            else
            {
                // Form cannot be called from enrolled accruals without an active buffer.
                throw error(Error::missingFormActiveBuffer(element.name(), tableStr(PayrollWorkerEnrolledAccrual)));
            }
        }

        super();

        payrollAccrualTransactionsView_ds.query().dataSourceTable(tableNum(PayrollAccrualTransactionsView)).addSortField(fieldNum(PayrollAccrualTransactionsView, WorkerName));
        payrollAccrualTransactionsView_ds.query().dataSourceTable(tableNum(PayrollAccrualTransactionsView)).addSortField(fieldNum(PayrollAccrualTransactionsView, AccrualId));
        payrollAccrualTransactionsView_ds.query().dataSourceTable(tableNum(PayrollAccrualTransactionsView)).addSortField(fieldNum(PayrollAccrualTransactionsView, TransDate), SortOrder::Descending);

        QueryBuildDataSource qbdPayrollAccrualTransactionsViews = PayrollAccrualTransactionsView_DS.queryBuildDataSource();

        PayrollAccrualTransactionsView_ds.query().addQueryFilter(qbdPayrollAccrualTransactionsViews, fieldStr(PayrollAccrualTransactionsView, WorkerName));
        PayrollAccrualTransactionsView_ds.query().addQueryFilter(qbdPayrollAccrualTransactionsViews, fieldStr(PayrollAccrualTransactionsView, AccrualId));
        PayrollAccrualTransactionsView_ds.query().addQueryFilter(qbdPayrollAccrualTransactionsViews, fieldStr(PayrollAccrualTransactionsView, TransDate));
        PayrollAccrualTransactionsView_ds.query().addQueryFilter(qbdPayrollAccrualTransactionsViews, fieldStr(PayrollAccrualTransactionsView, TransSource));

        QueryFilter queryFilter = PayrollAccrualTransactionsView_ds.query().addQueryFilter(qbdPayrollAccrualTransactionsViews, fieldStr(PayrollAccrualTransactionsView, IsPendingUsage));
        queryFilter.status(RangeStatus::Hidden);
     }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        ListIterator dataEntityOptionsIterator = new ListIterator(_menuOptions.dataEntityOptions());

        // Remove auto-added data entities from the menu.
        while (dataEntityOptionsIterator.more())
        {
            dataEntityOptionsIterator.delete();
        }

        // Add a custom export option for BudgetControlGroupOverBudgetPermissionsEntity so a custom filter can be added later.
        OfficeGeneratedExportMenuItem menuItem = OfficeGeneratedExportMenuItem::construct(tableStr(PayrollAccrualTransactionsInquiryEntity), tableStr(PayrollAccrualTransactionsInquiryEntity));
        menuItem.displayName("@Payroll:BenefitAccrualTransactions");
        _menuOptions.customMenuItems().addEnd(menuItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataEntityContext</Name>
				<Source><![CDATA[
    public ExportToExcelDataEntityContext getDataEntityContext(OfficeGeneratedExportMenuItem _menuItem)
    {
        ExportToExcelDataEntityContext context = null;

        Year currentYear = year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        TransDate startDate = mkDate(1, 1, currentYear);
        TransDate endDate = mkDate(31, 12, currentYear);

        switch (_menuItem.dataEntityName())
        {
            case tablestr(PayrollAccrualTransactionsInquiryEntity):
                context = ExportToExcelDataEntityContext::constructDefault(tablestr(PayrollAccrualTransactionsInquiryEntity));
                ExportToExcelDataEntityInfo entityContext = context.findEntityByName(tablestr(PayrollAccrualTransactionsInquiryEntity));
                ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(tablestr(PayrollAccrualTransactionsInquiryEntity));

                entityContext.filter(filterBuilder.and(
                    filterBuilder.greaterThanOrEqualTo(fieldStr(PayrollAccrualTransactionsInquiryEntity, TransDate), startDate),
                    filterBuilder.lessThanOrEqualTo(fieldStr(PayrollAccrualTransactionsInquiryEntity, TransDate), endDate)));
                break;
        }

        return context;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayrollAccrualTransactionsView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildRange qbrTransDate, qbrPendingUsageTrans;

            super();

            if (setupWorkerLink)
            {
                if (calledFromWorkerEnrolledAccrual.AccrualYearStartDate)
                {
                    // show transactions for current plan year only if AccrualYearStartDate is not null
                    qbrTransDate = this.query().dataSourceTable(this.table()).addRange(fieldNum(PayrollAccrualTransactionsView, TransDate));
                    qbrTransDate.value(SysQuery::range(calledFromWorkerEnrolledAccrual.AccrualYearStartDate, calledFromWorkerEnrolledAccrual.getAccrualYearEndDate()));
                }
            }

            // filter out pending usage transactions
            qbrPendingUsageTrans = this.query().dataSourceTable(this.table()).addRange(fieldNum(PayrollAccrualTransactionsView, IsPendingUsage));
            qbrPendingUsageTrans.value(queryValue(0));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource    qbdsWorkerEnrolledAccrual;

            // Get the worker enrolled accrual child datasource.
            qbdsWorkerEnrolledAccrual = this.query().dataSourceTable(tableNum(PayrollAccrualTransactionsView)).childDataSourceNo(1);

            if (setupWorkerLink)
            {
                // Set the relationship between the view and the worker enrolled accrual.
                qbdsWorkerEnrolledAccrual.clearLinks();
                qbdsWorkerEnrolledAccrual.addLink(fieldNum(PayrollAccrualTransactionsView, WorkerEnrolledAccrual), fieldNum(PayrollWorkerEnrolledAccrual, RecId), this.query().dataSourceTable(this.table()).name());
            }
            else
            {
                // Disable the child datasource so it does not affect the basic query.
                qbdsWorkerEnrolledAccrual.enabled(false);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>PayrollWorkerEnrolledAccrual</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbdsWorkerEnrolledAccrual;

            super();

            if (setupWorkerLink)
            {
                qbdsWorkerEnrolledAccrual = this.query().dataSourceTable(this.table());
                qbdsWorkerEnrolledAccrual.clearDynalinks();
                qbdsWorkerEnrolledAccrual.addDynalink(fieldNum(PayrollWorkerEnrolledAccrual, RecId), calledFromWorkerEnrolledAccrual, fieldNum(PayrollWorkerEnrolledAccrual, RecId));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Grid_WorkerName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            HcmWorker::jumpRef(payrollAccrualTransactionsView.Worker, this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        public str toolTip()
        {
            return PayrollAccrualTransactionsView::getWorkerNameToolTip(payrollAccrualTransactionsView.Worker);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Grid_AccrualId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            PayrollAccrual::jumpRef(payrollAccrualTransactionsView.Accrual, this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        public str toolTip()
        {
            return PayrollAccrual::find(payrollAccrualTransactionsView.Accrual).toolTipField(fieldNum(PayrollAccrual, AccrualId));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayrollAccrualTransactionsView</Name>
			<Table>PayrollAccrualTransactionsView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Accrual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccrualId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Accrued</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarryOver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreateDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedByUserId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EarningCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPendingUsage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualTransComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PendingUsage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalAvailableHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>unionAllBranchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Used</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerEnrolledAccrual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayrollWorkerEnrolledAccrual</Name>
			<Table>PayrollWorkerEnrolledAccrual</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Accrual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccrualDateBasis</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccrualYearStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAccrualStopped</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsUsageStopped</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayrollAccrualTransactionsView</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Payroll:BenefitAccrualTransactions</Caption>
		<DataSource xmlns="">PayrollAccrualTransactionsView</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>Grid_WorkerName</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_WorkerName</Name>
						<ElementPosition>390451572</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>WorkerName</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_AccrualId</Name>
						<ElementPosition>585677358</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccrualId</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>Grid_TransDate</Name>
						<ElementPosition>780903144</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransDate</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Grid_CarryOver</Name>
						<ElementPosition>976128930</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CarryOver</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Grid_Accrued</Name>
						<ElementPosition>1171354716</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Accrued</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Grid_Used</Name>
						<ElementPosition>1366580502</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Used</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_TransSource</Name>
						<ElementPosition>1561806288</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransSource</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_CreatedByUserId</Name>
						<ElementPosition>1757032074</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreatedByUserId</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>PayrollAccrualTransactionsView_CreateDateTime</Name>
						<ElementPosition>1854644967</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreateDateTime</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
						<DisplayOption>Date</DisplayOption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_ManualTransComments</Name>
						<ElementPosition>1952257860</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ManualTransComments</DataField>
						<DataSource>PayrollAccrualTransactionsView</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>PayrollAccrualTransactionsView</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>