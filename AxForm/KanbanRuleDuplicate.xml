<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>KanbanRuleDuplicate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class KanbanRuleDuplicate extends FormRun
{
    FormButtonManager               formButtonManager;
    KanbanRuleDuplicateFormHelper   kanbanRuleDuplicateFormHelper;
    InventDimCtrl_Frm_ReqItemTable  inventDimFormSetup;

    LeanRuleData                    leanRuleData, replacedRuleData;
    KanbanRuleDuplicateFormMode     kanbanRuleDuplicateFormMode;
    QueryBuildRange                 kanbanRuleRange;

    LeanReplenishmentRuleId         replacedRuleId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args args = this.args();

        // check input parameters
        if (   !args
            || !args.record()
            || args.parmEnumType() != enumNum(KanbanRuleDuplicateFormMode))
        {
            throw error(Error::missingFormActiveBuffer(formStr(KanbanRuleDuplicate)));
        }

        super();

        // determine form mode
        kanbanRuleDuplicateFormMode = args.parmEnum();

        // determine form's title
        switch (kanbanRuleDuplicateFormMode)
        {
            case KanbanRuleDuplicateFormMode::Duplicate:
                element.design().caption("@SYS136350");
                break;

            case KanbanRuleDuplicateFormMode::Replace:
                element.design().caption("@SYS137377");
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        // intialize the button manager and the helper class
        this.initializeButtonManager();

        // feed the form with the incoming data
        this.initializeData();

        // update the controls that are on the screen
        this.updateDesign(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeButtonManager</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the FormButtonManager and registers all controls
    /// that have their state dependent on it.
    /// </summary>
    private void initializeButtonManager()
    {
        // create the form helper
        kanbanRuleDuplicateFormHelper = KanbanRuleDuplicateFormHelper::newStandard();
        kanbanRuleDuplicateFormHelper.parmFormMode(kanbanRuleDuplicateFormMode);

        formButtonManager = FormButtonManager::construct();
        formButtonManager.parmRuleImplementer(kanbanRuleDuplicateFormHelper);

        // register action pane buttons
        formButtonManager.registerButtonRule(groupDetailsProductDimensions, groupDetailsProductDimensions_configId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));
        formButtonManager.registerButtonRule(groupDetailsProductDimensions, groupDetailsProductDimensions_InventSizeId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));
        formButtonManager.registerButtonRule(groupDetailsProductDimensions, groupDetailsProductDimensions_InventColorId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));
        formButtonManager.registerButtonRule(groupDetailsProductDimensions, groupDetailsProductDimensions_InventStyleId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));
        formButtonManager.registerButtonRule(groupDetailsProductDimensions, groupDetailsProductDimensions_InventVersionId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));

        formButtonManager.registerButtonRule(groupValidity, replacedRule, methodStr(KanbanRuleDuplicateFormHelper, ruleCheckFormModeReplace));

        formButtonManager.registerButtonRule(buttonGroup, btnOK, methodStr(KanbanRuleDuplicateFormHelper, ruleCheckCoverageType));

        formButtonManager.registerButtonRule(DialogContent, groupMultipleActivity, methodStr(KanbanRulesUIHelper, ruleCheckKanbanTypeManufacturing));
        formButtonManager.registerButtonRule(DialogContent, groupRuleType, methodStr(KanbanRuleDuplicateFormHelper, ruleCheckFormModeDuplicate));

        formButtonManager.registerButtonRule(DialogContent, groupProductSelection, methodStr(KanbanRuleDuplicateFormHelper, ruleCheckFormModeDuplicate));
        formButtonManager.registerButtonRule(DialogContent, groupDetailsProductDimensions, methodStr(KanbanRuleDuplicateFormHelper, ruleCheckFormModeDuplicate));

        formButtonManager.registerButtonRule(groupProductSelection, productSelection_ItemId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProduct));
        formButtonManager.registerButtonRule(groupProductSelection, productSelection_AllocationId, methodStr(KanbanRulesUIHelper, ruleCheckCoverageProductFamily));

        formButtonManager.registerButtonRule(groupMultipleActivity, lastPlanPlanActivity, methodStr(KanbanRulesUIHelper, isMultiActivityKanbanFlow));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeData</Name>
				<Source><![CDATA[
    private void initializeData()
    {
        KanbanRule  origKanbanRule = this.args().record();

        replacedRuleData = origKanbanRule.ruleData();

        kanbanRule_ds.executeQuery();

        // now create a new lean rule data object that holds references
        // to the form's buffers
        this.updateLeanRuleData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedPlanPlanActivity</Name>
				<Source><![CDATA[
    public boolean modifiedPlanPlanActivity(KanbanFlowElementRole _role)
    {
        boolean ret = kanbanRuleDuplicateFormHelper.validatePlanPlanActivityReplacedRule(_role, this.replacedKanbanRule());

        if (ret)
        {
            element.onKanbanFlowChanged();
            element.updateDesign();
        }

        // given that the onKanbanFlowChanged() might result in changing the complete KanbanFlow
        // (i.e. both source and destination), we should refresh the complete refresh cache
        this.refreshKanbanFlowMethodCache();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onKanbanFlowChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles changes in the kanban flow.
    /// </summary>
    /// <param name="_setMultiActivityFlag">
    ///     Indicates if the multi activity flag should be passed to the handler.
    /// </param>
    /// <param name="_multiActivityFlag">
    ///     Indicates the state of the edit activity flag control.
    /// </param>
    public void onKanbanFlowChanged(
        boolean _setMultiActivityFlag = false,
        boolean _multiActivityFlag    = false)
    {
        if (leanRuleData)
        {
            // let the KanbanFlowWrapper handle the change in the kanban flow
            // eventually showing the KanbanFlowSelection dialog
            if (!_setMultiActivityFlag)
            {
                leanRuleData.parmKanbanFlowWrapper().onKanbanFlowChanged(leanRuleData);
            }
            else
            {
                leanRuleData.parmKanbanFlowWrapper().onKanbanFlowChanged(leanRuleData, _multiActivityFlag);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshKanbanFlowMethodCache</Name>
				<Source><![CDATA[
    private void refreshKanbanFlowMethodCache()
    {
        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, editPlanActivityNameFirst));
        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, editPlanActivityNameLast));

        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, firstActivityPlanName));
        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, lastActivityPlanName));
        firstActivity_PlanName.update();
        lastActivity_PlanName.update();

        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, firstActivityVersion));
        kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, lastActivityVersion));
        firstActivity_Version.update();
        lastActivity_Version.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>replacedKanbanRule</Name>
				<Source><![CDATA[
    public LeanRuleData replacedKanbanRule()
    {
        return (kanbanRuleDuplicateFormMode == KanbanRuleDuplicateFormMode::Replace) ? replacedRuleData : null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the InventDim buffer when a new Item is selected
    /// </summary>
    public void resetInventDim()
    {
        inventDim.data(InventDim::find(InventDim::inventDimIdBlank()));
        leanCoverage.InventDimId = inventDim.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Plan                        replacedRulePlan;
        Plan                        nextRulePlan;
        PlanPlanActivity            nextRulePlanFirstActivity;
        PlanPlanActivity            nextRulePlanLastActivity;
        KanbanFlowsCollection       kanbanFlows;

        super();

        if (kanbanRuleDuplicateFormMode == KanbanRuleDuplicateFormMode::Replace)
        {
            [replacedRuleId,
             leanCoverageKanbanRule.ValidFrom,
             leanCoverageKanbanRule.ValidTo] = kanbanRuleDuplicateFormHelper.defaultReplaceValues(replacedRuleData);

            // find the correct plan version according to new rule validity
            replacedRulePlan = replacedRuleData.kanbanFlow().plan();
            nextRulePlan = Plan::findActive(replacedRulePlan.PlanReference, leanCoverageKanbanRule.ValidFrom);
            // refresh the controls in case is needed
            if (replacedRulePlan.RecId != nextRulePlan.RecId)
            {
                nextRulePlanFirstActivity = PlanPlanActivity::findPlanActivity(nextRulePlan.RecId, replacedRuleData.kanbanFlow().firstPlanActivity().RecId);
                if (!nextRulePlanFirstActivity // empty the selection in case there is no corresponding activity in the new plan version
                    || nextRulePlanFirstActivity.RecId != kanbanFlow.FirstPlanPlanActivity)
                {
                    kanbanFlow.initFromFirstPlanPlanActivity(nextRulePlanFirstActivity.RecId);
                }

                nextRulePlanLastActivity = PlanPlanActivity::findPlanActivity(nextRulePlan.RecId, replacedRuleData.kanbanFlow().lastPlanActivity().RecId);
                if (!nextRulePlanLastActivity // empty the selection in case there is no corresponding activity in the new plan version
                    || nextRulePlanLastActivity.RecId != kanbanFlow.LastPlanPlanActivity)
                {
                    kanbanFlow.initFromLastPlanPlanActivity(nextRulePlanLastActivity.RecId);
                }

                this.refreshKanbanFlowMethodCache();

                if (nextRulePlanFirstActivity && nextRulePlanLastActivity)
                {
                    kanbanFlows = KanbanFlow::findAllFlows(nextRulePlanFirstActivity.RecId, nextRulePlanLastActivity.RecId);

                    if (kanbanFlows.kanbanFlowsCount() == 1)
                    {
                        // this is the case when there is a valid kanban flow in the plan version
                        kanbanFlow.data(kanbanFlows.getKanbanFlowWrapper().parmKanbanFlow());
                        this.refreshKanbanFlowMethodCache();
                    }
                    else
                    {
                        // in case there is no kanban flow for the 2 activities in the current plan version
                        // or there are more than 1 kanban flows
                        // show the kanban flow selection dialog to the user
                        this.onKanbanFlowChanged();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControlsFromData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the groups with checkboxes from the KanbanRule buffer.
    /// </summary>
    public void updateControlsFromData()
    {
        groupMultipleActivity.optionValue(kanbanRuleDuplicateFormHelper.isMultiActivityKanbanFlow());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataFromControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the groups with checkboxes from the KanbanRule buffer.
    /// </summary>
    public void updateDataFromControls()
    {
        kanbanFlow_ds.editMultipleActivity(true, kanbanFlow, kanbanRuleDuplicateFormHelper.isMultiActivityKanbanFlow());

        this.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the controls visible in the form.
    /// </summary>
    /// <param name="_mode">
    /// Indicates the type of update that is taking place.
    /// </param>
    void updateDesign(InventDimFormDesignUpdate _mode = InventDimFormDesignUpdate::Active)
    {
        InventDimParm       inventDimParmShow;
        InventDimParm       inventDimParmEnabled;

        // refresh all buttons that are registered in the buttons manager
        formButtonManager.refresh(true);

        // refresh all buttons which state depends on the checkbox group controls
        this.updateControlsFromData();

        // refresh mandatory fields
        this.updateMandatoryFields();

        // refresh the InventDim fields
        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup = InventDimCtrl_Frm_ReqItemTable::newFromForm(element);
                }
                inventDimParmShow.initProductDimensionsAllGroups();
                inventDimFormSetup.parmDimParmVisible(inventDimParmShow);
            // fall through
            case InventDimFormDesignUpdate::Active,
                 InventDimFormDesignUpdate::FieldChange:
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newItemId(leanCoverage.ItemId));
                InventDimGroupSetup::newItemId(leanCoverage.ItemId).inventDimParmActiveProductDimension(inventDimParmEnabled);
                inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled);
                inventDimFormSetup.parmMarkFieldAsMandatory(   leanCoverage.RuleCoverageType    == LeanRuleCoverageType::Product
                                                            && kanbanRule.ReplenishmentStrategy == LeanReplenishmentStrategy::Fixed);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::SetupChange:
                break;

            default :
                // Incorrect parameter for the function '%1'
                throw error(strFmt("@SYS54195", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLeanRuleData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the LeanRuleData object that is maintained by the form.
    /// </summary>
    /// <param name="_reset">
    /// Indicates if the LeanRuleData object should be reset.
    /// </param>
    public void updateLeanRuleData(boolean _reset = false)
    {
        if (_reset)
        {
            if (leanRuleData)
            {
                leanRuleData.clear();
            }

            leanRuleData = null;
        }
        else
        {
            leanRuleData = LeanRuleData::newBuffers(kanbanRule,
                                                kanbanRuleFixed,
                                                kanbanRuleVariable,
                                                kanbanRuleEvent,
                                                leanCoverageKanbanRule,
                                                leanCoverage,
                                                kanbanFlow);

            leanRuleData.parmInventDim(inventDim);
        }

        // propagate the changes to the helper class
        kanbanRuleDuplicateFormHelper.initFromLeanRuleData(leanRuleData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMandatoryFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maintains the dynamic mandatory flags of the fields on the form.
    /// </summary>
    public void updateMandatoryFields()
    {
        leanCoverage_ds.object(fieldNum(LeanCoverage, ItemId)).mandatory(leanCoverage.RuleCoverageType == LeanRuleCoverageType::Product);
        leanCoverage_ds.object(fieldNum(LeanCoverage, AllocationId)).mandatory(leanCoverage.RuleCoverageType == LeanRuleCoverageType::ProductFamily);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>KanbanRule</Name>
				<Methods>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            // as this form is always showing an existing kanban rule
            // and it's never supposed to edit it in any way (see the write methods),
            // it's safe to assume that the record can always be left, independent
            // of its validity (i.e. validateWrite doesn't need to be called)
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = kanbanRule.validateWrite(false);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (replacedRuleData)
            {
                kanbanRuleRange.value(SysQuery::value(replacedRuleData.parmKanbanRule().RecId));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;
            super();

            qbds = this.query().dataSourceTable(tableNum(KanbanRule));
            qbds.clearDynalinks();
            qbds.addRange(fieldNum(KanbanRule,LegalEntity)).value(queryValue(CompanyInfo::current()));
            kanbanRuleRange = SysQuery::findOrCreateRange(qbds, fieldNum(KanbanRule, RecId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>replacingRuleId</Name>
						<Source><![CDATA[
        /// <summary>
        /// Edit method for the replacing rule's ID.
        /// </summary>
        /// <param name="set">
        /// The parameter that identifies if the value is to be set or retrieved.
        /// </param>
        /// <param name="_leanReplenishmentRuleId">
        /// The LeanReplenishmentRuleId that is to be set or retrieved.
        /// </param>
        /// <returns>
        /// The LeanReplenishmentRuleId of the destination location.
        /// </returns>
        public edit LeanReplenishmentRuleId replacingRuleId(boolean set, LeanReplenishmentRuleId _leanReplenishmentRuleId)
        {
            boolean updateFormData = false;

            if (set)
            {
                updateFormData = replacedRuleId != _leanReplenishmentRuleId;
                replacedRuleId = _leanReplenishmentRuleId;
            }
            else
            {
                _leanReplenishmentRuleId = replacedRuleId;
            }

            // update the form's fields in case selection changed
            if (updateFormData)
            {
                replacedRuleData = KanbanRule::findRuleId(replacedRuleId).ruleData();
                kanbanRule_ds.executeQuery();

                // now create a new lean rule data object that holds references
                // to the form's buffers
                element.updateLeanRuleData();
            }

            return _leanReplenishmentRuleId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>KanbanType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>KanbanRuleFixed</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = kanbanRuleFixed.validateWrite(false);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            // take care of properly linking the inventDim table
            qbds = this.query().dataSourceTable(tableNum(InventDim));
            qbds.clearLinks();
            qbds.addLink(fieldNum(LeanCoverage, InventDimId), fieldNum(InventDim, InventDimId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>configId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                formButtonManager.refresh(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventColorId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                formButtonManager.refresh(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventVersionId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                formButtonManager.refresh(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSizeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                formButtonManager.refresh(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LeanCoverage</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AllocationId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                formButtonManager.refresh(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.resetInventDim();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RuleCoverageType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.resetInventDim();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LeanCoverageKanbanRule</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = leanCoverageKanbanRule.validateData(leanRuleData, true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>KanbanFlow</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(KanbanFlow, firstActivityPlanName));
            this.cacheAddMethod(tableMethodStr(KanbanFlow, lastActivityPlanName));
            this.cacheAddMethod(tableMethodStr(KanbanFlow, editPlanActivityNameFirst));
            this.cacheAddMethod(tableMethodStr(KanbanFlow, editPlanActivityNameLast));
            this.cacheAddMethod(tableMethodStr(KanbanFlow, firstActivityVersion));
            this.cacheAddMethod(tableMethodStr(KanbanFlow, lastActivityVersion));
        }

]]></Source>
					</Method>
					<Method>
						<Name>editMultipleActivity</Name>
						<Source><![CDATA[
        public edit boolean editMultipleActivity(
            boolean    _set,
            KanbanFlow _kanbanFlow,
            boolean    _multipleActivity)
        {
            boolean needsRefresh = false;
            boolean result       = false;

            if (_set)
            {
                needsRefresh = _multipleActivity != kanbanRuleDuplicateFormHelper.isMultiActivityKanbanFlow();

                if (needsRefresh)
                {
                    element.onKanbanFlowChanged(true, _multipleActivity);
                    element.updateDesign();

                    // invalidate cache
                    kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, editPlanActivityNameFirst));
                    kanbanFlow_ds.cacheCalculateMethod(tableMethodStr(KanbanFlow, editPlanActivityNameLast));
                    kanbanFlow_ds.refresh();
                }
            }
            else
            {
                if (   leanRuleData
                    && _kanbanFlow.RecId == leanRuleData.kanbanFlow().RecId)
                {
                    result = kanbanRuleDuplicateFormHelper.isMultiActivityKanbanFlow();
                }
                else
                {
                    result = !_kanbanFlow.isSingleActivityFlow();
                }
            }

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>KanbanRuleVariable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = kanbanRuleVariable.validateWrite(false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>KanbanRuleEvent</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = kanbanRuleEvent.validateWrite(false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>firstPlanPlanActivity</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            kanbanRuleDuplicateFormHelper.lookupPlanPlanActivityReplacingRule(this, this.text(), KanbanFlowElementRole::Source, element.replacedKanbanRule());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            return super() && element.modifiedPlanPlanActivity(KanbanFlowElementRole::Source);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>groupMultipleActivity</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            // as there's no way to bind the edit method to the control group, we have to update its state manually
            kanbanFlow_ds.editMultipleActivity(true, kanbanFlow, groupMultipleActivity.optionValue());
            element.updateControlsFromData();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>lastPlanPlanActivity</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            kanbanRuleDuplicateFormHelper.lookupPlanPlanActivityReplacingRule(this, this.text(), KanbanFlowElementRole::Destination, element.replacedKanbanRule());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            return super() && element.modifiedPlanPlanActivity(KanbanFlowElementRole::Destination);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReplacedRule</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            KanbanRule::lookupReplacedRule(this, leanRuleData, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnOK</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormDataSource originalDataSource;

            // trigger the replacement
            if (kanbanRuleDuplicateFormHelper.handleDuplicateRule(leanRuleData,
                                                                  kanbanRuleDuplicateFormMode,
                                                                  replacedRuleId,
                                                                  inventDim))
            {
                originalDataSource = FormDataUtil::getFormDataSource(element.args().record());
                originalDataSource.executeQuery();
                originalDataSource.research(true);

                if ( element.args().caller() is FormRun)
                {
                    FormRun callerForm = element.args().caller();
                    callerForm.design().viewEditMode(ViewEditMode::Edit);
                }

                element.closeCancel();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnCancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.closeCancel();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>KanbanRule</Name>
			<Table>KanbanRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowDeviatingQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CardAssignmentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CardsNumberSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HandlingUnitEmptyPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KanbanFlow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KanbanType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumAlertLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumDeviatingQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumAlertLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumDeviatingQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintCardWithPickingList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintInstructionsOnCard</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintKanbanAutomatically</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplacingKanbanRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentStrategy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TriggerLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UrgencyLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UsesCirculatingCards</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>KanbanRuleFixed</Name>
			<Table>KanbanRuleFixed</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssignManualKanbans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentLeadTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentTimeUnitOfMeasure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>KanbanRule</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>LeanCoverage</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>DimIdIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LeanCoverage</Name>
			<Table>LeanCoverage</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllocationDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleCoverageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LeanCoverageKanbanRule</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LeanCoverageKanbanRule</Name>
			<Table>LeanCoverageKanbanRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Coverage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KanbanRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>KanbanRule</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>KanbanFlow</Name>
			<Table>KanbanFlow</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FirstPlanPlanActivity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBridge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastPlanPlanActivity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>KanbanRule</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>KanbanRuleVariable</Name>
			<Table>KanbanRuleVariable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumPlannedOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumProductQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumProductQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>KanbanRule</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>KanbanRuleEvent</Name>
			<Table>KanbanRuleEvent</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BOMLineReservationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelUnusedEventsOnSourceReqReg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DependentPeggedRequirementStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventoryReservationPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KanbanLineEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumEventQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdBOMLineEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesLineEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesLineReservationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceRequirementReservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StockReplenishmentEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>KanbanRuleVariable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS136350</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">KanbanRule</TitleDataSource>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupRuleType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>KanbanRule_KanbanType</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>KanbanType</DataField>
								<DataSource>KanbanRule</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>KanbanRule_ReplenishmentStrategy</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_KanbanRule_ReplenishmentStrategy</HelpText>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReplenishmentStrategy</DataField>
								<DataSource>KanbanRule</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<Caption>@SYS136348</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupSource</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>firstPlanPlanActivity</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS329945</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editPlanActivityNameFirst</DataMethod>
								<DataSource>KanbanFlow</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FirstActivity_PlanName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_FirstActivity_PlanName</HelpText>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>firstActivityPlanName</DataMethod>
								<DataSource>KanbanFlow</DataSource>
								<Label>@SYS131795</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>FirstActivity_Version</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>firstActivityVersion</DataMethod>
								<DataSource>KanbanFlow</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS304836</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupMultipleActivity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS329946</HelpText>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>lastPlanPlanActivity</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_lastPlanPlanActivity</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editPlanActivityNameLast</DataMethod>
								<DataSource>KanbanFlow</DataSource>
								<Label>@SYS152897</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LastActivity_PlanName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_LastActivity_PlanName</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>lastActivityPlanName</DataMethod>
								<DataSource>KanbanFlow</DataSource>
								<Label>@SYS131795</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>LastActivity_Version</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>lastActivityVersion</DataMethod>
								<DataSource>KanbanFlow</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS310065</Caption>
						<FrameOptionButton>Check</FrameOptionButton>
						<OptionValue>0</OptionValue>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupValidity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>LeanCoverageKanbanRule_ValidFrom</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>DateTime</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ValidFrom</DataField>
								<DataSource>LeanCoverageKanbanRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>LeanCoverageKanbanRule_ValidTo</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>DateTime</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ValidTo</DataField>
								<DataSource>LeanCoverageKanbanRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReplacedRule</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_ReplacedRule</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>replacingRuleId</DataMethod>
								<DataSource>KanbanRule</DataSource>
								<Label>@SYS136356</Label>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS132007</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupProductSelection</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ProductSelection_RuleCoverageType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RuleCoverageType</DataField>
								<DataSource>LeanCoverage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProductSelection_ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_ProductSelection_ItemId</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>LeanCoverage</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProductSelection_AllocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProductionControl:KanbanRuleDuplicate_ProductSelection_AllocationId</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AllocationId</DataField>
								<DataSource>LeanCoverage</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS328774</Caption>
						<DataSource>LeanCoverage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>groupDetailsProductDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>groupDetailsProductDimensions_configId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>configId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>groupDetailsProductDimensions_InventSizeId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSizeId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>groupDetailsProductDimensions_InventColorId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventColorId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>groupDetailsProductDimensions_InventStyleId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStyleId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>groupDetailsProductDimensions_InventVersionId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventVersionId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<DataGroup>ProductDimensions</DataGroup>
						<DataSource>InventDim</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>btnOK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS136353</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS5469</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>btnCancel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS136354</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS12483</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
