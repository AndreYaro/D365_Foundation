<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTransVendInvoice</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTransVendInvoice extends FormRun implements TaxIFormShowTax, IFormRefreshable, LedgerILedgerJournalEngineProvider, LedgerIJournalFormRefreshable, LedgerIJournalFormCache, LedgerIJournalCashDiscount, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    QueryBuildRange ledgerJournalTransRange;
    LedgerJournalEngine ledgerJournalEngine;

    LedgerJournalFormTrans journalFormTrans;
    LogisticsLocationRecId postalAddressLocation;

    DebCredProposal debCredProposal;
    DebCredProposal debCredProposalOld;
    LedgerJournalTable ledgerJournalTable;
    [FormObservable]
    TaxAmount correctedTaxAmountCur;
    boolean correctedTaxAmountCurEdited;

    LedgerJournalId journalNum;
    boolean cashDiscChanged;
    TransDate virtualCashDiscDate;
    VendCashDiscAmount virtualCashDiscAmount;

    ImageListAppl_LedgerJournal imageListAppl;

    LedgerJournalTransEntityManager ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.

    RecId currentMainAccountId;
    RecId currentOffsetMainAccountId;
    LedgerJournalACType priorAccountType;
    LedgerJournalACType priorOffsetAccountType;

    NumberSeqFormHandler numberSeqFormHandler;

    // <GCN>
    LedgerChineseVoucherEnabled_CN chineseVoucher_CN;
    // </GCN>
    #ISOCountryRegionCodes
    // <GSA>
    boolean zakatParameterEnabled;
    // </GSA>
    // <GEERU>
    boolean countryRegion_RU;
    // </GEERU>
    // <GIN>
    boolean countryRegion_IN;
    // </GIN>
    // <GEEPL>
    boolean countryRegion_PL;
    // </GEEPL>
    boolean countryRegion_MX;
    RecId currentRecordIdForCreate;
    HcmWorkerLookup hcmWorkerLookupActiveCurrentCompany;

    boolean bankLCChargeEnabled;
    BankLCImportNumberController bankLCImportNumberController;

    BankLCImportMarkupLookupController_SA bankLCImportMarkupLookupController;

    DueDate priorDueDate;
    boolean keepSalesPriceOnWrite;

    ReverseCharge_W reverseCharge;

    LedgerJournalTable_Customs_IT customs;
    boolean enableCustomDeclaration_IT;

    boolean enableProjectOperationsIntegrationFeature;
    private boolean isTaxIntegrationEnabled = Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Journal);

}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the event that fires when focus is given to the form.
    /// </summary>
    /// <param name="_active">
    /// true if active; otherwise, false.
    /// </param>
    public void activate(boolean _active)
    {
        super(_active);

        journalFormTrans.manageEditingModeForApprovedWFApproval();
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowAccept</Name>
				<Source><![CDATA[
    boolean allowAccept()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    boolean allowEdit()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        LedgerIJournalFormRefreshable callerForm = element.args().caller() as LedgerIJournalFormRefreshable;

        if (callerForm)
        {
            callerForm.refresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerRefresh</Name>
				<Source><![CDATA[
    void callerRefresh()
    {
        ledgerJournalEngine.clearCorrectedTaxAmount(ledgerJournalTrans);
        ledgerJournalTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose;

        try
        {
            // Signal that the close event is beginning.
            ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();

            canClose = super();

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
        }
        catch (Exception::UpdateConflict)
        {
            // This exception should not be handled by the generic handling logic below.

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::UpdateConflict;
        }
        catch
        {
            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::Error;
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        ledgerJournalEngine.close();
        ledgerJournalEngine.formMethodClosePre();
        journalFormTrans.formClosePre();
        element.bookRefresh(true);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFinancialTags</Name>
				<Source><![CDATA[
    private void initFinancialTags()
    {
        // In this form, an offset company could be different from a primary company and set FinTag configured while a primary company does not.
        // Thus, checking FinTag configuration over all comapanies determines FinTag usability in this form.
        if (FinTagConfiguration::isFinTagConfigurationSetInAtLeastOneCompany())
        {
            FinTagReferenceGroupControllerContract primaryContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_FinTag,
                fieldNum(LedgerJournalTrans, Company));

            FinTagReferenceGroupControllerContract offsetContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_OffsetFinTag,
                fieldNum(LedgerJournalTrans, OffsetCompany));

            FinTagReferenceGroupController::registerReferenceGroup(primaryContract);
            FinTagReferenceGroupController::registerReferenceGroup(offsetContract);
        }
        else
        {
            LedgerJournalTrans_FinTag.visible(false);
            LedgerJournalTrans_OffsetFinTag.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteDIOTAdditionalinfo_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To delete DIOTAddlInfoForNoVendorLedger_MX table buffer
    /// while modifying AccountType, OffsetAccountType TaxGroup/TaxItemGroup.
    /// </summary>
    /// <remarks>
    /// This method is called when LedgerJournalTrans data source fields AccountType, OffsetAccountType TaxGroup/TaxItemGroup modified methods.
    /// </remarks>
    public void deleteDIOTAdditionalinfo_MX()
    {
        if (diotAddlInfoForNoVendorLedger_MX.RecId != 0)
        {
            diotAddlInfoForNoVendorLedger_MX.delete();
            diotAddlInfoForNoVendorLedger_MX_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableBankLC_SA</Name>
				<Source><![CDATA[
    public void enableBankLC_SA()
    {
        bankLCChargeEnabled = BankLCImportChargeFeatureChecker_SA::construct().checkFeatureEnabled();

        if (bankLCChargeEnabled)
        {
            ledgerJournalTransBankLC_ds.allowEdit(true);
            bankLCGroup_SA.visible(true);

            bankLCImportNumberController = BankLCImportNumberController::construct(true);
            bankLCImportNumberController.parmBankLCImportStatus(BankLCImportStatusType::Confirmed);
            bankLCImportNumberController.parmReturnAsBankLC(false);

            bankLCImportMarkupLookupController = BankLCImportMarkupLookupController_SA::construct();
        }
        else
        {
            ledgerJournalTransBankLC_ds.allowEdit(false);
            bankLCGroup_SA.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables various buttons.
    /// </summary>
    public void enableButtonsActive()
    {
        boolean enabled = journalFormTrans.isJournalEnabled();

        // The following buttons aren't affected by workflow approvals.
        buttonCopyPeriodicJournal.enabled(enabled);

        if (journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            enabled = enabled && journalFormTrans.parmIsUIElementWFApprovalEnabled();
        }

        // The following buttons may be affected by workflow approvals.
        tradeBLWIChangeCode.enabled(enabled);

        // <GEERU>
        if (countryRegion_RU)
        {
            vatTaxAgentInvoice_RU.visible(ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                                          VendTable::find(ledgerJournalTrans.parmAccount()).vatTaxAgent_RU);
        }
        // </GEERU>

        // <GEEPL>
        if (countryRegion_PL)
        {
            this.enableFieldsActive_PL();
        }
        // </GEEU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDepreciationStartDate</Name>
				<Source><![CDATA[
    //
    // This method enables or disables the depreciation start date control.
    //
    void enableDepreciationStartDate()
    {
        AssetBook assetBook;

        assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);

        if (assetBook &&
            (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj) &&
            !assetBook.depreciationStarted() &&
            assetBook.DepreciationConvention == AssetDepreciationConvention::None)
        {
            depreciationStartDate.enabled(true);
        }
        else
        {
            depreciationStartDate.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableVendorType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Make editable/non-editable - the fields in the Additional info tab based on Venodor type selected by the user.
    /// </summary>
    /// <remarks>
    /// When it is ForeginVendor: Allow edit - Yes for the fields ForeignTaxRegistration, Nationality, DiotCountryCode and No for the fields RFC, CURP;
    /// Otherwise: Allow edit - No for the fields ForeignTaxRegistration, Nationality, DiotCountryCode and Yes for the fields RFC, CURP;
    /// </remarks>
    public void enableDisableVendorType_MX()
    {
        boolean enableFields = diotAddlInfoForNoVendorLedger_MX.VendorType != VendorType_MX::ForeignVendor;

        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Rfc)).allowEdit(enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Curp)).allowEdit(enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, ForeignTaxRegistration)).allowEdit(!enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, Nationality)).allowEdit(!enableFields);
        diotAddlInfoForNoVendorLedger_MX_ds.object(fieldNum(DIOTAddlInfoForNoVendorLedger_MX, DiotCountryCode)).allowEdit(!enableFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive_PL</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the editable property of various datasource fields for the form.
    /// </summary>
    void enableFieldsActive_PL()
    {
        ledgerJournalTrans_TaxBase_W.visible(! ledgerJournalTrans.vatPaymRefRecId_RU &&
                               (countryRegion_PL));
        ledgerJournalTrans_TaxBase_W.enabled(ledgerJournalTrans.TaxCode ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjSalesCurrencyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the project sales currency code can be edited.
    /// </summary>
    void enableProjSalesCurrencyId()
    {
        ProjId projId = ledgerJournalTrans.getProjectId();

        if (projId)
        {
            if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(projId).ProjInvoiceProjId))
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(false);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(true);
            }
            else
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(true);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableSubContractorGroup_SA</Name>
				<Source><![CDATA[
    public void enableSubContractorGroup_SA()
    {
        subcontractor_Subcontractor.enabled(true);
        subcontractor_ContractNum.enabled(true);

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
            && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
        {
            if (! VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
                && ! VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum).IsSubcontractor)
            {
                subcontractor_SubContractor.enabled(false);
                subcontractor_ContractNum.enabled(false);
            }
            else if (VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
                    && VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum).IsSubcontractor)
            {
                if (ledgerJournalTrans.LedgerDimension == ledgerJournalTrans.OffsetLedgerDimension)
                {
                    subcontractor_SubContractor.enabled(false);
                }
            }
        }
        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
            && VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
            && ! ledgerJournalTrans.OffsetLedgerDimension)
        {
            subcontractor_SubContractor.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableZakatGroups_SA</Name>
				<Source><![CDATA[
    public void enableZakatGroups_SA()
    {
        revenue.enabled(ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                        || ledgerJournalTrans.AccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.AccountType == LedgerJournalACType::Project
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project
                        || (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank
                        && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));

        subcontractor.enabled(ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger
                               || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                               || ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
                               || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend
                               || (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank
                               && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));

        subcontractor_Subcontractor.enabled(true);
        subcontractor_ContractNum.enabled(true);

        maintenanceExpense.enabled(ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger
                                    || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                                    || ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets
                                    || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets
                                    || (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank
                                    && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableZakatSalesProjectId_SA</Name>
				<Source><![CDATA[
    public void enableZakatSalesProjectId_SA()
    {
        ledgerJournalTransZakat_SA_ds.object(fieldNum(LedgerJournalTransZakat_SA, ProjId)).allowEdit(ledgerJournalTransZakat_SA.SalesType == SalesTypeZakat_SA::Projects);
        ledgerJournalTransZakat_SA_ds.object(fieldNum(LedgerJournalTransZakat_SA, SalesId)).allowEdit(ledgerJournalTransZakat_SA.SalesType == SalesTypeZakat_SA::Sales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowTax</Name>
				<Source><![CDATA[
    public Tax getShowTax()
    {
        return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowWithholdTax_IN</Name>
				<Source><![CDATA[
    public TaxWithholdJournal_IN getShowWithholdTax_IN()
    {
        return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleAdditionalInfoFields_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To handle the form controls by populating correct values based on Account/Offsetaccount type and Tax groups.
    /// </summary>
    /// <remarks>
    /// This method is called from pageActivated of [TabPage:AdditionalInfo_MX]
    /// </remarks>
    public void handleAdditionalInfoFields_MX()
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceMX00005, funcName());

        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
        isVendorType = DIOTAddlInfoForNoVendorLedger_MX::isVendType(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);
        otherTypeNotAllowed = DIOTAddlInfoForNoVendorLedger_MX::isOtherTypeNotAllowed(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);

        if (!isVendorType && (otherTypeNotAllowed || !isCommonTaxCodeMarked))
        {
            ledgerJournalTrans.OperationType_MX = VendorOperationType_MX::Blank;
        }

        if (isVendorType || otherTypeNotAllowed || !isCommonTaxCodeMarked)
        {
            element.resetAddInfoFields_MX();
        }

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
        {
            element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension));
        }
        else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
        {
            element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension));
        }

        identification.allowEdit(!isVendorType && !otherTypeNotAllowed && isCommonTaxCodeMarked);
        foreign.allowEdit(!isVendorType && !otherTypeNotAllowed && isCommonTaxCodeMarked);
        diotInformation.enabled(isVendorType || (!otherTypeNotAllowed && isCommonTaxCodeMarked));

        element.enableDisableVendorType_MX();
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleSecurity</Name>
				<Source><![CDATA[
    void handleSecurity(FormDataSource _fds, boolean _hasAccess)
    {
        if (_fds && !_fds.allowCheck() && !_hasAccess)
        {
            _fds.query().dataSourceNo(1).enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTableAccess</Name>
				<Source><![CDATA[
    boolean hasTableAccess(TableId _tableId, AccessType _neededAccessLevel = AccessType::View)
    {
        DictTable dictTable = new DictTable(_tableId);

        if (dictTable)
        {
            return dictTable.rights() >= _neededAccessLevel;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the basic initialization of the form.
    /// </summary>
    public void init()
    {
        // <GCN>
        boolean allow;
        // </GCN>
        #ISOCountryRegionCodes

        // <GSA>
        zakatParameterEnabled = LedgerParameters::find().IsZakatEnabled_SA;
        // </GSA>

        // <GCN>
        chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
        // </GCN>
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>
        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>
        // <GEEPL>
        countryRegion_PL = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);
        // </GEEPL>
        countryRegion_MX = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]);
        journalFormTrans = new LedgerJournalFormTrans(element);

        enableCustomDeclaration_IT = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]);

        enableProjectOperationsIntegrationFeature = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();

        super();

        LedgerJournalTrans_AccountNum.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_AccountNum1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        Group_AccountNum.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        LedgerJournalTrans_OffsetAccount.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        LedgerJournalTrans_OffsetAccount1.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        Group_OffsetAccount.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));

        // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
        ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, ledgerJournalTrans_Project_DS, tax1099BoxDetail_DS);

        journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
        journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate1);
        journalFormTrans.parmCtrlTriangulation(fieldTriangulation);
        journalFormTrans.parmCtrlExchRate(fieldExchRate);
        journalFormTrans.parmCtrlExchRateSecond(fieldExchRateSecond);
        journalFormTrans.parmCtrlReportingExchRate(reportingfieldExchRate);
        journalFormTrans.parmCtrlReportingExchRateSecond(reportingfieldExchRateSecond);
        journalFormTrans.parmCtrlSettlementButton(buttonSettlement);
        journalFormTrans.parmCtrlCourseButton(buttonCourse);
        journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
        journalFormTrans.parmCtrlApproveButton(buttonApprove);
        journalFormTrans.parmCtrlRejectButton(buttonReject);
        journalFormTrans.parmCtrlPostJournalButton(postJournal);
        journalFormTrans.parmCtrlPostJournalBatchButton(postJournalBatch);
        journalFormTrans.parmCtrlPostAndTransferJournalButton(ledgerJournalPostTransfer);
        journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
        journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
        journalFormTrans.parmCtrlDeleteTransactionsButton(buttonDeleteTransactions);
        journalFormTrans.parmCtrlSplitPostingButton(buttonSplitPosting);
        journalFormTrans.parmCtrlCreditInvoicing(buttonCustVendCreditInvoicing);
        journalFormTrans.parmCtrlFunctionMenuButton(buttonFunctions);
        journalFormTrans.parmCtrlAccrualButton(ledgerJournalTransAccrual);
        journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
        journalFormTrans.parmCtrlPeriodicJournalMenuButton(periodicJournal);
        journalFormTrans.parmCtrlSelectVoucherTemplateButton(selectVoucherTemplate);
        journalFormTrans.parmCtrlSaveVoucherTemplateButton(saveVoucherTemplate);
        journalFormTrans.parmCtrlOffsetAccountTypeGrid(ledgerJournalTrans_OffsetAccountType);
        journalFormTrans.parmCtrlOffsetAccountTypeTab(ledgerJournalTrans_OffsetAccountType1);
        journalFormTrans.parmCtrlOffsetAccountGrid(ledgerJournalTrans_OffsetAccount);
        journalFormTrans.parmCtrlOffsetAccountTab(ledgerJournalTrans_OffsetAccount1);
        journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
        journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
        journalFormTrans.parmCalculatedTaxAmount(taxAmountJournal1);
        journalFormTrans.parmActualTaxAmount(correctedTaxAmount);
        journalFormTrans.parmCtrlErrorExists(fieldError);
        journalFormTrans.parmCtrlMassTransactionReversalButton(TransactionReversalDialog);
        journalFormTrans.parmCtrlMassTransactionReversalFailuresButton(TransactionReversalFailures);

        // <GIN>
        if (TaxParameters::isVATEnable_IN())
        {
            journalFormTrans.parmCtrlDefermentSchedule_IN(defermentSchedule_IN);
        }
        // </GIN>

        journalFormTrans.formInitPost();

        this.initLedger();

        TaxVATNumTable::enableLookupVATNum(invoiceGroup_fieldvatNumJournal);

        imageListAppl = new ImageListAppl_LedgerJournal();
        fieldError.imageList(imageListAppl.imageList());

        cashDiscChanged = false;
        groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));

        if (! TaxParameters::find().CashDiscOnInvoice)
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CashDiscPercent)).allowEdit(false);
        }
        else
        {
            cashDiscTab.visible(false);
            virtualCashDiscDate1.visible(false);
        }

        // Disable the company accounts field on the general tab if Intercompany transactions are disabled
        if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            ledgerJournalTrans_Company.allowEdit(false);
        }

        // 1099 Tab should only be visible in the US
        tax1099Tab.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]));

        //<GIN>
        if (countryRegion_IN)
        {
            element.setTaxWithholdTransVisible_IN();
            element.setVisible_IN();
            element.setTaxWithholdVisible_IN();
            element.setWithTaxPayment_IN();
            if (TaxParameters::find().vat_in)
            {
                journalFormTrans.parmCtrlDefermentSchedule_IN(defermentSchedule_IN);
            }
        }
        //</GIN>

        // <GCN>
        if (chineseVoucher_CN)
        {
            allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually
                && ledgerJournalTable.VoucherAllocatedAtPosting == NoYes::No;
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
        }
        else if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN]))
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).visible(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerVoucherType_CN)).visible(false);
        }
        // </GCN>

        // <GSA>
        zakat_SA.visible(zakatParameterEnabled);
        // </GSA>

        hcmWorkerLookupActiveCurrentCompany = HcmWorkerLookup::newOnlyActiveWorkersWithinCompany();

        this.enableBankLC_SA();
        codes_Listcode.visible(IntrastatParameters::find().euSalesListTransferPurchases);
        // <GEERU>
        if (countryRegion_RU)
        {
            assetTab.columns(2);
        }
        // </GEERU>

        keepSalesPriceOnWrite = false;

        // <GTH>
        if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
        {
            this.updateDesignForAverageVAT();
        }
        // </GTH>

        if (enableCustomDeclaration_IT)
        {
            element.setDesignCustoms_IT();
        }

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            TaxDocumentLauncher.visible(true);
            LedgerJournalTrans_TaxCode.visible(false);
            LedgerJournalTrans_TaxGroup.visible(false);
            LedgerJournalTrans_TaxItemGroup.visible(false);
            TaxTransSource.visible(false);
            LedgerJournalTrans_TaxGroup1.visible(false);
            LedgerJournalTrans_TaxItemGroup2.visible(false);
        }
        // </GTE>

        reverseCharge = ReverseCharge_W::newParameters(ledgerJournalTrans, ledgerJournalTrans);

        overviewGrid.setFocus();

        Correction.visible(LedgerParameters::find().TransactionReversalCorrection);

        if (isTaxIntegrationEnabled)
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(true);
        }

        this.initFinancialTags();

        boolean isTaxIntegrationAccrueUseTaxEnabled = TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Journal);
        ledgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, AccrueSalesTaxType)).visible(isTaxIntegrationAccrueUseTaxEnabled);
        ledgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, VendorChargedSalesTax)).visible(isTaxIntegrationAccrueUseTaxEnabled);

        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetPostingProfile_RU)).visible(BankParameters::getEnablePettyCash());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdTransVisible_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set button TaxWithholdTrans_IN is visible when flighting is enable.
    /// </summary>
    private void setTaxWithholdTransVisible_IN()
    {
        TaxWithholdTrans_IN.visible(true);
        ButtonWithholdTax_IN.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntracomVATDueDate</Name>
				<Source><![CDATA[
    void initIntracomVATDueDate()
    {
        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, IntraComVATDueDate_W)).enabled(VendParameters::find().DocumentDateForIntracomVAT_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedger</Name>
				<Source><![CDATA[
    void initLedger()
    {
        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable = element.args().record();
            journalNum = ledgerJournalTable.JournalNum;

            LedgerJournalTrans_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
            LedgerJournalTrans_AccountNum1.parmJournalName(ledgerJournalTable.JournalName);
            Group_AccountNum.parmJournalName(ledgerJournalTable.JournalName);

            LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            Group_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);

            // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount1, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(Group_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
            }

            enableCustomDeclaration_IT = enableCustomDeclaration_IT && ledgerJournalTable.JournalType == LedgerJournalType::CustomsDeclaration_IT;
            if (enableCustomDeclaration_IT)
            {
                customs = ledgerJournalTable.ledgerJournalTable_Customs_IT();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromInvoicePool</Name>
				<Source><![CDATA[
    void insertFromInvoicePool(LedgerJournalTrans _ledgerJournalTrans, boolean _research = true)
    {
        LedgerJournalTrans newLedgerJournalTrans;
        LedgerJournalTrans_Project newLedgerJournalTrans_Project;
        Voucher voucher;
        // <GIN>
        LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExtensionINLocal;
        LedgerJournalTable newLedgerJournalTable;
        // </GIN>
        Tax1099BoxDetail origTax1099Detail;
        Tax1099BoxDetail destTax1099Detail;

        if (ledgerJournalTrans.ledgerJournalTable().Posted)
        {
            throw error("@SYS21497");
        }

        if (ledgerJournalTrans.Voucher && !ledgerJournalTrans.RecId)
        {
            ledgerJournalEngine.clearVoucher();
        }

        ttsbegin;

        voucher = new JournalVoucherNum(JournalTableData::newTable(ledgerJournalTable)).getNew(false);

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            //if there is an associated tax1099Detail record then copy it and associate the copy with the new record
            if (_ledgerJournalTrans.Tax1099RecId != 0)
            {
                //Grab the tax1099 detail that we want.
                select firstonly origTax1099Detail
                where origTax1099Detail.RecId == _ledgerJournalTrans.Tax1099RecId;

                //copy the originating tax1099 detail that we got above into a new detail that will be associated with the new record
                origTax1099Detail.copyTo(destTax1099Detail);
                //insert the detail, this gives us a new recId seperate from the original.
                destTax1099Detail.insert();
            }
        }

        newLedgerJournalTrans = _ledgerJournalTrans.data();
        // <GTH>
        newLedgerJournalTrans.SysExtensionSerializerMap::copyExtensionTableData(_ledgerJournalTrans);
        // </GTH>

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            // Replace the tax1099RecId with the copied record.
            newLedgerJournalTrans.Tax1099RecId = destTax1099Detail.RecId;
        }

        newLedgerJournalTrans.PoolRecId = _ledgerJournalTrans.RecId;
        newLedgerJournalTrans.JournalNum = ledgerJournalTable.JournalNum;
        newLedgerJournalTrans.Voucher = voucher;
        if (!_ledgerJournalTrans.TransDate)
        {
            newLedgerJournalTrans.TransDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }

        // If the Approval process for the invoice journal is automatically it should not be
        // overwritten/deleted due to a not approved record from vendor invoice pool exclude
        // posting details which is transferred to the invoice journal.
        if (!_ledgerJournalTrans.Approver)
        {
            newLedgerJournalTrans.Approver = HcmWorker::userId2Worker(curUserId());
        }

        if (!_ledgerJournalTrans.Approved)
        {
            newLedgerJournalTrans.Approved = NoYes::Yes;
        }

        if (_ledgerJournalTrans.isProjectTransaction())
        {
            newLedgerJournalTrans_Project = LedgerJournalTrans_Project::find(_ledgerJournalTrans.RecId).data();
        }

        ledgerJournalEngine.preWrite(newLedgerJournalTrans, newLedgerJournalTrans_Project);
        newLedgerJournalTrans.insert();

        // <GTE>
        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            TransitDocumentManager_IN::newManager().transit(_ledgerJournalTrans, newLedgerJournalTrans, TaxEngineLedgerJournalTransHeader::findByJourNumVoucher(newLedgerJournalTrans.JournalNum, newLedgerJournalTrans.Voucher));
        }
        // </GTE>

        // <GIN>
        if (countryRegion_IN)
        {
            // The code will be replaced with EF
            ledgerJournalTransTaxExtensionINLocal.TaxModelDocLineExtensionIN::initFromBaseTable(newLedgerJournalTrans);
            ledgerJournalTransTaxExtensionINLocal.insert();

            LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExt = newLedgerJournalTrans.ledgerJournalTransTaxExtensionIN();

            if (!(newLedgerJournalTrans.isFixedAssetsTransaction() || newLedgerJournalTrans.isProjectTransaction()))
            {
                newLedgerJournalTable = newLedgerJournalTrans.ledgerJournalTable();
                // Do not calculate taxes for fixed assets or project transactions, they will get calculated when the
                // LedgerJournalTrans_Asset and LedgerJournalTrans_Project records get inserted since those records are
                // required to successfully calculate taxes.

                if ((newLedgerJournalTrans.TaxGroup && newLedgerJournalTrans.TaxItemGroup) || newLedgerJournalTrans.TaxCode)
                {
                    // tax information is out of date so delete and recalculate taxes.
                    if (TaxUncommitted::existByDocumentAndInvoice(newLedgerJournalTable.TableId, newLedgerJournalTable.RecId, newLedgerJournalTrans.Voucher, newLedgerJournalTrans.Invoice))
                    {
                        TaxUncommitted::deleteForInvoice(newLedgerJournalTable.TableId, newLedgerJournalTable.RecId, newLedgerJournalTrans.Voucher, newLedgerJournalTrans.Invoice);
                    }

                    // don't calculate taxes if this is marked as posted. Also, records in the invoice pool don't
                    // get Taxes calculated since they have already been posted to TaxTrans.
                    // documents in the invoice pool are already posted and should not have taxes calculated.
                    if (!newLedgerJournalTable.Posted && !(newLedgerJournalTable.JournalType == LedgerJournalType::VendInvoicePool))
                    {
                        LedgerJournalTrans::getTaxInstance(newLedgerJournalTrans.JournalNum, newLedgerJournalTrans.Voucher, newLedgerJournalTrans.Invoice, true);
                    }
                }

                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    if (ledgerJournalTransTaxExt.tdsGroup || ledgerJournalTransTaxExt.tcsGroup)
                    {
                        if (TaxWithholdUncommitted_IN::existByDocumentId(newLedgerJournalTable.TableId, newLedgerJournalTable.RecId))
                        {
                            TaxWithholdUncommitted_IN::deleteForInvoice(newLedgerJournalTable.TableId, newLedgerJournalTable.RecId, newLedgerJournalTrans.Voucher, newLedgerJournalTrans.Invoice);
                        }

                        if (!newLedgerJournalTable.Posted)
                        {
                            LedgerJournalTrans_IN_Extension::getTaxWithholdInstance_IN(newLedgerJournalTrans.JournalNum, newLedgerJournalTrans.Voucher, newLedgerJournalTrans.Invoice, true);
                        }
                    }
                }
            }
        }
        // </GIN>

        // <GEEPL>
        if (countryRegion_PL)
        {
            TaxServiceTariff::insertTaxServiceTariffForNewParent(_ledgerJournalTrans.TableId, _ledgerJournalTrans.RecId, newLedgerJournalTrans.TableId, newLedgerJournalTrans.RecId);
        }
        // </GEEPL>

        if (newLedgerJournalTrans_Project.RecId)
        {
            newLedgerJournalTrans_Project.RefRecId = newLedgerJournalTrans.RecId;
            newLedgerJournalTrans_Project.insert();
        }
        ledgerJournalEngine.write(newLedgerJournalTrans);

        VendTransCashDisc::copyCashDisc(_ledgerJournalTrans.TableId, _ledgerJournalTrans.RecId,
                                        newLedgerJournalTrans.TableId, newLedgerJournalTrans.RecId);

        ttscommit;

        if (_research)
        {
            ledgerJournalTrans_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdditionalInfoToBeDeleted_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if Additional info has to be deleted.
    /// </summary>
    /// <returns>
    /// Returns true if Additional info has to be deleted based on
    /// Account/Offset account type and the common tax codes between the Sales tax/Item sales tax groups.
    /// </returns>
    /// <remarks>
    /// This method is called when LedgerJournalTrans data source write method, leaveRecord method and TaxGroup/TaxItemGroup modified methods.
    /// </remarks>
    public boolean isAdditionalInfoToBeDeleted_MX()
    {
        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
        isVendorType = DIOTAddlInfoForNoVendorLedger_MX::isVendType(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);
        otherTypeNotAllowed = DIOTAddlInfoForNoVendorLedger_MX::isOtherTypeNotAllowed(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);

        return (isVendorType || otherTypeNotAllowed || !isCommonTaxCodeMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddressLocation</Name>
				<Source><![CDATA[
    public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = ledgerJournalTrans.RemittanceLocation)
    {
        if (!prmisDefault(_postalAddressLocation))
        {
            postalAddressLocation = _postalAddressLocation;
        }

        return postalAddressLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAddlInfoFields_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To set all the fields in the Additional tab from Vendor table.
    /// </summary>
    /// <param name="_vendTable">
    /// VendTable buffer pointing to the correct vendor.
    /// </param>
    public void populateAddlInfoFields_MX(VendTable _vendTable)
    {
        diotAddlInfoForNoVendorLedger_MX.Rfc = _vendTable.Rfc_MX;
        diotAddlInfoForNoVendorLedger_MX.Curp = _vendTable.Curp_MX;
        diotAddlInfoForNoVendorLedger_MX.Name = _vendTable.name();
        diotAddlInfoForNoVendorLedger_MX.VendorType = _vendTable.VendorType_MX;
        diotAddlInfoForNoVendorLedger_MX.ForeignTaxRegistration = _vendTable.ForeignTaxRegistration_MX;
        diotAddlInfoForNoVendorLedger_MX.DiotCountryCode = _vendTable.DiotCountryCode_MX;
        diotAddlInfoForNoVendorLedger_MX.Nationality = _vendTable.Nationality_MX;
    }

]]></Source>
			</Method>
			<Method>
				<Name>partnerName_IT</Name>
				<Source><![CDATA[
    display PartnerName_IT partnerName_IT()
    {
        return customs.partnerName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshLedgerJournalTrans_IN</Name>
				<Source><![CDATA[
    public void refreshLedgerJournalTrans_IN()
    {
        ledgerJournalTrans_ds.reread();
        ledgerJournalTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    void research()
    {
        ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

        ledgerJournalTrans_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        element.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    public void clearCache(Voucher _voucher)
    {
        ledgerJournalEngine.clearTaxAmountCacheVoucher(_voucher, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAmountCreditDebitCustoms_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates amount from the customs declaration.
    /// </summary>
    public void updateAmountCreditDebitCustoms_IT()
    {
        
        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
        {
            ledgerJournalTrans.AmountCurCredit =
            ledgerJournalTrans_Customs_IT.GoodsValue    +
            ledgerJournalTrans_Customs_IT.customsPaymentAmount();

            LedgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, AmountCurCredit)).modified();
        }
        else
        {
            ledgerJournalTrans.AmountCurDebit =
            ledgerJournalTrans_Customs_IT.GoodsValue    +
            ledgerJournalTrans_Customs_IT.customsPaymentAmount();

            LedgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, AmountCurDebit)).modified();
        }

        element.updateCustomsCtrls_IT();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustomsCtrls_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the customs controls.
    /// </summary>
    public void updateCustomsCtrls_IT()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashDiscount</Name>
				<Source><![CDATA[
    public void updateCashDiscount(Voucher _voucher)
    {
        if (_voucher == ledgerJournalTrans.Voucher)
        {
            ledgerJournalEngine.updateCashDisc(ledgerJournalTrans);
        }
        else
        {
            LedgerJournalTrans journalTrans = LedgerJournalTrans::find(ledgerJournalTable.JournalNum, _voucher, false);
            ledgerJournalEngine.updateCashDisc(journalTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetAddInfoFields_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To clear all the fields in the Additional tab.
    /// </summary>
    public void resetAddInfoFields_MX()
    {
        diotAddlInfoForNoVendorLedger_MX.Rfc = '';
        diotAddlInfoForNoVendorLedger_MX.Curp = '';
        diotAddlInfoForNoVendorLedger_MX.Name = '';
        diotAddlInfoForNoVendorLedger_MX.VendorType = VendorType_MX::Blank;
        diotAddlInfoForNoVendorLedger_MX.ForeignTaxRegistration = '';
        diotAddlInfoForNoVendorLedger_MX.DiotCountryCode = '';
        diotAddlInfoForNoVendorLedger_MX.Nationality = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOperationType_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// To clear Operation type field when it is diabled.
    /// Enabling/disabling Operation type field depends on the selection of
    /// Account type, Offset account type, Tax group, Item tax group.
    /// </summary>
    /// <remarks>
    /// This method is called when any of the above mentioned fields are modified.
    /// </remarks>
    public void resetOperationType_MX()
    {
        boolean isCommonTaxCodeMarked;
        boolean isVendorType;
        boolean otherTypeNotAllowed;

        isCommonTaxCodeMarked = DIOTAdditionalInfoForNoVendor_MX::isCommonTaxCodeMarked(ledgerJournalTrans.TaxGroup, ledgerJournalTrans.TaxItemGroup);
        isVendorType = DIOTAddlInfoForNoVendorLedger_MX::isVendType(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);
        otherTypeNotAllowed = DIOTAddlInfoForNoVendorLedger_MX::isOtherTypeNotAllowed(ledgerJournalTrans.AccountType, ledgerJournalTrans.OffsetAccountType);

        if (!isVendorType && (otherTypeNotAllowed || !isCommonTaxCodeMarked))
        {
            ledgerJournalTrans.OperationType_MX = VendorOperationType_MX::Blank;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099GFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099GFields()
    {
        boolean canEdit = (Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box == Tax1099G::incomeTaxRefundsCreditsOffsets().tax1099Box) ;

        tax1099GFields.allowEdit(canEdit);

        canEdit = (Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box == Tax1099G::unemploymentCompensation().tax1099Box) ;

        tax1099G1Fields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099SFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099SFields()
    {
        boolean canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()));

        tax1099SFields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDebCredProposal</Name>
				<Source><![CDATA[
    void setDebCredProposal(boolean _init)
    {
        if (_init)
        {
            debCredProposal = DebCredProposal::None;
        }

        if (debCredProposal != debCredProposalOld)
        {
            switch (debCredProposal)
            {
                case DebCredProposal::Credit :
                    ledgerJournalTrans_AmountCurDebit.skip(true);
                    amountCurDebit.skip(true);
                    break;

                case DebCredProposal::Debit :
                    ledgerJournalTrans_AmountCurCredit.skip(true);
                    fieldExchRateSecond.skip(true);
                    break;

                case DebCredProposal::None :
                    ledgerJournalTrans_AmountCurCredit.skip(false);
                    fieldExchRateSecond.skip(false);
                    ledgerJournalTrans_AmountCurDebit.skip(false);
                    amountCurDebit.skip(false);
                    break;
            }
            debCredProposalOld = debCredProposal;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDesignCustoms_IT</Name>
				<Source><![CDATA[
    private void setDesignCustoms_IT()
    {
        // Tab
        customs_IT.visible(true);
        CashDiscTab.visible(false);
        ProjectTab.visible(false);
        AssetTab.visible(false);
        element.control(element.controlId(formControlStr(LedgerJournalTransVendInvoice, RemittanceTab))).visible(false);
        Tax1099Tab.visible(false);

        // Controls
        LedgerJournalTrans_Invoice.label(LedgerJournalTrans_Invoice1.label());
        LedgerJournalTrans_Invoice.helpText(LedgerJournalTrans_Invoice1.helpText());
        element.control(element.controlId(formControlStr(LedgerJournalTransVendInvoice, BudgetCheckResult))).visible(false);
        GroupCustoms_IT.visible(true);
        element.control(element.controlId(formControlStr(LedgerJournalTransVendInvoice, GroupCashDiscount))).visible(false);
        element.control(element.controlId(formControlStr(LedgerJournalTransVendInvoice, ForeignTrade))).visible(false);
        InvoiceGroup_Invoice.visible(false);

        // Buttons
        PeriodicJournal.visible(false);
        ButtonSplitPosting.visible(false);
        LedgerJournalTransAccrual.visible(false);
        element.control(element.controlId(formControlStr(LedgerJournalTransVendInvoice, BudgetCheckResultsInquiry))).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjAccountNum</Name>
				<Source><![CDATA[
    void setProjAccountNum()
    {
        group_AccountNum.visible(true);
        group_OffsetAccount.visible(false);

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
        {
            group_AccountNum.visible(true);
            group_OffsetAccount.visible(false);
        }

        if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
        {
            group_AccountNum.visible(false);
            group_OffsetAccount.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStoppedReleaseFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the release date and comment fields.
    /// </summary>
    void setStoppedReleaseFields()
    {
        if (ledgerJournalTrans.Approved == NoYes::No && !ledgerJournalTable.Posted)
        {
            ledgerJournalTrans.InvoiceReleaseDate = utcDateTimeNull();
            approve_invoiceReleaseDate.enabled(false);
            ledgerJournalTrans.ReleaseDateComment = "";
            approve_ReleaseDateComment.enabled(false);
        }
        else
        {
            approve_invoiceReleaseDate.enabled(true);
            approve_releaseDateComment.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdEnabled_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdEnabled_IN()
    {
        TaxWithholdParameters_IN taxWithholdParametersLoc = TaxWithholdParameters_IN::find();

        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).enabled(!ledgerJournalTransTaxExtensionIN.tcsGroup &&
                                                                                         taxWithholdParametersLoc.tdsActivate);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).enabled(!ledgerJournalTransTaxExtensionIN.tdsGroup &&
                                                                                         taxWithholdParametersLoc.tcsActivate);
        boolean taxWithholdEnabled = (ledgerJournalTransTaxExtensionIN.tdsGroup || ledgerJournalTransTaxExtensionIN.tcsGroup) &&
            (taxWithholdParametersLoc.tdsActivate || taxWithholdParametersLoc.tcsActivate);

        TaxWithholdTrans_IN.enabled(taxWithholdEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN taxWithholdParameters;

        taxWithholdParameters = TaxWithholdParameters_IN::find();
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).visible(taxWithholdParameters.tdsInvoice);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).visible(taxWithholdParameters.tcsInvoice);
        withholdingTax_IN.visible(taxWithholdParameters.tdsInvoice || taxWithholdParameters.tcsInvoice);
        boolean taxWithholdVisible = taxWithholdParameters.tdsInvoice || taxWithholdParameters.tcsInvoice;

        TaxWithholdTrans_IN.visible(taxWithholdVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        boolean isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                            ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

        projectTab.visible(isProject);

        boolean useReportingCurrency = Ledger::reportingCurrency() != '';
        totalsGroupTabularReportingCurrency.visible(useReportingCurrency);
        accountingCurrencytotalHeaderCaption.visible(useReportingCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    private void setVisible_IN()
    {
        TaxParameters taxParametersLoc = TaxParameters::find();
        boolean isTaxParametersMarked = TaxParameters::checkTaxParameters_IN();

        defermentSchedule_IN.visible(taxParametersLoc.vat_in);

        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, MaximumRetailPrice)).visible(isTaxParametersMarked);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, AssessableValueTransactionCurrency)).visible(isTaxParametersMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        int ret;

        if (_taskId == #taskNew)
        {
            currentRecordIdForCreate = ledgerJournalTrans.RecId;
        }
        else if (_taskId == #taskRefresh)
        {
            // If the journal lines were modified through an integration such as the Excel add-in, the ledgerjournalengine journal balances
            // need to be recalculated to reflect the updated balance on the form
            if (ledgerJournalEngine)
            {
                ledgerJournalEngine.newJournalActive(ledgerJournalEngine.ledgerJournalTable(), true);
            }
        }

        ret = super(_taskId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignForAverageVAT</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Changes the labels when Average VAT feature is active.
    /// </summary>
    private void updateDesignForAverageVAT()
    {
        // Tax invoice number
        documentNum.label("@SYS4082540");
        // Enter the identification number of the tax invoice received from the vendor.
        documentNum.helpText("@SYS4082955");
        // Tax invoice date
        documentDate.label("@SYS4082542");
        documentDateGrid.label("@SYS4082542");
        // Select the date of the vendor tax invoice.
        documentDate.helpText("@SYS4082958");
        documentDateGrid.helpText("@SYS4082958");
        // Invoice number
        ledgerJournalTrans_Invoice.label("@SYS4726");
        invoiceGroup_Invoice.label("@SYS4726");
        invoice.label("@SYS4726");

        invoice.visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceReceiptDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        journalFormTrans.initializeOpenExcelTemplate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWithTaxPayment_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the with tax payment field visible and editable.
    /// </summary>
    private void setWithTaxPayment_IN()
    {
        CustVendTable custVendTable = LedgerJournalTrans.findCustVendTable();
        TaxGSTEPZCodeHelper epzHelper = TaxGSTEPZCodeHelper::construct(custVendTable);
        WithIGSTPayment.visible(epzHelper.isEPZCodeNotNone());
        WithIGSTPayment.allowEdit(epzHelper.isSEZ());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCashDiscountAmount</Name>
				<Source><![CDATA[
    private boolean validateCashDiscountAmount(DiscAmount _cashDiscount, LedgerJournalTrans _ledgerJournalTrans)
    {
        boolean isValid = true;
        AmountCur transactionAmount, totalAmountExclSalesTax;
        TaxAmountJournal taxAmountLoc = any2Real(correctedTaxAmount.valueStr());

        transactionAmount = _ledgerJournalTrans.amount();

        if ((_cashDiscount > 0 && transactionAmount < 0) ||
             (_cashDiscount < 0 && transactionAmount > 0))
        {
            isValid = checkFailed("@SYS68141");
        }

        if (ledgerJournalTable.LedgerJournalInclTax)
        {
            totalAmountExclSalesTax = abs(transactionAmount) - taxAmountLoc;
            if (abs(_cashDiscount) > totalAmountExclSalesTax)
            {
                isValid = (transactionAmount < 0) ? checkFailed(strFmt("@AccountsPayable:CashDiscountValidation", -totalAmountExclSalesTax, 0)) : checkFailed(strFmt("@AccountsPayable:CashDiscountValidation", 0, totalAmountExclSalesTax));
            }
        }
        else
        {
            if (abs(_cashDiscount) > abs(transactionAmount))
            {
                isValid = (transactionAmount < 0) ? checkFailed(strFmt("@AccountsPayable:CashDiscountValidation", transactionAmount, 0)) : checkFailed(strFmt("@AccountsPayable:CashDiscountValidation", 0, transactionAmount));
            }
        }
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorChargedSalesTaxControl</Name>
				<Source><![CDATA[
    protected void updateVendorChargedSalesTaxControl()
    {
        boolean shouldVendorChargedSalesTaxVisible = TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Journal)
                                                        && (ledgerJournalTrans.isVendLine());
        boolean shouldVendorChargedSalesTaxEditable = ledgerJournalTrans.isTaxIntegrationAccrueUseTaxEnabled();
        ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).visible(shouldVendorChargedSalesTaxVisible);
        ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).enabled(shouldVendorChargedSalesTaxEditable);

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAccrueSalesTaxTypeControl</Name>
				<Source><![CDATA[
    protected void updateAccrueSalesTaxTypeControl()
    {
        boolean shouldAccruedSalesTaxTypeVisiable = TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Journal)
                                                        && (ledgerJournalTrans.isVendLine());
        ledgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, AccrueSalesTaxType)).visible(shouldAccruedSalesTaxTypeVisiable);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>checkCorrectedInvoice_RU</Name>
						<Source><![CDATA[
        void checkCorrectedInvoice_RU()
        {
            RefRecId refInvoice;
            VendInvoiceJour correctedInvoiceJour;
            VendInvoiceJour correctingInvoiceJour;
            VendInvoiceJourCorrLink_RU corrLink;

            if (ledgerJournalTrans.CorrectedInvoiceId_RU && ledgerJournalTrans.CorrectedInvoiceDate_RU)
            {
                correctedInvoiceJour = VendInvoiceJour::findFromVendTrans(ledgerJournalTrans.CorrectedInvoiceId_RU,
                                                                          ledgerJournalTrans.CorrectedInvoiceDate_RU,
                                                                          ledgerJournalTrans.parmAccount());
                if (! correctedInvoiceJour || correctedInvoiceJour.PurchId)
                {
                    ledgerJournalTrans.CorrectedInvoiceId_RU = '';
                    ledgerJournalTrans.CorrectedInvoiceDate_RU = dateNull();
                }
                else
                {
                    refInvoice = correctedInvoiceJour.refOriginalInvoiceRecId_RU();
                    if (refInvoice)
                    {
                        select firstonly correctedInvoiceJour
                        exists join corrLink
                            where corrLink.JourRecId == correctedInvoiceJour.RecId &&
                                  corrLink.CorrJourRecId == refInvoice
                        notexists join correctingInvoiceJour
                            where correctingInvoiceJour.CorrectedInvoiceId_RU == correctedInvoiceJour.InvoiceId &&
                                  correctingInvoiceJour.CorrectedInvoiceDate_RU == correctedInvoiceJour.InvoiceDate;

                        ledgerJournalTrans.CorrectedInvoiceId_RU = correctedInvoiceJour.InvoiceId;
                        ledgerJournalTrans.CorrectedInvoiceDate_RU = correctedInvoiceJour.InvoiceDate;
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExt_IN</Name>
						<Source><![CDATA[
        public void insertIntoLedgerJournalTransTaxExt_IN()
        {
            ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (ledgerJournalTransTaxExtensionIN_ds.validateWrite())
            {
                ledgerJournalTransTaxExtensionIN_ds.write();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExtension</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts <c>LedgerJournalTransTaxExtension</c> record while it is calidate.
        /// </summary>
        public void insertIntoLedgerJournalTransTaxExtension()
        {
            LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (LedgerJournalTransTaxExtension.validateWrite())
            {
                LedgerJournalTransTaxExtension.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshBudgetControls</Name>
						<Source><![CDATA[
        public void refreshBudgetControls()
        {
            if (budgetCheckResult.visible())
            {
                ledgerJournalEngine.resetBudgetCheckResultsCache();

                budgetCheckResult.update();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (!super())
            {
                // The LedgerJournalTrans' delete method requires an exception to be thrown
                // so that the transaction is aborted.
                throw Exception::Error;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid;
            LedgerJournalACType ledgerJournalACType;
            LedgerJournalACType offsetACType;
            ReasonRefRecID reasonRef = ledgerJournalTrans.ReasonRefRecID;
            boolean useOtherAccount;
            ReasonCode reasonCode;

            isValid = super();

            reasonCode = ReasonTableRef::find(reasonRef).Reason;

            ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();

            offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,OffsetAccountType)).getValue();

            useOtherAccount = ledgerJournalTrans.parmOffsetLedgerDimension() ? true : false;

            if (isValid && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
            {
                isValid = false;
            }

            if (!reasonCode && isValid && ((offsetACType == LedgerJournalACType::FixedAssets &&
                    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetLedgerDimension)).getValue()!=0) ||
                    (ledgerJournalACType == LedgerJournalACType::FixedAssets &&
                    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).getValue()!=0)))
            {
                if (AssetParameters::transTypeRequiresValidation(ledgerJournalTrans_Asset_ds.object(fieldNum(LedgerJournalTrans_Asset,TransType)).getValue()))
                {
                    // The Reason code required.
                    isValid = checkFailed(strFmt("@SYS110217", "@SYS111246"));
                }
            }

            if (isValid && reasonRef && reasonCode)
            {
                //Check that the reason code is valid for the main account type
                if (ReasonFormTable::checkReasonCodeForAccountType(reasonRef,ledgerJournalACType))
                {
                    //If a offset account is specified check that the reason code is valid for the offset account type
                    if (useOtherAccount && !ReasonFormTable::checkReasonCodeForAccountType(reasonRef,offsetACType))
                    {
                        // The Reason code is not active for account type
                        isValid = checkFailed("@SYS115522");
                    }
                }
                else
                {
                    // The Reason code is not active for account type
                    isValid = checkFailed("@SYS115522");
                }
            }

            // <GEERU>
            if (countryRegion_RU && isValid)
            {
                isValid = CustVendInvoiceJour::checkCorrectionParameters_RU(ledgerJournalTrans.CorrectedInvoiceId_RU,
                                                                            ledgerJournalTrans.CorrectedInvoiceDate_RU,
                                                                            ledgerJournalTrans.Correct_RU);
            }
            // </GEERU>

            // <GCN>
            if (isValid
                && chineseVoucher_CN
                && !ledgerJournalTable.VoucherAllocatedAtPosting
                && !ledgerJournalTrans.Voucher_CN)
            {
                // Voucher number must be filled in
                isValid = checkFailed(strFmt("@SYS26332", "@SYS5732"));
            }
            // </GCN>

            // Validation for Opertaion type and All additional info
            if (isValid && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
            {
                isValid = ledgerJournalTrans.checkOpertaionType_MX(LedgerJournalTable::find(ledgerJournalTrans.JournalNum).JournalType);
                if (ledgerJournalTrans.RecId != 0)
                {
                    diotAddlInfoForNoVendorLedger_MX_ds.validateWrite();
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            // <GIN>
            if (ledgerJournalTrans.RecId != 0)
            {
                if (TaxParameters::checkTaxParameters_IN())
                {
                    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans, false);
                }
                // </GIN>
                super();

                if (enableCustomDeclaration_IT)
                {
                    LedgerJournalTrans_Customs_IT.data(LedgerJournalTrans_Customs_IT::findByLedgerJournalTrans(ledgerJournalTrans.RecId));
                    LedgerJournalTrans_Customs_IT_ds.reread();
                    LedgerJournalTrans_Customs_IT_ds.refresh();
                }

                // <GIN>
            }
            // </GIN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>exchRateTxt</Name>
						<Source><![CDATA[
        display ExchRateSecondTxt exchRateTxt()
        {
            return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>correctedTaxAmount</Name>
						<Source><![CDATA[
        edit TaxAmountJournal correctedTaxAmount(
            boolean _set,
            LedgerJournalTrans _ledgerJournalTrans,
            TaxAmountCur _taxAmountCur)
        {
            TaxAmountCur taxAmountCur = _taxAmountCur;

            if (_ledgerJournalTrans.RecId && !ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // This is not a new record and it's not in the LedgerJournalTrans entity's write event (LedgerJournalTrans_DS.write).

                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans);
                }
                else
                {
                    taxAmountCur = ledgerJournalEngine.correctedTaxAmount(_ledgerJournalTrans);
                }
            }
            else
            {
                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans);
                }
                else
                {
                    if (correctedTaxAmountCurEdited)
                    {
                        // get the corrected tax amount from LJE because that is the only place an edited amount for a new LJT record exists
                        taxAmountCur = ledgerJournalEngine.getCorrectedTaxAmountCurrentLine();
                    }
                    else if (ledgerJournalTrans.RecId == 0)
                    {
                        // the corrected tax amount is the same as the calculated tax amount for a new LJT record
                        taxAmountCur = ledgerJournalTrans_ds.taxAmountJournal(_ledgerJournalTrans);
                    }
                    else
                    {
                        taxAmountCur = correctedTaxAmountCur;
                    }
                }
            }                                        
            correctedTaxAmountCur = taxAmountCur;
            if (_set)
            {
                correctedTaxAmountCurEdited = true;
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, 0, false, true);
            }

            return taxAmountCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>totalAmountSingleLine</Name>
						<Source><![CDATA[
        display Amount totalAmountSingleLine(LedgerJournalTrans _ledgerJournalTrans)
        {
            TaxAmountCur signedActualTax;
            Amount totalAmount, taxAmount, transactionAmount;
            transactionAmount = _ledgerJournalTrans.amount();

            if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
            {
                TransTaxInformation transTaxInformationLoc = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(_ledgerJournalTrans);
                if (transTaxInformationLoc && !transTaxInformationLoc.InclTax)
                {
                    ITaxDocument taxDocument = TaxBusinessService::calculateTax(TaxableDocumentObject::construct(TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(_ledgerJournalTrans)));

                    if (taxDocument)
                    {
                        ITaxDocumentLine taxDocumentLine = taxDocument.findLineBySource(_ledgerJournalTrans.TableId, _ledgerJournalTrans.RecId);

                        if (taxDocumentLine)
                        {
                            taxAmount = abs(taxDocumentLine.getLineTax().amountTransactionCurrency());
                        }
                    }
                }
            }
            else if (!ledgerJournalTable.LedgerJournalInclTax)
            {
                if (_ledgerJournalTrans.TaxCode)
                {
                    return transactionAmount;
                }

                LedgerJournalEngine ledgerJournalEngineVendInvoice = LedgerJournalEngine::construct(ledgerJournalTable.JournalType);
                ledgerJournalEngineVendInvoice.ledgerJournalTable(ledgerJournalTable);
                taxAmount = ledgerJournalEngineVendInvoice.correctedTaxAmount(_ledgerJournalTrans);

                if (_ledgerJournalTrans.TaxGroup
                    && _ledgerJournalTrans.TaxItemGroup
                    && _ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    signedActualTax = ledgerJournalEngineVendInvoice.parmActualTax();
                    if ((transactionAmount > 0 && signedActualTax > 0) || (transactionAmount < 0 && signedActualTax < 0))
                    {
                        taxAmount = -taxAmount;
                    }
                }
            }

            if (transactionAmount > 0)
            {
                totalAmount = transactionAmount + taxAmount;
            }
            else
            {
                totalAmount = transactionAmount - taxAmount;
            }

            return totalAmount;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            if (ledgerJournalEngine.numberSeqFormHandlerJournal())
            {
                ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
            }
            super();
            ledgerJournalEngine.formMethodDataSourceCreatePost();
            ledgerJournalEngine.initValue(ledgerJournalTrans);
            correctedTaxAmountCur = 0;

            if (enableCustomDeclaration_IT)
            {
                this.initValueCustoms_IT();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
        /// </summary>
        /// <remarks>
        /// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c>, <c>LedgerJournalTrans_Asset</c> and <c>LedgerJournalTrans_Project</c>.
        /// </remarks>
        public void write()
        {
            boolean isNewRecord = !ledgerJournalTrans.RecId; // Flag that indicates whether or not this is a new record. Used for clean-up purposes later.
            LedgerJournalTrans origLedgerJournalTrans = ledgerJournalTrans.orig();

            // <GEEPL>
            RefRecId serviceTariffNumber;
            // </GEEPL>

            //sets the release date comment blank if the release date is blank
            if (ledgerJournalTrans.InvoiceReleaseDate == utcDateTimeNull())
            {
                ledgerJournalTrans.ReleaseDateComment = "";
            }

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // The kernel calls leaveRecord during the delete event which will cause this method to
                // be called if the user had made changes. This causes issues and must be special cased
                // until the behavior is changed.
                return;
            }

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // The entity is already being written. The extra call to write is unnecessary.
                return;
            }

            reverseCharge.lineDSPreWrite();

            try
            {
                ttsbegin;

                // Signal the start of the write event.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.formMethodDataSourceWritePre();
                ledgerJournalEngine.vatData_updateVoucher(ledgerJournalTrans);

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                // <GEEPL>
                serviceTariffNumber = taxServiceTariff.ServiceTariffNumber;
                // </GEEPL>

                // If super() is called directly, the client currently refreshes all of the linked datasources,
                // which causes the LedgerJournalTrans_Project datasource to be corrupted. The result is the
                // changes to the LedgerJournalTrans_Project table are not saved.
                // super(); // the next line replaces this one
                this.ledgerJournalTransWrite();

                ledgerJournalEngine.vatData_updateVoucher_NonPL(ledgerJournalTrans, origLedgerJournalTrans);

                // <GEEPL>
                // The service tariff relationship is lost during the super() call
                // from write since it is on a different data source. So, copy
                // the original value back in to ensure saving is done correctly.
                if (serviceTariffNumber && countryRegion_PL)
                {
                    taxServiceTariff.ServiceTariffNumber = serviceTariffNumber;
                    taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                    taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                }
                // </GEEPL>

                // <GCN>
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    ledgerJournalTrans.reread();
                }
                // </GCN>

                if (ledgerJournalTrans.isFixedAssetsTransaction())
                {
                    // Synchronize, validate and write the fixed assets sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
                }
                else
                {
                    // If this is not a fixed assets transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a fixed assets transaction.
                    ledgerJournalTrans_Asset.RecId = 0;
                }

                if (ledgerJournalTrans.isProjectTransaction())
                {
                    // Synchronize, validate and write the project sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Project();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteProjectSibling(keepSalesPriceOnWrite);
                }
                else
                {
                    // If this is not a project transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a project transaction.
                    ledgerJournalTrans_Project.RecId = 0;
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    if (ledgerJournalTrans.isTax1099DetailTransaction())
                    {
                        // Synchronize, validate and write the Tax1099Detail sibling record. This call will throw
                        // an exception if validation fails. A snapshot of the current buffer is taken to support
                        // in-memory rollback of the buffer in the case the transaction is aborted.
                        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfTax1099Detail();
                        ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWrite1099Sibling();
                    }
                    else
                    {
                        // If this is not a 1099 transaction, and it had been, the super() call
                        // above should have deleted the sibling record in the database. Because of this,
                        // the RecId of the buffer needs to be cleared out so that it will be inserted if
                        // it gets changed back to being a 1099 transaction.
                        tax1099BoxDetail.RecId = 0;
                    }
                }

                // -----------------------------------------------------------------------------------

                // Correct the tax amount on new records if a value has been specified
                if (isNewRecord && correctedTaxAmountCurEdited)
                {
                    ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans, correctedTaxAmountCur, true, false);
                }

                correctedTaxAmountCurEdited = false;

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset, cashDiscChanged);
                }

                if (enableCustomDeclaration_IT && !ledgerJournalTrans_Customs_IT.LedgerJournalTrans)
                {
                    ledgerJournalTrans_Customs_IT.LedgerJournalTrans = ledgerJournalTrans.RecId;
                    ledgerJournalTrans_Customs_IT_ds.write();
                }

                ledgerJournalEngine.write(ledgerJournalTrans, cashDiscChanged);

                TradeBLWIJournalPurposeCodes::createRecord(TradeBLWICustVend::Vendor, ledgerJournalTrans.RecId, ledgerJournalTrans.parmAccount(), TradeBLWITypeOfForm::LedgerJournalTrans);

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();
                // <GSA>
                if (zakatParameterEnabled)
                {
                    ledgerJournalTransZakat_SA.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }
                // </GSA>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    diotAddlInfoForNoVendorLedger_MX.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }

                if (ledgerJournalTransBankLC.TransType != BankLCLedgerJournalTransType::Blank)
                {
                    ledgerJournalTransBankLC.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }

                // <GTH>
                if (ledgerJournalTransExtensionTH_ds.isNeeded())
                {
                    // Get the latest record if anything inserted or updated before.
                    LedgerJournalTransExtensionTH_ds.research();

                    if (ledgerJournalTransExtensionTH.LedgerJournalTrans == 0)
                    {
                        ledgerJournalTransExtensionTH.LedgerJournalTrans = ledgerJournalTrans.RecId;
                        if (ledgerJournalTransExtensionTH_ds.validateWrite())
                        {
                            ledgerJournalTransExtensionTH_ds.write();
                        }
                    }
                }
                // </GTH>

                if (isTaxIntegrationEnabled)
                {
                    LedgerJournalTrans_ds.reread();
                    LedgerJournalTrans_ds.refresh();
                    LedgerJournalTransTaxExtension.save(LedgerJournalTrans);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }

                if (vendInvoiceIntrastat.IntrastatCommodity)
                {
                    vendInvoiceIntrastat_ds.write();
                }

                if (countryRegion_MX)
                {
                    LedgerJournalTrans_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }

                ttscommit;

                reverseCharge.lineDSPostWrite();

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    this.refresh();
                }
                // </GIN>

                // Refresh the budget controls after processing occurs on ttscommit
                this.refreshBudgetControls();

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.
                ledgerJournalEngine.formMethodDataSourceCreatePost();

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();

                ledgerJournalEngine.forceNewVoucher(ledgerJournalTrans.Voucher);

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>ledgerJournalTransWrite</Name>
						<Source><![CDATA[
        void ledgerJournalTransWrite()
        {
            if (reverseCharge.getRuleApplyCon())
            {
                using (ReverseChargeApplyContext reverseChargeApplyContext = new ReverseChargeApplyContext())
                {
                    reverseChargeApplyContext.reverseChargeApplyContainer = reverseCharge.getRuleApplyCon();
                    ledgerJournalTrans.write();
                }
            }
            else
            {
                ledgerJournalTrans.write();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            super();
            if (ledgerJournalTable.JournalNum != journalNum)
            {
                // If the stored journalNum has become out of sync with the reference
                // to ledgerJournalTable, then we need to rerun initLedger. This
                // will occur when the user has switched journals on the parent form.
                element.initLedger();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalTransRange = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
            ledgerJournalTransRange.value(strFmt('%1', 0));

            ledgerJournalEngine = LedgerJournalEngine::construct(LedgerJournalType::VendInvoice, element);
            journalFormTrans.datasourceInitPost(ledgerJournalTrans);

            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));

            TransTaxInformation.visible(TaxIntegrationUtils::isTaxInformationEnabled());
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            LedgerJournalTrans ledgerJournalTrans_Orig;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                // Signal that the entity delete event has started.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans);
                ledgerJournalTrans_Orig = ledgerJournalTrans.data();

                // <GIN>
                if(AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                {
                    ledgerJournalEngine.parmNewAccountNum_IN("");
                    ledgerJournalEngine.parmPrevAccountNum_IN("");
                }
                // </GIN>

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                if (!ledgerJournalTrans_Asset_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                if (!ledgerJournalTrans_Project_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
                super();
                // -----------------------------------------------------------------------------------

                ledgerJournalEngine.delete(ledgerJournalTrans_Orig);

                if (ledgerJournalTrans)
                {
                    element.setDebCredProposal(true);
                }

                virtualCashDiscAmount = 0;
                virtualCashDiscDate = dateNull();

                // Signal that the entity delete event has finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();

                ttscommit;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();

                // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            // Ensure the record is written before any pre creation methods are called
            // We explictly call leaveRecord to account for scenarios where New is clicked or Ctrl-N is hit on an unsaved record
            // In manual voucher entry scenarios the preCreate method clears form values if the record is not saved
            // An errror is thrown in the line below journalFormTrans.dataSourceCreatePre() if auto assigning of voucher number
            this.leaveRecord();

            // <GIN>
            if(AssetParameters::isDepreciationIncomeTaxActEnable_IN())
            {
                ledgerJournalEngine.parmNewAccountNum_IN("");
                ledgerJournalEngine.parmPrevAccountNum_IN("");
            }
            // </GIN>

            try
            {
                if (currentRecordIdForCreate != 0)
                {
                    element.args().lookupRecord(LedgerJournalTrans::findRecId(currentRecordIdForCreate, false));
                    ledgerJournalTrans_ds.research(false);
                }

                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();
                journalFormTrans.datasourceCreatePre();

                element.setDebCredProposal(true);
                ledgerJournalEngine.preCreate(ledgerJournalTrans);
                super(append);

                virtualCashDiscAmount = 0;
                virtualCashDiscDate = dateNull();
                cashDiscChanged = false;
                ledgerJournalTrans_ds.refresh();

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
                keepSalesPriceOnWrite = false;
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below.

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the event that is raised each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()
        {
            // <GIN>
            TransTaxInformation transTaxInformationLocal;
            // </GIN>

            if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
            {
                LedgerJournalTransTaxExtension taxExtension = ledgerJournalTrans.ledgerJournalTransTaxExtension();
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(taxExtension.OverrideSalesTax == NoYes::Yes);
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(taxExtension.OverrideSalesTax == NoYes::Yes);
            }

            int ret = super();
            if (ret)
            {
                ledgerJournalEngine.active(ledgerJournalTrans);
                priorAccountType = ledgerJournalTrans.AccountType;
                priorOffsetAccountType = ledgerJournalTrans.OffsetAccountType;

                if (ledgerJournalTrans.CashDiscCode)
                {
                    [virtualCashDiscDate, virtualCashDiscAmount] =
                        ledgerJournalEngine.custVendCashDiscCache(false, ledgerJournalTrans);
                    ledgerJournalTrans_ds.refresh();
                }

                journalFormTrans.datasourceActivePost();

                element.setVisible();
                element.setProjAccountNum();
                // <GEECZ>
                element.initIntracomVATDueDate();
                // </GEECZ>
                element.enableProjSalesCurrencyId();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                }

                // <GEERU>
                if (countryRegion_RU)
                {
                    ledgerJournalTrans_ds.allowEditCorrectedInvoiceId_RU();
                }
                // </GEERU>

                if (enableCustomDeclaration_IT && customs.CustomsDebt == CustomsDebt_IT::Shipper)
                {
                    buttonSettlement.enabled(false);
                }
            }

            // call to the method to set the Invoice Release Date and Release Comment according to the Approved checkbox
            element.setStoppedReleaseFields();

            LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            Group_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
            LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
            Group_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);

            LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            Group_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
            LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            Group_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

            LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);
            Group_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
            LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
            Group_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
            {
                currentMainAccountId = LedgerJournalTrans_AccountNum.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));
            }
            else
            {
                currentMainAccountId = 0;
            }

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                currentOffsetMainAccountId = LedgerJournalTrans_OffsetAccount.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));
            }
            else
            {
                currentOffsetMainAccountId = 0;
            }

            // Lock the main account segment if "Fixed offset account" is selected in Journal Names
            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount1, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(Group_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
            }

            codes_listcode.enabled(ledgerJournalTrans.listCodeAllowed());

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                transTaxInformationLocal = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(ledgerJournalTrans);
                if (ledgerJournalEngine.posted() &&
                    ledgerJournalTrans.taxAmountJournal() > 0 &&
                    transTaxInformationLocal.VATGoodsType == VATGoodsType_IN::CapitalGoods &&
                   ((ledgerJournalTrans.AccountType == LedgerJournalACType::Vend) ||
                   (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)))
                {
                    defermentSchedule_IN.enabled(true);
                }
                else
                {
                    defermentSchedule_IN.enabled(false);
                }
                element.setTaxWithholdEnabled_IN();
                element.setWithTaxPayment_IN();
            }
            // </GIN>

            if (ledgerJournalTrans.RecId)
            {
                keepSalesPriceOnWrite = true;
            }

            element.updateAccrueSalesTaxTypeControl();
            element.updateVendorChargedSalesTaxControl();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxAmountJournal</Name>
						<Source><![CDATA[
        display TaxAmountJournal taxAmountJournal(LedgerJournalTrans _ledgerJournalTrans)
        {
            TaxAmountJournal taxAmountJournal;

            taxAmountJournal = ledgerJournalEngine.taxAmountJournal(_ledgerJournalTrans);
            if (taxAmountJournal == 0)
            {
                correctedTaxAmount.allowEdit(false);
                correctedTaxAmount.skip(true);
            }
            else
            {
                correctedTaxAmount.allowEdit(true);
                correctedTaxAmount.skip(false);
            }
            return taxAmountJournal;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res;

            #resAppl;

            if (journalFormTrans.parmCheckPostResults().errorExists(_ledgerJournalTrans.Voucher))
            {
                res = imageListAppl.image(#ImageError);
            }
            else
            {
                res = -1;
            }

            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorLog</Name>
						<Source><![CDATA[
        display LogTxt errorLog()
        {
            return journalFormTrans.parmCheckPostResults().errorLog(ledgerJournalTrans.Voucher);
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedDateTime</Name>
						<Source><![CDATA[
        display JournalPostedDateTime postedDateTime()
        {
            return ledgerJournalEngine.postedDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>approvedBy</Name>
						<Source><![CDATA[
        display ApprovedByPersonnelNumber approvedBy()
        {
            return ledgerJournalEngine.approvedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>rejectedBy</Name>
						<Source><![CDATA[
        display UserId rejectedBy()
        {
            return ledgerJournalEngine.rejectedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reportedAsReadyBy</Name>
						<Source><![CDATA[
        display UserId reportedAsReadyBy()
        {
            return ledgerJournalEngine.reportedAsReadyBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalance</Name>
						<Source><![CDATA[
        display AmountMST journalBalance()
        {
            return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCredit</Name>
						<Source><![CDATA[
        display AmountMST journalCredit()
        {
            return ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebit</Name>
						<Source><![CDATA[
        display AmountMST journalDebit()
        {
            return ledgerJournalEngine.journalDebit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotal</Name>
						<Source><![CDATA[
        display AmountMST voucherTotal()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCredit</Name>
						<Source><![CDATA[
        display AmountMST voucherCredit()
        {
            return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotalReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherTotalReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans) - ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherCreditReportingCurrency()
        {
            return ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherDebitReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalanceReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalBalanceReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency() - ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalCreditReportingCurrency()
        {
            return ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalDebitReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>allowEditCorrectedInvoiceId_RU</Name>
						<Source><![CDATA[
        void allowEditCorrectedInvoiceId_RU()
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceId_RU)).allowEdit (ledgerJournalTrans.Correct_RU);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceDate_RU)).allowEdit(ledgerJournalTrans.Correct_RU);

            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceId_RU)).skip (! ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceId_RU)).allowEdit());
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceDate_RU)).skip(! ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CorrectedInvoiceDate_RU)).allowEdit());

            if (! ledgerJournalTrans.Correct_RU)
            {
                ledgerJournalTrans.CorrectedInvoiceId_RU = '';
                ledgerJournalTrans.CorrectedInvoiceDate_RU = dateNull();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebit</Name>
						<Source><![CDATA[
        display AmountMST voucherDebit()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret = super(_forceUpdate);

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // A write was requested on the sibling and the client did not write the entity. This happens
                // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
                // client only calls write on that specific sibling and not on the entire entity.

                // Write the entire entity.
                ledgerJournalTrans_DS.write();
            }

            if (ledgerJournalTrans.RecId)
            {
                correctedTaxAmountCurEdited = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayRemittanceAddress</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the vendor remittance address associated with the vendor <c>RemittanceLocation</c> or <c>RemittanceAddress</c> record id field on the <c>LedgerJournalTrans</c> table.
        /// </summary>
        /// <returns>
        /// The remittance address.
        /// </returns>
        /// <remarks>
        /// The remittance address on the trans date is returned if the journal is posted.
        /// The current date effective remittance address is returned for an unposted journal.
        /// </remarks>
        public display RemittanceAddressing displayRemittanceAddress()
        {
            if (!hasFieldAccess(tableNum(LogisticsPostalAddress), fieldNum(LogisticsPostalAddress, Address),AccessType::View))
            {
                error("@SYS57330");
            }

            return ledgerJournalEngine.displayRemittanceAddress(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBudgetCheckResult</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the budget check result for the current <c>LedgerJournalTrans</c> record.
        /// </summary>
        /// <returns>
        /// The budget check result for the current <c>LedgerJournalTrans</c> record.
        /// </returns>
        public display BudgetCheckResult displayBudgetCheckResult()
        {
            return ledgerJournalEngine.getBudgetCheckResult(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValueCustoms_IT</Name>
						<Source><![CDATA[
        private void initValueCustoms_IT()
        {
            ledgerJournalTrans.AccountType = LedgerJournalACType::Vend;
            if (customs.CustomsDebt == CustomsDebt_IT::Customs)
            {
                ledgerJournalTrans.parmAccount(customs.CustomsId);
            }
            else
            {
                ledgerJournalTrans.parmAccount(customs.ShipperId);
            }

            ledgerJournalTrans_ds.object(fieldnum(LedgerJournalTrans, LedgerDimension)).modified();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            journalFormTrans.setMassTransactionReversalButtonVisibility();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl, ledgerJournalTrans, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of main account type field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new main account type
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                #ISOCountryRegionCodes
                LedgerJournalACType ledgerJournalACType = this.getValue();

                super();

                if (priorAccountType != ledgerJournalACType)
                {
                    priorAccountType = ledgerJournalACType;
                    ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                }

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    element.deleteDIOTAdditionalinfo_MX();
                }
                journalFormTrans.enableButtonsActive();
                element.setVisible();
                element.setProjAccountNum();
                element.enableDepreciationStartDate();

                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>

                if (ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).getValue()!=0)
                {
                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, ledgerJournalACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID=0;
                        ttscommit;
                    }
                }

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCA]))
                {
                    ledgerJournalTrans.gsthstTaxType_CA = TaxRegistration_CA::getGSTHSTTaxType(ledgerJournalTrans.AccountType);
                }

                ledgerJournalTrans.updateCustVendBankAccount(true);

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableZakatGroups_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                // Clearing Remittance location when the account type is not vendor.
                if (ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
                {
                    ledgerJournalTrans.RemittanceLocation = 0;
                }

                if (enableCustomDeclaration_IT)
                {
                    element.updateAmountCreditDebitCustoms_IT();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.amountCurCreditModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and CreditAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                // <GEEPL>
                if (countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase_PL();
                    ledgerJournalTrans_ds.refresh();
                }
                // </GEEPL>

                vendTransCashDisc_ds.research();

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                        ledgerJournalTrans.AmountCurCredit < 0)
                    {
                        if (ledgerJournalTrans.CashDiscAmount)
                            info("@SYS99050");
                    }
                }

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.amountCurDebitModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and DebitAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                // <GEEPL>
                if (countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase_PL();
                    ledgerJournalTrans_ds.refresh();
                }
                // </GEEPL>

                vendTransCashDisc_ds.research();

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                        ledgerJournalTrans.AmountCurDebit > 0)
                    {
                        if (ledgerJournalTrans.CashDiscAmount)
                        {
                            info("@SYS99050");
                        }
                    }
                }

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approved</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // call to the method to set the Invoice Release Date and Release Comment according to the Approved checkbox
                element.setStoppedReleaseFields();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approver</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                HcmWorker ret = super(_formReferenceControl);

                if (ret != null && !hcmWorkerLookupActiveCurrentCompany.validateWorker(ret.RecId))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret = hcmWorkerLookupActiveCurrentCompany.lookupWorker(_formReferenceControl);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankCentralBankPurposeCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.bankCentralBankPurposeCodeModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankDepositVoucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.bankDepositVoucherModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                LedgerJournalCashDiscService ledgerJournalCashDiscService;

                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                if (ledgerJournalTrans.CashDiscAmount && TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalCashDiscService = new LedgerJournalCashDiscService(ledgerJournalTrans.JournalNum,
                                                                                    ledgerJournalTrans.Voucher,
                                                                                    ledgerJournalTrans);
                    if (ledgerJournalCashDiscService.cashDiscBaseAmount(ledgerJournalTrans) && TaxParameters::find().CashDiscOnInvoice)
                    {
                        ledgerJournalTrans.CashDiscPercent = (ledgerJournalTrans.CashDiscAmount * 100)/ledgerJournalCashDiscService.cashDiscBaseAmount(ledgerJournalTrans);
                    }
                    else
                    {
                        ledgerJournalTrans.CashDiscPercent = 0;
                    }
                    ledgerJournalTrans_ds.refresh();
                }

                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = true;
            
                isValid = element.validateCashDiscountAmount(ledgerJournalTrans.CashDiscAmount, ledgerJournalTrans);

                return (isValid && super());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscCode</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = true;

                if (isValid && (ledgerJournalTrans.CashDiscCode != '') &&
                    (!CashDisc::existByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.CashDiscCode)))
                {
                    isValid = checkFailed(
                        strFmt("@SYS138714", ledgerJournalTrans.CashDiscCode, ledgerJournalTrans.Company));
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CashDisc::lookupCashDisc(_formControl, _filterStr, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans, false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscPercent</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!ledgerJournalTrans.CashDiscPercent)
                {
                    ledgerJournalTrans.CashDiscCode = "";
                    ledgerJournalTrans.CashDiscAmount = 0;
                    ledgerJournalTrans.DateCashDisc = dateNull();
                }

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscPercentModified(ledgerJournalTrans);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
                FormDataUtil::getFormDataSource(ledgerJournalTrans).refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CFDIUUID_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                str fieldName;

                ret = super();

                fieldName = fieldPName(LedgerJournalTrans, InvoiceSeries_MX);

                if (LedgerJournalTrans.InvoiceSeries_MX != '')
                {
                    if (Box::yesNo(strFmt("@Mexico:ELedgerAccounting_InvoiceChange", fieldName), DialogButton::Yes) == DialogButton::No)
                    {
                        return false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.companyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                LedgerJournalTrans_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
                LedgerJournalTrans_AccountNum1.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());
                Group_AccountNum.parmDataAreaId(ledgerJournalTrans.Company ? ledgerJournalTrans.Company : curext());

                ledgerJournalTrans_ds.refresh();
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CorrectedInvoiceDate_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalTrans_ds.checkCorrectedInvoice_RU();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CorrectedInvoiceId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalTrans_ds.checkCorrectedInvoice_RU();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustVendInvoiceJour custVendInvoiceJour;

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend && ledgerJournalTrans.parmAccount())
                {
                    custVendInvoiceJour = CustVendInvoiceJour::lookupCorrectedInvoiceId_RU(_formControl,
                                                                                           ModuleCustVend::Vend,
                                                                                           ledgerJournalTrans.parmAccount(),
                                                                                           true);

                    ledgerJournalTrans.CorrectedInvoiceDate_RU = custVendInvoiceJour.InvoiceDate;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Correct_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTrans_ds.allowEditCorrectedInvoiceId_RU();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_AccountNum1.parmCurrency(ledgerJournalTrans.CurrencyCode);
                Group_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);

                LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
                LedgerJournalTrans_OffsetAccount1.parmCurrency(ledgerJournalTrans.CurrencyCode);
                Group_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                super();

                if (SpecTrans::getSpecTransCount(ledgerJournalTrans.company(), ledgerJournalTrans.TableId, ledgerJournalTrans.RecId) > 0)
                {
                    ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                }
                // <GEEU>
                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                else if (TaxParameters::isBankExchRateEnabled_W())
                {
                    SalesTaxTransactionExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                // </GEEU>
                journalFormTrans.enableFieldsActive();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendAccount_PL</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.initFromCustVendVatRegNums_PL(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                VendBankAccount::lookupBankAccount(_formControl,
                                                    ledgerJournalTrans.parmAccount(),
                                                    ledgerJournalTrans.Company,
                                                    DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate,0));
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Args args;

                args = new Args();
                args.record(ledgerJournalTrans);

                new MenuFunction(menuitemDisplayStr(VendBankAccounts), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DateCashDisc</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                // <GEEU>
                if (PurchParameters::dateOfExchRateIsDocumentDate(ledgerJournalTrans.TaxGroup))
                {
                    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                    ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                }
                // </GEEU>

                ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
                if (ledgerJournalTrans.CashDiscCode)
                {
                    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    vendTransCashDisc_ds.research();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Due</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Due)
                {
                    PaymCalendarAdjustedDate paymCalendarAdjustedDate = PaymCalendarSourceLedgerJournalTrans::getAdjustedDate(ledgerJournalTrans);

                    ledgerJournalTrans.Due = PaymCalendarProcessor::getAdjustedDueDate(ledgerJournalTrans.Due, priorDueDate, paymCalendarAdjustedDate);
                }

                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                vendTransCashDisc_ds.research();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRateSecond</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>GSTHSTTaxType_CA</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Invoice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.invoiceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceSeries_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                str fieldName;

                ret = super();

                fieldName = fieldPName(LedgerJournalTrans, CFDIUUID_MX);

                if (LedgerJournalTrans.CFDIUUID_MX != '')
                {
                    if (Box::yesNo(strFmt("@Mexico:ELedgerAccounting_InvoiceChange", fieldName), DialogButton::Yes) == DialogButton::No)
                    {
                        return false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of main account field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new main account
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                LedgerJournalACType ledgerJournalACType;
                // <GIN>
                #ISOCountryRegionCodes
                // </GIN>

                // <GIN>
                if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                {
                    ledgerJournalEngine.parmNewAccountNum_IN(ledgerJournalTrans.parmAccount());
                }
                // </GIN>

                super();

                ledgerJournalEngine.accountNumModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                //This call needs to be made to update the RemittanceLocation reference group field which is modified in the ledgerJournalEngine.accountNumModified() method.
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset, tax1099BoxDetail);

                element.setDebCredProposal(false);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), true, true);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust)
                {
                    CustTable custTable = CustTable::find(ledgerJournalTrans.parmAccount());
                    vendInvoiceIntrastat.Transport = DlvMode::find(custTable.DlvMode).Transport;
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    VendTable vendTable = VendTable::find(ledgerJournalTrans.parmAccount());
                    vendInvoiceIntrastat.Transport = DlvMode::find(vendTable.DlvMode).Transport;
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                if (this.getValue()!=0)
                {
                    ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();

                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, ledgerJournalACType))
                    {
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                    }
                }

                journalFormTrans.enableButtonsActive();
                journalFormTrans.enableFieldsActive();

                element.setVisible();
                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                }

                ledgerJournalTrans.updateCustVendBankAccount();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setWithTaxPayment_IN();
                }
                // </GIN>
                // <GSA>
                if (zakatParameterEnabled)
                {
                    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                    {
                        element.enableSubContractorGroup_SA();
                    }
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>
                if (ledgerJournalTrans.listCodeAllowed())
                {
                    ledgerJournalTrans.setListCode();
                    codes_Listcode.enabled(true);
                }
                else
                {
                    ledgerJournalTrans.Listcode = Listcode::IncludeNot;
                    codes_Listcode.enabled(false);
                }

                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTrans.ledgerJournalTable().JournalType))
                {
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                switch (ledgerJournalTrans.AccountType)
                {
                    case LedgerJournalACType::Cust :
                        CustTable::jumpRefCustomer(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                        break;
                    case LedgerJournalACType::Vend :
                        VendTable::jumpRefVendor(ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);
                        break;
                    default :
                        LedgerJournalTrans_AccountNum.jumpRef();
                        LedgerJournalTrans_AccountNum1.jumpRef();
                        Group_AccountNum.jumpRef();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerJournalDlvDate_ES</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.deliveryDateModified_ES(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerVoucherType_CN</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MarkupCode_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.markupCodeModified_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.markupCodeLookup_RU(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl,
                    ledgerJournalTrans,
                    _filterStr,
                    AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of offset account type field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new offset account type
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                super();

                LedgerJournalACType offsetACType = this.getValue();

                if (priorOffsetAccountType != offsetACType)
                {
                    ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                    priorOffsetAccountType = offsetACType;
                }

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                {
                    element.deleteDIOTAdditionalinfo_MX();
                }
                element.setVisible();
                element.setProjAccountNum();
                element.enableDepreciationStartDate();

                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>
                if (ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,OffsetLedgerDimension)).getValue()!=0)
                {
                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, offsetACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                        ttscommit;
                    }
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableZakatGroups_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                // Lock the main account segment if "Fixed offset account" is selected in Journal Names
                if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                    LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount1, ledgerJournalTable, ledgerJournalTrans);
                    LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(Group_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                Group_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                journalFormTrans.enableFieldsActive();
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                LedgerJournalTrans_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
                LedgerJournalTrans_OffsetAccount1.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());

                Group_OffsetAccount.parmDataAreaId(ledgerJournalTrans.getOffsetCompany());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of offset account field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new offset account
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                LedgerJournalACType offsetACType;
                // <GIN>
                #ISOCountryRegionCodes
                // </GIN>

                super();

                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);

                ledgerJournalEngine.initFromOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                if (ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets &&
                   ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                {
                    // The primary account is not of type fixed assets and the offset account was changed
                    // to a fixed asset account, so redefault the depreciation start date.
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableSubContractorGroup_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                if (this.getValue()!=0)
                {
                    offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetAccountType)).getValue();

                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, offsetACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                        ttscommit;
                    }
                }

                if (ledgerJournalTrans.listCodeAllowed())
                {
                    ledgerJournalTrans.setListCode();
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                }

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setWithTaxPayment_IN();
                }
                // </GIN>

                if (enableCustomDeclaration_IT)
                {
                    element.updateCustomsCtrls_IT();
                }

                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTrans.ledgerJournalTable().JournalType))
                {
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                switch (ledgerJournalTrans.OffsetAccountType)
                {
                    case LedgerJournalACType::Cust :
                        CustTable::jumpRefCustomer(ledgerJournalTrans.parmOffsetAccount(), ledgerJournalTrans.Company);
                        break;
                    case LedgerJournalACType::Vend :
                        VendTable::jumpRefVendor(ledgerJournalTrans.parmOffsetAccount(), ledgerJournalTrans.Company);
                        break;
                    default :
                        LedgerJournalTrans_OffsetAccount.jumpRef();
                        LedgerJournalTrans_OffsetAccount1.jumpRef();
                        Group_OffsetAccount.jumpRef();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetPostingProfile_RU</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalEngine::lookupPostingProfileForAccTypeOffset_RU(_formControl, _filterStr, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OperationType_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret
                    && diotAddlInfoForNoVendorLedger_MX.VendorType == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                if (ret
                    && ledgerJournalTrans.findVendForOffset().VendorType_MX == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Payment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateOnPaymentMethodChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }

                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PostingProfile</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalEngine::lookupPostingProfileForAccountType(_formControl, _filterStr, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Prepayment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.prepaymentModified(ledgerJournalTrans, ledgerJournalTrans_Project);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceAddress</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceLocation</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret = LogisticsLocationAppUtil::lookupRemittanceLocation(_formReferenceControl, ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                LogisticsLocationAppUtil::jumpRefLogisticsLocation(element, ledgerJournalTrans.RemittanceLocation);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Tax1099Fields</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();

                    Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box, tax1099BoxDetail.RecId);
                    tax1099BoxDetail_ds.executeQuery();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxBase_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalTrans.TaxBase_W = sign(ledgerJournalEngine.taxAmountJournal(ledgerJournalTrans))*abs(ledgerJournalTrans.TaxBase_W);
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                if (ledgerJournalTrans.CashDiscCode)
                {
                    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                }
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                // <GEEPL>
                if (countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase_PL();
                    element.enableFieldsActive_PL();
                }
                // </GEEPL>

                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxGroupCompany)
                {
                    taxGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxGroupHeading::taxGroupLookup(_formControl, taxGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                boolean validForSalesTaxGroupCheck = false;

                DataAreaId dataAreaIdPostInterCompany = LedgerJournalTrans::getSalesTaxGroupCompanyForIntercompany(ledgerJournalTrans);
                // Verify that a tax code is derived for the given Tax Group and Tax Item Group.
                if (CheckTaxGroups::Error == Tax::isValidTaxGroupIntersectionForInterCompanyV2(
                                                ledgerJournalTrans.TaxGroup,
                                                ledgerJournalTrans.TaxItemGroup,
                                                dataAreaIdPostInterCompany,
                                                LedgerJournalTrans.isTaxIntegrationEnabled()))
                {
                    ledgerjournaltrans_ds.refresh();
                    validForSalesTaxGroupCheck = true;
                }

                if (!validForSalesTaxGroupCheck)
                {
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                    {
                        if (element.isAdditionalInfoToBeDeleted_MX())
                        {
                            element.deleteDIOTAdditionalinfo_MX();
                        }
                        element.resetOperationType_MX();
                        element.resetAddInfoFields_MX();
                    }
                    ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                    if (ledgerJournalTrans.CashDiscCode)
                    {
                        ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    }

                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    ledgerjournaltrans_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxItemGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxItemGroupCompany)
                {
                    taxItemGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxItemGroupHeading::taxItemGrouplookup(_formControl, taxItemGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
               super();
                boolean validForSalesTaxGroupCheck = false;

                DataAreaId dataAreaIdPostInterCompany = LedgerJournalTrans::getSalesTaxGroupCompanyForIntercompany(ledgerJournalTrans);
                // Verify that a tax code is derived for the given Tax Group and Tax Item Group.
                if (CheckTaxGroups::Error == Tax::isValidTaxGroupIntersectionForInterCompanyV2(
                                                ledgerJournalTrans.TaxGroup,
                                                ledgerJournalTrans.TaxItemGroup,
                                                dataAreaIdPostInterCompany,
                                                LedgerJournalTrans.isTaxIntegrationEnabled()))
                {
                    ledgerjournaltrans_ds.refresh();
                    validForSalesTaxGroupCheck = true;
                }

                if (!validForSalesTaxGroupCheck)
                {
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                    {
                        if (element.isAdditionalInfoToBeDeleted_MX())
                        {
                            element.deleteDIOTAdditionalinfo_MX();
                        }
                        element.resetOperationType_MX();
                        element.resetAddInfoFields_MX();
                    }

                    ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                    ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                    ledgerjournaltrans_ds.refresh();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
                ledgerJournalEngine.transDateModified(ledgerJournalTrans);
                if ((ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                     ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                    && !ProjParameters::find().AllowDifferentProjDateAccountingDateForInvoiceJour)
                {
                    ledgerJournalEngine.setProjTransDate(ledgerJournalTrans, ledgerJournalTrans_Project);
                }
                vendTransCashDisc_ds.research();

                LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_AccountNum1.parmControlDate(ledgerJournalTrans.TransDate);
                Group_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);

                LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
                LedgerJournalTrans_OffsetAccount1.parmControlDate(ledgerJournalTrans.TransDate);
                Group_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Triangulation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VatDueDate_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (PurchParameters::find().DateOfExchRate_W == DateOfExchRate_W::DateOfVATRegister)
                {
                    ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                    ledgerJournalEngine.currencyModified(ledgerJournalTrans);
                }

                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                else if (TaxParameters::isBankExchRateEnabled_W())
                {
                    SalesTaxTransactionExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VATNumJournal</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::jumpRefVATNum(ledgerJournalTrans, this);
                }
                else
                {
                    super();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::lookupVATNum(_formControl, ledgerJournalTrans);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VendBankAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.formMethodDataSourceVoucherModified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher_CN</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                // <GCN>
                if (ret
                    && chineseVoucher_CN)
                {
                    ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                }
                // </GCN>

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTransCashDisc</Name>
				<Methods>
					<Method>
						<Name>remainingAmount</Name>
						<Source><![CDATA[
        display AmountCur remainingAmount(VendTransCashDisc _vendTransCashDisc)
        {
            return ledgerJournalTrans.amount() - _vendTransCashDisc.CashDiscAmount;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CashDiscAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                if ((vendTransCashDisc.CashDiscAmount > 0 && ledgerJournalTrans.amount() < 0) ||
                    (vendTransCashDisc.CashDiscAmount < 0 && ledgerJournalTrans.amount() > 0))
                {
                    throw error("@SYS68141");
                }
                super();

                if (vendTransCashDisc.orig().CashDiscAmount != vendTransCashDisc.CashDiscAmount)
                {
                    vendTransCashDisc.write();
                    ledgerJournalEngine.calcVirtualCashDisc(ledgerJournalTrans);
                    cashDiscChanged = true;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = true;
            
                isValid = element.validateCashDiscountAmount(vendTransCashDisc.CashDiscAmount, ledgerJournalTrans);
            
                return (isValid && super());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscdate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (vendTransCashDisc.orig().CashDiscdate != vendTransCashDisc.CashDiscdate)
                {
                    vendTransCashDisc.write();
                    ledgerJournalEngine.calcVirtualCashDisc(ledgerJournalTrans);
                    cashDiscChanged = true;
                    vendTransCashDisc_ds.reread();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Project</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Project.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Project.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if ((ledgerJournalTrans.AccountType == LedgerJournalACType::Project) ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project))
                {
                    HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(ledgerJournalTrans_Project.ProjId), ProjParameters::find().BlockParentActivitySelection);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTrans_Project.activityNumberModified();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group_SalesPrice.update();
                group_CostPrice.update();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCategoryModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), true, true);
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group_SalesPrice.update();
                group_CostPrice.update();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CostPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjTransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                if (!ProjParameters::find().AllowDifferentProjDateAccountingDateForInvoiceJour)
                {
                    LedgerJournalTrans.TransDate = LedgerJournalTrans_Project.ProjTransDate;
                }

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group_SalesPrice.update();
                group_CostPrice.update();
                vendTransCashDisc_ds.research();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projQtyModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                super();

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                boolean isProject;

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                                        ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (isProject)

                {
                    ret = ResourceLookup::lookupResource(_formReferenceControl, ledgerJournalTrans_Project);
                }
                else
                {
                    ret = super(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                ResourceView ret;
                boolean isProject;

                ret = super(_formReferenceControl);

                isProject = ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                                        ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project;

                if (isProject && ret.RecId && !ResourceLookup::validateResource(ret.RecId, ledgerJournalTrans_Project))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), true, true);
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group_SalesPrice.update();
                group_CostPrice.update();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesCurrencyId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                keepSalesPriceOnWrite = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroupSales</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTrans.TaxItemGroup = ledgerJournalTrans_Project.TaxItemGroupSales;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            void jumpRef()
            {
                ProjCostTrans::jumpRefTransId(ledgerJournalTrans, element);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Asset</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
            element.enableDepreciationStartDate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.enableDepreciationStartDate();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Asset.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Asset.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the current record is valid and ready to be written to the database.
        /// </summary>
        /// <returns>
        /// true if the record is valid; otherwise, false.
        /// </returns>
        /// <remarks>
        /// Checks whether account or offset account type as well as a fixed asset account are selected before
        /// running reason code validation.
        /// </remarks>
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BookId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                AssetBook::lookupOpenBookIdForAsset(_formControl,
                                                    ledgerJournalTrans_Asset.AssetId,
                                                    true, // CurrentOperationsTax must be considered
                                                    ledgerJournalTable.CurrentOperationsTax,
                                                    ledgerJournalTrans_Asset.Company,
                                                    true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.initFromAssetTable(ledgerJournalTrans, ledgerJournalTrans_Asset);
                }

                ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>DIOTAddlInfoForNoVendorLedger_MX</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            if (element.isAdditionalInfoToBeDeleted_MX())
            {
                element.deleteDIOTAdditionalinfo_MX();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            TaxRegistrationValidator_MX taxRegistrationValidator;

            ret = super();

            if (ret)
            {
                ret = diotAddlInfoForNoVendorLedger_MX.checkMandatoryFields(ledgerJournalTrans.TaxGroup,
                                                                            ledgerJournalTrans.TaxItemGroup,
                                                                            LedgerJournalType::VendInvoiceRegister,
                                                                            ledgerJournalTrans.AccountType,
                                                                            ledgerJournalTrans.OffsetAccountType
                                                                            );
            }
            if (ret
                && ledgerJournalTrans.AccountType != LedgerJournalACType::Vend
                && ledgerJournalTrans.OffsetAccountType != LedgerJournalACType::Vend)
            {
                taxRegistrationValidator = TaxRegistrationValidator_MX::construct(diotAddlInfoForNoVendorLedger_MX);
                ret = taxRegistrationValidator.validateDIOTAdditionInfoTaxRegistration(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>VendorType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret
                    && diotAddlInfoForNoVendorLedger_MX.VendorType == VendorType_MX::ForeignVendor
                    && ledgerJournalTrans.OperationType_MX == VendorOperationType_MX::RentLease)
                {
                    ret = checkFailed(strFmt("@SYS312599", ledgerJournalTrans.OperationType_MX));
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.enableDisableVendorType_MX();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendInvoiceIntrastat</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            vendInvoiceIntrastat.Voucher = ledgerJournalTrans.Voucher;
            vendInvoiceIntrastat.TransDate = ledgerJournalTrans.TransDate;
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if (!VendInvoiceIntrastat::exist(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate))
            {
                super(_append);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>IntrastatCommodity</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                var intrastatCommodityController = IntrastatCommodityController::newFromItemAndCategory('', 0);

                return intrastatCommodityController.resolveReference(_formReferenceControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                var intrastatCommodityController = IntrastatCommodityController::newFromItemAndCategory('', 0);

                return intrastatCommodityController.lookupReference(_formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransZakat_SA</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (ret && zakatParameterEnabled)
            {
                element.enableZakatSalesProjectId_SA();
                element.enableZakatGroups_SA();
                element.enableSubContractorGroup_SA();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = super();

            if (ret)
            {
                ret = ledgerJournalTransZakat_SA.validate();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ContractNum</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                VendContractZakat_SA::lookupContracts(_formControl,
                                                      VendInfoZakat_SA::find(ledgerJournalTransZakat_SA.Subcontractor).VendAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.enableZakatSalesProjectId_SA();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Subcontractor</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                VendTable::jumpRefAccountNum_SA(ledgerJournalTransZakat_SA,
                                                element,
                                                ledgerJournalTransZakat_SA.Subcontractor,
                                                fieldId2name(tableNum(LedgerJournalTransZakat_SA),
                                                fieldNum(LedgerJournalTransZakat_SA, Subcontractor)));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransBankLC</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransBankLC.LedgerJournalTrans != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BankLC</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (ledgerJournalTransBankLC.BankLC)
                {
                    bankLCImportNumberController.jumpRef(ledgerJournalTransBankLC.BankLC);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret = bankLCImportNumberController.resolveReference(_formReferenceControl as FormReferenceGroupControl);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                BankLC bankLC = bankLCImportNumberController.lookupReference(_formReferenceControl);

                return bankLC;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MarkupCode_SA</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (bankLCChargeEnabled && ledgerJournalTransBankLC.MarkupCode_SA)
                {
                    ledgerJournalTransBankLC.TransType = BankLCLedgerJournalTransType::MiscCharge_SA;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                bankLCImportMarkupLookupController.lookup(_formControl, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                bankLCImportMarkupLookupController.jumpRef(ledgerJournalTransBankLC.MarkupCode_SA);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RAssetPurchTrans</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            rassetpurchTrans_ds.allowEdit(! ledgerJournalEngine.posted());
            rassetpurchTrans_ds.allowCreate(! ledgerJournalEngine.posted());
            rassetpurchTrans_ds.allowDelete(! ledgerJournalEngine.posted());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        private boolean isNeeded()
        {
            return TaxParameters::checkTaxParameters_IN();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
   
            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
            // </GIN>
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TCSGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWithholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tcsGroup, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TDSGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setTaxWithholdEnabled_IN();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tdsGroup, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>Tax1099BoxDetail</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                tax1099BoxDetail.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = tax1099BoxDetail.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;
            Tax1099Box tax1099Box = Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                isValid = super();

                if (isValid && tax1099Box == Tax1099G::unemploymentCompensation().tax1099Box)
                {
                    if ((abs(tax1099BoxDetail.Tax1099StateTaxWithheld) > abs(ledgerJournalTrans.Tax1099Amount)))
                    {
                        isValid = checkFailed("@SPS1943");
                    }
                }

                if (isValid && tax1099Box == Tax1099S::grossProceeds().tax1099Box)
                {
                    if ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc ==""))
                    {
                        isValid = checkFailed("@SPS3");
                    }
                }
            }

            if ((tax1099Box == Tax1099G::incomeTaxRefundsCreditsOffsets().tax1099Box) && (tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) -15) || tax1099BoxDetail.Tax1099TaxYear > (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)))
            {
                isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) - 15), int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)));
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            Tax1099Box tax1099Box = Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box;

            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();

                if (tax1099Box == Tax1099S::grossProceeds().tax1099Box)
                {
                    if (tax1099BoxDetail.Tax1099BuyersTax == 0.0)
                    {
                        warning(strFmt("@SPS14", "@PublicSector:Tax1099S6BuyersPart"));
                    }

                    if (ledgerJournalTrans.Tax1099Amount == 0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::Yes)
                    {
                        warning(strFmt("@SPS18", "@SYS23907"));
                    }
                }

                if (tax1099Box == Tax1099G::incomeTaxRefundsCreditsOffsets().tax1099Box)
                {
                    if (tax1099BoxDetail.Tax1099TaxYear > year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) && tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 15))
                    {
                        warning("@SPS2");
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>State</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Tax1099BoxDetail::lookupTax1099State(_formControl, LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension));
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                tax1099BoxDetail.Tax1099StateTaxID = VendStateTaxID::findByVendState(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State).StateTaxID;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Tax1099BoxDetail::jumpRefTax1099State(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxServiceTariff</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (countryRegion_PL && (!taxServiceTariff.ParentRecId || !taxServiceTariff.ParentTableId))
            {
                // Write can cause the child data source to lose it's foreign key values so restore them.
                taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                taxServiceTariff_ds.refresh();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransExtensionTH</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks whether this data sources should be enable or not.
        /// </summary>
        /// <returns>
        /// true if it should be eneabled; otherwise, return false.
        /// </returns>
        /// <remarks>
        /// This data source is joined to its parent data source with join type <c>Passive</c>
        /// by default. It means this data source is disabled by default.
        /// If any related feature needs this data source, then add condition(s) here to
        /// mark that it should be enabled.
        /// </remarks>
        public boolean isNeeded()
        {
            boolean ret = TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                 this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_W</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = LedgerJournalTrans_W.LedgerJournalTrans ? super() : true;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (countryRegion_MX)
            {
                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (countryRegion_MX)
            {
                // Switch the link type as fields appear in the grid that require an outerjoin
                ledgerJournalTrans_W_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (countryRegion_MX && LedgerJournalTrans_W.LedgerJournalTrans != 0)
            {
                // Only write the child table if the country context is set to one that the table has fields linked to and the child table has the parent FK set
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>WithholdingTypeCode_MX</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Customs_IT</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            element.updateCustomsCtrls_IT();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (enableCustomDeclaration_IT)
            {
                ledgerJournalTrans_Customs_IT_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (enableCustomDeclaration_IT &&
        ledgerJournalTrans_Customs_IT.LedgerJournalTrans != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>GoodsValue</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateAmountCreditDebitCustoms_IT();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_CustomsPayment_IT</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            element.updateAmountCreditDebitCustoms_IT();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
            element.updateAmountCreditDebitCustoms_IT();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (isTaxIntegrationEnabled 
                || FeatureStateProvider::isFeatureEnabled(TaxUseTaxAssessmentAdjustSalesTaxFeature::instance()))
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (isTaxIntegrationEnabled 
                || FeatureStateProvider::isFeatureEnabled(TaxUseTaxAssessmentAdjustSalesTaxFeature::instance()))
            {
                LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccrueSalesTaxType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateVendorChargedSalesTaxControl();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OverrideSalesTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                fieldError.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostJournalBatch</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                LedgerJournalMultiPost::singleJournalPost(ledgerJournalTable);
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                fieldError.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            journalFormTrans.validateJournalPost();

            ledgerJournalTrans_ds.refreshBudgetControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.markReportAsReady();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonApprove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.markApproved();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonReject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.markRejected();
            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonWithholdTax_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdTrans_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonCopyPeriodicJournal</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;

            ledgerJournalEngine.clearVoucher();

            args = new Args();
            args.record(ledgerJournalTable);
            LedgerJournalCopyPeriodic::main(args);

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            ledgerJournalTrans_ds.research();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonFunctions</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTrans.buttonClickedFunctions(ledgerJournalTrans);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                fieldError.visible(journalFormTrans.parmCheckPostResults().errorInJournal());

                ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonDeleteTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();

            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectVoucherTemplate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Populates arguments and initiates the menu item action.
        /// </summary>
        void clicked()
        {
            Args args;
            MenuFunction loadVoucherTemplateMenu;

            loadVoucherTemplateMenu = new MenuFunction(menuitemActionStr(LedgerJournalTransVoucherTemplateSelect),MenuItemType::Action);
            args = new Args();
            args.record(ledgerJournalTrans);
            args.object(ledgerJournalEngine);

            loadVoucherTemplateMenu.run(args);
            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SaveVoucherTemplate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Populates arguments and initiates the menu item action.
        /// </summary>
        void clicked()
        {
            Args args;
            MenuFunction saveVoucherTemplateMenu;

            // don't save to LedgerJournalTransVoucherTemplate if the row is not yet saved
            if (ledgerJournalTrans.RecId)
            {
                saveVoucherTemplateMenu = new MenuFunction(menuitemActionStr(LedgerJournalTransVoucherTemplateSave),MenuItemType::Action);
                args = new Args();
                args.record(ledgerJournalTrans);
                args.object(ledgerJournalEngine);

                saveVoucherTemplateMenu.run(args);
            }
            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TradeBLWIChangeCode</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (! ledgerJournalTrans.RecId)
            {
                ledgerJournalTrans.write();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTotals</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #Task

            super();
            ledgerJournalEngine.calculateTaxForCompleteJournal();
            LedgerJournalEngine::showTotalTaxes(ledgerJournalEngine);
            if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
            {
                element.task(#taskRefresh);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSettlement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                TaxWithholdUncommitted_IN::deleteForInvoice(
                    tableNum(LedgerJournalTable),
                    ledgerJournalTrans.ledgerJournalTable().RecId,
                    ledgerJournalTrans.Voucher,
                    ledgerJournalTrans.Invoice);
            }
            // </GIN>

            ledgerJournalEngine.settleTrans(ledgerJournalTrans);
            ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
            ledgerJournalTrans.update();
            ledgerJournalTrans_ds.reread();
            ledgerJournalEngine.write(ledgerJournalTrans);

            overviewGrid.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FinancialDimension</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTrans.enableDimensionButtonsActive();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTransSource</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #Task
            try
            {
                if (!ledgerJournalTable.Posted)
                {
                    Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnVendInvoice), element.getShowTax(), ledgerJournalTrans, element);
                }
                else
                {
                    super();
                }
            }
            finally
            {
                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
                {
                    element.task(#taskRefresh);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxDocumentLauncher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            this.parameters(classStr(TaxableDocumentDescriptorGeneralJournal));
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>buttonFunctionsNew</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTrans.buttonClickedFunctions(ledgerJournalTrans);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Custom lookup code for AccountNum SegmentedEntryControl
        /// </summary>
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">The segment that has been changed.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(LedgerJournalTrans_AccountNum, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            int currentSegmentIndex = LedgerJournalTrans_OffsetAccount.getCurrentSegmentIndex();

            if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger &&
                LedgerJournalTrans_OffsetAccount.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount)) ||
                !ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">The segment that has been changed.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans, ledgerJournalTrans.OffsetAccountType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Due</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            priorDueDate = this.dateValue();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountType1</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void enter()
        {
            super();

            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(ledgerJournalTrans_AccountNum1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// The event handler when a segment is modified.
        /// </summary>
        /// <param name = "_segment">The segment that was modified.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(LedgerJournalTrans_AccountNum1, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccountType1</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount1</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Find the current segment index value
            int currentSegmentIndex = LedgerJournalTrans_OffsetAccount1.getCurrentSegmentIndex();

            if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                    && LedgerJournalTrans_OffsetAccount1.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount))
                    || !ledgerJournalEngine.offsetAccountNumLookUp(ledgerJournalTrans_OffsetAccount1, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// The event handler when a segment is modified.
        /// </summary>
        /// <param name = "_segment">The segment that was modified.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount1, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans, ledgerJournalTrans.OffsetAccountType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Constructs a lookup for the reason code field.
        /// </summary>
        /// <remarks>
        /// The lookup shows the appropriate reason codes (if any) given the offset and main account selections.
        /// </remarks>
        public void lookup()
        {
            LedgerJournalACType offsetACType;
            LedgerJournalACType ledgerJournalACType;
            boolean useOffsetAccount;

            useOffsetAccount=ledgerJournalTrans.parmOffsetLedgerDimension() ? true : false;
            offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetAccountType)).getValue();
            ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();
            ReasonFormTable::reasonCodeLookup(this, offsetACType, ledgerJournalACType, true, useOffsetAccount);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InvoiceGroup_Due</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            priorDueDate = this.dateValue();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(Group_AccountNum, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// The event handler for the segment change event.
        /// </summary>
        /// <param name = "_segment">The segment that was modified.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(Group_AccountNum, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(Group_OffsetAccount, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">The segment that was modified.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(Group_OffsetAccount, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans, ledgerJournalTrans.OffsetAccountType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RAssetPurchTrans_assetId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            RAssetTable::lookupAccountNum(this, curext(), RAssetTransType::Acquisition);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AssetTransType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        ///  Vendor journal uses acquisition types transactions only and the other need to be deleted.
        /// </summary>
        public void enter()
        {
            EnumId   enumId   = enumNum(AssetTransTypeJournal);
            DictEnum dictEnum = new DictEnum(enumId);
            var assetTransTypeJournalAcquisition = enum2Str(AssetTransTypeJournal::Acquisition);
            var assetTransTypeJournalAcquisitionAdj = enum2Str(AssetTransTypeJournal::AcquisitionAdj);

            super();

            if (LedgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
            {
                for (int counter = 0; counter < dictEnum.values(); counter++)
                {
                    if (dictEnum.index2Label(counter) != assetTransTypeJournalAcquisition &&
                        dictEnum.index2Label(counter) != assetTransTypeJournalAcquisitionAdj)
                    {
                        this.delete(dictEnum.index2Label(counter));
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemittanceTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            // Need to enable\Disable the Manage Address button depending
            // on an account been selected or not.
            if (ledgerJournalTrans.parmAccount() == '' || ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
            {
                group_Remittance.allowEdit(false);
                remittance_ManageAddress.enabled(false);
                addAddress.enabled(false);
            }
            else
            {
                group_Remittance.allowEdit(true);
                remittance_ManageAddress.enabled(true);
                addAddress.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdditionalInfo_MX</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            element.handleAdditionalInfoFields_MX();
            diotAddlInfoForNoVendorLedger_MX_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_VendorType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension));
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_ForeignTaxRegistration</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension));
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_DiotCountryCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension));
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DIOTAddlInfoForNoVendorLedger_MX_Nationality</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension));
            }
            else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                element.populateAddlInfoFields_MX(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Subcontractor_Subcontractor</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            VendAccount vendAccount;
            VendAccount offsetVendAccount;

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
                && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                vendAccount = VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum;
                offsetVendAccount = VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum;

                if (VendInfoZakat_SA::findByVendAccount(vendAccount).IsSubcontractor
                    && VendInfoZakat_SA::findByVendAccount(offsetVendAccount).IsSubcontractor)
                {
                    VendInfoZakat_SA::lookupSubContractor(this, vendAccount,offsetVendAccount);
                }
                else
                {
                    super();
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthTransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElectronicPaymentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FBSpedEcfDerexClasificationCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntentLetterId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonBusinessUsagePercentage_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetFinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OldLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlafondDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOriginalDocumentAsFacture_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorVATDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<CounterField>LineNum</CounterField>
			<Index>NumVoucherIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTransCashDisc</Name>
			<Table>VendTransCashDisc</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Manual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Project</Name>
			<Table>LedgerJournalTrans_Project</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPwp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReadyForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Asset</Name>
			<Table>LedgerJournalTrans_Asset</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPostingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsumptionQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAdjustedDepreciation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPriorYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowValuePoolType_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LVPTransferId_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefAssetID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReserveTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleFactor_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DIOTAddlInfoForNoVendorLedger_MX</Name>
			<Table>DIOTAddlInfoForNoVendorLedger_MX</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Curp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiotCountryCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Nationality</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendInvoiceIntrastat</Name>
			<Table>VendInvoiceIntrastat</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceJour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransZakat_SA</Name>
			<Table>LedgerJournalTransZakat_SA</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subcontractor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransBankLC</Name>
			<Table>LedgerJournalTransBankLC</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankLC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleType_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RAssetPurchTrans</Name>
			<Table>RAssetPurchTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Acquisition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiveNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableTableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<Index>TableRecAssetIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtensionIN</Name>
			<Table>LedgerJournalTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CENVATCreditAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludedGSTAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAcknowledgementNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCountryRegionToRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdNatureOfRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithIGSTPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WouldYouClaimRefund</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Tax1099BoxDetail</Name>
			<Table>Tax1099BoxDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099AddressorLegalDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099BuyersTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099DateOfClosing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099PropertyOrServices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxWithheld</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TaxYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TradeOrBusiness</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxServiceTariff</Name>
			<Table>TaxServiceTariff</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceTariffNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransExtensionTH</Name>
			<Table>LedgerJournalTransExtensionTH</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReceiptDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpOtherDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealVendName</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceReceiptDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNatureOfAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegNum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_W</Name>
			<Table>LedgerJournalTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashRegisterTerminal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIBeneficiaryRetains_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIFinancialSystem_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestLossAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestNominalAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestRealAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeBearer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPaymCFDIConfirmNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalInstrument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithholdingTypeCode_MX</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Customs_IT</Name>
			<Table>LedgerJournalTrans_Customs_IT</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GoodsValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemService</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceJour</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_CustomsPayment_IT</Name>
			<Table>LedgerJournalTrans_CustomsPayment_IT</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans_Customs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans_Customs_IT</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtension</Name>
			<Table>LedgerJournalTransTaxExtension</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccrueSalesTaxType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumTableType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorChargedSalesTax</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@AccountsPayable:VendorInvoiceJournal</Caption>
		<DataSource xmlns="">LedgerJournalTrans</DataSource>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransVendInvoice</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournalBatch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransVendInvoice</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<Text>@GeneralLedger:LedgerJournalPostInBatch</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>495573147</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLedgerJourTransVendInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LedgerJourTransVendInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPostVendInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonCourse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>825955245</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonApprove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>buttonReject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ButtonWithholdTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1156337343</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>TaxWithholdTmpWorkTrans_IN</MenuItemName>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TaxWithholdTrans_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1156337343</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>TaxWithholdTrans_IN</MenuItemName>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PeriodicJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerBasic</ConfigurationKey>
								<ElementPosition>1321528392</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>buttonCopyPeriodicJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Command>Save</Command>
										<Text>@SYS12752</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SaveJournal</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalSave</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS3868</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>buttonFunctions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1486719441</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator</Name>
										<ElementPosition>402653181</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransVendInvoice</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonDeleteTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789220179</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJourDelTransLJTransVendInv</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator2</Name>
										<ElementPosition>1879048178</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SelectVoucherTemplate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1967827624</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalTransVoucherTemplateSelect</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SaveVoucherTemplate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2027363439</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalTransVoucherTemplateSave</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonCustVendCreditInvoicing</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendCreditInvoicing</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TradeBLWIChangeCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146828286</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TradeBLWIChangeLedgerJourTransVndInv</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS10340</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>1651910490</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonBalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerBalanceControl</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>TaxTotals</Name>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS62141</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BudgetCheckResultsInquiry</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>BudgetCheckResults</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransactionReversalFailures</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalTransactionReversalFailures</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@GeneralLedger:TransactionReversalExecutionDetailHistory</Text>
									</AxFormControl>
								</Controls>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Print_MenuButton</Name>
								<ElementPosition>1817101539</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JounalDetails</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPerJournal</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerTransPerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DefermentSchedule_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1982292588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>DefermentScheduleTrans_IN</MenuItemName>
								<Text>@GLS5212</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>TransactionReversalDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJournalTransTransactionReversalDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverViewTab</Name>
						<ElementPosition>428657868</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverviewActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AddDelete</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Add</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>Delete</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>OverviewFunctions</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSettlement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>268435454</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Manual</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@CashManagement:SettleTransactions</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>FinancialDimension</Name>
												<ElementPosition>660764196</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>LedgerJourTransDimLedgerJourTrnVendInv</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>OffsetAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>LedgerJourTrOffDimLedgerJourTrnVndInv</MenuItemName>
													</AxFormControl>
												</Controls>
												<Text>@SYS138491</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxTransSource</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>991146294</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxTrnsSourceLedgerJournalTrnVendInvoice</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxDocumentLauncher</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxDocumentLauncher</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxInformation_MY</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>buttonFunctionsNew</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1486719441</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonSeparatorControl">
														<Name>SeparatorFunctions</Name>
														<ElementPosition>402653181</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ButtonSeparator</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ButtonSplitPosting</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1670148549</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>LedgerJourSplitPostingLdgrJourTrnVendInv</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonSeparatorControl">
														<Name>SeparatorFunctions2</Name>
														<ElementPosition>1879048178</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ButtonSeparator</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>LedgerJournalTransAccrual</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1908291809</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>LedgerJournalTransAccrLedgJourTrnVendInv</MenuItemName>
													</AxFormControl>
												</Controls>
												<Text>@SYS10340</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>buttonVoucherTrans</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>939524094</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>LedgerTransVoucher1</MenuItemName>
												<SaveRecord>No</SaveRecord>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>VendShowSpecifikation</Name>
												<ElementPosition>1409286141</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>VendShowSpecifikation</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TransTaxInformation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>TransTaxInformation</MenuItemName>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>OverviewGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>fieldError</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>268435454</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>14</Width>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>errorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>402653181</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870908</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_LedgerVoucherType_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>671088636</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>693458258</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_AccountNum</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>AccountName</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Label</Label>
										<ReferenceField>FinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocumentDateGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalInvoiceDate</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1145324608</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_Invoice</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_InvoiceSeries_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceSeries_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_AmountCurDebit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_AmountCurCredit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_TotalAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@AccountsPayable:TotalAmountInTransactionCurrency</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>totalAmountSingleLine</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS3494</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCurrency</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_GroupCurrency</HelpText>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_CurrencyCode</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_CurrencyCode</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CurrencyCode</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7572</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_OffsetAccount</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_OffsetFinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Journal_ColHead_OffsetFinTags</Label>
										<ReferenceField>OffsetFinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupOverview</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupInvoice</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_GroupInvoice</HelpText>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Payment</Name>
												<ElementPosition>891589191</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Payment</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PaymSched</Name>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>PaymSched</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>Due</Name>
												<ElementPosition>1161622477</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Due</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>Due</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PurchIdRange</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataField>PurchIdRange</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Invoice</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1670265058</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Invoice</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataField>Invoice</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_EnterpriseNumber</Name>
												<ElementPosition>1908874352</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_GroupInvoice_EnterpriseNumber</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>EnterpriseNumber</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_CFDIUUID_MX</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>CFDIUUID_MX</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupInvoice_InvoiceSeries_MX</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceSeries_MX</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS12128</Caption>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InvoiceTH</Name>
										<ElementPosition>671088637</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>GroupInvoice_InvoiceDate_TH</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceDate</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>GroupInvoice_InvoiceReceiptDate_TH</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceReceiptDate</DataField>
												<DataSource>LedgerJournalTransExtensionTH</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>Invoice</DataGroup>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupTax</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>taxAmountJournal1</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993456</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_taxAmountJournal1</HelpText>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>taxAmountJournal</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
												<Label>@SYS128996</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>correctedTaxAmount</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_correctedTaxAmount</HelpText>
												<NeededPermission>Manual</NeededPermission>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>correctedTaxAmount</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
												<Label>@SYS128972</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>LedgerJournalTransTaxExtension_AccrueSalesTaxType</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccrueSalesTaxType</DataField>
												<DataSource>LedgerJournalTransTaxExtension</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>LedgerJournalTransTaxExtension_VendorChargedSalesTax</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>VendorChargedSalesTax</DataField>
												<DataSource>LedgerJournalTransTaxExtension</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS22916</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCustoms_IT</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IT</CountryRegionCodes>
										<Type>Group</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>partnerName_IT</Name>
												<AllowEdit>No</AllowEdit>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>partnerName_IT</DataMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>LedgerJournalTrans_Customs_IT_GoodsValue1</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>GoodsValue</DataField>
												<DataSource>LedgerJournalTrans_Customs_IT</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>LedgerJournalTrans_Customs_IT_PaymentAmount</Name>
												<AllowEdit>No</AllowEdit>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>customsPaymentAmount</DataMethod>
												<DataSource>LedgerJournalTrans_Customs_IT</DataSource>
												<Label>@CustomsDocumentsIT:CD_EntityTitle_CustomsPayments_IT</Label>
											</AxFormControl>
										</Controls>
										<Caption>@CustomsDocumentsIT:CD_EntityGroup_Customs</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCashDiscount</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CashDiscCode</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CashDiscCode</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>VirtualCashDiscDate1</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_VirtualCashDiscDate1</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DateCashDisc</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>VirtualCashDiscAmount</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CashDiscAmount</DataField>
												<DataSource>LedgerJournalTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<Caption>@SYS4376</Caption>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@AccountsPayable:VendorInvoiceJournalList</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTab</Name>
						<ElementPosition>642986802</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IdentificationGroup</Name>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN1</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>603979774</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceGroup_Invoice</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Transfer</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transfer</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountGroup</Name>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_AccountGroup</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalAccount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType1</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_AccountNum1</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt1</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AccountAgreementId_RU</Name>
										<ElementPosition>2004318066</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>accountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2075900856</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_AmountCurDebit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_AmountCurCredit</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_CurrencyCode</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@AccountsPayable:AccountFieldGroup</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountInfoGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_OffsetAccountInfoGroup</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<ElementPosition>122713350</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendInvoiceJournalOffsetAccount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetAccountType1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>184070025</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>245426700</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_OffsetAccount1</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>720940936</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetAccountAgreementId_RU</Name>
										<ElementPosition>1196455172</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>offsetAccountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1671969408</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>offsetAccountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11162</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxGroup</Name>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_TaxCode</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_TaxDirectionControl</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxDirectionControl</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@Tax:SalesTaxDirection</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_VatDueDate_W</Name>
										<ElementPosition>1687308579</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_IntraComVATDueDate_W</Name>
										<ElementPosition>1764004423</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxAmountJournal</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_TaxAmountJournal</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>TaxAmountJournal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalCalculatedSalesTax</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_TaxBase_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>PL</CountryRegionCodes>
										<ElementPosition>1994091957</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxBase_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5878</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithIGSTPayment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WithIGSTPayment_WithIGSTPayment</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WithIGSTPayment</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WithIGSTPayment</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WouldYouClaimRefund</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WouldYouClaimRefund_WouldYouClaimRefund</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WouldYouClaimRefund</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WouldYouClaimRefund</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithholdingTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WithholdingTax_IN_TaxWithholdCalculate_TH</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdCalculate_TH</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TaxWithholdGroup</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithholdingTax_IN_TaxWithholdItemGroupHeading_TH_TaxWithholdItemGroup</Name>
												<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TDSGroup_IN</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TCSGroup_IN</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@Tax:WithholdingTax</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReceiptDate_W</Name>
								<ElementPosition>1268967609</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ReceiptDate_W_ReceiptDate_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReceiptDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ReceiptDate_W</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Currency</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtensionIN_AssessableValue_IN</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtensionIN_MaximumRetailPrice_IN</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>fieldTriangulation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_fieldExchRate</HelpText>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>crossrate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>crossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>exchRateTxt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxt</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Caption>@SYS7572</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportingCurrency</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingCrossrate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reportingCurrencyCrossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportingExchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxtForReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GeneralLedger:ReportingCurrency</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Reason</Name>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editReasonCode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReasonCode</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editReasonComment</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReasonComment</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS86426</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GHST</Name>
								<CountryRegionCodes>CA</CountryRegionCodes>
								<ElementPosition>1952257860</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GHST_GSTHSTTaxType_CA</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_GHST_GSTHSTTaxType_CA</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GSTHSTTaxType_CA</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>GSTHSTTaxType_CA</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Item</Name>
								<ElementPosition>2045676449</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Item_LedgerJournalDlvDate_ES</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalDlvDate_ES</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Item</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Markup_RU</Name>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Markup_RU_MarkupCode_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MarkupCode_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Markup_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InvoiceTab</Name>
						<ElementPosition>1071644670</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceTab</HelpText>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PostingProfileGroup</Name>
								<ElementPosition>306783378</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PostingProfile</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_PostingProfile</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfile</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetPostingProfile_RU</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetPostingProfile_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_SettleVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_SettleVoucher</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_VATOnPayment_RU</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATOnPayment_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12919</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceGroup</Name>
								<ElementPosition>460175067</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_PurchIdRange</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>PurchIdRange</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_fieldVATNumJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1811939322</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceGroup_fieldVATNumJournal</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_EnterpriseNumber</Name>
										<ElementPosition>2125114024</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceGroup_EnterpriseNumber</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EnterpriseNumber</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_CFDIUUID_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIUUID_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_InvoiceSeries_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceSeries_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceTH1</Name>
								<ElementPosition>578168671</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>InvoiceGroup_InvoiceDate_TH</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>InvoiceGroup_InvoiceReceiptDate_TH</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Invoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocumentNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_DocumentNum</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocumentDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@AccountsPayable:VendorInvoiceJournalInvoiceDate</Label>
									</AxFormControl>
								</Controls>
								<DataGroup>Document</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document_TH</Name>
								<ElementPosition>743359720</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Document_TaxInvoiceReceiptDate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_RealVendName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RealVendName</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Document_TH_TaxNatureOfAddress</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxNatureOfAddress</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_BranchNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BranchNumber</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_TaxRegNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxRegNum</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxInvoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approve</Name>
								<ElementPosition>766958445</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Approve_Approver</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Approve_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Approved</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Approved</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Approve_InvoiceReleaseDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Approve_InvoiceReleaseDate</HelpText>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Approve_ReleaseDateComment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDateComment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Approve</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_Payment</Name>
										<ElementPosition>1509949435</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Payment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>InvoiceGroup_Due</Name>
										<ElementPosition>905969661</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceGroup_Due</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Due</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymMode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymSpec</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_PaymId</Name>
										<ElementPosition>1207959548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_InvoiceGroup_PaymId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS828</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ThirdPartyBank</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ThirdPartyBank_CustVendBankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_ThirdPartyBank_CustVendBankAccountId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendBankAccountId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ThirdPartyBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupNotificationToTheCentralBank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1380525201</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeText</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeText</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>GroupNotificationToTheCentralBank_ImportDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ImportDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankTransTypeCur_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankTransTypeCur_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU_BankCurrencyTransferId</Name>
												<DataRelationPath>BankCurrencyTransferLog_RU</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>BankCurrencyTransferLog_RU</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankPaymentRegistrationNum_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankPaymentRegistrationNum_LV</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NotificationToTheCentralBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VendInvoiceDeclaration</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS_InvoiceDeclarationId</Name>
												<DataRelationPath>InvoiceDeclarationId_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>VendInvoiceDeclaration_IS</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>VendInvoiceDeclaration</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankLCGroup_SA</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BankDocument</ConfigurationKey>
								<CountryRegionCodes>SA</CountryRegionCodes>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTransBankLC_BankLC</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTransBankLC_BankLC_BankLCNumber</Name>
												<DataRelationPath>BankLC</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransBankLC</DataSource>
										<ReferenceField>BankLC</ReferenceField>
										<ReplacementFieldGroup>LookupIdentification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTransBankLC_MarkupCode_SA</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MarkupCode_SA</DataField>
										<DataSource>LedgerJournalTransBankLC</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS316286</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VatRegister_PL</Name>
								<ElementPosition>1917396112</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendAccount_PL</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendAccount_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_Addressing_PL</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_VatRegister_PL_Addressing_PL</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Addressing_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_VATNumJournal</Name>
										<CountryRegionCodes>PL</CountryRegionCodes>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_VatRegister_PL_VATNumJournal</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendName_PL</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendName_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VatRegister_PL_VatDueDate_W</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VatRegister_PL_IntraComVATDueDate_W</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_TaxPeriodPaymentCode_PL</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxPeriodPaymentCode_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxServiceTariffNumber</Name>
										<ElementPosition>1932735279</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxServiceTariffNumber_ServiceTariffId_PL</Name>
												<DataRelationPath>ServiceTariffNumber_PL</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TaxServiceTariff</DataSource>
										<Label>@GLS115893</Label>
										<ReferenceField>ServiceTariffNumber</ReferenceField>
										<ReplacementFieldGroup>ServiceTariffId</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Correct_RU</Name>
								<ElementPosition>1994091957</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Correct_RU_Correct_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Correct_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Correct_RU_CorrectedInvoiceId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Correct_RU_CorrectedInvoiceId_RU</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedInvoiceId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Correct_RU_CorrectedInvoiceDate_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedInvoiceDate_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Correct_RU_CorrectionType_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectionType_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>Correct_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VATTaxAgentInvoice_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>2070787801</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VATTaxAgentInvoice_RU_VATOperationCode_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATOperationCode_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>VATTaxAgentInvoice_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CFDIWithholdingTax_MX</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CFDIWithholdingTax_MX_WithholdingTypeCode_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WithholdingTypeCode_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIBeneficiaryRetains_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIBeneficiaryRetains_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIFinancialSystem_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIFinancialSystem_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestBelongsDerivedFinOp_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestCashedInTheCurrentPeriod_MX</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestNominalAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestNominalAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestRealAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestRealAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestLossAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestLossAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CFDIWithholdingTax_MX</DataGroup>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12128</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Customs_IT</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>IT</CountryRegionCodes>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CustomsActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>NewDeleteActionPaneTab</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>CustomsPaymentNewDeleteGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>CustomsPaymentNewButton</Name>
														<NeededPermission>Create</NeededPermission>
														<Type>CommandButton</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS2318</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>CustomsPaymentDeleteButton</Name>
														<Type>CommandButton</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS311855</Text>
													</AxFormControl>
												</Controls>
												<DataSource>LedgerJournalTrans_CustomsPayment_IT</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@CustomsDocumentsIT:CD_EntityTitle_CustomsPayments_IT</Caption>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridCustomsPayment</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CustomsPayment_IT_PaymentId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentId</DataField>
										<DataSource>LedgerJournalTrans_CustomsPayment_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_CustomsPayment_IT_PaymentAmount</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentAmount</DataField>
										<DataSource>LedgerJournalTrans_CustomsPayment_IT</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans_CustomsPayment_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Customs</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Invoice1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@CustomsDocumentsIT:CD_EntityHelp_LedgerJournalTrans_Invoice</HelpText>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@CustomsDocumentsIT:CD_EntityTitle_LedgerJournalTrans_Invoice</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_Customs_IT_ItemService</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemService</DataField>
										<DataSource>LedgerJournalTrans_Customs_IT</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_Customs_IT_GoodsValue</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>GoodsValue</DataField>
										<DataSource>LedgerJournalTrans_Customs_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Customs_IT_Invoices</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoices</DataField>
										<DataSource>LedgerJournalTrans_Customs_IT</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>GroupedFieldsLabel</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@CustomsDocumentsIT:CD_EntityGroup_Customs</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CashDiscTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>857315736</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab2</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@SYS60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<DataSource>VendTransCashDisc</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CashDiscGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransCashDisc_CashDiscdate</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_VendTransCashDisc_CashDiscdate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscdate</DataField>
										<DataSource>VendTransCashDisc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransCashDisc_CashDiscAmount</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingAmount</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RemainingAmount</DataMethod>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>VendTransCashDisc</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4376</Caption>
						<DataSource>VendTransCashDisc</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>1285973604</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectIdentificationLedger</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Group_TransDate</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransDate</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<Label>@SYS54242</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Group_AccountNum</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Group_OffsetAccount</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
													<Value>Yes</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
													<Value>LedgerJournal</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_ActivityNumber</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_ProjCategoryId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_ProjLinePropertyId</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Group_ProjLinePropertyId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Correction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>Correction</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS89920</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTransaction</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_ProjTransId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_Txt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS15191</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectCostPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group_ProjQty</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group_CostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Group_CostPrice</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>CostPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_ProjSalesCurrencyId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesCurrencyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group_SalesPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Group_SalesPrice</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>SalesPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesTax</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjTaxGroupSales</Name>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjTaxItemGroupSales</Name>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS4534</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AssetTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1500302538</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>RAssetActionPane</Name>
								<ConfigurationKey>RAsset</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>RAssetActionPaneTab</Name>
										<ConfigurationKey>RAsset</ConfigurationKey>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>RAssetButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>newRAsset</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<NeededPermission>Create</NeededPermission>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS2318</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteRAsset</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<NeededPermission>Delete</NeededPermission>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS311855</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>RAssetPurchTrans</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ConfigurationKey>RAsset</ConfigurationKey>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RAssetPurchTrans_assetId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssetId</DataField>
										<DataSource>RAssetPurchTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RAssetPurchTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedAssetFooter</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AssetTransType</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransType</DataField>
										<DataSource>LedgerJournalTrans_Asset</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AssetBookId</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_AssetBookId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BookId</DataField>
										<DataSource>LedgerJournalTrans_Asset</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DepreciationStartDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_DepreciationStartDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DepreciationStartDate</DataField>
										<DataSource>LedgerJournalTrans_Asset</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS12578</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RemittanceTab</Name>
						<ElementPosition>1714631472</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AddAddress</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>CustDirPartyPostalAddressNew</MenuItemName>
														<NormalImage>New</NormalImage>
														<Text>@SYS111834</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>Remittance_ManageAddress</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>VendDirPartyPostalAddressAdvanced</MenuItemName>
														<NormalImage>Manage</NormalImage>
														<Text>@SYS312927</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group_Remittance</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceTop</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>LedgerJournalTrans_RemittanceLocation</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>LedgerJournalTrans_RemittanceLocation_Description</Name>
														<DataRelationPath>RemittanceLocation_FK</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>RemittanceLocation</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceBottom</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_RemittanceAddress</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_RemittanceAddress</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayRemittanceAddress</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS152838</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>HistoryTab</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1928960406</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentJournalGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReportedAsReadyBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22056</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovedBy1</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ApprovedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RejectedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostedDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PostedDateTime</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24582</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterCompanyGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignCompany</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_ForeignCompany</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_LedgerJournalTrans_ForeignVoucher</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS3805</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TransferGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransferredOn</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredOn</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TransferredBy</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredBy</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TransferredTo</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredTo</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS13220</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ErrorLogGroup</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ErrorLog</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorLog</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22915</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Caption>@SYS25864</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdditionalInfo_MX</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>MX</CountryRegionCodes>
						<ElementPosition>2143988392</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DiotInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DiotInformation_OperationType_MX</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OperationType_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>DiotInformation_MX</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_VendorType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendorType</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Rfc</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_DIOTAddlInfoForNoVendorLedger_MX_Rfc</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Rfc</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Curp</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_DIOTAddlInfoForNoVendorLedger_MX_Curp</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Curp</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Name</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS71494</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Foreign</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_ForeignTaxRegistration</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignTaxRegistration</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_DiotCountryCode</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiotCountryCode</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DIOTAddlInfoForNoVendorLedger_MX_Nationality</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Nationality</DataField>
										<DataSource>DIOTAddlInfoForNoVendorLedger_MX</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS313064</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS106810</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Zakat_SA</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>SA</CountryRegionCodes>
						<ElementPosition>2145736018</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Revenue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Revenue_SalesType</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Revenue_SalesType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesType</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Revenue_ProjId</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Revenue_ProjId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Revenue_SalesId</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Revenue_SalesId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Revenue</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Subcontractor</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Subcontractor_Subcontractor</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Subcontractor_Subcontractor</HelpText>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Subcontractor_Subcontractor_VendAccount</Name>
												<DataRelationPath>VendInfoZakat</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<ReferenceField>Subcontractor</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Subcontractor_ContractNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ContractNum</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Subcontractor</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MaintenanceExpense</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>MaintenanceExpense_AssetGroup</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MaintenanceExpense_AssetGroup_GroupName</Name>
												<DataRelationPath>AssetGroupZakat</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<ReferenceField>AssetGroup</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>MaintenanceExpense</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS321586</Caption>
						<DataSource>LedgerJournalTransZakat_SA</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Tax1099Tab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2146959358</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields1</Name>
								<ElementPosition>787410670</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields1_Tax1099Fields</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_g1099Fields1_Tax1099Fields</HelpText>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields1_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>g1099Fields1_Tax1099State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields1_Tax1099StateAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099G1Fields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1181116005</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_State</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Tax1099G1Fields_State</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>State</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxID</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Tax1099G1Fields_Tax1099StateTaxID</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxID</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxWithheld</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Tax1099G1Fields_Tax1099StateTaxWithheld</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxWithheld</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1936</Caption>
								<DataGroup>Tax1099G1Fields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099GFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1503238552</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Tax1099GFields</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Tax1099GFields_Tax1099TaxYear</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TaxYear</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<LimitText>4</LimitText>
										<LimitTextMode>Fixed</LimitTextMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099GFields_Tax1099TradeOrBusiness</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TradeOrBusiness</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1093</Caption>
								<DataGroup>Tax1099GFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099SFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099S</ConfigurationKey>
								<ElementPosition>1825361099</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Tax1099SFields_Tax1099DateOfClosing</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099DateOfClosing</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099SFields_Tax1099AddressorLegalDesc</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099AddressorLegalDesc</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099SFields_Tax1099PropertyOrServices</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099PropertyOrServices</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099SFields_Tax1099BuyersTax</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099BuyersTax</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Tax1099SFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118159</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ForeignTradeTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForeignTrade</Name>
								<ElementPosition>1687308579</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_TransactionCode</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Codes_TransactionCode</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionCode</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_Transport</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Codes_Transport</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transport</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_Port</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Codes_Port</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Port</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Codes_StatProcId</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatProcId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Codes_Listcode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Codes_Listcode</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Listcode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Data_IntrastatCommodity</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransVendInvoice_Data_IntrastatCommodity</HelpText>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>VendInvoiceIntrastat</DataSource>
										<ReferenceField>IntrastatCommodity</ReferenceField>
										<ReplacementFieldGroup>CommodityCode</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Data_NGPCodesTable_FR</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>Data_NGPCodesTable_FR_NGPCode1</Name>
												<DataRelationPath>NGPCodesTable_FR</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<ReferenceField>NGPCodesTable_FR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Data_IntraUnit</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraUnit</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Data_StatisticsFactor</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StatisticsFactor</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_OrigCountryRegionId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrigCountryRegionId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_OrigStateId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrigStateId</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Data_CountyOrigDest</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CountyOrigDest</DataField>
										<DataSource>VendInvoiceIntrastat</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS27650</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<DataSource>LedgerJournalTrans</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Balances</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TabularBalances</Name>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TableCaption</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AccountingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS333999</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RowHeaderGroup</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnusedColumn</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS35221</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS101235</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherGroup</Name>
								<ElementPosition>1288490187</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>VoucherRowLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS86923</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS12371</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCredit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotal</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalGroup</Name>
								<ElementPosition>1717986916</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>JournalRowTextLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS10018</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS10018</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCredit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalance</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Footer</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalsGroupTabularReportingCurrency</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesCaptionRowReportingCurrency</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ReportingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@GeneralLedger:ReportingCurrency</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsHeaderReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS35221</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS95</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>613566756</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebitReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCreditReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotalReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotalReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>920350134</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebitReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCreditReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalanceReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalanceReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesRowFooterReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BudgetGroup</Name>
						<AllowEdit>No</AllowEdit>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>BudgetCheckResult</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
								<ExtendedStyle>budgetCheckResult_status</ExtendedStyle>
								<PreviewPartRef>BudgetCheckResultPreview</PreviewPartRef>
								<Skip>Yes</Skip>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayBudgetCheckResult</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS342081</Label>
								<Items />
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ColumnsMode>Fill</ColumnsMode>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>