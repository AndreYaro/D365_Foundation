<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>EcoResProductReleasedRecentlyCreatedFormPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class EcoResProductReleasedRecentlyCreatedFormPart extends FormRun implements SysIDataSetConsumerForm, SysIFilterEventHandler
{
    EcoResProductValidator  productValidator;

}
]]></Source>
			</Method>
			<Method>
				<Name>registerDatasourceOnQueryingEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Register the data source to which the filter should be applied.
    /// </summary>
    public void registerDatasourceOnQueryingEvent()
    {
        EcoResProductReleasedRecentlyCreatedDataSetTable_DS.OnQueryExecuting += eventhandler(this.parmDataSetFormQueryEventHandler().prepareDataSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onFilterChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler to react on a filter change.
    /// </summary>
    public void onFilterChanged()
    {
        EcoResProductReleasedRecentlyCreatedDataSetTable_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventTableRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the list of <c>InventTable</c> records from the selected <c>EcoResProductReleasedRecentlyCreatedDataSetTable</c> records.
    /// </summary>
    /// <returns>
    /// A list of <c>InventTable</c> records
    /// </returns>
    private List getInventTableRecords()
    {
        EcoResProductReleasedRecentlyCreatedDataSetTable ecoResProductReleasedSelected = EcoResProductReleasedRecentlyCreatedDataSetTable_ds.getFirst(true);
        if (!ecoResProductReleasedSelected)
        {
            ecoResProductReleasedSelected = EcoResProductReleasedRecentlyCreatedDataSetTable_ds.cursor();
        }

        List        inventTableRecords = new List(Types::Record);
        InventTable inventTable;
        while (ecoResProductReleasedSelected)
        {
            inventTable = InventTable::find(ecoResProductReleasedSelected.ItemId);
            inventTableRecords.addEnd(inventTable);
            ecoResProductReleasedSelected = EcoResProductReleasedRecentlyCreatedDataSetTable_ds.getNext();
        }

        return inventTableRecords;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openFormWithInventTable</Name>
				<Source><![CDATA[
    private void openFormWithInventTable(str _menuitemDisplayStr, Common _common, boolean _copyCallerQuery = false)
    {
        Args args = new Args();
        args.record(_common);
        args.caller(this);
        args.copyCallerQuery(_copyCallerQuery);
        MenuFunction menuFunction = new MenuFunction(_menuitemDisplayStr, MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        // Reverting to legacy grid for horizontal layout of card list
        this.forceLegacyGrid();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EcoResProductReleasedRecentlyCreatedDataSetTable</Name>
				<Methods>
					<Method>
						<Name>checkFieldValuesSet</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates essential field values being set for the products.
        /// </summary>
        /// <param name = "_ecoResProductReleasedRecentlyCreatedDataSetTable">The <c>EcoResProductReleasedRecentlyCreatedDataSetTable</c> record.</param>
        /// <returns>If validation fails return warning with number of field misising; otherwise blank.</returns>
        display str checkFieldValuesSet(EcoResProductReleasedRecentlyCreatedDataSetTable _ecoResProductReleasedRecentlyCreatedDataSetTable)
        {
            productValidator = EcoResProductValidator::construct(InventTable::find(_ecoResProductReleasedRecentlyCreatedDataSetTable.ItemId));
            if (productValidator.isEssentialFieldValuesSet())
            {
                return "@SCM:ReleasedProductValidationPassed";
            }
            else
            {
                return strfmt("@SCM:ReleasedProductValidationWarning", productValidator.errorFieldList().elements());
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>productImageThumbnail</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get the product image thumbnail.
        /// </summary>
        /// <param name = "_ecoResProductReleasedRecentlyCreatedDataSetTable">The <c>EcoResProductReleasedRecentlyCreatedDataSetTable</c> record.</param>
        /// <returns>Image thumbnail if found ; otherwise blank.</returns>
        display container productImageThumbnail(EcoResProductReleasedRecentlyCreatedDataSetTable _ecoResProductReleasedRecentlyCreatedDataSetTable)
        {
            return InventTable::find(_ecoResProductReleasedRecentlyCreatedDataSetTable.ItemId).productImageThumbnail();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Open the product details instead of the product information dialog.
            /// </summary>
            public void jumpRef()
            {
                InventTable::jumpRefItemId(EcoResProductReleasedRecentlyCreatedDataSetTable.ItemId, OpenMode::View);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>EngineeringChangeGroupCreateCase</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // Resolved the selected records into <c>InventTable</c> records and associate them and related product parent.
            CaseDetailFormCreate::createFromRecordList(
                element.getInventTableRecords(), 
                InventTable::find(ecoResProductReleasedRecentlyCreatedDataSetTable.ItemId),
                CaseCategoryType::EngineeringChange);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProductAttributes</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.openFormWithInventTable(this.menuItemName(), EcoResProduct::find(EcoResProductReleasedRecentlyCreatedDataSetTable.Product));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProductCategory</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.openFormWithInventTable(this.menuItemName(), EcoResProduct::find(EcoResProductReleasedRecentlyCreatedDataSetTable.Product));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventItemOrderSetupDefault</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.openFormWithInventTable(this.menuItemName(), InventTable::find(EcoResProductReleasedRecentlyCreatedDataSetTable.ItemId));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EcoResProductTranslationAction</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.openFormWithInventTable(this.menuItemName(), EcoResProduct::find(EcoResProductReleasedRecentlyCreatedDataSetTable.Product));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductReleasedRecentlyCreatedDataSetTable</Name>
			<Table>EcoResProductReleasedRecentlyCreatedDataSetTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysDataCacheContextId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
				<Pattern>FiltersAndToolbarInline</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>QuickFilterControl</Name>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>ReleasedProducts</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
											<Value>InventTable_NameAlias</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Buttons</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>EngineeringChangeGroupCreateCase</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
										<MenuItemName>EngChgCaseNewReleasedProduct</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS131512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProductAttributes</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
										<MenuItemName>EcoResAttributeValue</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProductCategory</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
										<MenuItemName>EcoResProductCategory</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventItemOrderSetupDefault</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
										<MenuItemName>InventItemOrderSetupAction</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>EcoResProductTranslationAction</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
										<MenuItemName>EcoResProductTranslation</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>ReleasedProducts</Name>
				<ExtendedStyle>cardList</ExtendedStyle>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BusinessCardGroup</Name>
						<ExtendedStyle>BusinessCard</ExtendedStyle>
						<Pattern>BusinessCardIndicator</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormImageControl">
								<Name>InventTable_ImageThumbnail</Name>
								<Type>Image</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>productImageThumbnail</DataMethod>
								<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
								<Label>@SCM:ProductImage</Label>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventTable_ItemId</Name>
								<ExtendedStyle>Heading</ExtendedStyle>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventTable_NameAlias</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>NameAlias</DataField>
								<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ItemValidationCheck</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ExtendedStyle>Footer1</ExtendedStyle>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ChangeCase>UpperCase</ChangeCase>
								<DataMethod>checkFieldValuesSet</DataMethod>
								<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
								<Label>@SYS4440</Label>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>None</ArrangeMethod>
						<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
						<Style>Card</Style>
					</AxFormControl>
				</Controls>
				<DataSource>EcoResProductReleasedRecentlyCreatedDataSetTable</DataSource>
				<Style>List</Style>
				<VisibleCols>0</VisibleCols>
				<VisibleColsMode>Fixed</VisibleColsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormMenuFunctionButtonControl">
				<Name>ViewDetails</Name>
				<Type>MenuFunctionButton</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<CopyCallerQuery>No</CopyCallerQuery>
				<FormViewOption>Details</FormViewOption>
				<MenuItemName>EcoResProductDetailsExtended</MenuItemName>
				<MultiSelect>No</MultiSelect>
				<NeedsRecord>Yes</NeedsRecord>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>