<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailApproveB2B2BProspectWithSelectedChannel</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailApproveB2B2BProspectWithSelectedChannel extends FormRun
{
    smmBusRelTable b2b2bProspect;
    RetailSmmBusRelTable retailSmmBusRelTable;
    boolean sendEmail; // Send email after approving if true.

    NumberSeqStringControlHelper numberSeqChannelId;
    NumberSeqStringControlHelper numberSeqOmOperatingUnitId;
    NumberSeqStringControlHelper numberSeqPersonnelNumber;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the form.
    /// </summary>
    public void init()
    {
        super();

        FormRun caller = element.args().caller();
        if (element.args().record() && element.args().record().TableId == tablenum(smmBusRelTable))
        {
            b2b2bProspect = element.args().record();
            sendEmail = str2Int(element.args().parm());

            element.validateProspect();
            element.initSellerChannelName();
            element.initNumberSequence();
        }
        else
        {
            throw error('@Retail:CannotFindProspectForApprovingErrorMessage');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqChannelId</Name>
				<Source><![CDATA[
    NumberSeqStringControlHelper numberSeqChannelId()
    {
        if (!numberSeqChannelId)
        {
            numberSeqChannelId = NumberSeqStringControlHelper::newStringControl(
                RetailParameters::numRefRetailChannelId().NumberSequenceId,
                SellerChannelId,
                tableNum(RetailChannelTable),
                fieldNum(RetailChannelTable, RetailChannelId));
        }

        return numberSeqChannelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqOmOperatingUnitId</Name>
				<Source><![CDATA[
    NumberSeqStringControlHelper numberSeqOmOperatingUnitId()
    {
        if (!numberSeqOmOperatingUnitId)
        {
            numberSeqOmOperatingUnitId = NumberSeqStringControlHelper::newStringControl(
                OMOperatingUnit::getNumberSequenceReference(OMOperatingUnitType::RetailChannel).NumberSequenceId,
                OMOperatingUnitNumber,
                tableNum(OMOperatingUnit),
                fieldNum(OMOperatingUnit, OMOperatingUnitNumber));
        }

        return numberSeqOmOperatingUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqPersonnelNumber</Name>
				<Source><![CDATA[
    NumberSeqStringControlHelper numberSeqPersonnelNumber()
    {
        if (!numberSeqPersonnelNumber)
        {
            numberSeqPersonnelNumber = NumberSeqStringControlHelper::newStringControl(
                NumberSeqReference::findReference(extendedTypeNum(HcmPersonnelNumberId)).NumberSequenceId,
                SellerChannelRetailWorkerId,
                tableNum(HcmWorker),
                fieldNum(HcmWorker, PersonnelNumber));
        }

        return numberSeqPersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSellerChannelName</Name>
				<Source><![CDATA[
    private void initSellerChannelName()
    {
        RetailSmmBusRelTable b2bProspect;
        select firstonly CompanyName from b2bProspect where b2bProspect.smmBusRelTable == b2b2bProspect.RecId;
        SellerChannelName.text(b2bProspect.CompanyName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initNumberSequence</Name>
				<Source><![CDATA[
    private void initNumberSequence()
    {
        element.numberSeqChannelId().newNumber();
        element.numberSeqOmOperatingUnitId().newNumber();
        if (!retailSmmBusRelTable.IsPromoteProspect)
        {
            element.numberSeqPersonnelNumber().newNumber();
        }
        else
        {
            SellerChannelRetailWorkerId.visible(false);
            SellerChannelRetailWorkerId.mandatory(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNumberSequence</Name>
				<Source><![CDATA[
    private void validateNumberSequence()
    {
        if (!numberSeqChannelId.validateWrite())
        {
            error('@Retail:InvalidSellerChannelIdErrorMessage');
        }

        if (!numberSeqOmOperatingUnitId.validateWrite())
        {
            error('@Retail:InvalidOmOperatingUnitNumberErrorMessage');
        }
        
        if (!retailSmmBusRelTable.IsPromoteProspect && !numberSeqPersonnelNumber.validateWrite())
        {
            error('@Retail:InvalidSellerChannelRetailWorkerIdErrorMessage');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeNumberSequence</Name>
				<Source><![CDATA[
    private void writeNumberSequence()
    {
        numberSeqChannelId.write();
        numberSeqOmOperatingUnitId.write();
        if (!retailSmmBusRelTable.IsPromoteProspect)
        {
            numberSeqPersonnelNumber.write();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Convert B2B2B prospect to B2B2B customer when Ok button is clicked.
    /// </summary>
    public void closeOk()
    {
        super();

        RetailOnlineChannelTable templateOnlineChannel;
        select firstonly templateOnlineChannel
            where templateOnlineChannel.RetailChannelId == RetailChannelId.text() &&
                templateOnlineChannel.CustomerType == OnlineStoreCustomerType::B2B;

        if (!templateOnlineChannel)
        {
            error('@Retail:TemplateRetailOnlineChannelNotExistErrorMessage');
        }
        else
        {
            element.validateNumberSequence();

            RetailSmmBusRelTableHelper::convertB2B2BProspectToB2B2BCustomer(
                b2b2bProspect,
                templateOnlineChannel.RecId,
                SellerChannelId.text(),
                SellerChannelName.text(),
                OMOperatingUnitNumber.text(),
                SellerChannelRetailWorkerId.text(),
                sendEmail);

            element.writeNumberSequence();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProspect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prevent invalid prospect from being approved.
    /// </summary>
    private void validateProspect()
    {
        select firstonly retailSmmBusRelTable
            where retailSmmBusRelTable.smmBusRelTable == b2b2bProspect.RecId;

        if (!retailSmmBusRelTable)
        {
            throw error('@Retail:CannotFindProspectForApprovingErrorMessage');
        }

        if (retailSmmBusRelTable.ProspectType != RetailProspectType::BuyerSeller)
        {
            throw error('@Retail:NotBuyerSellerProspectErrorMessage');
        }

        if (retailSmmBusRelTable.B2BProspectStatus != RetailB2BProspectStatus::Pending)
        {
            throw error('@Retail:ApproveNotPendingProspectErrorMessage');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        super();

        element.numberSeqChannelId().cancel();
        element.numberSeqOmOperatingUnitId().cancel();
        if (!retailSmmBusRelTable.IsPromoteProspect)
        {
            element.numberSeqPersonnelNumber().cancel();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>RetailChannelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Look up the retail channel id as the template channel.
        /// </summary>
        public void lookup()
        {
            Query query = new Query();
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(RetailOnlineChannelNameView), this);

            QueryBuildDataSource qbdsRetailOnlineChannelNameView = query.addDataSource(tableNum(RetailOnlineChannelNameView));
            qbdsRetailOnlineChannelNameView.addSortField(fieldNum(RetailOnlineChannelNameView, RetailChannelId));
            QueryBuildRange qbrRetailOnlineChannelNameViewCustomerType = qbdsRetailOnlineChannelNameView.addRange(fieldNum(RetailOnlineChannelNameView, CustomerType));
            // Only B2B online store can be selected as template channel.
            qbrRetailOnlineChannelNameViewCustomerType.value(enum2Value(OnlineStoreCustomerType::B2B));

            sysTableLookup.addLookupfield(fieldNum(RetailOnlineChannelNameView, RetailChannelId));
            sysTableLookup.addLookupfield(fieldNum(RetailOnlineChannelNameView, Name));
            sysTableLookup.addSelectionfield(fieldNum(RetailOnlineChannelNameView, RetailChannelId));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SellerChannelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
    
            ret = super();

            if (RetailChannelIdFormControlHelper::getRetailChannelIdNumberSequenceManualStatus() == NoYes::Yes &&
                !AifUtil::isAlphaNumeric(this.text()))
            {
                ret = checkFailed(strFmt("@Retail:RetailChannelIdNotAlphaNumeric", this.text(), fieldPName(RetailChannelTable, RetailChannelId)));
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Retail:RetailApproveB2B2BProspectWithSelectedChannelLabel</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>InstructionGroup</Name>
				<Pattern>FillText</Pattern>
				<PatternVersion>UX7 1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>Instruction</Name>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>StaticText</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@Retail:RetailApproveB2B2BProspectWithSelectedChannelText</Text>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Content</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailChannelId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Retail:TemplateOnlineChannelLabel</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SellerChannelId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Retail:SellerChannelIdLabel</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SellerChannelName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Retail:SellerChannelNameLabel</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>OMOperatingUnitNumber</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS319848</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SellerChannelRetailWorkerId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Retail:SellerChannelRetailWorkerIdLabel</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommit</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>