<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ConfGenericLookup_BR</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class ConfGenericLookup_BR extends FormRun
    {
        #ConfMacros_BR

        Container       choices;
        Runbase         runbase;
        int             choice;
        boolean         afterRun;
        imageList       imagelist;

}
]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    void caption(str _caption)
    {
        element.design().caption(_caption);
    }

]]></Source>
			</Method>
			<Method>
				<Name>choice</Name>
				<Source><![CDATA[
    str choice()
    {
        str ret;

        if (choice != -1
            && list.getitem(choice))
        {
            ret = list.getItem(choice).text();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>choiceInt</Name>
				<Source><![CDATA[
    int choiceInt()
    {
        return choice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>choices</Name>
				<Source><![CDATA[
    void choices(Container _choices, imageRes _imageRes = 0)
    {
        choices     = _choices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    void closeCancel()
    {
        choice = -1;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeForm</Name>
				<Source><![CDATA[
    void closeForm()
    {
        if (runBase && ! runBase.checkCloseDialog())
        {
            return;
        }

        if (runbase)
        {
            element.closeOk();
        }
        else
        {
            element.closeSelect(this.choice());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();
        choice  = -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>list</Name>
				<Source><![CDATA[
    FormListControl list()
    {
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resizeWindow</Name>
				<Source><![CDATA[
    void resizeWindow(int x, int y)
    {
        list.width (x);
        list.height(y);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        Counter         i;
        FormListItem    formListItem;

        super();

        list.addColumn(1, new FormListColumn(#None, 1, 200));

        for (i = ConLen(choices); i >= 1 ; i--)
        {
            formListItem = new FormListItem(ConPeek(choices, i));
            list.addItem(formListItem);
        }

        list.oneClickActivate(true);
        list.twoClickActivate(true);
        list.activateItem(0);

        formListItem = list.getitem(0);
        if (formListItem)
        {
            formListItem.stateFocus(true);
            formListItem.stateSelected(true);
            list.setItem(formListItem);
        }
        list.setFocus();

        afterRun = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runbase</Name>
				<Source><![CDATA[
    void runbase(Runbase _runbase)
    {
        runbase = _runbase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    int task(int p1)
    {
        int ret;

        ret = super(p1);

        switch (p1)
        {
            case 288:
                element.closeForm();
                break;

            case 1313:
                element.closeCancel();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>List</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>activateItem</Name>
						<Source><![CDATA[
        void activateItem(int idx)
        {
            super(idx);

            if (afterRun)
            {
                element.closeForm();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        void selectionChanged(int idx, anytype Data)
        {
            super(idx, Data);

            choice = idx;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AllowUserSetup xmlns="">No</AllowUserSetup>
		<Caption xmlns="">@SYS11584</Caption>
		<Frame xmlns="">None</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormListViewControl">
				<Name>List</Name>
				<AlignControl>Yes</AlignControl>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ListView</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Border>None</Border>
				<ColumnHeader>No</ColumnHeader>
				<ItemAlign>Left</ItemAlign>
				<OneClickActivate>Yes</OneClickActivate>
				<ShowSelAlways>No</ShowSelAlways>
				<Sort>Ascending</Sort>
				<TwoClickActivate>Yes</TwoClickActivate>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>