<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSQueryPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSQueryPart extends FormRun implements WHSIQueryPart
{
    private FieldName queryFieldName;
    private FieldName queryNameFieldName1;
    private FieldName queryNameFieldName2;
    private str queryNameFormat;
    private QueryRun defaultQueryRun;
    private WHSIQueryPartCallback callerCallbackObject;
    private Common record;
    private container packedQuery;
    private container queryNameValue;
    private container queryNameValue2;
    private FormDataSource explicitFormDataSource;

    private boolean isRangeActivated;
    private boolean isSortingActivated;
    private boolean isThereTwoGrids;

    private boolean isShowSorting = true;
    private boolean isLoadLastUsedQuery = true;
    private boolean allowSave = true;
    private boolean isEnabled = true;
    private boolean isInitiated = false;
    private boolean isShowEmptyTable = false;

}
]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    public WHSIQueryPart initialize(FieldName _queryFieldName,
                                    str _queryNameFormat,
                                    FieldName _queryNameFieldName1,
                                    QueryRun _defaultQueryRun, 
                                    boolean _isRangeActivated, 
                                    boolean _isSortingActivated, 
                                    FieldName _queryNameFieldName2,
                                    boolean _isShowSorting, 
                                    boolean _isLoadLastUsedQuery, 
                                    boolean _allowSave,
                                    FormDataSource _explicitFormDataSource)
    {
        queryFieldName = _queryFieldName;
        queryNameFormat = _queryNameFormat;
        queryNameFieldName1 = _queryNameFieldName1;
        defaultQueryRun = _defaultQueryRun;
        isRangeActivated = _isRangeActivated;
        isSortingActivated = _isSortingActivated;
        queryNameFieldName2 = _queryNameFieldName2;
        isShowSorting = _isShowSorting;
        isLoadLastUsedQuery = _isLoadLastUsedQuery;
        allowSave = _allowSave;
        explicitFormDataSource = _explicitFormDataSource;

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        if(!isInitiated)
        {
            return;
        }

        if(isShowEmptyTable)
        {
            return;
        }

        element.updateQuery();

        if(TmpPrimary_ds != null)
        {
            element.bindRangeGrid();
        }

        if(TmpSecondary_ds != null)
        {
            element.bindSortingGrid();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clear</Name>
				<Source><![CDATA[
    public void clear()
    {
        if(!isInitiated)
        {
            return;
        }

        if(isShowEmptyTable)
        {
            return;
        }

        if(TmpPrimary_ds != null)
        {
            TmpSysQuery setupRange;
            TmpPrimary.setTmpData(setupRange);
            TmpPrimary_ds.research();
        }

        if(TmpSecondary_ds != null)
        {
            TmpSysQuery setupSort;
            TmpSecondary.setTmpData(setupSort);
            TmpSecondary_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptEnable</Name>
				<Source><![CDATA[
    public boolean promptEnable(boolean _isEnabled = isEnabled)
    {
        isEnabled = _isEnabled;

        if(isInitiated)
        {
            if(PrimaryFormGroup)
            {
                PrimaryFormGroup.enabled(isEnabled);
            }

            if(SecondaryFormGroup)
            {
                SecondaryFormGroup.enabled(isEnabled);
            }
        }

        return isEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPartData</Name>
				<Source><![CDATA[
    public void showPartData()
    {
        isShowEmptyTable = false;

        this.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hidePartData</Name>
				<Source><![CDATA[
    public void hidePartData()
    {

        this.clear();
        isShowEmptyTable = true;


    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        isInitiated = true;

        record = element.args().record();
        callerCallbackObject = element.args().caller() as WHSIQueryPartCallback;
        
        isThereTwoGrids = isRangeActivated && isSortingActivated;

        element.refresh();

        if(isThereTwoGrids)
        {
            PrimaryFormGroup.visible(true);
            SecondaryFormGroup.visible(true);
        }
        else
        {
            PrimaryFormGroup.visible(true);
            SecondaryFormGroup.visible(false);
            PrimaryFormGroup.caption("");
            SecondaryFormGroup.caption("");
        }

        PrimaryFormGroup.enabled(isEnabled);
        SecondaryFormGroup.enabled(isEnabled);
        
        if (FormDataUtil::isFormDataSource(record) && !explicitFormDataSource)
        {
            FormDataSource dataSource = FormDataUtil::getFormDataSource(record) as FormDataSource;
            dataSource.OnSelectionChanged += eventhandler(element.onDataSourceSelectionChanged);
            dataSource.OnDeleted += eventhandler(element.onDataSourceDeleted);
        }

        if(explicitFormDataSource)
        {
            explicitFormDataSource.OnSelectionChanged += eventhandler(element.onDataSourceSelectionChanged);
            explicitFormDataSource.OnDeleted += eventhandler(element.onDataSourceDeleted);
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDataSourceSelectionChanged</Name>
				<Source><![CDATA[
    private void onDataSourceSelectionChanged(FormDataSource _formDataSource, FormDataSourceEventArgs _formDataSourceEventArgs)
    {
        element.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDataSourceDeleted</Name>
				<Source><![CDATA[
    private void onDataSourceDeleted(FormDataSource _formDataSource, FormDataSourceEventArgs _formDataSourceEventArgs)
    {
        element.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    private void updateQuery()
    {
        if(!isInitiated)
        {
            return;
        }

        if(!queryFieldName)
        {
            packedQuery = conNull();
            return;
        }

        packedQuery = record.getFieldValue(queryFieldName);

        if(queryNameFieldName1)
        {
            queryNameValue = record.getFieldValue(queryNameFieldName1);
        }

        if(queryNameFieldName2)
        {
            queryNameValue2 = record.getFieldValue(queryNameFieldName2);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindRangeGrid</Name>
				<Source><![CDATA[
    private void bindRangeGrid()
    {
        if(!isInitiated)
        {
            return;
        }

        if(!packedQuery)
        {
            element.clear();
            return;
        }

        if(!isRangeActivated)
        {
            return;
        }

        Query query = new Query(packedQuery);

        if(query == null)
        {
            return;
        }

        TmpSysQuery setupRange;

        var dsCount = query.dataSourceCount();
        for (var dsNum = 1; dsNum <= dsCount; ++dsNum)
        {
            var datasource = query.dataSourceNo(dsNum);
            
            if (WHSQueryPartSelectRangesOnlyFromEnabledDatasourcesFlight::instance().isEnabled() && !datasource.enabled())
            {
                continue;
            }
            
            var rangeCount = datasource.rangeCount();
            for (var rangeNum = 1; rangeNum <= rangeCount; ++rangeNum)
            {
                QueryBuildRange range = datasource.range(rangeNum);
                RangeStatus status = range.status();
                if (range.value() != '' && (status == RangeStatus::Open || status == RangeStatus::Locked))
                {
                    setupRange.clear();

                    TableId tableId = range.table();
                    str tableName = tableId2PName(tableId);
                    FieldName fieldName = range.fieldName();

                    DictField sysDictField = SysDictField::findFieldByName(tableId2Name(tableId), fieldName);
                    str fieldValue = range.value();
                    if (sysDictField && Types::UtcDateTime == sysDictField.baseType())
                    {
                        fieldValue =  DateTimeUtil::applyTimeZoneOffsetRange(range);
                    }

                    setupRange.FieldLabel = sysDictField.label();
                    setupRange.RangeValue = fieldValue;
                    setupRange.Tablelabel = tableName;
                    setupRange.insert();
                }
            }
        }
        var queryFilterCount = query.queryFilterCount();
        for (var qfNum = 1; qfNum <= queryFilterCount; ++qfNum)
        {
            QueryFilter queryFilter = query.queryFilter(qfNum);
            if (queryFilter.value() != '')
            {
                setupRange.clear();

                TableId tableId = queryFilter.dataSource().table();
                str tableName = tableId2PName(tableId);

                DictField sysDictField = SysDictField::findFieldByName(tableId2Name(tableId), queryFilter.field());
                str fieldValue = queryFilter.value();
                if (sysDictField && Types::UtcDateTime == sysDictField.baseType())
                {
                    fieldValue =  DateTimeUtil::applyTimeZoneOffsetFilter(queryFilter);
                }

                setupRange.FieldLabel = sysDictField.label();
                setupRange.RangeValue = fieldValue;
                setupRange.Tablelabel = tableName;
                setupRange.insert();
            }
        }

        TmpPrimary.setTmpData(setupRange);
        TmpPrimary_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindSortingGrid</Name>
				<Source><![CDATA[
    private void bindSortingGrid()
    {
        if(!isInitiated)
        {
            return;
        }

        if(!packedQuery)
        {
            element.clear();
            return;
        }

        if(!isSortingActivated)
        {
            return;
        }

        Query query = new Query(packedQuery);

        if(query == null)
        {
            return;
        }

        TmpSysQuery setupSorting;
        SysDictEnum dictEnum = new SysDictEnum(enumnum(SortOrder));

        var orderByFieldCount = query.orderByFieldCount();
        for (var oNum = 1; oNum <= orderByFieldCount; ++oNum)
        {
            QueryOrderByField queryOrderByField = query.orderByField(oNum);
            TableId tableId = queryOrderByField.dataSource().table();
            str tableName = tableId2PName(tableId);

            int arrayIndex = new DictField(tableId, queryOrderByField.fieldID()).arrayIndex();

            setupSorting.clear();
            setupSorting.FieldLabel = fieldId2PName(tableId, queryOrderByField.fieldID(), arrayIndex);
            setupSorting.RangeValue = dictEnum.value2Label(queryOrderByField.direction());
            setupSorting.Tablelabel = tableName;
            setupSorting.insert();
        }

        if(isThereTwoGrids)
        {
            TmpSecondary.setTmpData(setupSorting);
            TmpSecondary_ds.research();
        }
        else
        {
            TmpPrimary.setTmpData(setupSorting);
            TmpPrimary_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clickToEdit</Name>
				<Source><![CDATA[
    private void clickToEdit()
    {
        if(!isInitiated)
        {
            return;
        }

        QueryRun defaultQuery = new QueryRun(packedQuery);
        SysQueryRun sysQueryRun = WHSFormHelper::initializeQueryRunForEditing(
                packedQuery,
                strFmt(queryNameFormat, queryNameValue, queryNameValue2),
                defaultQueryRun);

        sysQueryRun.promptShowSorting(isShowSorting);
        sysQueryRun.promptLoadLastUsedQuery(isLoadLastUsedQuery);
        sysQueryRun.promptAllowSave(allowSave);

        if (sysQueryRun.prompt())
        {
            packedQuery = sysQueryRun.pack();
           
            if(isRangeActivated)
            {
                element.bindRangeGrid();
            }

            if(isSortingActivated)
            {
                element.bindSortingGrid();
            }

            if(callerCallbackObject != null)
            {
                callerCallbackObject.queryUpdated(element, packedQuery);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>FieldRange</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueRange</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TableRange</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
    
            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FieldSorting</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueSorting</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
    
            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TableSorting</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
            
            element.clickToEdit();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpPrimary</Name>
			<Table>TmpSysQuery</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AggregateFunction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoSum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSourceNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtendedFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Field_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldArrayNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageRes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFilterExplicitlyAdded</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOriginalTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsQueryFilter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSurrogateFKReplacement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsValidTimeField</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsVisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Item</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Parent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prefix_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrefixLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueryAutoHeaderDetailLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueryAutoSumDetailLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeBelongsToCompositeQuery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RestrictedRangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SFKRecIdRelativeFieldBinding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SFKReplacementRelativeFieldBinding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SortingDirection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SortingNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Table_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tablelabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableOccurrence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpSecondary</Name>
			<Table>TmpSysQuery</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AggregateFunction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoSum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSourceNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtendedFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Field_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldArrayNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageRes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFilterExplicitlyAdded</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOriginalTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsQueryFilter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSurrogateFKReplacement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsValidTimeField</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsVisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Item</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Parent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prefix_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrefixLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueryAutoHeaderDetailLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueryAutoSumDetailLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeBelongsToCompositeQuery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RangeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RestrictedRangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SFKRecIdRelativeFieldBinding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SFKReplacementRelativeFieldBinding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SortingDirection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SortingNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Table_Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tablelabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableOccurrence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<ArrangeMethod xmlns="">HorizontalLeft</ArrangeMethod>
		<Caption xmlns="">Query</Caption>
		<Pattern xmlns="">FormPartSectionListDouble</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>PrimaryFormGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>group_sideBySidePrimary</ExtendedStyle>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>PrimaryGrid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FieldRange</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>FieldLabel</DataField>
								<DataSource>TmpPrimary</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ValueRange</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RangeValue</DataField>
								<DataSource>TmpPrimary</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TableRange</Name>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>Tablelabel</DataField>
								<DataSource>TmpPrimary</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TmpPrimary</DataSource>
						<HighlightActive>No</HighlightActive>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>SimpleReadOnly</Style>
						<VisibleRows>5</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<Caption>@SYS40305</Caption>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SecondaryFormGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>group_sideBySideSecondary</ExtendedStyle>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>SecondaryGrid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FieldSorting</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>FieldLabel</DataField>
								<DataSource>TmpSecondary</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ValueSorting</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RangeValue</DataField>
								<DataSource>TmpSecondary</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TableSorting</Name>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>Tablelabel</DataField>
								<DataSource>TmpSecondary</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TmpSecondary</DataSource>
						<HighlightActive>No</HighlightActive>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>SimpleReadOnly</Style>
						<VisibleRows>5</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<Caption>@SYS4138</Caption>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>