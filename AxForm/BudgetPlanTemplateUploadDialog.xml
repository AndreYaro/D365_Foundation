<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetPlanTemplateUploadDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetPlanTemplateUploadDialog extends FormRun
{
    private DocuTemplateUploadResult previousUploadResult = null;
    BudgetPlanLayout callerBudgetPlanLayout;
    OfficeAppApplicationType documentType;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs actions required to initialize this form.
    /// </summary>
    public void init()
    {
        super();

        TemplateFileUpload.notifyUploadCompleted += eventhandler(this.templateFileUpload_OnUploadCompleted);

        if (element.args().menuItemName() == menuItemDisplayStr(BudgetPlanJustificationUpload))
        {
            documentType = OfficeAppApplicationType::Word;
        }
        else
        {
            callerBudgetPlanLayout = element.args().record() as BudgetPlanLayout;
            documentType = OfficeAppApplicationType::Excel;
        }

        boolean displayJustificationControls = documentType == OfficeAppApplicationType::Word;
        Upload_DisplayName.visible(displayJustificationControls);
        Upload_Description.visible(displayJustificationControls);
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs actions upon closing the form.
    /// </summary>
    public void close()
    {
        super();

        TemplateFileUpload.notifyUploadCompleted -= eventhandler(this.templateFileUpload_OnUploadCompleted);

        FormRun callingForm = element.args().caller();
        if (callingForm != null && callingForm.name() == formStr(BudgetPlanJustificationTemplate))
        {
            FormDataSource docuTemplateDataSource = callingForm.dataSource(tableStr(BudgetPlanTemplate));
            if (docuTemplateDataSource != null)
            {
                docuTemplateDataSource.research();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateFileUpload_OnUploadCompleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the OnUploadCompleted event for the TemplateFileUpload control.
    /// </summary>
    private void templateFileUpload_OnUploadCompleted()
    {
        DocuTemplateUploadResult uploadResult = TemplateFileUpload.getFileUploadResult() as DocuTemplateUploadResult;

        if (uploadResult != null)
        {
            // If a previous result exists, it needs to be deleted
            if (previousUploadResult != null)
            {
                previousUploadResult.deleteResult();
                previousUploadResult = null;
            }

            if (uploadResult.getUploadStatus())
            {
                previousUploadResult = uploadResult;

                if (documentType == OfficeAppApplicationType::Excel)
                {
                    BudgetPlanTemplateManager::validateTemplate(previousUploadResult, callerBudgetPlanLayout.RecId);
                }

                // Enable the Ok button and display the filename
                Upload_FileNameLabel.text(previousUploadResult.getFileName());
                OKButton.enabled(previousUploadResult != null);
            }
            else
            {
                error(uploadResult.getLogMessage());
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event for the OK button.
        /// </summary>
        public void clicked()
        {
            if (previousUploadResult == null)
            {
                throw error("@ApplicationPlatform:FileUploadFailed");
            }

            Description255          templateDescription;
            DocuTemplateDisplayName templateName = callerBudgetPlanLayout.Name;

            if (documentType == OfficeAppApplicationType::Word)
            {
                templateName = Upload_DisplayName.text();
                templateDescription = Upload_Description.text();
            }

            BudgetPlanTemplateManager::createDocumentTemplate(previousUploadResult, templateName, documentType, templateName, templateDescription);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CancelButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event for the Cancel button.
        /// </summary>
        public void clicked()
        {
            // If a file was uploaded but no template was saved, delete the uploaded template.
            if (previousUploadResult != null)
            {
                previousUploadResult.deleteResult();
                previousUploadResult = null;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Budget:TemplateUploadDialogLabel</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FileUploadGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>TemplateFileUpload</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<FormControlExtension>
									<Name>FileUpload</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>fileTypesAccepted</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>fileNameLabel</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>browseText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>style</Name>
											<Type>Enum</Type>
											<TypeName>FileUploadStyle</TypeName>
											<Value>Minimal</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>baseFileUploadStrategyClassName</Name>
											<Type>String</Type>
											<Value>DocuTemplateUploadStrategy</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>imageMaxWidth</Name>
											<Type>Int32</Type>
											<Value>0</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>imageMaxHeight</Name>
											<Type>Int32</Type>
											<Value>0</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Upload_FileNameLabel</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>75</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ExtendedDataType>Filename</ExtendedDataType>
								<Label>@ApplicationFoundation:DocuTemplate_UploadedFileNameCaption</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Upload_DisplayName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>75</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ExtendedDataType>DocuTemplateDisplayName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Upload_Description</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>75</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ExtendedDataType>Description255</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Caption>@ApplicationFoundation:DocuTemplate_UploadDialogCaption</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitContainer</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>