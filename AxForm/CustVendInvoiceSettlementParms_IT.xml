<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustVendInvoiceSettlementParms_IT</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustVendInvoiceSettlementParms_IT extends FormRun
{
    public FormRun callerForm;
    public CustVendInvoiceSettlementBuild_IT custVendInvoiceSettlementBuild;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (formHasMethod(callerForm, formMethodStr(CustVendInvoiceSettlement_IT, refreshData)))
        {
            custVendInvoiceSettlementBuild = callerForm.refreshData();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        callerForm = this.args().caller();

        if (callerForm && formHasMethod(callerForm, formMethodStr(CustVendInvoiceSettlement_IT, getCustVendInvoiceSettlementBuild)))
        {
            custVendInvoiceSettlementBuild = callerForm.getCustVendInvoiceSettlementBuild();
        }

        if (!custVendInvoiceSettlementBuild)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editCustVendAc</Name>
				<Source><![CDATA[
    public edit CustVendAc editCustVendAc(boolean _set, CustVendAc _custVendAce)
    {
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmCustVendAccount(_custVendAce);
        }
    
        return custVendInvoiceSettlementBuild.parmCustVendAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromDate</Name>
				<Source><![CDATA[
    public edit FromDate editFromDate(boolean _set = false, FromDate _fromDate = datenull())
    {
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmFromDate(_fromDate);
        }
    
        return custVendInvoiceSettlementBuild.parmFromDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editInvoiceId</Name>
				<Source><![CDATA[
    public edit InvoiceId editInvoiceId(boolean _set, InvoiceId _invoiceId)
    {
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmInvoiceId(_invoiceId);
        }
    
        return custVendInvoiceSettlementBuild.parmInvoiceId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editInvoiceVoucher</Name>
				<Source><![CDATA[
    public edit Voucher editInvoiceVoucher(boolean _set, Voucher _invoiceVoucher)
    {
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmInvoiceVoucher(_invoiceVoucher);
        }
    
        return custVendInvoiceSettlementBuild.parmInvoiceVoucher();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editOnlyOpen</Name>
				<Source><![CDATA[
    public edit ShowOpenOnly_IT editOnlyOpen(boolean _set, NoYes _showOpenOnly)
    {
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmOpenTransOnly(_showOpenOnly);
        }
    
        return custVendInvoiceSettlementBuild.parmOpenTransOnly();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToDate</Name>
				<Source><![CDATA[
    public edit ToDate editToDate(boolean _set, ToDate _toDate)
    {        
        if (_set)
        {
            custVendInvoiceSettlementBuild.parmToDate(_toDate);
        }
    
        return custVendInvoiceSettlementBuild.parmToDate();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>editCustVendAc</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup;
            Query                   query = new Query();
            QueryBuildDataSource    qbds;
            
    
            switch (custVendInvoiceSettlementBuild.parmModule())
            {
                case ModuleCustVend::Cust:
    
                    sysTableLookup = sysTableLookup::newParameters(tablenum(CustAccountName_IT), editCustVendAc);
                    qbds = query.addDataSource(tablenum(CustAccountName_IT));
                    sysTableLookup.addLookupfield(fieldnum(CustAccountName_IT, AccountNum));
                    sysTableLookup.addLookupfield(fieldnum(CustAccountName_IT, Name));
                    break;
    
                case ModuleCustVend::Vend:
    
                    sysTableLookup = sysTableLookup::newParameters(tablenum(VendAccountName_IT), editCustVendAc);
                    qbds = query.addDataSource(tablenum(VendAccountName_IT));
                    sysTableLookup.addLookupfield(fieldnum(VendAccountName_IT, AccountNum));
                    sysTableLookup.addLookupfield(fieldnum(VendAccountName_IT, Name));
                    break;
            }
    
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS7764</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>editfromDate</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editfromDate</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>editToDate</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editToDate</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>editonlyOpen</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@ExtendedItallianLocalization:ShowOpenInvoicesOnly</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editonlyOpen</DataMethod>
						<Label>@SYS23760</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>editCustVendAc</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editCustVendAc</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>editInvoiceId</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editInvoiceId</DataMethod>
						<DisplayLength>15</DisplayLength>
						<DisplayLengthMode>Fixed</DisplayLengthMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>editInvoiceVoucher</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editInvoiceVoucher</DataMethod>
						<DisplayLength>15</DisplayLength>
						<DisplayLengthMode>Fixed</DisplayLengthMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitButtons</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>6</VerticalSpacing>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS2934</Text>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>