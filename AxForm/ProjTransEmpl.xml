<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjTransEmpl</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjTransEmpl extends FormRun
{
    QueryBuildDataSource        qb_projTable;
    QueryBuildDataSource        qb_ProjCategory;
    QueryBuildDataSource        qb_projEmplTrans;
    QueryBuildDataSource        qb_projEmplTransSale1;
    QueryBuildDataSource        qb_projEmplTransSale2;
    QueryBuildDataSource        qb_ProjLineProperty;
    QueryBuildDataSource        qb_ProjService;
    QueryBuildDataSource        qb_ProjTransPosting;
    QueryBuildDataSource        qb_ProjGrantView;

    // Range ProjGrantID
    QueryBuildRange             criteriaGrantID;

    // Range projTable
    QueryBuildRange             criteriaWIPProjId;
    QueryBuildRange             criteriaProjId;

    QueryBuildRange             criteriaTransStatus1;
    QueryBuildRange             criteriaTransStatus2;
    QueryBuildRange             criteriaToBeInvoiced;

    QueryBuildRange             criteriaProjInvoiceProjId;
    QueryBuildRange             criteriaFixedPrice;
    QueryBuildRange             criteriaTimeMaterial;
    QueryBuildRange             criteriaInternal;
    QueryBuildRange             criteriaTime;
    QueryBuildRange             criteriaCost;
    QueryBuildRange             criteriaInvestment;
    QueryBuildRange             criteriaSorting1;
    QueryBuildRange             criteriaSorting2;
    QueryBuildRange             criteriaSorting3;
    QueryBuildRange             criteriaGroupId;
    QueryBuildRange             criteriaCustAccount;
    QueryBuildRange             criteriaActivityId;

    // Range projCategoryId
    QueryBuildRange             criteriaCategoryGroupId;

    // Range projEmplTrans
    QueryBuildRange             criteriaResourceRecId;
    QueryBuildRange             criteriaResourceCategoryRecId;
    QueryBuildRange             criteriaTransDate;
    QueryBuildRange             criteriaCategoryId;
    QueryBuildRange             criteriaTransId;
    QueryBuildRange             criteriaRefId;
    QueryBuildRange             criteriaService;
    QueryBuildRange             criteriaSalesCurrency;

    // Range LedgerTransDate
    QueryBuildRange             criteriaLedgerTransDate;

    QueryBuildRange             activeAll;

    [FormObservable]
    TransDate                   ledgerFromDate;
    [FormObservable]
    TransDate                   ledgerToDate;

    ProjStatistic               projStatistic;
    ProjInvoiceControl          projInvoiceControl;
    ProjCostControl             projCostControl;
    ProjCashFlow                projCashFlow;

    boolean                     linkInvoiceControl;
    boolean                     linkProjCostControl;
    boolean                     linkProjStatistic;
    boolean                     linkProjService;
    boolean                     linkProjCashFlow;
    boolean                     rangeLedgerTransDate;

    boolean                     m_bLinkProjFinancialStatisitc;

    Map                         salesAmountCache;
    Map                         costAmountCache;
    ProjTransIdBase             transId;
    ProjItemTransId             refTransid;

    NoYes                       jumpToMain;

    boolean                     linkProjUtil;

    ProjUtilCalcParams          projUtil;

    QueryBuildDataSource        qb_ProjUtilTypes;
    QueryBuildDataSource        qb_ProjLinePropertyUtil;
    QueryBuildRange             criteriaUtilTypeBillable;
    QueryBuildRange             criteriaUtilTypeEfficiency;

    Object                      callerForm;
    boolean                     isCallerForm;
    boolean                     rangeCategoryGroup;

    ProjCreateAdjTraceTree      traceTree;
    ProjTransIdBase             selectionTransId;

    Set                         activatedRelatedRecordTabPages;

    private boolean enableProjMultipleContractLinesForProjectFeature = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

    #DEFINE.projUtil('projUtil') //if altered, remember to also change in ProjUtil and Forecast forms

    #define.star('*')

    // <GIN>
    #ISOCountryRegionCodes
}
]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh()
    {
        projEmplTrans_ds.refresh();
        projEmplTrans_ds.reread();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    Query buildQuery()
    {
        Query   q = new Query();
        PSATmpProjInvoiceSummary    tSummary;
        TSTimesheetTable            tsTimesheetTable;

        TSTimesheetTrans            tsTimesheetTrans;
        TSTimesheetLine             tsTimesheetLine;
        TSTimesheetLineWeek         tsTimesheetLineWeek;

        LedgerInterCompany          ledgerInterCompany;
        boolean includesCurrent;
        boolean hasTimesheetTrans = false;

        qb_projEmplTrans    = q.addDataSource(tableNum(ProjEmplTrans));

        if (callerForm && isCallerForm && callerForm.name() == formStr(ProjTransEmpl))
        {
            criteriaTransId = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransId));
            return q;
        }

        criteriaResourceRecId = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, Resource));
        criteriaResourceCategoryRecId = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, ResourceCategory));
        criteriaTransDate   = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransDate));
        criteriaCategoryId  = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, CategoryId));
        criteriaActivityId  = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, ActivityNumber));
        criteriaTransId     = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransId));
        criteriaRefId       = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransIdRef));
        criteriaSalesCurrency = qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, CurrencyId));

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            QueryBuildDataSource qb_projEmplTransTaxExtensionIN = qb_projEmplTrans.addDataSource(tableNum(ProjEmplTransTaxExtensionIN));
            qb_projEmplTransTaxExtensionIN.joinMode(JoinMode::OuterJoin);
            qb_projEmplTransTaxExtensionIN.relations(true);
        }
        // </GIN>

        qb_projEmplTransSale1 = qb_projEmplTrans.addDataSource(tableNum(ProjEmplTransSale));
        qb_projEmplTransSale1.relations(true);
        qb_projEmplTransSale1.joinMode(JoinMode::ExistsJoin);
        criteriaTransStatus1 = qb_projEmplTransSale1.addRange(fieldNum(ProjEmplTransSale, TransStatus));

        // Used for partial invoice which requires to joins to the table
        qb_projEmplTransSale2 = qb_projEmplTrans.addDataSource(tableNum(ProjEmplTransSale));
        qb_projEmplTransSale2.relations(true);
        qb_projEmplTransSale2.joinMode(JoinMode::ExistsJoin);
        criteriaTransStatus2 = qb_projEmplTransSale2.addRange(fieldNum(ProjEmplTransSale, TransStatus));
        qb_projEmplTransSale2.enabled(false);

        // Filter by the project Id
        if (element.args().dataset() == tableNum(PSATmpProjInvoiceSummary))
        {
            tSummary = element.args().record();
            qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans,ProjId)).value(tSummary.ProjId);
        }

        if (rangeCategoryGroup)
        {
            qb_ProjCategory = qb_projEmplTrans.addDataSource(tableNum(ProjCategory));
            qb_ProjCategory.addLink(fieldNum(ProjEmplTrans, CategoryId), fieldNum(ProjCategory, CategoryId));
            qb_ProjCategory.fetchMode(0);
            qb_ProjCategory.joinMode(JoinMode::ExistsJoin);
            criteriaCategoryGroupId = qb_ProjCategory.addRange(fieldNum(ProjCategory, CategoryGroupId));
        }

        if (linkProjService)
        {
            qb_ProjService = qb_projEmplTrans.addDataSource(tableNum(SMAServiceOrderLine));

            qb_ProjService.addLink(fieldNum(ProjEmplTrans, TransIdRef), fieldNum(SMAServiceOrderLine, ProjTransId));
            qb_ProjService.addLink(fieldNum(ProjEmplTrans, ProjId), fieldNum(SMAServiceOrderLine, ProjId));
            qb_ProjService.fetchMode(0);
            qb_ProjService.joinMode(JoinMode::InnerJoin);

            criteriaService = qb_ProjService.addRange(fieldNum(SMAServiceOrderLine, ServiceOrderId));
            criteriaProjId  = qb_ProjService.addRange(fieldNum(SMAServiceOrderLine, ProjId));
        }
        else
        {
            qb_projTable = qb_projEmplTrans.addDataSource(tableNum(ProjTable));
            qb_projTable.addLink(fieldNum(ProjEmplTrans,ProjId), fieldNum(ProjTable, ProjId));
            qb_projTable.fetchMode(0);
            qb_projTable.joinMode(JoinMode::ExistsJoin);

            criteriaProjInvoiceProjId   = qb_projTable.addRange(fieldNum(ProjTable, ProjInvoiceProjId));
            criteriaProjId              = qb_projTable.addRange(fieldNum(ProjTable, ProjId));
            criteriaWIPProjId           = qb_projTable.addRange(fieldNum(ProjTable, wipProject));
            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                criteriaFixedPrice          = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTimeMaterial        = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInternal            = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaCost                = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInvestment          = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTime                = qb_projTable.addRange(fieldNum(ProjTable, Type));
            }
            criteriaSorting1            = qb_projTable.addRange(fieldId2Ext(fieldNum(ProjTable, SortingId), 1));
            criteriaSorting2            = qb_projTable.addRange(fieldId2Ext(fieldNum(ProjTable, SortingId), 2));
            criteriaSorting3            = qb_projTable.addRange(fieldId2Ext(fieldNum(ProjTable, SortingId), 3));
            criteriaGroupId             = qb_projTable.addRange(fieldNum(ProjTable, ProjGroupId));
            criteriaCustAccount         = qb_projTable.addRange(fieldNum(ProjTable, CustAccount));
        }

        if (rangeLedgerTransDate)
        {
            qb_ProjTransPosting = qb_projEmplTrans.addDataSource(tablenum(ProjTransPosting));
            qb_ProjTransPosting.addLink(fieldnum(ProjEmplTrans,TransId), fieldnum(ProjTransPosting, TransId));
            qb_ProjTransPosting.joinMode(JoinMode::ExistsJoin);

            criteriaLedgerTransDate = qb_ProjTransPosting.addRange(fieldnum(ProjTransPosting,LedgerTransDate));
        }

        if (linkProjUtil) //do the filtering of transactions according to user selection in enum
        {
            //apply conditions from utilization params to above criteria
            this.linkProjUtilization();

            //attach line property datasource with join criteria on line property id
            qb_ProjLinePropertyUtil = qb_projTable.addDataSource(tableNum(ProjLineProperty));
            qb_ProjLinePropertyUtil.addRange(fieldNum(ProjLineProperty, LinePropertyId)).value(strFmt('(%1.%2 == %3.%4)',
                qb_projEmplTrans.name(),
                fieldStr(ProjEmplTrans, LinePropertyId),
                qb_ProjLinePropertyUtil.name(),
                fieldStr(ProjLineProperty, LinePropertyId)));

            //attach util types datasource with join criteria on project type
            qb_ProjUtilTypes = qb_ProjLinePropertyUtil.addDataSource(tableNum(ProjUtilTypes));
            qb_ProjUtilTypes.addRange(fieldNum(ProjUtilTypes, ProjType)).value(strFmt('(%1.%2 == %3.%4)',
                qb_projTable.name(),
                fieldStr(ProjTable, Type),
                qb_ProjUtilTypes.name(),
                fieldStr(ProjUtilTypes, ProjType)));

            //set up criteria for filtering
            criteriaUtilTypeBillable = qb_ProjUtilTypes.addRange(fieldNum(ProjUtilTypes, Billable));
            criteriaUtilTypeEfficiency = qb_ProjUtilTypes.addRange(fieldNum(ProjUtilTypes, Efficiency));

            //apply filtering conditions depending on enum selection
            switch (utilFilter.selection())
            {
                case ProjUtilTransFilter::All:
                    //nothing special to do to filter
                    break;

                //burden if project type is listed as burden, or if listed as according to
                //line property and line property says it's not to be counted as utilization
                case ProjUtilTransFilter::Burden:
                    if (projUtil.paramIsEfficiency())
                    {
                        criteriaUtilTypeEfficiency.value(strFmt('(((%3.%1 == %4) && (%5.%6 == %7)) || (%3.%1 == %2))',
                            fieldStr(ProjUtilTypes, Efficiency),
                            enum2int(ProjUtilOption::Burden),
                            qb_ProjUtilTypes.name(),
                            enum2int(ProjUtilOption::AccToLineProperty),
                            qb_ProjLinePropertyUtil.name(),
                            fieldStr(ProjLineProperty, IsEfficiency),
                            enum2int(NoYes::No)));
                    }
                    else //then it's billable: same as above but for a billable fields in UType and Linep
                    {
                        criteriaUtilTypeBillable.value(strFmt('(((%3.%1 == %4) && (%5.%6 == %7)) || (%3.%1 == %2))',
                            fieldStr(ProjUtilTypes, Billable),
                            enum2int(ProjUtilOption::Burden),
                            qb_ProjUtilTypes.name(),
                            enum2int(ProjUtilOption::AccToLineProperty),
                            qb_ProjLinePropertyUtil.name(),
                            fieldStr(ProjLineProperty, ToBeInvoiced),
                            enum2int(NoYes::No)));
                    }
                    break;

                //not included only if the project type is listed as not included
                case ProjUtilTransFilter::NotIncluded:
                    if (projUtil.paramIsEfficiency())
                    {
                        criteriaUtilTypeEfficiency.value(queryValue(ProjUtilOption::NotIncluded));
                    }
                    else
                    {
                        criteriaUtilTypeBillable.value(queryValue(ProjUtilOption::NotIncluded));
                    }
                    break;

                //utilization if project type is listed as utilization, or if listed as according to
                //line property and line property says it's to be counted as utilization
                case ProjUtilTransFilter::Utilization:
                    if (projUtil.paramIsEfficiency())
                    {
                        criteriaUtilTypeEfficiency.value(strFmt('(((%3.%1 == %4) && (%5.%6 == %7)) || (%3.%1 == %2))',
                            fieldStr(ProjUtilTypes, Efficiency),
                            enum2int(ProjUtilOption::Utilization),
                            qb_ProjUtilTypes.name(),
                            enum2int(ProjUtilOption::AccToLineProperty),
                            qb_ProjLinePropertyUtil.name(),
                            fieldStr(ProjLineProperty, IsEfficiency),
                            enum2int(NoYes::Yes)));
                    }
                    else //then it's billable: same as above but for a billable fields in UType and Linep
                    {
                        criteriaUtilTypeBillable.value(strFmt('(((%3.%1 == %4) && (%5.%6 == %7)) || (%3.%1 == %2))',
                            fieldStr(ProjUtilTypes, Billable),
                            enum2int(ProjUtilOption::Utilization),
                            qb_ProjUtilTypes.name(),
                            enum2int(ProjUtilOption::AccToLineProperty),
                            qb_ProjLinePropertyUtil.name(),
                            fieldStr(ProjLineProperty, ToBeInvoiced),
                            enum2int(NoYes::Yes)));
                    }
                    break;
            }
            //end switch
        }
        //end if

        if ((element.args().dataset() == tableNum(HcmWorker) || element.args().dataset() == tablenum(ResourceView)) && (ProjParameters::find().EnableIntercompanyTimesheet))
        {
            q.allowCrossCompany(true);

            while select DestinationCompany from ledgerInterCompany
                where ledgerInterCompany.OriginatingCompany == curExt()
            {
                if (ledgerInterCompany.DestinationCompany == curext())
                {
                    includesCurrent = true;
                }
                q.addCompanyRange(ledgerInterCompany.DestinationCompany);
            }
            if (!includesCurrent)
            {
                q.addCompanyRange(curext());
            }
        }
        else if (element.args().dataset() == tableNum(TSTimesheetTable))
        {
            tsTimesheetTable = element.args().record();

            // Select transaction Ids corresponding to the current company only
            while select TransId from tsTimesheetTrans
                where tsTimesheetTrans.TimesheetNbr == tsTimesheetTable.TimesheetNbr
                exists join tsTimesheetLineWeek
                where  tsTimesheetTrans.TSTimesheetLineWeek == tsTimesheetLineWeek.RecId
                exists join tsTimesheetLine
                where  tsTimesheetLineWeek.TSTimesheetLine == tsTimesheetLine.RecId
                    && tsTimesheetLine.ProjectDataAreaId == curext()
            {
                hasTimesheetTrans = true;
                qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransIdRef)).value(queryValue(tsTimesheetTrans.TransId));
            }
            // Filtering the previous transactions not to show up against this project, when no transactions are available for this timesheet
            if (!hasTimesheetTrans)
            {
                qb_projEmplTrans.addRange(fieldNum(ProjEmplTrans, TransIdRef)).value(SysQuery::valueEmptyString());
            }
        }

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryLineproperty</Name>
				<Source><![CDATA[
    Query buildQueryLineproperty(JoinMode _joinMode)
    {
        Query q = element.buildQuery();

        if (selectInvoiceStatus.selection() == projSelectTrans::ToBeInvoiced)
        {
            qb_ProjLineProperty = qb_projEmplTrans.addDataSource(tableNum(ProjLineProperty));

            qb_ProjLineProperty.addLink(fieldNum(ProjEmplTrans, LinePropertyId), fieldNum(ProjLineProperty, LinePropertyId));
            qb_ProjLineProperty.fetchMode(0);

            criteriatoBeInvoiced = qb_ProjLineProperty.addRange(fieldNum(ProjLineProperty, ToBeInvoiced));
            criteriatoBeInvoiced.value(queryValue(NoYes::No));

            qb_ProjLineProperty.joinMode(_joinMode);
        }
        else if (selectInvoiceStatus.selection() == projSelectTrans::NoChargeable)
        {
            QueryBuildDataSource qbds = qb_projEmplTrans.addDataSource(tableNum(ProjEmplNonChargeableTrans));
            qbds.relations(false);
            qbds.addLink(fieldNum(ProjEmplTrans, TransId), fieldNum(ProjEmplNonChargeableTrans, TransId));
            qbds.joinMode(_joinMode);
        }

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docCursor</Name>
				<Source><![CDATA[
    public Common docCursor()
    {
        return projEmplTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        this.initDataSet();

        callerForm = element.args().caller();

        isCallerForm = callerForm is FormRun;

        //
        //determine if called from utilization form
        //must know this before super() to use linkProjUtil in
        //buildQuery
        //
        if (element.args() && element.args().parm() == #projUtil)
        {
            linkProjUtil = true;
            projUtil = element.args().parmObject();

            if (projUtil.paramFilterType() == ProjUtilCalcFilterType::CategoryGroup)
            {
                rangeCategoryGroup = true;
            }
        }
        else
        {
            linkProjUtil = false;
        }

        super();

        //
        //show/hide the utilization filter depending if the form
        //is displayed from the utilization form or elsewhere.
        //
        utilFilter.visible(linkProjUtil);

        ledgerFromDate  = dateNull();
        ledgerToDate    = dateMax();

        if (element.args().dataset() == tableNum(TmpProjStatistic))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }
        if (element.args().dataset() == tableNum(TmpProjCashFlow))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }

        element.setPriceAmount();
        element.setVisible();

        salesAmountCache    = new Map(Types::String, Types::Real);
        costAmountCache     = new Map(Types::String, Types::Real);

        traceTree = new ProjCreateAdjTraceTree(ctrlTree, ProjTransType::Hour);

        activatedRelatedRecordTabPages = new Set(Types::Integer);

        // <GIN>
        element.setVisible_IN();
        // </GIN>

        // <GTE>
        boolean isGTEEnabled = TaxSolutionScopeIntegrationUtil::isCompanyEnabled();
        TransTaxInformation.visible(TaxParameters::checkTaxParameters_IN() || isGTEEnabled);
        TaxGroup.visible(!isGTEEnabled);
        TaxItemGroup.visible(!isGTEEnabled);
        // </GTE>

        if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
        {
            Functions.visible(false);
            Functions.enabled(false);
        }

        SubcontractLine.visible(FeatureStateProvider::isFeatureEnabled(ProjEnableSubcontractActualsPostingFeature::instance()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDataSet</Name>
				<Source><![CDATA[
    void initDataSet()
    {
        ProjEmplTrans           projEmplTransLink;
        ProjTransPosting        projTransPosting;
        ProjJournalTrans        projJournalTrans;
        TmpProjPeriodic         tmpProjPeriodic;
        TmpProjPeriodicLedger   tmpProjPeriodicLedger;
        TmpProjAdjustment       tmpProjAdjustment;
        SMAServiceOrderLine     serviceOrderLine;
        ProdJournalRouteProj    projJournalRouteProj;
        ProdRouteTrans          prodRouteTrans;
        ProdRouteProj           prodRouteProj;
        CostControlTransCommittedCost committedCostTable;
        ProjEmplTransCost             projEmplTransCostlink;

        linkProjService     = false;

        switch (element.args().dataset())
        {
            case tableNum(ProjEmplTrans):
                projEmplTransLink      = element.args().record();
                transId                = projEmplTransLink.TransId;
                break;

            case tableNum(ProjEmplTransCost):
                projEmplTransCostlink  = element.args().record();
                transId                = projEmplTransCostlink.TransId;
                break;

            case(tableNum(ProjTransPosting)):
                projTransPosting    = element.args().record();
                transId             = projTransPosting.TransId;
                break;

            case(tableNum(ProjJournalTrans)):
                projJournalTrans    = element.args().record();
                transId             = projJournalTrans.TransId;
                break;

            case(tableNum(SMAServiceOrderLine)):
                serviceOrderLine     = element.args().record();
                transId              = serviceOrderLine.ProjTransId;
                break;

            case(tableNum(TmpProjPeriodic)):
                tmpProjPeriodic    = element.args().record();
                transId            = tmpProjPeriodic.TransId;
                break;

            case(tableNum(TmpProjPeriodicLedger)):
                tmpProjPeriodicLedger   = element.args().record();
                transId                 = tmpProjPeriodicLedger.TransId;
                break;

            case(tableNum(TmpProjAdjustment)):
                tmpProjAdjustment    = element.args().record();
                transId              = tmpProjAdjustment.TransId;
                break;

            case(tableNum(SMAServiceOrderTable)):
                linkProjService     = true;
                break;

            case(tableNum(ProdJournalRouteProj)):
                projJournalRouteProj    = element.args().record();
                transId                 = projJournalRouteProj.ProjTransId;
                break;

            case(tableNum(ProdRouteTrans)):
                prodRouteTrans          = element.args().record();
                transId                 = prodRouteTrans.ProjTransId;
                break;

            case(tableNum(ProdRouteProj)):
                prodRouteProj           = element.args().record();
                refTransid              = prodRouteProj.ProjTransId;
                break;

            case(tableNum(CostControlTransCommittedCost)):
                committedCostTable      = element.args().record();
                refTransid              =committedCostTable.ProjTransId;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInvoiceControl</Name>
				<Source><![CDATA[
    void linkInvoiceControl()
    {
        if (projInvoiceControl.parmProjTransDateFrom() || projInvoiceControl.parmProjTransDateTo())
        {
            criteriaTransDate.value(SysQuery::range(projInvoiceControl.parmProjTransDateFrom(), projInvoiceControl.parmProjTransDateTo()));
        }

        if (projInvoiceControl.parmResource())
        {
            criteriaResourceRecId.value(queryValue(projInvoiceControl.parmResource()));
        }

        if (projInvoiceControl.parmResourceCategory())
        {
            criteriaResourceCategoryRecId.value(queryValue(projInvoiceControl.parmResourceCategory()));
        }

        if (projInvoiceControl.parmProjCategoryId())
        {
            criteriaCategoryId.value(projInvoiceControl.parmProjCategoryId());
        }

        if (projInvoiceControl.parmCategoryGroupId())
        {
            criteriaCategoryGroupId.value(projInvoiceControl.parmCategoryGroupId());
        }

        if (!element.enableProjMultipleContractLinesForProjectFeature)
        {
            if (projInvoiceControl.parmFixedPrice())
            {
                criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
            }
            else
            {
                criteriaFixedPrice.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmTimeMaterial())
            {
                criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
            }
            else
            {
                criteriaTimeMaterial.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInternalCost())
            {
                criteriaInternal.value(queryValue(ProjType::Cost));
            }
            else
            {
                criteriaInternal.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmTime())
            {
                criteriaTime.value(queryValue(ProjType::Time));
            }
            else
            {
                criteriaTime.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInternalCost())
            {
                criteriaCost.value(queryValue(ProjType::Internal));
            }
            else
            {
                criteriaCost.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInvestment())
            {
                criteriaInvestment.value(queryValue(ProjType::Investment));
            }
            else
            {
                criteriaInvestment.value(queryValue(SysQuery::valueEmptyString()));
            }
        }

        if (projInvoiceControl.parmProjTree())
        {
            criteriaProjId.value(projInvoiceControl.parmProjId()+ #star);
        }
        else
        {
            if (projInvoiceControl.parmProjId())
            {
                criteriaProjId.value(queryValue(projInvoiceControl.parmProjId()));
            }
        }

        if (projInvoiceControl.parmProjInvoiceProjId())
        {
            criteriaProjInvoiceProjId.value(queryValue(projInvoiceControl.parmProjInvoiceProjId()));
        }

        if (projInvoiceControl.parmSalesCurrency())
        {
            criteriaSalesCurrency.value(queryValue(projInvoiceControl.parmSalesCurrency()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCashFlow</Name>
				<Source><![CDATA[
    void linkProjCashFlow()
    {
        if (projCashFlow.parmHour() && (projCashFlow.parmActualBudget() != ProjActualBudget::Budget))
        {
            if (ledgerFromDate && (ledgerFromDate != dateNull()))
            {
                ledgerDateFrom.dateValue(ledgerFromDate);
            }

            if (ledgerToDate && (ledgerToDate != dateMax()))
            {
                ledgerDateTo.dateValue(ledgerToDate);
            }

            if (! (ledgerFromDate && ledgerToDate))
            {
                ledgerDates.visible(false);
            }

            if (projCashFlow.parmProjectFromDate() || projCashFlow.parmProjectToDate())
            {
                criteriaTransDate.value(SysQuery::range(projCashFlow.parmProjectFromDate(), projCashFlow.parmProjectToDate()));
            }

            if (projCashFlow.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projCashFlow.parmResource()));
            }

            if (projCashFlow.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projCashFlow.parmResourceCategory()));
            }

            if (projCashFlow.parmCategoryId())
            {
                criteriaCategoryId.value(projCashFlow.parmCategoryId());
            }

            if (projCashFlow.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projCashFlow.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCashFlow.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCashFlow.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCashFlow.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCashFlow.parmTimeProject())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projCashFlow.parmFixedPrice()   ||
                        projCashFlow.parmTimeMaterial() ||
                        projCashFlow.parmInternalCost() ||
                        projCashFlow.parmInvestment()   ||
                        projCashFlow.parmTimeProject()))
                {
                    criteriaTime.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projCashFlow.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projCashFlow.parmSorting1()));
            }

            if (projCashFlow.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projCashFlow.parmSorting2()));
            }

            if (projCashFlow.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projCashFlow.parmSorting3()));
            }

            if (projCashFlow.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projCashFlow.parmCustAccount()));
            }

            if (projCashFlow.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCashFlow.parmProjGroupId()));
            }

            if (projCashFlow.parmProjTree())
            {
                criteriaProjId.value(projCashFlow.parmProjId()+ #star);
            }
            else
            {
                if (projCashFlow.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCashFlow.parmProjId()));
                }
            }

            if (projCashFlow.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCashFlow.parmProjWIPId()));
            }

            if (projCashFlow.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCashFlow.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCostControl</Name>
				<Source><![CDATA[
    void linkProjCostControl()
    {
        if (projCostControl.parmHour())
        {
            ledgerFromDate  = projCostControl.parmLedgerTransDateFrom();
            ledgerToDate    = projCostControl.parmLedgerTransDateTo();

            ledgerDates.visible(true);

            if (ledgerFromDate && (ledgerFromDate != dateNull()))
            {
                ledgerDateFrom.dateValue(ledgerFromDate);
            }

            if (ledgerToDate && (ledgerToDate != dateMax()))
            {
                ledgerDateTo.dateValue(ledgerToDate);
            }

            if (! (ledgerFromDate && ledgerToDate))
            {
                ledgerDates.visible(false);
            }

            if (projCostControl.parmProjTransDateFrom() || projCostControl.parmProjTransDateTo())
            {
                criteriaTransDate.value(SysQuery::range(projCostControl.parmProjTransDateFrom(), projCostControl.parmProjTransDateTo()));
            }

            if (projCostControl.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projCostControl.parmResource()));
            }

            if (projCostControl.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projCostControl.parmResourceCategory()));
            }

            if (projCostControl.parmProjCategoryId())
            {
                criteriaCategoryId.value(projCostControl.parmProjCategoryId());
            }

            if (projCostControl.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projCostControl.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCostControl.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCostControl.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCostControl.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCostControl.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projCostControl.parmFixedPrice()   ||
                        projCostControl.parmTimeMaterial() ||
                        projCostControl.parmInternalCost() ||
                        projCostControl.parmInvestment()   ||
                        projCostControl.parmTime()))
                {
                    criteriaTime.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projCostControl.parmProjSorting1())
            {
                criteriaSorting1.value(queryValue(projCostControl.parmProjSorting1()));
            }

            if (projCostControl.parmProjSorting2())
            {
                criteriaSorting2.value(queryValue(projCostControl.parmProjSorting2()));
            }

            if (projCostControl.parmProjSorting3())
            {
                criteriaSorting3.value(queryValue(projCostControl.parmProjSorting3()));
            }

            if (projCostControl.parmCustomerAccount())
            {
                criteriaCustAccount.value(queryValue(projCostControl.parmCustomerAccount()));
            }

            if (projCostControl.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCostControl.parmProjGroupId()));
            }

            if (projCostControl.parmProjTree())
            {
                criteriaProjId.value(projCostControl.parmProjId()+ #star);
            }
            else
            {
                if (projCostControl.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCostControl.parmProjId()));
                }
            }

            if (projCostControl.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCostControl.parmProjWIPId()));
            }

            if (projCostControl.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCostControl.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjStatistic</Name>
				<Source><![CDATA[
    void linkProjStatistic()
    {
        if (projStatistic.parmHour() && (projStatistic.parmActualBudget() != ProjActualBudget::Budget))
        {
            ledgerFromDate  = projStatistic.parmLedgerFromDate();
            ledgerToDate    = projStatistic.parmLedgerToDate();

            ledgerDates.visible(true);

            if (ledgerFromDate && (ledgerFromDate != dateNull()))
            {
                ledgerDateFrom.dateValue(ledgerFromDate);
            }

            if (ledgerToDate && (ledgerToDate != dateMax()))
            {
                ledgerDateTo.dateValue(ledgerToDate);
            }

            if (! (ledgerFromDate && ledgerToDate))
            {
                ledgerDates.visible(false);
            }

            if (projStatistic.parmProjFromDate() || projStatistic.parmProjToDate())
            {
                criteriaTransDate.value(SysQuery::range(projStatistic.parmProjFromDate(), projStatistic.parmProjToDate()));
            }

            if (projStatistic.parmLedgerFromDate() || projStatistic.parmLedgerToDate())
            {
                criteriaLedgerTransDate.value(SysQuery::range(projStatistic.parmLedgerFromDate(), projStatistic.parmLedgerToDate()));
            }

            if (projStatistic.parmResource())
            {
                criteriaResourceRecId.value(queryValue(projStatistic.parmResource()));
            }

            if (projStatistic.parmResourceCategory())
            {
                criteriaResourceCategoryRecId.value(queryValue(projStatistic.parmResourceCategory()));
            }

            if (projStatistic.parmProjCategoryId())
            {
                criteriaCategoryId.value(projStatistic.parmProjCategoryId());
            }

            if (projStatistic.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projStatistic.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projStatistic.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projStatistic.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projStatistic.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projStatistic.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projStatistic.parmFixedPrice()   ||
                        projStatistic.parmTimeMaterial() ||
                        projStatistic.parmInternalCost() ||
                        projStatistic.parmInvestment()   ||
                        projStatistic.parmTime()))
                {
                    criteriaTime.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projStatistic.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projStatistic.parmSorting1()));
            }

            if (projStatistic.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projStatistic.parmSorting2()));
            }

            if (projStatistic.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projStatistic.parmSorting3()));
            }

            if (projStatistic.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projStatistic.parmCustAccount()));
            }

            if (projStatistic.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projStatistic.parmProjGroupId()));
            }

            if (projStatistic.parmGrantID())
            {
                qb_ProjGrantView = SysQuery::findOrCreateDataSource(projEmplTrans_ds.query(), tableNum(ProjGrantView), tableNum(ProjEmplTrans));
                qb_ProjGrantView.addLink(fieldNum(ProjEmplTrans,ProjId), fieldNum(ProjGrantView, ProjId));
                criteriaGrantID = qb_ProjGrantView.addRange(fieldNum(ProjGrantView, GrantId));
                criteriaGrantID.value(queryValue(projStatistic.parmGrantID()));
            }
            else if (projStatistic.parmProjTree())
            {
                criteriaProjId.value(projStatistic.parmProjId()+ #star);
            }
            else
            {
                if (projStatistic.parmProjId())
                {
                    criteriaProjId.value(queryValue(projStatistic.parmProjId()));
                }
            }

            if (projStatistic.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projStatistic.parmProjWIPId()));
            }

            if (projStatistic.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projStatistic.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjUtilization</Name>
				<Source><![CDATA[
    void linkProjUtilization()
    {
        ProjUtilCalcFilterType filterType;

        //if showing from project utility and showing Actual transactions
        if (projUtil && !projUtil.paramIsBudget())
        {
            if (projUtil.paramFromDate() || projUtil.paramToDate())
            {
                criteriaTransDate.value(SysQuery::range(projUtil.paramFromDate(), projUtil.paramToDate()));
            }

            filterType = projUtil.paramFilterType();

            switch (filterType)
            {
                case ProjUtilCalcFilterType::Employee:
                    criteriaResourceRecId.value(queryValue(projUtil.paramResource()));
                    break;

                case ProjUtilCalcFilterType::ResourceCategory:
                    criteriaResourceCategoryRecId.value(queryValue(projUtil.paramResourceCategory()));
                    break;

                case ProjUtilCalcFilterType::Category:
                    criteriaCategoryId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::CategoryGroup:
                    criteriaCategoryGroupId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Customer:
                    criteriaCustAccount.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::EstimateProject:
                    criteriaWIPProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::InvoiceProject:
                    criteriaProjInvoiceProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Project:
                    criteriaProjId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::ProjectGroup:
                    criteriaGroupId.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::ProjectWithSubprojects:
                    criteriaProjId.value(projUtil.paramFilterValue() + #star);
                    break;

                case ProjUtilCalcFilterType::Sorting1:
                    criteriaSorting1.value(queryValue(projUtil.paramFilterValue()));
                    break;

                case ProjUtilCalcFilterType::Sorting2:
                    criteriaSorting2.value(queryValue(projUtil.paramFilterValue()));
                    break;
                case ProjUtilCalcFilterType::Sorting3:
                    criteriaSorting3.value(queryValue(projUtil.paramFilterValue()));
                    break;
            }
            //end switch
        }
        else
        {
            //make sure nothing is included
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCashFlow</Name>
				<Source><![CDATA[
    ProjCashFlow projCashFlow()
    {
        return projCashFlow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projStatistic</Name>
				<Source><![CDATA[
    ProjStatistic projStatistic()
    {
        return projStatistic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PSALinkProjFinancialStatistic</Name>
				<Source><![CDATA[
    void PSALinkProjFinancialStatistic()
    {
        PSATmpProjFinancialStatistic tTmpProjStatistic;
        PSATmpStr                    sProjId;
        TransDate                    dLedgerFromDate;
        TransDate                    dLedgerToDate;

        void setProjInvoiceCriteria()
        {
            criteriaProjInvoiceProjId.value(queryValue(projStatistic.parmProjInvoiceProjId()));

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projStatistic.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }
                if (projStatistic.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }
                if (projStatistic.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }
                if (projStatistic.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }
                if (projStatistic.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }
                if (projStatistic.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }
            }
        }

        tTmpProjStatistic = element.args().record();
        sProjId = tTmpProjStatistic.ProjViewId;

        dLedgerFromDate  = projStatistic.parmLedgerFromDate();
        dLedgerToDate    = projStatistic.parmLedgerToDate();

        ledgerDates.visible(true);

        if (dLedgerFromDate && (dLedgerFromDate != dateNull()))
        {
            ledgerDateFrom.dateValue(dLedgerFromDate);
        }

        if (dLedgerToDate && (dLedgerToDate != dateMax()))
        {
            ledgerDateTo.dateValue(dLedgerToDate);
        }

        if (!(dLedgerFromDate && dLedgerToDate))
        {
            ledgerDates.visible(false);
        }

        if (projStatistic.parmProjFromDate() || projStatistic.parmProjToDate())
        {
            criteriaTransDate.value(strFmt('%1..%2',queryValue(projStatistic.parmProjFromDate()),
                                                    queryValue(projStatistic.parmProjToDate())));
        }

        if (tTmpProjStatistic.ProjTotal == PSAProjTotal::None)
        {
            criteriaProjId.value(queryValue(sProjId));
        }
        else if (tTmpProjStatistic.ProjTotal == PSAProjTotal::LevelTotal)
        {
            if (projStatistic.psaParmDisplayLevel() == 0)
            {
                if (projStatistic.parmProjInvoiceProjId())
                {
                    setProjInvoiceCriteria();
                }
                else if (projStatistic.parmProjId())
                {
                    if (projStatistic.parmProjTree())
                    {
                        criteriaProjId.value(sProjId + #star);
                    }
                    else
                    {
                        criteriaProjId.value(sProjId);
                    }
                }
            }
            else
            {
                criteriaProjId.value(sProjId + #star);
            }
        }
        else
        {
            if (projStatistic.parmProjInvoiceProjId() && tTmpProjStatistic.ProjTotal == PSAProjTotal::GrandTotal)
            {
                setProjInvoiceCriteria();
            }
            else
            {
                criteriaProjId.value(strLTrim(sProjId) + #star);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshAsNeeded</Name>
				<Source><![CDATA[
    void refreshAsNeeded()
    {
        activatedRelatedRecordTabPages = new Set(Types::Integer);
        general.refreshAsNeeded();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (!callerForm && (this.args().dataset() == tableNum(HierarchyTreeTable) || this.args().dataset() == tableNum(ProjTable)))
        {
            this.setLinkCriteria();
        }
        super();

        if (this.args().lookupField() == fieldNum(ProjJournalTrans, TransId))
        {
            general.activatePage();
        }

        if (this.args().parmEnumType() == enumNum(IsSplitTransaction))
        {
            // Setup and open trace group
            if (this.args().parmEnum() == NoYes::Yes)
            {
                TransAdjustmentTrace.clicked();
			}
		}
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedTransId</Name>
				<Source><![CDATA[
    ProjTransIdBase selectedTransId()
    {
        return selectionTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    void setButtonAccess()
    {
        ProjEmplTrans               projEmplTransSelected;
        ProjEmplTransSale           projEmplTransSaleCheck;
        boolean                     projReverseTransEnabled;
        boolean                     projAdjustmentEnabled;
        boolean                     projAdjTraceEnabled;
        ProjEmplTrans               childProjEmplTrans;
        TSTimesheetTrans            tsTimesheetTrans;
        TSIntercompanyCostDetails   tsIntercompanyCostDetails;
        TSTimesheetLine             tsTimesheetLine;
        TSTimesheetLineWeek         tsTimesheetLineWeek;
        boolean                     lockFieldsForAdjustments;
        boolean                     CDSLockingOptionAdjustments = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::Adjustments);

        for (projEmplTransSelected = projEmplTrans_ds.getFirst(true)
            ? projEmplTrans_ds.getFirst(true)
            : projEmplTrans_ds.cursor(); projEmplTransSelected; projEmplTransSelected = projEmplTrans_ds.getNext())
        {
            if (!projAdjustmentEnabled)
            {
                lockFieldsForAdjustments = CDSLockingOptionAdjustments ? Project::isProjectExternallyManaged(projEmplTransSelected.ProjId) : false;
                projAdjustmentEnabled = ProjTrans::newProjEmplTrans(projEmplTransSelected).adjustable() && !lockFieldsForAdjustments;
            }

            while select projEmplTransSaleCheck
                where projEmplTransSaleCheck.TransId == projEmplTransSelected.TransId
            {
                if (!projReverseTransEnabled)
                {
                    projReverseTransEnabled = projEmplTransSaleCheck.canBeMarkedForCreditNote();
                }
            }

            if (!projAdjTraceEnabled)
            {
                projAdjTraceEnabled = projEmplTransSelected.AdjRefTransId ? true : false;
                if (!projAdjTraceEnabled)
                {
                    select firstonly RecId from childProjEmplTrans
                        where childProjEmplTrans.AdjRefTransId == projEmplTransSelected.TransId;

                    projAdjTraceEnabled = childProjEmplTrans.RecId ? true : false;
                }
            }
        }

        projReverseTrans.enabled(projReverseTransEnabled);
        projAdjustmentEmpl.enabled(projAdjustmentEnabled);
        transAdjustmentTrace.enabled(projAdjTraceEnabled);

        if (element.args().dataset() == tableNum(TSTimesheetTable))
        {
            functions.enabled(false);
        }
        else
        {
            functions.enabled(true);
        }

        projEmplTransSelected = projEmplTrans_ds.cursor();
        subledgerJournal.enabled(projEmplTransSelected.TransactionOrigin == ProjOrigin::Timesheet);

        select firstonly crossCompany RecId, TSTimesheetLineWeek from tsTimesheetTrans
                    where tsTimesheetTrans.TransId == projEmplTransSelected.TransIdRef
                join RecId from tsIntercompanyCostDetails where tsTimesheetTrans.RecId == tsIntercompanyCostDetails.tsTimesheetTrans
                join RecId, TSTimesheetLine from tsTimesheetLineWeek
                    where TSTimesheetLineWeek.RecId == tsTimesheetTrans.TSTimesheetLineWeek
                join RecId, ProjectDataAreaId from tsTimesheetLine
                    where tsTimesheetLine.RecId == tsTimesheetLineWeek.TSTimesheetLine;

        subledgerJournalAccountEntryICCost.enabled(tsTimesheetTrans.RecId != 0 && tsTimesheetLine.ProjectDataAreaId != tsTimesheetLine.company() && tsTimesheetLine.company() == curext());
        
        boolean allowSplitTransaction = ProjSplitTransaction::canSplitTransaction(projEmplTransSelected);
        SplitTransaction.enabled(allowSplitTransaction);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinkCriteria</Name>
				<Source><![CDATA[
    void setLinkCriteria()
    {
        ProjInvoiceTable    projInvoiceTable;
        ProjTable           projTable;
        ProjWIPTable        projWIPTable;
        HcmWorker           hcmWorker;
        ResourceView        resource;
        ResourceCategoryView    resourceCategory;
        ProjCategory        projCategory;
        ProjCategoryGroup   projCategoryGroup;
        ProjPeriodEmpl      projPeriodEmpl;
        ProjId              projId;
        HierarchyTreeTable  hierarchyTreeTable;
        smmActivities       smmActivities;

        SMAServiceOrderTable   serviceOrderTable;

        ledgerFromDate  = dateNull();
        ledgerToDate    = dateMax();

        switch (element.args().dataset())
        {
            case (tableNum(ProjWIPTable)):
                projWIPTable = element.args().record();
                criteriaWIPProjId.value(projWIPTable.ProjId);
                break;

            case (tableNum(ProjInvoiceTable)):
                projInvoiceTable = element.args().record();
                criteriaProjInvoiceProjId.value(projInvoiceTable.ProjInvoiceProjId);
                break;

            case (tableNum(ProjTable)):
                projTable   = element.args().record();
                projId      = projTable.ProjId;
                criteriaProjId.value(projId + #star);

                break;

            case (tableNum(ProjPeriodEmpl)):
                projPeriodEmpl = element.args().record();
                criteriaResourceRecId.value(queryValue(projPeriodEmpl.Resource));
                criteriaTransDate.value(strFmt('%1..%2', queryValue(projPeriodEmpl.PeriodFrom), queryValue(ProjPeriodLine::find(projPeriodEmpl.PeriodId, projPeriodEmpl.PeriodFrom).PeriodTo)));
                break;

            case (tableNum(HcmWorker)):
                hcmWorker = element.args().record();
                criteriaResourceRecId.value(queryValue(ResourceFacade::findByWorker(hcmWorker.RecId)));
                break;

            case (tablenum(ResourceView)):
                resource = element.args().record();
                criteriaResourceRecId.value(queryValue(resource.RecId));
                break;

            case (tablenum(ResourceCategoryView)):
                resourceCategory = element.args().record();
                criteriaResourceCategoryRecId.value(queryValue(resourceCategory.RecId));

            case (tableNum(ProjCategory)):
                projCategory = element.args().record();
                criteriaCategoryId.value(projCategory.CategoryId);
                break;

            case (tableNum(ProjCategoryGroup)):
                projCategoryGroup = element.args().record();
                criteriaCategoryGroupId.value(projCategoryGroup.CategoryGroupId);
                break;

            case (tableNum(HierarchyTreeTable)):
                hierarchyTreeTable = element.args().record();

                smmActivities = smmActivities::findWithRecId(hierarchyTreeTable.RefRecId);
                criteriaActivityId.value(queryValue(smmActivities.ActivityNumber));

                projTable = HierarchyTreeTable_Extension::findAssociation(smmActivities, tableNum(ProjTable));
                criteriaProjId.value(projTable.ProjId);
                break;

            case(tableNum(SMAServiceOrderTable)):
                serviceOrderTable = element.args().record();
                criteriaProjId.value(serviceOrderTable.ProjId);
                criteriaService.value(serviceOrderTable.ServiceOrderId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceAmount</Name>
				<Source><![CDATA[
    void setPriceAmount()
    {
        if (element.args().dataset() == tableNum(TmpProjStatistic) ||
            element.args().dataset() == tableNum(PSATmpProjFinancialStatistic))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }
        else if (element.args().dataset() == tableNum(TmpProjCashFlow))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }
        else
        {
            priceAmount.selection(ProjParameters::find().DisplayPriceAmount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        switch (priceAmount.selection())
        {
            case PriceAmount::Price:
                costPriceGrid.visible(true);
                salesPriceGrid.visible(true);
                currencyIdGrid.visible(true);
                costAmountGrid.visible(false);
                salesAmountGrid.visible(false);
                transTurnoverGrid.visible(false);
                break;

            case PriceAmount::LedgerUpdate:
                costPriceGrid.visible(false);
                salesPriceGrid.visible(false);
                currencyIdGrid.visible(false);
                costAmountGrid.visible(true);
                salesAmountGrid.visible(true);
                transTurnoverGrid.visible(false);
                break;

            case PriceAmount::LineAmount:
                costPriceGrid.visible(false);
                salesPriceGrid.visible(true);
                currencyIdGrid.visible(true);
                costAmountGrid.visible(false);
                salesAmountGrid.visible(false);
                transTurnoverGrid.visible(true);
        }

        costPriceGroup_TotalCostAmountCur.visible(false);
        salesPrice_TotalSalesAmountCur.visible(false);

        if (ProjParameters::find().EnableIntercompanyTimesheet)
        {
            projEmplTrans_dataAreaId.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    private void setVisible_IN()
    {
        boolean         isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();

        assessableValue_IN.visible(isTaxParametersMarked);
        maxRetailPrice_IN.visible(isTaxParametersMarked);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjEmplTrans</Name>
				<Methods>
					<Method>
						<Name>setQuery</Name>
						<Source><![CDATA[
        public void setQuery()
        {
            switch (selectInvoiceStatus.selection())
            {
                case projSelectTrans::All:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::Invoiced:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::PartiallyInvoiced:
					this.query(element.buildQuery());
					break;

				case projSelectTrans::Adjusted:
					this.query(element.buildQuery());
					break;

                case projSelectTrans::ToBeInvoiced:
                    this.query(element.buildQueryLineProperty(JoinMode::NoExistsJoin));
                    break;

                case projSelectTrans::NoChargeable:
                    this.query(element.buildQueryLineProperty(JoinMode::ExistsJoin));
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>cursorNotify</Name>
						<Source><![CDATA[
        public void cursorNotify(int _event)
        {
            ProjEmplTrans        projEmplTransCache;
            Set                  setTransCache;

            super(_event);

            if (priceAmount.selection() == PriceAmount::LedgerUpdate)
            {
                if (_event == 0 || _event == 1)
                {
                    projEmplTransCache = projEmplTrans_DS.getFirst(0,false);
                    while (projEmplTransCache)
                    {
                        if (! salesAmountCache.exists(projEmplTransCache.TransId))
                        {
                            if (! setTransCache)
                            {
                                setTransCache = new Set(Types::String);
                            }
                            setTransCache.add(projEmplTransCache.TransId);
                        }

                        projEmplTransCache = projEmplTrans_DS.getNext();
                    }

                    if (setTransCache)
                    {
                        salesAmountCache = Map::create(ProjEmplTrans::salesAmountDisplayCache(setTransCache.pack(),salesAmountCache.pack(),ledgerFromDate,ledgerToDate));
                        costAmountCache  = Map::create(ProjEmplTrans::costAmountDisplayCache(setTransCache.pack(),costAmountCache.pack(),ledgerFromDate,ledgerToDate));
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, costPrice));
            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, costAmount));
            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, salesPrice));
            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, salesAmount));
            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, transTurnover));
            this.cacheAddMethod(tableMethodStr(ProjEmplTrans, projInvoiceStatus));

            this.setQuery();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            TransDate               toDate;

            rangeCategoryGroup = false;
            rangeLedgerTransDate = false;

            switch (element.args().dataset())
            {
                case tableNum(TmpProjStatistic):
                    if (projStatistic)
                    {
                        element.close();
                    }

                    projStatistic       = element.args().parmObject();
                    linkProjStatistic   = true;
                    toDate  = projStatistic.parmProjToDate();
                    if (toDate == dateMax())
                    {
                        toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    }
                    element.design().caption(strFmt("@SYS91520",projStatistic.parmProjFromDate(),toDate));

                    if (projStatistic.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }

                    if (projStatistic.parmLedgerFromDate()||projStatistic.parmLedgerToDate())
                    {
                        rangeLedgerTransDate = true;
                    }

                    break;

                case tableNum(TmpProjCostControl):
                    if (projCostControl)
                    {
                        element.close();
                    }

                    projCostControl       = element.args().parmObject();
                    linkProjCostControl   = true;
                    toDate  = projCostControl.parmProjTransDateTo();
                    if (toDate == dateMax())
                    {
                        toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    }
                    element.design().caption(strFmt("@SYS91520",projCostControl.parmProjTransDateFrom(),toDate));

                    if (projCostControl.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;

                case tableNum(PSATmpProjFinancialStatistic):
                    projStatistic = element.args().parmObject();
                    m_bLinkProjFinancialStatisitc =  true;
                    break;

                case tableNum(TmpProjCashFlow):
                    if (projCashFlow)
                    {
                        element.close();
                    }

                    projCashFlow       = element.args().parmObject();
                    linkProjCashFlow   = true;
                    toDate  = projCashFlow.parmProjectToDate();

                    if (toDate == dateMax())
                    {
                        toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    }
                    element.design().caption(strFmt("@SYS91520", projCashFlow.parmProjectFromDate() ,toDate));

                    if (projCashFlow.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;

                case tableNum(TmpProjInvoiceControl):
                    if (projInvoiceControl)
                    {
                        element.close();
                    }
                    projInvoiceControl  = element.args().parmObject();
                    toDate  = projInvoiceControl.parmProjTransDateTo();
                    if (toDate == dateMax())
                    {
                        toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    }
                    if (projInvoiceControl.parmProjTransDateFrom())
                    {
                        element.design().caption(strFmt("@SYS91520",projInvoiceControl.parmProjTransDateFrom(),toDate));
                    }
                    linkInvoiceControl  = true;

                    if (projInvoiceControl.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;
            }

            if (element.args().dataset())
            {
                switch (selectInvoiceStatus.selection())
                {
                    case projSelectTrans::All:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::Invoiced:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::PartiallyInvoiced:
						this.query(element.buildQuery());
						break;

					case projSelectTrans::Adjusted:
						this.query(element.buildQuery());
						break;

                    case projSelectTrans::ToBeInvoiced:
                        this.query(element.buildQueryLineProperty(JoinMode::NoExistsJoin));
                        break;

                    case projSelectTrans::NoChargeable:
                        this.query(element.buildQueryLineProperty(JoinMode::ExistsJoin));
                        break;
                }
            }

            element.setLinkCriteria();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesAmount</Name>
						<Source><![CDATA[
        display AmountCur salesAmount(ProjEmplTrans _projEmplTrans)
        {
            if (! salesAmountCache.exists(_projEmplTrans.TransId))
            {
                salesAmountCache.insert(_projEmplTrans.TransId, _projEmplTrans.salesAmount(_projEmplTrans,ledgerFromDate,ledgerToDate));
            }

            return salesAmountCache.lookup(_projEmplTrans.TransId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>costAmount</Name>
						<Source><![CDATA[
        display AmountCur costAmount(ProjEmplTrans _projEmplTrans)
        {
            if (! costAmountCache.exists(_projEmplTrans.TransId))
            {
                costAmountCache.insert(_projEmplTrans.TransId, _projEmplTrans.costAmount(_projEmplTrans,ledgerFromDate,ledgerToDate));
            }

            return costAmountCache.lookup(_projEmplTrans.TransId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (callerForm && isCallerForm && callerForm.name() == formStr(ProjTransEmpl))
            {
                criteriaTransId.value(callerForm.selectedTransId());

                super();

                return;
            }

            switch (selectInvoiceStatus.selection())
            {
                case projSelectTrans::All:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projEmplTransSale1.enabled(false);
                    qb_projEmplTransSale2.enabled(false);
                    break;

                case projSelectTrans::Invoiced:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projEmplTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2,%3",
                                              queryValue(ProjTransStatus::Invoiced),
                                              queryValue(ProjTransStatus::MarkedCreditnote),
                                              queryValue(ProjTransStatus::CreditnoteProposal)));
                    qb_projEmplTransSale2.enabled(true);
                    qb_projEmplTransSale2.joinMode(JoinMode::NoExistsJoin);
                    criteriaTransStatus2.value(queryValue(ProjTransStatus::Posted));
                   break;

				case projSelectTrans::PartiallyInvoiced:
					if (criteriaTimeMaterial)
					{
						criteriaTimeMaterial.value(SysQuery::valueUnlimited());
					}
					qb_projEmplTransSale1.enabled(true);
					//Invoiced
					criteriaTransStatus1.value(strFmt("%1,%2,%3",
											queryValue(ProjTransStatus::Invoiced),
											queryValue(ProjTransStatus::MarkedCreditnote),
											queryValue(ProjTransStatus::CreditnoteProposal)));
                    
					// Not Invoiced or adjusted
                    qb_projEmplTransSale2.joinMode(JoinMode::ExistsJoin);
					qb_projEmplTransSale2.enabled(true);
					criteriaTransStatus2.value(queryValue(ProjTransStatus::Posted));
					break;
 
				case projSelectTrans::Adjusted:
                    qb_projEmplTransSale1.enabled(true);
                    qb_projEmplTransSale2.enabled(false);
					criteriaTransStatus1.value(queryValue(ProjTransStatus::Adjusted));
					break;
   
                case projSelectTrans::ToBeInvoiced:
                    if (criteriaTimeMaterial && !element.enableProjMultipleContractLinesForProjectFeature)
                    {
                        criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                    }
                    qb_projEmplTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2",
                                              queryValue(ProjTransStatus::Posted),
                                              queryValue(ProjTransStatus::InvoiceProposal)));
                    qb_projEmplTransSale2.enabled(false);
                    break;

                case projSelectTrans::NoChargeable:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projEmplTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2",
                                              queryValue(ProjTransStatus::Posted)));
                    qb_projEmplTransSale2.enabled(false);
                    break;
            }

            if (linkInvoiceControl)
            {
                element.linkInvoiceControl();
            }

            if (linkProjCostControl)
            {
                element.linkProjCostControl();
            }

            if (linkProjStatistic)
            {
                element.linkProjStatistic();
            }

            if (m_bLinkProjFinancialStatisitc)
            {
                element.PSALinkProjFinancialStatistic();
            }

            if (linkProjCashFlow)
            {
                element.linkProjCashFlow();
            }

            if (transId)
            {
                criteriaTransId.value(transId);
            }

            if (refTransid)
            {
                criteriaRefId.value(refTransid);
            }

            super();

            element.setButtonAccess();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            element.setButtonAccess();

            ret = super();

            element.refreshAsNeeded();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjProposalJour</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            container   con;
            Query       query;

            con = ProjProposalJour::proposalQuery(projEmplTrans);
            query = new Query(con);
            this.query(query);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceNo(1).clearDynalinks();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceJour</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            container   con;
            Query       query;

            con = ProjInvoiceJour::invoiceQuery(projEmplTrans);
            query = new Query(con);
            this.query(query);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceNo(1).clearDynalinks();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjEmplTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SplitTransaction</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            // Update the record being displayed
            projEmplTrans_ds.reread();
            projEmplTrans_ds.rereadReferenceDataSources();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransAdjustmentTrace</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            adjustmentTraceTabPage.visible(true);
            adjustmentTraceTabPage.setFocus();

            traceTree.createTraceTree(projEmplTrans.TransId);
            fieldList.text(traceTree.listofFields());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubledgerJournalAccountEntry</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            FormRun formRun;
            SourceDocumentLine sourceDocumentLine;
            SourceDocumentLineList  sourceDocumentLineList = SourceDocumentLineList::construct();
            TSTimesheetTable tsTimesheetTable;
            TSTimesheetTrans tsTimesheetTrans;

            select firstonly crossCompany DataAreaId,TimesheetNbr, SourceDocumentLine from tsTimesheetTrans where tsTimesheetTrans.TransId == projEmplTrans.TransIdRef;

            if (tsTimesheetTrans.RecId != 0)
            {
                changecompany(tsTimesheetTrans.company())
                {
                    tsTimesheetTable = TSTimesheetTable::find(tsTimesheetTrans.TimesheetNbr);
                    args.name(formStr(SubledgerJournalAccountEntry));
                    args.caller(element);
                    args.record(tsTimesheetTable);

                    sourceDocumentLine = SourceDocumentLine::find(tsTimesheetTrans.SourceDocumentLine);
                    sourceDocumentLineList.addEnd(sourceDocumentLine);

                    args.parmObject(sourceDocumentLineList);
                    formRun = classfactory.formRunClass(args);
                    formRun.init();
                    formRun.run();
                    formRun.wait();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubledgerJournalAccountEntryICCost</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            FormRun formRun;
            SourceDocumentLine sourceDocumentLine;
            SourceDocumentLineList  sourceDocumentLineList = SourceDocumentLineList::construct();
            TSTimesheetTable tsTimesheetTable;
            TSTimesheetTrans tsTimesheetTrans;

            select firstonly crossCompany DataAreaId,TimesheetNbr, SourceDocumentLine from tsTimesheetTrans where tsTimesheetTrans.TransId == projEmplTrans.TransIdRef;

            if (tsTimesheetTrans.RecId != 0)
            {
                changecompany(tsTimesheetTrans.company())
                {
                    tsTimesheetTable = TSTimesheetTable::find(tsTimesheetTrans.TimesheetNbr);
                    args.name(formStr(SubledgerJournalAccountEntry));
                    args.caller(element);
                    args.record(TSIntercompanyCost::findByTimesheet(tsTimesheetTable.RecId));

                    sourceDocumentLine = SourceDocumentLine::find(TSIntercompanyCostDetails::findByTSTimesheetTrans(tsTimesheetTrans.RecId).SourceDocumentLine);
                    sourceDocumentLineList.addEnd(sourceDocumentLine);
                    args.parmObject(sourceDocumentLineList);

                    formRun = classfactory.formRunClass(args);
                    formRun.init();
                    formRun.run();
                    formRun.wait();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceAmount</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setVisible();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectInvoiceStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            projEmplTrans_ds.setQuery();
            element.setLinkCriteria();
            projEmplTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UtilFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            //rebuild and rerun query every time this filter is changed
            projEmplTrans_ds.setQuery();
            projEmplTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);

            if (_fromTab == 6)
            {
                adjustmentTraceTabPage.visible(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubcontractLine</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
            ProjectOperationsDWHelper dw = ProjectOperationsDWHelper::construct();
            dw.openProjectSubcontractLineDetailsInCE(projEmplTrans.SubcontractLine, projEmplTrans.DataAreaId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>General</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            this.refreshAsNeeded();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshAsNeeded</Name>
						<Source><![CDATA[
        void refreshAsNeeded()
        {
            if (this.isActivePage() && !activatedRelatedRecordTabPages.in(this.id()))
            {
                projProposalJour_ds.executeQuery();
                projInvoiceJour_ds.executeQuery();
                activatedRelatedRecordTabPages.add(this.id());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_M_proposalId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ProjProposalJour::jumpRefProposal(projEmplTrans.proposalId(),projEmplTrans.TransId,ProjTransType::Hour);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_M_invoiceId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ProjInvoiceJour::jumpRefInvoice(projEmplTrans.TransId,ProjTransType::Hour);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FundingSourceCost</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Project::jumpRefFundingSource(projEmplTransCost.FundingSource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FundingSourceSales</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Project::jumpRefFundingSource(projEmplTransSale.FundingSource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GoToTransaction</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;
            FormRun formRun;

            args = new Args();
            args.name(formStr(ProjTransEmpl));
            args.caller(element);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SetupTree</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;
            FormRun formRun;

            args = new Args();
            args.name(formStr(ProjAdjTreeCreateVisualization));
            args.caller(element);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();

            if (formRun.closedOk())
            {
                adjustmentTraceTabPage.visible(true);
                adjustmentTraceTabPage.setFocus();

                traceTree.createTraceTree(projEmplTrans.TransId);
                fieldList.text(traceTree.listofFields());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            super(_oldItem, _newItem, _how);

            selectionTransId = ctrlTree.getItem(_newItem.idx()).data();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjEmplTrans</Name>
			<Table>ProjEmplTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdjRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCorrection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectComponentGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPercentCompl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjOrigTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAWrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCostAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSalesAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransIdRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherJournal</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjEmplTransCost</Name>
			<Table>ProjEmplTransCost</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerCostAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerStatusCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjEmplTrans</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjEmplTransSale</Name>
			<Table>ProjEmplTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectRevenue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjEmplTrans</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjProposalJour</Name>
			<Table>ProjProposalJour</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BOLCarrierName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CanceledBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTransportBrand_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceLineSpecific</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>exchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAutoNumbering_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineProperty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ListCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnAccountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProposalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceFormats</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceTxtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceTxtPre</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAnfRefProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAWorkerSubmittedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesFreightChargeTerms_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderbalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPrintOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCodeId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyByLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATInvoiceDescTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleLicensePlate_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleLicensePlateState_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VolumeQty_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VolumeType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerApprovedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceType_MY</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceJour</Name>
			<Table>ProjInvoiceJour</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceLineSpecific</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceNumberingCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceStatus_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ListCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Narration_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnAccountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParmId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingJournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintedOriginals</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProposalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAEndDateMaxInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceFormats</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDate_CZ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderbalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMASpecIndexCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPrintOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyByLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Volume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherNumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WhoIsAuthor_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceType_MY</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjEmplTransTaxExtensionIN</Name>
			<Table>ProjEmplTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjEmplTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjEmplTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS68523</Caption>
		<DataSource xmlns="">ProjEmplTrans</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">ProjEmplTrans</TitleDataSource>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane1</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>Actions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Functions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjPeriodicPostingCost</Name>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjPeriodicPostingCost</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjPeriodicPostingSales</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjPeriodicPostingSales</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InvoiceProposal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjInvoiceProposal</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjReverseTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjReverseTrans</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ProjAdjustmentEmpl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>ProjEmplTrans</DataSource>
										<MenuItemName>ProjAdjustmentDropMenu</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SplitTransaction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjEmplTrans</DataSource>
										<MenuItemName>ProjSplitTransaction</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@SYS10340</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Inquiries</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjInvoiceLine</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjInvoiceLine</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransAdjustmentTrace</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjAdjustment</MenuItemName>
										<Text>@SYS133198</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS3850</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>SubledgerJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SubledgerJournalAccountEntry</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS340821</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SubledgerJournalAccountEntryICCost</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@FPK270069</Text>
									</AxFormControl>
								</Controls>
								<Caption>@AccountingFramework:ViewSubledgerJournal</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS40422</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Project</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ProjTransPosting</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Voucher</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ProjLedgerTransVoucher</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TransTaxInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>ProjEmplTrans</DataSource>
								<MenuItemName>TransTaxInformation</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>ProjectEmployeeTrans_TransDate</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DisplayGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PriceAmount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>PriceAmount</EnumType>
								<Label>@SYS90428</Label>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SelectInvoiceStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>projSelectTrans</EnumType>
								<Label>@SYS50275</Label>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>UtilFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<EnumType>ProjUtilTransFilter</EnumType>
								<Items />
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LedgerDates</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LedgerDateFrom</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Proj:LedgerDatesFrom</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LedgerDateTo</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Proj:LedgerDatesTo</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjEmplTrans_dataAreaId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>dataAreaId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<Label>@SYS305493</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjectEmployeeTrans_TransDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectEmployeeTrans_ProjId</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjEmplTrans_CategoryId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjEmplTrans_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjEmplTrans</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjEmplTrans_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjEmplTrans</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
										<ReplacementFieldGroup>ResourceCategoryId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjectEmployeeTrans_Qty</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costPrice</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyIdGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>costAmountGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costAmount</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>11</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<Label>@SYS90204</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesPrice</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>salesAmountGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesAmount</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>11</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<Label>@SYS2835</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TransTurnoverGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>transTurnover</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<Label>@SYS10500</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjEmplTrans_LinePropertyId</Name>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjInvoiceStatus</Name>
										<ElementPosition>2147090430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>projInvoiceStatus</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjEmplTrans_TransactionOrigin</Name>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionOrigin</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjEmplTrans_PSAIndirectComponentGroup</Name>
										<ElementPosition>2147418110</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjTransEmpl_ProjEmplTrans_PSAIndirectComponentGroup</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PSAIndirectComponentGroup</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SubcontractLine</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Project</ConfigurationKey>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SubcontractLine</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>ProjEmplTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Identification_TransDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ProjId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ActivityNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_CategoryId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_LinePropertyId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjEmplTrans</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Identification_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjEmplTrans</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
										<ReplacementFieldGroup>ResourceCategoryId</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Transaction</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_TransId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_TransIdRef</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransIdRef</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_AdjRefTransId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AdjRefTransId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_VoucherJournal</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherJournal</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_Txt</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Transaction_TransactionOrigin</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionOrigin</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Transaction</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CostPriceGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_Qty</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_M_costPrice</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costPrice</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_TotalCostAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalCostAmountCur</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_M_PSAIndirectCostAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PSAIndirectCostAmount</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_M_PSAIndirectCostTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PSAIndirectCostTotal</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SalesPrice</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesPrice_CurrencyId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_salesPrice</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesPrice</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_ledgerSalesAmount</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ledgerSalesAmount</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_TotalSalesAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1825361098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalSalesAmountCur</DataField>
										<DataSource>ProjEmplTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_PSAIndirectSalesAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735280</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PSAIndirectSalesAmount</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPrice_M_PSAIndirectSalesTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2040109462</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PSAIndirectSalesTotal</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupId</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_M_proposalId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>proposalId</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_M_invoiceId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>invoiceId</DataMethod>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Invoice</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HourRegistering</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>HourRegistering_FromTime</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FromTime</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>HourRegistering_ToTime</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ToTime</DataField>
										<DataSource>ProjEmplTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>TimeSheet</DataGroup>
								<DataSource>ProjEmplTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AssessableValue_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1789569704</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransTaxExtensionIN_AssessableValue</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>ProjEmplTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GLS5298</Caption>
								<DataSource>ProjEmplTransTaxExtensionIN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MaxRetailPrice_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1968526674</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransTaxExtensionIN_MaximumRetailPrice</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>ProjEmplTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GLS5296</Caption>
								<DataSource>ProjEmplTransTaxExtensionIN</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>ProjEmplTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS101181</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>ProjEmplTrans</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Cost</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CostGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjEmplTransCost_LedgerTransdate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerTransdate</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransCost_CostPrice</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransCost_LineAmount</Name>
										<ElementPosition>1744830462</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjEmplTransCost_LedgerStatusCost</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerStatusCost</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjEmplTransCost_TransStatus</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransStatus</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjEmplTransCost_WIPPeriod</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WIPPeriod</DataField>
										<DataSource>ProjEmplTransCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FundingSourceCost</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FundingSourceCost_FundingSourceId</Name>
												<DataRelationPath>FundingSource</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjEmplTransCost</DataSource>
										<ReferenceField>FundingSource</ReferenceField>
										<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>ProjEmplTransCost</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4249</Caption>
						<DataSource>ProjEmplTransCost</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Sale</Name>
						<ElementPosition>2063597566</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SaleGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjEmplTransSale_LedgerTransdate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerTransdate</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransSale_SalesPrice</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransSale_LineAmount</Name>
										<ElementPosition>1744830462</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjEmplTransSale_LedgerSalesPosted</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjTransEmpl_ProjEmplTransSale_LedgerSalesPosted</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>LedgerSalesPosted</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjEmplTransSale_LedgerSalesAmount</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerSalesAmount</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjEmplTransSale_WIPPeriod</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WIPPeriod</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjEmplTransSale_TransStatus</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransStatus</DataField>
										<DataSource>ProjEmplTransSale</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FundingSourceSales</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FundingSourceSales_FundingSourceId</Name>
												<DataRelationPath>FundingSource</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjEmplTransSale</DataSource>
										<ReferenceField>FundingSource</ReferenceField>
										<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>ProjEmplTransSale</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS37101</Caption>
						<DataSource>ProjEmplTransSale</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdjustmentTraceTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>GoToTransaction</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS133347</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SetupTree</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS133492</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTreeControl">
								<Name>ctrlTree</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Tree</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FieldGroup</Name>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FieldList</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS133198</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ProjEmplTrans</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>