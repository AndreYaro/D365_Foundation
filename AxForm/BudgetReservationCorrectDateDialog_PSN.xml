<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetReservationCorrectDateDialog_PSN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetReservationCorrectDateDialog_PSN extends FormRun
{
    BudgetReservationNewPostingDate_PSN accountingDate;

}
]]></Source>
			</Method>
			<Method>
				<Name>editCorrectionDate</Name>
				<Source><![CDATA[
    public edit BudgetReservationNewPostingDate_PSN editCorrectionDate(boolean _set, BudgetReservationNewPostingDate_PSN _accountingDate = accountingDate)
    {
        if (_set)
        {
            accountingDate = _accountingDate;
        }

        return accountingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        BudgetReservationHeader_PSN budgetReservationHeader;
        budgetReservationHeader.data(element.args().record() as BudgetReservationHeader_PSN);

        element.args().parm(element.getDefaultDateStringByDate(accountingDate));

        BudgetReservationPost_PSN budgetReservationPost = BudgetReservationPost_PSN::newFromBudgetReservationHeader_PSN(budgetReservationHeader);
        budgetReservationPost.parmAccountingDate(this.editCorrectionDate(false, accountingDate));
        budgetReservationPost.runOperation();

        if (element.args().record().dataSource())
        {
            FormDataSource budgetReservationHeader_ds = element.args().record().dataSource();
            budgetReservationHeader_ds.research(true);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDateStringByDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date string in default format.
    /// </summary>
    private str getDefaultDateStringByDate(date _date)
    {
        int dateSequency = 213;

        return date2Str(_date,
            dateSequency,
            DateDay::Auto,
            DateSeparator::Slash,
            DateMonth::Auto,
            DateSeparator::Slash,
            DateYear::Auto,
            DateFlags::FormatAll);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        
        if (element.args()
            && element.args().record() is BudgetReservationHeader_PSN)     
        {
            this.editCorrectionDate(true, PublicSectorUtils::getSystemDateWithUserTimeZoneOffset());
        }
        else    
        {
            // Invalid argument to form (wrong buffer type in args). Prevent form from opening.
            throw error("@SYS22996");        
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>CommandOK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetReservationHeader_PSN budgetReservationHeader;
            budgetReservationHeader.data(element.args().record() as BudgetReservationHeader_PSN);

            date newAccountingDate = element.editCorrectionDate(false);
            boolean canClose = FiscalCalendars::areDatesInSameFiscalYear(
                Ledger::fiscalCalendar(),
                newAccountingDate,
                budgetReservationHeader.AccountingDate);

            if (!canClose)
            {
                warning(strFmt("@Budgeting_BudgetReservationPS:GBRAccountingDateValidationError", element.getDefaultDateStringByDate(budgetReservationHeader.AccountingDate)));
            }
            else
            {
                FiscalCalendarPeriod period = FiscalCalendarPeriod::findPeriodByCalendarDate(Ledger::fiscalCalendar(),
                    newAccountingDate,
                    FiscalPeriodType::Operating);

                if (period)
                {
                    if (period.currentLedgerPeriodStatus() != FiscalPeriodStatus::Open)
                    {
                        canClose = false;

                        warning(strFmt("@SYS18414", element.getDefaultDateStringByDate(newAccountingDate)));
                    }
                }
                else
                {
                    canClose = false;
                }
            }

            if (canClose)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS6098</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>EditCorrectionDate</Name>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editCorrectionDate</DataMethod>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandOK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandCancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>