<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DirPersonUserLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class DirPersonUserLookup extends FormRun
    {
        RecId                       selectedPerson;
        DirPerson                   selectedRecord;

        QueryBuildRange             dirTypeRange;

        boolean                     canSelect;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (!canSelect)
        {
            return;
        }

        // return selected Person Name
        selectedPerson = dirPerson.RecId;
        selectedRecord = DirPerson::find(selectedPerson);

        element.closeSelectRecord(selectedRecord);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    public void closeSelect(str _selectString)
    {
        if (!canSelect)
        {
            return;
        }

        super(_selectString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelectRecord</Name>
				<Source><![CDATA[
    public void closeSelectRecord(Common _selectedRecord)
    {
        if (!canSelect)
        {
            return;
        }

        canSelect = false;

        super(_selectedRecord);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Common                      callerRecord;
        FormDataSource              callerDataSource;
        Object                      callingControl;

        DirPersonUser               personUser;
        DirPartyTable               partyTable;

        canSelect = false;
        if (!element.args() || !element.args().caller())
        {
            // Window must be called with parameters.
            throw error("@SYS22539");
        }

        if (element.args().dataset())
        {
            callingControl              = element.args().caller();
            selectedPerson              = str2int64(element.args().lookupValue());
            selectedRecord              = DirPerson::find(selectedPerson);

            callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
            callerRecord = callerDataSource.cursor();

            switch (callerRecord.TableId)
            {
                case tableNum(DirPartyTable) :
                    partyTable = callerRecord;
                    break;

                case tableNum(DirPersonUser) :
                    personUser = callerRecord;
                    partyTable = DirPartyTable::findRec(personUser.PersonParty);
                    break;
            }
        }

        super();
        this.selectMode(dirPerson_Name);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DirPerson</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            #DirParty
            XDSServices xds = new XDSServices();

            // Trigger the DirPartytable XDS policies by passing the context string
            xds.setXDSContext(0, #RestrictParty);

            super();

            // Disable the DirPartyTable XDS policies by passing a blank context string
            xds.setXDSContext(0, '');
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Builds query structure according to filter selection
        /// </summary>
        /// <remarks>
        /// For filter value All the query returns all DirPersons; for Worker query returns DirPerson.RecId == HCMWorker.PersonParty; for Customer, Vendor or Business Relation query joins DirPerson table with DirPersonExternalParty table on Person party.
        /// </remarks>
        void updateQuery()
        {
            Query                   q;
            QueryBuildDataSource    qbdsParty;
            QueryBuildDataSource    qbdsChild;
            QueryBuildDataSource    qbdsRelation;
            QueryBuildDataSource    qbds;

            int                     qbdsnum;

            q = this.query();
            // prepare base query: DirPartyTable outer joined with DirPartyRelationship
            qbdsParty = q.dataSourceTable(tableNum(DirPerson));
            qbdsRelation = q.dataSourceTable(tableNum(DirPartyRelationship));
            qbdsRelation.clearDynalinks();
            qbdsRelation.clearLinks();
            qbdsRelation.clearRanges();
            qbdsRelation.joinMode(JoinMode::OuterJoin);
            qbdsRelation.enabled(true);

            // disable optional datasource HCMWorker
            if (q.dataSourceTable(tableNum(HcmWorker)))
            {
                q.dataSourceTable(tableNum(HcmWorker)).enabled(false);
                q.dataSourceTable(tableNum(HcmWorker)).joinMode(JoinMode::OuterJoin);
            }
            // disable children datasources for Relations
            for (qbdsnum = 1; qbdsnum <= qbdsRelation.childDataSourceCount(); qbdsnum++)
            {
                qbds = qbdsRelation.childDataSourceNo(qbdsnum);
                // DirPartyTable child datasource is used to present Party Name on a grid and should not be disabled.
                if (qbds.table() != tableNum(DirPartyTable))
                {
                    qbds.enabled(false);
                    qbds.joinMode(JoinMode::OuterJoin);
                }
            }

            q.dataSourceTable(tableNum(DirPartyRelationship)).addForeignkeyRelation('ChildParty', qbdsParty.name());

            // enable/add necessary datasources accourding to filter selection
            switch (entityType.selection())
            {
                case UserExternalPartyEntityFilter::Vendor:
                    qbdsChild =  q.dataSourceTable(tableNum(VendTable));
                    if (!qbdsChild)
                    {
                        qbdsChild =  q.dataSourceTable(tableNum(DirPartyRelationship)).addDataSource(tableNum(VendTable));
                        qbdsChild.addLink(fieldNum(DirPartyRelationship, ParentParty), fieldNum(VendTable,Party));
                    }
                    qbdsChild.joinMode(JoinMode::InnerJoin);
                    qbdsChild.enabled(true);
                    break;

                case UserExternalPartyEntityFilter::Customer:
                    qbdsChild =  q.dataSourceTable(tableNum(CustTable));
                    if (!qbdsChild)
                    {
                        qbdsChild =  q.dataSourceTable(tableNum(DirPartyRelationship)).addDataSource(tableNum(CustTable));
                        qbdsChild.addLink(fieldNum(DirPartyRelationship, ParentParty), fieldNum(CustTable,Party));
                    }
                    qbdsChild.joinMode(JoinMode::InnerJoin);
                    qbdsChild.enabled(true);
                    break;

                case UserExternalPartyEntityFilter::BusinessRelation:
                    qbdsChild =  q.dataSourceTable(tableNum(smmBusRelTable));
                    if (!qbdsChild)
                    {
                        qbdsChild =  q.dataSourceTable(tableNum(DirPartyRelationship)).addDataSource(tableNum(smmBusRelTable));
                        qbdsChild.addLink(fieldNum(DirPartyRelationship, ParentParty), fieldNum(smmBusRelTable,Party));
                    }
                    qbdsChild.joinMode(JoinMode::InnerJoin);
                    qbdsChild.enabled(true);
                    break;

                case UserExternalPartyEntityFilter::Worker:
                    qbdsChild =  q.dataSourceTable(tableNum(HcmWorker));
                    if (!qbdsChild)
                    {
                        qbdsChild =  q.dataSourceTable(tableNum(DirPerson)).addDataSource(tableNum(HcmWorker));
                        qbdsChild.addLink(fieldNum(HcmWorker,Person), fieldNum(DirPartyTable, RecId));
                    }
                    qbdsChild.joinMode(JoinMode::InnerJoin);
                    qbdsChild.enabled(true);
                    qbdsRelation.enabled(false);
                    break;

                case UserExternalPartyEntityFilter::ProspectiveVendor:
                    qbdsChild =  q.dataSourceTable(tableNum(VendRequestCompany));
                    if (!qbdsChild)
                    {
                        qbdsChild =  q.dataSourceTable(tableNum(DirPartyRelationship)).addDataSource(tableNum(VendRequestCompany));
                        qbdsChild.addLink(fieldNum(DirPartyRelationship, ParentParty), fieldNum(VendRequestCompany,VendParty));
                    }

                    qbdsChild.addRange(fieldNum(VendRequestCompany,AccountNum)).value(SysQuery::valueEmptyString());
                    qbdsChild.addRange(fieldNum(VendRequestCompany,VendRequestWorkflowState)).value(SysQuery::valueNot(VendRequestWorkflowState::Complete));
                    qbdsChild.joinMode(JoinMode::InnerJoin);
                    qbdsChild.enabled(true);
                    break;
            }
            this.query(q);
            this.executeQuery();
            // change grid column set
            ReferenceGroup.visible(entityType.selection() != UserExternalPartyEntityFilter::Worker);
        }

]]></Source>
					</Method>
					<Method>
						<Name>email</Name>
						<Source><![CDATA[
        display Email email(DirPartyTable _party)
        {
            LogisticsElectronicAddress  primaryElectronicAddress;
            Email                       email;

            primaryElectronicAddress = DirParty::primaryElectronicAddress(_party.RecId, LogisticsElectronicAddressMethodType::Email);
            if (primaryElectronicAddress)
            {
               email = primaryElectronicAddress.Locator;
            }
            return email;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbdirPerson;

            super();

            qbdirPerson = this.query().dataSourceTable(tableNum(DirPerson));

            // Clear links and dynalinks
            qbdirPerson.clearLinks();
            qbdirPerson.clearDynalinks();
            qbdirPerson.clearRanges();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>DirPartyRelationship</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceName(this.name()).clearLinks();
            this.query().dataSourceName(this.name()).addForeignkeyRelation('ChildParty', dirPerson_ds.name());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>EntityType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean             ret;

            ret = super();

            if (ret)
            {
                dirPerson_ds.updateQuery();
                dirPerson_ds.refresh();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            canSelect = true;
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DirPerson</Name>
			<Table>DirPerson</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AnniversaryDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnniversaryMonth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnniversaryYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthMonth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChildrenNames</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommunicatorSignIn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Gender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hobbies</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Initials</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KnownAs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaritalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonalTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticFirstName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticLastName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneticMiddleName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryAddressLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactTelex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryContactURL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfessionalTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DirPartyRelationship</Name>
			<Table>DirPartyRelationship</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ChildParty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntityDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentParty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelationshipTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<JoinSource>DirPerson</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS105155</Caption>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Main</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>EntityType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>UserExternalPartyEntityFilter</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DirPerson_Name</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>DirPerson</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>email</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>email</DataMethod>
						<DataSource>DirPerson</DataSource>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>ReferenceGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReferenceGroup_Name</Name>
								<DataRelationPath>DirPartyTableParent_FK</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>DirPartyRelationship</DataSource>
						<Label>@SYS126057</Label>
						<ReferenceField>ParentParty</ReferenceField>
						<ReplacementFieldGroup>Name</ReplacementFieldGroup>
					</AxFormControl>
				</Controls>
				<DataSource>DirPerson</DataSource>
				<MultiSelect>No</MultiSelect>
				<Style>Tabular</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SelectArea</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<LeftMode>AutoRight</LeftMode>
						<Top>0</Top>
						<TopMode>BottomEdge</TopMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>OkButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Command>OK</Command>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>CancelButton</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Command>Cancel</Command>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
						<Style>DialogCommitContainer</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>DialogCommit</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>