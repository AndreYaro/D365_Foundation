<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailMediaGallery</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailMediaGallery extends FormRun
{
    boolean isInNewMode;
    boolean isInvokedByOtherForms;
    RetailMediaGalleryInvoker callerForm;
    str callerRecId;
    SysLookupMultiSelectCtrl ctrlMediaUsageDropdown;
    RetailMediaMasterEntity callerMenu;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the Form.
    /// </summary>
    public void init()
    {
        super();
        isInvokedByOtherForms = false;
        this.ProcessIfInvokedByMenuItems();
        // Commented because we don't invoke this page from the Catalog and Channel form for now.
        //this.ProcessIfInvokedByOtherForms();
        this.populateMediaUsageTable();
        ctrlMediaUsageDropdown = SysLookupMultiSelectCtrl::construct(element, LookupStringMediaUsage, queryStr(RetailMediaUsage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateMediaUsageTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// This routine populates the media usage table if the table is not yet populated, this table is used by the Media use dropdown.
    /// </summary>
    private void populateMediaUsageTable()
    {
        RetailTmpMediaUsage mediaUsageTable;
        select RecId from mediaUsageTable;
        if (!mediaUsageTable.RecId)
        {
            str enumValue = enum2str(RetailMediaMasterEntity::Catalog);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Catalog;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Catalog);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Product);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
            mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Product;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Product);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Category);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Category;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Category);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Worker);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Worker;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Worker);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Customer);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Customer;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Customer);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Color);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Color;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Color);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Size);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Size;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Size);
                mediaUsageTable.insert();
            }

            enumValue = enum2str(RetailMediaMasterEntity::Style);
            mediaUsageTable = RetailTmpMediaUsage::findByValue(enumValue);
            if (!mediaUsageTable)
            {
                mediaUsageTable.clear();
                mediaUsageTable.initValue();
                mediaUsageTable.Media = RetailMediaMasterEntity::Style;
                mediaUsageTable.Value = enum2str(RetailMediaMasterEntity::Style);
                mediaUsageTable.insert();
            }
        }
     }

]]></Source>
			</Method>
			<Method>
				<Name>ProcessIfInvokedByMenuItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// This form may heve been invoked by the menu items .
    /// </summary>
    private void ProcessIfInvokedByMenuItems()
    {
        if (element.args())
        {
            callerMenu = element.args().parmEnum();
            if (callerMenu)
            {
                //Set the forma caption as per the caller menu item.
                if (callerMenu ==RetailMediaMasterEntity::Catalog)
                {
                    element.design().caption("@RetailMediaGalleryLabels:CatalogImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Category)
                {
                    element.design().caption("@RetailMediaGalleryLabels:CategoryImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Customer)
                {
                    element.design().caption("@RetailMediaGalleryLabels:CustomerImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Worker)
                {
                    element.design().caption("@RetailMediaGalleryLabels:WorkerImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Product)
                {
                    element.design().caption("@RetailMediaGalleryLabels:ProductImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Color)
                {
                    element.design().caption("@RetailMediaGalleryLabels:ColorImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Size)
                {
                    element.design().caption("@RetailMediaGalleryLabels:SizeImages");
                }
                else if (callerMenu ==RetailMediaMasterEntity::Style)
                {
                    element.design().caption("@RetailMediaGalleryLabels:StyleImages");
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProcessIfInvokedByOtherForms</Name>
				<Source><![CDATA[
    /// <summary>
    /// This form may heve been invoked from the Catalog or the Channel form, in case it has been invoked from any of these form, we will do some processing here.
    /// </summary>
    private void ProcessIfInvokedByOtherForms()
    {
        if (element.args())
        {
            var x = element.args().caller();
            var y = element.args().parm();
            TableId  callerTableId = element.args().dataset();
            var recId = element.args().record().RecId;
            str callerName = 'store';

            if (recId && callerTableId)
            {
                callerForm = RetailMediaGalleryInvoker::RetailStore;
                if (callerTableId == tableNum(Catalog))
                {
                    callerForm = RetailMediaGalleryInvoker::RetailCatalog;
                    callerName = 'catalog';
                }

                isInvokedByOtherForms = true;
                callerRecId = int642Str(recId);
                str message = strFmt("@RetailMediaGalleryLabels:DefineCatalogChannelMedia", callerName);
                info(message);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openMediaAssociationForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the media association form.
    /// </summary>
    private void openMediaAssociationForm()
    {
        FormRun formRun;
        Args args = new Args();
        args.name(formstr(RetailMediaAssociation));

        if (isInvokedByOtherForms)
        {
            args.parmEnum(callerForm);
            args.parm(callerRecId);
        }

        formRun = ClassFactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openImageViewer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Open the image viewer.
    /// </summary>
    private void openImageViewer()
    {
        Args                args;
        FormRun             formRun;
        args = new Args();
        args.name(formStr(RetailMediaImageViewer));
        args.parm(retailImageResource.ResourceUrl);
        formRun = classfactory.formRunClass(args);

        if (formRun)
        {
            formRun.run();
            formRun.wait();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValuesInMediaUsageDropdown</Name>
				<Source><![CDATA[
    /// <summary>
    /// This routine set the selected values of the media use dropdown based on data saved in the database.
    /// </summary>
    private void setValuesInMediaUsageDropdown()
    {
        container mediaUsage;
        container mediaUsageIds;
        str selectedValue;

        if (retailImageResource.IsCatalog)
        {
            selectedValue = enum2Str(RetailMediaMasterEntity::Catalog);
            mediaUsage += selectedValue;
            mediaUsageIds += RetailTmpMediaUsage::findByValue(selectedValue).RecId;
        }

        if (retailImageResource.IsCategory)
        {
            selectedValue = enum2Str(RetailMediaMasterEntity::Category);
            mediaUsage += selectedValue;
            mediaUsageIds += RetailTmpMediaUsage::findByValue(selectedValue).RecId;
        }

        if (retailImageResource.IsCustomer)
        {
            selectedValue = enum2Str(RetailMediaMasterEntity::Customer);
            mediaUsage += selectedValue;
            mediaUsageIds += RetailTmpMediaUsage::findByValue(selectedValue).RecId;
        }

        if (retailImageResource.IsWorker)
        {
            selectedValue = enum2Str(RetailMediaMasterEntity::Worker);
            mediaUsage += selectedValue;
            mediaUsageIds += RetailTmpMediaUsage::findByValue(selectedValue).RecId;
        }

        if (retailImageResource.IsProduct)
        {
            selectedValue = enum2Str(RetailMediaMasterEntity::Product);
            mediaUsage += selectedValue;
            mediaUsageIds += RetailTmpMediaUsage::findByValue(selectedValue).RecId;
        }

        container selectedValues = [mediaUsageIds, mediaUsage];
        ctrlMediaUsageDropdown.set(selectedValues);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearThumbnailImageControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear the thumbnail image from the thumbnail image control.
    /// </summary>
    private void clearThumbnailImageControl()
    {
        ThumbnailImageControl.image(null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValuesFromMediaUsageDropdown</Name>
				<Source><![CDATA[
    /// <summary>
    /// This routine update the data source fields based on the user selection of the media entities.
    /// </summary>
    /// <param name = "selectedValues">User selected values.</param>
    private void getValuesFromMediaUsageDropdown(container selectedValues)
    {
        retailImageResource.IsCatalog = NoYes::No;
        retailImageResource.IsCategory = NoYes::No;
        retailImageResource.IsCustomer = NoYes::No;
        retailImageResource.IsWorker = NoYes::No;
        retailImageResource.IsProduct = NoYes::No;

        int length = conLen(selectedValues);
        for (int counter = 1; counter <= length; counter++)
        {
            str value = conPeek(selectedValues, counter);
            RetailTmpMediaUsage mediaUsage = RetailTmpMediaUsage::findByValue(value);
            if (mediaUsage)
            {
                RetailMediaMasterEntity selectedEntity = mediaUsage.Media;
                switch (selectedEntity)
                {
                   case RetailMediaMasterEntity::Catalog:
                        retailImageResource.IsCatalog = NoYes::Yes;
                        break;
                    case RetailMediaMasterEntity::Category:
                        retailImageResource.IsCategory = NoYes::Yes;
                        break;
                    case RetailMediaMasterEntity::Product:
                        retailImageResource.IsProduct = NoYes::Yes;
                        break;
                    case RetailMediaMasterEntity::Customer:
                        retailImageResource.IsCustomer = NoYes::Yes;
                        break;
                    case RetailMediaMasterEntity::Worker:
                        retailImageResource.IsWorker = NoYes::Yes;
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable, disable controls.
    /// </summary>
    private void enableDisableControls()
    {
        retailImageResource_ds.allowDelete(!retailImageResource.InUse);
        RetailMediaGallery_ImageId.enabled(!retailImageResource.InUse);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailImageResource</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(this.table()).addRange(fieldNum(RetailImageResource, IsPartialUrl)).value(queryValue(NoYes::No));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            ret = super();
            element.setValuesInMediaUsageDropdown();
            element.clearThumbnailImageControl();
            element.enableDisableControls();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            container selectedValues = ctrlMediaUsageDropdown.getSelectedFieldValues();
            element.getValuesFromMediaUsageDropdown(selectedValues);
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ResourceUrl</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (RetailMediaHelper::isAbsoluteURL(RetailImageResource.ResourceUrl))
                {
                    //Create the Thumbnail and Custom images.
                    RetailMediaHelper::updateGalleryWithCustomerHostedImageDetails(RetailImageResource.ResourceUrl, RetailImageResource);
                }
                else
                {
                    info("Incorrect URL, Please provide a correct URL");

                    container c;
                    RetailImageResource.Height = 0;
                    RetailImageResource.Width = 0;
                    RetailImageResource.SizeInKB = 0;
                    RetailImageResource.FileName = '';
                }

                RetailImageResource_ds.research(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ButtonDefineTemplate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            Args args;
            FormRun formRun;

            //Open the RetailMedia form
            args = new Args();
            args.name(formStr(RetailMediaAssociation));
            args.parmEnumType(enumnum(RetailMediaMasterEntity));
            args.parmEnum(callerMenu);

            formRun = classfactory.formRunClass(args);

            if (formRun)
            {
                formRun.run();
                formRun.wait();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommandButtonView</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.openImageViewer();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailImageResource</Name>
			<Table>RetailImageResource</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCatalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsColor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsExternallyHosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPartialUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPos</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSecuredResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsStyle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceBlob</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SharedStorageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SizeInKB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmallImageBlob</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmallImageSharedStorageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmallImageUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThumbnailBlob</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThumbnailSharedStorageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThumbnailUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RetailMediaGalleryLabels:RetailMediaGallery</Caption>
		<DataSource xmlns="">RetailMediaGallery </DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowNewButton xmlns="">Yes</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ApplicationBar</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroupMediaGallery</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonDefineTemplate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@RetailMediaGalleryLabels:DefineMediaTemplate</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemMediaReference</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>RetailMediaReference</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<Type>ActionPaneTab</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroupAssociation</Name>
								<Type>ButtonGroup</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MenuItemAssociateMedia</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>RetailMediaAssociation</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<Caption>@RetailMediaGalleryLabels:Association</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationListGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ExtendedStyle>cardList</ExtendedStyle>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ImageListGroup</Name>
								<ExtendedStyle>BusinessCard</ExtendedStyle>
								<Pattern>BusinessCardThreeFields</Pattern>
								<PatternVersion>1.0</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Image</Name>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>thumbnailImage</DataMethod>
										<DataSource>RetailImageResource</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ImageId</Name>
										<ExtendedStyle>Heading</ExtendedStyle>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ResourceId</DataField>
										<DataSource>RetailImageResource</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Description</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>RetailImageResource</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>None</ArrangeMethod>
								<Style>Card</Style>
							</AxFormControl>
						</Controls>
						<DataSource>RetailImageResource</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>RetailMediaGallery_ImageId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ResourceId</DataField>
						<DataSource>RetailImageResource</DataSource>
						<Label>@RetailMediaGalleryLabels:ResourceId</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RetailMediaGallery_Description</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>RetailImageResource</DataSource>
						<Label>@RetailMediaGalleryLabels:Description</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LookupStringMediaUsage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@RetailMediaGalleryLabels:ImageUse</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTabPage</Name>
						<Pattern>ImagePreview</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl1</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>MediaButtonGroupControl</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>CommandButtonView</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<NormalImage>View</NormalImage>
												<Text>@RetailMediaGalleryLabels:View</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupContainer</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ThumbnailImageControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>smallImage</DataMethod>
										<DataSource>RetailImageResource</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DetailsGroupControl</Name>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Details</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>RetailMediaGallery_ImageURL</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ResourceUrl</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:LocationUrl</Label>
													</AxFormControl>
												</Controls>
												<Caption>@RetailMediaGalleryLabels:Location</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>AdditionalInformation</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ImageFileType</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>FileExtension</DataMethod>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:FileType</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>RetailMediaGallery_Size</Name>
														<AllowEdit>No</AllowEdit>
														<Type>Integer</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>SizeInKB</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:SizeInKB</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>RetailMediaGallery_Width</Name>
														<AllowEdit>No</AllowEdit>
														<Type>Integer</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Width</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:Width</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>RetailMediaGallery_Height</Name>
														<AllowEdit>No</AllowEdit>
														<Type>Integer</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Height</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:Height</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RetailMediaGallery_CreatedDate</Name>
														<AllowEdit>No</AllowEdit>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CreatedDateTime</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:CreatedDate</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RetailMediaGallery_LastModifiedDate</Name>
														<AllowEdit>No</AllowEdit>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ModifiedDateTime</DataField>
														<DataSource>RetailImageResource</DataSource>
														<Label>@RetailMediaGalleryLabels:LastModifiedDate</Label>
													</AxFormControl>
												</Controls>
												<Caption>@RetailMediaGalleryLabels:AdditionalInformation</Caption>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Budget:General</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>