<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>GanttWrkCtr</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class GanttWrkCtr extends FormRun
{
    #SysSystemDefinedButtons
    GanttClient_WrkCtr  ganttClient;
    str origCaption;

}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        ganttClient.close();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableControls</Name>
				<Source><![CDATA[
    public void enableControls()
    {
        boolean canUndo = ganttClient.canUndo();
        // Validate button
        validateBtn.enabled(canUndo);

        // Save button
        saveBtn.enabled(canUndo);

        // Undo button
        undoBtn.enabled(canUndo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableActivityButtonGroups</Name>
				<Source><![CDATA[
    protected void enableActivityButtonGroups(WrkCtrCapRefType _referenceType, boolean _taskIsSelected, int _numOfActivitiesSelected)
    {
        FormButtonGroupActivityPlannedProd.enabled(_referenceType == WrkCtrCapRefType::PlannedOrder);
        FormButtonGroupActivityProd.enabled(_referenceType == WrkCtrCapRefType::Production);
        ProdSchedulingJobButton.enabled(_referenceType == WrkCtrCapRefType::Production && _numOfActivitiesSelected == 1);
        FormButtonGroupActivityProject.enabled(_referenceType == WrkCtrCapRefType::Project);

        FormButtonGroupActivityMaintain.enabled(_taskIsSelected);
        ArrangeJobsButton.enabled(_numOfActivitiesSelected > 1);
        SchedulePrevButton.enabled(_taskIsSelected);
        ScheduleNextButton.enabled(_taskIsSelected);
        ScheduleAroundButton.enabled(_taskIsSelected);
        ActivityInformationButton.enabled(_taskIsSelected);
        HighlightSelectedButton.enabled(_taskIsSelected);
        GraphicReservationsProfileButton.enabled(_numOfActivitiesSelected == 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivtySelected</Name>
				<Source><![CDATA[
    public void onActivtySelected(str _activityId, GanttControlActivityIdCollection _allSelectedActivityIds)
    {
        element.visualization().onActivtySelected(_activityId, _allSelectedActivityIds);

        GanttTmpWrkCtrJob ganttTmpWrkCtrJob = element.visualization().getSelectedGanttTable(false).parmTableBuffer();
        boolean taskIsSelected = (ganttTmpWrkCtrJob.RecId != 0);
        int numOfActivitiesSelected = _allSelectedActivityIds.parmActivityIds().elements();

        this.enableActivityButtonGroups(ganttTmpWrkCtrJob.RefType, taskIsSelected, numOfActivitiesSelected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ganttClient</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current <c>GanttClient</c> object.
    /// </summary>
    /// <returns>The <c>GanttClient</c> object.</returns>
    /// <remarks>This method is invoked by several child forms so it should not be renamed or removed without changing these.</remarks>
    public GanttClient_WrkCtr ganttClient()
    {
        return ganttClient;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().caller() || !(element.args().caller().parmGanttClient() is GanttClient_WrkCtr))
        {
            throw error(error::missingParameter(element.args().caller()));
        }

        ganttClient = element.args().caller().parmGanttClient();
        
        super();

        try
        {
            this.initControls();

            this.refreshControls();
            this.enableActivityButtonGroups(WrkCtrCapRefType::Blank, false, false);
        }
        catch(Exception::Error)
        {
            this.close();
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>visualization</Name>
				<Source><![CDATA[
    private GanttControlVisualization_WrkCtr visualization()
    {
        return ganttClient.parmGanttVisualization() as GanttControlVisualization_WrkCtr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    void initControls()
    {
        this.setViewModeEnablement();
        FormControl popoutButton = element.design().controlName(#SystemDefinedPopoutButton);
        if (popoutButton)
        {
            popoutButton.visible(false);
        }

        element.visualization().parmGanttControl(GanttControl1);

        GanttControl1.onActivityDblClick += eventhandler(element.onActivityDblClick);
        GanttControl1.onActivitySelected += eventhandler(element.onActivtySelected);
        GanttControl1.onActivitiesChanged += eventhandler(element.onActivitiesChangedHandler);
        GanttControl1.onSummaryActivityExpand += eventhandler(element.onSummaryActivityExpand);
        GanttControl1.onSummaryActivityCollapse += eventhandler(element.onSummaryActivityCollapse);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSummaryActivityExpand</Name>
				<Source><![CDATA[
    public void onSummaryActivityExpand(str _activityId)
    {
        element.visualization().onSummaryActivityExpand(_activityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSummaryActivityCollapse</Name>
				<Source><![CDATA[
    public void onSummaryActivityCollapse(str _activityId)
    {
        element.visualization().onSummaryActivityCollapse(_activityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivityDblClick</Name>
				<Source><![CDATA[
    public void onActivityDblClick(str _activityId)
    {
        element.visualization().onActivityDblClick(_activityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivitiesChangedHandler</Name>
				<Source><![CDATA[
    public void onActivitiesChangedHandler(List _modifications, GanttControlActivityModificationResponse _response)
    {
        element.visualization().onActivitiesChangedHandler(_modifications, _response);
        this.enableControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh of the controls triggered by the GanttVisualization classes
    /// </summary>
    void refreshControls()
    {
        this.enableControls();

        if (!origCaption)
        {
            origCaption = element.design().caption();
        }

        GanttView_WrkCtr ganttView = GanttClient.parmGanttView() as GanttView_WrkCtr;
        element.design().caption(strFmt('%1 - %2', origCaption, ganttView.parmCurrentView()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewModeEnablement</Name>
				<Source><![CDATA[
    void setViewModeEnablement()
    {
        GanttView_WrkCtr localGanttView = ganttClient.parmGanttView();
        OrderViewButton.enabled(localGanttView.parmCurrentView() != GanttViewWrkCtr::OrderView);
        ResourceViewButton.enabled(localGanttView.parmCurrentView() != GanttViewWrkCtr::ResourceView);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #task
        int ret;

        ret = super(_taskId);

        if (ret && ganttClient)
        {
            if (_taskId == #taskRefresh)
            {
                ganttClient.reload();
            }
            else if (_taskId == #taskSave)
            {
                ganttClient.save();        
                element.refreshControls();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret = super();

        if (ret && ganttClient.canUndo())
        {
            DialogButton messageResult = Box::yesNoCancel("@SCM:GanttSaveChangesBeforeExit", DialogButton::Yes, "@SYS12229");
            if (messageResult == DialogButton::Yes)
            {
                ganttClient.save();                
            }
            else if (messageResult == DialogButton::Cancel)
            {
                ret = false;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ValidateBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            ganttClient.validateSave();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UndoBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            ganttClient.undo();
        
            element.refreshControls();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            ganttClient.parmGanttVisualization().parmGanttClient().parmGanttView().changeCurrentView();
            element.setViewModeEnablement();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OrderViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            ganttClient.parmGanttVisualization().parmGanttClient().parmGanttView().changeCurrentView();        
            element.setViewModeEnablement();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpandAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().expandAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CollapseAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().collapseAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ArrangeJobsButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().arrangeSelected();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SchedulePrevButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            
            element.visualization().scheduleAroundSelected(GanttScheduleAroundDirection::Previous);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduleNextButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.visualization().scheduleAroundSelected(GanttScheduleAroundDirection::Next);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduleAroundButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
    
            element.visualization().scheduleAroundSelected(GanttScheduleAroundDirection::All);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ActivityInformationButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().showInfo();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HighlightSelectedButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().toggleHighlightOnSelected();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GraphicReservationsProfileButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            WrkCtrTable wrkCtrTable = element.visualization().getSelectedWrkCtrTable();
            if (wrkCtrTable.RecId)
            {
                SmmUtility::openMenuItemForm(menuItemDisplayStr(WrkCtrCapResGraph), wrkCtrTable, element);
            }
            else
            {
                warning("@SCM:GanttNoResourceSelected");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdTableButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToProd();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdRouteButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToProdRoute();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdRouteJobButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToProdJob();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdSchedulingJobButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().openProdJobSchedulingForm(ganttClient);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProdRouteJobSchedButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Set setAllSelectedProdJobRecIds = element.visualization().getAllSelectedProdJobRecIds();
            element.visualization().getSelectedGanttTable().openProdJobDispatchingForm(setAllSelectedProdJobRecIds, ganttClient);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReqTransPoProdButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToPlannedProd();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReqRouteButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToPlannedProdRoute();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReqRouteJobsButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToPlannedProdJob();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjTableMainButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToProj();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjForecastEmplButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.visualization().getSelectedGanttTable().goToProjJob();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GanttControl1</Name>
				<Type>Container</Type>
				<Methods>
					<Method>
						<Name>getContextMenuOptions</Name>
						<Source><![CDATA[
        public str getContextMenuOptions()
        {
            super();

            ContextMenu menu = new ContextMenu();
            List options = new List(types::Class);

            if (FormButtonGroupActivityMaintain.enabled())
            {
                if (GanttWrkCtrMoveJob.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SCM:GanttScheduleFromMaterialAvailability", enum2int(GanttWrkCtrContextMenuOption::SchedMaterialAvailability)));
                }
                if (SchedulePrevButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SYS108490", enum2int(GanttWrkCtrContextMenuOption::SchedPrev)));
                }
                if (ScheduleNextButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SYS108491", enum2int(GanttWrkCtrContextMenuOption::SchedNext)));
                }
                if (ScheduleAroundButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SCM:GanttScheduleJobsAround", enum2int(GanttWrkCtrContextMenuOption::SchedAround)));
                }
                if (ArrangeJobsButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SCM:GanttArrangeJobs", enum2int(GanttWrkCtrContextMenuOption::Arrange)));
                }
            }
            if (FormButtonGroupActivityView.enabled())
            {
                if (HighlightSelectedButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SCM:GanttHighlightSelected", enum2int(GanttWrkCtrContextMenuOption::ToggleHighlight)));
                }
                if (GraphicReservationsProfileButton.enabled())
                {
                    options.addEnd(ContextMenuOption::Create("@SCM:WrkCtrCapResGraph", enum2int(GanttWrkCtrContextMenuOption::CapacityLoad)));
                }
            }

            menu.ContextMenuOptions(options);
            menu.OverrideSystemMenu(true);

            return menu.Serialize();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectedMenuOption</Name>
						<Source><![CDATA[
        public void selectedMenuOption(int selectedOption)
        {
            switch (any2enum(selectedOption))
            {
                case GanttWrkCtrContextMenuOption::SchedMaterialAvailability:
                    element.visualization().scheduleSelectedJobs(GanttSchedDirection::ForwardFromMaterialAvailabilityDate, dateNull(), 0);
                    break;

                case GanttWrkCtrContextMenuOption::SchedPrev:
                    SchedulePrevButton.clicked();
                    break;

                case GanttWrkCtrContextMenuOption::SchedNext:
                    ScheduleNextButton.clicked();
                    break;

                case GanttWrkCtrContextMenuOption::SchedAround:
                    ScheduleAroundButton.clicked();
                    break;

                case GanttWrkCtrContextMenuOption::Arrange:
                    ArrangeJobsButton.clicked();
                    break;

                case GanttWrkCtrContextMenuOption::ToggleHighlight:
                    HighlightSelectedButton.clicked();
                    break;

                case GanttWrkCtrContextMenuOption::CapacityLoad:
                    GraphicReservationsProfileButton.clicked();
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS20037</Caption>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">640</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>FormButtonGroupGeneralMaintain</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>SaveBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@SYS109317</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Command>Save</Command>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ValidateBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS109316</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>UndoBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS109318</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Undo</NormalImage>
								<Text>@SYS63232</Text>
							</AxFormControl>
						</Controls>
						<Caption>@SYS116749</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>FormActionPaneTabGeneral</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupGeneralViewMode</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ResourceViewButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS108497</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>OrderViewButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS108498</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SCM:GanttViewMode</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupGeneralSetup</Name>
								<HelpText>@SYS28910</HelpText>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SetupBtn</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>GanttWrkCtrSetup</MenuItemName>
										<Text>@SYS74604</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SetupViewsBtn</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>GanttWrkCtrView</MenuItemName>
										<Text>@SYS108499</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SetupColorsBtn</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>GanttWrkCtrColor</MenuItemName>
										<Text>@SYS26254</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GanttTimescaleSetup</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>GanttTimescaleSetup</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2186</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupGeneralView</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpandAllButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttExpandAllActivities</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CollapseAllButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttCollapseAllActivities</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS118430</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@SYS115960</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>FormActionPaneTabActivity</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupActivityMaintain</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>GanttWrkCtrMoveJob</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>GanttWrkCtrMoveJob</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ArrangeJobsButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttArrangeJobs</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SchedulePrevButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS108490</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ScheduleNextButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS108491</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ScheduleAroundButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttScheduleJobsAround</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS116749</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupActivityView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GanttWrkCtrLoadResources</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>GanttWrkCtrLoadResources</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ActivityInformationButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS22719</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HighlightSelectedButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttHighlightSelected</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GraphicReservationsProfileButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>WrkCtr</ConfigurationKey>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>WrkCtrCapResGraph</MenuItemName>
										<SaveRecord>No</SaveRecord>
										<Text>@SCM:WrkCtrCapResGraph</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS118430</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupActivityProd</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProdTableButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProdTable</MenuItemName>
										<Text>@SYS114884</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProdRouteButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProdRoute</MenuItemName>
										<Text>@SYS101237</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProdRouteJobButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProdRouteJob</MenuItemName>
										<Text>@SYS1066</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProdSchedulingJobButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProdSchedulingJob</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProdRouteJobSchedButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProdRouteJobSched</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS89639</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupActivityPlannedProd</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Req</ConfigurationKey>
								<Enabled>No</Enabled>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ReqTransPoProdButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ReqTransPoProd</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ReqRouteButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ReqRoute</MenuItemName>
										<Text>@SYS101237</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ReqRouteJobsButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ReqRouteJobs</MenuItemName>
										<Text>@SYS1066</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS8597</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupActivityProject</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjTableMainButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProjTableMain</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjForecastEmplButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>ProjForecastEmpl</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS105983</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@SYS105020</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormContainerControl">
				<Name>GanttControl1</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Container</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension>
					<Name>GanttControl</Name>
					<ExtensionComponents />
					<ExtensionProperties />
				</FormControlExtension>
				<Controls />
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
