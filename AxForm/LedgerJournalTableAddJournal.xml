<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTableAddJournal</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTableAddJournal extends FormRun implements LedgerJournalTableIAddJournal
{
    LedgerJournalName selectedJournalName;
    LedgerJournalType journalTypeFilter;
    TmpCompanyLookup tmpCompanyLookup;

}
]]></Source>
			</Method>
			<Method>
				<Name>getSelectedJournal</Name>
				<Source><![CDATA[
    public LedgerJournalName getSelectedJournal()
    {
        return selectedJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (formHasMethod(this.args().caller(), identifierStr(getJournalTypeForLookup)))
        {
            journalTypeFilter = this.args().caller().getJournalTypeForLookup();
        }
        else
        {
            throw error(Error::wrongUseOfFunction(this.name()));
        }

        UserInfo userInfo;
        select firstonly company from userInfo where userInfo.id == curUserId();

        companyLookup.text(userInfo.company);
        companyLookup.validate();

        tmpCompanyLookup = TmpCompanyLookup::populateFromLedgerJournalName(journalTypeFilter);
        
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>CompanyLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = super();

            if (this.valueStr() != '' && xDataArea::checkAccessible(this.valueStr()))
            {
                journalName.enabled(true);
            }
            else
            {
                // Disable journal type until a valid company is entered in.
                journalName.enabled(false);
                ret = false;
            }

            // Clear the journal type value to enusre the value gets validated under the new company.
            journalName.text('');

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup lookup = SysTableLookup::newParameters(tableNum(TmpCompanyLookup), this, false);
            lookup.addLookupField(fieldNum(TmpCompanyLookup, DataArea));

            Query newQuery = new Query();

            QueryBuildDataSource ds = newQuery.addDataSource(tableNum(TmpCompanyLookup));

            lookup.parmTmpBuffer(tmpCompanyLookup);
            lookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!companyLookup.isValid())
            {
                return;
            }

            changecompany(companyLookup.valueStr())
            {
                SysTableLookup lookup = SysTableLookup::newParameters(tableNum(LedgerJournalName), this, true);
                lookup.addLookupfield(fieldNum(LedgerJournalName, JournalName));
                lookup.addLookupfield(fieldNum(LedgerJournalName, Name));

                Query newQuery = new Query();

                QueryBuildDataSource ds = newQuery.addDataSource(tableNum(LedgerJournalName));
                ds.addRange(fieldNum(LedgerJournalName, JournalType)).value(SysQuery::value(journalTypeFilter));
                ds.addRange(fieldNum(LedgerJournalName, BlockUserGroupId)).value(UserGroupList::groupsForUser());
                
                lookup.parmQuery(newQuery);
                lookup.performFormLookup();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = super();

            select firstonly crosscompany * from selectedJournalName
                where selectedJournalName.DataAreaId == companyLookup.valueStr()
                    && selectedJournalName.JournalName == this.valueStr();

            if (!selectedJournalName)
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (companyLookup.valueStr() != '' && journalName.valueStr() != '')
            {
                element.closeOk();
            }
            else
            {
                element.closeCancel();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS338820</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CompanyLookup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DataAreaId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JournalName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>