<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CatPriceRangeForm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class CatPriceRangeForm extends FormRun
    {
        RefRecId    unitOfMeasureRecId;
        str         priceRangeCurrencyCode;
        real        upperLimitValue;
        real        lowerLimitValue;
        boolean     isAttributeDataTypeInt;
        #CatDisplayCategory
}
]]></Source>
			</Method>
			<Method>
				<Name>addCategoryAttribRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the record in <c>CatDisplayCategoryAttributeRange</c> table for given filter range and attribute.
    /// </summary>
    public void addCategoryAttribRange()
    {
        CatDisplayCategoryFilterRange    catDisplayCategoryFilterRange;
        CatDisplayCategoryAttributeRange catDisplayCategoryAttributeRange;

        ttsbegin;

            select catDisplayCategoryFilterRange
                where  catDisplayCategoryFilterRange.LowerLimit == lowerLimitValue
                    &&  catDisplayCategoryFilterRange.UpperLimit == upperLimitValue;

            if ( !catDisplayCategoryFilterRange )
            {
                catDisplayCategoryFilterRange.LowerLimit = lowerLimitValue;
                catDisplayCategoryFilterRange.UpperLimit = upperLimitValue;
                catDisplayCategoryFilterRange.insert();
            }

            catDisplayCategoryAttributeRange.FilterRange = catDisplayCategoryFilterRange.RecId;
            catDisplayCategoryAttributeRange.FilterAttribute = catDisplayCategoryFilterableAttribute.RecId;
            catDisplayCategoryAttributeRange.UnitOfMeasure = unitOfMeasureRecId;
            catDisplayCategoryAttributeRange.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDisplayCategoryPriceRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the record in <c>CatDisplayCategoryPriceRange</c> table for given filter range and category.
    /// </summary>
    public void addDisplayCategoryPriceRange()
    {
        CatDisplayCategoryFilterRange catDisplayCategoryFilterRange;
        CatDisplayCategoryPriceRange  catDisplayCategoryPriceRange;

        ttsbegin;

            select RecId from catDisplayCategoryFilterRange
                where  catDisplayCategoryFilterRange.LowerLimit == lowerLimitValue
                    &&  catDisplayCategoryFilterRange.UpperLimit == upperLimitValue;

            if ( !catDisplayCategoryFilterRange )
            {
                catDisplayCategoryFilterRange.LowerLimit = lowerLimitValue;
                catDisplayCategoryFilterRange.UpperLimit = upperLimitValue;
                catDisplayCategoryFilterRange.insert();
            }

            catDisplayCategoryPriceRange.FilterRange = catDisplayCategoryFilterRange.RecId;
            catDisplayCategoryPriceRange.SharedData = catDisplayCategoryTable.SharedData;
            catDisplayCategoryPriceRange.Currency = priceRangeCurrencyCode;
            catDisplayCategoryPriceRange.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProcureCatalogPriceRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the record in <c>CatProcureCatalogPriceRange</c> table for given filter range and catalog.
    /// </summary>
    public void addProcureCatalogPriceRange()
    {
        CatDisplayCategoryFilterRange catDisplayCategoryFilterRange;
        CatProcureCatalogPriceRange   catProcureCatalogPriceRange;

        ttsbegin;

            select catDisplayCategoryFilterRange
                where  catDisplayCategoryFilterRange.LowerLimit == lowerLimitValue
                    &&  catDisplayCategoryFilterRange.UpperLimit == upperLimitValue;

            if ( !catDisplayCategoryFilterRange )
            {
                catDisplayCategoryFilterRange.LowerLimit = lowerLimitValue;
                catDisplayCategoryFilterRange.UpperLimit = upperLimitValue;
                catDisplayCategoryFilterRange.insert();
            }

            catProcureCatalogPriceRange.FilterRange = catDisplayCategoryFilterRange.RecId;
            catProcureCatalogPriceRange.ProcureCatalog = catProcureCatalogTable.RecId;
            catProcureCatalogPriceRange.Currency = priceRangeCurrencyCode;
            catProcureCatalogPriceRange.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the UI controls for given filter range or price range.
    /// </summary>
    public void init()
    {
        EcoResAttributeType     attributeType;
        super();

        //Return if parameters are passed
        if (!element.args().caller() || !element.args().parm() || !element.args().record())
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        upperLimitValue =   #CatDisplayCategory_FilterRangeUpperLimit;
        lowerLimitValue =   #CatDisplayCategory_FilterRangeLowerLimit;

        if ( element.args().record().TableId == tablenum(CatDisplayCategoryFilterableAttribute) )
        {
            attributeType = element.args().caller().selectedAttributeDataType(element.args().record().RecId);
            if (attributeType && AttributeDataTypeDiscriminator::checkAttributeDataTypeInteger(attributeType.DataType))
            {
                isAttributeDataTypeInt = true;
                // because the caller datatype is Integer type.
                //make the integer lower and upper limit text boxes visible true
                // and make decimal lower and upper text boxes visible false
                intLowerLimit.visible(true);
                intUpperLimit.visible(true);
                lowerLimit.visible(false);
                upperLimit.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        //Get selected currency code
        priceRangeCurrencyCode = element.args().parm();

         //Initialize appropriate tables
        if ( element.args().record().TableId == tablenum(CatProcureCatalogTable) )
        {
            catProcureCatalogTable.data(element.args().record());
            element.design().caption("@SYS191278");
        }
        if ( element.args().record().TableId == tablenum(CatDisplayCategoryFilterableAttribute) )
        {
            unitOfMeasureRecId = str2int64(element.args().parm());
            catDisplayCategoryFilterableAttribute.data( element.args().record());
            element.design().caption("@SYS308551");
        }
        if ( element.args().record().TableId == tablenum(CatDisplayCategoryTable) )
        {
            catDisplayCategoryTable.data(element.args().record());
            element.design().caption("@SYS191278");
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SetLowerLimitCheckBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            if (this.checked())
            {
                checkBox.enabled(false);
                andBelow.visible(true);
                andBelow.text("@SYS332355");
                if (isAttributeDataTypeInt)
                {
                    intLowerLimit.visible(false);
                }
                else
                {
                    lowerLimit.visible(false);
                }
            }
            else
            {
                checkBox.enabled(true);
                andBelow.visible(false);
                if (isAttributeDataTypeInt)
                {
                    intLowerLimit.visible(true);
                }
                else
                {
                    lowerLimit.visible(true);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Populates the upper limit text field with max value of <c>Real</c> data type.
        /// </summary>
        public void clicked()
        {
            super();

            if (this.checked())
            {
                setLowerLimitCheckBox.enabled(false);
                andAbove.visible(true);
                //Set upper limit as 'and Above'
                andAbove.text("@SYS308915");
                if (isAttributeDataTypeInt)
                {
                    intUpperLimit.visible(false);
                }
                else
                {
                    upperLimit.visible(false);
                }
            }
            else
            {
                setLowerLimitCheckBox.enabled(true);
                andAbove.visible(false);

                if (isAttributeDataTypeInt)
                {
                    intUpperLimit.visible(true);
                }
                else
                {
                    upperLimit.visible(true);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks both check box selection condition, sets Upperlimit, lowerlimit values
        /// and calls the add method of appropriate table.
        /// </summary>
        void clicked()
        {
            //Check if both the check box selected and throw error message.
            if (checkBox.checked() && setLowerLimitCheckBox.checked())
            {
                throw error("@SYS332357");
            }

            //Get upper limit if not set for maximum limit
            if ( !checkBox.checked() )
            {
                upperLimitValue = isAttributeDataTypeInt ? intUpperLimit.value() : upperLimit.realValue();
            }
            //Get lower limit if not set for minimum limit
            if (!setLowerLimitCheckBox.checked())
            {
                lowerLimitValue = isAttributeDataTypeInt ? intLowerLimit.value() : lowerLimit.realValue();
            }

            if ( element.args().record().TableId == tablenum(CatProcureCatalogTable) )
            {
                element.addProcureCatalogPriceRange();
            }
            if ( element.args().record().TableId == tablenum(CatDisplayCategoryFilterableAttribute) )
            {
                element.addCategoryAttribRange();
            }
            if ( element.args().record().TableId == tablenum(CatDisplayCategoryTable) )
            {
                element.addDisplayCategoryPriceRange();
            }
            //Refresh the base form list
            element.args().caller().refreshRangeListView(element.args().record());
            element.closeSelect('');
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CatDisplayCategoryTable</Name>
			<Table>CatDisplayCategoryTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AncestorCategoryToCollapseTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDescriptiveDataSynchronized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHidden</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SharedData</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TargetCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TreeLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpdateType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatDisplayCategoryFilterableAttribute</Name>
			<Table>CatDisplayCategoryFilterableAttribute</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryAttributeLookup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFilterable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SharedData</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatProcureCatalogTable</Name>
			<Table>CatProcureCatalogTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultipleGridPageSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Owner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcurementHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SingleGridPageSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpdateType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS191227</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>StaticText</Name>
				<ElementPosition>409044504</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS330351</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>NewFilterRangeRowGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>IntLowerLimit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>511305630</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<Label>@SYS81437</Label>
								<LimitText>15</LimitText>
								<LimitTextMode>Fixed</LimitTextMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SetLowerLimitCheckBox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>818089008</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS332354</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AndBelow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS332355</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>LowerLimit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<Label>@SYS81437</Label>
								<LimitText>15</LimitText>
								<LimitTextMode>Fixed</LimitTextMode>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>IntUpperLimit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>869219571</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<Label>@SYS21886</Label>
								<LimitText>15</LimitText>
								<LimitTextMode>Fixed</LimitTextMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CheckBox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS191226</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AndAbove</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS21886</Label>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>UpperLimit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<Label>@SYS21886</Label>
								<LimitText>15</LimitText>
								<LimitTextMode>Fixed</LimitTextMode>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SYS332356</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>