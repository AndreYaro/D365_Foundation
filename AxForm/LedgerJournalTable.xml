<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTable extends FormRun implements LedgerIJournalFormRefreshable, LedgerIProcessGeneralJournals, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    private boolean enableProjectOperationsIntegrationFeature;
    LedgerJournalFormTable journalFormTable;
    boolean inCreate;
    boolean inDelete;
    boolean bankAccount_IT;
    boolean enableLedgerJournalTable_W;
    boolean isGlobalEntry = false;

    LedgerJournalNameId expenseJournalNameId;

    QueryBuildDataSource queryDataSourceGeneralJournal;
    FormObservableLink lockImageObservable = new FormObservableLink();

    boolean isSimpleMethod;

    boolean enableCustomDeclaration_IT;
    private boolean isTaxIntegrationEnabledForJournal =
        Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Journal);
    private boolean isTaxIntegrationEnabledForProj = 
        Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Project);

    boolean isFinTagConfigurationSetForCurrent = FinTagConfiguration::isFinTagConfigurationSet(curExt());
    private boolean isAssetIgnoreJournalSplittingFlightEnabled = AssetIgnoreJournalSplittingFlight::instance().isEnabled();

    #ISOCountryRegionCodes

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        isSimpleMethod
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        LedgerJournalTable_ds.reread();
        LedgerJournalTable_ds.refresh();

        element.setAccountAccess();
        element.showProperJournalLinesButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    public void bookRefresh()
    {
        LedgerJournalTable_ds.reread();
        LedgerJournalTable_ds.refresh();

        element.setAccountAccess();
        element.showProperJournalLinesButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    public boolean canSubmitToWorkflow()
    {
        boolean canSubmitToWorkflow = false;

        if (ledgerJournalTable.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::NotSubmitted)
        {
            canSubmitToWorkflow = true;
        }
        return canSubmitToWorkflow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeAllOpenPosted_RU</Name>
				<Source><![CDATA[
    public void changeAllOpenPosted_RU(AllOpenPosted _allOpenPosted = AllOpenPosted::All)
    {
        allOpenPostedField.selection(_allOpenPosted);
        allOpenPostedField.selectionChange();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        journalFormTable.formClosePre();

        if (LedgerParameters::isChineseVoucher_CN()
            && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
        {
            classfactory.lastValuePut(this.pack(), curext(), curUserId(), UtilElementType::Form, formStr(LedgerJournalTable));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables controls on the form.
    /// </summary>
    /// <remarks>
    /// This method is called from the enableButtonsActive method of the JournalFormTable class. The
    /// JournalFormTable.enableButtonsActive method is called by the active method on the data source
    /// of this form.
    /// The form functionality is limited by the form context and the rights of the security model.
    /// </remarks>
    public void enableButtonsActive()
    {
        LedgerJournalType journalType = journalFormTable.journalTypeId();
        UserGroupId approveGroupId = ledgerJournalTable.ledgerJournalName().ApproveGroupId;

        #ISOCountryRegionCodes

        printMenu.enabled(ledgerJournalTable.RecId != 0);

        // Set the lines button's display menu item to point to the correct lines form.
        journalLines.menuItemName(journalFormTable.journalTableData().journalStatic().menuItemStrLines(enum2int(journalType)));

        openLinesInExcel.visible(journalFormTable.isOpenLinesInExcelEnabled());

        SimulatePosting.visible(false);

        switch (journalType)
        {
            case LedgerJournalType::Periodic :
                checkJournal.visible(false);
                postJournal.visible(false);
                course.visible(false);
                break;

            case LedgerJournalType::PurchaseLedger :
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransInvoiceRegister));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransInvoiceRegister));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransInvoiceRegister));
                SimulatePosting.visible(true);
                break;

            case LedgerJournalType::Daily :
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    if (isSimpleMethod)
                    {
                        simpleMethod_CN.visible(false);
                        advanced_CN.visible(true);
                    }
                    else
                    {
                        simpleMethod_CN.visible(true);
                        advanced_CN.visible(false);
                    }
                }
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransDaily));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransDaily));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransDaily));
                sadFinanceTable_PL.visible(true);
                break;

            case LedgerJournalType::Allocation :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);

                // only posting supported not post and transfer
                ledgerJournalPostTransfer.visible(false);

                // dimensions are not editable
                tabFinancialDimensions.enabled(false);

                balanceControl.visible(false);

                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransAllocation));
                ledgerJournalPostTransfer.enabled(false);
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransAllocation));

                ProcessAllocationRequest.visible(true);

                break;

            case LedgerJournalType::Elimination :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);

                // only posting supported not post and transfer
                ledgerJournalPostTransfer.visible(false);

                // dimensions are not editable
                tabFinancialDimensions.enabled(false);

                balanceControl.visible(false);

                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransElimination));
                ledgerJournalPostTransfer.enabled(false);
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransElimination));
                break;

            case LedgerJournalType::Approval :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransApprove));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransApprove));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransInvApprove));
                break;

            case LedgerJournalType::Payment :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                if ((bankAccount_IT) &&
                    (!ledgerJournalTable.allowPosting_IT()))
                {
                    postJournal.visible(false);
                }
                else
                {
                    postJournal.visible(true);
                }
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendPaym));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendPaym));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransVendPaym));
                break;

            case LedgerJournalType::CustPayment :
                // this is specific to CustPayment
                custPaymEntryButton.visible(true);

                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustPaym));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustPaym));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustPaym));
                break;

            case LedgerJournalType::Netting :
                checkJournal.visible(false);
                postJournal.visible(true);
                post.menuItemName(menuItemActionStr(LedgerJourPostLJTransNetting));
                ledgerJournalPostTransfer.enabled(false);
                break;

            case LedgerJournalType::Cost :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCost));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCost));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkCOSJournalTable));
                break;

            case LedgerJournalType::VendInvoiceRegister :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendInvoice));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendInvoice));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransVendInvoice));
                break;

            case LedgerJournalType::Assets :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransAsset));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransAsset));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransAsset));
                openLinesInExcel.visible(true);
                break;

            case LedgerJournalType::AssetBudgets :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(false);
                post.enabled(false);
                ledgerJournalPostTransfer.enabled(false);
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransAssetBudget));
                break;

            case LedgerJournalType::CustPaymRemittance :
                journalLines.enabled(ledgerJournalTable.BankAccountId ? true : false);

                if (!journalLines.enabled() &&
                    ledgerJournalTable.numOfLines() > 0)
                {
                    journalLines.enabled(true);
                }

                checkJournal.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustBOERemit));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustBOERemit));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustBOERemit));
                break;

            case LedgerJournalType::VendPaymRemittance :
                journalLines.enabled(ledgerJournalTable.BankAccountId ? true : false);

                if (!journalLines.enabled() &&
                    ledgerJournaltable.numOfLines() > 0)
                {
                    journalLines.enabled(true);
                }

                checkJournal.visible(true);
                if ((bankAccount_IT) &&
                    (!ledgerJournalTable.allowPosting_IT()))
                {
                    postJournal.visible(false);
                }
                else
                {
                    postJournal.visible(true);
                }

                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendPrNoteRemit));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendPrNoteRemit));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransPrNtRemit));
                break;

            case LedgerJournalType::CustBillOfExchangeDraw :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustBOEDraw));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustBOEDraw));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustBOEDraw));
                break;

            case LedgerJournalType::CustBillOfExchangeProtest :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustBOEProtest));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustBOEProtest));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustBOEProtest));
                break;

            case LedgerJournalType::CustBillOfExchangeRedraw :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustBOERedraw));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustBOERedraw));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustBOERedraw));
                break;

            case LedgerJournalType::CustBillOfExchangeSettle :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransCustBOESettle));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransCustBOESettle));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransCustBOESettle));
                break;

            case LedgerJournalType::VendPromissoryNoteDraw :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendPrNoteDraw));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendPrNoteDraw));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransPrNtDraw));
                break;

            case LedgerJournalType::VendPromissoryNoteRedraw :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendPrNoteRedraw));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendPrNoteRedraw));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransPrNtRedraw));
                break;

            case LedgerJournalType::VendPromissoryNoteSettle :
                checkJournal.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransVendPrNoteSettle));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransVendPrNoteSettle));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransPrNtSettle));
                break;

            case LedgerJournalType::BankChequeReversal :
                SimulatePosting.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransBankChequeRev));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransBankChequeRev));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLdgrJourTransBankChequeRev));
                break;

            case LedgerJournalType::BankDepositPaymCancel :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransBankDepPaymCanc));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransBankDepPaymCanc));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLdgrJrTransBnkDepPayCancel));
                break;

            case LedgerJournalType::PayrollDisbursement :
                postJournal.visible(true);
                ledgerJournalPostTransfer.visible(false);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTPayrolLDisbursement));
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkJourPayrollDisbursement));

                balanceControl.visible(false);
                break;

            case LedgerJournalType::Payroll_RU:
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    checkJournal.visible(true);
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransRPay));
                    postJournal.visible(true);
                    post.menuItemName(menuitemActionStr(LedgerJourPostLJTransRPay));
                    ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransRPay));
                    periodControl_RU.visible(true);
                    reverse_RU.visible(true);
                    reverseType_RU.visible(true);
                    ledgerJournalTable_ds.allowCreate(false);
                    ledgerJournalTable_ds.startPosition(1);

                    journalCreate_RU.visible(true);
                    journalCreate_RU.configurationKey(configurationKeyNum(RPayroll));
                    journalCreate_RU.neededPermission(AccessType::Add);

                    ledgerJournalCreate_RU.enabled(RPayController::canCreateJournal(false));
                    ledgerJournalCreateStorno_RU.enabled(RPayController::canCreateReverseJournal(false));
                }
                break;

            case LedgerJournalType::Assets_RU :
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    checkJournal.visible(true);
                    postJournal.visible(true);

                    if (ledgerJournalTable.Posted)
                    {
                        rAssetReportMB4.visible(true);
                        rAssetReportMB8.visible(true);
                    }
                    else
                    {
                        rAssetReportMB4.visible(false);
                        rAssetReportMB8.visible(false);
                    }
                    post.menuItemName(menuitemActionStr(LedgerJourPostLJTransAsset_RU));
                    ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransAsset_RU));
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransAsset_RU));
                }
                break;

            case LedgerJournalType::AssetBudgets_RU :
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    checkJournal.visible(true);
                    postJournal.visible(false);
                    post.enabled(false);
                    ledgerJournalPostTransfer.enabled(false);
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransAssetBudget_RU));
                }
                break;

            case LedgerJournalType::RDeferrals:
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    checkJournal.visible(true);
                    postJournal.visible(true);
                    currency.allowEdit(false);
                    post.menuItemName(menuitemActionStr(LedgerJourPostLJTransRDeferrals));
                    ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransRDeferrals));
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransRDefferals));
                }
                break;
            case LedgerJournalType::RCash :
                if (RCashParameters::isCashModuleEnabled())
                {
                    checkJournal.visible(true);
                    postJournal.visible(true);
                    post.menuItemName(menuitemActionStr(LedgerJourPostLJTransRCash));
                    ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransRCash));
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransRCash));
                }
                break;
            case LedgerJournalType::RTax25TaxDiffByBalance,
                 LedgerJournalType::RTax25,
                 LedgerJournalType::RAssetAssessedTax,
                 LedgerJournalType::RAssetTransportTax,
                 LedgerJournalType::RAssetLandTax,
                 LedgerJournalType::RTax25TaxRemainGoods:
                RTax25Version.visible(true);
            //no break
            case LedgerJournalType::RTax25AmountDifference,
                 LedgerJournalType::RTax25ExchDifference,
                 LedgerJournalType::RTax25DebtDebitReserve:
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    checkJournal.visible(true);
                    postJournal.visible(true);
                    periodControl_RU.visible(true);
                    reverse_RU.visible(true);
                    reverseType_RU.visible(true);
                    ledgerJournalTable_ds.allowCreate(false);
                    ledgerJournalTable_ds.startPosition(1);

                    journalCreate_RU.visible(true);
                    journalCreate_RU.neededPermission(NeededPermission::Create);

                    if (journalFormTable.journalTypeId() != LedgerJournalType::RTax25TaxDiffByBalance
                        && journalFormTable.journalTypeId() != LedgerJournalType::RTax25
                        && journalFormTable.journalTypeId() != LedgerJournalType::RTax25AmountDifference
                        && journalFormTable.journalTypeId() != LedgerJournalType::RTax25ExchDifference
                        && journalFormTable.journalTypeId() != LedgerJournalType::RTax25TaxRemainGoods
                        && journalFormTable.journalTypeId() != LedgerJournalType::RTax25DebtDebitReserve)
                    {
                        journalCreate_RU.configurationKey(configurationKeyNum(RAsset));
                    }
                    ledgerJournalCreate_RU.enabled(element.args().dataset() == tableNum(RTax25RegisterJournalTable) &&
                                                   LedgerJournalCreate_Tax25_RU::canCreateJournalStatic(element.args().record(),
                                                                                                        journalFormTable.journalTypeId(),
                                                                                                        false));
                    ledgerJournalCreateStorno_RU.enabled(element.args().dataset() == tableNum(RTax25RegisterJournalTable) &&
                                                         LedgerJournalCreate_Tax25_RU::canCreateReverseJournalStatic(element.args().record(),
                                                                                                                     journalFormTable.journalTypeId(),
                                                                                                                     false));
                    post.menuItemName(menuitemActionStr(LedgerJourPostLJTransDaily));
                    ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransDaily));
                    checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransDaily));
                }
                break;

            case LedgerJournalType::FBTaxAssessmentAdjustments_BR :
                checkJournal.visible(true);
                postJournal.visible(true);
                post.menuItemName(menuitemActionStr(FBLedgerJourPostLJTransTaxAssessAdj_BR));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransDaily));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransDaily));
                element.enableFBTaxAssessmentAdjustFields_BR();
                break;

            case LedgerJournalType::CustomsDeclaration_IT:
                checkJournal.visible(true);
                postJournal.visible(true);
                balanceControl.visible(false);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransDaily));
                ledgerJournalPostTransfer.menuItemName(menuitemActionStr(LedgerJourPostTrLJTransDaily));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransDaily));
                break;

            case LedgerJournalType::ReportingCurrencyAdjustment :
                checkJournal.visible(true);
                SimulatePosting.visible(true);
                postJournal.visible(true);
                Course.visible(false);
                ledgerJournalPostTransfer.visible(false);
                tabFinancialDimensions.enabled(true);
                balanceControl.visible(false);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransReportingCurrencyAdjustment));
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLJTransReportingCurrencyAdjustment));
                NewGlobalJournal.menuItemName(menuitemDisplayStr(LedgerJournalTableAddReportingCurrencyAdjustmentJournal));
                sadFinanceTable_PL.visible(true);
                element.enableFieldsForReportingCurrencyAdjustment();
                break;

            default :
                journalLines.visible(false);

                postJournal.visible(true);
                post.enabled(false);
                post.menuItemName(menuitemActionStr(LedgerJourPostLJTransDaily));

                ledgerJournalPostTransfer.enabled(false);

                checkJournal.enabled(false);
                checkJournal.menuItemName(menuitemActionStr(LedgerJourChkLedgerJourTransDaily));
        }

        if ((ledgerJournalTable.JournalType == LedgerJournalType::VendInvoicePool) ||
            (ledgerJournalTable.JournalType == LedgerJournalType::RCash && !ledgerJournalTable.canDeleteJournal()))
        {
            LedgerJournalTable_DS.allowDelete(false);
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN])
            && (LedgerParameters::isJournalApproval_CN() == NoYes::No
                || journalFormTable.journalTypeId() != LedgerJournalType::Daily))
        {
            ledgerJournalTable_ApprovalStatus_CN.visible(false);
        }

        if (ledgerJournalTable.reportedAsReady())
        {
            reportAsReady.enabled(false);
            approve.enabled(!ledgerJournalTable.approved() || ledgerJournalTable.rejected());
            reject.enabled(!ledgerJournalTable.rejected());
        }
        else
        {
            reportAsReady.enabled(true);
            approve.enabled(false);
            reject.enabled(false);
        }

        if (ledgerJournalTable.ledgerJournalName().ApproveActive)
        {
            if (!UserInfoHelp::userInUserGroup(curUserId(), approveGroupId))
            {
                approve.enabled(false);
                reject.enabled(false);
            }
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]))
        {
            ledgerJournalPreview.enabled(ledgerJournalTable.Posted);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCustomsFieldsActive_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the customs fields.
    /// </summary>
    public void enableCustomsFieldsActive_IT()
    {
        boolean voucherNotExists;

        voucherNotExists = !ledgerJournalTable.existVoucher();

        ledgerJournalTable_ds.object(fieldnum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(voucherNotExists);
        ledgerJournalTable_Customs_IT_ds.object(fieldnum(LedgerJournalTable_Customs_IT, CustomsId)).allowEdit(voucherNotExists);
        ledgerJournalTable_Customs_IT_ds.object(fieldnum(LedgerJournalTable_Customs_IT, ShipperId)).allowEdit(voucherNotExists);
        ledgerJournalTable_Customs_IT_ds.object(fieldnum(LedgerJournalTable_Customs_IT, CustomsDebt)).allowEdit(voucherNotExists);

        ledgerJournalTable_Customs_IT_ds.object(fieldnum(LedgerJournalTable_Customs_IT, CustomsId)).mandatory(LedgerJournalTable_Customs_IT.CustomsDebt == CustomsDebt_IT::Customs);
        ledgerJournalTable_Customs_IT_ds.object(fieldnum(LedgerJournalTable_Customs_IT, ShipperId)).mandatory(LedgerJournalTable_Customs_IT.CustomsDebt == CustomsDebt_IT::Shipper);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFBTaxAssessmentAdjustFields_BR</Name>
				<Source><![CDATA[
    //
    // This method disables most fields when the journal is type Tax assessment adjustment.
    //
    void enableFBTaxAssessmentAdjustFields_BR()
    {
        editExchRate.enabled(false);
        editExchRateSecond.enabled(false);

        ledgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, FiscalEstablishment_BR)).visible(true);
        ledgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, TaxType_BR)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    void enableFieldsActive()
    {
        if (ledgerJournalTable.FixedOffsetAccount == NoYes::Yes ||
            ledgerJournalTable.JournalType == LedgerJournalType::PurchaseLedger)
        {
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Ledger);
        }
        else
        {
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(true);
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(true);
        }

        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CustVendNegInstProtestProcess)).allowEdit(ledgerJournalTable.ProtestSettledBill);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankRemittanceType)).allowEdit(!ledgerJournalTable.ProtestSettledBill);

        if (ledgerJournalTable.JournalType == LedgerJournalType::CustPaymRemittance ||
            ledgerJournalTable.JournalType == LedgerJournalType::VendPaymRemittance)
        {
            groupPromissorynote_BankAccountId.allowEdit(!ledgerJournalTable.existVoucher());
        }
        else if (ledgerJournalTable.JournalType == LedgerJournalType::Allocation)
        {
            this.enableFieldsForAllocation();
        }
        else if (ledgerJournalTable.JournalType == LedgerJournalType::Elimination)
        {
            this.enableFieldsForElimination();
        }
        else if (ledgerJournalTable.JournalType == LedgerJournalType::ReportingCurrencyAdjustment)
        {
            this.enableFieldsForReportingCurrencyAdjustment();
        }

        if (journalFormTable.journalTypeId() == LedgerJournalType::Daily)
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseEntry)).visible(true);
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseDate)).visible(true);
            }

            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseDate)).allowEdit(ledgerJournalTable.ReverseEntry ? true : false);
        }
        else
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseEntry)).visible(false);
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseDate)).visible(false);
            }
        }

        if (journalFormTable.journalTypeId() == LedgerJournalType::BankChequeReversal ||
            journalFormTable.journalTypeId() == LedgerJournalType::BankDepositPaymCancel)
        {
            this.enableFieldsForBank();
        }

        if (journalFormTable.journalTypeId() == LedgerJournalType::Netting)
        {
            this.enableFieldsForNetting();
        }

        if (enableCustomDeclaration_IT)
        {
            element.enableCustomsFieldsActive_IT();
        }

        if (Ledger::reportingCurrency())
        {
            //Checks ledger reporting and accounting currency are not same and document currency not same as ledger reporting currency.
            boolean canEditReportingCurrencyExchangeRate = ledgerJournalTable.LedgerJournalReportingCurrencyExchangeRates::canEditReportingCurrencyExchangeRate();

            editReportingCurrencyExchRate.enabled(Ledger::isReportingCurrencyDefined());
            editReportingCurrencyExchRate.allowEdit(canEditReportingCurrencyExchangeRate);

            editReportingCurrencyExchRateSecond.enabled(Ledger::isReportingCurrencyDefined());
            editReportingCurrencyExchRateSecond.allowEdit(canEditReportingCurrencyExchangeRate);

        }
        else
        {
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReportingCurrencyFixedExchRate)).allowEdit(false);
            editReportingCurrencyExchRate.enabled(false);
            editReportingCurrencyExchRateSecond.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForAllocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables most fields when the journal is an allocation journal.
    /// </summary>
    /// <remarks>
    /// An allocation journal does not allow entry of ledgers.
    /// </remarks>
    void enableFieldsForAllocation()
    {
        // the fields in the overview grid and on general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalName)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);

        // additional fields on the general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DetailSummaryPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LinesLimitBeforeDistribution)).allowEdit(false);

        // fields on Setup tab are display only
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, VoucherAllocatedAtPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CurrencyCode)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, FixedExchRate)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, euroTriangulation)).allowEdit(false);
        editExchRate.enabled(false);
        editExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReportingCurrencyFixedExchRate)).allowEdit(false);
        editReportingCurrencyExchRate.enabled(false);
        editReportingCurrencyExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForReportingCurrencyAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables most fields when the journal is an reporting currency adjustment journal.
    /// </summary>
    /// <remarks>
    /// An reporting currency adjustment journal does not allow entry of currency, exchange rates and other country specific fields
    /// </remarks>
    void enableFieldsForReportingCurrencyAdjustment()
    {
        // the fields in the overview grid and on general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalName)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);

        // additional fields on the general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DetailSummaryPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LinesLimitBeforeDistribution)).allowEdit(false);

        // the fields in the setup tab - display only
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, VoucherAllocatedAtPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CurrencyCode)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, FixedExchRate)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, euroTriangulation)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseDate)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, TaxObligationCompany)).allowEdit(false);
        editExchRate.enabled(false);
        editExchRateSecond.enabled(false);
        GroupReversingEntry.visible(false);
        // the fields in the setup tab - Visibility
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CurrentOperationsTax)).visible(true);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).visible(true);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, WorkflowApprovalStatus)).visible(true);

        // the country specific fields are not required for reporting currency adjustment journal
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, DocumentType)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, LineNumber)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, DocumentNumber)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, DocumentDate)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, ItemNumber)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, OrderOrAgreementCode)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, CIPEcode)).visible(false);
        BaseDocument_IT_ds.object(fieldNum(BaseDocument_IT, TenderCode)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, ApprovalStatus_CN)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, CashAccount_W)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, InformByTelex_LT)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, InformByPhone_LT)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, DebitCurrencyCode_LT)).visible(false);
        LedgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, Prepayment_W)).visible(false);
        FiscalInformation_BR.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForBank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the field enablement for the bank journal types.
    /// </summary>
    void enableFieldsForBank()
    {
        // Disable the creation of new journals
        LedgerJournalTable_ds.allowCreate(false);

        // Disable these fields in the overview grid and on general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalName)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Log)).allowEdit(false);

        // Disable this additional field on the general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LinesLimitBeforeDistribution)).allowEdit(false);

        // Disable all fields on the Setup tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, VoucherAllocatedAtPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CurrencyCode)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, FixedExchRate)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, euroTriangulation)).allowEdit(false);
        editExchRate.enabled(false);
        editExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReportingCurrencyFixedExchRate)).allowEdit(false);
        editReportingCurrencyExchRate.enabled(false);
        editReportingCurrencyExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);

        balanceControl.visible(false);

        // Disable all fields on the Dimensions tab
        tabFinancialDimensions.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForNetting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the field enablement for the netting journal types.
    /// </summary>
    void enableFieldsForNetting()
    {
        // Disable the creation of new journals
        LedgerJournalTable_ds.allowCreate(false);

        // Disable these fields in the overview grid and on general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Log)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DetailSummaryPosting)).allowEdit(false);

        // Disable these fields on the Setup tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, VoucherAllocatedAtPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, EUROTriangulation)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, TaxObligationCompany)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LinesLimitBeforeDistribution)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).allowEdit(false);

        balanceControl.visible(false);

        // Remove these fields on the History tab
        reportedAsReadyBy.visible(false);
        approvalProcedure_ApprovalStatus_CN.visible(false);
        approvalProcedure_Approver.visible(false);
        rejectedBy.visible(false);
        origin.visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldsForGlobalEntry</Name>
				<Source><![CDATA[
    private void setFieldsForGlobalEntry()
    {
        #SysSystemDefinedButtons

        ledgerJournalTable_dataAreaId.visible(isGlobalEntry);
        newGlobalJournal.visible(isGlobalEntry);

        element.control(this.controlId(#SystemDefinedNewButton)).visible(!isGlobalEntry);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalTypeForLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the journal type the form is currently filtered to.
    /// </summary>
    /// <returns>The ledger journal type the form is filtered to.</returns>
    public LedgerJournalType getJournalTypeForLookup()
    {
        return element.args().parmEnum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForElimination</Name>
				<Source><![CDATA[
    //
    // This method disables most fields when the journal is type Elimination.
    //
    void enableFieldsForElimination()
    {
        // cannot create new journal entries
        if (CompanyInfo::isEliminationCompany() == NoYes::No)
        {
            LedgerJournalTable_ds.allowCreate(false);
        }

        // the fields in the overview grid and on general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);

        if (ledgerJournalTable.Posted == NoYes::No)
        {
            // this is the Description
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Name)).allowEdit(true);
        }
        else
        {
            LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Name)).allowEdit(false);
        }

        // additional fields on the general tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DetailSummaryPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LinesLimitBeforeDistribution)).allowEdit(false);

        // fields on Setup tab are display only
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetAccountType)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OffsetLedgerDimension)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DocumentNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, VoucherAllocatedAtPosting)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, CurrencyCode)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, FixedExchRate)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, euroTriangulation)).allowEdit(false);
        editExchRate.enabled(false);
        editExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReportingCurrencyFixedExchRate)).allowEdit(false);
        editReportingCurrencyExchRate.enabled(false);
        editReportingCurrencyExchRateSecond.enabled(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, LedgerJournalInclTax)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);

        //fields on Blocking tab- take defaults
        // the Dimensions Tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, DefaultDimension)).allowEdit(false);
        // the History Tab
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReportedAsReadyBy)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Approver)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, RejectedBy)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OriginalCompany)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OriginalJournalNum)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Posted)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, PostedDateTime)).allowEdit(false);
        LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, Log)).allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        #ISOCountryRegionCodes
        AccessRight accessRight;
        boolean financialsDimensionsEnabled = false;
        enableProjectOperationsIntegrationFeature = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();

        container lastValue;

        // Container combines all country codes attached to all fields/their EDT's in the table. Cache before super() so usable by FormDataSource.init()
        enableLedgerJournalTable_W = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCN, #isoLT, #isoLV, #isoEE, #isoRU, #isoCZ, #isoHU, #isoPL]);

        if (!enableLedgerJournalTable_W)
        {
            enableLedgerJournalTable_W = BrazilParameters::isEnabled();
        }

        if (!enableLedgerJournalTable_W)
        {
            enableLedgerJournalTable_W = PaymentFormatCodeSets_W::isISO20022Country();
        }

        journalFormTable = LedgerJournalFormTable::construct(element);

        if (strLwr(this.args().parm()) == 'global')
        {
            isGlobalEntry = true;
        }

        super();

        if (LedgerParameters::find().JournalSortingDirection == AscendingDescending::Descending)
        {
            LedgerJournalTable_ds.query().dataSourceTable(tableNum(LedgerJournalTable)).addSortField(fieldNum(LedgerJournalTable, JournalNum), SortOrder::Descending);
        }

        OffsetAccount.parmIsDefaultAccount(true);
        OffsetAccount.parmValidateBlockedForManualEntry(true);

        OfficeAppCopilotForFinanceFeatureCallout::loadCopilotForFinanceFeatureCallout(AllOpenPostedField.name());

        custPaymEntryButton.visible(journalFormTable.journalTypeId() == LedgerJournalType::CustPayment);
        correction_RU.visible(
            journalFormTable.journalTypeId() == LedgerJournalType::Daily
            || journalFormTable.journalTypeId() == LedgerJournalType::RTax25
            || journalFormTable.journalTypeId() == LedgerJournalType::RTax25TaxDiffByBalance);

        journalFormTable.parmCtrlAllOpenPosted(allOpenPostedField);
        journalFormTable.parmCtrlShowUserCreatedOnly(showUserCreatedOnly);
        journalFormTable.parmCtrlJournalIdTab(journalNum);
        journalFormTable.parmCtrlJournalIdGrid(ledgerJournalTable_JournalNum);
        journalFormTable.parmCtrlJournalTypeGrid(journalTypeGrid);
        journalFormTable.parmCtrlOverview(gridOverview);
        journalFormTable.parmCtrlCustPaymEntryButton(custPaymEntryButton);
        journalFormTable.parmCtrlLines(journalLines);
        journalFormTable.parmCtrlOpenLinesInExcel(openLinesInExcel);
        journalFormTable.parmCtrlCheckJournal(checkJournal);
        JournalFormTable.parmCtrlValidationMenu(Validation);
        journalFormTable.parmCtrlPostJournalMenu(postJournal);
        journalFormTable.parmCtrlMarkUserBlock(isUserPrivate);
        journalFormTable.parmCtrlMarkInUseBlock(markInUseBlock);
        journalFormTable.parmCtrlSystemBlocked(systemBlocked);
        journalFormTable.parmCtrlBlockImage(blockImage);
        journalFormTable.parmCtrlApprovalMenu(course);
        journalFormTable.parmCtrlJournalLinesGeneratePayment(journalLines_GeneratePayments);
        journalFormTable.parmCtrlJournalLinesEdit(journalLines_Edit);
        journalFormTable.parmCtrlJournalLinesReview(journalLines_Review);
        journalFormTable.parmCtrlJournalLines_WorkFlowApproved(journalLines_WorkflowApproved);
        /* lift GEEW
        journalFormTable.parmCtrlAssetPackingSlip_LT(assetPackingSlipPrint_LT);
        */

        journalFormTable.formInitPost();
        this.setButtonAccess();

        bankAccount_IT = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]);
        enableCustomDeclaration_IT = journalFormTable.journalTypeId() == LedgerJournalType::CustomsDeclaration_IT;

        // Added to the inquiries button of the posted statement form to show only posted payment journals for the statement.
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)) && element.args().caller() is FormRun)
        {
            if (element.args().caller().name() == formStr(RetailStatementJour))
            {
                allOpenPostedField.selection(AllOpenPosted::Posted);
                allOpenPostedField.enabled(false);
                LedgerJournalTable_ds.allowCreate(false);
                LedgerJournalTable_ds.allowDelete(false);
            }
        }

        //Only execute code if called from ForEdit menu item
        if (!element.inViewMode())
        {
            journalFormTable.queryAddRange();
        }

        //Use delegate to set controls when called by the General journal processing workspace.
        journalFormTable.applyMenuItemDelegate(element, allOpenPostedField, showUserCreatedOnly);

        accessRight = FormSecurity::getMenuItemAccessRight(this);
        if (accessRight >= AccessRight::Edit)
        {
            financialsDimensionsEnabled = true;
            if (element.args() && element.args().menuItemName())
            {
                if (element.args().menuItemType() == MenuItemType::Display
                    && (element.args().menuItemName() == menuitemDisplayStr(LedgerJournalTable_BankChequeReversal)
                    || element.args().menuItemName() == menuitemDisplayStr(LedgerJournalTable_BankDepositPaymCancel)))
                {
                    financialsDimensionsEnabled = false;
                }
            }
        }

        DimensionEntryControl.allowEdit(financialsDimensionsEnabled);
        DimensionEntryControl.parmValidateBlockedForManualEntry(true);

        tabFinancialDimensions.enabled(financialsDimensionsEnabled);
        if (LedgerParameters::isChineseVoucher_CN()
            && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
        {
            lastValue = classfactory.lastValueGet(curext(), curUserId(), UtilElementType::Form, formStr(LedgerJournalTable));
            if (lastValue)
            {
                this.unpack(lastValue);
            }
        }

        this.setFieldsForGlobalEntry();

        journalFormTable.formFirstFieldPost();
        ledgerJournalTable_W_ds.object(fieldNum(LedgerJournalTable_W, CashAccount_W)).visible(BankParameters::getEnablePettyCash());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes form controls based on the journal type.
    /// </summary>
    /// <param name="_journalTypeId">
    /// The journal type ID
    /// </param>
    protected void initControls(Integer _journalTypeId)
    {
        // Set the form caption to the menu item label before initializing the journal type controls to allow the caption to be overwritten
        MenuFunction callingMenuItem = new MenuFunction(element.args().menuItemName(), element.args().menuItemType());
        LedgerJournalType ledgerJournalType = any2Enum(_journalTypeId);
        Caption caption = callingMenuItem.label() ? callingMenuItem.label() : enum2Str(ledgerJournalType);

        if (LedgerJournalForcedJournalSplitFeature::isEnabled())
        {
            LedgerJournalTable_LinesLimitBeforeDistribution.visible(false);
        }

        switch (ledgerJournalType)
        {
            case LedgerJournalType::CustBillOfExchangeProtest :
                tabBillOfExchange.visible(true);
                groupProtestNegInst.visible(true);
                groupBillOfExchange_BankRemittanceType.hideFirstEntry(false);
                break;

            case LedgerJournalType::CustBillOfExchangeDraw,
                 LedgerJournalType::CustBillOfExchangeRedraw:
                tabBillOfExchange.visible(true);
                tabBillOfExchange.caption("@SYS69795");
                groupBillOfExchange_BankRemittanceType.visible(false);
                break;

            case LedgerJournalType::CustPaymRemittance,
                 LedgerJournalType::CustBillOfExchangeSettle :
                tabBillOfExchange.visible(true);
                tabBillOfExchange.caption("@SYS69795");
                break;

            case LedgerJournalType::VendPromissoryNoteDraw,
                 LedgerJournalType::VendPaymRemittance,
                 LedgerJournalType::VendPromissoryNoteSettle :
                tabBillOfExchange.visible(true);
                tabBillOfExchange.caption("@SYS71440");
                billOfExchange.visible(false);
                promissoryNote.visible(true);
                break;

            case LedgerJournalType::VendPromissoryNoteRedraw :
                tabBillOfExchange.visible(true);
                tabBillOfExchange.caption("@SYS71440");
                billOfExchange.visible(false);
                promissoryNote.visible(true);
                groupProtestNegInst.visible(true);
                break;

            case LedgerJournalType::Allocation :
                // cannot create new journal entries
                LedgerJournalTable_ds.allowCreate(false);
                caption = "@SYS314482";
                break;

            case LedgerJournalType::Elimination :
                // cannot create new journal entries unless the company is an elimination company
                LedgerJournalTable_ds.allowCreate(CompanyInfo::isEliminationCompany());
                caption = "@SYS342281";
                break;

            case LedgerJournalType::Periodic :
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(isTaxIntegrationEnabledForJournal);
                caption = "@SYS24600";
                break;

            case LedgerJournalType::Daily :
                // show the Reversing Entries fields
                groupReversingEntry.visible(true);
                ledgerJournalTable_ReverseEntry.visible(true);
                ledgerJournalTable_ReverseDate.visible(true);
                salesTax_TaxObligationCompany.visible(true);
                if (!isGlobalEntry)
                {
                    caption = "@SYS114180";
                }
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(isTaxIntegrationEnabledForJournal);
                break;

            case LedgerJournalType::VendInvoiceRegister :
                salesTax_TaxObligationCompany.visible(true);
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(isTaxIntegrationEnabledForJournal);
                break;

            case LedgerJournalType::Approval :
                salesTax_TaxObligationCompany.visible(true);
                break;

            case LedgerJournalType::CustomsDeclaration_IT :
                customs_IT.visible(true);
                break;

            case LedgerJournalType::Payment,
                 LedgerJournalType::CustPayment :
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(isTaxIntegrationEnabledForJournal);
                if (PaymentFormatCodeSets_W::isISO20022Country())
                {
                    PaymentFormatCodes_W.visible(true);
                }
                break;
            case LedgerJournalType::Assets :
                caption = "@FixedAssets:AssetJournalTitle";
                LedgerJournalTable_LinesLimitBeforeDistribution.visible(!isAssetIgnoreJournalSplittingFlightEnabled);
                break;

            case LedgerJournalType::ReportingCurrencyAdjustment :
                caption = "@GeneralLedger:ReportingCurrencyAdjustmentJournals";
                break;

            case LedgerJournalType::Cost:
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(isTaxIntegrationEnabledForProj);
                break;

            case LedgerJournalType::PayrollDisbursement:
                LedgerJournalTable_LinesLimitBeforeDistribution.visible(true);
                break;

            case LedgerJournalType::PurchaseLedger :
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, OverrideSalesTax)).visible(TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalType));
                break;

            case LedgerJournalType::Assets_RU,
                 LedgerJournalType::AssetBudgets,
                 LedgerJournalType::AssetBudgets_RU:
                LedgerJournalTable_LinesLimitBeforeDistribution.visible(!isAssetIgnoreJournalSplittingFlightEnabled);
                break;
        }

        element.design().caption(caption);

        if (!this.areFinTagsEnabled(ledgerJournalType))
        {
            FinancialTags.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>areFinTagsEnabled</Name>
				<Source><![CDATA[
    private boolean areFinTagsEnabled(LedgerJournalType _journalType)
    {
        boolean ret;

        if (isGlobalEntry)
        {
            ret = isFinTagConfigurationSetForCurrent || FinTagConfiguration::isFinTagConfigurationSetInAtLeastOneCompany();
        }
        else
        {
            ret = isFinTagConfigurationSetForCurrent;
        }

        return ret && this.shouldDisplayFinTagsForJournalType(_journalType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldDisplayFinTagsForJournalType</Name>
				<Source><![CDATA[
    private boolean shouldDisplayFinTagsForJournalType(LedgerJournalType _journalType)
    {
        switch (_journalType)
        {
            case LedgerJournalType::Allocation:
                // FinTags are specified on the LedgerAllocationRequest form, not here
                return false;
            case LedgerJournalType::Assets:
                return LedgerJournalTransAssetFinTagFlight::instance().isEnabled();
            case LedgerJournalType::ReportingCurrencyAdjustment:
                return true;
            case LedgerJournalType::CustBillOfExchangeDraw:
            case LedgerJournalType::CustBillOfExchangeProtest:
            case LedgerJournalType::CustBillOfExchangeRedraw:
            case LedgerJournalType::CustBillOfExchangeSettle:
            case LedgerJournalType::CustPaymRemittance:
                return CustBillOfExchangeFinTagFlight::instance().isEnabled();
            case LedgerJournalType::Periodic:
            case LedgerJournalType::Daily:
            case LedgerJournalType::CustPayment:
            case LedgerJournalType::Payment:
            case LedgerJournalType::VendInvoiceRegister:
            case LedgerJournalType::PurchaseLedger:
                return true;
            case LedgerJournalType::VendPromissoryNoteDraw:
            case LedgerJournalType::VendPaymRemittance:
            case LedgerJournalType::VendPromissoryNoteSettle:
            case LedgerJournalType::VendPromissoryNoteRedraw:
                return VendPromissoryNoteFinTagFlight::instance().isEnabled();
            default:
                return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSimpleMethod_CN</Name>
				<Source><![CDATA[
    public boolean isSimpleMethod_CN()
    {
        return isSimpleMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryBuildDataSource</Name>
				<Source><![CDATA[
    public QueryBuildDataSource queryBuildDataSource()
    {
        return queryDataSourceGeneralJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadWorkflowConfiguration</Name>
				<Source><![CDATA[
    public Common loadWorkflowConfiguration()
    {
        WorkflowVersionTable workflowConfigurationTable;
        LedgerJournalName ledgerJournalName = ledgerJournalTable.ledgerJournalName();

        if (ledgerJournalName.checkWorkflowApprovalEnabled())
        {
            workflowConfigurationTable = WorkflowVersionTable::findSequenceNumber(ledgerJournalName.Configuration);
        }

        return workflowConfigurationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openSimpleForm_CN</Name>
				<Source><![CDATA[
    public void openSimpleForm_CN()
    {
        FormRun formRun;
        Args args = new Args();
        LedgerVoucherType_CN voucherType;
        Name journalDescription;

        if (ledgerJournalTable.JournalName == '')
        {
            ledgerJournalTable.JournalName =
                (select firstonly ledgerJournalName
                    where ledgerJournalName.JournalType == journalFormTable.journalTypeId()).JournalName;
        }
        journalFormTable.fieldModifiedJournalNameIdPost();
        LedgerJournalTable_ds.write();

        args.parm(ledgerJournalTable.JournalNum);
        args.record(ledgerJournalTable);
        formRun = new MenuFunction(menuitemDisplayStr(LedgerJournalTransDaily_CN), MenuItemType::Display).create(args);
        if (formRun)
        {
            formRun.run();
            formRun.wait();
        }

        if (formRun.closedCancel())
        {
            ledgerJournalTable.delete();
            LedgerJournalTable_ds.research();
            LedgerJournalTable_ds.refresh();
        }
        else
        {
            journalLines.clicked();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountAccess</Name>
				<Source><![CDATA[
    void setAccountAccess()
    {
        // Italian only functionality
        if (bankAccount_IT)
        {
            if (ledgerJournalTable.JournalType == LedgerJournalType::Payment &&
                ledgerJournalTable.existVoucher())
            {
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(false);
            }
            else
            {
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankAccountId)).allowEdit(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAmountInclSalesTax_IN</Name>
				<Source><![CDATA[
    void setAmountInclSalesTax_IN()
    {
        if (element.args().menuItemName() == menuitemDisplayStr(LedgerJournalTable7) &&
            SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) &&
            TaxParameters::find().JournalInclTax)
        {
            ledgerJournalTable.LedgerJournalInclTax = NoYes::Yes;
            LedgerJournalTable_ds.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinesGeneratePaymentsLabelAndHelpText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specializes the label and help text on the JournalLines_GeneratePayments item of the
    /// JournalLines_WorkflowApproved button for the currently selected journal.
    /// </summary>
    /// <remarks>
    /// This method has to be public so it can be called from data source.
    /// </remarks>
    public void setLinesGeneratePaymentsLabelAndHelpText()
    {
        if (ledgerJournalTable.JournalType == LedgerJournalType::CustPaymRemittance ||
            ledgerJournalTable.JournalType == LedgerJournalType::VendPaymRemittance)
        {
            // This is a remittance journal, so specialize the text.
            journalLines_GeneratePayments.text("@SYS83541");
            journalLines_GeneratePayments.helpText("@SYS109634");
        }
        else
        {
            // This is a 'regular' journal, so generalize the text.
            journalLines_GeneratePayments.text("@SYS24287");
            journalLines_GeneratePayments.helpText("@SYS109635");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showProperJournalLinesButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows either the JournalLines_WorkflowApproved button or the JournalLines button for the
    /// current workflow approvals state.
    /// </summary>
    /// <remarks>
    /// This method has to be public so it can be called from the data source.
    /// </remarks>
    public void showProperJournalLinesButton()
    {
        if (ledgerJournalTable.isWFApprovalApproved() && !ledgerJournalTable.Posted)
        {
            // The journal is in workflow approvals and has been approved, so display the alternative lines button
            // which gives review, edit and generate payments options.

            // change visibility to "swap" in the workflow version
            journalLines_WorkflowApproved.visible(true);
            journalLines.visible(false);

            if (journalFormTable.canLinesFormGeneratePayments(ledgerJournalTable.JournalType))
            {
                journalLines_GeneratePayments.visible(true);
            }
            else
            {
                journalLines_GeneratePayments.visible(false);
            }
        }
        else
        {
            // The journal has not been workflow approvals approved so just display the regular lines button.

            // change visibility to "swap" in the regular version
            journalLines_WorkflowApproved.visible(false);
            journalLines.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJournalUnlockButtonProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets properties for the <c>LedgerJournalUnlockButton</c>.
    /// </summary>
    private void setJournalUnlockButtonProperties()
    {
        if (isSystemAdministrator())
        {
            LedgerJournalUnlockButton.visible(true);

            if (ledgerJournalTable.SystemBlocked == NoYes::Yes)
            {
                LedgerJournalUnlockButton.enabled(true);
            }
            else
            {
                LedgerJournalUnlockButton.enabled(false);
            }
        }
        else if (ledgerJournalTable.SystemBlocked == NoYes::Yes)
        {
            this.showUnlockWhatsNewNotification();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showUnlockWhatsNewNotification</Name>
				<Source><![CDATA[
    private void showUnlockWhatsNewNotification()
    {
        const str whatsNewGUID = "{BB91EB5F-2664-4E5B-849D-713D72D6B8D1}";

        SystemNotificationsWhatsNewManager::AddWhatsNew(
            whatsNewGUID,
            "@GeneralLedger:LedgerJournalUnlockWhatsNewNotificationTitle",
            "@GeneralLedger:LedgerJournalUnlockWhatsNewNotificationBodyText",
            JournalLines.name()
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean ret;
        Integer version;

        if (typeOf(conPeek(packedClass,1)) != Types::Integer)
        {
            isSimpleMethod = conPeek(packedClass,1);
            ret = true;
        }
        else
        {
            version = conPeek(packedClass,1);

            switch (version)
            {
                case #CurrentVersion:
                    [version, #CurrentList] = packedClass;
                    ret = true;
                    break;
                default:
                    ret = false;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        // Discard entity options for Invoice Approvals
        if (journalFormTable.journalTypeId() == LedgerJournalType::Approval)
        {
            ListIterator dataEntityIterator = new ListIterator(_menuOptions.dataEntityOptions());

            while (dataEntityIterator.more())
            {
                dataEntityIterator.delete();
            }
            return;
        }

        journalFormTable.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, JournalFormTable.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        // No updates to the template settings are required.
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the delayTaxCalculation button is visible or not.
    /// </summary>
    public void setButtonAccess()
    {
        SalesTax_DelayTaxCalculation.visible(TaxParameters::find().DelayTaxCalculation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsBank</Name>
				<Source><![CDATA[
    private void enableFieldsBank()
    {
        if (ledgerJournalTable.JournalType == LedgerJournalType::Daily
            || ledgerJournalTable.JournalType == LedgerJournalType::Payment
            || ledgerJournalTable.JournalType == LedgerJournalType::CustPayment)
        {
            Bank.visible(true);
            ledgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankTransSummarizationCriteria)).allowEdit(ledgerJournalTable.BankTransSummarizationEnabled);
        }
        else
        {
            Bank.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    private void update(Common _common)
    {
        if (isGlobalEntry
            && _common.DataAreaId != curExt())
        {
            changecompany(_common.DataAreaId)
            {
                ttsbegin;
                _common.update();
                ttscommit;
            }
        }
        else
        {
            ttsbegin;
            _common.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVendTransApprover</Name>
				<Source><![CDATA[
    private void validateVendTransApprover()
    {
        if (FeatureStateProvider::isFeatureEnabled(VendorInvoiceRegisterApprovedFeature::instance()))
        {
            Query query;
            QueryRun QueryRun;
            QueryBuildDataSource queryBuildDataSource;
            LedgerJournalTable ledgerJournalTableApprover;
            VendTrans vendTransApprover;
            boolean journalExist;

            query = new Query();
            queryBuildDataSource = Query.addDataSource(tableNum(VendTrans));

            MultiSelectionHelper multiSelectionHelper = MultiSelectionHelper::construct();

            multiSelectionHelper.parmDatasource(LedgerJournalTable_ds);
            ledgerJournalTableApprover = multiSelectionHelper.getFirst();

            while (ledgerJournalTableApprover.JournalType == LedgerJournalType::Approval)
            {
                queryBuildDataSource.addRange(fieldNum(VendTrans,JournalNum)).value(queryValue(ledgerJournalTableApprover.JournalNum));

                ledgerJournalTableApprover = multiSelectionHelper.getNext();
                journalExist = true;
            }

            if (journalExist)
            {
                queryBuildDataSource.addRange(fieldNum(VendTrans, Approver)).value(SysQuery::value('0'));
                queryRun = new QueryRun(query);

                if (queryRun.next())
                {
                    vendTransApprover = queryRun.get(tableNum(VendTrans));
                    throw error(strFmt("@SYS18394", vendTransApprover.Voucher));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTable</Name>
				<Methods>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes the marked records on the datasource based on the user prompt response.
        /// </summary>
        public void deleteMarked()
        {
            if (Box::yesNo("@GeneralLedger:DeleteMarkedRecords", DialogButton::No) == DialogButton::Yes)
            {
                if (ledgerJournalTable.RecId == 0)
                {
                    changecompany(ledgerJournalTable.DataAreaId)
                    {
                        ledgerJournalTable_DS.delete(true);
                    }
                }

                Array ledgerJournalTableMarked = ledgerJournalTable_DS.recordsMarked();
                int recordArrayIndex = ledgerJournalTableMarked.lastIndex();

                while (recordArrayIndex >= 1)
                {
                    ledgerJournalTable_DS.setPosition(ledgerJournalTableMarked.value(recordArrayIndex));

                    // Find the first marked record, unmark it, and delete it.
                    // Don't call super() to avoid the confirmation dialog for each record
                    ledgerJournalTable_DS.mark(false);

                    changecompany(ledgerJournalTable.DataAreaId)
                    {
                        ledgerJournalTable_DS.delete(true);
                    }

                    recordArrayIndex--;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            // don't call super because validation is now performed in the delete method
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            PdsRebateTable pdsRebateTable;
            PdsRebateTrans pdsRebateTrans;
            TAMVendRebateTable tamVendRebateTable;
            TAMVendRebateTrans tamVendRebateTrans;
            MCRBrokerClaim mcrBrokerClaim;
            MCRRoyaltyVendTrans mcrRoyaltyVendTrans;

            journalFormTable.datasourceLinkActivePre();

            if (element.args() && element.args().record())
            {
                switch (element.args().record().TableId)
                {
                    case tableNum(PdsRebateTable):
                        {
                            pdsRebateTable = element.args().record();
                            pdsRebateTrans = PdsRebateTrans::findByRebateIdAndTransactionType(
                                pdsRebateTable.PdsRebateId,
                                PdsRebateTransaction::LedgerJournalProcessing);
                            SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(LedgerJournalTable, JournalNum)).value(pdsRebateTrans.LedgerJournalId);
                            break;
                        }
                    case tableNum(TAMVendRebateTable):
                        {
                            tamVendRebateTable = element.args().record();
                            tamVendRebateTrans = TAMVendRebateTrans::findByVendRebateIdTransaction(
                                tamVendRebateTable.VendRebateId,
                                TAMVendRebateTransactionType::RebateAccrual);
                            SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(LedgerJournalTable, JournalNum)).value(tamVendRebateTrans.LedgerJournalId);
                            break;
                        }
                    case tablenum(MCRBrokerClaim):
                        {
                            mcrBrokerClaim = element.args().record();
                            SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(LedgerJournalTable, JournalNum)).value(
                                LedgerJournalTrans::findRecId(mcrBrokerClaim.LJTransClaimRecID, false).JournalNum);
                            break;
                        }
                    case tablenum(MCRRoyaltyVendTrans):
                        {
                            mcrRoyaltyVendTrans = element.args().record();
                            SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(LedgerJournalTable, JournalNum)).value(mcrRoyaltyVendTrans.LedgerJournalId);
                            break;
                        }
                }
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            LedgerJournalTable_W localLedgerJournalTable_W;

            super();
            if (enableLedgerJournalTable_W)
            {
                // The child table may have been inserted so synchronize the datasource
                localLedgerJournalTable_W = LedgerJournalTable_W::findByLedgerJournalTable(ledgerJournalTable.RecId);

                if (localLedgerJournalTable_W)
                {
                    ledgerJournalTable_W.data(localLedgerJournalTable_W);
                    ledgerJournalTable_W_ds.reread();
                    ledgerJournalTable_W_ds.refresh();
                }
            }

            journalFormTable.datasourceReReadPost();

            if (bankAccount_IT)
            {
                element.enableButtonsActive();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lockImage</Name>
						<Source><![CDATA[
        display container lockImage(JournalTableMap _journalTable)
        {
            lockImageObservable.observe();
            return journalFormTable.datasourceMethodLockImage(_journalTable);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inUseUserId</Name>
						<Source><![CDATA[
        display JournalBlockInUseUserId inUseUserId(JournalTableMap _journalTable)
        {
            return journalFormTable.datasourceMethodInUseUserId(_journalTable);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inUseBlock</Name>
						<Source><![CDATA[
        edit JournalMarkInUseBlock inUseBlock(boolean _set, JournalTableMap _journalTable, JournalMarkInUseBlock _value)
        {
            return journalFormTable.datasourceMethodInUseBlock(_set, _journalTable, _value);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the datasource's write event.
        /// </summary>
        void write()
        {
            journalFormTable.assertJournalNotInUse(true);

            boolean enableJournalLines = false;

            ttsbegin;

            if (ledgerJournalTable.isWFApprovalApproved())
            {
                ledgerJournalTable.WorkflowApprovalStatus = LedgerJournalWFApprovalStatus::NotSubmitted;
            }

            super();

            journalFormTable.datasourceWritePost();

            this.reread();

            if (enableLedgerJournalTable_W && ledgerJournalTable_W.LedgerJournalTable == 0)
            {
                // Write the extension table record now that the parent record has a record ID
                ledgerJournalTable_W.LedgerJournalTable = ledgerJournalTable.RecId;
                ledgerJournalTable_W_ds.write();
            }

            if (enableCustomDeclaration_IT)
            {
                ledgerJournalTable_Customs_IT.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTable);
            }

            ttscommit;

            // Set enableJournalLines if the journal workflow approval status is "Notsubmitted".
            if (ledgerJournalTable.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::NotSubmitted)
            {
                enableJournalLines = true;
            }

            if (enableJournalLines)
            {
                element.showProperJournalLinesButton();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid;

            isValid = super();

            isValid = journalFormTable.datasourceValidateWritePost(isValid);

            if (isValid && ledgerJournalTable.isWFApprovalApproved())
            {
                if (Box::yesNo("@SYS109636", DialogButton::No) == DialogButton::No)
                {
                    isValid = false;
                    LedgerJournalTable_ds.reread();
                }
            }

            if (isValid
                && LedgerParameters::isJournalApproval_CN()
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
            {
                if (ledgerJournalTable_W.ApprovalStatus_CN == LedgerApprovalStatus_CN::Approved
                    && !Box::yesNo("@GLS54522", 1, '', ''))
                {
                    isValid = false;
                    LedgerJournalTable_ds.reread();
                }
                else
                {
                    ledgerJournalTable.setToOpenValue_CN();
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret = true;

            if (!inCreate && !inDelete)
            {
                if (ledgerJournalTable.JournalName == '')
                {
                    // delete a new record with no journal name or the user will have to do it manually
                    LedgerJournalTable_ds.delete();
                }

                ret = journalFormTable.datasourceLeavePre();
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            super();

            journalFormTable.datasourceInitValuePost();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            this.crossCompanyAutoQuery(isGlobalEntry);

            // Convert args.record() to args.lookupRecord() because implicit args.record() filtering behavior has changed from R3 to AX7
            LedgerJournalTable argsRecord = element.args().record() as LedgerJournalTable;
            LedgerJournalTable argsLookUpRecord = element.args().lookupRecord() as LedgerJournalTable;

            if (argsRecord)
            {
                element.args().record(null);
                element.args().lookupRecord(argsRecord);
            }
            else if (!argsLookUpRecord)
            {
                element.args().lookupRecord(null);
            }

            super();

            journalFormTable.datasourceInitPost(ledgerJournalTable);

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) &&
                element.args().menuItemName() == menuitemDisplayStr(LedgerJournalTable7))
            {
                salesTax.enabled(false);
            }

            if (element.args().dataset() == tableNum(RetailStatementJour))
            {
                // Join LedgerJournalTrans and RetailStatementVoucher because LedgerJournalTable.statementId
                // is not set during Retail statement posting.

                RetailStatementJour retailStatementJour = element.args().record() as RetailStatementJour;
                this.addLinkToRetailStatementVoucher(retailStatementJour.StatementId);
            }

            // Use the delegate to set the needed queries when called from General journal processing workspace.
            journalFormTable.applyQueryDelegate(element, this.query());

            LedgerJournalTable ledgerJournalTableFilter = element.args().lookupRecord() as LedgerJournalTable;
            if (ledgerJournalTableFilter)
            {
                SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(LedgerJournalTable, JournalNum)).value(ledgerJournalTableFilter.JournalNum);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>addLinkToRetailStatementVoucher</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds a link between the current query with LedgerJournalTable/LedgerJournalTrans tables and the RetailStatementVoucher one.
        /// </summary>
        /// <param name = "_statementId">Retail statement id.</param>
        void addLinkToRetailStatementVoucher(RetailStatementId _statementId)
        {
            QueryBuildDataSource queryDataSourceVoucherTrans = this.query().dataSourceTable(tableNum(LedgerJournalTable)).addDataSource(tableNum(LedgerJournalTrans));
            queryDataSourceVoucherTrans.joinMode(JoinMode::ExistsJoin);
            queryDataSourceVoucherTrans.addLink(fieldNum(LedgerJournalTable, JournalNum), fieldNum(LedgerJournalTrans, JournalNum));

            QueryBuildDataSource queryDataSourceRetailStatementVoucher = queryDataSourceVoucherTrans.addDataSource(tableNum(RetailStatementVoucher));
            queryDataSourceRetailStatementVoucher.joinMode(JoinMode::ExistsJoin);
            queryDataSourceRetailStatementVoucher.addLink(fieldNum(LedgerJournalTrans, Voucher), fieldNum(RetailStatementVoucher, Voucher));
            queryDataSourceRetailStatementVoucher.addRange(fieldNum(RetailStatementVoucher, statementId)).value(SysQuery::value(_statementId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            journalFormTable.datasourceExecuteQueryPre();

            super();

            journalFormTable.datasourceExecuteQueryPost();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        void delete(boolean _suppressPrompt = false)
        {
            try
            {
                inDelete = true;

                if (journalFormTable.verifyCanDelete(_suppressPrompt))
                {
                    ttsbegin;

                    if (ledgerJournalTable.RecId)
                    {
                        Args args = new Args();
                        args.record(ledgerJournalTable);
                        args.parm(LedgerJournalDeleteTransaction::DeleteEntireJournal);

                        LedgerJournalDeleteTransaction::main(args, true);
                    }

                    super();

                    journalFormTable.datasourceDeletePost();

                    ttscommit;
                }

                if (!this.cursor().RecId)
                {
                    //
                    // Workflow controls must be updated on demand
                    // when the last row is deleted from the grid.
                    //
                    element.updateWorkflowControls();
                }
            }
            finally
            {
                inDelete = false;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean _append = false)
        {
            if (AllOpenPosted::Posted == allOpenPostedField.selection())
            {
                allOpenPostedField.selection(AllOpenPosted::Open);
                allOpenPostedField.selectionChange();
            }

            inCreate = true;
            if (! journalFormTable.datasourceCreatePre())
            {
                inCreate = false;
                return;
            }

            super(_append);

            journalFormTable.datasourceCreatePost();

            // If a query filter in journal name is applied, the kernel doesn't recognize that the field has changed and
            // that the record is 'dirty'
            if (ledgerJournalTable.JournalName)
            {
                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, JournalName)).modified();
            }
            inCreate = false;

            if (LedgerParameters::isChineseVoucher_CN()
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily
                && isSimpleMethod)
            {
                element.openSimpleForm_CN();
            }
            element.setAmountInclSalesTax_IN();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;
            boolean isWorkflowEnabledForJournalName;

            element.setAccountAccess();

            journalFormTable.datasourceActivePre();

            isWorkflowEnabledForJournalName = ledgerJournalTable.ledgerJournalName().WorkflowApproval == NoYes::Yes;

            // if specific journal name workflow is not turned on, explicitly disable workflow support on the form
            // to avoid extra RPC from workflow infrastructure invoked indirectly from super().
            element.design().workflowEnabled(isWorkflowEnabledForJournalName);

            journalFormTable.parmIsWorkflowEnabledForJournalName(isWorkflowEnabledForJournalName);

            ret = super();

            journalFormTable.datasourceActivePost();

            lockImageObservable.markChanged();

            element.setAccountAccess();

            element.showProperJournalLinesButton();

            element.setLinesGeneratePaymentsLabelAndHelpText();

            if (ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Ledger)
            {
                OffsetAccount.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
            }

            DimensionEntryControl.parmCompany(ledgerJournalTable.DataAreaId);
            DimensionEntryControl.reactivate();

            element.setJournalUnlockButtonProperties();

            element.enableFieldsBank();

            LedgerJournalPostTransfer.enabled(!LedgerJournalTable.BankTransSummarizationEnabled);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret;

            ret = super(_forceUpdate);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();

            journalFormTable.datasourceMarkChangedPost();
        }

]]></Source>
					</Method>
					<Method>
						<Name>writeActiveRecordCheck</Name>
						<Source><![CDATA[
        public void writeActiveRecordCheck()
        {
            if (ledgerJournalTable.RecId == 0)
            {
                ledgerJournalTable_ds.write();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BankAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                BankAccountTable::lookupBankAccount(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankTransSummarizationEnabled</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankTransSummarizationCriteria)).allowEdit(ledgerJournalTable.BankTransSummarizationEnabled);
                LedgerJournalPostTransfer.enabled(!ledgerJournalTable.BankTransSummarizationEnabled);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FixedOffsetAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    OffsetAccount.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>GroupBlockId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                journalFormTable.fieldModifiedBlockUserGroupId();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalName</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                journalFormTable.designLookupJournalName(_formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            boolean validate()
            {
                boolean ret;

                ret = super();

                ret = journalFormTable.fieldValidateJournalNameIdPost(ret);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                journalFormTable.fieldModifiedJournalNameIdPost();

                element.updateWorkflowControls();

                if (enableCustomDeclaration_IT)
                {
                    element.enableCustomsFieldsActive_IT();
                }

                element.enableFieldsActive();

                element.setAmountInclSalesTax_IN();

                element.enableFieldsBank();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerJournalInclTax</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                LedgerJournalTrans ledgerJournalTransLocal;
                boolean custTaxOnPrepayment = CustParameters::find().TaxOnPrepayment;
                boolean vendTaxOnPrepayment = VendParameters::find().TaxOnPrepayment;

                ret = super();

                if (!ledgerJournalTable.LedgerJournalInclTax && ret)
                {
                    while select AccountType, OffsetLedgerDimension, OffsetAccountType from ledgerJournalTransLocal
                        where ledgerJournalTransLocal.JournalNum == ledgerJournalTable.JournalNum &&
                              ledgerJournalTransLocal.Prepayment
                    {
                        if (custTaxOnPrepayment &&
                           (ledgerJournalTransLocal.AccountType == LedgerJournalACType::Cust ||
                           (ledgerJournalTransLocal.parmOffsetLedgerDimension() &&
                            ledgerJournalTransLocal.OffsetAccountType == LedgerJournalACType::Cust)))
                        {
                            error("@SYS98400");
                            return false;
                        }

                        if (vendTaxOnPrepayment &&
                           (ledgerJournalTransLocal.AccountType == LedgerJournalACType::Vend ||
                           (ledgerJournalTransLocal.parmOffsetLedgerDimension() &&
                            ledgerJournalTransLocal.OffsetAccountType == LedgerJournalACType::Vend)))
                        {
                            error("@SYS98400");
                            return false;
                        }
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Ledger)
                {
                    OffsetAccount.parmLockMainAccountSegment(ledgerJournalTable.FixedOffsetAccount);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReverseEntry</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Sets the editable property of theLedgerJournalTable table ReverseDate field.
            /// </summary>
            public void modified()
            {
                super();

                LedgerJournalTable_ds.object(fieldNum(LedgerJournalTable, ReverseDate)).allowEdit(ledgerJournalTable.ReverseEntry ? true : false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SystemBlocked</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                journalFormTable.fieldModifiedSystemBlockedPost();
                if (!ledgerJournalTable.SystemBlocked)
                {
                    ttsbegin;
                    ledgerJournalTable.selectForUpdate(true);
                    ledgerJournalTable.SystemBlockedReason = LedgerJournalSystemBlockedReason::None;
                    ledgerJournalTable.update();
                    ttscommit;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTable_W</Name>
				<Methods>
					<Method>
						<Name>editTaxType</Name>
						<Source><![CDATA[
        /// <summary>
        /// Edits the freight type value.
        /// </summary>
        /// <param name="_set">
        /// A boolean value to determine if the value is being set or not.
        /// </param>
        /// <param name="_ledgerJournalTable_W">
        /// The <c>LedgerJournalTable_W</c> record
        /// </param>
        /// <param name="_taxTypeStr">
        /// The tax type value
        /// </param>
        /// <returns>
        /// The label of the freight type.
        /// </returns>
        /// <remarks>
        /// If the freight type is not valid, it will display the raw value.
        /// </remarks>
        public edit String15 editTaxType(boolean _set, LedgerJournalTable_W _ledgerJournalTable_W, String15 _taxTypeStr)
        {
            String15 taxTypeStr;
            TaxType_BR taxtype;

            if (_set)
            {
                _ledgerJournalTable_W.TaxType_BR = str2enum(taxtype, _taxTypeStr);

                taxTypeStr = _taxTypeStr;
            }
            else
            {
                taxTypeStr = enum2str(_ledgerJournalTable_W.TaxType_BR);
            }

            return taxTypeStr;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (enableLedgerJournalTable_W)
            {
                this.crossCompanyAutoQuery(isGlobalEntry);

                // Switch the link type as fields appear in the grid that require an outerjoin
                ledgerJournalTable_W_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (enableLedgerJournalTable_W && ledgerJournalTable_W.LedgerJournalTable != 0)
            {
                if (isGlobalEntry && LedgerJournalTableSkipWriteWhenWRecordNotExistFlight::instance().isEnabled())
                {
                    if (ledgerJournalTable_W.RecId)
                    {
                        super();
                    }
                }   
                else
                {
                    // Only write the child table if the country context is set to one that the table has fields linked to and the child table has the parent FK set
                    super();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>BaseDocument_IT</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                baseDocument_IT.enableFieldsDocumentType();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
            {
                this.linkType(FormLinkType::Delayed);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTable_Customs_IT</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]))
            {
                ledgerJournalTable_Customs_IT_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (enableCustomDeclaration_IT && ledgerJournalTable_Customs_IT.LedgerJournalTable != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (enableCustomDeclaration_IT)
            {
                ret = super();

                if (ledgerJournalTable_Customs_IT.CustomsDebt == CustomsDebt_IT::Customs && !ledgerJournalTable_Customs_IT.CustomsId)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldpname(ledgerJournalTable_Customs_IT, CustomsId)));
                }

                if (ledgerJournalTable_Customs_IT.CustomsDebt == CustomsDebt_IT::Shipper && !ledgerJournalTable_Customs_IT.ShipperId)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldpname(ledgerJournalTable_Customs_IT, ShipperId)));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CustomsDebt</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableCustomsFieldsActive_IT();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>NewGlobalJournal</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            LedgerJournalTableIAddJournal newJournalForm;

            if (_formRun.closedOk())
            {
                if (_formRun is LedgerJournalTableIAddJournal)
                {
                    newJournalForm = _formRun as LedgerJournalTableIAddJournal;
                }
                else
                {
                    throw error(Error::wrongUseOfFunction(funcName()));
                }

                LedgerJournalName newJournalName = newJournalForm.getSelectedJournal();

                if (newJournalName)
                {
                    LedgerJournalTable newJournal;
                    changecompany(newJournalName.DataAreaId)
                    {
                        if (journalFormTable.journalTypeId() == LedgerJournalType::ReportingCurrencyAdjustment && !Ledger::reportingCurrency())
                        {
                            throw error("@GeneralLedger:ReportingCurrencyAdjustmentJournalCreateNoReportingCurrency");
                        }
                        else
                        {
                            newJournal.JournalType = newJournalName.JournalType;
                            newJournal.JournalName = newJournalName.JournalName;
                            newJournal.insert();

                            if (enableLedgerJournalTable_W)
                            {
                                //Insert data in ledgerJournal_W table for other country context as later it's not possible to change dataAreaId.
                                LedgerJournalTable_W newJournal_W = LedgerJournalTable_W::findByLedgerJournalTable(newJournal.RecId);
                                if (!newJournal_W)
                                {
                                    newJournal_W.LedgerJournalTable = newJournal.RecId;
                                    newJournal_W.insert();
                                }
                            }
                        }
                    }

                    ledgerJournalTable_DS.research();
                    ledgerJournalTable_DS.positionToRecord(newJournal);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProcessAllocationRequest</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            ledgerJournalTable_DS.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalLines</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the lines button.
        /// </summary>
        /// <remarks>
        /// The line button is used for all system states except for the workflow approvals "approved"
        /// state. That state displays the JournalLines_WorkflowApproved button instead.
        /// This method controls processing payments for approved journals on the LedgerJournalFormTable
        /// class since the journal is not approved if this button was clicked.
        /// </remarks>
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            if (ledgerJournalTable.isWFApprovalApproved() && !ledgerJournalTable.Posted)
            {
                // for journals that have been workflow approved but not posted, we redirect to the Review button instead of the default behavior.
                journalLines_Review.clicked();
            }
            else
            {
                if (LedgerParameters::isChineseVoucher_CN() && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
                {
                    if (isSimpleMethod && !LedgerJournalTable::isSimpleMethod_CN(ledgerJournalTable.JournalNum))
                    {
                        // This journal was created using the advanced method and cannot be edited with the simple method
                        throw error("@GLS54504");
                    }

                    if (isSimpleMethod && !LedgerJournalTrans_CN_Extension::existJournalNum_CN(ledgerJournalTable.JournalNum))
                    {
                        // The journal cannot be edited because it has no line. Please use the advanced method
                        throw error("@GLS54498");
                    }
                }

                journalFormTable.parmIsProcessingPaymentOnApprovedJounal(false);

                LedgerJournalTable_ds.reread();

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalLines_Review</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the Lines->Review button's clicked event.
        /// </summary>
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            journalFormTable.parmIsProcessingPaymentOnApprovedJounal(false);
            journalFormTable.parmIsWFApprovedModeSelected(true);

            super();

            ledgerJournalTable_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalLines_Edit</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the edit item of the line button.
        /// </summary>
        /// <remarks>
        /// This method prompts the user to check that it is okay to place
        /// the journal back into a "not submitted" state. Also performs a table update.
        /// </remarks>
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            if (Box::okCancel("@SYS109636", DialogButton::Ok) == DialogButton::Ok)
            {
                // Set the ledgerJournalTable.WorkflowApprovalStatus
                ledgerJournalTable.initWFApprovalStatus(ledgerJournalTable.ledgerJournalName(), true);

                // Update the record.
                ledgerJournalTable_ds.write();
            }
            else
            {
                return;
            }

            super();

            ledgerJournalTable_ds.reread();

            element.showProperJournalLinesButton();

            if (ledgerJournalTable.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::None ||
                ledgerJournalTable.WorkflowApprovalStatus == LedgerJournalWFApprovalStatus::NotSubmitted)
            {
                // Workflow status change requires refresh of workflow controls.
                element.updateWorkflowControls();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalLines_GeneratePayments</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the Lines->Generate Payments button's clicked event.
        /// </summary>
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            journalFormTable.parmIsProcessingPaymentOnApprovedJounal(true);
            journalFormTable.parmIsWFApprovedModeSelected(true);

            super();

            ledgerJournalTable_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenLinesInExcel</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            LedgerIJournalExcelTemplateLookup lookupTemplate;

            if (_formRun.closedOk())
            {
                if (_formRun is LedgerIJournalExcelTemplateLookup)
                {
                    lookupTemplate = _formRun as LedgerIJournalExcelTemplateLookup;
                }
                else
                {
                    throw error(Error::wrongUseOfFunction(funcName()));
                }

                LedgerIJournalExcelTemplate journalTemplate = LedgerJournalExcelTemplate::constructForTemplateName(lookupTemplate.documentTemplateName());

                if (!journalTemplate.validateJournalForTemplate(ledgerJournalTable))
                {
                    error("@GeneralLedger:JournalExcelTemplateOpenValidationFailed");
                }
                else
                {
                    journalFormTable.openExcelTemplate(journalTemplate);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the button's clicked event.
        /// </summary>
        /// <remarks>
        /// The form's UI state is refreshed on this event so that the correct control states are shown for the
        /// posted journal.
        /// </remarks>
        void clicked()
        {
            //  Cast the journalFormTable to a LedgerJournalFormTable.
            LedgerJournalFormTable ledgerJournalFormTable = journalFormTable;
   
            ledgerJournalFormTable.assertJournalNotInUse();

            // Refresh to prevent validation error when user has not made any selection
            element.refresh();

            try
            {
                //  Check if multi-selection posting.
                if (LedgerJournalTable_ds.anyMarked() && ledgerJournalFormTable.isMultiSelection())
                {
                    ledgerJournalFormTable.multiSelectValidate();
                }
                else
                {
                    super();
                }
            }
            finally
            {
                element.refresh();
            }

            if (LedgerParameters::isJournalApproval_CN() && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
            {
                element.enableButtonsActive();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the button.
        /// </summary>
        /// <remarks>
        /// The form is refreshed on this event so that the correct control states are shown for the
        /// posted journal.
        /// </remarks>
        public void clicked()
        {
            element.validateVendTransApprover();

            super();

            LedgerJournalTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            LedgerJournalTable_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Post</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the button.
        /// </summary>
        /// <remarks>
        /// The form is refreshed on this event so that the correct control states are shown for the
        /// posted journal.
        /// </remarks>
        void clicked()
        {
            element.validateVendTransApprover();

            //  Cast the journalFormTable to a LedgerJournalFormTable.
            LedgerJournalFormTable ledgerJournalFormTable = journalFormTable;
            boolean multiSelected;

            ledgerJournalFormTable.assertSelectedJournalsNotInUse();

            //  Check if multi-selection posting.
            if (ledgerJournalTable_ds.anyMarked() &&
                ledgerJournalFormTable.isMultiSelection())
            {
                ledgerJournalFormTable.multiSelectPost();
                multiSelected = true;
            }
            else
            {
                super();
            }

            //
            // For multi selection cases we redraw the window to remove posted journals.
            // A first is done to set focus so the form is set to the proper state.
            //
            if (multiSelected)
            {
                ledgerJournalTable_ds.research();
                ledgerJournalTable_ds.first();
                ledgerJournalTable_ds.mark(1);
                gridOverview.setFocus();
            }
            //
            // Re-read the record and then re-perform button initialization
            // so that the correct lines button is shown and that all of the
            // buttons are in their correct enabled state.
            //
            else
            {
                ledgerJournalTable_DS.reread();
                ledgerJournalTable_DS.active();
            }

            if (LedgerParameters::isChineseVoucher_CN()
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
            {
                ledgerJournalTable_DS.active();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the button.
        /// </summary>
        /// <remarks>
        /// The form is refreshed on this event so the correct control states are shown for the posted
        /// journal.
        /// </remarks>
        void clicked()
        {
            element.validateVendTransApprover();

            journalFormTable.assertJournalNotInUse();

            //  Cast the journalFormTable to a LedgerJournalFormTable.
            LedgerJournalFormTable ledgerJournalFormTable = journalFormTable;
            boolean multiSelected;

            //  Check if multi-selection posting.
            if (ledgerJournalTable_ds.anyMarked() &&
               ledgerJournalFormTable.isMultiSelection())
            {
                ledgerJournalFormTable.multiSelectPost(true);
                multiSelected = true;
            }
            else
            {
                super();
            }
            //
            // For multi selection cases we redraw the window to remove posted journals.
            // A first is done to set focus so the form is set to the proper state.
            //
            if (multiSelected)
            {
                ledgerJournalTable_ds.research();
                ledgerJournalTable_ds.first();
                ledgerJournalTable_ds.mark(1);
                gridOverview.setFocus();
            }
            //
            // Re-read the record and then re-perform button initialization
            // so that the correct lines button is shown and that all of the
            // buttons are in their correct enabled state.
            //
            else
            {
                ledgerJournalTable_DS.reread();
                ledgerJournalTable_DS.active();
            }

            if (LedgerParameters::isChineseVoucher_CN()
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
            {
                ledgerJournalTable_DS.reread();
                ledgerJournalTable_DS.active();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            LedgerJournalCheckPost_CN ledgerJournalCheckPost;
            LedgerJournalTable ledgerJournalTableCopy;
            boolean enabledJournalApproval_CN;

            super();

            enabledJournalApproval_CN = LedgerParameters::isJournalApproval_CN();

            if (enabledJournalApproval_CN
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily)
            {
                ledgerJournalCheckPost = LedgerJournalCheckPost_CN::newLedgerJournalTable(ledgerJournalTable, NoYes::No);
                if (!ledgerJournalCheckPost.checkJournalReady())
                {
                    warning("@GLS54545");
                    return;
                }

                ttsbegin;

                select firstonly forupdate ledgerJournalTableCopy
                    where ledgerJournalTableCopy.JournalNum == ledgerJournalTable.JournalNum;

                ledgerJournalTableCopy.markReportAsReady();
                element.update(ledgerJournalTableCopy);
                ledgerJournalTable.markReportAsReady();

                ttscommit;

                if (enableLedgerJournalTable_W)
                {
                    // Resync the child table as it was updated indirectly by the above commit
                    ledgerJournalTable_W_ds.reread();
                    ledgerJournalTable_W_ds.refresh();
                }
            }
            else
            {
                ledgerJournalTable.markReportAsReady();
                element.update(ledgerJournalTable);
                
                if (enableLedgerJournalTable_W)
                {
                    // Resync child table that was updated in the mark call above
                    element.update(ledgerJournalTable_W);
                    ledgerJournalTable_W_ds.reread();
                    ledgerJournalTable_W_ds.refresh();
                }
            }

            if (enabledJournalApproval_CN
                && journalFormTable.journalTypeId() == LedgerJournalType::Daily
                && ledgerJournalTable_W.ApprovalStatus_CN == LedgerApprovalStatus_CN::Ready)
            {
                info("@GLS54527");
            }

            ledgerJournalTable_ds.reread();
            ledgerJournalTable_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Approve</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;

            super();

            if (LedgerParameters::isJournalApproval_CN()
                && (journalFormTable.journalTypeId() == LedgerJournalType::Daily
                ||  journalFormTable.journalTypeId() == LedgerJournalType::Assets))
            {
                args = new Args();
                args.caller(element);
                args.record(ledgerJournalTable);
                new MenuFunction(menuitemDisplayStr(LedgerJournalApproval_CN), MenuItemType::Display).run(args);

                ledgerJournalTable_ds.executeQuery();
            }
            else
            {
                ledgerJournalTable.markApproved();
                element.update(ledgerJournalTable);

                if (enableLedgerJournalTable_W)
                {
                    // Resync child table that was updated in the mark call above
                    element.update(ledgerJournalTable_W);
                    ledgerJournalTable_W_ds.reread();
                    ledgerJournalTable_W_ds.refresh();
                }
            }

            ledgerJournalTable_ds.reread();
            ledgerJournalTable_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Reject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            super();

            ledgerJournalTable.markRejected();

            element.update(ledgerJournalTable);

            if (enableLedgerJournalTable_W)
            {
                // Resync child table that was updated in the mark call above
                element.update(ledgerJournalTable_W);
                ledgerJournalTable_W_ds.reread();
                ledgerJournalTable_W_ds.refresh();
            }

            ledgerJournalTable_ds.reread();
            ledgerJournalTable_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimpleMethod_CN</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            super();
            isSimpleMethod = NoYes::Yes;
            simpleMethod_CN.visible(false);
            advanced_CN.visible(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Advanced_CN</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            isSimpleMethod = NoYes::No;
            simpleMethod_CN.visible(true);
            advanced_CN.visible(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalCreate_RU</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.changeAllOpenPosted_RU(AllOpenPosted::Open);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalCreateStorno_RU</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            super();
            element.changeAllOpenPosted_RU(AllOpenPosted::Posted);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalUnlockButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the clicked event of the button.
        /// </summary>
        /// <remarks>
        /// The form is refreshed on this event so that the journal is unlocked when unlock button is clicked.
        /// </remarks>
        public void clicked()
        {
            super();

            LedgerJournalTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AllOpenPostedField</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            journalFormTable.designSelectionChangeAllOpenPosted();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowUserCreatedOnly</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the form data selection criteria when the check box is clicked.
        /// </summary>
        public void clicked()
        {
            super();

            journalFormTable.designSelectionChangeShowUserCreateOnly();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTable_JournalNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ledgerJournalTable_DS.leaveRecord();
            JournalLines.clicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTable_ParentJournalNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Takes the user to the LedgerJournalTable form, filtered to show only the parent journal.
        /// </summary>
        public void jumpRef()
        {
            Args args = new Args(formStr(LedgerJournalTable));

            LedgerJournalTable parent = LedgerJournalTable::find(LedgerJournalTable.ParentJournalNum);

            if (parent.RecId == 0)
            {
                Error(strFmt("@GeneralLedger:ParentJournalNotFound", LedgerJournalTable.ParentJournalNum));
                return;
            }

            args.record(parent);
            args.caller(element);

            MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(LedgerJournalTable), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (ledgerJournalTable.OffsetAccountType)
            {
                case LedgerJournalACType::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case LedgerJournalACType::Cust:
                    CustTable::lookupCustomer(this);
                    break;

                case LedgerJournalACType::FixedAssets:
                    AssetTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::Project:
                    ProjTable::lookupProjId(this, ledgerJournalTable);
                    break;

                case LedgerJournalACType::Vend:
                    VendTable::lookupVendor(this);
                    break;

                case LedgerJournalACType::FixedAssets_RU:
                    RAssetTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::RDeferrals:
                    RDeferralsTable::lookupDeferrals(this, dateMax());
                    break;

                case LedgerJournalACType::RCash:
                    RCashTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::Employee_RU:
                    EmployeeTable_RU::lookupAdvHolder(this);
                    break;

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Bank
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Cust
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::FixedAssets
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Project
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Vend
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Employee_RU
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::FixedAssets_RU
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::RCash
                || ledgerJournalTable.OffsetAccountType == LedgerJournalACType::RDeferrals;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editTaxType</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TaxTable::lookupTaxTypeStr(this, FBTaxAssessment_BR::adjustableTaxes());
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            TaxType_BR taxType;

            ret = super();

            taxType = str2enum(taxType, this.text());

            if (conFind(FBTaxAssessment_BR::adjustableTaxes(), taxType) == 0)
            {
                ret = checkFailed("@SYS119633");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Bank_SummarizationEnabled</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            if (ledgerJournalTable.BankTransSummarizationEnabled == NoYes::Yes)
            {
                ledgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankTransSummarizationCriteria)).allowEdit(true);
                LedgerJournalPostTransfer.enabled(false);
            }
            else
            {
                ledgerJournalTable_ds.object(fieldNum(LedgerJournalTable, BankTransSummarizationCriteria)).allowEdit(false);
                LedgerJournalPostTransfer.enabled(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IsUserPrivate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            LedgerJournalTable_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            journalFormTable.designModifiedMarkUserBlockPost();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupBillOfExchange_BankAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ledgerJournalTable.JournalType == LedgerJournalType::CustPaymRemittance)
            {
                if (ledgerJournalTable.BankAccountId)
                {
                    journalLines.enabled(true);
                }
                else
                {
                    journalLines.enabled(false);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupPromissorynote_BankAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ledgerJournalTable.JournalType == LedgerJournalType::VendPaymRemittance)
            {
                if (ledgerJournalTable.BankAccountId)
                {
                    journalLines.enabled(true);
                }
                else
                {
                    journalLines.enabled(false);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProtestSettledBill</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTable.assertJournalNotInUse();

            super();

            element.enableFieldsActive();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTable</Name>
			<Table>LedgerJournalTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetTransferType_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationCriteria</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentOperationsTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DetailSummaryPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAdjustmentJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsLedgerDimensionNameUpdated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCreditReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebitReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>journalTotalOffsetBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>JournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinesLimitBeforeDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfLines</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentsGenerated_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProtestSettledBill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RejectedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLineAfterPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedAsReadyBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyFixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStatementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SimulationPosted_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxObligationCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherAllocatedAtPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowApprovalStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<Index>TypeNumIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTable_W</Name>
			<Table>LedgerJournalTable_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAccount_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryPurpose_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeBearer_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishment_BR</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalInstrument_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportPeriod_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseJournalTable_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reverse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RTax25RegVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceLevel_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_BR</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTable</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BaseDocument_IT</Name>
			<Table>BaseDocument_IT</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CIPEcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderOrAgreementCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TenderCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>LedgerJournalTable</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTable_Customs_IT</Name>
			<Table>LedgerJournalTable_Customs_IT</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustomsDebt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartnerId</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipperId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipGoodsTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTable</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS6790</Caption>
		<DataSource xmlns="">LedgerJournalTable</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<WorkflowDataSource xmlns="">LedgerJournalTable</WorkflowDataSource>
		<WorkflowEnabled xmlns="">Yes</WorkflowEnabled>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1312351117</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>NewGlobalJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<NeededPermission>Create</NeededPermission>
								<Type>DropDialogButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>LedgerJournalTableAddJournal</MenuItemName>
								<NormalImage>Add</NormalImage>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CustPaymEntryButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTable</DataSource>
								<MenuItemName>CustPaymEntry</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ProcessAllocationRequest</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>LedgerAllocationRequest</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>JournalLines</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTable</DataSource>
								<MenuItemName>LedgerJournalTransDaily</MenuItemName>
								<Text>@SYS15451</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>JournalLines_WorkflowApproved</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JournalLines_Review</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalTransDaily</MenuItemName>
										<Text>@SYS60543</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JournalLines_Edit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalTransDaily</MenuItemName>
										<Text>@SYS453</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JournalLines_GeneratePayments</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalTransDaily</MenuItemName>
										<Text>@SYS24287</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS15451</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>OpenLinesInExcel</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@GeneralLedger:LedgerJournalLineEntryInExcelHelpText</HelpText>
								<Type>DropDialogButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTable</DataSource>
								<MenuItemName>LedgerJournalExcelTemplateLookup</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@ApplicationFoundation:OfficeOpenLinesInExcel</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Validation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJourChk</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Update</NeededPermission>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Post</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJourPost</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJourPostTr</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPreview_RU</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerTransPreview_RU</MenuItemName>
									</AxFormControl>
								</Controls>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS6098</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Course</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Approve</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Reject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerBalanceControl</MenuItemName>
									</AxFormControl>
								</Controls>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PrintMenu</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JournalDetails</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RAssetReportMB4</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>671088637</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>RAssetReportMB4</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RAssetReportMB8</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>RAssetReportMB8</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPerJournal</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerTransPerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WithholdingTaxSlip</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>TaxWithholdSlip_TH</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPreview</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265915</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalPreview</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>SimpleMethod_CN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>CN</CountryRegionCodes>
								<ElementPosition>2134900734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS24899</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Advanced_CN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>CN</CountryRegionCodes>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS23466</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>JournalCreate_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>2142240766</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Create</NeededPermission>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalCreate_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalCreate_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalCreateStorno_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTable</DataSource>
										<MenuItemName>LedgerJournalCreateStorno_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS14364</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SADFinanceTable_PL</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2145386494</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTable</DataSource>
								<MenuItemName>PlSADFinanceTable</MenuItemName>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LedgerJournalUnlockButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTable</DataSource>
								<MenuItemName>LedgerJournalUnlock</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopFields</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>AllOpenPostedField</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>AllOpenPosted</EnumType>
						<Selection>255</Selection>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ShowUserCreatedOnly</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS113946</Label>
						<Style>Checkbox</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridOverview</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_dataAreaId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>dataAreaId</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_JournalNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalName</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PeriodControl_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportPeriod_RU</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_Name</Name>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReverseType_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseType_RU</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalTypeGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalType</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTable_Posted</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Posted</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>LedgerJournalTable_PostedDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostedDateTime</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ErrorLog</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>Logged</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@SYS2515</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>BlockImage</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>12</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>18</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>LockImage</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<Label>@SYS10653</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_InUseBy</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>inUseUserId</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@GeneralLedger:JournalEntryInUseBy</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTable_ReverseEntry</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>ReverseEntry</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_ApprovalStatus_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1946157054</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovalStatus_CN</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTable_ReverseDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseDate</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Reverse_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2046820350</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Reverse_RU</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>RTax25Version</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>561274134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RTax25RegVersion</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_ModifiedBy</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ModifiedBy</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_RejectedBy</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RejectedBy</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTable</DataSource>
								<DefaultAction>JournalLines</DefaultAction>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6188</Caption>
						<DataSource>LedgerJournalTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Journal</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_JournalName</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalName</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_JournalType</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalType</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Selection>255</Selection>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_Name_2</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS6790</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Posting</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_CurrentOperationsTax</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrentOperationsTax</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_DetailSummaryPosting</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DetailSummaryPosting</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTable_RemoveLineAfterPosting</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemoveLineAfterPosting</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>LedgerJournalTable_LinesLimitBeforeDistribution</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinesLimitBeforeDistribution</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_ParentJournalNum</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ParentJournalNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5943</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupReversingEntry</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerBasicReversingEntries</ConfigurationKey>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ReversingEntry_ReverseEntry</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseEntry</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ReversingEntry_ReverseDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseDate</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ReversingEntry</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForeignPaymentsInformation_LT</Name>
								<ElementPosition>1968526675</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignPaymentsInformation_LT_InformByTelex_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InformByTelex_LT</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignPaymentsInformation_LT_InformByPhone_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InformByPhone_LT</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ForeignPaymentsInformation_LT_DebitCurrencyCode_LT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DebitCurrencyCode_LT</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ForeignPaymentsInformation_LT</DataGroup>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Correction_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>2058005160</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Correction_RU_ReportingDate_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportingDate_RU</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Correction</DataGroup>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentFormatCodes_W</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_CategoryPurpose_W</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTable_W</DataSource>
										<ReferenceField>CategoryPurpose_W</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_ChargeBearer_W</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTable_W</DataSource>
										<ReferenceField>ChargeBearer_W</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_LocalInstrument_W</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTable_W</DataSource>
										<ReferenceField>LocalInstrument_W</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>PaymentFormatCodes_W_ServiceLevel_W</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTable_W</DataSource>
										<ReferenceField>ServiceLevel_W</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentFormatCodes_W</DataGroup>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Setup</Name>
						<ElementPosition>1744830462</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountGroup</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_OffsetAccountGroup</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>OffsetAccountType</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_OffsetAccountType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_OffsetAccount</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTable</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11162</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocumentNum</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_DocumentNum</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_DocumentNum</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_LedgerJournalTable_DocumentNum</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS101280</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherAllocation</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VoucherAllocation_VoucherAllocatedAtPosting</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherAllocatedAtPosting</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>VoucherAllocation</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashAccounts_W</Name>
								<ElementPosition>1342177278</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CashAccounts_W_CashAccount_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashAccount_W</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CashAccounts_W</DataGroup>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SalesTax</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612731</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_LedgerJournalInclTax</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalInclTax</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_DelayTaxCalculation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DelayTaxCalculation</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SalesTax_TaxObligationCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxObligationCompany</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>FixedExchRate</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedExchRate</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>EUROTriangulation</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EUROTriangulation</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS7572</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportingCurrency</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ReportingFixedExchRate</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportingCurrencyFixedExchRate</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editReportingCurrencyExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRate</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editReportingCurrencyExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GeneralLedger:ReportingCurrency</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Prepayment_W</Name>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Prepayment_W_Prepayment_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Prepayment_W</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Prepayment_W</DataGroup>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FiscalInformation_BR</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FiscalInformation_BR_FiscalEstablishment_BR</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FiscalInformation_BR_FiscalEstablishment_BR_FiscalEstablishmentId</Name>
												<DataRelationPath>FiscalEstablishment_BR</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTable_W</DataSource>
										<ReferenceField>FiscalEstablishment_BR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editTaxType</Name>
										<CountryRegionCodes>BR</CountryRegionCodes>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editTaxType</DataMethod>
										<DataSource>LedgerJournalTable_W</DataSource>
										<Label>@GLS205</Label>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTable_W</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BaseDocument_IT</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BaseDocument_IT_DocumentType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentType</DataField>
										<DataSource>BaseDocument_IT</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>BaseDocument_IT_LineNumber</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineNumber</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BaseDocument_IT_DocumentNumber</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNumber</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>BaseDocument_IT_DocumentDate</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BaseDocument_IT_ItemNumber</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemNumber</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BaseDocument_IT_OrderOrAgreementCode</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OrderOrAgreementCode</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BaseDocument_IT_CIPEcode</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CIPEcode</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BaseDocument_IT_TenderCode</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TenderCode</DataField>
										<DataSource>BaseDocument_IT</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>BaseDocument</DataGroup>
								<DataSource>BaseDocument_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Bank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Bank_SummarizationEnabled</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationEnabled</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Bank_SummarizationCriteria</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationCriteria</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS7439</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2186</Caption>
						<DataSource>LedgerJournalTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Customs_IT</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>IT</CountryRegionCodes>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Customs</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_CustomsId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomsId</DataField>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_M_customsName</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>customsName</DataMethod>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@CustomsDocumentsIT:CD_EntityGroup_Customs</Caption>
								<DataSource>LedgerJournalTable_Customs_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Customs_Partner</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_PartnerId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PartnerId</DataField>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_M_partnerName</Name>
										<AllowEdit>No</AllowEdit>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>partnerName</DataMethod>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@CustomsDocumentsIT:CD_EntityField_PartnerId_IT</Caption>
								<DataSource>LedgerJournalTable_Customs_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Customs_Shipper</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_ShipperId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ShipperId</DataField>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Customs_M_shipperName</Name>
										<AllowEdit>No</AllowEdit>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>shipperName</DataMethod>
										<DataSource>LedgerJournalTable_Customs_IT</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@CustomsDocumentsIT:CD_EnumElement_Shipper</Caption>
								<DataSource>LedgerJournalTable_Customs_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>Customs_SkipGoodsTrans</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SkipGoodsTrans</DataField>
								<DataSource>LedgerJournalTable_Customs_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Customs_CustomsDebt</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>CustomsDebt</DataField>
								<DataSource>LedgerJournalTable_Customs_IT</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@CustomsDocumentsIT:CD_EntityGroup_Customs</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Block</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PrivateBlock</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkInUseBlock</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>InUseBlock</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IsUserPrivate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>IsUserPrivate</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@SYS3324</Label>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>User</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InUseUserId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>InUseUserId</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UserBlockIdName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>UserBlockIdName</DataMethod>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Blocked</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SystemBlocked</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SystemBlocked</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_SystemBlockedReason</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SystemBlockedReason</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_GroupBlockId</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GroupBlockId</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS50247</Caption>
						<DataSource>LedgerJournalTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabBillOfExchange</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BillOfExchange</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GroupBillOfExchange_BankRemittanceType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankRemittanceType</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<HideFirstEntry>Yes</HideFirstEntry>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupBillOfExchange_BankAccountId</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_GroupBillOfExchange_BankAccountId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankAccountId</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>BillOfExchange</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Promissorynote</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupPromissorynote_BankAccountId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTable_GroupPromissorynote_BankAccountId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankAccountId</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PromissoryNote</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupProtestNegInst</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProtestSettledBill</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProtestSettledBill</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@SYS73750</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_CustVendNegInstProtestProcess</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendNegInstProtestProcess</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS69795</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2105540606</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS138491</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>LedgerJournalTable</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS138491</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>History</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2130706430</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approvalprocedure</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>613566756</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportedAsReadyBy</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Approvalprocedure_ApprovalStatus_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>894784852</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovalStatus_CN</DataField>
										<DataSource>LedgerJournalTable_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ApprovalProcedure_Approver</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ApprovalProcedure_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTable</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RejectedBy</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Approvalprocedure_WorkflowApprovalStatus</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WorkflowApprovalStatus</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Origin</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Origin_OriginalCompany</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalCompany</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Origin_OriginalJournalNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalJournalNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Origin</DataGroup>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>LedgerJournalTable_Posted_2</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Posted</DataField>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>LedgerJournalTable_PostedDateTime</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>DateTime</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PostedDateTime</DataField>
								<DataSource>LedgerJournalTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTable_Log</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Log</DataField>
								<DataSource>LedgerJournalTable</DataSource>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FinancialTags</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>FinTagGridEntryFormPart</Name>
								<Type>Container</Type>
								<FormControlExtension>
									<Name>FormPartControl</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>dataLinks</Name>
											<ExtensionComponents>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>FinTagGridLookupLink</Name>
													<ComponentType>FormFieldRelationDataLink</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>dataSource</Name>
															<Type>String</Type>
															<Value>LedgerJournalTable</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>dataField</Name>
															<Type>String</Type>
															<Value>FinTag</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>targetDataField</Name>
															<Type>String</Type>
															<Value>FinTag</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>targetDataSource</Name>
															<Type>String</Type>
															<Value>FinTagTagNameValueTmp</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
											</ExtensionComponents>
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetName</Name>
											<Type>String</Type>
											<Value>FinTagGridEntryFormPart</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>autoRefreshInterval</Name>
											<Type>Int32</Type>
											<Value>0</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmRunMode</Name>
											<Type>Enum</Type>
											<TypeName>FormPartControlRunMode</TypeName>
											<Value>Local</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<Caption>@FinTag:FinTag_Label</Caption>
						<DataSource>LedgerJournalTable</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>LedgerJournalTable</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>