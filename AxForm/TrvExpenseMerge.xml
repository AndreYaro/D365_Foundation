<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvExpenseMerge</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvExpenseMerge extends FormRun
{
    TrvExpTrans selectedExpense;
    QueryBuildRange statusRange, expenseRange, dateRange;
    utcdatetime today;
   
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args() && element.args().caller() && element.args().caller().datasource() != null)
        {
            FormDataSource ds = element.args().caller().datasource();

            // Get the expense information from the parent form's datasource
            selectedExpense = ds.cursor();
        }
        else
        {
            throw error("@SYS22996");
        }

        super();

        element.design().caption(strFmt("@Expense:ExpenseSummary",
            selectedExpense.CostType,
            selectedExpense.MerchantId,
            selectedExpense.TransDate,
            selectedExpense.amountCurr,
            selectedExpense.ExchangeCode));

        if (!selectedExpense.isCreditCardTransaction())
        {
            // Non-credit card expenses cannot be matched
            MatchGroup.visible(false);
        }

        today = DateTimeUtil::utcNow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptForCategoryChange</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Confirm with user that process should continue with an expense category change.
    /// </summary>
    /// <returns>
    ///     True if the update should continue (either no category change or user selected yes); otherwise, false.
    /// </returns>
    public boolean promptForCategoryChange()
    {
        boolean continueWithUpdate = true;

        TrvExpTrans ccExpense;
        select CostType from ccExpense where ccExpense.RecId == selectedExpense.RecId;

        TrvExpTrans manualExpense;
        select CostType from manualExpense where manualExpense.RecId == TrvExpTrans.RecId;

        if (ccExpense.CostType != manualExpense.CostType)
        {
            DialogButton result = Box::yesNo(strFmt("@Expense:MergeCategoryChangeConfirmation", manualExpense.CostType), DialogButton::Yes);

            if (result == DialogButton::No)
            {
                continueWithUpdate = false;
            }
        }

        return continueWithUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExpenseNumberFilter</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Update the query build range based on the expense report number of the expense and the merge mode selected
    /// </summary>
    public void updateExpenseNumberFilter()
    {
        if (selectedExpense.ExpNumber != '' && MergeGroup.optionValue() == 1)
        {
            // Filter by expense report when already on a report and planning to merge with a draft expense
            expenseRange.value(selectedExpense.ExpNumber);
        }
        else
        {
            expenseRange.value('');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDateFilter</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Update the query build range based on date filter and the merge mode selected
    /// </summary>
    public void updateDateFilter()
    {
        if (MergeGroup.optionValue() == 1) // Merge
        {
            dateRange.value("");
        }
        else
        {
            switch (any2Enum(DateFilter.selection()))
            {
                case TrvDateRangeFilter::AllTime:
                    dateRange.value("");
                    break;

                case TrvDateRangeFilter::Last3Months:                    
                    dateRange.value(SysQuery::range(DateTimeUtil::addMonths(today, -3), DateTimeUtil::minValue()));
                    break;

                case TrvDateRangeFilter::Last1Month:
                default:
                    dateRange.value(SysQuery::range(DateTimeUtil::addMonths(today, -1), DateTimeUtil::minValue()));
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvExpTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            // Inherit worker, legal entity, and itemized/personal line filters and sort order from copy caller query
            
            // Cannot select yourself
            QueryBuildRange selfRange = SysQuery::findOrCreateRange(this.query().dataSourceName(tableStr(TrvExpTrans)), fieldnum(TrvExpTrans, RecId));
            selfRange.value(SysQuery::valueNot(selectedExpense.RecId));
            selfRange.status(RangeStatus::Hidden);

            dateRange = SysQuery::findOrCreateRange(this.query().dataSourceName(tableStr(TrvExpTrans)), fieldnum(TrvExpTrans, TransDate));
            element.updateDateFilter();
            dateRange.status(RangeStatus::Hidden);

            statusRange = SysQuery::findOrCreateRange(this.query().dataSourceName(tableStr(TrvExpTrans)), fieldnum(TrvExpTrans, ApprovalStatus));
            statusRange.value(queryValue(TrvAppStatus::Create));
            statusRange.status(RangeStatus::Hidden);

            if (selectedExpense.isCreditCardTransaction())
            {
                // Credit card expenses can only be merged or matched with non-credit card expenses
                QueryBuildRange ccRange = SysQuery::findOrCreateRange(this.query().dataSourceName(tableStr(TrvExpTrans)), fieldnum(TrvExpTrans, PBSRecId));
                ccRange.value(SysQuery::value(0));
                ccRange.status(RangeStatus::Hidden);
            }

            expenseRange = SysQuery::findOrCreateRange(this.query().dataSourceName(tableStr(TrvExpTrans)), fieldnum(TrvExpTrans, ExpNumber));
            element.updateExpenseNumberFilter();
            expenseRange.status(RangeStatus::Hidden);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>MergeGroup</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            Grid.multiselect(false);
            DateFilter.visible(false);

            statusRange.value(SysQuery::value(TrvAppStatus::Create));

            element.updateExpenseNumberFilter();
            element.updateDateFilter();

            TrvExpTrans_ds.executeQuery();    
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MatchGroup</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            Grid.multiselect(true);
            DateFilter.visible(true);

            //
            // Do not need to exclude Matched because only non-CC records are being shown
            // and non-CC records cannot be matched.
            //
            statusRange.value(SysQuery::valueNot(TrvAppStatus::Create));

            element.updateExpenseNumberFilter();
            element.updateDateFilter();

            TrvExpTrans_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;
    
            ret = super();

            element.updateDateFilter();
            TrvExpTrans_ds.executeQuery();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (MergeGroup.optionValue() == 1)
            {
                boolean mergeSucceeded = true;

                if (element.promptForCategoryChange())
                {
                    if (TrvExpTrans.isCreditCardTransaction())
                    {
                        // Flip the expenses for the merge so that the credit card expense is considered the master record
                        mergeSucceeded = TrvExpTrans::mergeExpenseLines(TrvExpTrans.RecId, selectedExpense.RecId);
                    }
                    else
                    {
                        mergeSucceeded = TrvExpTrans::mergeExpenseLines(selectedExpense.RecId, TrvExpTrans.RecId);
                    }
                }

                super();

                if (!mergeSucceeded)
                {
                    warning("@Expense:MergeFailed");
                }
            }
            else
            {
                ttsbegin;

                for (TrvExpTrans current = TrvExpTrans_DS.getFirst(1) ? TrvExpTrans_DS.getFirst(1) : TrvExpTrans_DS.cursor();
                    current;
                    current = TrvExpTrans_DS.getNext())
                {
                    selectedExpense.matchExpense(current);
                }

                ttscommit;

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvExpTrans</Name>
			<Table>TrvExpTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyOverBudgetAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyReconciledAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdditionalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressCity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressZipCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillIssuedTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusinessPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAdvanceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>City</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedTaxAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostOwner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deduktion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionBreakfest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionDinner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionLunch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntertainmentLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyBilled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyLE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanySalesCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanySalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyTransferCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyTransferPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBudgetCheckPending</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPreAuthorized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSplit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KMOwnCar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KMPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineLevelPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Location</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MappedToRequisitionLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MerchantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MileageFromAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MileageToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Mobile_Statement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetTransactionAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfPassengers</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalReceiptsRecvd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalSourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PBS_Statement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PBSRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingErrors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPolicyStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPolicyText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptsAttached</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReimburseAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubCategoryRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIncluded</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketUsed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRowNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvExpTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ZipCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Expense:MatchDetails</Caption>
		<DataSource xmlns="">TrvExpTrans</DataSource>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>RadioButtonGroup</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>MergeGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MergeText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@Expense:MergeInstructions</Text>
							</AxFormControl>
						</Controls>
						<Caption>@Expense:MergeTitle</Caption>
						<FrameOptionButton>Radio</FrameOptionButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>MatchGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MatchText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@Expense:MatchInstructions</Text>
							</AxFormControl>
						</Controls>
						<Caption>@Expense:MatchTitle</Caption>
						<FrameOptionButton>Radio</FrameOptionButton>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormComboBoxControl">
				<Name>DateFilter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ComboBox</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<EnumType>TrvDateRangeFilter</EnumType>
				<Items />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvExpTrans_CostType</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>CostType</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvExpTrans_MerchantId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>MerchantId</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>TrvExpTrans_TransDate</Name>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransDate</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TrvExpTrans_AmountCurr</Name>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>AmountCurr</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvExpTrans_ExchangeCode</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>ExchangeCode</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrvExpTrans_ExpNumber</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>ExpNumber</DataField>
								<DataSource>TrvExpTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>TrvExpTrans_ApprovalStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>ApprovalStatus</DataField>
								<DataSource>TrvExpTrans</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<DataSource>TrvExpTrans</DataSource>
						<MultiSelect>No</MultiSelect>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS30312</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>