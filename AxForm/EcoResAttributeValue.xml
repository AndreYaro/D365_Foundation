<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>EcoResAttributeValue</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class EcoResAttributeValue extends FormRun  implements OfficeIGeneratedWorkbookCustomExporter, OfficeIMenuCustomizer
{
    // ********************************************
    // The tree of joins for the form:
    // ********************************************
    // EcoResAttribute
    //   EcoResAttributeType (Active JOIN)
    //     EcoResBoundedAttributeTypeValue (OUTER JOIN)
    //   EcoResCategoryAttributeLookup
    //     EcoResCategory (WHERE CategoryHierarchy is Procurement)
    //       EcoResProductCategory
    //         EcoResProduct (WHERE RecId=givenRecId)
    //   EcoResProductAttributeValue (OUTER JOIN; WHERE Product=givenRecId && Attribute=EcoResAttribute.RecId)
    //     EcoResValue (OUTER JOIN)
    //
    // Note: EcoResAttributeType has to Active Join
    //  - cannot be Inner|Outer Join - "Field 'Domain' must be set" error
    //  - cannot be Delayed - when form loads, selectionChanged
    //      would execute with EcoResAttributeType still not set.
    // ********************************************
    EcoResProduct	callerMasterOrDistinctProduct;
    boolean			skipRefresh;
    
    const str       CustomExportLinesToExcelOptionId = 'LinesCustom';
    
}
]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        List exportOptions = _menuOptions.customMenuItems();

        OfficeGeneratedExportMenuItem exportOption = OfficeGeneratedExportMenuItem::construct(
            tableStr(EcoResProductAttributeValueV3Entity),
            CustomExportLinesToExcelOptionId);

        exportOption.displayName("@RET261257");
        exportOptions.addEnd(exportOption);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataEntityContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <see cref="ExportToExcelDataEntityContext"/> that specifies what should be exported for the specified menu item.
    /// The <c>EcoResProductAttributeValueV3Entity</c> export is filtered based on related product.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <returns>
    /// Returns the <see cref="ExportToExcelDataEntityContext"/> that specifies what should be exported for the specified menu item;
    /// otherwise, null.
    /// </returns>
    public ExportToExcelDataEntityContext getDataEntityContext(OfficeGeneratedExportMenuItem _menuItem)
    {
        ExportToExcelDataEntityContext context = null;

        if (_menuItem.id() == CustomExportLinesToExcelOptionId)
        {
            context = ExportToExcelDataEntityContext::construct(tableStr(EcoResProductAttributeValueV3Entity), tableFieldGroupStr(EcoResProductAttributeValueV3Entity, AutoReport));

            ListEnumerator enumerator = context.entities().getEnumerator();
            while (enumerator.moveNext())
            {
                ExportToExcelDataEntityInfo entity = enumerator.current();

                if (entity.entityName() == tableStr(EcoResProductAttributeValueV3Entity))
                {
                    ExportToExcelFilterTreeBuilder filterBuilder = new ExportToExcelFilterTreeBuilder(tablestr(EcoResProductAttributeValueV3Entity));

                    entity.filter(
                        filterBuilder.areEqual(
                            fieldStr(EcoResProductAttributeValueV3Entity, ProductNumber), 
                            EcoResProduct::find(ecoResProductAttributeValue.Product).DisplayProductNumber));
                    break;
                }
            }
        }

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>attributeChanged</Name>
				<Source><![CDATA[
    public void attributeChanged()
    {
        EcoResAttributeType enumerationDomain;
        EcoResTextValue newEcoResTextValue;      
        EcoResAttribute localEcoResAttribute;
        EcoResAttributeType localEcoResAttributeType;
        EcoResAttributeDefaultValue ecoResAttributeDefaultValue;
        EcoResReferenceValue ecoResReferenceValue;
        EcoResValue referencedValue;
        EcoResAttributeValue ecoResAttributeValue;
        EcoResProductInstanceValue EcoResProductInstanceValue;
        RetailStandardAttribute retailStandardAttribute;
        EcoResCategory localEcoResCategory;
        ecoResProductCategory localEcoResProductCategory;
        EcoResProductInstanceValue newEcoResProductInstanceValue;
        EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute;
        EcoResCategoryAttributeLookup localEcoResCategoryAttributeLookup;
        EcoResCategoryHierarchyRole localEcoResCategoryHierarchyRole;
        str richMediaEditFormMenuItemName;
        AttributeValueText  textValue;

        void setVisibilityForAll(boolean _visible)
        {
            if (skipRefresh)
            {
                return;
            }
            element.booleanValueSetVisible(_visible);
            element.stringValueSetVisible(_visible);
            element.utcDateTimeValueSetVisible(_visible);
            element.enumerationValueSetVisible(_visible);
            element.integerDecimalGroupSetVisible(_visible);
            element.intValueSetVisible(_visible);
            element.realValueSetVisible(_visible);
            element.floatUnitOfMeasureSetVisible(_visible);
            element.intUnitOfMeasureSetVisible(_visible);
            element.currencyGroupSetVisible(_visible);
            element.currencyValueSetVisible(_visible);
            element.currencyCodeSetVisible(_visible);
            element.richValueSetVisible(_visible);
            element.referenceValueSetVisible(_visible);
        }
        void refreshAttribute()
        {
            int currentPosition;

            if (skipRefresh)
            {
                return;
            }

            currentPosition = ecoResAttribute_ds.getPosition();
            ecoResAttribute_ds.executeQuery();
            ecoResAttribute_ds.setPosition(currentPosition);
        }

        // Set value controls to invisible
        setVisibilityForAll(false);

        if (AttributeDataTypeDiscriminator::checkAttributeDataTypeReference(EcoResAttributeType::find(ecoResAttribute.AttributeType).DataType))
        {
            select firstOnly localEcoResAttribute
                join localEcoResAttributeType
                where localEcoResAttributeType.RecId ==  localEcoResAttribute.AttributeType
                join ecoResReferenceValue
                    where ecoResReferenceValue.RefRecId == localEcoResAttribute.RecId
                       && ecoResReferenceValue.RefTableId == localEcoResAttribute.TableId
                join ecoResAttributeDefaultValue
                    where ecoResAttributeDefaultValue.Attribute == ecoResAttribute.RecId
                       && ecoResAttributeDefaultValue.Value == ecoResReferenceValue.RecId
                outer join ecoResProductInstanceValue
                    where ecoResProductInstanceValue.Product == callerMasterOrDistinctProduct.RecId
                outer join ecoResAttributeValue
                    where ecoResAttributeValue.Attribute == localEcoResAttribute.RecId
                       && ecoResAttributeValue.InstanceValue == ecoResProductInstanceValue.RecId
                outer join referencedValue
                    where referencedValue.RecId == ecoResAttributeValue.Value;

            // copy value from referenced attribute if set
            if (!ecoResValue.RecId && referencedValue.RecId)
            {
                ecoResAttributeValue.Attribute = ecoResAttribute.RecId;
                ecoResAttributeValue.Value = referencedValue.pcDuplicate();
                ecoResAttributeValue.insert();
                refreshAttribute();
            }
            else if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
            {
                select firstOnly retailStandardAttribute
                    where retailStandardAttribute.Attribute == localEcoResAttribute.RecId;
                if (retailStandardAttribute)
                {
                    if ((!ecoResValue.RecId && !ecoResAttributeValue.RecId) || ecoResValue.InstanceRelationType != DictTable::getRelationTypeFromTableName(tablestr(EcoResTextValue)))
                    {
                        newEcoResTextValue.clear();
                    }
                    else
                    {
                        newEcoResTextValue = ecoResValue.RecId ? ecoResValue : EcoResValue::find(ecoResAttributeValue.value, true);
                    }
                    textValue =  RetailAttributeHelper::getStandardAttributeValue(retailStandardAttribute.StandardAttributeID, callerMasterOrDistinctProduct.RecId);
                    if (newEcoResTextValue.TextValue != textValue)
                    {
                        newEcoResTextValue.TextValue = textValue;
                        if (newEcoResTextValue.RecId)
                        {
                            newEcoResTextValue.update();
                        }
                        else
                        {
                            element.createValue(newEcoResTextValue);
                        }

                        refreshAttribute();
                    }
                }
            }

            element.referenceValueSetVisible(true);
            referencedAttribute.text(localEcoResAttribute.Name);
        }
        else
        {
            localEcoResAttribute = ecoResAttribute;
            localEcoResAttributeType = EcoResAttributeType::find(localEcoResAttribute.AttributeType);

            // if value doesn't yet exist and attribute was assigned via an attribute group create value based on the group default for the attribute.
            if (!ecoResValue.RecId
                && EcoResAttributeValue::createDefaultAttributeValueFromAttributeGroup(ecoResAttribute.RecId, callerMasterOrDistinctProduct.RecId))
            {
                refreshAttribute();
            }
        }
        
        this.setAttributeValueTables(localEcoResAttributeType.DataType, newEcoResTextValue, localEcoResAttribute);

        if (!skipRefresh)
        {
            ecoResProductAttributeValue_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAttributeValueTables</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Set attribute value tables based on <c>AttributeDataType</c>.
    /// </summary>
    /// <param name = "_dataType">
    ///     An attribute data type.
    /// </param>
    /// <param name = "newEcoResTextValue">
    ///     Textual enumeration values table buffer.
    /// </param>
    /// <param name = "localEcoResAttribute">
    ///     Attributes table buffer.
    /// </param>
    protected void setAttributeValueTables(AttributeDataType _dataType, EcoResTextValue _newEcoResTextValue, EcoResAttribute _localEcoResAttribute)
    {
        EcoResIntValue newEcoResIntValue;
        EcoResFloatValue newEcoResFloatValue;
        EcoResCurrencyValue newEcoResCurrencyValue;
        EcoResDateTimeValue newEcoResDateTimeValue;
        EcoResAttributeTypeUnitOfMeasure domainUnitOfMeasure;
        EcoResAttributeType localEcoResAttributeType = EcoResAttributeType::find(_localEcoResAttribute.AttributeType);
        EcoResTextValueTranslation  ecoResTextValueTranslation;
        EcoResBooleanValue newEcoResBooleanValue;
        UnitOfMeasure unitOfMeasure;
        EcoResTextValue enumerationValue;
        EcoResAttributeType enumerationDomain;
        EcoResEnumerationAttributeTypeValue enumerationAttributeTypeValue;
        RetailRichMediaType richMediaType;

        void refreshAttribute()
        {
            int currentPosition;

            if (skipRefresh)
            {
                return;
            }

            currentPosition = ecoResAttribute_ds.getPosition();
            ecoResAttribute_ds.executeQuery();
            ecoResAttribute_ds.setPosition(currentPosition);
        }
        switch (_dataType)
        {
            case AttributeDataType::Currency:
                if (!ecoResValue.RecId)
                {
                    // For new attribute values create the value
                    newEcoResCurrencyValue.clear();
                    newEcoResCurrencyValue.CurrencyCode = EcoResCurrencyValue::find(EcoResAttributeDefaultValue::findByAttribute(_localEcoResAttribute.RecId).Value).CurrencyCode;
                    newEcoResCurrencyValue.CurrencyValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(newEcoResCurrencyValue);
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                // Set value control to visible
                element.currencyGroupSetVisible(true);
                element.currencyCodeSetVisible(true);
                element.currencyValueSetVisible(true);

                break;
            case AttributeDataType::DateTime:
                if (!ecoResValue.RecId)
                {
                    // For new attribute values create the value
                    newEcoResDateTimeValue.clear();
                    newEcoResDateTimeValue.DateTimeValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(newEcoResDateTimeValue);
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                // Set date value control to visible
                element.utcDateTimeValueSetVisible(true);

                break;
            case AttributeDataType::Decimal:

                domainUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(localEcoResAttributeType);

                if (!ecoResValue.RecId)
                {
                    // For new attribute values create the value
                    newEcoResFloatValue.clear();
                    newEcoResFloatValue.FloatValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(newEcoResFloatValue);

                    if (domainUnitOfMeasure.RecId)
                    {
                        // Set the unit of measure selection
                        if (domainUnitOfMeasure.DefaultUnitOfMeasure)
                        {
                            unitOfMeasure = UnitOfMeasure::find(domainUnitOfMeasure.DefaultUnitOfMeasure);
                            newEcoResFloatValue.FloatUnitOfMeasure = unitOfMeasure.RecId;
                            newEcoResFloatValue.update();
                            ecoResValue_EcoResFloatValue_ds.executeQuery();
                        }
                    }
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                // Set real value control to visible
                element.integerDecimalGroupSetVisible(true);
                if (domainUnitOfMeasure.RecId)
                {
                    element.floatUnitOfMeasureSetVisible(true);
                }
                element.realValueSetVisible(true);

                break;

            case AttributeDataType::Integer:

                domainUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(localEcoResAttributeType);

                if (!ecoResValue.RecId)
                {
                    // For new attribute values create the value
                    newEcoResIntValue.clear();
                    newEcoResIntValue.IntValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(newEcoResIntValue);

                    if (domainUnitOfMeasure.RecId)
                    {
                        // Set the unit of measure selection
                        if (domainUnitOfMeasure.DefaultUnitOfMeasure)
                        {
                            unitOfMeasure = UnitOfMeasure::find(domainUnitOfMeasure.DefaultUnitOfMeasure);
                            newEcoResIntValue.IntUnitOfMeasure = unitOfMeasure.RecId;
                            newEcoResIntValue.update();
                            ecoResValue_EcoResIntValue_ds.executeQuery();
                        }
                    }
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                // Set int value control to visible
                element.integerDecimalGroupSetVisible(true);
                if (domainUnitOfMeasure.RecId)
                {
                    element.intUnitOfMeasureSetVisible(true);
                }
                element.intValueSetVisible(true);

                break;

            case AttributeDataType::Text:
                if (!ecoResValue.RecId && !_newEcoResTextValue.RecId)
                {
                    // For new attribute values create the value
                    _newEcoResTextValue.clear();
                    _newEcoResTextValue.TextValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(_newEcoResTextValue);
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                if (localEcoResAttributeType.IsEnumeration == NoYes::Yes)
                {
                    boolean comboBoxEnabled = EcoResValue_EcoResTextValue_DS.canEdit();

                    // Populate enumeration combo box
                    enumerationComboBox.clear();
                    while select TextValue from enumerationValue
                        join RecId from enumerationAttributeTypeValue
                            order by enumerationAttributeTypeValue.OrdinalNumber asc
                            where enumerationAttributeTypeValue.Value == enumerationValue.RecId
                        join RecId from enumerationDomain
                            where enumerationDomain.RecId == enumerationAttributeTypeValue.AttributeType
                                && enumerationDomain.RecId == localEcoResAttributeType.RecId
                        outer join TextValue from ecoResTextValueTranslation
                            where ecoResTextValueTranslation.TextValueTable == enumerationValue.RecId
                                && ecoResTextValueTranslation.Language == SystemParameters::getSystemLanguageId()
                    {
                        enumerationComboBox.add(ecoResTextValueTranslation.TextValue ? ecoResTextValueTranslation.TextValue : enumerationValue.TextValue );
                    }
                    // As the ECORESTEXTVALUE table maintains an extra row for storing the selected value of the combobox, the below code will fetch
                    // the main record's RecId for the selected value as the main record RecId is referenced in the table ECORESTEXTVALUETRANSLATION.
                    select RecId from enumerationValue where enumerationValue.TextValue == ecoResValue_EcoResTextValue.TextValue
                        join RecId from enumerationAttributeTypeValue
                            where enumerationAttributeTypeValue.Value == enumerationValue.RecId
                        join RecId from enumerationDomain
                            where enumerationDomain.RecId == enumerationAttributeTypeValue.AttributeType &&
                                enumerationDomain.RecId == localEcoResAttributeType.RecId;

                    ecoResTextValueTranslation = EcoResTextValueTranslation::findByTextValueLanguage(enumerationValue.RecId,SystemParameters::getSystemLanguageId());
                    enumerationComboBox.selectText(ecoResTextValueTranslation ? ecoResTextValueTranslation.TextValue : ecoResValue_EcoResTextValue.TextValue);
                    element.enumerationValueSetVisible(true);

                    enumerationComboBox.enabled(comboBoxEnabled);
                }
                else
                if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
                {
                    richMediaType = RetailAttributeHelper::getRichMediaType(localEcoResAttributeType.RecId);

                    if (richMediaType == RetailRichMediaType::None)
                    {
                        element.stringValueSetVisible(true);
                    }
                    else
                    {
                        element.richValueSetVisible(true);
                    }
                }
                else
                {
                    // Set string value control to visible
                    element.stringValueSetVisible(true);
                }

                break;
            case AttributeDataType::TrueFalse:
                if (!ecoResValue.RecId)
                {
                    // For new attribute values create the value
                    newEcoResBooleanValue.clear();
                    newEcoResBooleanValue.BooleanValue = _localEcoResAttribute.getDefaultValue();
                    element.createValue(newEcoResBooleanValue);
                    refreshAttribute();
                }

                if (skipRefresh)
                {
                    break;
                }

                // Set boolean value control to visible
                element.booleanValueSetVisible(true);

                break;
            default:
                if (skipRefresh)
                {
                    break;
                }
                // Set string value control to visible
                element.stringValueSetVisible(true);

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>booleanValueSetVisible</Name>
				<Source><![CDATA[
    public void booleanValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueBooleanEdit, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createValue</Name>
				<Source><![CDATA[
    public void createValue(EcoResValue newEcoResValue)
    {
        EcoResAttributeValue::createValue(newEcoResValue, ecoResAttribute, callerMasterOrDistinctProduct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCodeSetVisible</Name>
				<Source><![CDATA[
    public void currencyCodeSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(currencyCode, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyGroupSetVisible</Name>
				<Source><![CDATA[
    public void currencyGroupSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(currencyGroup, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyValueSetVisible</Name>
				<Source><![CDATA[
    public void currencyValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueCurrencyEdit, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enumerationChanged</Name>
				<Source><![CDATA[
    public void enumerationChanged()
    {
        EcoResTextValueTranslation  ecoResTextValueTranslation;
        AttributeValueText selectedText = enumerationComboBox.getText(enumerationComboBox.selection());

        // Update text value
        select firstonly TextValueTable from ecoResTextValueTranslation
            where ecoResTextValueTranslation.Language == SystemParameters::getSystemLanguageId() &&
                ecoResTextValueTranslation.TextValue == selectedText;

        ecoResValue_EcoResTextValue.TextValue = ecoResTextValueTranslation.TextValueTable ? EcoResTextValue::find(ecoResTextValueTranslation.TextValueTable).getStringValue()
                                                                                            : selectedText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enumerationValueSetVisible</Name>
				<Source><![CDATA[
    public void enumerationValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(enumerationComboBox, _visible);

        // For retail configuration we are enabling the translation button for fixed list attributes.
        // Retail CPOS exiting query fetching the translation value created from the released product translations.
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            this.translationSetEnabled(_visible);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>floatUnitOfMeasureSetVisible</Name>
				<Source><![CDATA[
    public void floatUnitOfMeasureSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(floatUnitOfMeasure, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        EcoResDistinctProductVariant variant;
        FormRun callerFormRun = element.args().caller();

        if (element.args().dataset() == tableNum(EcoResProductAttributeValueStaging))
        {
            EcoResProductAttributeValueStaging ecoResProductAttributeValueStaging = element.args().record();
            element.args().record(EcoResProduct::findByDisplayProductNumber(ecoResProductAttributeValueStaging.ProductNumber));
        }
        else if (!callerFormRun ||
                 !element.args().dataset() ||
                  element.args().dataset() != tablenum(EcoResProduct))
        {
            throw error(strfmt("@SYS22678", element.name()));
        }

        if (element.args().dataset() == tablenum(EcoResProduct))
        {
            callerMasterOrDistinctProduct = element.args().record();
            // callerMasterOrDistinctProduct must be set to either EcoResProductMaster or EcoResDistinctProduct
            // - not EcoResDistinctProductVariant
            // because "product attribute" relation is only for Master|DistinctProduct, not Variant.
            if (callerMasterOrDistinctProduct.getInstanceRelationType() == tableStr(EcoResDistinctProductVariant))
            {
                variant  = (callerMasterOrDistinctProduct as EcoResDistinctProductVariant);
                callerMasterOrDistinctProduct = EcoResProduct::find(variant.ProductMaster);
            }
        }

        super();

        if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
        {
            tmpEcoResCategoryHierarchyAttributes.linkPhysicalTableInstance(TmpEcoResCategoryHierarchyAttributes::populateRetailCategoryHierarchyAttributes(callerMasterOrDistinctProduct.RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>integerDecimalGroupSetVisible</Name>
				<Source><![CDATA[
    public void integerDecimalGroupSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(integerDecimalGroup, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>intUnitOfMeasureSetVisible</Name>
				<Source><![CDATA[
    public void intUnitOfMeasureSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(intUnitOfMeasure, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>intValueSetVisible</Name>
				<Source><![CDATA[
    public void intValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueIntEdit, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeVisible</Name>
				<Source><![CDATA[
    private void makeVisible(FormControl _theControl)
    {
        // must call control.update() after making control visible to redraw new values
        // - data for the control may have changed while it was invisible
        //   (which hadn't triggered update/redraw)
        _theControl.visible(true);
        _theControl.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>realValueSetVisible</Name>
				<Source><![CDATA[
    public void realValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueRealEdit, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>richValueSetVisible</Name>
				<Source><![CDATA[
    public void richValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(richValueGroup, _visible);
        this.translationSetEnabled(_visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        skipRefresh = true;
        ecoResAttribute_DS.first();

        while (ecoResAttribute_DS.next())
        {
            this.attributeChanged();
        }

        skipRefresh = false;
        ecoResAttribute_DS.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>stringValueSetVisible</Name>
				<Source><![CDATA[
    public void stringValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueStringEdit, _visible);
        this.translationSetEnabled(_visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>translationSetEnabled</Name>
				<Source><![CDATA[
    private void translationSetEnabled(boolean _enabled)
    {
        translateButton.enabled(_enabled && ecoResValue_EcoResTextValue.TextValue != '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>utcDateTimeValueSetVisible</Name>
				<Source><![CDATA[
    public void utcDateTimeValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(valueUtcDateTimeEdit, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueSetVisible</Name>
				<Source><![CDATA[
    public void valueSetVisible(FormControl _control, boolean _visible)
    {
        if (_visible)
        {
            if (!_control.visible())
            {
                this.makeVisible(_control);
            }
        }
        else
        {
            if (_control.visible())
            {
                _control.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceValueSetVisible</Name>
				<Source><![CDATA[
    public void referenceValueSetVisible(boolean _visible = true)
    {
        this.valueSetVisible(referencedAttribute, _visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductAttributeValueDataSourceRangeForCallerProduct</Name>
				<Source><![CDATA[
    private QueryBuildDataSource updateProductAttributeValueDataSourceRangeForCallerProduct()
    {
        QueryBuildDataSource qbdsProductAttributeValue = ecoResProductAttributeValue_ds.query().dataSourceTable(tableNum(EcoResProductAttributeValue));
        qbdsProductAttributeValue.clearRange(fieldNum(EcoResProductAttributeValue, Product));
        qbdsProductAttributeValue.addRange(fieldNum(EcoResProductAttributeValue, Product)).value(queryValue(callerMasterOrDistinctProduct.RecId));

        return qbdsProductAttributeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductDataSourceRangeForCallerProduct</Name>
				<Source><![CDATA[
    private void updateProductDataSourceRangeForCallerProduct()
    {
        QueryBuildDataSource qbdsProduct = ecoResProduct_ds.query().dataSourceTable(tableNum(EcoResProduct));
        qbdsProduct.clearRange(fieldNum(EcoResProduct, RecId));
        QueryBuildRange range = qbdsProduct.addRange(fieldNum(EcoResProduct, RecId));
        range.value(queryValue(callerMasterOrDistinctProduct.RecId));
        range.status(RangeStatus::Hidden);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EcoResAttribute</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            qbds = ecoResAttribute_ds.query().dataSourceTable(tableNum(EcoResAttribute));
            qbds.addSortField(fieldNum(EcoResAttribute, Name));
            qbds.orderMode(OrderMode::OrderBy);

            if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
            {
                qbds.sortClear();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.attributeChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();
            ecoResAttribute.setPrecisionOnRealValueControl(ValueRealEdit);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            element.updateProductAttributeValueDataSourceRangeForCallerProduct();
            element.updateProductDataSourceRangeForCallerProduct();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Skip write then it won't send update data event, as this form only changes the attribute value, send data event will impact the business event scenarios.
        /// </summary>
        public void write()
        {
            if (!EcoResSkipWriteMethodOnEcoResAttributeDataSourceWhenEditAttributeValueFlight::instance().isEnabled())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResCategory</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            EcoResCategoryHierarchyRole categoryHierarchyRole   = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Procurement);
            EcoResCategoryHierarchy     categoryHierarchy       = EcoResCategoryHierarchy::find(categoryHierarchyRole.CategoryHierarchy);
            QueryBuildDataSource qbds;

            super();

            qbds = ecoResCategory_ds.query().dataSourceTable(tableNum(EcoResCategory));
            QueryBuildRange range = qbds.addRange(fieldNum(EcoResCategory, CategoryHierarchy));
            range.value(queryValue(categoryHierarchy.RecId));
            range.status(RangeStatus::Hidden);

            // Also includes attributes from Retail category hierarchies
            if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
            {
                qbds.clearRange(fieldNum(EcoResCategory, CategoryHierarchy));

                qbds = qbds.addDataSource(tableNum(EcoResCategoryHierarchyRole));
                qbds.addLink(fieldNum(EcoResCategory, CategoryHierarchy), fieldNum(EcoResCategoryHierarchyRole, CategoryHierarchy));
                qbds.joinMode(JoinMode::ExistsJoin);

                this.addRoleRange(qbds, EcoResCategoryNamedHierarchyRole::Procurement);
                this.addRoleRange(qbds, EcoResCategoryNamedHierarchyRole::Retail);
                this.addRoleRange(qbds, EcoResCategoryNamedHierarchyRole::RetailSpecialGroup);
                this.addRoleRange(qbds, EcoResCategoryNamedHierarchyRole::RetailChannelNavigation);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>addRoleRange</Name>
						<Source><![CDATA[
        private void addRoleRange(QueryBuildDataSource _qbds, EcoResCategoryNamedHierarchyRole _role)
        {
            QueryBuildRange range = _qbds.addRange(fieldNum(EcoResCategoryHierarchyRole, NamedCategoryHierarchyRole));

            range.value(queryValue(_role));
            range.status(RangeStatus::Hidden);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResProduct</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.updateProductDataSourceRangeForCallerProduct();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResValue</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            qbds = ecoResValue_ds.query().dataSourceTable(tableNum(EcoResValue));
            qbds.addLink(fieldNum(EcoResProductAttributeValue, Value), fieldNum(EcoResValue, RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResAttributeType</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (ret)
            {
                if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
                {
                    boolean showEditRichTextButton =
                        ecoResAttributeType.RecId == RetailSharedParameters::find().ImagesAttributeType ||
                        ecoResAttributeType.RecId == RetailSharedParameters::find().VideosAttributeType;

                    ValueRichEdit.visible(showEditRichTextButton);
                    RichValueHTMLEditor.visible(!showEditRichTextButton);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResProductAttributeValue</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Ensure view is read only
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
  
            QueryBuildDataSource qbds = element.updateProductAttributeValueDataSourceRangeForCallerProduct();
            qbds.addLink(fieldNum(EcoResAttribute, RecId), fieldNum(EcoResProductAttributeValue, Attribute));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TmpEcoResCategoryHierarchyAttributes</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the data source with sorting.
        /// </summary>
        public void init()
        {   
            super();

            QueryBuildDataSource qbds = tmpEcoResCategoryHierarchyAttributes_ds.query().dataSourceTable(tableNum(TmpEcoResCategoryHierarchyAttributes));

            if (FeatureStateProvider::isFeatureEnabled(RetailEnableDisplayOrderForMerchandisingFeature::instance()))
            {
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, IsRetailProductHierarchy), SortOrder::Descending);
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, Category), SortOrder::Ascending);
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, AttributeGroupDisplayOrder), SortOrder::Ascending);
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, AttributeGroup), SortOrder::Ascending);
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, AttributeDisplayOrder), SortOrder::Ascending);
                qbds.addSortField(fieldNum(TmpEcoResCategoryHierarchyAttributes, AttributeName), SortOrder::Ascending);
            }
            else
            {
                qbds.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TranslateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SysTranslationHelper translationHelper;

            translationHelper = new SysTranslationHelper( tablenum(EcoResTextValue),
                                                          tablenum(EcoResTextValueTranslation)
                                                         );
            if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
            {
                ecoResValue_EcoResTextValue.createDefaultTranslation();
            }

            translationHelper.launchTranslationDetailForm(ecoResValue_EcoResTextValue.RecId);
            super();

            element.dataSource().research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnumerationComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.enumerationChanged();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueRealEdit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
            EcoResFloatValue ecoResFloatValue;
            EcoResAttributeTypeUnitOfMeasure ecoResAttributeTypeUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(ecoResAttributeType);

            isValid = super();

            ecoResFloatValue.FloatValue = this.realValue();
            if (ecoResAttributeTypeUnitOfMeasure.RecId)
            {
                ecoResFloatValue.FloatUnitOfMeasure = UnitOfMeasure::find(ecoResAttributeTypeUnitOfMeasure.DefaultUnitOfMeasure).RecId;
            }
            if (ecoResBoundedAttributeTypeValue && !ecoResBoundedAttributeTypeValue.isValid(ecoResFloatValue))
            {
                isValid = false;
                warning(strfmt("@SYS310456", ecoResFloatValue.value(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueIntEdit</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
            EcoResIntValue ecoResIntValue;
            EcoResAttributeTypeUnitOfMeasure ecoResAttributeTypeUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(ecoResAttributeType);

            isValid = super();

            ecoResIntValue.IntValue = this.value();
            if (ecoResAttributeTypeUnitOfMeasure.RecId)
            {
                ecoResIntValue.IntUnitOfMeasure = UnitOfMeasure::find(ecoResAttributeTypeUnitOfMeasure.DefaultUnitOfMeasure).RecId;
            }
            if (ecoResBoundedAttributeTypeValue && !ecoResBoundedAttributeTypeValue.isValid(ecoResIntValue))
            {
                isValid = false;
                warning(strfmt("@SYS310456", this.value(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueCurrencyEdit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
            EcoResCurrencyValue ecoResCurrencyValue;

            isValid = super();

            ecoResCurrencyValue.CurrencyValue = valueCurrencyEdit.realValue();
            ecoResCurrencyValue.CurrencyCode = currencyCode.text();
            ecoResCurrencyValue.insert();
            if (ecoResBoundedAttributeTypeValue && !ecoResBoundedAttributeTypeValue.isValid(ecoResCurrencyValue))
            {
                isValid = false;
                warning(strfmt("@SYS310456", ecoResCurrencyValue.value(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
            }
            ttsbegin;
            ecoResCurrencyValue.delete();
            ttscommit;

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueUtcDateTimeEdit</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
            EcoResDateTimeValue ecoResDateTimeValue;

            isValid = super();

            ecoResDateTimeValue.DateTimeValue = this.dateTimeValue();
            if (ecoResBoundedAttributeTypeValue && !ecoResBoundedAttributeTypeValue.isValid(ecoResDateTimeValue))
            {
                isValid = false;
                warning(strfmt("@SYS310456", this.dateTimeValue(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValueRichEdit</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            boolean ret = true;

            void editMedia(RetailRichMediaType _mediaType)
            {
                Map map;

                map = RetailRichMediaHelper::getUrlTemplateMapByProduct(ecoResProduct);
                RetailAttributeHelper::editMediaAttributeValue(element, ecoResValue_EcoResTextValue, _mediaType, map);
                ret = false;
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
            {
                if (ecoResAttributeType.RecId == RetailSharedParameters::find().ImagesAttributeType)
                {
                    editMedia(RetailRichMediaType::Images);
                }

                if (ecoResAttributeType.RecId == RetailSharedParameters::find().VideosAttributeType)
                {
                    editMedia(RetailRichMediaType::Videos);
                }
            }

            if (ret)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttribute</Name>
			<Table>EcoResAttribute</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttributeModifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategory</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResCategoryAttributeLookup</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategory_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductCategory</Name>
			<Table>EcoResProductCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResCategory</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProduct</Name>
			<Table>EcoResProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayProductNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductCategory</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResProduct_EcoResDistinctProduct</Name>
					<Table>EcoResDistinctProduct</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources>
						<AxFormDataSourceDerived>
							<Name>EcoResProduct_EcoResDistinctProductVariant</Name>
							<Table>EcoResDistinctProductVariant</Table>
							<Fields>
								<AxFormDataSourceField>
									<DataField>ProductMaster</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>RecId</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>RetaiTotalWeight</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>TableId</DataField>
								</AxFormDataSourceField>
							</Fields>
							<ReferencedDataSources />
							<DerivedDataSources />
						</AxFormDataSourceDerived>
					</DerivedDataSources>
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResProduct_EcoResProductMaster</Name>
					<Table>EcoResProductMaster</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>IsProductVariantUnitConversionEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailColorGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailSizeGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailStyleGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>VariantConfigurationTechnology</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResValue</Name>
			<Table>EcoResValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductAttributeValue</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResBooleanValue</Name>
					<Table>EcoResBooleanValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>BooleanValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResDateTimeValue</Name>
					<Table>EcoResDateTimeValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>DateTimeValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResFloatValue</Name>
					<Table>EcoResFloatValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<AllowEdit>No</AllowEdit>
							<DataField>FloatUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FloatValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResIntValue</Name>
					<Table>EcoResIntValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<AllowEdit>No</AllowEdit>
							<DataField>IntUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IntValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResTextValue</Name>
					<Table>EcoResTextValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TextValue</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResCurrencyValue</Name>
					<Table>EcoResCurrencyValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>CurrencyCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CurrencyValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_EcoResReferenceValue</Name>
					<Table>EcoResReferenceValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefFieldId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefTableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttributeType</Name>
			<Table>EcoResAttributeType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEnumeration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHidden</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductAttributeValue</Name>
			<Table>EcoResProductAttributeValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResBoundedAttributeTypeValue</Name>
			<Table>EcoResBoundedAttributeTypeValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowerBound</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpperBound</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttributeType</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategoryAttributeLookup</Name>
			<Table>EcoResCategoryAttributeLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroupAttribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroupType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryAttribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpEcoResCategoryHierarchyAttributes</Name>
			<Table>TmpEcoResCategoryHierarchyAttributes</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeDisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroupDisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsRetailProductHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS310370</Caption>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>TranslateGroup</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>TranslateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS312022</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS312030</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<DataSource>EcoResValue</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>EcoResAttribute</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>AttributeValueGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>EcoResAttribute_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>AttributeValueGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EcoResAttribute_Name</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>EcoResAttribute</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Value</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>value</DataMethod>
								<DataSource>EcoResValue</DataSource>
								<Label>@SYS310213</Label>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>EcoResAttribute</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResAttribute_Name1</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResAttribute</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>EcoResAttributeType_DataType</Name>
						<ElementPosition>1431655763</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>DataType</DataField>
						<DataSource>EcoResAttributeType</DataSource>
						<Label>@SYS40150</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResAttributeType_Name</Name>
						<ElementPosition>1789569704</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResAttributeType</DataSource>
						<Label>@SYS333319</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>AttributeValueTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTabPage</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ValueStringEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TextValue</DataField>
								<DataSource>EcoResValue_EcoResTextValue</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>EnumerationComboBox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS2595</Label>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IntegerDecimalGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ValueRealEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FloatValue</DataField>
										<DataSource>EcoResValue_EcoResFloatValue</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ValueIntEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntValue</DataField>
										<DataSource>EcoResValue_EcoResIntValue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FloatUnitOfMeasure</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FloatUnitOfMeasure_Symbol</Name>
												<DataRelationPath>UnitOfMeasure_Float</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>EcoResValue_EcoResFloatValue</DataSource>
										<ReferenceField>FloatUnitOfMeasure</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>IntUnitOfMeasure</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1968526674</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>IntUnitOfMeasure_Symbol</Name>
												<DataRelationPath>UnitOfMeasure_Int</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>EcoResValue_EcoResIntValue</DataSource>
										<ReferenceField>IntUnitOfMeasure</ReferenceField>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrencyGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ValueCurrencyEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyValue</DataField>
										<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
										<Label>@SYS98362</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>ValueBooleanEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>BooleanValue</DataField>
								<DataSource>EcoResValue_EcoResBooleanValue</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>ValueUtcDateTimeEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>DateTime</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>DateTimeValue</DataField>
								<DataSource>EcoResValue_EcoResDateTimeValue</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RichValueGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>RichValueActionPane</Name>
										<Type>ActionPane</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>RichValueButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ValueRichEdit</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>2130706430</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>EcoResValue_EcoResTextValue</DataSource>
														<MenuItemName>RetailRichTextAttributeValue</MenuItemName>
														<Text>@RET490093</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl>
										<Name>RichValueHTMLEditor</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FormControlExtension>
											<Name>HTMLEditor</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmDataSourceName</Name>
													<Type>String</Type>
													<Value>EcoResValue_EcoResTextValue</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataFieldName</Name>
													<Type>String</Type>
													<Value>TextValue</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataMethodName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReferencedAttribute</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SCM:ReferencedAttribute</Label>
							</AxFormControl>
						</Controls>
						<Columns>-1</Columns>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS310213</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>