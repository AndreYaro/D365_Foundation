<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResActivityResourceBooking</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResActivityResourceBooking extends FormRun
{
    private ResResourceSchedulingController controller;
    private ResAvailabilityViewContext context;
    private ResAvailabilityViewSearchController searchController;
    private str lastCriteria;
    private ResCharacteristicsController resourceCharacteristics;
    private ResEngagementIDName engagementIDName;
    private AvailabilityViewSelections previousSelections;
    private boolean requestWorkflowEnabled;
    private Map selectedRequestLinesMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>schedulingController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the scheduling controller.
    /// </summary>
    /// <param name = "_controller">Scheduling controller object.</param>
    /// <returns>Instance of <c>ResResourceSchedulingController</c>.</returns>
    public ResResourceSchedulingController schedulingController(ResResourceSchedulingController _controller = controller)
    {
        controller = _controller;
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize form data.
    /// </summary>
    public void init()
    {
        super();

        ResUtil::validateResPerfDataUpgradeStatus();

        requestWorkflowEnabled = ResRequestHelper::isWorkflowEnabled();
        WorkflowCreate.visible(requestWorkflowEnabled);
        RequestLineWorkflowDropDialog.visible(requestWorkflowEnabled);
        Confirm.visible(!requestWorkflowEnabled);

        // initialize activity team bookings controller
        ResProjTeamController projTeamController;

        if (!controller)
        {
            controller = element.args().caller() as ResResourceSchedulingController;
            projTeamController = controller.ProjTeamController();
        }

        if (projTeamController)
        {
            ProjId selectedProjId = projTeamController.ProjId();
            ProjName selectedProjName = projTeamController.ProjName();
            engagementIDName =  selectedProjId +  ' ' + selectedProjName;

            // initialize form title
            str caption = strfmt("@Res:ProjectTeamBookings", selectedProjId, selectedProjName);
            this.design().caption(caption);
        }

        ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
        viewSetting.coverage(ResUserSettingCoverage::ResourceBookingView);
        viewSetting.find();

        context = ResAvailabilityViewContext::construct();
        context.showScheduleDescription(viewSetting.showScheduleDescription());
        context.showRemainingCapacity(viewSetting.showScheduleCapacity());
        context.capacityAggregation(viewSetting.capacityAggregation());

        if (controller)
        {
            context.activity(controller.activity());
            AVTimeframeType timescale = ResUtil::getRecommendedTimeframeType(controller.startDateTime(), controller.endDateTime());
            context.timescale(timescale);
            context.startDateTime(controller.startDateTime());
            context.endDateTime(controller.endDateTime());
        }

        // Close this form if ResRollupCalendarShared does not have sufficient TimeFrame range.
        if (ResUtil::validateRollupCalendarTimeFrameRange(context.startDateTime(), context.endDateTime(), true, element))
        {
            // initialize duration details
            StartDateTime.dateTimeValue(context.startDateTime());
            EndDateTime.dateTimeValue(context.endDateTime());

            // initialize available resources
            ResSearchCriteria searchCriteria = ResSearchCriteria::createCriteria(context.searchString());
            ResActivityTeamOnlySearchCriteria searchCriteriaItem = ResActivityTeamOnlySearchCriteria::construct();
            searchCriteriaItem.addValue(ResBookingResourceSetting::ActivityTeamOnly);
            searchCriteria.setCriteriaItem(searchCriteriaItem);
            context.searchString(searchCriteria.getCriteriaString());

            AvailableResources.startDateTime(context.startDateTime());
            AvailableResources.endDateTime(context.endDateTime());
            AvailableResources.timescale(context.timescale());
            AvailableResources.controlContext(context);

            searchController = ResAvailabilityViewSearchController::newFromAvailabilityViewControl(AvailableResources);
            resourceCharacteristics = ResCharacteristicsController::createCharacteristics(searchController.searchCriteria());
            resourceCharacteristics.searchCriteriaReady += eventhandler(element.applyAdvancedSearchCriteria);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchForResources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for resources.
    /// </summary>
    public void searchForResources()
    {
        if (lastCriteria != SearchString.text())
        {
            lastCriteria = SearchString.text();
            searchController.searchByAnyCriteria(lastCriteria);
            searchController.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewSettingsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected view settings.
    /// </summary>
    /// <param name = "_viewSetting">View settings instance.</param>
    void viewSettingsReady(ResAvailabilityViewSetting _viewSetting)
    {
        context = AvailableResources.controlContext();
        boolean hasChanged;
        boolean needsRefresh;

        utcdatetime dateTime;
        dateTime = _viewSetting.startDateTime();
        if (context.startDateTime() != dateTime)
        {
            context.startDateTime(dateTime);
            AvailableResources.startDateTime(dateTime);
            StartDateTime.dateTimeValue(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        dateTime = _viewSetting.endDateTime();
        if (context.endDateTime() != dateTime)
        {
            context.endDateTime(dateTime);
            AvailableResources.endDateTime(dateTime);
            EndDateTime.dateTimeValue(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        AVTimeframeType timescale = _viewSetting.timescale();
        if (context.timescale() != timescale)
        {
            context.timescale(timescale);
            AvailableResources.timescale(timescale);
            hasChanged = true;
            needsRefresh = true;
        }

        boolean showContent = _viewSetting.showScheduleDescription();
        if (context.showScheduleDescription() != showContent)
        {
            context.showScheduleDescription(showContent);
            hasChanged = true;
        }

        showContent = _viewSetting.showScheduleCapacity();
        if (context.showRemainingCapacity() != showContent)
        {
            context.showRemainingCapacity(showContent);
            hasChanged = true;
        }

        ResCapacityAggregation aggregation = _viewSetting.capacityAggregation();
        if (context.capacityAggregation() != aggregation)
        {
            context.capacityAggregation(aggregation);
            hasChanged = true;
            needsRefresh = true;
        }

        if (hasChanged)
        {
            AvailableResources.controlContext(context);
        }

        if (needsRefresh)
        {
            AvailableResources.clearSelections();
            AvailableResources.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyAdvancedSearchCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply advanced resource search criteria.
    /// </summary>
    void applyAdvancedSearchCriteria()
    {
        searchController.searchCriteria(resourceCharacteristics.searchCriteria());
        searchController.searchByAnyCriteria(SearchString.text());
        element.applyTeamMembersOnly(ShowTeamMembersOnly.checked());
        searchController.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyTeamMembersOnly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies team member only search criteria.
    /// </summary>
    /// <param name = "_showTeamMembersOnly">Flag that determines when to apply team member only search criteria.</param>
    void applyTeamMembersOnly(boolean _showTeamMembersOnly)
    {
        ResBookingResourceSetting resourceSetting = _showTeamMembersOnly
                ? ResBookingResourceSetting::ActivityTeamOnly
                : ResBookingResourceSetting::AllResources;
        searchController.searchByTeamMembersOnly(resourceSetting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowButton</Name>
				<Source><![CDATA[
    private void setWorkflowButton()
    {
        if (requestWorkflowEnabled)
        {
            WorkflowCreate.enabled(
                ResResourceReservationDetails::allowWorkflowCreateSelected(ReservationDetails_ds, engagementIDName));
            RequestLineWorkflowDropDialog.enabled(!ResResourceReservationDetails::areMultipleRecordsSelected(ReservationDetails_ds));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUserSelectedRequestLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set user selected <c>ResRequestLine</c> map with ResRequestLine.Hour as key,
    /// and container as value which has [ResRequestLine.RecId, resource rec ID, activity resource rec ID].
    /// </summary>
    /// <param name = "_selectedRequestLineMap">User selected <c>ResRequestLine</c> map.</param>
    /// <returns>User selected <c>ResRequestLine</c> map.</returns>
    public Map getUserSelectedRequestLines(Map _selectedRequestLinesMap = selectedRequestLinesMap)
    {
        selectedRequestLinesMap = _selectedRequestLinesMap;
        return selectedRequestLinesMap;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ReservationDetails</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// To Enable/Disable confirm and cancel buttons for selected record.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;

            ret = super();

            boolean currentEngagementSelected = ResResourceReservationDetails::isOnlyCurrentEngagementSelected(ReservationDetails_ds, engagementIDName);

            Confirm.enabled(currentEngagementSelected);

            if (!requestWorkflowEnabled)
            {
                Cancel.enabled(currentEngagementSelected);
            }
            else
            {
                Cancel.enabled(currentEngagementSelected && !ResResourceReservationDetails::isWorkflowRecordSelected(ReservationDetails_ds));
                ResRequestLine_DS.executeQuery();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ResRequestLine</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes query for resource request lines.
        /// </summary>
        public void executeQuery()
        {
            Map userRequestLinesSelectionMap = new Map(Types::UtcDateTime, Types::Class);
            RefRecId earliestResRequestLineRecId = ResResourceReservationDetails::getEarliestRequestLine(ReservationDetails, userRequestLinesSelectionMap);
            element.getUserSelectedRequestLines(userRequestLinesSelectionMap);

            QueryBuildDataSource dataSource = this.query().dataSourceTable(tableNum(ResRequestLine));
            dataSource.clearRanges();
            SysQuery::findOrCreateRange(dataSource, fieldnum(ResRequestLine, RecId)).value(queryValue(earliestResRequestLineRecId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override data source ResReqestLine active method to update workflow buttons setting.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;

            ret = super();
            element.setWorkflowButton();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SoftBookRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book hours of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResouRceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book hours of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();

            ResActivityResourceBookingDataController dataController =
                ResActivityResourceBookingDataController::construct(AvailableResources);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearSelections</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clear all control selections.
        /// </summary>
        public void clicked()
        {
            super();
            AvailableResources.clearSelections();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Synchronize</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Synchronize activity resource booking view.
        /// </summary>
        public void clicked()
        {
            super();
            if (previousSelections)
            {
                int selectedRecord = ReservationDetails_ds.getPosition();
                AvailableResources.selections(previousSelections);
                ReservationDetails_ds.setPosition(selectedRecord);
            }
            AvailableResources.clearSelections();
            AvailableResources.refreshAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenViewSettings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens activity resource booking view settings form.
        /// </summary>
        public void clicked()
        {
            super();

            ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
            context = AvailableResources.controlContext();
            context.startDateTime(StartDateTime.dateTimeValue());
            context.endDateTime(EndDateTime.dateTimeValue());
            viewSetting.startDateTime(context.startDateTime());
            viewSetting.endDateTime(context.endDateTime());
            viewSetting.timescale(context.timescale());

            viewSetting.capacityToggleDescription("@SYS4008832");
            viewSetting.showScheduleCapacity(context.showRemainingCapacity());
            viewSetting.showScheduleDescription(context.showScheduleDescription());
            viewSetting.capacityAggregation(context.capacityAggregation());

            viewSetting.coverage(ResUserSettingCoverage::ResourceBookingView);
            viewSetting.selectionsReady += eventhandler(element.viewSettingsReady);
            viewSetting.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Search resources with the specified criteria.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                AvailableResources.clearSelections();
                element.searchForResources();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Search</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Search resources with the specified criteria.
        /// </summary>
        public void clicked()
        {
            super();
            AvailableResources.clearSelections();
            element.searchForResources();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdvancedSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Search resources with advanced search criteria.
        /// </summary>
        public void clicked()
        {
            super();
            AvailableResources.clearSelections();
            resourceCharacteristics.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowTeamMembersOnly</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Toggles display of company resources.
        /// </summary>
        public void clicked()
        {
            super();

            AvailableResources.clearSelections();
            element.applyTeamMembersOnly(this.checked());
            searchController.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AvailableResources</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>startDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust start date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">Start date/time string.</param>
        /// <returns>Start date/time value string.</returns>
        public str startDateTimeStr(str _value = AVUtil::getDateTimeStr(StartDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            StartDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>endDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust end date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">End date/time string.</param>
        /// <returns>End date/time value string.</returns>
        public str endDateTimeStr(str _value = AVUtil::getDateTimeStr(EndDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            EndDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selections</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update resource reservation details grid upon user updating chart item selection.
        /// </summary>
        /// <param name = "_selections">Chart item selections.</param>
        /// <returns>Chart item selections.</returns>
        public AvailabilityViewSelections selections(AvailabilityViewSelections _selections)
        {
            AvailabilityViewSelections avSelections = super (_selections);
            boolean isStaffedResourceSelected;
            boolean isPlannedResourceSelected;
            [isStaffedResourceSelected, isPlannedResourceSelected]  =
                ResResourceReservationDetails::updateReservationDetailsTable(
                _selections, context.timescale(), ReservationDetails, ReservationDetails_ds);

            // If worklow is enabled and if user has selected any staffed resource, then disable hard book menu.
            if (requestWorkflowEnabled)
            {
                HardBookMenu.enabled(!isStaffedResourceSelected && isPlannedResourceSelected);
            }
            else
            {
                HardBookMenu.enabled(true);
            }
            SoftBookMenu.enabled(isStaffedResourceSelected && !isPlannedResourceSelected);
            previousSelections = _selections;
            return avSelections;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Cancel resource reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();

            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(AvailableResources);
            resourceReservation.cancelOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Confirm</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Confirm resource soft reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();

            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(AvailableResources);
            resourceReservation.confirmOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WorkflowCreate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Create and submit resource request.
        /// </summary>
        public void clicked()
        {
            super();
            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(AvailableResources);
            resourceReservation.createAndSubmitResourceRequestV2(ReservationDetails_ds, previousSelections, this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ReservationDetails</Name>
			<Table>ResTmpResourceReservationDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementIDName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationDetailsType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservedHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ResRequestLine</Name>
			<Table>ResRequestLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssignedResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Day</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>End</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HalfYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Month</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalRequestedResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quarter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Request</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Start</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Week</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ReservationDetails</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:ProjectTeamBookings</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Execute</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>SoftBookMenu</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612731</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS4008817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>HardBookMenu</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS4008806</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ClearSelections</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>ClearSelection</NormalImage>
								<Text>@Res:ClearSelections</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Synchronize</Name>
								<HelpText>@Res:SynchronizeResourceAvailability</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Sync</NormalImage>
								<Text>@Res:ResourceGridRefresh</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenViewSettings</Name>
								<HelpText>@Res:ViewSettingsHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>View</NormalImage>
								<Text>@Res:ViewSettings</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>ActivityResources</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ActivityResource</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SearchControls</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SearchString</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>Name</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Search</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>Find</NormalImage>
										<Text>Search</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>AdvancedSearch</Name>
										<Type>Button</Type>
										<Width>64</Width>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>More</NormalImage>
										<Text>Advanced</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ShowTeamMembersOnly</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:ShowTeamMembersOnly</Label>
										<Value>1</Value>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>StartDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Proj:StartDate</Label>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>EndDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Proj:EndDate</Label>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Legend</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>AvailableIcon</Name>
										<ExtendedStyle>image_Available</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PartiallyAvailableIcon</Name>
										<ExtendedStyle>image_PartiallyAvailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendPartiallyAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>PartiallyAvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendPartiallyAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>BookedIcon</Name>
										<ExtendedStyle>image_Booked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendBooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendBooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>OverbookedIcon</Name>
										<ExtendedStyle>image_Overbooked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendOverbooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>OverbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendOverbooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>UnavailableIcon</Name>
										<ExtendedStyle>image_Unavailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendUnavailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnavailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendUnavailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>SoftbookedIcon</Name>
										<ExtendedStyle>image_gridIcon</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftReservedOrRequested</Label>
										<NormalImage>Tag</NormalImage>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>SoftbookedLabel</Name>
										<Height>10</Height>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<Width>10</Width>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:SoftReservedOrRequested</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
							<AxFormControl>
								<Name>AvailableResources</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>AvailabilityView</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Collection</Name>
											<ComponentType>AvailabilityViewBuildCollection</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>CollectionTemplates</TypeName>
													<Value>FlatList</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>Title</Name>
													<Type>String</Type>
													<Value>@Res:Resources</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthMode</Name>
													<Type>Enum</Type>
													<TypeName>FormWidth</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ResourceCard</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>True</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rows</Name>
													<Type>Int32</Type>
													<Value>20</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>CollectionFields</Name>
											<ExtensionComponents>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Name</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Name</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Role</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Company</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
											</ExtensionComponents>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Timeline</Name>
											<ComponentType>AvailabilityViewBuildTimeline</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>TimelineTemplates</TypeName>
													<Value>PointInTime</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightMode</Name>
													<Type>Enum</Type>
													<TypeName>FormHeight</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>TimeframeHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>None</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>timelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>True</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>columns</Name>
													<Type>Int32</Type>
													<Value>5</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>TimelineFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Chart</Name>
											<ComponentType>AvailabilityViewBuildChart</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>ChartTemplates</TypeName>
													<Value>Buckets</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ReservationCardHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>ChartFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>DataController</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
											<Value>ResActivityResourceBookingDataController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>Timescale</Name>
											<Type>Enum</Type>
											<TypeName>AVTimeframeType</TypeName>
											<Value>Week</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Res:ResourceBooking</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReservationDetailsTabPageControl</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>Toolbar</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ToolbarButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Cancel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Release</NormalImage>
												<Text>@Res:CancelReservations</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Confirm</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>OK</NormalImage>
												<Text>@SYS4001382</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>WorkflowCreate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@Res:CreateRequest</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDropDialogButtonControl">
												<Name>RequestLineWorkflowDropDialog</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>DropDialogButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>ResRequestLine</DataSource>
												<MenuItemName>ResWorkflowLineDropDialogDisplayMenu</MenuItemName>
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ReservationGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ResourceName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ResourceName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_EngagementIDName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementIDName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReservationDetails_EngagementType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementType</DataField>
										<DataSource>ReservationDetails</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_TaskName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaskName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_StartTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_EndTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ReservationType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservationType</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservationDetails_ReservedHours</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservedHours</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ReservationDetails</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Res:ReservationDetails</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>