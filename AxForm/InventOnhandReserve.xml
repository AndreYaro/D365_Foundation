<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventOnhandReserve</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class InventOnhandReserve extends FormRun implements IFormRefreshable
{
    InventDimCtrl_Frm_OnhandReserve inventDimFormSetup;
    InventOnhandReserve             inventOnhandReserve;

    boolean                         formInInit;

    QueryBuildRange                 rangeRecId;

    InventDimParm                   inventDimParmActive;
    boolean                         parmActiveIsOk;
    [FormObservable]
    UnitOfMeasureSymbol             unitIdInvent;
    [FormObservable]
    UnitOfMeasureSymbol             unitIdSecondary;

    InventDimParm                   inventDimParm;
    InventDimFixed                  inventDimFixed;

    date                            checkDate;
    PdsOverrideFEFO                 overrideFEFO;

    boolean                         interCompanyMarkingAllowed;
    [FormObservable]
    boolean                         reserveOnOrdered;
    boolean                         doNotExecuteInventSumQuery;

    InventCostPriceCache            inventCostPriceCache;

    InventTransId                   callingTransiD;

    FormObservableLink              reservationObservable = new FormObservableLink();

}
]]></Source>
			</Method>
			<Method>
				<Name>applyUnitID</Name>
				<Source><![CDATA[
    public void applyUnitID(
        boolean _reportMissingUnitToInfolog = true
        )
    {
        UnitOfMeasureSymbol tempUnitID;

        // If we don't have an item, then units don't matter
        if (!inventSum.ItemId)
        {
            return;
        }

        boolean allowEditUnit;
        [tempUnitID, allowEditUnit] = InventOnhand::inventModuleUnitsSelectionToUnitIdAllowEdit(unitsComboBox.selection(), inventSum.ItemId, unitIdSecondary);
        ctrlUnitId.allowEdit(allowEditUnit);

        // Units may be empty, if so fall back to inventory units
        if (!tempUnitID)
        {
            unitsComboBox.selection(InventModuleUnits::InventoryUnit);
            tempUnitID = unitIdInvent;
            if (_reportMissingUnitToInfolog)
            {
                info("@SYS113267");
            }
        }

        // Apply new unit
        element.unitId(true, tempUnitID);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerRefresh</Name>
				<Source><![CDATA[
    public void callerRefresh()
    {
        Object  caller = element.args().caller();

        if (caller is FormRun)
        {
            switch (caller.name())
            {
                case formStr(InventTransPick):
                    if (formHasMethod(caller, formMethodStr(InventTransPick, doResearch)))
                    {
                        caller.doResearch();
                    }
                    break;

                case formStr(InventTransOnOrder):
                    if (formHasMethod(caller, formMethodStr(InventTransOnOrder, doResearch)))
                    {
                        caller.doResearch();
                    }
                    break;

                case formStr(SalesTable):
                    if (formHasMethod(caller, formMethodStr(SalesTable, doRefresh)))
                    {
                        caller.doRefresh(true);
                    }
                    break;

                case formStr(InventTransferOrders):
                    if (formHasMethod(caller, formMethodStr(InventTransferOrders, doRefresh)))
                    {
                        caller.doRefresh();
                    }
                    break;

                case formStr(WMSPickingRegistration):
                    if (formHasMethod(caller, formMethodStr(WMSPickingRegistration, doRefresh)))
                    {
                        doNotExecuteInventSumQuery = true;
                        caller.doRefresh();
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        // We don't want to update the caller if closeCancel was called
        if (!element.closedCancel())
        {
            inventOnhandReserve.callerRefresh();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doActiveButtons</Name>
				<Source><![CDATA[
    public void doActiveButtons()
    {
        InventQty   qtyOnOrder;

        qtyOnOrder = inventTransOriginMovement_ds.movementOnOrderUnit(inventTransOriginMovement);

        reserveLot.enabled(qtyOnOrder  != 0);
        reserveLine.enabled(qtyOnOrder != 0 &&
                        inventsum.availReservation(InventParameters::find().ReserveOnOrdered) > 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>docCursor</Name>
				<Source><![CDATA[
    public Common docCursor()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doRefresh</Name>
				<Source><![CDATA[
    public void doRefresh()
    {
        element.doResearch();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editInventDimParmFixedField</Name>
				<Source><![CDATA[
    public NoYesId editInventDimParmFixedField(
        FieldId     _inventDimFieldId,
        boolean     _set,
        InventTrans _inventTrans,
        NoYesId     _inventDimFieldIdFlag)
    {
        FieldId inventDimParmFieldId    = InventDim::dim2dimParm(_inventDimFieldId);

        if (inventDimFixed != _inventTrans.InventDimFixed)
        {
            InventDimFixedClass::inventDimFixed2InventDimParm(_inventTrans.InventDimFixed, inventDimParm);
        }

        inventDimFixed = _inventTrans.InventDimFixed;

        if (_set)
        {
            inventDimParm.(inventDimParmFieldId) = _inventDimFieldIdFlag;
            inventDimFixed = InventDimFixedClass::inventDimParm2InventDimFixed(inventDimParm);

            element.inventDimSetupObject().modifyInventDimFixed(inventTransInventDimFixed, inventDim, inventDimFixed, _inventDimFieldId);

            inventTransInventDimFixed_ds.executeQuery();
        }

        return inventDimParm.(inventDimParmFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        formInInit = true;

        inventOnhandReserve = InventOnhandReserve::newFromFormRun(this);

        super();

        element.updateDesign(InventDimFormDesignUpdate::Init);

        element.updateCWDesign();

        formInInit = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeUnits</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes units of measure from the related movement.
    /// </summary>
    public void initializeUnits()
    {
        InventMovement movement;

        movement = element.inventDimSetupObject().movement();
        if (movement)
        {
            unitIdInvent = movement.inventTable().inventTableModuleInvent().UnitId;
            unitIdSecondary = movement.transUnitId();
            if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(movement.itemId(),
                                                                                              movement.inventDimId(),
                                                                                              unitIdInvent,
                                                                                              unitIdSecondary))
            {
                unitIdSecondary = unitIdInvent;
            }

            if (unitIdInvent != unitIdSecondary)
            {
                unitsComboBox.selection(InventModuleUnits::None);
                ctrlUnitId.allowEdit(true);
            }

            inventOnhandReserve.parmSourceUnitId(unitIdInvent);
            inventOnhandReserve.parmTargetUnitId(unitIdSecondary);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimParmActive</Name>
				<Source><![CDATA[
    public InventDimParm inventDimParmActive()
    {
        if (! parmActiveIsOk && inventDimFormSetup.movement())
        {
            inventDimFormSetup.movement().inventDimGroupSetup().inventDimParmActive(inventDimParmActive);
            parmActiveIsOk = true;
        }

        return inventDimParmActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public InventDimCtrl_Frm_OnhandReserve inventDimSetupObject()
    {
        if (!inventDimFormSetup)
        {
            inventDimFormSetup  = InventDimCtrl_Frm_OnhandReserve::newFromForm(element);
            inventDimFormSetup.parmLargeRightClickForm(NoYes::Yes);
            inventOnhandReserve.parmInventDimFormSetup(inventDimFormSetup);
        }
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>otherUnit</Name>
				<Source><![CDATA[
    // Used by unit lookup form
    public UnitOfMeasureSymbol otherUnit()
    {
        return unitIdInvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsShow</Name>
				<Source><![CDATA[
    public void pdsShow(boolean _inventBatchVisible)
    {
        pdsDispositionCode.visible(_inventBatchVisible);
        pdsDispositionStatus.visible(_inventBatchVisible);

        pdsBestBeforeDate.visible(_inventBatchVisible);
        pdsExpDate.visible(_inventBatchVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshMovement</Name>
				<Source><![CDATA[
    public void refreshMovement()
    {
        inventOnhandReserve.parmTransSumBuffer().reset();
        inventTransOriginMovement_ds.reread();
        inventTransOriginMovement_ds.refresh();
        inventTransInventDimFixed_ds.reread();
        inventTransInventDimFixed_ds.refresh();
        element.doActiveButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rightClickModifyQuery</Name>
				<Source><![CDATA[
    public void rightClickModifyQuery()
    {
        InventDimParm   tmpInventDimParm;

        inventSum_DS.executeQuery();

        tmpInventDimParm = element.inventDimSetupObject().parmDimParmVisibleGrid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        Args            args;
        MenuFunction    menuFunction;
        InventMovement  movement;

        movement = inventDimFormSetup.movement();
        if (movement && WHSInventEnabled::exist(movement.itemId()))
        {
            // If we are showing reservations for a WHS item, open a different dedicated form instead, and close this one.
            args = new Args();
            args.record(element.args().record());
            args.caller(element.args().caller());
            menuFunction = new MenuFunction(menuitemDisplayStr(WHSInventOnHandReserve), MenuItemType::Display);
            menuFunction.run(args);

            this.closeCancel();
        }
        else
        {
            super();
            reserveNow.setFocus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedItemId</Name>
				<Source><![CDATA[
    // Used by unit lookup form
    public ItemId selectedItemId()
    {
        return inventSum.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitId</Name>
				<Source><![CDATA[
    public edit UnitOfMeasureSymbol unitId(boolean _set, UnitOfMeasureSymbol _unitID)
    {
        UnitOfMeasure   unitOfMeasure;

        if (_set)
        {
            unitOfMeasure   = UnitOfMeasure::findBySymbol(_unitID);

            if (!unitOfMeasure.RecId)
            {
                checkFailed(strFmt("@SYS316757", tablePName(UnitOfMeasure)));
            }
            else if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(inventDimFormSetup.movement().itemId(),
                                                                                                   inventDimFormSetup.movement().inventDimId(),
                                                                                                   unitIdInvent,
                                                                                                   _unitID))
            {
                checkFailed(strFmt("@SYS28690", unitIdInvent, _unitID));
            }
            else
            {
                unitIdSecondary = _unitID;
                inventOnhandReserve.parmTargetUnitId(unitIdSecondary);
                inventSum_ds.refresh();
                reservationObservable.markChanged();
            }
        }
        return unitIdSecondary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCWDesign</Name>
				<Source><![CDATA[
    public void updateCWDesign()
    {
        boolean isCwItem = PdsGlobal::pdsIsCWItem(InventSum.ItemId);

        // Unit of measure section
        PdsCWUnitId.visible(isCwItem);
        PdsCWReservPhysicalLot.visible(isCwItem);
        PdsCWReservOrderedLot.visible(isCwItem);
        PdsCWOnOrderLot.visible(isCwItem);

        // Overview section
        groupNonCatchWeightGrid.visible(!isCwItem);
        groupCatchWeightGrid.visible(isCwItem);
        groupNonCatchWeight.visible(isCwItem);
        pdsCWReserveNow.visible(isCwItem);
        reserveNow.visible(!isCwItem);

        // Locked dimensions section
        PdsCWQty.visible(isCwItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm           tmpInventDimParm;
        InventMovement          movement;
        InventQty               reserveNowQty;
        InventQtyOnOrder        onOrderQty;
        boolean                 allowEditReserveNow;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init          :
                element.inventDimSetupObject().initFromCaller();
                element.inventDimSetupObject().parmCtrlItemId(inventSum_ItemId);

                if (!formInInit)
                {
                }

                tmpInventDimParm = element.inventDimSetupObject().parmDimParmVisibleGrid();

                movement = element.inventDimSetupObject().movement();
                if (!movement || !movement.canReservationFormBeShown())
                {
                    element.close();
                    warning("@SYS137272");
                    return;
                }

                element.inventDimSetupObject().formActiveSetup();
                element.inventDimSetupObject().formSetControls(false,true);

                if (!formInInit)
                {
                }

                reserveOnOrdered = InventParameters::find().ReserveOnOrdered;
                break;

            case InventDimFormDesignUpdate::LinkActive    :
                element.inventDimSetupObject().initFromCaller();

                if (!formInInit)
                {
                }

                movement = element.inventDimSetupObject().movement();
                if (!movement || !movement.canReservationFormBeShown())
                {
                    element.close();
                    warning("@SYS137272");
                    return;
                }

                this.initializeUnits();

                element.updateInventDimFixedControls(movement.inventDimGroupSetup());

                element.inventDimSetupObject().formActiveSetup();
                element.inventDimSetupObject().formSetControls(false,true);

                if (!formInInit)
                {
                }

                if (element.args()
                &&  element.args().record())
                {
                    interCompanyMarkingAllowed = TradeInterCompany::markingAllowed(element.args().record());
                    if (!interCompanyMarkingAllowed)
                    {
                        warning("@SYS94314");
                    }
                }
                else
                {
                    interCompanyMarkingAllowed = true;
                }
                inventSum_ds.                allowEdit(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());
                inventDim_ds.                allowEdit(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());
                inventTransOriginMovement_ds.allowEdit(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());
                inventTransInventDimFixed_ds.allowEdit(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());
                ReserveLot.enabled(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());
                ReserveLine.enabled(interCompanyMarkingAllowed && movement.canReservationFormBeEdited());

                break;
            case InventDimFormDesignUpdate::Active:
                //allow editing of reserveNow field only if sth is on order (On Order is < 0) OR
                //reservation has already been made (reserveNow > 0).
                onOrderQty          = inventOnhandReserve.movementOnOrderInvent();
                reserveNowQty       = inventSum_ds.reserveNow(false, inventSum, 0);
                allowEditReserveNow = reserveNowQty > 0 || onOrderQty < 0;
                reserveNow.allowEdit(allowEditReserveNow);
                break;
            default : throw error(strfmt("@SYS54195",funcname()));
        }

        if (!interCompanyMarkingAllowed)
        {
            inventSum_ds.                allowEdit(false);
            inventDim_ds.                allowEdit(false);
            InventTransOriginMovement_ds.allowEdit(false);
            InventTransOrigin_ds.        allowEdit(false);
            inventTransInventDimFixed_ds.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventDimFixedControls</Name>
				<Source><![CDATA[
    public void updateInventDimFixedControls(InventDimGroupSetup _inventDimGroupSetup)
    {
        InventDimParm   localInventDimParm;

        #InventDimDevelop

        _inventDimGroupSetup.inventDimParmPrimaryNotProductDim(localInventDimParm);

        inventSiteIdFlag.enabled(!localInventDimParm.InventSiteIdFlag);
        inventLocationIdFlag.enabled(!localInventDimParm.InventLocationIdFlag);
        inventBatchIdFlag.enabled(!localInventDimParm.InventBatchIdFlag);
        wmsLocationIdFlag.enabled(!localInventDimParm.wmsLocationIdFlag);
        inventSerialIdFlag.enabled(!localInventDimParm.InventSerialIdFlag);
        // <GEERU>
        inventGTDIdFlag_RU.enabled(!localInventDimParm.InventGTDIdFlag_RU);
        inventProfileIdFlag_RU.enabled(!localInventDimParm.InventProfileIdFlag_RU);
        inventOwnerIdFlag_RU.enabled(!localInventDimParm.InventOwnerIdFlag_RU);
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckExpiryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if expiry date must be checked.
    /// </summary>
    /// <returns>true if expiry date must be checked; otherwise, false.</returns>
    protected boolean mustCheckExpiryDate()
    {
        return #PdsShelfEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateShowTransactions</Name>
				<Source><![CDATA[
    public void updateShowTransactions()
    {
        inventTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustReserveQuantity</Name>
				<Source><![CDATA[
	/// <summary>
    ///		Determines whether the quantity must be reserved in the secondary unit.
    /// </summary>
    /// <param name="_set">
    ///    true if the quantity passed in <paramref name="_reserveNow" /> is reserved; otherwise, false.
    /// </param>
    /// <param name="_inventSum">
    ///    An <c>InventSum</c> record required to determine the quantity reserved.
    /// </param>
    /// <param name="_reserveNow">
    ///    The quantity that is reserved in the secondary unit.
    /// </param>
    /// <returns>
    ///		true, if the the quantity must be reserved in the secondary unit; otherwise, false.
	/// </returns>
    protected boolean mustReserveQuantity(boolean _set, InventSum _inventSum, InventQty _reserveNow)
    {
        boolean                     ret = true;
        Common                      common = element.args().record();
        CustAccount                 custId;

        if (inventSum.inventTable().isItemBatchActivated())
        {
            if (_set && _reserveNow != 0.00 && #PdsShelfEnabled)
            {
                switch (common.TableId)
                {
                    case tableNum(SalesLine) :
                        custId = common.(fieldNum(SalesLine,CustAccount));
                        break;
                    case tableNum(SalesParmLine) :
                        custId = common.(fieldNum(SalesParmLine,CustAccount));
                        break;
                    default:
                        custId = '';
                }

                ret = InventBatch::pdsCheckExpiryDate(inventDim.InventBatchId,
														  _inventSum.ItemId,
														  checkDate,
														  true,
														  custId,
														  overrideFEFO,
														  inventDim);

                if (ret)
                {
                    ret = inventSum_ds.validateBatchReserve();
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventSum</Name>
				<Methods>
					<Method>
						<Name>validateBatchReserve</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates that the batch of the <c>InventSum</c> record is available for reservation.
        /// </summary>
        /// <returns>
        /// true if the batch can be reserved; otherwise, false.
        /// </returns>
        public boolean validateBatchReserve()
        {
            PdsBatchDispCheck_Reserve   pdsCheckReserve;
            InventTrans                 localInventTrans;
            boolean                     ret;

            // Init InventTrans from InventSum and use as basis for batch validation
            localInventTrans.ItemId = inventSum.ItemId;
            localInventTrans.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

            pdsCheckReserve = PdsBatchDispCheck_Reserve::construct();
            ret = pdsCheckReserve.validateTransCheck(localInventTrans,
                                                     element.args().record());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>availReservationUnit</Name>
						<Source><![CDATA[
        public display InventQtyAvailReservation availReservationUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.availReservation(reserveOnOrdered), unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // do nothing
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            unitIdSecondary = '';
            element.updateDesign(InventDimFormDesignUpdate::LinkActive);

            super();

            element.updateCWDesign();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initQueryInventSum(inventSum_DS);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (doNotExecuteInventSumQuery)
            {
                doNotExecuteInventSumQuery = false;
                return;
            }

            element.inventDimSetupObject().modifyQuery(inventSum_DS,inventDim_DS);

            super();

            element.initializeUnits();
            element.applyUnitID(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.doActiveButtons();
            element.updateDesign(InventDimFormDesignUpdate::Active);

            inventTransInventDimFixed_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedQtyUnit</Name>
						<Source><![CDATA[
        public display InventQtyPosted  postedQtyUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.PostedQty, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>orderedUnit</Name>
						<Source><![CDATA[
        public display InventQtyOrdered  orderedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Ordered, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>deductedUnit</Name>
						<Source><![CDATA[
        public display InventQtyDeducted  deductedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Deducted, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pickedUnit</Name>
						<Source><![CDATA[
        public display InventQtyPicked  pickedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Picked, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>receivedUnit</Name>
						<Source><![CDATA[
        public display InventQtyReceived  receivedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Received, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>registeredUnit</Name>
						<Source><![CDATA[
        public display InventQtyRegistered  registeredUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Registered, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availPhysicalUnit</Name>
						<Source><![CDATA[
        public display InventQtyAvailPhysical availPhysicalUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.availPhysicalCalculated(), unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>arrivedUnit</Name>
						<Source><![CDATA[
        public display InventQtyArrived  arrivedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.Arrived, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>reservOrderedUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservOrdered reservOrderedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.ReservOrdered, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>onOrderUnit</Name>
						<Source><![CDATA[
        public display InventQtyOnOrder onOrderUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.OnOrder, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>quotationReceiptUnit</Name>
						<Source><![CDATA[
        public display InventQtyQuotationReceipt quotationReceiptUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.QuotationReceipt, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>quotationIssueUnit</Name>
						<Source><![CDATA[
        public display InventQtyQuotationIssue quotationIssueUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.QuotationIssue, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>physicalInventUnit</Name>
						<Source><![CDATA[
        public display InventQtyPhysicalOnhand physicalInventUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.physicalInventCalculated(), unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>reservPhysicalUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservPhysical reservPhysicalUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.ReservPhysical, unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>orderedSumUnit</Name>
						<Source><![CDATA[
        public display inventQtyOrderedSum  orderedSumUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.orderedSum(), unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availOrderedUnit</Name>
						<Source><![CDATA[
        public display InventQtyAvailOrdered availOrderedUnit(InventSum _inventSum)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventSum.availOrderedCalculated(), unitIdInvent, unitIdSecondary, _inventSum.ItemId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>reserveNow</Name>
						<Source><![CDATA[
        public edit InventQty  reserveNow(boolean set, InventSum   _inventSum, InventQty  _reserveNow)
        {
            InventQty retInventQty;

            if (set && PdsGlobal::pdsIsCWItem(_inventSum.ItemId))
            {
                throw error("@PDS123");
            }

            if (element.mustReserveQuantity(set, _inventSum, _reserveNow))
            {
                retInventQty = inventOnhandReserve.reserveNow(set, _inventSum, _reserveNow, _inventSum.joinChild());

                if (set)
                {
                    inventSum_ds.reread();
                    element.refreshMovement();
                    element.callerRefresh();
                    reservationObservable.markChanged();
                }
            }
            else
            {
                retInventQty = _reserveNow;
            }

            return retInventQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>averageCostPrice</Name>
						<Source><![CDATA[
        display CostPriceAverage  averageCostPrice(InventSum _inventSum)
        {
            InventDim dim;

            // Fields might not have been selected on the specified buffers, or might have been updated since selection
            _inventSum.checkInvalidFieldAccess(false);

            if (!_inventSum.InventDimId)
            {
                dim = InventDim::findDim(inventDim);
                if (dim.InventDimId)
                {
                    _inventSum.InventDimId = dim.InventDimId;
                }
            }

            if (!inventCostPriceCache)
            {
                inventCostPriceCache = InventCostPriceCache::construct();
                inventCostPriceCache.parmOnhandOnly(true);
            }

            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_inventSum.ItemId,
                                                                                         _inventSum.InventDimId,
                                                                                         inventCostPriceCache.costPricePcs(_inventSum),
                                                                                         unitIdSecondary,
                                                                                         unitIdInvent,
                                                                                         NoYes::Yes,
                                                                                         NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWReserveNow</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines the catch weight amount that may be or needs to reserves and validates Shelf life and Disposition information of the qty to be
        /// reserved and than calls the PDSCW_InventOnhandReserve class if all validations are passed.
        /// </summary>
        /// <param name="_set">
        /// Continue with processing request otherwise return amount already reserved
        /// </param>
        /// <param name="_inventSum">
        /// Current or selected inventSum record
        /// </param>
        /// <param name="_cwReserveNow">
        /// Catch wieght qty that is to be reserved
        /// </param>
        /// <returns>
        /// Catch weight qty that was reserved
        /// </returns>
        /// <remarks>
        /// Determines the catch weight amount that may be or needs to reserves and validates Shelf life and Disposition information of the qty to be
        /// reserved and than calls the PDSCW_InventOnhandReserve class if all validations are passed.
        /// </remarks>
        public edit PdsCWInventQty pdsCWReserveNow(
            boolean         _set,
            InventSum       _inventSum,
            PdsCWInventQty  _cwReserveNow)
        {
            InventQty                   qty;
            InventQty                   preReserv;
            PdsCWInventQty              cwPreReserv;
            PdsCWInventQty              cwQty = _cwReserveNow;
            InventOnhandReserve         cwInventOnhandReserve;
            boolean                     reserveSerialNum = false;
            InventMovement              inventMov;
            PdsCWInventQty              ret;
            InventDimParm               lclInventDimParm;
            InventDim                   lclInventDim;
            boolean                     allow = true;
            InventDim                   sameLotInventDim;
            CustAccount                 custId;
            Common                      common = element.args().record();
            PmfQtyDataCarrier           qtyDataCarrier;

            cwInventOnhandReserve = inventOnhandReserve;
            if (!_set)
            {
                return cwInventOnhandReserve.pdsCWReserveNow(false,_inventSum,0,0);
            }

            inventMov = inventTransOriginMovement.inventMovement();
            lclInventDimParm = inventDimFormSetup.parmDimParmVisibleGrid().data();
            lclInventDim.data(inventDim);

            preReserv = cwInventOnhandReserve.onhandReservedInvent(inventMov, lclInventDim, lclInventDimParm);
            cwPreReserv = cwInventOnhandReserve.pdsCWOnhandReserved(inventMov, lclInventDim, lclInventDimParm);

            //
            // determine, what we can allocate
            //
            cwQty = min(
                _cwReserveNow,
                _inventSum.pdsCWAvailReservation(InventParameters::find().ReserveOnOrdered) + cwPreReserv);
            //
            // determine, what we have to allocate
            //

            sameLotInventDim.data(_inventSum.joinChild());
            qtyDataCarrier = cwInventOnhandReserve.pdsCheckSameLotQuantities(sameLotInventDim, 0, cwQty);
            if (!qtyDataCarrier)
            {
                return _cwReserveNow;
            }
            cwQty = qtyDataCarrier.parmCwQty();

            //
            // if this is a single serial number, we allocate
            // all available inventory
            //
            if (lclInventDim.InventSerialId
                && (_inventSum.PdsCWPhysicalInvent == 1)
                && cwQty)
            {
                qty = _inventSum.availPhysicalCalculated();
                reserveSerialNum = true;
            }
            else
            {
                qty = PdsCatchWeight::minInventQty(_inventSum.ItemId,cwQty);
            }

            if (_inventSum.inventTable().isItemBatchActivated())
            {
                if (_set && _cwReserveNow != 0.00 && #PdsShelfEnabled)
                {
                    switch (common.TableId)
                    {
                        case tableNum(SalesLine) :
                            custId = common.(fieldNum(SalesLine,CustAccount));
                            break;
                        case tableNum(SalesParmLine) :
                            custId = common.(fieldNum(SalesParmLine,CustAccount));
                            break;
                        default:
                            custId = '';
                    }

                    allow = InventBatch::pdsCheckExpiryDate(inventDim.InventBatchId,
                                                            inventSum.ItemId,
                                                            checkDate,
                                                            true,
                                                            custId,
                                                            overrideFEFO,
                                                            inventDim);
                }

                if (allow)
                {
                    allow = inventSum_ds.validateBatchReserve();
                }
            }

            if (allow)
            {
                ret = cwInventOnhandReserve.pdsCWReserveNow(
                                                _set,
                                                _inventSum,
                                                qty,
                                                cwQty,
                                                reserveSerialNum);
            }
            else
            {
                ret = _cwReserveNow;
            }

            inventSum_ds.reread();
            inventSum_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsDispositionCode</Name>
						<Source><![CDATA[
        public display PdsBatchDispositionCode pdsDispositionCode(InventSum _inventSum)
        {
            InventDim               pdsInventDim;
            PdsBatchDispositionCode dispositionCode = '';

            if (hasFieldAccess(tableNum(InventBatch),fieldNum(InventBatch,PdsDispositionCode),AccessType::View))
            {
                pdsInventDim = _inventSum.joinChild();

                if (pdsInventDim.InventBatchId)
                {
                    dispositionCode = InventBatch::find(pdsInventDim.InventBatchId, _inventSum.ItemId).PdsDispositionCode;
                }
            }

            return dispositionCode;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsDispositionStatus</Name>
						<Source><![CDATA[
        public display PdsBatchDispositionStatus pdsDispositionStatus(InventSum _inventSum)
        {
            InventDim                           pdsInventDim;
            PdsBatchDispositionStatus           status = PdsStatus::NotApplicable;

            pdsInventDim = _inventSum.joinChild();
            if (pdsInventDim.InventBatchId)
            {
                status = InventBatch::find(pdsInventDim.InventBatchId,
                                            _inventSum.ItemId).pdsDispositionStatus();
            }

            return status;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsBestBeforeDate</Name>
						<Source><![CDATA[
        public display PdsBestBeforeDate pdsBestBeforeDate(InventSum _inventSum)
        {
            InventDim           pdsInventDim;
            PdsBestBeforeDate   bestBeforeDate = dateNull();

            if (hasFieldAccess(tableNum(InventBatch),fieldNum(InventBatch,PdsBestBeforeDate),AccessType::View))
            {
                pdsInventDim = _inventSum.joinChild();

                if (pdsInventDim.InventBatchId)
                {
                    bestBeforeDate = InventBatch::find(pdsInventDim.InventBatchId, _inventSum.ItemId).PdsBestBeforeDate;
                }
            }

            return bestBeforeDate;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsExpDate</Name>
						<Source><![CDATA[
        public display InventBatchExpDate pdsExpDate(InventSum _inventSum)
        {
            InventDim           pdsInventDim;
            InventBatchExpDate  expDate = dateNull();

            if (hasFieldAccess(tableNum(InventBatch),fieldNum(InventBatch,ExpDate),AccessType::View))
            {
                pdsInventDim = _inventSum.joinChild();

                if (pdsInventDim.InventBatchId)
                {
                    expDate = InventBatch::find(pdsInventDim.InventBatchId, _inventSum.ItemId).ExpDate;
                }
            }

            return expDate;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            return;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initQueryInventDim(inventDim_DS);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            InventTable         inventTable;
            InventModelGroup    inventModelGroup;
            boolean             allowEdit = true;

            inventTable = InventTable::find(inventSum.ItemId);
            if (#PdsShelfEnabled && inventTable.isItemBatchActivated())
            {
                inventModelGroup = inventTable.modelGroup();
                if (inventModelGroup.PdsCheck)
                {
                    allowEdit = InventBatch::pdsCheckExpiryDate(
                                    inventDim.InventBatchId,
                                    inventSum.ItemId);

                    if (reserveNow.visible())
                    {
                        reserveNow.enabled(allowEdit);
                    }
                    else if (pdsCWReserveNow.visible())
                    {
                        pdsCWReserveNow.enabled(allowEdit);
                    }
                }
            }

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(tablenum(InventTrans),1).addRange(fieldnum(InventTrans,StatusIssue)).value('0');
            this.query().dataSourceTable(tablenum(InventTrans),1).addRange(fieldnum(InventTrans,StatusReceipt)).value(queryValue(StatusReceipt::Purchased)+'..'+queryValue(StatusReceipt::QuotationReceipt));
            this.query().dataSourceTable(tablenum(InventTrans),1).addRange(fieldnum(InventTrans,PackingSlipReturned)).value(queryValue(NoYes::No));
            this.query().dataSourceTable(tablenum(InventTrans),1).addRange(fieldnum(InventTrans,InvoiceReturned)).value(queryValue(NoYes::No));

            rangeRecId = this.query().dataSourceTable(tablenum(InventTrans),1).addRange(fieldnum(InventTrans,RecId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>qtyUnit</Name>
						<Source><![CDATA[
        public display InventQty  qtyUnit(InventTrans _inventTrans)
        {
            return inventOnhandReserve.convertQtyBetweenUnits(_inventTrans.Qty, unitIdInvent, unitIdSecondary, element.inventDimSetupObject().movement().itemId());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTransOriginMovement</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            InventTransFormHelper::formQueryAddDynalink(inventTransOriginMovement_DS, null, element.args());
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            InventMovement  movement;

            ret = super();

            if (#PdsShelfEnabled)
            {
                movement = element.inventDimSetupObject().movement();
                checkDate = movement.getExpiryCheckDate();
                overrideFEFO = movement.pdsOverrideFEFO();
            }

            element.doActiveButtons();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>movementReservPhysicalUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservPhysical  movementReservPhysicalUnit(InventTransOrigin _inventTransOrigin)
        {
            reservationObservable.observe();
            return inventOnhandReserve.movementReservPhysicalUnit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>movementOnOrderUnit</Name>
						<Source><![CDATA[
        public display InventQtyOnOrder movementOnOrderUnit(InventTransOrigin _inventTransOrigin)
        {
            reservationObservable.observe();
            return inventOnhandReserve.movementOnOrderUnit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>movementReservOrderedUnit</Name>
						<Source><![CDATA[
        public display InventQtyReservOrdered  movementReservOrderedUnit(InventTransOrigin _inventTransOrigin)
        {
            reservationObservable.observe();
            return inventOnhandReserve.movementReservOrderedUnit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementReservPhysical</Name>
						<Source><![CDATA[
        public display PdsCWReservPhysical pdsCWMovementReservPhysical(InventTransOrigin _inventTransOrigin)
        {
            InventOnhandReserve         cwInventOnHandReserve;
            PdsCWReservPhysical         reservePhysical = 0;

            reservationObservable.observe();

            if (PdsGlobal::pdsIsCWItem(_inventTransOrigin.ItemId))
            {
                cwInventOnHandReserve = inventOnhandReserve;
                reservePhysical = cwInventOnHandReserve.pdsCWMovementReservPhysical();
            }
            return reservePhysical;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementReservOrdered</Name>
						<Source><![CDATA[
        public display PdsCWReservOrdered pdsCWMovementReservOrdered(InventTransOrigin _inventTransOrigin)
        {
            InventOnhandReserve         cwInventOnhandReserve;
            PdsCWReservOrdered          cwReserveOrdered = 0;

            reservationObservable.observe();

            if (PdsGlobal::pdsIsCWItem(_inventTransOrigin.ItemId))
            {
                cwInventOnhandReserve = inventOnhandReserve;
                return cwInventOnhandReserve.pdsCWMovementReservOrdered();
            }
            return cwReserveOrdered;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWMovementOnOrder</Name>
						<Source><![CDATA[
        public display PdsCWOnOrder pdsCWMovementOnOrder(InventTransOrigin _inventTransOrigin)
        {
            InventOnhandReserve         cwInventOnhandReserve;
            PdsCWOnOrder                cwOnOrder = 0;

            reservationObservable.observe();

            if (PdsGlobal::pdsIsCWItem(_inventTransOrigin.ItemId))
            {
                cwInventOnhandReserve = inventOnhandReserve;
                cwOnOrder = cwInventOnhandReserve.pdsCWMovementOnOrder();
            }
            return cwOnOrder;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWUnitId</Name>
						<Source><![CDATA[
        public display PdsCWUnitId pdsCWUnitId(InventTransOrigin _inventTransOrigin)
        {
            if (PdsGlobal::pdsIsCWItem(_inventTransOrigin.ItemId))
            {
                return PdsCatchWeightItem::pdsCWUnitId(_inventTransOrigin.ItemId);
            }
            else
            {
                return "";
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTransInventDimFixed</Name>
				<Methods>
					<Method>
						<Name>editInventOwnerId_RU</Name>
						<Source><![CDATA[
        edit InventOwnerIdFlag_RU editInventOwnerId_RU(boolean     _set,
                                          InventTrans _inventTrans,
                                          NoYesId     _inventOwnerIdFlag_RU)
        {
            return element.editInventDimParmFixedField(fieldNum(InventDim, InventOwnerId_RU), _set, _inventTrans, _inventOwnerIdFlag_RU);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventSiteId</Name>
						<Source><![CDATA[
        public edit InventSiteIdFlag editInventSiteId(
            boolean     _set,
            InventTrans _inventTrans,
            NoYesId     _inventSiteIdFlag)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventSiteId), _set, _inventTrans, _inventSiteIdFlag);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            element.inventDimSetupObject().modifyQueryInventDimFixed(inventTransInventDimFixed_DS,inventDim,inventSum_ds.reserveNow(false,inventSum,0));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>qty</Name>
						<Source><![CDATA[
        public display InventQty qty(InventTrans   _inventTrans)
        {
            reservationObservable.observe();
            return inventOnhandReserve.convertQtyBetweenUnits(-_inventTrans.Qty, unitIdInvent, unitIdSecondary, element.inventDimSetupObject().movement().itemId());
        }

]]></Source>
					</Method>
					<Method>
						<Name>configId</Name>
						<Source><![CDATA[
        public display EcoResConfigurationFlag configId(InventTrans _inventTrans)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, ConfigId), false, _inventTrans, NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inventSizeId</Name>
						<Source><![CDATA[
        public display EcoResSizeFlag inventSizeId(InventTrans _inventTrans)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventSizeId), false, _inventTrans, NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inventColorId</Name>
						<Source><![CDATA[
        public display EcoResColorFlag inventColorId(InventTrans _inventTrans)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventColorId), false, _inventTrans, NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inventVersionId</Name>
						<Source><![CDATA[
        public display EcoResVersionFlag inventVersionId(InventTrans _inventTrans)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventVersionId), false, _inventTrans, NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventLocationId</Name>
						<Source><![CDATA[
        public edit InventLocationIdFlag editInventLocationId(
            boolean     _set,
            InventTrans _inventTrans,
            NoYesId     _inventLocationIdFlag)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventLocationId), _set, _inventTrans, _inventLocationIdFlag);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventBatchId</Name>
						<Source><![CDATA[
        public edit InventBatchIdFlag editInventBatchId(
            boolean     _set,
            InventTrans _inventTrans,
            NoYesId     _inventBatchIdFlag)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventBatchId), _set, _inventTrans, _inventBatchIdFlag);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editWMSLocationId</Name>
						<Source><![CDATA[
        public edit WMSLocationIdFlag editWMSLocationId(
            boolean     _set,
            InventTrans _inventTrans,
            NoYesId     _wmsLocationIdFlag)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, wmsLocationId), _set, _inventTrans, _wmsLocationIdFlag);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventSerialId</Name>
						<Source><![CDATA[
        public edit InventSerialIdFlag editInventSerialId(
            boolean     _set,
            InventTrans _inventTrans,
            NoYesId     _inventSerialIdFlag)
        {
            return element.editInventDimParmFixedField(fieldnum(InventDim, InventSerialId), _set, _inventTrans, _inventSerialIdFlag);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventGTDId_RU</Name>
						<Source><![CDATA[
        edit InventGTDIdFlag_RU editInventGTDId_RU(boolean     _set,
                                        InventTrans _inventTrans,
                                        NoYesId     _inventGTDIdFlag_RU)
        {
            return element.editInventDimParmFixedField(fieldNum(InventDim, InventGtdId_RU), _set, _inventTrans, _inventGTDIdFlag_RU);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editInventProfileId_RU</Name>
						<Source><![CDATA[
        edit InventProfileIdFlag_RU editInventProfileId_RU(boolean     _set,
                                            InventTrans _inventTrans,
                                            NoYesId     _inventProfileIdFlag_RU)
        {
            return element.editInventDimParmFixedField(fieldNum(InventDim, InventProfileId_RU), _set, _inventTrans, _inventProfileIdFlag_RU);
        }

]]></Source>
					</Method>
					<Method>
						<Name>inventStyleId</Name>
						<Source><![CDATA[
        public display EcoResStyleFlag inventStyleId(InventTrans _inventTrans)
        {
            return element.editInventDimParmFixedField(fieldNum(InventDim, InventStyleId), false, _inventTrans, NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        public display PdsCWInventQty pdsCWQty(InventTrans _inventTrans)
        {
            reservationObservable.observe();
            return -_inventTrans.PdsCWQty;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ReserveLot</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            inventOnhandReserve.updateReserveLot();
            inventSum_ds.executeQuery();
            element.refreshMovement();
            element.callerRefresh();
            reserveNow.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsResetDispositionStatus</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean     pdsAddFlag;

            if (inventSum.InventDimId == '')
            {
                inventSum.InventDimId = InventDim::findDim(inventDim).InventDimId;
                pdsAddFlag = boolean::true;
            }
            super();

            if (pdsAddFlag)
            {
                inventSum.InventDimId = '';
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UnitsComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            element.applyUnitID();
            inventSum_ds.refresh();

            reservationObservable.markChanged();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReserveLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (element.mustCheckExpiryDate())
            {
                CustAccount custId;
                Common common = element.args().record();
                switch (common.TableId)
                {
                    case tableNum(SalesLine) :
                        custId = common.(fieldNum(SalesLine, CustAccount));
                        break;
                    case tableNum(SalesParmLine) :
                        custId = common.(fieldNum(SalesParmLine, CustAccount));
                        break;
                    default :
                        custId = '';
                }

                if (!InventBatch::pdsCheckExpiryDate(inventDim.InventBatchId,
                                                         inventTrans.ItemId,
                                                         checkDate,
                                                         true,
                                                         custId,
                                                         overrideFEFO,
                                                         inventDim))
                {
                    throw error("@PRO2139");
                }
            }
            if (#PdsEnabled)
            {
                if (!inventSum_ds.validateBatchReserve())
                {
                    throw error("@PRO2139");
                }
            }

            inventOnhandReserve.updateReserveLine(inventSum);
            element.refreshMovement();
            element.callerRefresh();
            reserveNow.setFocus();

            reservationObservable.markChanged();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventSum</Name>
			<Table>InventSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Arrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Deducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Ordered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWArrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWDeducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPicked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Picked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>QuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>QuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Received</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Registered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventSum</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTrans</Name>
			<Table>InventTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurAdjustment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPosted_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStdSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosedSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventDimTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimIdSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginDelivery_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkingRefInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PickingRouteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Storno_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpenSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPhysical</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventSum</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransOriginMovement</Name>
			<Table>InventTransOrigin</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemInventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransInventDimFixed</Name>
			<Table>InventTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurAdjustment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSecCurPosted_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountSettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmountStdSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateClosedSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupRefType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventDimTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimFixed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimIdSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginDelivery_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginSales_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransOriginTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkingRefInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipReturned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWSettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PickingRouteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySettledSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnInventTransOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Storno_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoPhysical_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransChildType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueOpenSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPhysical</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTransOriginMovement</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>TransOriginIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTransOrigin</Name>
			<Table>InventTransOrigin</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemInventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS7120</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ReserveLot</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>939524094</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS54986</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS54987</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inventory</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS54983</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventLot</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>InventTransOriginMovement</DataSource>
										<MenuItemName>InventLot</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventTransLot</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>InventTransOriginMovement</DataSource>
										<MenuItemName>InventTransLot</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventTransDim</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS54985</HelpText>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>InventSum</DataSource>
										<MenuItemName>InventTransDim</MenuItemName>
										<SaveRecord>No</SaveRecord>
										<Text>@SYS54984</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS981</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>InventOnhandItem</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>InventOnhandItem</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>InventTransOrdered</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>InventTransOrdered</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PdsResetDispositionStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>InventSum</DataSource>
								<MenuItemName>pdsresetdispositionStatus</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabUnitOfMeasure</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupItemInfo</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ItemInfo_IntemId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>InventSum</DataSource>
										<FastTabSummary>Yes</FastTabSummary>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>UnitOfMeasure</Name>
								<ElementPosition>894784852</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>UnitsComboBox</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>268435455</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ComboType>List</ComboType>
										<EnumType>InventModuleUnits</EnumType>
										<Label>@SYS312170</Label>
										<ViewEditMode>Edit</ViewEditMode>
										<Items />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderUnits</Name>
								<ElementPosition>1342177278</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>unitId</DataMethod>
										<FastTabSummary>Yes</FastTabSummary>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PdsCWUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsCWUnitId</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<FastTabSummary>Yes</FastTabSummary>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderReservedPhysical</Name>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservPhysicalLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MovementReservPhysicalUnit</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<Label>@SYS22392</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReservPhysicalLot</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsCWMovementReservPhysical</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<Label>@PDS61</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderReservOrdered</Name>
								<ElementPosition>1543503870</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservOrderedLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>805306367</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MovementReservOrderedUnit</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<Label>@SYS22393</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReservOrderedLot</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsCWMovementReservOrdered</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<Label>@PDS298</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderOnOrder</Name>
								<ElementPosition>1577058302</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OnOrderLot</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>805306367</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MovementOnOrderUnit</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<FastTabSummary>Yes</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWOnOrderLot</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:InventOnhandReserve_PdsCWOnOrderLot</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsCWMovementOnOrder</DataMethod>
										<DataSource>InventTransOriginMovement</DataSource>
										<FastTabSummary>Yes</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<RotateSign>No</RotateSign>
										<SignDisplay>None</SignDisplay>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SCM:InventReserveSectionLineQuantities</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOnHandQuantities</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>TabOnHandQuantitiesActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>TabOnHandQuantitiesButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ReserveLine</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1409286141</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS54989</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS54988</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>InventDimParmFixed</Name>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>InventDimParmFixed</MenuItemName>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Onhand</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>751619276</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventSum_ItemId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>InventSum</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensionsGrid</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventoryDimensionsGrid_configId</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventoryDimensionsGrid_inventBatchId</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventoryDimensionsGrid_wMSLocationId</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventoryDimensionsGrid_inventSerialId</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensionsGrid_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PdsDispositionCode</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1711276030</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsDispositionCode</DataMethod>
										<DataSource>InventSum</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PdsDispositionStatus</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsDispositionStatus</DataMethod>
										<DataSource>InventSum</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PdsBestBeforeDate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PdsShelf</ConfigurationKey>
										<ElementPosition>1845493758</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsBestBeforeDate</DataMethod>
										<DataSource>InventSum</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PdsExpDate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PdsShelf</ConfigurationKey>
										<ElementPosition>1862270974</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsExpDate</DataMethod>
										<DataSource>InventSum</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupNonCatchWeightGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2001731582</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PhisicalInvent</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>PhysicalInventUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ReservPhysicalGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>ReservPhysicalUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>AvailPhysicalGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>AvailPhysicalUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>OrderedGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>orderedUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ReservOrderedGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2130706430</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>ReservOrderedUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>AvailReservationGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2139095038</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>AvailReservationUnit</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupCatchWeightGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2071461886</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWPhysicalInventGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>PdsCWPhysicalInventCalculated</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWReservPhysicalGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PdsCWReservPhysical</DataField>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWAvailPhysicalGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_AccountsPayable:InventOnhandReserve_PdsCWAvailPhysicalGrid</HelpText>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>PdsCWAvailPhysicalCalculated</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWOrderedGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PdsCWOrdered</DataField>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWReservOrderedGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PdsCWReservOrdered</DataField>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PdsCWAvailReservationGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>pdsCWAvailReservation</DataMethod>
												<DataSource>InventSum</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReserveNow</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2141192190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PdsCWReserveNow</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@PDS58</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReserveNow</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_ReserveNow</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReserveNow</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@SYS7669</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
								</Controls>
								<DataSource>InventSum</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>10</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupNonCatchWeight</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Skip>Yes</Skip>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PhisicalInventOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PhysicalInventUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservPhysicalOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReservPhysicalUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OrderedOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>orderedUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservOrderedOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReservOrderedUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AvailPhysicalOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>AvailPhysicalUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AvailOrderedOther</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availReservationUnit</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:InventReserveSectionOnHand</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabLockedDimensions</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridInventTransParmFixed</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Top>0</Top>
								<TopMode>TopEdge</TopMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>qty1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>qty</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ConfigIdFlag</Name>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_ConfigIdFlag</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>ConfigId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventSizedIdFlag</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>InventSizeId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventColorIdFlag</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>InventColorId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventStyleIdFlag</Name>
										<ElementPosition>2046820350</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>InventStyleId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventVersionIdFlag</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>InventVersionId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventSiteIdFlag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventSiteId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventLocationIdFlag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventLocationId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventProfileIdFlag_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2119521619</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventProfileId_RU</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventOwnerIdFlag_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2125114024</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventOwnerId_RU</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<Label>@GLS115496</Label>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventBatchIdFlag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventBatchIdFlag</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventBatchId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WMSLocationIdFlag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_WMSLocationIdFlag</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editWMSLocationId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventSerialIdFlag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandReserve_InventSerialIdFlag</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventSerialId</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InventGTDIDFlag_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>60</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editInventGTDId_RU</DataMethod>
										<DataSource>InventTransInventDimFixed</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
								</Controls>
								<DataSource>InventTransInventDimFixed</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>5</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:InventReserveSectionLockedDimensions</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
				<TabAutoChange>No</TabAutoChange>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
