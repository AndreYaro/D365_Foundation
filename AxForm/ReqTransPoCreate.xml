<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ReqTransPoCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ReqTransPoCreate extends FormRun
{
    InventDimCtrl_Frm   inventDimFormSetup;

    ReqPO               newReqPo;

    InventLocationId    fromInventLocationId;
    InventLocationId    toInventLocationId;

    ReqPOType           orderType;
    ReqPlanData         reqPlanData;

    ItemId              defaultItemId;
    InventDim           defaultInventDim;
    TransDate           defaultDeliveryDate;
    ItemId              itemUpdate;
    Object              callerFormObject;

    boolean reqTransPoCreateWithPurchQtyFeatureEnabled;

}
]]></Source>
			</Method>
			<Method>
				<Name>inventDimModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// It takes the necessary actions after an inventory dimension is modified, which also requires other fields to be defaulted.
    /// </summary>
    /// <param name = "_modifiedFieldId">The id of the field modified by the inventory dimension modifications.</param>
    public void inventDimModified(FieldId _modifiedFieldId)
    {
        using (ReqTransPoCreateContext context = new ReqTransPoCreateContext())
        {
            context.parmFromInventLocationId(this.fromInventLocationId);
            ReqPo.modifiedInventDim(InventDim, _modifiedFieldId);
        }

        element.changeBOMRouteVersions();

        // update quantity
        reqPO.setMinMaxQty(InventDim::findOrCreate(inventDim).InventDimId);

        if (reqTransPoCreateWithPurchQtyFeatureEnabled && ReqPo.RefType == ReqRefType::ItemPlannedOrder)
        {
            ReqPO.initPurchQty();
        }

        if (#PmfEnabled)
        {
            element.setFormulaDate(reqPO.ReqDateDlv, reqPO.Qty);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeBOMRouteVersions</Name>
				<Source><![CDATA[
    public void changeBOMRouteVersions()
    {
        BOMId       bomId;
        RouteId     routeId;
        ReqSetup    reqSetup;
        ReqPO       reqPOTest;
        boolean     askOverWriteBOMRoute;

        if (   reqPO.ItemId         != reqPO.orig().ItemId
            || reqPO.Qty            != reqPO.orig().Qty
            || reqPO.CovInventDimId != reqPO.orig().CovInventDimId)
        {
            reqSetup = reqPO.reqSetup();

            reqPOTest = reqPO.data();
            reqPOTest.ItemBomId     = '';
            reqPOTest.ItemRouteId   = '';

            bomId   = reqSetup.bomId(reqPOTest);
            routeId = reqSetup.routeId(reqPOTest);

            if (   reqPO.ItemBomId   != bomId
                || reqPO.ItemRouteId != routeId)
            {
                askOverWriteBOMRoute = reqPOType.selection() == ReqPOType::Production
                                   && (reqPO.ItemBomId
                                   ||  reqPO.ItemRouteId);

                if (  ! askOverWriteBOMRoute
                     || Box::yesNo("@SYS67181",DialogButton::Yes,"@SYS67183",""))
                {
                    reqPO.ItemBomId     = bomId;
                    reqPO.ItemRouteId   = routeId;

                    reqPO_ds.refresh();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReqPO</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a planned order based on the values filled in the dialog.
    /// </summary>
    /// <returns>
    ///    true if the process did not throw an error; otherwise, false.
    /// </returns>
    public boolean createReqPO()
    {
        ReqPO   saveReqPO;
        boolean createFailed;

        XDSServices xdsServices = new XDSServices();
        #DirParty

        if (!reqPO.RecId)
        {
            // save current buffer
            saveReqPO.data(reqPO);

            // create planned order
            try
            {
                // Disable the DirPartyTable XDS policies by passing a non blank context string
                xdsServices.setXDSContext(0, #SystemUser);
                ReqPlannedOrder::construct().insertFromForm(reqPO,inventDim,fromInventLocationId,toInventLocationId,true,RecalculateBOMLevels.value());
                // re-enable XDS policies
                xdsServices.setXDSContext(0, '');
            }
            catch
            {
                createFailed = true;
            }

            if (!createFailed)
            {
                newReqPo.data(reqPO);

                if (newReqPo.RecId)
                {
                    element.closeOk();
                }
                else
                {
                    // Due to firming time fence the planned order is already firmed and doesn't exists any longer
                    // -> validateWrite can't be executed
                    element.closeCancel();
                }
            }
            else
            {
                // restore buffer
                reqPO.data(saveReqPO);
            }
        }

        return !createFailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        reqTransPoCreateWithPurchQtyFeatureEnabled = FeatureStateProvider::isFeatureEnabled(ReqTransPoCreateWithPurchQtyFeature::instance());
        
        ReqParameters::checkPlanningProcessesAreEnabled();

        super();

        if (!element.args().caller())
        {
            //
            // Form cannot be called directly.
            //
            throw error("@SYS96590");
        }

        this.initFromCaller();

        if (element.args() && element.args().caller())
        {
            callerFormObject = element.args().caller();

            if (formHasMethod(callerFormObject, identifierStr(parmItemId)))
            {
                defaultItemId = callerFormObject.parmItemId();
            }

            if (formHasMethod(callerFormObject, identifierStr(defaultInventDim)))
            {
                defaultInventDim = callerFormObject.defaultInventDim();
            }

            if (formHasMethod(callerFormObject, identifierStr(currentTableRowType)))
            {
                reqPoType.selection(ReqSupplyDemandScheduleModel::findPlannedOrderType(callerFormObject.currentTableRowType()));
            }

            if (formHasMethod(callerFormObject, identifierStr(defaultPlannedOrderType)))
            {
                reqPoType.selection(callerFormObject.defaultPlannedOrderType());
            }

            if (formHasMethod(callerFormObject, identifierStr(getFromDate)))
            {
                defaultDeliveryDate = callerFormObject.getFromDate();
            }
        }

        element.initDesign();
        element.updateDesign(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDesign</Name>
				<Source><![CDATA[
    void initDesign()
    {
        InventTable inventTable = InventTable::find(reqPo.ItemId);

        GroupQtyDate.enabled(inventTable.RecId != 0);

        if (#PmfEnabled)
        {
            if (inventTable.RecId && reqPoType.selection() == ReqPOType::Production)
            {
                if (inventTable.isBOMAllowed())
                {
                    groupProduction.visible(true);
                    groupProduction.caption("@SYS22227");
                    reqPo_ItemBomId.label('');
                    pdsCWMain.visible(false);
                }
                else if (inventTable.isFormulaAllowed())
                {
                    groupProduction.visible(true);
                    groupProduction.caption("@PRO119");
                    pdsCWMain.visible(true);
                    reqPo_ItemBomId.label("@PRO101");
                }
            }
            else
            {
                groupProduction.visible(false);
                pdsCWMain.visible(false);
            }
        }
        else
        {
            groupProduction.visible(reqPoType.selection()   == ReqPOType::Production    ? true : false);
        }

        groupPurchase.visible(reqPoType.selection()     == ReqPOType::Purch         ? true : false);
        groupTransfer.visible(reqPoType.selection()     == ReqPOType::Transfer      ? true : false);

        boolean shouldPoBeCreatedWithPurchQty = reqTransPoCreateWithPurchQtyFeatureEnabled && reqPoType.selection() == ReqPOType::Purch;
        ReqPo_PurchQty.visible(shouldPoBeCreatedWithPurchQty);
        ReqPo_PurchUnit.visible(shouldPoBeCreatedWithPurchQty);
        ReqPo_Qty.enabled(!shouldPoBeCreatedWithPurchQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCaller</Name>
				<Source><![CDATA[
    private void initFromCaller()
    {
        xArgs        args     = element.args();

        newReqPo        = args.record() as ReqPO;
        orderType       = args.parmEnum();

        if (newReqPo)
        {
            reqPo.ItemId = newReqPo.ItemId;
        }

        this.initReqPlanData(args.parm());

        if ( orderType )
        {
            reqPoType.selection(orderType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReqPlanData</Name>
				<Source><![CDATA[
    public void initReqPlanData(ReqPlanId _reqPlanId)
    {
        if ( !_reqPlanId )
        {
            _reqPlanId = ReqPlanSched::defaultDynamicId();
        }
        else
        {
            reqPlanId.enabled(false);
        }

        reqPlanData     = ReqPlanData::newReqPlanId(_reqPlanId);
        reqPlanId.text(reqPlanData.parmReqPlanId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWEnableFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if catch weight fields are enabled
    /// </summary>
    void pdsCWEnableFields()
    {
        boolean pdsCWAllowEdit;

        pdsCWAllowEdit = PdsGlobal::pdsIsCWItem(reqPo.ItemId);

        reqPo_ds.object(fieldNum(ReqPO, PdsCWReqQty)).allowEdit(pdsCWAllowEdit);
        reqPo_ds.object(fieldNum(ReqPO, Qty)).allowEdit(!pdsCWAllowEdit);
        reqPo_ds.object(fieldNum(ReqPO, PurchQty)).allowEdit(!pdsCWAllowEdit);

        reqPo_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWResetFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets field values inaddition to Catch weight field
    /// </summary>
    void pdsCWResetFields()
    {
        reqPo.PdsCWReqQty = 0;
        reqPo.Qty = 0;
        reqPo.PurchQty = 0;
        reqPo_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        reqPo_DS.create(true);

        if ( orderType )
        {
            reqPo_itemId.setFocus();
        }
        else
        {
            reqPoType.setFocus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormulaDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the Req Order date to a specific date
    /// </summary>
    /// <param name="_bomDate">
    /// Date to which set order date
    /// </param>
    /// <param name="_fromQty">
    /// Order qty used to find order(s)
    /// </param>
    /// <remarks>
    /// Method sets the req order date for a specific qty.
    /// </remarks>
    public void setFormulaDate(TransDate _bomDate, FromQty _fromQty)
    {
        BOMId       bomIdDate;
        RouteId     routeIdDate;

        if (reqPo.RefType == ReqRefType::PmfPlannedProdBatch
            && reqPo.ItemId
            && (_bomDate != reqPo.ReqDateDlv
                || _fromQty != reqPo.orig().Qty))
        {
            reqPo.ReqDateDlv = _bomDate;

            bomIdDate =
                BOMVersion::findActive(
                    reqPo.ItemId,
                    reqPo.ReqDateDlv,
                    _fromQty,
                    reqPo.inventDim()).bomId;
            routeIdDate =
                RouteVersion::findActive(
                    reqPo.ItemId,
                    reqPo.ReqDateDlv,
                    _fromQty,
                    reqPo.inventDim()).RouteId;

            if (reqPo.ItemBomId != bomIdDate || reqPo.ItemRouteId != routeIdDate)
            {
                if (Box::yesNo("@PRO1979",DialogButton::Yes,"@PRO1979",""))
                {
                    reqPo.ItemBomId     = bomIdDate;
                    reqPo.ItemRouteId   = routeIdDate;

                    reqPo_ds.refresh();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm   inventDimParm;

        if (reqPo.ItemId)
        {
            reqPo_ds.refresh();
            inventDim_DS.refresh();
        }

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init        :
                if (! inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl::newFromForm(element);
                }

            case InventDimFormDesignUpdate::Active      :
                if (reqPo.ItemId)
                {
                    inventDimParm.initCovPrDimension(InventDimGroupSetup::newItemId(reqPo.ItemId));

                    if (reqPoType.selection() == ReqPOType::Transfer)
                    {
                        inventDimParm.InventLocationIdFlag = NoYes::No;
                        inventDimParm.InventSiteIdFlag = NoYes::No;
                    }
                }
                inventDimFormSetup.parmDimParmEnabled(inventDimParm);
                inventDimFormSetup.parmDimParmVisible(inventDimParm);

                inventDimFormSetup.formSetControls(true);

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventLocationFields</Name>
				<Source><![CDATA[
    void updateInventLocationFields()
    {
        InventTable                 inventTable;

        inventDim.data(InventDim::find(reqPO.CovInventDimId));

        if (reqPo.supplyPrinciple(reqPlanData)== ReqSupplyPrinciple::Transfer)
        {
            inventTable = InventTable::find(reqPO.ItemId);

            toInventLocationId   = inventDim.InventLocationId;
            fromInventLocationId = reqPO.reqSetupDim().mainInventLocationId(reqPO.RefType,reqPO.reqDateTime());
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);

        if (#PdsCatchWeightEnabled)
        {
            element.pdsCWEnableFields();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOrderDeliveryDate</Name>
				<Source><![CDATA[
    public boolean validateOrderDeliveryDate()
    {
        date deliveryDate=reqPo_ReqDateDlv.dateValue();
        date orderDate= reqPo_ReqDateOrder.dateValue();
        if (deliveryDate && (deliveryDate < orderDate))
        {
            warning("@SYS112651");
        }
        // returning true since this is only displaying a warning and not failing
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        if (callerFormObject is FormRun && formHasMethod(callerFormObject, identifierStr(setFocusOnRecord)))
        {
            callerFormObject.setFocusOnRecord(reqPO);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // do nothing
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (defaultInventDim)
            {
                inventDim.initFromInventDim(defaultInventDim);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>configId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (!EcoResProductMasterConfigurationMgr::configure( _formControl,
                                                                    reqPo.ItemId,
                                                                    InventDim::findOrCreate(inventDim).InventDimId,
                                                                    ReqTransPoMarkFirmUseDlvDateForBOMVersionFlight::instance().isEnabled() ? reqPO.getBOMDate() : reqPO.ReqDate,
                                                                    reqPo.ItemBomId,
                                                                    reqPO.Qty))
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, configId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventColorId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventColorId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventLocationId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventLocationId));                
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSiteId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventSiteId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSizeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventSizeId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventStatusId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean result;

                result =    super()
                         && WHSInventStatus::allowCreatePlannedOrder(inventDim.InventStatusId);

                return result;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ReqPo.modifiedInventDim(InventDim, fieldNum(InventDim, InventStatusId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventStyleId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventStyleId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventVersionId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.inventDimModified(fieldNum(InventDim, InventVersionId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>ReqPo</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean         ret;

            BOMVersion      bomVersion;

            ret = super();

            if (   ret
                && reqPoType.selection() == ReqPOType::Transfer)
            {
                ret = ReqTransFormPO::validateFromInventLocationId(fromInventLocationId, toInventLocationId,reqPO);
            }

            if (ret
                && reqPO.RefType == ReqRefType::PmfPlannedProdBatch
                && InventTable::find(reqPo.ItemId).PmfProductType == PmfProductType::Formula)
            {
                TransDate bomDate = ReqTransPoMarkFirmUseDlvDateForBOMVersionFlight::instance().isEnabled() ? reqPO.getBomDate() : reqPO.ReqDate;

                bomVersion = BOMVersion::findApproved(
                    reqPO.ItemId,
                    reqPO.ItemBomId,
                    NoYes::Yes,
                    bomDate,
                    bomDate,
                    reqPO.Qty);

                if (!bomVersion.RecId)
                {
                    ret = ret && checkFailed("@PRO2682");
                }
            }
            if (ret
                && reqPOType.selection() == ReqPOType::Production
                && ProdParameters::find().PmfAlertNonStdVersionUsage
                && !PmfReqPOSimulator::isEqual(reqPO, reqPOType.selection())
                && Box::okCancel("@PRO2681", DialogButton::Cancel) == DialogButton::Cancel)
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>toInventLocationId</Name>
						<Source><![CDATA[
        [SuppressBpWarning('BPParameterNotUsed', 'The parameter is not used but it is mandate by the API it is extending, implementing or mocking.')]
        edit InventLocationId toInventLocationId(boolean _set, ReqPO _reqPO, InventLocationId _toInventLocationId)
        {
            if (_set)
            {
                toInventLocationId = InventLocation::find(_toInventLocationId).InventLocationId;

                if (!_toInventLocationId || toInventLocationId)
                {
                    this.updateInventDim();
                }
            }

            return toInventLocationId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateInventDim</Name>
						<Source><![CDATA[
        private void updateInventDim()
        {
            InventDim.InventLocationId = toInventLocationId;
            InventDim.initFromInventLocation(InventDim.inventLocation());
            element.inventDimModified(fieldNum(InventDim, InventLocationId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>fromInventLocationId</Name>
						<Source><![CDATA[
        [SuppressBpWarning('BPParameterNotUsed', 'The parameter is not used but it is mandate by the API it is extending, implementing or mocking.')]
        edit InventLocationId fromInventLocationId(boolean _set, ReqPO _reqPO, InventLocationId _fromInventLocationId)
        {
            if (_set)
            {
                fromInventLocationId = _fromInventLocationId;

                // We do not do any validation, this is done to refresh the string value if it is valid.
                var fromInventLocation = InventLocation::find(_fromInventLocationId);
                if (fromInventLocation)
                {
                    fromInventLocationId = fromInventLocation.InventLocationId;
                }

                if (ReqPOTransferLeadTimeFeature::isEnabled())
                {
                    _reqPO.initLeadTime(_reqPO.reqSetupDim(), fromInventLocationId);
                    _reqPO.initFromReqDateDlv(_reqPO.reqSetupDim());
                }
            }

            return fromInventLocationId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // do nothing
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            reqPO.initReqPOType(reqPlanData.parmReqPlanVersionRefRecId(), reqPoType.selection());

            if (defaultItemId)
            {
                reqPO.ItemId = defaultItemId;

                element.updateInventLocationFields();
            }

            if (defaultDeliveryDate)
            {
                reqPO.ReqDateDlv = defaultDeliveryDate;
            }

            if (#PdsCatchWeightEnabled)
            {
                element.pdsCWEnableFields();
                element.pdsCWResetFields();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ItemBomId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean result = super();

                result =    result
                         && ProdTable::validateBOMId(reqPO.ItemBomId,reqPO.ItemId,inventDim);

                return result;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str _filterStr)
            {
                if (InventTable::find(reqPO.ItemId).isFormulaAllowed())
                {
                    InventTable::lookupFormulaId(_formControl, reqPO.ItemId, inventDim);
                }
                else
                {
                    InventTable::lookupBOMId(_formControl, reqPO.ItemId, inventDim, true, false);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (reqPO.ItemBomId)
                {
                    reqPO.setMinMaxQty(InventDim::findOrCreate(inventDim).inventDimId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                switch (reqPOType.selection())
                {
                    case ReqPOType::Production:
                        if (#PmfEnabled)
                        {
                            InventTable::lookupItemIdCanHaveCoProdBOMFormula(_formControl);
                        }
                        else
                        {
                            InventTable::lookupItemIdCanBeProduced(_formControl);
                        }
                        break;

                    case ReqPOType::Transfer    :
                        InventTable::lookupItemIdCanBeTransferred(_formControl);
                        break;

                    default                     :
                        super(_formControl, _filterStr);
                        break;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateInventLocationFields();

                using (ReqTransPoCreateContext context = new ReqTransPoCreateContext())
                {
                    reqPO.initReqPOType(reqPlanData.parmReqPlanVersionRefRecId(), reqPoType.selection());
                }

                if (InventTable::find(reqPO.ItemId, false).PmfProductType == PmfProductType::MainItem)
                {
                    reqPoType.selection(ReqPOType::Production);
                }

                element.initDesign();

                if (PdsGlobal::pdsIsCWItem(reqPO.ItemId))
                {
                    pdsCWMain.visible(true);
                }

                if (reqTransPoCreateWithPurchQtyFeatureEnabled && reqPoType.selection() == ReqPOType::Purch)
                {
                    ReqSetup setup = ReqPO.reqSetup();
                    InventTable inventTable = setup.inventTable();
                    ReqSetupDim setupDim = ReqSetupDim::newCovInventDimId(setup, inventDim.reqCovDimId(InventDimGroupSetup::newInventTable(inventTable)));
                    ReqPo.PurchQty = setupDim.standardQtyPurch();
                    ReqPo.PurchUnit = setup.purchUnitId();
                    ReqPO.initQtyFromPurchQty();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemRouteId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean result = super();

                result =    result
                         && ProdTable::validateRouteId(reqPO.ItemRouteId,reqPO.ItemId,inventDim);

                return result;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                InventTable::lookupRouteId(_formControl, reqPO.ItemId, inventDim, true, false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsCWReqQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Updates PdsCWReqQty with the converted inventory qty from catch weight value
            /// </summary>
            public void modified()
            {
                InventQty fromQty;

                super();
                if (PdsGlobal::pdsIsCWItem(reqPO.ItemId))
                {
                    fromQty = PdsCatchWeight::inventQty(reqPO.ItemId, reqPO.PdsCWReqQty);
                    element.setFormulaDate(reqPO.ReqDateDlv, fromQty);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PurchQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (reqTransPoCreateWithPurchQtyFeatureEnabled && reqPoType.selection() == ReqPOType::Purch)
                {
                    ReqPO.initQtyFromPurchQty();
                    reqPO.setMinMaxQty(InventDim::findOrCreate(inventDim).InventDimId);
                    ReqPO.initPurchQty();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PurchUnit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (reqTransPoCreateWithPurchQtyFeatureEnabled && reqPoType.selection() == ReqPOType::Purch)
                {
                    ReqPO.initQtyFromPurchQty();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                reqPO.setMinMaxQty(InventDim::findOrCreate(inventDim).InventDimId);

                if (#PmfEnabled)
                {
                    element.setFormulaDate(reqPO.ReqDateDlv, reqPO.Qty);
                }

                if (reqTransPoCreateWithPurchQtyFeatureEnabled && reqPoType.selection() == ReqPOType::Purch)
                {
                    ReqPO.initPurchQty();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReqDateDlv</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();
                return element.validateOrderDeliveryDate() && ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Standard modified method
            /// </summary>
            /// <remarks>
            /// Method added setting of req order date
            /// </remarks>
            public void modified()
            {
                super();

                if (#PmfEnabled)
                {
                    element.setFormulaDate(reqPO.ReqDateDlv, reqPO.Qty);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReqDateOrder</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();
                return element.validateOrderDeliveryDate() && ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ReqPoType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDesign();

            reqPO.initReqPOType(reqPlanData.parmReqPlanVersionRefRecId(), reqPoType.selection());
            reqPO.modifiedFieldValue(fieldStr(ReqPO, RefType));

            if (reqPO.ItemId)
            {
                element.updateDesign(InventDimFormDesignUpdate::Active);
                element.updateInventLocationFields();
                if(InventTable::find(reqPO.ItemId, false).PmfProductType == PmfProductType::MainItem)
                {
                    reqPoType.selection(ReqPOType::Production);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>reqPlanId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initReqPlanData(this.text());
            reqPO.PlanVersion = reqPlanData.parmReqPlanVersionRefRecId();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReqPo_ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (ReqPoFillCovInventDimItemChngeOnCreateFlight::instance().isEnabled()) 
            {
                ReqPo.modifiedInventDim(InventDim, 0);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Ok</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (reqPO.validateFieldValue(fieldStr(ReqPO, ItemId)) && reqPO_ds.validateWrite())
            {
                if (element.createReqPO())
                {
                    super();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ReqPo</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ReqPo</Name>
			<Table>ReqPO</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BOMRouteCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalendarDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovInventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvMth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvQr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntvWk</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDerivedDirectly</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsForecastPurch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBomId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LeadTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReqQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfBulkOrd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfPlanningItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PMFSequenced</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqDateDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqDateOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPOStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqTimeOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteJobsUpdated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedFromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS316369</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Scrollbars xmlns="">No</Scrollbars>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>429496728</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ReqPoType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>ReqPOType</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>reqPlanId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ReqPlanId</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS53282</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupItem</Name>
						<ElementPosition>644245092</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqPo_ItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>itemName</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>itemName</DataMethod>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS5711</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>InventoryDimension</Name>
						<ElementPosition>858993456</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_configId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>configId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventSizeId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSizeId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventColorId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventColorId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventStyleId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStyleId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventVersionId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventVersionId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventSiteId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSiteId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_inventBatchId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventBatchId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_wMSLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>wMSLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_inventSerialId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventSerialId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventStatusId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStatusId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_LicensePlateId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>LicensePlateId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventOwnerId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventOwnerId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventProfileId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventProfileId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimension_InventGtdId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventGtdId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>InventoryDimensions</DataGroup>
						<DataSource>InventDim</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupTransfer</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>fromInventLocationId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS54654</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>fromInventLocationId</DataMethod>
								<DataSource>ReqPo</DataSource>
								<Label>@SYS25253</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>toInventLocationId</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS54653</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>toInventLocationId</DataMethod>
								<DataSource>ReqPo</DataSource>
								<Label>@SYS8519</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6437</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PdsCWMain</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490184</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PdsCWMain_PdsCWReqQty</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PdsCWReqQty</DataField>
								<DataSource>ReqPo</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PdsCWMain_M_pdsCWUnitId</Name>
								<AllowEdit>No</AllowEdit>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>pdsCWUnitId</DataMethod>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>PdsCWMain</DataGroup>
						<DataSource>ReqPo</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupQtyDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1503238548</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ReqPo_PurchQty</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchQty</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqPo_PurchUnit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@FieldDescriptions_InventoryManagement:ReqTransPo_PurchasePlannedOrder_PurchUnit</HelpText>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchUnit</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ReqPo_Qty</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Qty</DataField>
								<DataSource>ReqPo</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ReqPo_ReqDateDlv</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReqDateDlv</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ReqPo_ReqDateOrder</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReqDateOrder</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ReqPo_PlanningPriority</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PlanningPriority</DataField>
								<DataSource>ReqPo</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
								<RotateSign>No</RotateSign>
								<ShowZero>Yes</ShowZero>
								<SignDisplay>None</SignDisplay>
							</AxFormControl>
						</Controls>
						<Caption>@SYS53282</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupProduction</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986912</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqPo_ItemBomId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemBomId</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqPo_ItemRouteId</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemRouteId</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS22227</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupPurchase</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1932735276</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqTrans_VendId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>VendId</DataField>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>vendName</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>vendName</DataMethod>
								<DataSource>ReqPo</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS53872</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BOMLevelCalculation</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2040109461</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>RecalculateBOMLevels</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS112515</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS328111</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS14364</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>