<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjAdjTreeCreateVisualization</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
/// <summary>
///   The user chooses which fields to be displayed in the adjustment trace tree.
/// </summary>
public class ProjAdjTreeCreateVisualization extends FormRun
{
    SysListPanelSet_Fields_Visualization listPanel;
    container                            selectedData, availableData;
    Set                                  inSet, allowedSet;
    FormListControl                      viewSelected;
    ProjTransType                        transType;
}
]]></Source>
			</Method>
			<Method>
				<Name>getSetCost</Name>
				<Source><![CDATA[
    void getSetCost()
    {
        allowedSet.add(fieldnum(ProjCostTrans, TransDate));
        allowedSet.add(fieldnum(ProjCostTrans, ActivityNumber));
        allowedSet.add(fieldnum(ProjCostTrans, TransId));
        allowedSet.add(fieldnum(ProjCostTrans, CategoryId));
        allowedSet.add(fieldnum(ProjCostTrans, Resource));
        allowedSet.add(fieldnum(ProjCostTrans, Txt));
        allowedSet.add(fieldnum(ProjCostTrans, TransIdRef));
        allowedSet.add(fieldnum(ProjCostTrans, AdjRefTransId));
        allowedSet.add(fieldnum(ProjCostTrans, CurrencyId));
        allowedSet.add(fieldnum(ProjCostTrans, TaxGroupId));
        allowedSet.add(fieldnum(ProjCostTrans, TaxItemGroupId));
        allowedSet.add(fieldnum(ProjCostTrans, VoucherJournal));
        allowedSet.add(fieldnum(ProjCostTrans, ProjId));
        allowedSet.add(fieldnum(ProjCostTrans, Qty));
        allowedSet.add(fieldnum(ProjCostTrans, LinePropertyId));
        allowedSet.add(fieldnum(ProjCostTrans, CreatedBy));
        allowedSet.add(fieldnum(ProjCostTrans, CreatedDateTime));
        allowedSet.add(fieldnum(ProjCostTrans, ModifiedBy));
        allowedSet.add(fieldnum(ProjCostTrans, ModifiedDateTime));
        allowedSet.add(fieldnum(ProjCostTrans, DefaultDimension));
        allowedSet.add(fieldnum(ProjCostTrans, TotalCostAmountCur));
        allowedSet.add(fieldnum(ProjCostTrans, TotalSalesAmountCur));
        allowedSet.add(fieldnum(ProjCostTrans, TransactionOrigin));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSetEmpl</Name>
				<Source><![CDATA[
    void getSetEmpl()
    {
        allowedSet.add(fieldnum(ProjEmplTrans, TransDate));
        allowedSet.add(fieldnum(ProjEmplTrans, ActivityNumber));
        allowedSet.add(fieldnum(ProjEmplTrans, TransId));
        allowedSet.add(fieldnum(ProjEmplTrans, CategoryId));
        allowedSet.add(fieldnum(ProjEmplTrans, Resource));
        allowedSet.add(fieldnum(ProjEmplTrans, ResourceCategory));
        allowedSet.add(fieldnum(ProjEmplTrans, Txt));
        allowedSet.add(fieldnum(ProjEmplTrans, TransIdRef));
        allowedSet.add(fieldnum(ProjEmplTrans, AdjRefTransId));
        allowedSet.add(fieldnum(ProjEmplTrans, CurrencyId));
        allowedSet.add(fieldnum(ProjEmplTrans, TaxGroupId));
        allowedSet.add(fieldnum(ProjEmplTrans, TaxItemGroupId));
        allowedSet.add(fieldnum(ProjEmplTrans, VoucherJournal));
        allowedSet.add(fieldnum(ProjEmplTrans, ProjId));
        allowedSet.add(fieldnum(ProjEmplTrans, Qty));
        allowedSet.add(fieldnum(ProjEmplTrans, LinePropertyId));
        allowedSet.add(fieldnum(ProjEmplTrans, CreatedBy));
        allowedSet.add(fieldnum(ProjEmplTrans, CreatedDateTime));
        allowedSet.add(fieldnum(ProjEmplTrans, ModifiedBy));
        allowedSet.add(fieldnum(ProjEmplTrans, ModifiedDateTime));
        allowedSet.add(fieldnum(ProjEmplTrans, DefaultDimension));
        allowedSet.add(fieldnum(ProjEmplTrans, TotalCostAmountCur));
        allowedSet.add(fieldnum(ProjEmplTrans, TotalSalesAmountCur));
        allowedSet.add(fieldnum(ProjEmplTrans, TransactionOrigin));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSetItem</Name>
				<Source><![CDATA[
    void getSetItem()
    {
        allowedSet.add(fieldnum(ProjItemTrans, TransDate));
        allowedSet.add(fieldnum(ProjItemTrans, ActivityNumber));
        allowedSet.add(fieldnum(ProjItemTrans, ProjTransId));
        allowedSet.add(fieldnum(ProjItemTrans, CategoryId));
        allowedSet.add(fieldnum(ProjItemTrans, Txt));
        allowedSet.add(fieldnum(ProjItemTrans, ProjTransIdRef));
        allowedSet.add(fieldnum(ProjItemTrans, AdjRefTransId));
        allowedSet.add(fieldnum(ProjItemTrans, CurrencyId));
        allowedSet.add(fieldnum(ProjItemTrans, TaxGroupId));
        allowedSet.add(fieldnum(ProjItemTrans, TaxItemGroupId));
        allowedSet.add(fieldnum(ProjItemTrans, VoucherPackingSlip));
        allowedSet.add(fieldnum(ProjItemTrans, ProjId));
        allowedSet.add(fieldnum(ProjItemTrans, Qty));
        allowedSet.add(fieldnum(ProjItemTrans, LinePropertyId));
        allowedSet.add(fieldnum(ProjItemTrans, CreatedBy));
        allowedSet.add(fieldnum(ProjItemTrans, CreatedDateTime));
        allowedSet.add(fieldnum(ProjItemTrans, ModifiedBy));
        allowedSet.add(fieldnum(ProjItemTrans, ModifiedDateTime));
        allowedSet.add(fieldnum(ProjItemTrans, DefaultDimension));
        allowedSet.add(fieldnum(ProjItemTrans, TotalCostAmountCur));
        allowedSet.add(fieldnum(ProjItemTrans, TotalSalesAmountCur));
        allowedSet.add(fieldnum(ProjItemTrans, TransactionOrigin));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSetRevenue</Name>
				<Source><![CDATA[
    void getSetRevenue()
    {
        allowedSet.add(fieldnum(ProjRevenueTrans, TransDate));
        allowedSet.add(fieldnum(ProjRevenueTrans, TransId));
        allowedSet.add(fieldnum(ProjRevenueTrans, CategoryId));
        allowedSet.add(fieldnum(ProjRevenueTrans, Resource));
        allowedSet.add(fieldnum(ProjRevenueTrans, Txt));
        allowedSet.add(fieldnum(ProjRevenueTrans, TransIdRef));
        allowedSet.add(fieldnum(ProjRevenueTrans, AdjRefTransId));
        allowedSet.add(fieldnum(ProjRevenueTrans, CurrencyId));
        allowedSet.add(fieldnum(ProjRevenueTrans, TaxGroupId));
        allowedSet.add(fieldnum(ProjRevenueTrans, TaxItemGroupId));
        allowedSet.add(fieldnum(ProjRevenueTrans, VoucherJournal));
        allowedSet.add(fieldnum(ProjRevenueTrans, ProjId));
        allowedSet.add(fieldnum(ProjRevenueTrans, Qty));
        allowedSet.add(fieldnum(ProjRevenueTrans, LinePropertyId));
        allowedSet.add(fieldnum(ProjRevenueTrans, CreatedBy));
        allowedSet.add(fieldnum(ProjRevenueTrans, CreatedDateTime));
        allowedSet.add(fieldnum(ProjRevenueTrans, ModifiedBy));
        allowedSet.add(fieldnum(ProjRevenueTrans, ModifiedDateTime));
        allowedSet.add(fieldnum(ProjRevenueTrans, DefaultDimension));
        allowedSet.add(fieldnum(ProjRevenueTrans, TotalSalesAmountCur));
        allowedSet.add(fieldnum(ProjRevenueTrans, ActivityNumber));
        allowedSet.add(fieldnum(ProjRevenueTrans, TransactionOrigin));
   }

]]></Source>
			</Method>
			<Method>
				<Name>getSetOnAccount</Name>
				<Source><![CDATA[
    void getSetOnAccount()
    {
        allowedSet.add(fieldnum(ProjOnaccTrans, TransDate));
        allowedSet.add(fieldnum(ProjOnaccTrans, TransId));
        allowedSet.add(fieldnum(ProjOnaccTrans, Description));
        allowedSet.add(fieldnum(ProjOnaccTrans, TransIdRef));
        allowedSet.add(fieldnum(ProjOnaccTrans, AdjRefTransId));
        allowedSet.add(fieldnum(ProjOnaccTrans, CurrencyId));
        allowedSet.add(fieldnum(ProjOnaccTrans, TaxGroupId));
        allowedSet.add(fieldnum(ProjOnaccTrans, TaxItemGroupId));
        allowedSet.add(fieldnum(ProjOnaccTrans, ProjId));
        allowedSet.add(fieldnum(ProjOnaccTrans, Qty));
        allowedSet.add(fieldnum(ProjOnaccTrans, CreatedBy));
        allowedSet.add(fieldnum(ProjOnaccTrans, CreatedDateTime));
        allowedSet.add(fieldnum(ProjOnaccTrans, ModifiedBy));
        allowedSet.add(fieldnum(ProjOnaccTrans, ModifiedDateTime));
        allowedSet.add(fieldnum(ProjOnaccTrans, DefaultDimension));
        allowedSet.add(fieldnum(ProjOnaccTrans, TotalSalesAmountCur));
        allowedSet.add(fieldnum(ProjOnaccTrans, ActivityNumber));
        allowedSet.add(fieldnum(ProjOnaccTrans, TransactionOrigin));
  }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        listPanel       = SysListPanelSet_Fields_Visualization::newForm(element, element.controlId(formControlStr(ProjAdjTreeCreateVisualization, ListPanelGroup)));
        inSet           = new Set(Types::Integer);
        allowedSet      = new Set(Types::Integer);

        super();

        if (!element.args().caller())
        {
            throw error("@SYS22539");
        }

        listPanel.init();

        viewSelected = listPanel.parmViewSelected();

        switch (element.args().caller().name())
        {
            case formstr(ProjTransEmpl) :
                transType = ProjTransType::Hour;
                this.getSetEmpl();

                availableData = ProjAdjTreeVisualizationLine::getFields(transType);
                listPanel.parmTableId(tablenum(ProjEmplTrans));
                break;

            case formstr(ProjTransCost)   :
                transType = ProjTransType::Cost;
                this.getSetCost();

                availableData = ProjAdjTreeVisualizationLine::getFields(transType);
                listPanel.parmTableId(tablenum(ProjCostTrans));
                break;

            case formstr(ProjTransItem)   :
                transType = ProjTransType::Item;
                this.getSetItem();

                availableData = ProjAdjTreeVisualizationLine::getFields(transType);
                listPanel.parmTableId(tablenum(ProjItemTrans));
                break;

            case formstr(ProjTransRevenue) :
                transType = ProjTransType::Revenue;
                this.getSetRevenue();

                availableData = ProjAdjTreeVisualizationLine::getFields(transType);
                listPanel.parmTableId(tablenum(ProjRevenueTrans));
                break;
            
            case formstr(ProjTransOnAcc) :
                transType = ProjTransType::OnAccount;
                this.getSetOnAccount();

                availableData = ProjAdjTreeVisualizationLine::getFields(transType);
                listPanel.parmTableId(tablenum(ProjOnAccTrans));
                break;

        }

        listPanel.parmAllowedSet(allowedSet);

        listPanel.parmInSet(inSet);
        listPanel.addData(availableData);

        listPanel.fill();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ProjAdjTreeVisualizationLine  visLine;
            int                    i = 0;

            viewSelected = listPanel.parmViewSelected();

            if (viewSelected.getCount() == 0)
            {
                checkFailed("@SYS133145");
                return;
            }

            // Copy data from left Panel into container
            for (i = 0; i < viewSelected.getCount(); i++)
            {
                selectedData = conins(selectedData, i + 1, viewSelected.getItem(i).data());
            }

            visLine.updateRecord(selectedData, transType);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS133492</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ListPanelGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>