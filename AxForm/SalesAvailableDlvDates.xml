<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SalesAvailableDlvDates</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class SalesAvailableDlvDates extends FormRun
    {
        #resAppl

        SalesCalcAvailableDlvDates  salesCalcAvailableDlvDates;
        SalesDeliveryDateControlMap deliveryDateControlMap;

        InventLocationId            selectedInventLocationId;
        DlvModeId                   selectedDlvModeId;
        InventLocationId            selectedInventSiteId;

        QueryBuildRange             dlvModeIdRange;
        QueryBuildRange             inventLocationIdRange;
        QueryBuildRange             inventSiteIdRange;

        boolean                     initMode;

        SysInfolog                  sysInfolog;
        TmpInfolog                  tmpInfolog;
        ImageListAppl_Infolog       imageList;
        int                         offsetSeq;
        int                         infologLineStart;
        int                         firstPrefix;
        SysInfolog                  tmpInfoTable;
        int                         treeId[];
        int                         sequenceCounter;
        [FormObservable]
        SalesOrderEntryDeadlineUser orderEntryDeadlineUser;
        [FormObservable]
        SalesOrderEntryDeadlineSite orderEntryDeadlineSite;
        [FormObservable]
        Timezone                    shippingLocationTimeZone;

        [FormObservable]
        utcdatetime                 currentUserDateTime;
        [FormObservable]
        utcdatetime                 currentShippingLocationDateTime;

        SalesDeliveryDateControlType        salesdeliveryControlType;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        salesCalcAvailableDlvDates.parmShippingDateAvailableSelected(salesAvailableDlvDatesTmp.AvailableShippingDate);
        salesCalcAvailableDlvDates.parmReceiptDateAvailableSelected(salesAvailableDlvDatesTmp.AvailableReceiptDate);
        salesCalcAvailableDlvDates.parmInventLocationIdSelected(salesAvailableDlvDatesTmp.InventLocationId);
        salesCalcAvailableDlvDates.parmInventSiteIdSelected(salesAvailableDlvDatesTmp.InventSiteId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCurrentShippingLocationDateTime</Name>
				<Source><![CDATA[
    display utcdatetime displayCurrentShippingLocationDateTime()
    {
        return currentShippingLocationDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCurrentUserDateTime</Name>
				<Source><![CDATA[
    display utcdatetime displayCurrentUserDateTime()
    {
        return currentUserDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOrderEntryDeadlineSite</Name>
				<Source><![CDATA[
    display SalesOrderEntryDeadlineSite displayOrderEntryDeadlineSite()
    {
        return orderEntryDeadlineSite;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOrderEntryDeadlineUser</Name>
				<Source><![CDATA[
    display SalesOrderEntryDeadlineUser displayOrderEntryDeadlineUser()
    {
        return orderEntryDeadlineUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayShippingLocationTimeZone</Name>
				<Source><![CDATA[
    display SalesOrderEntryShippingLocationTimeZone displayShippingLocationTimeZone()
    {
        return enum2str(shippingLocationTimeZone);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayUserTimeZone</Name>
				<Source><![CDATA[
    display SalesOrderEntryUserTimeZone displayUserTimeZone()
    {
        return enum2str(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorTreeBuild</Name>
				<Source><![CDATA[
    // This method is based on method 'viewBuild' in class 'Info'
    #define.MaxErrors(10)

    void errorTreeBuild()
    {
        SysInfologMessageStruct logLine;

        int                  i = 1, j;
        Exception            exception;
        str 12               time = time2str(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()),0,0);
        int                  resNumber;
        int                  batchCount;

        FormTreeItem         treeItem;
        int                  imageNumber;

        int                  parentId;
        SysInfoLogStr        niceName;

        TmpInfolog           tmpLookup;

        int                  oldParentId;
        SysInfologEnumerator enum;
        InfologData          data;
        boolean              hasPrefix;
        int                  errorsPerBatch;
        int                  treeItems;
        RefRecId             tmpActionId[];
        int                  infologLineEnd;

        #resource
        #resAppl

    TmpInfolog selectInfolog()
    {
        TmpInfolog tmpinfolog2;
        tmpinfolog2.setTmpData(tmpInfolog);

        select tmpinfolog2
            where tmpinfolog2.Seq == 1;

        if (tmpinfolog2)
            return tmpinfolog2;
        return null;
    }

    TmpInfolog selectInfolog2(SysInfologPrefix _prefix, int _parentid)
    {
        TmpInfolog tmpinfolog2;
        tmpinfolog2.setTmpData(tmpInfolog);

        select tmpinfolog2
            where tmpinfolog2.Parent == _parentid &&
                  tmpinfolog2.Prefix == _prefix;

        if (tmpinfolog2)
            return tmpinfolog2;
        return null;
    }
        errorsPerBatch = 10;
        offsetSeq      = 1;
        infologLineEnd = infologLine();
        data           = infolog.cut(salesCalcAvailableDlvDates.parmInfologLineStart(),infologLineEnd);
        enum           = SysInfologEnumerator::newData(data);

        if (conlen(data)<=1)
            return;

        if (enum.length() > #maxerrors)
        {
            enum.delete(#maxerrors);
            enum.add(Exception::Warning, strfmt("@SYS86217", #maxerrors));
        }

        enum.reset();
        enum.moveNext();
        logLine  = SysInfologMessageStruct::construct(enum.currentMessage());

        tmpInfolog = selectInfoLog();

        if (!tmpInfolog)
            this.errorTreeInitBuild();

        hasPrefix = false;

        enum.reset();
        i = 1;
        while (enum.moveNext())
        {
            logLine  = SysInfologMessageStruct::construct(enum.currentMessage());
            exception = enum.currentException();

            switch (exception)
            {
                case Exception::Info:
                    imageNumber = imageList.image(#ImageInfo);
                    resNumber   = #RES_INFOLOG_L_INFO;
                    break;

                case Exception::Warning:
                    imageNumber = imageList.image(#ImageWarning);
                    resNumber   = #RES_INFOLOG_L_WARNING;
                    break;

                default :
                    imageNumber = imageList.image(#ImageError);
                    resNumber   = #RES_INFOLOG_L_ERROR;
                    break;
            }
            parentId = 1;   //header has id = 1

            for (j=firstPrefix; j<=logLine.prefixDepth(); j++)
            {
                tmpLookup.setTmpData(tmpInfolog);
                tmpLookup = selectInfolog2(logLine.preFixTextElement(j), parentid);

                if (tmpLookup)
                {
                    parentId = tmpLookup.Seq;
                }
                else
                {
                    batchCount           = 0;
                    tmpInfolog.Name      = logLine.preFixTextElement(j);
                    tmpInfolog.Parent    = parentId;
                    tmpInfolog.ConIdx    = 0;
                    tmpInfolog.Image     = imageList.image(#ImageNote);
                    tmpInfolog.Seq       = this.errorTreeSequence();
                    tmpInfolog.insert();
                    parentId             = tmpInfolog.Seq;
                }
            }
            if (parentId != oldParentId)
            {
                batchCount  = 0;
                oldParentId = parentId;
            }

            if (batchCount <= errorsPerBatch)
            {
                tmpInfolog.Parent   = parentId;
                tmpInfolog.Seq      = this.errorTreeSequence();

                if (batchCount == errorsPerBatch)
                {
                    tmpInfolog.Name     = strfmt("@SYS86217", errorsPerBatch);
                    tmpInfolog.Image    = imageList.image(#ImageWarning);
                    tmpInfolog.ConIdx   = i;
                }
                else
                {
                    if (enum.currentActionClassId() ||
                        enum.currentHelpUrl())
                    {
                        tmpInfoTable.HelpUrl       = enum.currentHelpUrl();
                        tmpInfoTable.Action        = enum.currentActionClassData();
                        tmpInfoTable.ActionClassId = enum.currentActionClassId();
                        tmpInfoTable.insert();
                        tmpActionId[i] = tmpInfoTable.RecId;
                    }

                    tmpInfolog.Name     = logLine.message();
                    tmpInfolog.Image    = imageNumber;
                    tmpInfolog.ConIdx   = i;
                }
                tmpInfolog.doInsert();
                batchCount++;
            }
            i++;
        }

        while select forupdate tmpInfolog
            order by Seq
            where tmpInfolog.Seq > offsetSeq
        {
            niceName = strRemoveCr(substr(tmpInfolog.Name,1,254));
            treeItem = new FormTreeItem(niceName, tmpInfolog.Image);
            treeItems++;
            treeItem.data(0);
            treeItem.stateExpanded(true);

            treeId[tmpInfolog.Seq] = errorTree.addItem(treeId[tmpInfolog.Parent], 0, treeItem);
            if (treeId[tmpInfolog.Seq])
            {
                treeItem           = errorTree.getItem(treeId[tmpInfolog.Seq]);

                if (tmpInfolog.ConIdx)      //not prefix
                {
                    select firstonly forupdate Text, Image, ActionClassId, HelpUrl, RecId from tmpInfoTable
                        where tmpInfoTable.RecId == tmpActionId[tmpInfolog.ConIdx];

                    tmpInfoTable.Text  = tmpInfolog.Name;
                    tmpInfoTable.Image = tmpInfolog.Image;
                    tmpInfoTable.write();
                    tmpInfolog.delete();
                    if (tmpInfoTable.ActionClassId)
                        treeItem.overlayImage(imageList.image(#ImageOverlayAction));
                    else
                    {
                        if (tmpInfoTable.HelpUrl)
                            treeItem.overlayImage(imageList.image(#ImageOverlayHelp));
                    }
                }
                else
                {
                    tmpInfoTable.Action        = connull();
                    tmpInfoTable.ActionClassId = 0;
                    tmpInfoTable.Text          = tmpInfolog.Name;
                    tmpInfoTable.Image         = tmpInfolog.Image;
                    tmpInfoTable.insert();
                    offsetSeq = tmpInfolog.Seq;
                    treeItem.children(true);
                }
                treeItem.data(tmpInfoTable.RecId);
                errorTree.setItem(treeItem);
            }
        }
        salesCalcAvailableDlvDates.parmTmpInfoTable(tmpInfoTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorTreeInitBuild</Name>
				<Source><![CDATA[
    // This method is based on method 'newHeadLine' in class 'Info'
    void errorTreeInitBuild()
    {
        #Resource
        #ResAppl

        str 10          time = time2str(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()),1,1);
        FormTreeItem    formTreeItem;
        SysInfolog      tmpInfoTable2;
        if (!imageList)
            imageList = new ImageListAppl_Infolog();

        errorTree.setImagelist(imageList.imageList());

        firstPrefix = 1;
        tmpInfolog.Name      = "@SYS14327"+' ('+time+')';

        tmpInfolog.Parent    = 0;
        tmpInfolog.Image     = imageList.image(#ImageEnvelopeOpen);
        tmpInfolog.Seq       = this.errorTreeSequence();
        tmpInfolog.insert();

        tmpInfoTable2.setTmp();
        tmpInfoTable2.setTmpData(tmpInfoTable);
        tmpInfoTable2.Text    = tmpInfolog.Name;
        tmpInfoTable2.insert();
        formTreeItem         = new FormTreeItem(tmpInfolog.Name, tmpInfolog.Image);
        formTreeItem.stateBold(true);
        formTreeItem.stateExpanded(true);

        treeId[1] = errorTree.addItem(0,FormTreeAdd::First, formTreeItem);
        if (!treeId[1])
            throw error(strfmt("@SYS76877",tmpInfolog.Name));

        errorTree.selectSetFirstVisible(treeId[1]);
        formTreeItem = errorTree.getItem(treeId[1]);
        formTreeItem.data(tmpInfoTable2.RecId);
        errorTree.setItem(formTreeItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorTreeSequence</Name>
				<Source><![CDATA[
    private int errorTreeSequence()
    {
        sequenceCounter++;
        return sequenceCounter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAction</Name>
				<Source><![CDATA[
    void executeAction()
    {
        DictClass     dictClass;
        SysInfoAction sysInfoAction;

        if (sysInfolog.ActionClassId)
        {
            dictClass = new DictClass(sysInfolog.ActionClassId);
            sysInfoAction = dictClass.makeObject();
            sysInfoAction.unpack(sysInfolog.Action, infolog.infoActionObject());
            sysInfoAction.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>imagelist</Name>
				<Source><![CDATA[
    ImageListAppl_Infolog imagelist()
    {
        if (!imageList)
            imageList = new ImageListAppl_Infolog();

        return imageList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (! element.args().caller())
            throw error("@SYS22539");

        initMode = true;

        salesCalcAvailableDlvDates = element.args().caller();

        super();

        this.selectDlvModeId(true,salesCalcAvailableDlvDates.parmDlvModeIdSelected());

        this.initSiteAndWarehouseControls();

        selectCalcDays.value(salesCalcAvailableDlvDates.parmCalcDays());
        leadTime.value(salesCalcAvailableDlvDates.salesLeadTime(NoYes::No));
        transportDays.value(salesCalcAvailableDlvDates.transportDays());

        selectDlvCalcType.selection(salesCalcAvailableDlvDates.parmDeliveryDateControlType());
        selectDlvCalcType.allowEdit(salesCalcAvailableDlvDates.parmTempDeliveryDateControlType());
        salesdeliveryControlType = salesCalcAvailableDlvDates.parmDeliveryDateControlType();

        actualShipDatesGroup.visible(salesCalcAvailableDlvDates.parmShowActualShipDates());
        confirmationGroup.visible(salesCalcAvailableDlvDates.parmShowConfirmation());

        transferToConfirmedButton.visible(salesCalcAvailableDlvDates.parmShowTransferToConfirmedButton());
        transferToRequestedButton.visible(salesCalcAvailableDlvDates.parmShowTransferToRequestedButton());
        disableDlvDateControlButton.visible(salesCalcAvailableDlvDates.parmShowDisableDlvDateControlButton());

        selectDlvModeId.allowEdit(salesCalcAvailableDlvDates.allowEditDlvMode());
        selectInventlocationId.allowEdit(salesCalcAvailableDlvDates.allowEditInventLocation());
        selectInventSiteId.visible(salesCalcAvailableDlvDates.allowEditInventSite());

        if (salesCalcAvailableDlvDates.parmErrorText())
        {
            treeGroup.visible(true);
            salesCalcAvailableDlvDates.parmErrorTreeCtrl(errorTree);
            element.errorTreeBuild();
        }

        orderEntryDeadlineUser = salesCalcAvailableDlvDates.parmOrderEntryDeadlineUser();
        orderEntryDeadlineSite = salesCalcAvailableDlvDates.parmOrderEntryDeadlineSite();
        this.setCurrentTimes();

        initMode = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSiteAndWarehouseControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes site and warehouse controls on the form.
    /// </summary>
    protected void initSiteAndWarehouseControls()
    {
        if (salesCalcAvailableDlvDates is IntercompanySalesCalcAvailableDlvDates_SalesLine)
        {
            var salesLineDlvDates = salesCalcAvailableDlvDates as IntercompanySalesCalcAvailableDlvDates_SalesLine;

            SalesLine_DS.create();
            salesLine.data(salesLineDlvDates.parmSalesLine());

            IntercompanySalesLineSourcing.visible(true);
            InventDimensions.visible(false);

            // Temporary table with dates is coming from other company
            if (salesLine.isDirectDelivery())
            {
                inventLocationIdRange.enabled(false);
                inventSiteIdRange.enabled(false);
                dlvModeIdRange.enabled(false);

                selectDlvModeId.visible(false);

                SalesAvailableDlvDatesTmpDataAreaId.visible(true);
                SalesAvailableDlvDatesTmpDataAreaId.text(salesLineDlvDates.getSalesAvailableDlvDatesTmpDataAreaId());
            }
        }
        else
        {
            this.selectInventlocationId(true,salesCalcAvailableDlvDates.parmInventLocationIdSelected());
            this.selectInventSiteId(true,salesCalcAvailableDlvDates.parmInventSiteIdSelected());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        TmpSalesAvailableShipAndReceiptDates_PossibleShippingDate.sort(SortOrder::Ascending);

        super();

        element.args().lookupRecord(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmpBestGuess());
        salesAvailableDlvDatesTmp_ds.research(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesLeadTimeInWorkDays</Name>
				<Source><![CDATA[
    public display CalendarDays isSalesLeadTimeInWorkDays()
    {
        return SalesParameters::find().CalendarDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectDeliveryDateControlType</Name>
				<Source><![CDATA[
    edit SalesDeliveryDateControlType selectDeliveryDateControlType(boolean     set,
                                                 SalesDeliveryDateControlType  _dlvControlType)
    {
        SalesAvailableDlvDatesTmp  salesAvailableDlvDatesTmpBestGuessBuf;

        if (set)
        {
            if (!initMode)
            {
                salesdeliveryControlType = _dlvControlType;

                salesAvailableDlvDatesTmpBestGuessBuf = salesAvailableDlvDatesTmp.data();
                salesCalcAvailableDlvDates.parmDeliveryDateControlType(salesdeliveryControlType);
                salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates();

                selectCalcDays.value(salesCalcAvailableDlvDates.parmCalcDays());
                leadTime.value(salesCalcAvailableDlvDates.salesLeadTime(NoYes::No));
                transportDays.value(salesCalcAvailableDlvDates.transportDays());

                salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());
                salesAvailableDlvDatesTmp_ds.executeQuery();
            }
        }

        return  salesdeliveryControlType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectDlvModeId</Name>
				<Source><![CDATA[
    edit DlvModeId selectDlvModeId(boolean     set,
                                   DlvModeId  _dlvModeId)
    {
        SalesAvailableDlvDatesTmp  salesAvailableDlvDatesTmpBestGuessBuf;
        if (set)
        {
            if (DlvMode::exist(_dlvModeId) || _dlvModeId == '')
            {
                selectedDlvModeId = _dlvModeId;
                dlvModeIdRange.value(_dlvModeId);

                if (!initMode)
                {
                    salesAvailableDlvDatesTmpBestGuessBuf = salesAvailableDlvDatesTmp.data();

                    salesCalcAvailableDlvDates.parmDlvModeIdSelected(_dlvModeId);
                    salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates();

                    selectCalcDays.value(salesCalcAvailableDlvDates.parmCalcDays());
                    leadTime.value(salesCalcAvailableDlvDates.salesLeadTime(NoYes::No));
                    transportDays.value(salesCalcAvailableDlvDates.transportDays());

                    salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());
                    salesAvailableDlvDatesTmp_ds.executeQuery();
                }
            }
            else
            {
                warning(strfmt("@SYS111451",_dlvModeId, fieldid2pname(tablenum(DlvMode),fieldnum(DlvMode, Code)), tablestr(DlvMode)));
            }
        }
        return selectedDlvModeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventlocationId</Name>
				<Source><![CDATA[
    edit InventLocationId selectInventlocationId(boolean            set,
                                                 InventLocationId  _inventLocationId)
    {
        SalesAvailableDlvDatesTmp  salesAvailableDlvDatesTmpBestGuessBuf;
        if (set)
        {
            if (InventLocation::exist(_inventLocationId) || _inventLocationId == '')
            {
                selectedInventLocationId = _inventLocationId;
                inventLocationIdRange.value(_inventLocationId);

                if (!initMode)
                {
                    salesAvailableDlvDatesTmpBestGuessBuf = salesAvailableDlvDatesTmp.data();

                    if (_inventLocationId)
                    {
                        selectedInventSiteId = InventLocation::find(_inventLocationId).InventSiteId;
                        inventSiteIdRange.value(selectedInventSiteId);
                        salesCalcAvailableDlvDates.parmInventSiteIdSelected(selectedInventSiteId);
                        salesCalcAvailableDlvDates.setOrderEntryDeadlines(salesCalcAvailableDlvDates);
                        orderEntryDeadlineUser = salesCalcAvailableDlvDates.parmOrderEntryDeadlineUser();
                        orderEntryDeadlineSite = salesCalcAvailableDlvDates.parmOrderEntryDeadlineSite();
                    }

                    salesCalcAvailableDlvDates.parmInventLocationIdSelected(_inventLocationId);
                    salesCalcAvailableDlvDates.parmInventLocationTransportShipping(_inventLocationId);
                    salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates();

                    selectCalcDays.value(salesCalcAvailableDlvDates.parmCalcDays());
                    leadTime.value(salesCalcAvailableDlvDates.salesLeadTime(NoYes::No));
                    transportDays.value(salesCalcAvailableDlvDates.transportDays());

                    salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());
                    salesAvailableDlvDatesTmp_ds.executeQuery();
                }
            }
            else
            {
                warning(strfmt("@SYS111451",_inventLocationId, fieldid2pname(tablenum(InventLocation),fieldnum(InventLocation, InventLocationId)), tablestr(InventLocation)));
            }
        }
        return selectedInventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventSiteId</Name>
				<Source><![CDATA[
    edit InventSiteId selectInventSiteId(boolean       set,
                                         InventSiteId  _inventSiteId)
    {
        SalesAvailableDlvDatesTmp  salesAvailableDlvDatesTmpBestGuessBuf;
        if (set)
        {
            if (InventSite::exist(_inventSiteId) || _inventSiteId == '')
            {
                selectedInventSiteId = _inventSiteId;
                inventSiteIdRange.value(_inventSiteId);

                if (!initMode)
                {
                    salesAvailableDlvDatesTmpBestGuessBuf = salesAvailableDlvDatesTmp.data();

                    selectedInventLocationId = '';
                    inventLocationIdRange.value(selectedInventLocationId);
                    salesCalcAvailableDlvDates.parmInventSiteIdSelected(_inventSiteId);
                    salesCalcAvailableDlvDates.parmInventLocationTransportShipping('');
                    salesCalcAvailableDlvDates.parmInventLocationIdSelected('');
                    salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates();

                    selectCalcDays.value(salesCalcAvailableDlvDates.parmCalcDays());
                    leadTime.value(salesCalcAvailableDlvDates.salesLeadTime(NoYes::No));
                    transportDays.value(salesCalcAvailableDlvDates.transportDays());
                    salesCalcAvailableDlvDates.setOrderEntryDeadlines(salesCalcAvailableDlvDates);
                    orderEntryDeadlineUser = salesCalcAvailableDlvDates.parmOrderEntryDeadlineUser();
                    orderEntryDeadlineSite = salesCalcAvailableDlvDates.parmOrderEntryDeadlineSite();
                    this.setCurrentTimes();
                    salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());
                    salesAvailableDlvDatesTmp_ds.executeQuery();
                }
            }
            else
            {
                warning(strfmt("@SYS111451",_inventSiteId, fieldid2pname(tablenum(InventSite),fieldnum(InventSite, SiteId)), tablestr(InventSite)));
            }
        }
        return selectedInventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrentTimes</Name>
				<Source><![CDATA[
    void setCurrentTimes()
    {
        utcdatetime                 utcTimeNow;
        shippingLocationTimeZone   = salesCalcAvailableDlvDates.getShippingLocationTimeZone();
        utcTimeNow                 = DateTimeUtil::utcNow();
        currentShippingLocationDateTime = DateTimeUtil::applyTimeZoneOffset(utcTimeNow, shippingLocationTimeZone);
        currentUserDateTime         = DateTimeUtil::applyTimeZoneOffset(utcTimeNow, DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SalesAvailableDlvDatesTmp</Name>
				<Methods>
					<Method>
						<Name>confirmedShipDate</Name>
						<Source><![CDATA[
        display SalesShippingDateConfirmed   confirmedShipDate(SalesAvailableDlvDatesTmp _salesAvailableDlvDatesTmp)
        {
            if ( salesCalcAvailableDlvDates.deliveryDateControlMap().ShippingDateConfirmed == _salesAvailableDlvDatesTmp.AvailableShippingDate)
            {
                return _salesAvailableDlvDatesTmp.AvailableShippingDate;
            }

            return dateNull();
        }

]]></Source>
					</Method>
					<Method>
						<Name>inLeadTime</Name>
						<Source><![CDATA[
        display ImageRes inLeadTime(SalesAvailableDlvDatesTmp _salesAvailableDlvDatesTmp)
        {
            if (_salesAvailableDlvDatesTmp.InLeadtime)
            {
                return #ImageWarning;
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());

            dlvModeIdRange          = this.query().dataSourceTable(tablenum(SalesAvailableDlvDatesTmp)).addRange(fieldnum(SalesAvailableDlvDatesTmp,DlvModeId));
            inventLocationIdRange   = this.query().dataSourceTable(tablenum(SalesAvailableDlvDatesTmp)).addRange(fieldnum(SalesAvailableDlvDatesTmp,InventLocationId));
            inventSiteIdRange       = this.query().dataSourceTable(tablenum(SalesAvailableDlvDatesTmp)).addRange(fieldnum(SalesAvailableDlvDatesTmp,InventSiteId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>lastConfirmId</Name>
						<Source><![CDATA[
        display CustConfirmDocNum lastConfirmId(SalesAvailableDlvDatesTmp _salesAvailableDlvDatesTmp)
        {
            CustConfirmDocNum   lastConfirmDocNum;
            TransDate           lastConfirmDate;

            [lastConfirmDate, lastConfirmDocNum] = salesCalcAvailableDlvDates.lastConfirmation();

            if (lastConfirmDate
                &&  _salesAvailableDlvDatesTmp.AvailableShippingDate == lastConfirmDate)
            {
                return lastConfirmDocNum;
            }

            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>requestedShipDate</Name>
						<Source><![CDATA[
        display SalesShippingDateRequested      requestedShipDate(SalesAvailableDlvDatesTmp _salesAvailableDlvDatesTmp)
        {
            if ( salesCalcAvailableDlvDates.deliveryDateControlMap().ShippingDateRequested == _salesAvailableDlvDatesTmp.AvailableShippingDate)
            {
                return _salesAvailableDlvDatesTmp.AvailableShippingDate;
            }

            return dateNull();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>SalesLine</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            // Suspend as sales line record is filled from caller arguments
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Suspend write as sales line modification are only for simulation purposes
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            // Suspend validate write as sales line modification are only for simulation purposes
            //super();

            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ErrorTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        boolean expanding(int idx, FormTreeExpand action, anytype data)
        {
            FormTreeItem      item = this.getItem(idx);
            boolean ret;

            element.imagelist();

            if ((item.image() == imageList.image(#ImageEnvelopeClosed)) && (action == FormTreeExpand::Expand))
            {
                item.image(imageList.image(#ImageEnvelopeOpen));
                item.selectedImage(item.image());
                this.setItem(item);
            }
            else
            if ((item.image() == imageList.image(#ImageEnvelopeOpen))&&(action == FormTreeExpand::Collapse))
            {
                item.image(imageList.image(#ImageEnvelopeClosed));
                item.selectedImage(item.image());
                this.setItem(item);
            }
            ret = super(idx, action, data);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>selectInventlocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            InventLocation       inventLocation;
            Args                 args = new Args();

            if (this.valueStr())
            {
                inventLocation = InventLocation::find(this.valueStr());
                if (inventLocation)
                {
                    args.record(inventLocation);
                }
            }

            args.caller(this);
            new MenuFunction(menuitemdisplaystr(InventLocations), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (selectInventSiteId.text())
            {
                InventLocation::lookupBySiteIdAllTypes(this, selectInventSiteId.text());
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectCalcDays</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            SalesAvailableDlvDatesTmp  salesAvailableDlvDatesTmpBestGuessBuf = salesAvailableDlvDatesTmp.data();

            ret = super();

            salesCalcAvailableDlvDates.parmCalcDays(this.value());
            salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates();
            this.value(salesCalcAvailableDlvDates.parmCalcDays());
            salesAvailableDlvDatesTmp.setTmpData(salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp());
            salesAvailableDlvDatesTmp_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        public str toolTip()
        {
            if (salesAvailableDlvDatesTmp.InLeadtime)
            {
                if (salesAvailableDlvDatesTmp.AvailableShippingDate < salesCalcAvailableDlvDates.effectiveOrderDate())
                {
                    return strfmt("@SYS119912",date2StrUsr(salesAvailableDlvDatesTmp.AvailableShippingDate, DateFlags::FormatAll));
                }
                else
                {
                    return "@SYS88280";
                }
            }
            else
            {
                return super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>lastConfirmId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Common              actualTable;
            SalesTable          salesTable;
            SalesId             salesId;
            Args                args = new Args();

            actualTable = salesCalcAvailableDlvDates.deliveryDateControlMap();
            salesId = actualTable.(fieldname2id(tablenum(SalesTable),fieldstr(SalesTable,SalesId)));

            if (salesId)
            {
                salesTable = SalesTable::find(salesId);

                if (salesTable)
                {
                    args.record(salesTable);
                    args.caller(this);
                    new MenuFunction(menuitemdisplaystr(CustConfirmJournal), MenuItemType::Display).run(args);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DisableDlvDateControlButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            salesCalcAvailableDlvDates.parmDisableDeliveryDateControl(true);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToConfirmedButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (salesCalcAvailableDlvDates.interCompanyDirectDeliveryOrig())
            {
                error("@SYS98797");
            }
            else
            {
                salesCalcAvailableDlvDates.parmReturnConfirmedDates(NoYes::Yes);
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToRequestedButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (salesCalcAvailableDlvDates.interCompanyDerivedOrder())
            {
                error("@SYS98796");
            }
            else
            {
                salesCalcAvailableDlvDates.parmReturnConfirmedDates(NoYes::No);
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SalesAvailableDlvDatesTmp</Name>
			<Table>SalesAvailableDlvDatesTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AvailableReceiptDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailableShippingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvModeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InLeadtime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SalesLine</Name>
			<Table>SalesLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementSkipAutoLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BarCodeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Complete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegionName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteInternalRef_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDocDate_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDocNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsName_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDateControlType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTaxGroup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTaxItemGroup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedRetQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransIdReturn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceGTDId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemReplaced</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCROrderLine2PriceHistoryRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLnPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingUnitQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribAutoRes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWExpectedRetQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWInventDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsExcludeFromRebate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsSameLot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsSameLotOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceAgreementDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjProposalInventQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjProposalQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchorderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuantityErrorCorrectionMethods</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainSalesFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainSalesPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailBlockQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnAllowReservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnArrivalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnClosedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDispositionCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Scrap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierDlvType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingInventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingInventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipCreateMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourcingCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourcingInventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourcingInventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourcingOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourcingVendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticValue_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatTriangularDeal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StockedProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAutogenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnderDeliveryPct</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>Edit</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Caption xmlns="">@SYS88257</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TreeGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>306783378</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>ErrorTree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ColorScheme>WindowsPalette</ColorScheme>
						<LinesAtRoot>No</LinesAtRoot>
					</AxFormControl>
				</Controls>
				<ColorScheme>WindowsPalette</ColorScheme>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Head</Name>
				<ElementPosition>613566756</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>selectDlvModeId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>selectDlvModeId</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>InventDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>selectInventSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>selectInventSiteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>selectInventlocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>selectInventlocationId</DataMethod>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>IntercompanySalesLineSourcing</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SalesLine_SourcingCompanyId</Name>
								<AllowEdit>No</AllowEdit>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SourcingCompanyId</DataField>
								<DataSource>SalesLine</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SalesLine_SourcingInventSiteId</Name>
								<AllowEdit>No</AllowEdit>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SourcingInventSiteId</DataField>
								<DataSource>SalesLine</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SalesLine_SourcingInventLocationId</Name>
								<AllowEdit>No</AllowEdit>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SourcingInventLocationId</DataField>
								<DataSource>SalesLine</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SalesAvailableDlvDatesTmpDataAreaId</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>DataAreaId</ExtendedDataType>
								<Label>@Intercompany:SalesAvailableDlvDatesTmpDataAreaId</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>selectDlvCalcType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>selectDeliveryDateControlType</DataMethod>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>LeadTime</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>LeadTimeDelivery</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>isSalesLeadTimeInWorkDays</Name>
						<AllowEdit>No</AllowEdit>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>isSalesLeadTimeInWorkDays</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>TransportDays</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_SalesAndMarketing:SalesAvailableDlvDates_TransportDays</HelpText>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS88234</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DateTimeGroup</Name>
				<ElementPosition>920350134</ElementPosition>
				<ExtendedStyle>tabularFields</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Pattern>TabularFields</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Caption</Name>
						<ExtendedStyle>tabularFields_title</ExtendedStyle>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Header</Name>
						<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>Space</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text></Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>OrderEntryDeadlineLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS111450</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>CurrentLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS6042</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>TimeZoneLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS120836</Text>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>MyTimeRow</Name>
						<ExtendedStyle>tabularFields_row</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MyTimeLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS111308</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>TimeEditUser</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayOrderEntryDeadlineUser</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>displayCurrentUserDateTime</Name>
								<AllowEdit>No</AllowEdit>
								<Type>DateTime</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayCurrentUserDateTime</DataMethod>
								<Label>@SCM:MyCurrentLocalTime</Label>
								<ShowLabel>No</ShowLabel>
								<TimezonePreference>NoConversion</TimezonePreference>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>displayUserTimeZone</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayUserTimeZone</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ShippingLocationTimeRow</Name>
						<ExtendedStyle>tabularFields_row</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>ShippingLocationTimeLabel</Name>
								<AllowEdit>No</AllowEdit>
								<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS111306</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTimeControl">
								<Name>TimeEditSite</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Time</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayOrderEntryDeadlineSite</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>displayCurrentShippingLocationDateTime</Name>
								<Type>DateTime</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayCurrentShippingLocationDateTime</DataMethod>
								<Label>@SCM:ShippingLocationCurrentLocalTime</Label>
								<ShowLabel>No</ShowLabel>
								<TimezonePreference>NoConversion</TimezonePreference>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>displayShippingLocationTimeZone</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayShippingLocationTimeZone</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Footer</Name>
						<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AllowUserSetup>No</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>None</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Lines</Name>
				<ElementPosition>1227133512</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>System</Name>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Pattern>CustomFilters</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SelectCalcDays</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS88277</HelpText>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS88278</Label>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>availableShippingDay</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>availableShippingDay</DataMethod>
								<DataSource>SalesAvailableDlvDatesTmp</DataSource>
								<Label>@SYS4569</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>TmpSalesAvailableShipAndReceiptDates_PossibleShippingDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>AvailableShippingDate</DataField>
								<DataSource>SalesAvailableDlvDatesTmp</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>availableReceiptDay</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>availableReceiptDay</DataMethod>
								<DataSource>SalesAvailableDlvDatesTmp</DataSource>
								<Label>@SYS4569</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>TmpSalesAvailableShipAndReceiptDates_PossibleReceiptDate</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>AvailableReceiptDate</DataField>
								<DataSource>SalesAvailableDlvDatesTmp</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormImageControl">
								<Name>OK</Name>
								<AlignControl>No</AlignControl>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>14</Height>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>Image</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>14</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>inLeadTime</DataMethod>
								<DataSource>SalesAvailableDlvDatesTmp</DataSource>
								<Imagemode>SizeToFit</Imagemode>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ActualShipDatesGroup</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>requestedShipDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>requestedShipDate</DataMethod>
										<DataSource>SalesAvailableDlvDatesTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>confirmedShipDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>confirmedShipDate</DataMethod>
										<DataSource>SalesAvailableDlvDatesTmp</DataSource>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ConfirmationGroup</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>lastConfirmId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>lastConfirmId</DataMethod>
										<DataSource>SalesAvailableDlvDatesTmp</DataSource>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
							</AxFormControl>
						</Controls>
						<DataSource>SalesAvailableDlvDatesTmp</DataSource>
						<MultiSelect>No</MultiSelect>
					</AxFormControl>
				</Controls>
				<Caption>@SYS88257</Caption>
				<DataSource>SalesAvailableDlvDatesTmp</DataSource>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1840700268</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>DisableDlvDateControlButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS89965</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@SYS88808</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>TransferToConfirmedButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS89966</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@SYS88871</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>TransferToRequestedButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS89964</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@SYS88872</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS89094</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
