<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SpecTransViewerDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/// <summary>
/// The <c>SpecTransViewerDialog</c> provides users with options for searching open, marked transactions.
/// Users may choose from multiple legal entities, restricted by access rights, and further filter by transaction information
/// such as account numbers (translated to parties), vouchers, dates, and invoices.
/// </summary>

[Form]
public class SpecTransViewerDialog extends FormRun
{
    private SpecTransViewerMode viewerMode;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (this.args() && this.args().parmEnumType() == enumNum(SpecTransViewerMode))
        {
            viewerMode = this.args().parmEnum();
        }
        else
        {
            throw Error(error::wrongUseOfFunction(formStr(SpecTransViewer)));
        }

        this.initAccountNumberByView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAccountNumberByView</Name>
				<Source><![CDATA[
    private void initAccountNumberByView()
    {
        boolean shouldDisplayCustomerAccount = true;
        boolean shouldDisplayVendorAccount = true;

        if (viewerMode == SpecTransViewerMode::Cust)
        {
            shouldDisplayVendorAccount = false;
        }
        else if (viewerMode == SpecTransViewerMode::Vend)
        {
            shouldDisplayCustomerAccount = false;
        }

        CustomerAccount.visible(shouldDisplayCustomerAccount);
        VendorAccount.visible(shouldDisplayVendorAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAccountControls</Name>
				<Source><![CDATA[
    private void updateAccountControls()
    {
        boolean shouldEnableCustomerAccount = true;
        boolean shouldEnableVendorAccount = true;

        if (CustomerAccount.text() != '')
        {
            shouldEnableVendorAccount = false;
        }
        else if (VendorAccount.text() != '')
        {
            shouldEnableCustomerAccount = false;
        }

        CustomerAccount.enabled(shouldEnableCustomerAccount);
        VendorAccount.enabled(shouldEnableVendorAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSearchCriteriaFromForm</Name>
				<Source><![CDATA[
    private SpecTransViewerSearchCriteria getSearchCriteriaFromForm()
    {
        return SpecTransViewerSearchCriteria::newCriteria(
            viewerMode,
            this.getSelectedCompanies(),
            this.getParty(),
            Voucher.text(),
            TransDate.dateValue(),
            Invoice.text());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedCompanies</Name>
				<Source><![CDATA[
    private Set getSelectedCompanies()
    {
        Set selectedCompanies = new Set(Types::String);

        MultiSelectionHelper multiSelectionHelper = MultiSelectionHelper::construct();
        multiSelectionHelper.parmDatasource(MyLegalEntities_ds);

        MyLegalEntities selectedMyLegalEntites = multiSelectionHelper.getFirst();
        while (selectedMyLegalEntites)
        {
            if (selectedMyLegalEntites.DataArea != '')
            {
                selectedCompanies.add(selectedMyLegalEntites.DataArea);
            }

            selectedMyLegalEntites = multiSelectionHelper.getNext();
        }

        if (selectedCompanies.elements() == 0)
        {
            selectedCompanies.add(curExt());
        }

        return selectedCompanies;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParty</Name>
				<Source><![CDATA[
    private DirPartyRecId getParty()
    {
        DirPartyRecId partyRecId;

        if (CustomerAccount.text())
        {
            partyRecId = CustTable::find(CustomerAccount.text()).Party;
        }
        else if (VendorAccount.text())
        {
            partyRecId = VendTable::find(VendorAccount.text()).Party;
        }

        return partyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        this.openSpecTransViewer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openSpecTransViewer</Name>
				<Source><![CDATA[
    private void openSpecTransViewer()
    {
        MenuFunction mf = new MenuFunction(menuItemDisplayStr(SpecTransViewer), MenuItemType::Display);
        Args args = new Args();
        args.parmObject(this.getSearchCriteriaFromForm());
        args.parmEnumType(enumNum(SpecTransViewerMode));
        args.parmEnum(viewerMode);

        if (mf.hasRunPermissions(args))
        {
            mf.run(args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        MyLegalEntities_ds.positionToRecordByValue(fieldNum(MyLegalEntities, DataArea), curExt());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>CustomerAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateAccountControls();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendorAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateAccountControls();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MyLegalEntities</Name>
			<Table>MyLegalEntities</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BranchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssuingSignature</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Key</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntityID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UPSNum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:SpecTransViewerCaption</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ParametersGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustomerAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>CustAccount</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendorAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>VendAccount</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Voucher</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>Voucher</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>TransDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>TransDate</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Invoice</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>InvoiceId</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@SYS7764</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CompanyGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DataArea_id</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>DataArea</DataField>
								<DataSource>MyLegalEntities</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DataArea_name</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>MyLegalEntities</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>MyLegalEntities</DataSource>
					</AxFormControl>
				</Controls>
				<Caption>@SYS129100</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommandGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>