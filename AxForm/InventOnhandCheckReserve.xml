<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventOnhandCheckReserve</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class InventOnhandCheckReserve extends FormRun
{
    InventMovement                      movement;
    InventMovement                      movement_Orig;
    InventDimCtrl_Frm_OnHand            inventDimFormSetup;
    UnitQty                             qtyUnit;

    [SysObsolete("inventToSecondaryUnitConverter is deprecated, please use productInventToSecondaryConverter instead.", false, 31\03\2019)]
    UnitOfMeasureConverter_Product      inventToSecondaryUnitConverter;
    [SysObsolete("secondaryToInventUnitConverter is deprecated because it was not used.", false, 31\03\2019)]
    UnitOfMeasureConverter_Product      secondaryToInventUnitConverter;
    [SysObsolete("secondaryToMovementUnitConverter is deprecated, please use productSecondaryToMovement instead.", false, 31\03\2019)]
    UnitOfMeasureConverter_Product      secondaryToMovementUnitConverter;
    [SysObsolete("movementToSecondaryUnitConverter is deprecated, please use productSecondaryToMovement instead.", false, 31\03\2019)]
    UnitOfMeasureConverter_Product      movementToSecondaryUnitConverter;

    EcoResProductUnitConverter          productInventToSecondaryConverter;
    EcoResProductUnitConverter          productSecondaryToInventConverter;
    EcoResProductUnitConverter          productSecondaryToMovementConverter;
    EcoResProductUnitConverter          productMovementToSecondaryConverter;

    // the inventory unit for the active record
    UnitOfMeasureSymbol                 unitIdInvent;

    // The unit used on the On-hand tab, for the active record. It corresponds to the unit drop-down.
    [FormObservable]
    UnitOfMeasureSymbol                 unitIdSecondary;

    PdsCWInventQty                      pdsCWQty;
    [FormObservable]
    boolean                             isCWItem;

    PdsFormCtrl_InventOnhandCheckReserve    pdsFormCtrl;

    [FormObservable]
    boolean                                 reserveOnOrdered;

    // Availability
    InventAvailabilityByUnit                availability; // do not refer to this variable directly. use the element.availability() method
    InventAvailabilityByUnit                availabilityWithBatchAttr; // do not refer to this variable directly. use the element.availabilityWithBatchAttr() method
    InventTransIdSum                        transIdSum;

    FormObservableLink unitOfMeasureObservable;

}
]]></Source>
			</Method>
			<Method>
				<Name>applyUnitID</Name>
				<Source><![CDATA[
    public void applyUnitID()
    {
        UnitOfMeasureSymbol tempUnitID;

        // If we don't have an item, then units don't matter
        if (!inventSum.ItemId)
        {
            return;
        }

        boolean allowEditUnit;
        [tempUnitID, allowEditUnit] = InventOnhand::inventModuleUnitsSelectionToUnitIdAllowEdit(unitsComboBox.selection(), inventSum.ItemId, unitIdSecondary);
        ctrlUnitId.allowEdit(allowEditUnit);

        // Units may be empty, if so fall back to inventory units
        if (!tempUnitID)
        {
            unitsComboBox.selection(InventModuleUnits::InventoryUnit);
            tempUnitID = unitIdInvent;
            info("@SYS113267");
        }

        // Apply new unit
        element.unitId(true, tempUnitID);

        unitOfMeasureObservable.markChanged();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        movement.setTransQtyUnit(qtyUnit * movement.transSign());

        movement.setTransQty(EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(
                                movement.itemId(),
                                movement.inventDimId(),
                                movement.transQtyUnit(),
                                movement.transUnitId(),
                                movement.inventTable().inventUnitId(),
                                NoYes::Yes));

        if (isCWItem)
        {
            if (!PdsCatchWeightItem::pdsCWIsValidQty(
                            movement.itemId(),
                            movement.transQty(),
                            pdsCWQty * movement.transSign()))
            {
                throw error(PdsCatchWeightItem::PdsCWErrorMsg(movement.itemId(),pdsCWQty));
            }
            movement.pdsCWSetTransQty(pdsCWQty * movement.transSign());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleNoOnHand</Name>
				<Source><![CDATA[
    void handleNoOnHand()
    {
        if (inventSum.ItemId || !movement)
        {
            return;
        }
        inventSum_ds.create();

        inventSum.ItemId = movement.itemId();

        for (object inventDimControl = inventDimFormSetup.inventDimControls().first(); inventDimControl; inventDimControl = inventDimFormSetup.inventDimControls().next())
        {
            InventDimAXFormControlAdapter formControl = inventDimControl as InventDimAXFormControlAdapter;

            if (formControl && formControl.visible() && !formControl.controlObject().text())
            {
                FieldId fieldId = inventDimFormSetup.inventDimControls().fieldId(formControl);
                inventDim.(fieldId) = movement.inventdim().(fieldId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().dataset())
        {
            throw error(strfmt("@SYS22678", element.name()));
        }

        if (#PmfEnabled)
        {
            pdsFormCtrl = PdsFormCtrl_InventOnhandCheckReserve::newFromForm(element);
        }

        this.initUnitConverters();

        super();
        InstructionText.text("@SYS8691");

        movement        = InventMovement::construct(element.args().record());
        movement_Orig   = InventMovement::construct(element.args().record().orig());

        movement.parmIsInsufficientReservationQty(true);

        this.setupUnits();
        qtyUnit         = movement.transQtyUnit() * movement.transSign();

        isCWItem = PdsGlobal::pdsIsCWItem(movement.itemId());
        if (isCWItem)
        {
            pdsCWQty    = movement.pdsCWTransQty() * movement.transSign();
        }
        else
        {
            pdsCWCtrlQtyUnit.enabled(false);
        }

        if (pdsFormCtrl)
        {
            pdsFormCtrl.setDatasources(inventSum, inventDim);
            pdsFormCtrl.initPost();
        }

        inventOnhandInterCompany.visible(InterCompanyTradingRelation::tradingRelationExists());

        // Default to inventory units
        unitsComboBox.selection(InventModuleUnits::InventoryUnit);

        transIdSum = InventTransIdSum::newTransOriginId(movement.inventTransOriginId());

        this.updateErrorText();

        unitOfMeasureObservable = new FormObservableLink();

        reserveOnOrdered = InventParameters::find().ReserveOnOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initUnitConverters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Does initialization of the unit of measure converters.
    /// </summary>
    private void initUnitConverters()
    {
        productInventToSecondaryConverter = EcoResProductUnitConverter::construct();
        productInventToSecondaryConverter.parmApplyRounding(NoYes::Yes);
        productInventToSecondaryConverter.parmRoundAbsoluteValue(NoYes::Yes);

        productSecondaryToInventConverter = EcoResProductUnitConverter::construct();
        productSecondaryToInventConverter.parmApplyRounding(NoYes::Yes);
        productSecondaryToInventConverter.parmRoundAbsoluteValue(NoYes::Yes);

        productSecondaryToMovementConverter = EcoResProductUnitConverter::construct();
        productSecondaryToMovementConverter.parmApplyRounding(NoYes::Yes);
        productSecondaryToMovementConverter.parmRoundAbsoluteValue(NoYes::Yes);

        productMovementToSecondaryConverter = EcoResProductUnitConverter::construct();
        productMovementToSecondaryConverter.parmApplyRounding(NoYes::Yes);
        productMovementToSecondaryConverter.parmRoundAbsoluteValue(NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        if (!inventDimFormSetup)
        {
            inventDimFormSetup = InventDimCtrl_Frm_OnHandCheckReserve::newFromForm(element);
            inventDimFormSetup.parmLargeRightClickForm(NoYes::Yes);
            inventDimFormSetup.initFromCaller();
        }
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyUnit</Name>
				<Source><![CDATA[
    edit UnitQty qtyUnit(boolean _set, UnitQty _qty)
    {
        unitOfMeasureObservable.observe();

        UnitQty tmpQty;

        if (_set)
        {
            tmpQty  = _qty;
            qtyUnit = productSecondaryToMovementConverter.convertValue(tmpQty);
        }
        else
        {
            tmpQty  = productMovementToSecondaryConverter.convertValue(qtyUnit);
        }

        return tmpQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reserveNow</Name>
				<Source><![CDATA[
    display InventQty reserveNow()
    {
        unitOfMeasureObservable.observe();

        return productInventToSecondaryConverter.convertValue(movement.autoReserveQty(movement_Orig));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        element.showChangeQtyGroup(false);

        if (pdsFormCtrl)
        {
            pdsFormCtrl.runPre();
        }

        element.applyUnitID();

        super();

        element.handleNoOnHand();        

        ctrlContinueButton.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupUnitConverters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the parameters of the unit of measure converters according to current selection on the form.
    /// </summary>
    private void setupUnitConverters()
    {
        productInventToSecondaryConverter.parmFromUnitOfMeasureSymbol(unitIdInvent);
        productInventToSecondaryConverter.parmToUnitOfMeasureSymbol(unitIdSecondary);
        productInventToSecondaryConverter.parmItemId(movement.inventTable().ItemId);
        productInventToSecondaryConverter.parmInventDimId(movement.inventDimId());

        productSecondaryToInventConverter.parmFromUnitOfMeasureSymbol(unitIdSecondary);
        productSecondaryToInventConverter.parmToUnitOfMeasureSymbol(unitIdInvent);
        productSecondaryToInventConverter.parmInventDimId(productInventToSecondaryConverter.parmInventDimId());
        productSecondaryToInventConverter.parmItemId(productInventToSecondaryConverter.parmItemId());

        productSecondaryToMovementConverter.parmFromUnitOfMeasureSymbol(unitIdSecondary);
        productSecondaryToMovementConverter.parmToUnitOfMeasureSymbol(unitIdSecondary);
        productSecondaryToMovementConverter.parmInventDimId(productInventToSecondaryConverter.parmInventDimId());
        productSecondaryToMovementConverter.parmItemId(productInventToSecondaryConverter.parmItemId());

        productMovementToSecondaryConverter.parmFromUnitOfMeasureSymbol(unitIdSecondary);
        productMovementToSecondaryConverter.parmToUnitOfMeasureSymbol(unitIdSecondary);
        productMovementToSecondaryConverter.parmItemId(productInventToSecondaryConverter.parmItemId());
        productMovementToSecondaryConverter.parmInventDimId(productInventToSecondaryConverter.parmInventDimId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupUnits</Name>
				<Source><![CDATA[
	private void setupUnits()
    {
        unitIdSecondary = movement.transUnitId();
        unitIdInvent    = movement.inventTable().inventUnitId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showChangeQtyGroup</Name>
				<Source><![CDATA[
    void showChangeQtyGroup(boolean show)
    {
        TabPageUpdateQuantity.visible(show);

        if (show)
        {
            ctrlQtyUnit.setFocus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #task
        int ret;

        if (_taskId == #taskEsc)
        {
            _taskId = #taskCtrlQ;
        }

        //To prevent new records being created.  AllowCreate must be Yes. See handleNoOnhand().
        if (_taskId == #taskNew)
        {
            return 0;
        }

        ret = super(_taskId);
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitId</Name>
				<Source><![CDATA[
    edit UnitOfMeasureSymbol unitId(boolean _set, UnitOfMeasureSymbol _unitId)
    {
        if (_set)
        {
            unitIdSecondary = _unitId;
            this.setupUnitConverters();
        }

        return unitIdSecondary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate _mode)
    {
        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init          :
                reserveOnOrdered = InventParameters::find().ReserveOnOrdered;
            case InventDimFormDesignUpdate::LinkActive    :
                element.inventDimSetupObject().initFromCaller();
                element.inventDimSetupObject().parmCtrlItemId(inventSum_ItemId);
                element.setupUnits();
                this.setupUnitConverters();
            // No break
            case InventDimFormDesignUpdate::Active        :
                element.inventDimSetupObject().formActiveSetup();
                element.inventDimSetupObject().parmDimParmVisible(element.inventDimSetupObject().parmDimParmVisibleGrid());
                element.inventDimSetupObject().formSetControls(true,true);
                break;

            default : throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateErrorText</Name>
				<Source><![CDATA[
    private void updateErrorText()
    {
        container notAllowedBlankDimensions;
        str message;
        int ii;

        if (movement.isItemWHSEnabled())
        {
            notAllowedBlankDimensions = WHSReservationHierarchyInventDimUtil::getNotAllowedBlankDimInHierarchy(movement.inventTable(), movement.inventdim());
            if (notAllowedBlankDimensions!=conNull())
            {
                for (ii=conLen(notAllowedBlankDimensions);ii>0;ii--)
                {
                    if (message)
                    {
                        message += ',';
                    }
                    message += ' ' + fieldId2pname(tableNum(InventDim),conPeek(NotAllowedBlankDimensions,ii));
                }
                InstructionText.text(strFmt("@WAX736", "@SYS4009522" + message, "@SYS4009523"));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>availability</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the available quantities.
    /// </summary>
    /// <returns>
    /// An <c>InventAvailabilityByUnit</c> object.
    /// </returns>
    public InventAvailabilityByUnit availability()
    {
        if (!availability)
        {
            availability = InventAvailabilityProvider::findByDimWithAutoReservationCriteria(
                                                        movement,
                                                        inventDim,
                                                        inventDim.toDimParm(),
                                                        false, // do not force batch attribute criteria (default)
                                                        true); // ignore batch attribute criteria
        }

        return availability;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availabilityWithBatchAttr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the available quantities for batches that fit the batch attributes criteria.
    /// </summary>
    /// <returns>
    /// An <c>InventAvailabilityByUnit</c> object.
    /// </returns>
    public InventAvailabilityByUnit availabilityWithBatchAttr()
    {
        if (!availabilityWithBatchAttr)
        {
            availabilityWithBatchAttr = InventAvailabilityProvider::findByDimWithAutoReservationCriteria(
                                            movement,
                                            inventDim,
                                            inventDim.toDimParm(),
                                            true); // force batch attribute criteria
        }

        return availabilityWithBatchAttr;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventSum</Name>
				<Methods>
					<Method>
						<Name>pdsCWReserveAttribMax</Name>
						<Source><![CDATA[
        /// <summary>
        /// Maximum catch weight inventory available considering batch attributes
        /// </summary>
        /// <returns>
        /// Available Catch weight quantity
        /// </returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// Value returned is invented.
        /// </remarks>
        public display PdsCWInventQty pdsCWReserveAttribMax()
        {
            unitOfMeasureObservable.observe();

            PdsCWInventQty  reservCW;

            if (isCWItem)
            {
                reservCW = max(this.pdsCWAvailAttribReservation(), 0);

                reservCW += transIdSum.pdsCWReserved() * movement.transSign();
            }

            return reservCW;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsReserveAttribMax</Name>
						<Source><![CDATA[
        /// <summary>
        /// Maximum inventory available considering batch attributes
        /// </summary>
        /// <returns>
        /// Available quantity
        /// </returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// Value returned is invented.
        /// </remarks>
        public display UnitQty pdsReserveAttribMax()
        {
            unitOfMeasureObservable.observe();

            InventQty   reservInvent;

            reservInvent = max(this.availReservation(), 0);

            reservInvent += transIdSum.reserved() * movement.transSign();

            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(
                        movement.itemId(),
                        movement.inventDimId(),
                        reservInvent,
                        movement.inventTable().inventUnitId(),
                        movement.transUnitId(),
                        NoYes::Yes);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWAvailAttribReservation</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get the quantity available for reservation
        /// </summary>
        /// <returns>The quantity that can be reserved</returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// </remarks>
        public display PdsCWInventQty pdsCWAvailAttribReservation()
        {
            unitOfMeasureObservable.observe();

            PdsCWInventQty qty = 0;

            if (isCWItem)
            {
                qty = element.availabilityWithBatchAttr().parmPdsCWInventAvailability().pdsCWAvailReservation();
            }

            return qty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            element.updateDesign(InventDimFormDesignUpdate::LinkActive);
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            element.inventDimSetupObject().initQueryInventSum(inventSum_DS);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            element.inventDimSetupObject().modifyQuery(inventSum_DS,inventDim_DS);

            super();

            availability = null;
            availabilityWithBatchAttr = null;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reserveMax</Name>
						<Source><![CDATA[
        display UnitQty reserveMax()
        {
            unitOfMeasureObservable.observe();

            InventQty   reservInvent;

            reservInvent = max(this.availReservation(), 0);
            reservInvent += transIdSum.reserved() * movement.transSign();

            return productInventToSecondaryConverter.convertValue(reservInvent);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availReservation</Name>
						<Source><![CDATA[
        display InventQty availReservation()
        {
            unitOfMeasureObservable.observe();

            return productInventToSecondaryConverter.convertValue(element.availability().parmInventAvailability().availReservation(reserveOnOrdered));
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        edit PdsCWInventQty pdsCWQty(boolean _set, InventSum _inventSum, PdsCWInventQty _qty)
        {
            unitOfMeasureObservable.observe();

            if (_set)
            {
                pdsCWQty = _qty;
            }

            return pdsCWQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            inventDim_ds.active();

            if (pdsFormCtrl)
            {
                pdsFormCtrl.dataSourceActivePost();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWReserveMax</Name>
						<Source><![CDATA[
        display PdsCWInventQty pdsCWReserveMax()
        {
            unitOfMeasureObservable.observe();

            PdsCWInventQty  reservCW;

            if (isCWItem)
            {
                reservCW = max(this.pdsCWAvailReservation(), 0);

                reservCW += transIdSum.pdsCWReserved() * movement.transSign();
            }

            return reservCW;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWReserveNow</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get the quantity to be reserved
        /// </summary>
        /// <returns>The quantity that should be auto-reserved</returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// </remarks>
        public display PdsCWInventQty pdsCWReserveNow()
        {
            unitOfMeasureObservable.observe();

            PdsCWInventQty  qty = 0;

            if (isCWItem)
            {
                qty = movement.pdsCWAutoReserveQty(movement_Orig);
            }

            return qty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWAvailReservation</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get the quantity available for reservation
        /// </summary>
        /// <returns>The quantity that can be reserved</returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// </remarks>
        display PdsCWInventQty pdsCWAvailReservation()
        {
            unitOfMeasureObservable.observe();

            return element.availability().parmPdsCWInventAvailability().pdsCWAvailReservation(reserveOnOrdered);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsAvailAttribReservation</Name>
						<Source><![CDATA[
        /// <summary>
        /// Get the quantity available for reservation considering batch attributes
        /// </summary>
        /// <returns>
        /// The quantity that can be reserved
        /// </returns>
        /// <remarks>
        /// Security Note:
        /// Access to this form implies the ability to see the inventory to be reserved
        /// and available to be reserved.
        /// </remarks>
        public display InventQty pdsAvailAttribReservation()
        {
            unitOfMeasureObservable.observe();

            return element.availabilityWithBatchAttr().parmInventAvailability().availReservation(reserveOnOrdered);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not call super()
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            element.inventDimSetupObject().initQueryInventDim(inventDim_DS);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not call super()
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>updateQuantityButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.showChangeQtyGroup(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UnitsComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret = super();

            element.applyUnitID();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlUnitId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            // Remember the old value, so we can revert if necessary
            UnitOfMeasureSymbol oldUnitID = unitIdSecondary;

            boolean ret = super();

            // If we cannot convert to the new unit, revert to the old unit
            if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(inventSum.ItemId,
                                                                                              inventSum.InventDimId,
                                                                                              unitIdInvent,
                                                                                              this.text()))
            {
                ret = checkFailed(strFmt("@SYS28690",unitIdInvent,this.text()));
                element.unitId(true,oldUnitID);
                ctrlUnitId.update();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates the control contents when it is typed in manually.
        /// </summary>
        /// <returns>
        /// true if the contents is ok; otherwise, false.
        /// </returns>
        boolean validate()
        {
            boolean ret = true;

            if (!EcoResProductUnitConverter::canBeConvertedGivenUnitSymbolsForReleasedProduct(inventSum.ItemId,
                                                                                              inventSum.InventDimId,
                                                                                              unitIdInvent,
                                                                                              this.text()))
            {
                ret = checkFailed(strFmt("@SYS28690",unitIdInvent,this.text()));
                this.text(unitIdSecondary);
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventSum</Name>
			<Table>InventSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Arrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ordered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWArrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWDeducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPicked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Picked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Received</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Registered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventSum</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS13427</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>InstructionText</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ActionPaneButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>updateQuantityButton</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS28792</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SCM:UpdateOrderedQuantityFastGroupCaption</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>OnHandButton</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>InventOnhandItem</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>InventOnhandInterCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>InventSum</DataSource>
								<MenuItemName>InventOnhandInterCompany</MenuItemName>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabContent</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageMain</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventSum_ItemId</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>InventSum</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InventoryDimensions</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_configId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>configId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventSizeId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSizeId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventColorId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventColorId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventStyleId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStyleId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventVersionId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventVersionId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventSiteId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_inventBatchId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventBatchId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_wMSLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>wMSLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_inventSerialId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventSerialId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventStatusId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStatusId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_LicensePlateId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LicensePlateId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventOwnerId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventOwnerId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventProfileId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventProfileId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventGtdId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventGtdId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>InventoryDimensions</DataGroup>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AvailResAllBatches</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AvailReservation</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>AvailReservation</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@SYS27013</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWAvailReservation</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWAvailReservation</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@PDS105</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@PDS1335</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AvailResBatchAttrib</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PdsBatchAttrib</ConfigurationKey>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsBatchAttribAvailReservation</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@PDS1337</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsAvailAttribReservation</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsBatchAttribCWAvailReservation</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWAvailAttribReservation</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<Caption>@PDS1334</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReserveNowGroup</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReserveNow</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReserveNow</DataMethod>
										<Label>@SYS27012</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReserveNow</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWReserveNow</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@PDS106</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>UnitOfMeasureGroup</Name>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>UnitsComboBox</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_InventoryManagement:InventOnhandCheckReserve_UnitsComboBox</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ComboType>List</ComboType>
										<EnumType>InventModuleUnits</EnumType>
										<Label>@SYS312169</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlUnitId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>unitId</DataMethod>
									</AxFormControl>
								</Controls>
								<Caption>@SYS11959</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SCM:ReservationDetailsFastGroupCaption</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageUpdateQuantity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReserveMaxAllBatches</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReserveMax</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS69664</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReserveMax</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@SYS27014</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWReserveMax</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS69664</HelpText>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWReserveMax</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@PDS1336</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@PDS1335</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReserveMaxBatchAttrib</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PdsBatchAttrib</ConfigurationKey>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsBatchAttribReserveMax</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsReserveAttribMax</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsBatchAttribCWReserveMax</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWReserveAttribMax</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<Caption>@PDS1334</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CtrlQtyUnitGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ctrlQtyUnit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS69665</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>QtyUnit</DataMethod>
										<Label>@SYS27015</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWCtrlQtyUnit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventSum</DataSource>
										<Label>@PDS1338</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SCM:UpdateOrderedQuantityFastGroupCaption</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ctrlContinueButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButton</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<DataSource>InventSum</DataSource>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
