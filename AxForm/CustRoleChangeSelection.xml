<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustRoleChangeSelection</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustRoleChangeSelection extends FormRun
{
}
]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Changes selected customers roles to selected one
        /// </summary>
        public void clicked()
        {
            super();
            FormRun callerForm = element.args().caller();

            if (callerForm && callerForm.name() == formStr(CustHierarchy))
            {
               CustHierarchyId currentHierarchyId = callerForm.getCustHierarchyId();

                try
                {
                    List customersWithMultipleRequests = CustRoleChangeHelper::changeRolesForCustomers(currentHierarchyId, callerForm.getSelectedNodeCustomers(), RoleSelection.selection());
                    callerForm.updateCustHierarchyNodeGrid();

                    // Return if no customers had multiple requests for role change.
                    if (customersWithMultipleRequests.elements() == 0)
                    {
                        return;
                    }

                    ListEnumerator customersEnumerator = customersWithMultipleRequests.getEnumerator();
                    str names;
                    str namesWithRoles;

                    while (customersEnumerator.moveNext())
                    {
                        CustHierarchyNode custHierarchyNode;

                        select firstonly custHierarchyNode
                        where custHierarchyNode.CustHierarchyId == currentHierarchyId
                            && custHierarchyNode.Party == customersEnumerator.current();

                        names += custHierarchyNode.partyName() + ", ";
                        namesWithRoles += strFmt("@CustHierarchy:ChangeRolePersonRoleMessage", custHierarchyNode.partyName(), custHierarchyNode.Role);
                    }
                    names = strDel(names, strLen(names) - 1, 2);
                    str msg = strFmt("@CustHierarchy:ChangeRoleMultipleRequestsForPerson", names) + namesWithRoles;
                    warning(msg);
                }
                catch
                {
                    error("@CustHierarchy:ChangeRoleAllAdminsSelected");
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@CustHierarchy:ChangeRoleCustHierarchyNodeMenuButton</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Content</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>RoleSelection</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<EnumType>CustHierarchyNodeRole</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>