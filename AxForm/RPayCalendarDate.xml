<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayCalendarDate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) Group control MonthGroup had TopMode property set to TopEdge. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
[Form]
public class RPayCalendarDate extends FormRun
{
    #Task
    #define.maxDate('31-12-2153')
    #define.minDate('01-01-1901')
    #TimeConstants
    #define.Value2(2)
    #define.sheetTabNo(2)

    RPayCalendarTable    payCalendarTable;
    int                  prevRow;
    int                  prevColumn;
    boolean              lockWindowUpdate;
    date                 selectedDateValue;
    RPayCalendarId       currentCalendarId;
}
]]></Source>
			</Method>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    void allowEdit(boolean doAllow)
    {
        payCalendarDateLine_ds.allowEdit(doAllow);
        payCalendarDateLine_ds.allowCreate(doAllow);
        payCalendarDateLine_ds.allowDelete(doAllow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calendarId</Name>
				<Source><![CDATA[
    RPayCalendarId  calendarId()
    {
        return currentCalendarId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateStartMth</Name>
				<Source><![CDATA[
    TransDate dateStartMth(TransDate _calendarDate = selectedDateValue)
    {
        RPayCalendarDate payCalendarDateLocal;

        select firstonly TransDate from payCalendarDateLocal
            where payCalendarDateLocal.CalendarId == currentCalendarId &&
                  payCalendarDateLocal.TransDate  >= dateStartMth(_calendarDate) &&
                  payCalendarDateLocal.TransDate  <= endmth(_calendarDate);

        return payCalendarDateLocal.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doFindToday</Name>
				<Source><![CDATA[
    void doFindToday()
    {
        RPayCalendarDate calendarDate;
        ;
        select firstonly RecId from calendarDate
            where calendarDate.CalendarId == payCalendarTable.CalendarId &&
                  calendarDate.TransDate  == dateStartMth(RPayParameters::payPeriod());

        if (calendarDate)
        {
            payCalendarDate_DS.findRecord(calendarDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearch</Name>
				<Source><![CDATA[
    void doResearch()
    {
        payCalendarDate_ds.research();

        element.doFindToday();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doResearchLines</Name>
				<Source><![CDATA[
    void doResearchLines()
    {
        payCalendarDateLine_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>drawMonth</Name>
				<Source><![CDATA[
    void drawMonth()
    {
        date drawingDate = selectedDateValue ;
        int  d,w;
        ;
        drawingDate  = dateStartMth(drawingDate);
        drawingDate -= dayOfWk(drawingDate) - 1;
        prevRow      = 0;
        prevColumn   = 0;

        if (dayOfMth(drawingDate) == 1)
        {
            drawingDate -= #dayOfWeekSunday;
        }

        for (w = 1; w <= #dayOfWeekSaturday; w++)
        {
            if (drawingDate >= str2DateDMY(#maxDate))
            {
                daysTable.setRowLabel(w,num2str(1,2,0,0,0));
            }
            else
            {
                daysTable.setRowLabel(w,num2str(wkOfYr(drawingDate),2,0,0,0));
            }
            for (d = 1; d <= #daysPerWeek; d++)
            {
                daysTable.cell(d, w).data(drawingDate);
                if (drawingDate == selectedDateValue &&
                    this.validateCalendarDate(selectedDateValue))
                {
                    prevColumn = d;
                    prevRow    = w;
                }
                drawingDate++;
            }
        }

        element.enableNextButton();
        element.enablePrevButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableNextButton</Name>
				<Source><![CDATA[
    void enableNextButton()
    {
        if (year(selectedDateValue)    == year(str2DateDMY(#maxDate)) &&
            mthOfYr(selectedDateValue) == mthOfYr(str2DateDMY(#maxDate)))
        {
            buttonNextMonth.enabled(false);
        }
        else
        {
            buttonNextMonth.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enablePrevButton</Name>
				<Source><![CDATA[
    void enablePrevButton()
    {
        if (year(selectedDateValue)    == year(str2DateDMY(#minDate)) &&
            mthOfYr(selectedDateValue) == mthOfYr(str2DateDMY(#minDate)))
        {
            buttonPrevMonth.enabled(false);
        }
        else
        {
            buttonPrevMonth.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNextDate</Name>
				<Source><![CDATA[
    private Date findNextDate(date _calendarDate)
    {
        RPayCalendarDate payCalendarDateLocal;

        select firstonly TransDate from payCalendarDateLocal
            order by TransDate asc
            where payCalendarDateLocal.CalendarId == currentCalendarId &&
                  payCalendarDateLocal.TransDate >= _calendarDate;

        return payCalendarDateLocal.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrevDate</Name>
				<Source><![CDATA[
    private Date findPrevDate(date _calendarDate)
    {
        RPayCalendarDate payCalendarDateLocal;

        select firstonly TransDate from payCalendarDateLocal
            order by TransDate desc
            where payCalendarDateLocal.CalendarId == currentCalendarId &&
                  payCalendarDateLocal.TransDate <= _calendarDate;

        return payCalendarDateLocal.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        Common common = element.args().record();
        int    i;
        ;
        if (common.TableId == tableNum(RPayCalendarTable))
        {
            payCalendarTable  = common;
            currentCalendarId = payCalendarTable.CalendarId;
            super();
        }

        for (i = 1; i <= #daysPerWeek; i ++)
        {
            daysTable.setColLabel(i,subStr(dayName(i),1,1));
        }

        for (i = 1; i <= #monthsPerYear; i += 1)
        {
            monthViewer.add(mthName(i));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextDay</Name>
				<Source><![CDATA[
    boolean nextDay(int _keyPressed)
    {
        #define.FirstRow(1)
        #define.FirstColumn(1)
        #define.MaxRow(6)
        #define.MaxColumn(7)

        date    nextDate;

        switch (_keyPressed)
        {
            case #taskArrowLeft:
                nextDate = daysTable.data(daysTable.column(), daysTable.row()) -1;
                if (! element.validateCalendarDate(nextDate))
                    return true;
                if (daysTable.column() == #FirstColumn)
                {
                    if (daysTable.row() == #FirstRow)
                    {
                        selectedDateValue = nextDate;
                        this.setCalendarDates();
                    }
                    else
                    {
                        daysTable.row(daysTable.row()-1);
                        daysTable.column(#MaxColumn);
                    }
                }
                else
                {
                    daysTable.column(daysTable.column()-1);
                }
                break;

            case #taskArrowRight:
                nextDate = daysTable.data(daysTable.column(), daysTable.row()) + 1;
                if (! element.validateCalendarDate(nextDate))
                    return true;
                if (daysTable.column() == #MaxColumn)
                {
                    if (daysTable.row() == #MaxRow)
                    {
                        selectedDateValue = nextDate;
                        this.setCalendarDates();
                    }
                    else
                    {
                        daysTable.row(daysTable.row()+1);
                        daysTable.column(#FirstColumn);
                    }
                }
                else
                {
                    daysTable.column(daysTable.column()+1);
                }
                break;

            case #taskArrowUp:
                nextDate = daysTable.data(daysTable.column(), daysTable.row()) - #DaysPerWeek;
                if (! element.validateCalendarDate(nextDate))
                    return true;

                if (daysTable.row() == #FirstRow)
                {
                    selectedDateValue = nextDate;
                    this.setCalendarDates();
                    return true;
                }
                break;

            case #taskArrowDown:

                nextDate = daysTable.data(daysTable.column(), daysTable.row()) + #DaysPerWeek;
                if (! element.validateCalendarDate(nextDate))
                    return true;

                if (daysTable.row() == #MaxRow)
                {
                    selectedDateValue = nextDate;
                    this.setCalendarDates();
                    return true;
                }
                break;

            default :
                return false;
        }

        daysTable.setFocus();

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextMonth</Name>
				<Source><![CDATA[
    void nextMonth(int _keyPressed)
    {
        TransDate calendarDate;
        switch (_keyPressed)
        {
            case #taskPageDown :
                calendarDate = this.findNextDate(nextMth(selectedDateValue));
                break;
            case #taskPageUp   :
                calendarDate = this.findPrevDate(prevMth(selectedDateValue));
                break;
            default :
                return;
        }
        selectedDateText.setFocus();
        if (calendarDate == dateNull())
        {
            info("@GLS106109");
        }
        else
        {
            selectedDateValue = calendarDate;
            element.setCalendarDates();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalendarDates</Name>
				<Source><![CDATA[
    void setCalendarDates()
    {
        ;
        selectedDate.setFocus();
        element.lock();
        daysTable.visible(false);
        selectedDate.dateValue(selectedDateValue);
        monthViewer.selection(mthOfYr(selectedDateValue) - 1);
        element.drawMonth();
        element.updateTable(daysTable);
        if (prevColumn && prevRow)
        {
            daysTable.column(prevColumn);
            daysTable.row(prevRow);
            daysTable.setFocus();
        }
        else
        {
            selectedDate.setFocus();
        }

        daysTable.visible(true);

        element.unLock(true);
        daysTable.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    int task(int p1)
    {
        int         ret;
        Object      formControl = element.selectedControl();
        ;
        if (formControl &&
           (formControl.equal(dateCellWorkDay)  ||
            formControl.equal(dateCellHoliday)  ||
            formControl.equal(dateCellDayOff)))
        {
            switch (p1)
            {
                case #taskPageUp:
                    element.nextMonth(p1);
                    break;
                case #taskPageDown:
                    element.nextMonth(p1);
                    break;
                case #taskArrowLeft:
                    ret = element.nextDay(p1);
                    break;
                case #taskArrowRight:
                    ret = element.nextDay(p1);
                    break;
                case #taskArrowUp:
                    ret = element.nextDay(p1);
                    if (! ret) ret = super(p1);
                    break;
                case #taskArrowDown:
                    ret = element.nextDay(p1);
                    if (! ret) ret = super(p1);
                    break;
                default :
                    ret = super(p1);
            }
        }
        else
        {
            ret = super(p1);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTable</Name>
				<Source><![CDATA[
    void updateTable(FormTableControl _formTableControl)
    {
        int c,r;
        ;
        for (c = 1; c <= _formTableControl.columns(); c++)
        {
            for (r = 1; r <= _formTableControl.rows(); r++)
            {
                _formTableControl.updateCell(c, r);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCalendarDate</Name>
				<Source><![CDATA[
    RPayCalendarDate validateCalendarDate(TransDate _calendarDate = daysTable.cell(daysTable.column(),daysTable.row()).data())
    {
        return RPayCalendarDate::find(currentCalendarId, _calendarDate);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayCalendarDate</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
public void linkActive()
        {
            FormControl formControl = element.selectedControl();

            if (formControl)
            {
                selectedDate.setFocus();
            }
            super();
            currentCalendarId = payCalendarTable.CalendarId;
            if (tab.tab() == #Value2)
            {
                selectedDateValue = payCalendarDate.TransDate;
                element.setCalendarDates();
                daysTable.setFocus();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();
            this.cacheAddMethod(tableMethodStr(RPayCalendarDate, dateDayName));
            this.cacheAddMethod(tableMethodStr(RPayCalendarDate, monthName));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            super();
            element.doFindToday();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                payCalendarDate_ds.cacheCalculateMethod(tableMethodStr(RPayCalendarDate, dateDayName));
                payCalendarDate_ds.cacheCalculateMethod(tableMethodStr(RPayCalendarDate, monthName));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>PayCalendarDateLine</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().addDynalink(fieldNum(RPayCalendarDateLine, CalendarId), PayCalendarDate, fieldNum(RPayCalendarDate, CalendarId));
            this.queryBuildDataSource().addDynalink(fieldNum(RPayCalendarDateLine, TransDate), PayCalendarDate, fieldNum(RPayCalendarDate, TransDate));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TmpPayTimeGroupSum</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            TmpRPayTimeGroupSum  tmpPayTimeGroupSumLocal;
            RPayCalendarDateLine rPayCalendarDateLine;
            RPayTimeGroupMember  rPayTimeGroupMember;
            RpayTimeGroupCode    payTimeGroupCode;
            RPayDayHour          hour;
            ;
            rpayCalendarSumTime_ds.research();
            while select TimeGroup from rPayTimeGroupMember order by TimeGroup
                  join rPayCalendarDateLine
                      where rPayCalendarDateLine.PayCalendarTimeCode == rPayTimeGroupMember.PayCalendarTimeCode &&
                            rPayCalendarDateLine.CalendarId          == payCalendarTable.CalendarId             &&
                            rPayCalendarDateLine.TransDate           == payCalendarDate.TransDate
            {
                if (payTimeGroupCode == rPayTimeGroupMember.TimeGroup)
                {
                    hour += rPayCalendarDateLine.capacity() / #SecondsPerHour;
                }
                else
                {
                    if (hour)
                    {
                        tmpPayTimeGroupSumLocal.clear();
                        tmpPayTimeGroupSumLocal.CalendarId = payCalendarTable.CalendarId;
                        tmpPayTimeGroupSumLocal.TimeGroup  = payTimeGroupCode;
                        tmpPayTimeGroupSumLocal.TransDate  = payCalendarDate.TransDate;
                        tmpPayTimeGroupSumLocal.Hour       = hour;
                        tmpPayTimeGroupSumLocal.insert();
                    }
                    hour = rPayCalendarDateLine.capacity() / #SecondsPerHour;
                    payTimeGroupCode = rPayTimeGroupMember.TimeGroup;
                }
            }

            if (hour)
            {
                tmpPayTimeGroupSumLocal.clear();
                tmpPayTimeGroupSumLocal.CalendarId = payCalendarTable.CalendarId;
                tmpPayTimeGroupSumLocal.TimeGroup  = payTimeGroupCode;
                tmpPayTimeGroupSumLocal.TransDate  = payCalendarDate.TransDate;
                tmpPayTimeGroupSumLocal.Hour       = hour;
                tmpPayTimeGroupSumLocal.insert();
            }

            tmpPayTimeGroupSum.setTmpData(tmpPayTimeGroupSumLocal);
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RpayCalendarSumTime</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            this.query().dataSourceTable(tableNum(RPayCalendarDateLine)).addSortField(fieldNum(RPayCalendarDateLine, PayCalendarTimeCode));
            this.query().dataSourceTable(tableNum(RPayCalendarDateLine)).addSelectionField(fieldNum(RPayCalendarDateLine,RecId),SelectionField::Max);
            this.query().dataSourceTable(tableNum(RPayCalendarDateLine)).orderMode(OrderMode::GroupBy);
            this.query().dataSourceTable(tableNum(RPayCalendarDateLine)).addDynalink(fieldNum(RPayCalendarDateLine, CalendarId), PayCalendarDate, fieldNum(RPayCalendarDate, CalendarId));
            this.query().dataSourceTable(tableNum(RPayCalendarDateLine)).addDynalink(fieldNum(RPayCalendarDateLine, TransDate), PayCalendarDate, fieldNum(RPayCalendarDate, TransDate));
        }

]]></Source>
					</Method>
					<Method>
						<Name>hours</Name>
						<Source><![CDATA[
        display Hours hours(RPayCalendarDateLine _payCalendarDateLine)
        {
            RPayCalendarDateLine rPayCalendarDateLine;
            real                 totalHours;

            while select rPayCalendarDateLine
                where rPayCalendarDateLine.CalendarId          == payCalendarTable.CalendarId &&
                      rPayCalendarDateLine.TransDate           == payCalendarDate.TransDate   &&
                      rPayCalendarDateLine.PayCalendarTimeCode == _payCalendarDateLine.PayCalendarTimeCode
            {
                totalHours += rPayCalendarDateLine.capacity() / #SecondsPerHour;
            }

            return totalHours;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChange</Name>
						<Source><![CDATA[
public boolean tabChange(int _fromTab)
        {
            boolean ret;
            if (payCalendarDate.TransDate || _fromTab == #sheetTabNo)
                ret = super(_fromTab);
            else
                ret = false;
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        #define.sheetTabNo(2)
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);
            if (_toTab == #sheetTabNo)
            {
                selectedDateValue = payCalendarDate.TransDate;
                element.setCalendarDates();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DaysTable</Name>
				<Type>Table</Type>
				<Methods>
					<Method>
						<Name>activeCellChanged</Name>
						<Source><![CDATA[
        public void activeCellChanged()
        {
            super();
            if (payCalendarDate_Ds.findRecord(element.validateCalendarDate()))
            {
                selectedDateValue = this.data(this.column(), this.row());
                selectedDateText.text(strFmt("@GLS102573", int2str(dayOfMth(selectedDateValue)), RNumDateInWordConverter::construct(infolog.language()).date2strMonth(selectedDateValue), int2str(year(selectedDateValue))));
            }
            selectedDateText.setFocus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editControl</Name>
						<Source><![CDATA[
        FormControl editControl(int _column, int _row)
        {
            date             drawingDate = this.data(_column, _row);
            RPayCalendarDate rPayCalendarDate;
            FormDateControl  editControl;

            rPayCalendarDate = element.validateCalendarDate(drawingDate);
            if (rPayCalendarDate.TransDate)
            {
                if (rPayCalendarDate.PayDayType == RPayDayType::Holiday)
                {
                    if (RPayCalendarTable::find(currentCalendarId).Holiday)
                    {
                        if (_column == #dayOfWeekSaturday ||
                           _column == #dayOfWeekSunday   ||
                           RPayHolidaysTable::find(rPayCalendarDate.TransDate))
                        {
                            editControl = dateCellHoliday;
                        }
                        else
                        {
                            editControl = dateCellDayOff;
                        }
                    }
                    else
                    {
                        editControl = dateCellDayOff;
                    }
                }
                else
                {
                    editControl = dateCellWorkDay;
                }
            }
            else
            {
                editControl = dateCelldisabled;
            }
            editControl.helpText(strFmt("@GLS106745",selectedDateValue));
            return editControl;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateCellWorkDay</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            element.lockWindowUpdate(lockWindowUpdate);
            super();
            prevRow    = daysTable.row();
            prevColumn = daysTable.column();
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;
            FormControl formControl = element.selectedControl();

            if (element.validateCalendarDate() || formControl)
            {
                element.lockWindowUpdate(lockWindowUpdate);
            }

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lostFocus</Name>
						<Source><![CDATA[
        public void lostFocus()
        {
            FormControl formControl = element.selectedControl();
            if (formControl && formControl.name() == this.name())
            {
                element.lockWindowUpdate(true);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateCellDisabled</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            element.lockWindowUpdate(lockWindowUpdate);
            selectedDate.setFocus();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateCellHoliday</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            element.lockWindowUpdate(lockWindowUpdate);
            super();
            prevRow    = daysTable.row();
            prevColumn = daysTable.column();
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;
            FormControl formControl = element.selectedControl();

            if (element.validateCalendarDate() || formControl)
            {
                element.lockWindowUpdate(lockWindowUpdate);
            }
            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lostFocus</Name>
						<Source><![CDATA[
        public void lostFocus()
        {
            FormControl formControl = element.selectedControl();
            if (formControl && formControl.name() == this.name())
            {
                element.lockWindowUpdate(true);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateCellDayOff</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            element.lockWindowUpdate(lockWindowUpdate);
            super();
            prevRow    = daysTable.row();
            prevColumn = daysTable.column();
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean     ret;
            FormControl formControl = element.selectedControl();
            ;
            if (element.validateCalendarDate() || formControl)
            {
                element.lockWindowUpdate(lockWindowUpdate);
            }
            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lostFocus</Name>
						<Source><![CDATA[
        public void lostFocus()
        {
            FormControl formControl = element.selectedControl();
            if (formControl && formControl.name() == this.name())
            {
                element.lockWindowUpdate(true);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonPrevMonth</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>mouseUp</Name>
						<Source><![CDATA[
        int mouseUp(int x, int y, int button, boolean ctrl, boolean shift)
        {
            int ret;

            ret = super(x, y, button, ctrl, shift);
            element.nextMonth(#taskPageUp);

            return 1; // => closeSelect not called
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MonthViewer</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            ret = super();

            if (ret && selectedDateValue != mkDate(dayOfMth(selectedDateValue),this.selection() + 1 ,year(selectedDateValue)))
            {
                selectedDateValue = element.dateStartMth(mkDate(dayOfMth(selectedDateValue),this.selection() + 1 ,year(selectedDateValue)));
                element.setCalendarDates();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                if (element.dateStartMth(mkDate(dayOfMth(selectedDateValue),this.selection() + 1 ,year(selectedDateValue))) == dateNull())
                {
                    info("@GLS106109");
                    this.selection(mthOfYr(selectedDateValue) - 1);
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectedDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean   ret;
            ;
            ret = super();
            if (ret)
            {
                selectedDateValue = element.dateStartMth(mkDate(dayOfMth(selectedDateValue),mthOfYr(selectedDateValue) ,year(this.dateValue())));
                element.setCalendarDates();
            }
            return false;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = true;

            ret = super();

            if (ret)
            {
                if (element.dateStartMth(mkDate(dayOfMth(selectedDateValue),mthOfYr(selectedDateValue) ,year(this.dateValue()))) == dateNull())
                {
                    info("@GLS106109");
                    this.dateValue(selectedDateValue);
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonNextMonth</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>mouseUp</Name>
						<Source><![CDATA[
        int mouseUp(int x, int y, int button, boolean ctrl, boolean shift)
        {
            int ret;

            ret = super(x, y, button, ctrl, shift);
            element.nextMonth(#taskPageDown);

            return 1; // => closeSelect not called
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayCalendarDate</Name>
			<Table>RPayCalendarDate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayDayType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>CalendarDateIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayCalendarDateLine</Name>
			<Table>RPayCalendarDateLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayCalendarTimeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayCalendarDate</JoinSource>
			<Index>RecId</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpPayTimeGroupSum</Name>
			<Table>TmpRPayTimeGroupSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Day</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayShedule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmplId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HourShedule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayCalendarTimeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayCalendarDateLine</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RpayCalendarSumTime</Name>
			<Table>RPayCalendarDateLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayCalendarTimeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayCalendarDate</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP155</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemButton</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<LeftMode>RightEdge</LeftMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayCalendarCreate</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageOverview</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PayTimeDate_TransDate</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>PayCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Day</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>DateDayName</DataMethod>
										<DataSource>PayCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Month</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MonthName</DataMethod>
										<DataSource>PayCalendarDate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PayCalendarDate_PayDateType</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayDayType</DataField>
										<DataSource>PayCalendarDate</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>PayCalendarDate</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>PayCalendarDate</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageCalendar</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Calendar</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTableControl">
										<Name>DaysTable</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Table</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateCellWorkDay</Name>
												<AlignControl>No</AlignControl>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>30</Height>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>30</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Center</Alignment>
												<Bold>Normal</Bold>
												<DateDay>Digits2</DateDay>
												<DateMonth>None</DateMonth>
												<DateSeparator>None_None</DateSeparator>
												<DateYear>None</DateYear>
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Font>Arial</Font>
												<FontSize>10</FontSize>
												<LabelBold>Normal</LabelBold>
												<LookupButton>Never</LookupButton>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateCellDisabled</Name>
												<AlignControl>No</AlignControl>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<Height>30</Height>
												<HeightMode>Auto</HeightMode>
												<Skip>Yes</Skip>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>30</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Center</Alignment>
												<BackgroundColor>InactiveBorder</BackgroundColor>
												<Bold>Normal</Bold>
												<DateDay>Digits2</DateDay>
												<DateMonth>None</DateMonth>
												<DateSeparator>None_None</DateSeparator>
												<DateYear>None</DateYear>
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Font>Arial</Font>
												<FontSize>10</FontSize>
												<ForegroundColor>DisabledText</ForegroundColor>
												<LabelBold>Normal</LabelBold>
												<LookupButton>Never</LookupButton>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateCellHoliday</Name>
												<AlignControl>No</AlignControl>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>30</Height>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>30</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Center</Alignment>
												<BackgroundColorRGB>
													<Red>255</Red>
													<Green>0</Green>
													<Blue>0</Blue>
												</BackgroundColorRGB>
												<Bold>Normal</Bold>
												<ColorScheme>RGB</ColorScheme>
												<DateDay>Digits2</DateDay>
												<DateMonth>None</DateMonth>
												<DateSeparator>None_None</DateSeparator>
												<DateYear>None</DateYear>
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Font>Arial</Font>
												<FontSize>10</FontSize>
												<ForegroundColorRGB>
													<Red>64</Red>
													<Green>0</Green>
													<Blue>64</Blue>
												</ForegroundColorRGB>
												<LabelBold>Normal</LabelBold>
												<LabelForegroundColorRGB>
													<Red>31</Red>
													<Green>0</Green>
													<Blue>0</Blue>
												</LabelForegroundColorRGB>
												<LookupButton>Never</LookupButton>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateCellDayOff</Name>
												<AlignControl>No</AlignControl>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>30</Height>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>30</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Center</Alignment>
												<BackgroundColorRGB>
													<Red>0</Red>
													<Green>0</Green>
													<Blue>255</Blue>
												</BackgroundColorRGB>
												<Bold>Normal</Bold>
												<ColorScheme>RGB</ColorScheme>
												<DateDay>Digits2</DateDay>
												<DateMonth>None</DateMonth>
												<DateSeparator>None_None</DateSeparator>
												<DateYear>None</DateYear>
												<ExtendedDataType>TransDate</ExtendedDataType>
												<Font>Arial</Font>
												<FontSize>10</FontSize>
												<ForegroundColorRGB>
													<Red>8</Red>
													<Green>0</Green>
													<Blue>0</Blue>
												</ForegroundColorRGB>
												<LabelBold>Normal</LabelBold>
												<LabelForegroundColorRGB>
													<Red>31</Red>
													<Green>0</Green>
													<Blue>0</Blue>
												</LabelForegroundColorRGB>
												<LookupButton>Never</LookupButton>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<Columns>7</Columns>
										<Rows>6</Rows>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>MonthGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Top>0</Top>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonPrevMonth</Name>
												<AlignControl>Yes</AlignControl>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>20</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Border>Flat</Border>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS76523</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>selectedDateText</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>21</Left>
												<LeftMode>Manual</LeftMode>
												<Top>3</Top>
												<TopMode>Manual</TopMode>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>110</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Alignment>Center</Alignment>
												<Bold>Bold</Bold>
												<Font>Arial</Font>
												<FontSize>9</FontSize>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>MonthViewer</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS11451</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>SelectedDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DateDay>None</DateDay>
												<DateMonth>None</DateMonth>
												<DateSeparator>None_None</DateSeparator>
												<Label>@SYS10396</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonNextMonth</Name>
												<AlignControl>Yes</AlignControl>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>20</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Border>Flat</Border>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS76524</Text>
											</AxFormControl>
										</Controls>
										<BottomMargin>0</BottomMargin>
										<BottomMarginMode>Fixed</BottomMarginMode>
										<Columns>5</Columns>
										<Columnspace>0</Columnspace>
										<ColumnspaceMode>Fixed</ColumnspaceMode>
										<TopMargin>0</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS11839</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ctrlSplitterXRateTable</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>4</Width>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<HideIfEmpty>No</HideIfEmpty>
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>HoursTab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageOverviewHours</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneHours</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTabHours</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroupHours</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>NewButtonHours</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteButtonHours</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys14425</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>PayCalendarDateLine</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayCalendarDateLine_PayCalendarTimeCode</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayCalendarTimeCode</DataField>
										<DataSource>PayCalendarDateLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>PayCalendarDateLine_FromTime</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FromTime</DataField>
										<DataSource>PayCalendarDateLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTimeControl">
										<Name>PayCalendarDateLine_ToTime</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Time</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ToTime</DataField>
										<DataSource>PayCalendarDateLine</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>PayCalendarDateLine</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageTimes</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridTimes</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayCalendarSumTime_PayCalendarTimeCode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayCalendarTimeCode</DataField>
										<DataSource>RpayCalendarSumTime</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Hours</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>hours</DataMethod>
										<DataSource>RpayCalendarSumTime</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>RpayCalendarSumTime</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS22171</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageGroups</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpPayTimeGroupSum_TimeGroup</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TimeGroup</DataField>
										<DataSource>TmpPayTimeGroupSum</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpPayTimeGroupSum_Hour</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>65</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Hour</DataField>
										<DataSource>TmpPayTimeGroupSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TmpPayTimeGroupSum</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS1177</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<TabAutoChange>No</TabAutoChange>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>