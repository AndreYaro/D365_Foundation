<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxIntgrExportDocumentSplit_CN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class TaxIntgrExportDocumentSplit_CN extends FormRun
    {
        // rec Id of the export document selected to be split
        RefRecId currentExportDocRecID;

        // rec Id of the the document source
        RefRecId currentExportDocSourceRecId;

        // split calculation object holidng the calculated result
        TaxIntgrExportDocSplitCalcView_CN splitCalcView;

        TaxIntgrExportDocumentOperationView_CN taxIntgrExportDocumentOperationView_CN;

        // used to refresh parent form
        FormDataSource parentDataSource;

        // number of lines int he invoice
        [FormObservable]
        int numOfInvoiceLines;
        TaxIntgrExportDocumentSplitType_CN currentSplitType;
}
]]></Source>
			</Method>
			<Method>
				<Name>constructNewSplitCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs new split calculation instance.
    /// </summary>
    /// <returns>
    /// The split calculation instance.
    /// </returns>
    public TaxIntgrExportDocumentSplitCalc_CN constructNewSplitCalc()
    {
        return TaxIntgrExportDocumentSplitCalc_CN::construct(currentExportDocSourceRecId, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createExportDoc</Name>
				<Source><![CDATA[
    /// <summary>
    /// when user clicks ok, validate and create export doc.
    /// </summary>
    /// <returns>
    /// whether validation / creation is successful.
    /// </returns>
    public boolean createExportDoc()
    {
        TaxIntgrExportDocumentSplitCalc_CN splitCalc;
        boolean ret = true;

        splitCalc = splitCalcView.parmSplitCalc();
        ret = splitCalc.validate();

        if (ret)
        {
            TaxIntgrExportDocumentSplit_CN::splitBasedOnCalc(splitCalc);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewSplitDoc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new split doc which contains all the remaining percent or amount.
    /// </summary>
    public void createNewSplitDoc()
    {
        AmountCur   newAmount;
        Percent     newPercent;
        TaxIntgrExportDocumentSplitCalc_CN splitCalc;
        TaxIntgrExportDocTmp_CN exportDocLocal;

        splitCalc = splitCalcView.parmSplitCalc();
        switch (comboBoxSplitBy.selection())
        {
            case TaxIntgrExportDocumentSplitType_CN::ByAmount:
                newAmount = splitCalc.getRemainingAmount();
                exportDocLocal.TransactionCurrencyAmount = newAmount;
                exportDocLocal.MiscChargesNetAmount = splitCalc.getRemainingChargesNetAmount();
                exportDocLocal.MiscChargesTaxAmount = splitCalc.getRemainingChargesTaxAmount();
                break;
            case TaxIntgrExportDocumentSplitType_CN::ByPercent:
                newPercent = splitCalc.getRemainingPercent();
                exportDocLocal.Percent = newPercent;
                break;
        }

        splitCalcView.createExportDoc(
            comboBoxSplitBy.selection(),
            exportDocLocal);

        taxIntgrExportDocTmp_CN_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableActiveFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the controls status.
    /// </summary>
    public void enableActiveFields()
    {
        switch (comboBoxSplitBy.selection())
        {
            case TaxIntgrExportDocumentSplitType_CN::ByAmount:
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, TransactionCurrencyAmount)).allowEdit(true);
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, Percent)).allowEdit(false);
                buttonSplit.visible(true);
                buttonSplitByQuantity.visible(false);
                break;
            case TaxIntgrExportDocumentSplitType_CN::ByPercent:
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, TransactionCurrencyAmount)).allowEdit(false);
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, Percent)).allowEdit(true);
                buttonSplit.visible(true);
                buttonSplitByQuantity.visible(false);
                break;
            case TaxIntgrExportDocumentSplitType_CN::ByQuantity:
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, TransactionCurrencyAmount)).allowEdit(false);
                taxIntgrExportDocTmp_CN_ds.object(fieldNum(TaxIntgrExportDocTmp_CN, Percent)).allowEdit(false);
                buttonSplit.visible(false);
                buttonSplitByQuantity.visible(true);
                break;
        }

        element.setFocusedControl();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentExportDocRecID</Name>
				<Source><![CDATA[
    public RefRecId getCurrentExportDocRecID()
    {
        return currentExportDocRecID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumOfInvoiceLines</Name>
				<Source><![CDATA[
    display public Integer getNumOfInvoiceLines()
    {
        return numOfInvoiceLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        taxIntgrExportDocumentOperationView_CN = element.args().record();
        currentExportDocRecID = taxIntgrExportDocumentOperationView_CN.TaxIntgrExportDocument_CN;
        currentExportDocSourceRecId = taxIntgrExportDocumentOperationView_CN.TaxIntgrExportDocumentSource_CN;
        parentDataSource = FormDataUtil::getFormDataSource(this.args().record());

        super();

        currentSplitType = TaxIntgrExportDocumentSplitType_CN::ByAmount;
        this.resetSplitTmp();
        this.enableActiveFields();

        numOfInvoiceLines = TaxIntgrExportDocumentLine_CN::getNumOfLinesByDocRecId(element.getCurrentExportDocRecID());
    }

]]></Source>
			</Method>
			<Method>
				<Name>openSplitDetailForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens split details form.
    /// </summary>
    /// <param name="_editMode">
    /// View or edit.
    /// </param>
    public void openSplitDetailForm(NoYes _editMode)
    {
        MenuFunction menuFunction;
        Args args;

        args = new Args();
        args.parmEnumType(enumNum(NoYes));
        args.parmEnum(_editMode);
        args.parmObject(splitCalcView);
        args.record(taxIntgrExportDocTmp_CN);

        menuFunction = new MenuFunction(menuitemDisplayStr(TaxIntgrExportDocumentSplitDetail_CN), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetSplitTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the split calculation.
    /// </summary>
    /// <param name="_isCreateNewLine">
    /// Whether create an default line.
    /// </param>
    public void resetSplitTmp(boolean _isCreateNewLine = true)
    {
        TaxIntgrExportDocumentSplitCalc_CN splitCalc;

        //commit current change
        taxIntgrExportDocTmp_CN_ds.research();

        splitCalc = this.constructNewSplitCalc();
        splitCalcView = TaxIntgrExportDocSplitCalcView_CN::construct(splitCalc);
        taxIntgrExportDocTmp_CN.setTmpData(splitCalcView.getExportDoc());
        if (_isCreateNewLine)
        {
            element.createNewSplitDoc();
        }
        else
        {
            taxIntgrExportDocTmp_CN_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFocusedControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets foucs control after operation.
    /// </summary>
    public void setFocusedControl()
    {
        switch (comboBoxSplitBy.selection())
        {
            case TaxIntgrExportDocumentSplitType_CN::ByAmount:
                amount.setFocus();
                break;
            case TaxIntgrExportDocumentSplitType_CN::ByPercent:
                percent.setFocus();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>splitAuto</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs automatically split.
    /// </summary>
    public void splitAuto()
    {
        element.resetSplitTmp(false);
        splitCalcView.parmSplitCalc().splitAuto();
        splitCalcView.populateAllExportDoc();
        taxIntgrExportDocTmp_CN_ds.research();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TaxIntgrExportDocTmp_CN</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            TaxIntgrExportDocTmp_CN exportDocTmpLocal;
            boolean ret;

            ret = super();

            if (ret)
            {
                exportDocTmpLocal = this.cursor();
                switch (comboBoxSplitBy.selection())
                {
                    case TaxIntgrExportDocumentSplitType_CN::ByAmount:
                        if (sign(exportDocTmpLocal.TransactionCurrencyAmount) != sign(exportDocTmpLocal.orig().TransactionCurrencyAmount))
                        {
                            ret = checkFailed("@SYS4002256");
                        }

                        if (abs(exportDocTmpLocal.TransactionCurrencyAmount) - abs(exportDocTmpLocal.orig().TransactionCurrencyAmount)
                            > abs(splitCalcView.parmSplitCalc().getRemainingAmount()))
                        {
                            ret = checkFailed("@SYS4002257");
                        }
                        break;
                    case TaxIntgrExportDocumentSplitType_CN::ByPercent:
                        if (exportDocTmpLocal.Percent - exportDocTmpLocal.orig().Percent
                            > splitCalcView.parmSplitCalc().getRemainingPercent())
                        {
                            ret = checkFailed("@SYS4002257");
                        }
                        break;
                    case TaxIntgrExportDocumentSplitType_CN::ByQuantity:
                        break;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            splitCalcView.removeExportDoc(
                comboBoxSplitBy.selection(),
                TaxIntgrExportDocTmp_CN);

            this.research(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            int pos;
            super();

            //first reverse current
            splitCalcView.updateExportDoc(
                comboBoxSplitBy.selection(),
                TaxIntgrExportDocTmp_CN);

            pos = this.getPosition();
            this.research(true);
            this.setPosition(pos);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Percent</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                taxIntgrExportDocTmp_CN_ds.write();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxIntgrExportDocumentView_CN</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.queryBuildDataSource().findRange(fieldNum(TaxIntgrExportDocumentView_CN, RecId)).value(SysQuery::value(currentExportDocRecID));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.queryBuildDataSource().addRange(fieldNum(TaxIntgrExportDocumentView_CN, RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ComboBoxSplitBy</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret
                && currentSplitType != comboBoxSplitBy.selection())
            {
                currentSplitType = comboBoxSplitBy.selection();
                element.resetSplitTmp(currentSplitType != TaxIntgrExportDocumentSplitType_CN::ByQuantity);
                element.enableActiveFields();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSplitByQuantity</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.OpenSplitDetailForm(NoYes::Yes);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSplit</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.createNewSplitDoc();
            element.setFocusedControl();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonReset</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.resetSplitTmp(currentSplitType != TaxIntgrExportDocumentSplitType_CN::ByQuantity);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSplitAuto</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.splitAuto();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDetails</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.OpenSplitDetailForm(NoYes::No);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommandOk</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            int pos;
            if (element.createExportDoc())
            {
                pos = parentDataSource.getPosition();
                super();
                parentDataSource.research();
                parentDataSource.setPosition(pos);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxIntgrExportDocTmp_CN</Name>
			<Table>TaxIntgrExportDocTmp_CN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalculateExportDocRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverAmountLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesNetAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Number</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Percent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIntgrExportDocumentSource_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>ExportDocumentSource</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxIntgrExportDocumentView_CN</Name>
			<Table>TaxIntgrExportDocumentView_CN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Address</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCommodity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DescriptionCharges</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAuditorName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsExported</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOverAmountLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxInvoiceLines</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesNetAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MiscChargesTaxValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentCollectorName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversedBookNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversedInvoiceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegistration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATInvoiceDescTable_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS4002222</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupHeader</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Customer</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustName</DataField>
						<DataSource>TaxIntgrExportDocumentView_CN</DataSource>
						<Label>@SYS27874</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RealEditAmount</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransactionCurrencyAmount</DataField>
						<DataSource>TaxIntgrExportDocumentView_CN</DataSource>
						<Label>@SYS3494</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>NumOfInvoiceLines</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getNumOfInvoiceLines</DataMethod>
						<Label>@GLS60734</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>ComboBoxSplitBy</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TaxIntgrExportDocumentSplitType_CN</EnumType>
						<Label>@SYS109200</Label>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@SYS4002222</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupGrid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ActionPane</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneTabControl">
								<Name>ActionPaneTab</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPaneTab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonSplitByQuantity</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS24089</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonSplit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Style>Standard</Style>
												<Text>@SYS24089</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonDelete</Name>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Command>DeleteRecord</Command>
												<NeedsRecord>Yes</NeedsRecord>
												<SaveRecord>No</SaveRecord>
												<Text>@SYS21354</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonReset</Name>
												<ElementPosition>1342177276</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS3073</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonSplitAuto</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612732</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS4002250</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>ButtonDetails</Name>
												<ElementPosition>1879048188</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Read</NeededPermission>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@SYS60132</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Columns>5</Columns>
						<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>Number</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Number</DataField>
								<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Percent</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<DataField>Percent</DataField>
								<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
								<Label>@SYS15774</Label>
								<NoOfDecimals>4</NoOfDecimals>
								<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Amount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransactionCurrencyAmount</DataField>
								<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
								<Label>@SYS62867</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CheckBoxOverAmountLimit</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>IsOverAmountLimit</DataField>
								<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TaxIntgrExportDocTmp_CN</DataSource>
					</AxFormControl>
				</Controls>
				<Caption>@SYS4002223</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup1</Name>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandOk</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandCancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>