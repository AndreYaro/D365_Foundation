<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerVoucherTransAuditLog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public final class LedgerVoucherTransAuditLog extends FormRun 
{
}
]]></Source>
			</Method>
			<Method>
				<Name>getGeneralJournalAccountEntryRecIdTmp</Name>
				<Source><![CDATA[
	private GeneralJournalAccountEntryRecIdTmp getGeneralJournalAccountEntryRecIdTmp()
	{
		GeneralJournalAccountEntryRecIdTmp localGeneralJournalAccountEntryRecIdTmp;

		LedgerVoucherTransAuditLogContract contract = element.args().parmObject();

		if (contract)
		{
			localGeneralJournalAccountEntryRecIdTmp = contract.parmGeneralJournalAccountEntryTmp();
		}
		else
		{
			Query query = element.getUserQuery();

			if (query)
			{
				localGeneralJournalAccountEntryRecIdTmp = element.insertQueryResults(query);
                this.setGeneralJournalAccountEntryRecIdTmp(localGeneralJournalAccountEntryRecIdTmp);
			}
			else
			{
                element.close();
			}

		}

		return localGeneralJournalAccountEntryRecIdTmp;
	}

]]></Source>
			</Method>
			<Method>
				<Name>setGeneralJournalAccountEntryRecIdTmp</Name>
				<Source><![CDATA[
    private void setGeneralJournalAccountEntryRecIdTmp(GeneralJournalAccountEntryRecIdTmp _generalJournalAccountEntryRecIdTmp)
    {
        element.args().parmObject(LedgerVoucherTransAuditLogContract::construct(_generalJournalAccountEntryRecIdTmp));
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFieldMapping</Name>
				<Source><![CDATA[
	private Map generateFieldMapping(Query _query)
	{
		Map fieldMap = new Map(Types::String, Types::Container);
		
		QueryBuildDataSource generalJournalAccountEntryDs = _query.dataSourceTable(tableNum(GeneralJournalAccountEntry));
		fieldMap.insert(fieldStr(GeneralJournalAccountEntryRecIdTmp, GeneralJournalAccountEntry),
			[generalJournalAccountEntryDs.uniqueId(), fieldStr(GeneralJournalAccountEntry, RecId)]);

		return fieldMap;
	}

]]></Source>
			</Method>
			<Method>
				<Name>getUserQuery</Name>
				<Source><![CDATA[
	private Query getUserQuery()
	{
		QueryRun queryRun = element.buildQueryRun();

		if (!queryRun.prompt())
		{
			return null;
		}

		return queryRun.query();
	}

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryRun</Name>
				<Source><![CDATA[
	private QueryRun buildQueryRun()
	{
		Query query = new Query();
        QueryBuildDataSource generalJournalEntryDs = query.addDataSource(tableNum(GeneralJournalEntry));
		GeneralJournalEntry::addSecureRangeForLedger(generalJournalEntryDs);
		generalJournalEntryDs.addRange(fieldNum(GeneralJournalEntry, SubledgerVoucher));
		generalJournalEntryDs.addRange(fieldNum(GeneralJournalEntry, JournalNumber));

        QueryBuildDataSource generalJournalAccountEntryDs = generalJournalEntryDs.addDataSource(tableNum(GeneralJournalAccountEntry));
        generalJournalAccountEntryDs.joinMode(JoinMode::InnerJoin);
        generalJournalAccountEntryDs.addLink(fieldNum(GeneralJournalEntry, RecId), fieldNum(GeneralJournalAccountEntry, GeneralJournalEntry));

        QueryBuildDataSource edgerVoucherTransAuditLogDetailDs = generalJournalAccountEntryDs.addDataSource(tableNum(LedgerVoucherTransAuditLogDetail));
        edgerVoucherTransAuditLogDetailDs.joinMode(JoinMode::ExistsJoin);
        edgerVoucherTransAuditLogDetailDs.addLink(fieldNum(GeneralJournalAccountEntry, RecId), fieldNum(LedgerVoucherTransAuditLogDetail, GeneralJournalAccountEntry));

		return new QueryRun(query);
	}

]]></Source>
			</Method>
			<Method>
				<Name>insertQueryResults</Name>
				<Source><![CDATA[
	private GeneralJournalAccountEntryRecIdTmp insertQueryResults(Query _query)
	{
		GeneralJournalAccountEntryRecIdTmp tempTable;

		QueryRun queryRun = new QueryRun(_query);

		while (queryRun.next())
		{
			GeneralJournalAccountEntry generalJournalAccountEntry = queryRun.get(tablenum(GeneralJournalAccountEntry));

			tempTable.GeneralJournalAccountEntry = generalJournalAccountEntry.RecId;
			tempTable.insert();
		}

		return tempTable;
	}

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerVoucherTransAuditLog</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
		[Hookable(false)]
		public void executeQuery()
		{
			GeneralJournalAccountEntryRecIdTmp accountEntryRecIdTmp = element.getGeneralJournalAccountEntryRecIdTmp();
			GeneralJournalAccountEntryRecIdTmp.linkPhysicalTableInstance(accountEntryRecIdTmp);
			GeneralJournalAccountEntryRecIdTmp_ds.research();

			this.query().dataSourceTable(tableNum(GeneralJournalAccountEntryRecIdTmp))
                .addLink(fieldNum(GeneralJournalAccountEntryRecIdTmp, GeneralJournalAccountEntry), fieldNum(LedgerVoucherTransAuditLogDetail, GeneralJournalAccountEntry));
			
			this.queryBuildDataSource().addOrderByField(fieldNum(LedgerVoucherTransAuditLog, CreatedDateTime), SortOrder::Descending);

			super();
		}

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LedgerVoucherTransAuditLog_CreatedDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
		[Hookable(false)]
		public void jumpRef()
		{
			Args args = new Args();

			args.record(ledgerVoucherTransAuditLog);

			new MenuFunction(menuItemDisplayStr(LedgerVoucherTransAuditLogDetail), MenuItemType::Display).run(args);
		}

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerVoucherTransAuditLog</Name>
			<Table>LedgerVoucherTransAuditLog</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Note</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerVoucherTransAuditLogDetail</Name>
			<Table>LedgerVoucherTransAuditLogDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalAccountEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherTransAuditLog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NewDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerVoucherTransAuditLog</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>GeneralJournalAccountEntryRecIdTmp</Name>
			<Table>GeneralJournalAccountEntryRecIdTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalAccountEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<JoinSource>LedgerVoucherTransAuditLogDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GeneralLedger:LedgerVoucherTransAuditLog</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Standard</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>LedgerVoucherTransAuditLogGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>LedgerVoucherTransAuditLogGrid</Name>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>LedgerVoucherTransAuditLog_CreatedDateTime</Name>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreatedDateTime</DataField>
						<DataSource>LedgerVoucherTransAuditLog</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LedgerVoucherTransAuditLog_Note</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Note</DataField>
						<DataSource>LedgerVoucherTransAuditLog</DataSource>
						<Label>@GeneralLedger:LedgerVoucherTransAuditLogNote</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LedgerVoucherTransAuditLog_CreatedBy</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreatedBy</DataField>
						<DataSource>LedgerVoucherTransAuditLog</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>LedgerVoucherTransAuditLog</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>