<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetPlanJustificationDropDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetPlanJustificationDropDialog extends FormRun
{
    private Map justificationActionMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>attachJustification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intiates the attachment process of a justification to a given <c>BudgetPlanHeader</c> record.
    /// </summary>
    /// <param name = "_header">The <c>BudgetPlanHeader</c> record.</param>
    private void attachJustification(BudgetPlanHeader _header)
    {
        DocuRef docuRef = _header.findJustificationAttachment();

        if (docuRef)
        {
            ttsbegin;
            docuRef.selectForUpdate(true);
            docuRef.delete();
            ttscommit;
        }

        BudgetPlanCache::insertValue(
            BudgetPlanCacheScope::JustificationAttachment,
            [_header.RecId, curUserId()],
            [true]);

        BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Display, menuItemDisplayStr(DocumentUpload), this, _header);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>JustificationActions</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>initComboBox</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initialized the combo box from a <c>SysDictEnum</c> object and the filled in <c>Map</c> object.
        /// </summary>
        /// <param name = "_justificationActionsEnum">The <c>SysDictEnum</c> of justification actions.</param>
        private void initComboBox(SysDictEnum _justificationActionsEnum)
        {
            this.label(_justificationActionsEnum.label());
            this.items(justificationActionMap.elements());
            MapEnumerator mapEnumerator = justificationActionMap.getEnumerator();
            while (mapEnumerator.moveNext())
            {
                this.item(mapEnumerator.currentKey() + 1);
                this.text(enum2Str(mapEnumerator.currentValue()));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>fillJustificationActionMap</Name>
						<Source><![CDATA[
        /// <summary>
        /// Fills the forms' <c>Map</c> object with the enums corresponding to the allowed actions that can be performed.
        /// </summary>
        /// <param name = "_justificationActionEnumDict">The <c>SysDictEnum</c> object of the justification actions.</param>
        private void fillJustificationActionMap(SysDictEnum _justificationActionEnumDict)
        {
            int enumCount = 0;
            BudgetPlanJustificationActions justificationAction = _justificationActionEnumDict.firstValue();
            BudgetPlanHeader header = element.args().record();
            DocuRef docuRef = header.findJustificationAttachment();

            for (int i = 0; i < _justificationActionEnumDict.values(); i++)
            {
                if (justificationAction == BudgetPlanJustificationActions::Attach
                    || justificationAction == BudgetPlanJustificationActions::New
                    || (justificationAction == BudgetPlanJustificationActions::OpenExisting && docuRef))
                {
                    justificationActionMap.insert(enumCount, justificationAction);
                    enumCount++;
                }

                justificationAction = _justificationActionEnumDict.nextValue(justificationAction);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();

            // Construct the local justification action map object with the allowed values that the user can perform.
            justificationActionMap = new Map(Types::Integer, Types::Enum);
            SysDictEnum dictEnum = new SysDictEnum(enumNum(BudgetPlanJustificationActions));
            this.fillJustificationActionMap(dictEnum);

            // Intialize the combo box based on the allowed values.
            this.initComboBox(dictEnum);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            BudgetPlanHeader header = element.args().record();
            BudgetPlanJustificationActions action = justificationActionMap.lookup(JustificationActions.selection());

            switch (action)
            {
                case BudgetPlanJustificationActions::Attach:
                    element.attachJustification(header);
                    break;

                case BudgetPlanJustificationActions::New:
                    BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanJustification), this, element.args().record());
                    break;

                case BudgetPlanJustificationActions::OpenExisting:
                    BudgetPlanCache::insertValue(
                        BudgetPlanCacheScope::JustificationAttachment,
                        [header.RecId, curUserId()],
                        [true]);
                    BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Display, menuItemDisplayStr(DocuAttachment), this, header);
                    break;

                default:
                    throw error("@Budget:BudgetPlan_Validation_JustificationAction");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<DataSource xmlns="">BudgetPlanHeader</DataSource>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>JustificationActionHelp</Name>
				<AllowEdit>No</AllowEdit>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@Budget:BudgetPlan_JustificationHelp</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>JustificationContentGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>JustificationActionsGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>JustificationActions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Budget:BudgetPlan_JustificationAction</Label>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>