<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResAvailabilityView</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResAvailabilityView extends FormRun
{
    private ResAvailabilityViewSearchController searchController;
    private ResCharacteristicsController resourceCharacteristics;
    private ResAvailabilityViewContext context;

}
]]></Source>
			</Method>
			<Method>
				<Name>availabilityViewContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource availability view context.
    /// </summary>
    /// <param name = "_context">AvailabilityView context object.</param>
    /// <returns>AvailabilityView context object.</returns>
    public ResAvailabilityViewContext availabilityViewContext(ResAvailabilityViewContext _context = context)
    {
        context = _context;
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Availability view form initialization.
    /// </summary>
    public void init()
    {
        super();

        ResUtil::validateResPerfDataUpgradeStatus();

        xArgs args = element.args();
        boolean computeForTimescale;

        if (args.caller())
        {
            context = args.caller() as ResAvailabilityViewContext;
        }

        if (!context)
        {
            context = ResAvailabilityViewContext::construct();
            computeForTimescale = true;
        }

        // Close this form if ResRollupCalendarShared does not have sufficient TimeFrame range.
        if (ResUtil::validateRollupCalendarTimeFrameRange(context.startDateTime(), context.endDateTime(), true, element))
        {
            if (context.showControlSingleResourceHeightParam())
            {
                ResResourceID resourceID =  ResourceFacade::getId(context.resource());
                ResResourceName resourceName = ResourceFacade::getName(context.resource());
                str caption = strfmt("@Res:ReservationDetailsCaption", resourceID, resourceName);
                this.design().caption(caption);
            }

            SearchControls.visible(context.showSearchButtonsParam());
            OpenFilterSettings.visible(context.showFilterSettingsParam());

            ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
            viewSetting.coverage(ResUserSettingCoverage::ResourceAvailabilityView);
            viewSetting.find();

            if (viewSetting)
            {
                context.showRemainingCapacity(viewSetting.showScheduleCapacity());
                context.showScheduleDescription(viewSetting.showScheduleDescription());
                context.capacityAggregation(viewSetting.capacityAggregation());
            }

            StartDateTime.dateTimeValue(context.startDateTime());
            EndDateTime.dateTimeValue(context.endDateTime());

            if (computeForTimescale)
            {
                AVTimeframeType timescale = ResUtil::getRecommendedTimeframeType(context.startDateTime(), context.endDateTime());
                context.timescale(timescale);
            }

            ResourceAvailability.startDateTime(context.startDateTime());
            ResourceAvailability.endDateTime(context.endDateTime());
            ResourceAvailability.timescale(context.timescale());
            ResourceAvailability.controlContext(context);

            searchController = ResAvailabilityViewSearchController::newFromAvailabilityViewControl(ResourceAvailability);
            resourceCharacteristics = ResCharacteristicsController::construct();
            resourceCharacteristics.searchCriteria(searchController.searchCriteria());
            resourceCharacteristics.searchCriteriaReady += eventhandler(element.applyAdvancedSearchCriteria);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyAdvancedSearchCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply advanced resource search criteria.
    /// </summary>
    void applyAdvancedSearchCriteria()
    {
        searchController.searchCriteria(resourceCharacteristics.searchCriteria());
        searchController.searchByAnyCriteria(SearchString.text());
        searchController.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewSettingsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected view settings.
    /// </summary>
    /// <param name = "_viewSetting">View settings instance.</param>
    void viewSettingsReady(ResAvailabilityViewSetting _viewSetting)
    {
        context = ResourceAvailability.controlContext();
        boolean hasChanged;
        boolean needsRefresh;

        utcdatetime dateTime;
        dateTime = _viewSetting.startDateTime();
        if (context.startDateTime() != dateTime)
        {
            context.startDateTime(dateTime);
            StartDateTime.dateTimeValue(dateTime);
            ResourceAvailability.startDateTime(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        dateTime = _viewSetting.endDateTime();
        if (context.endDateTime() != dateTime)
        {
            context.endDateTime(dateTime);
            EndDateTime.dateTimeValue(dateTime);
            ResourceAvailability.endDateTime(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        AVTimeframeType timescale = _viewSetting.timescale();
        if (context.timescale() != timescale)
        {
            context.timescale(timescale);
            ResourceAvailability.timescale(timescale);
            hasChanged = true;
            needsRefresh = true;
        }

        boolean showContent = _viewSetting.showScheduleDescription();
        if (context.showScheduleDescription() != showContent)
        {
            context.showScheduleDescription(showContent);
            hasChanged = true;
        }

        showContent = _viewSetting.showScheduleCapacity();
        if (context.showRemainingCapacity() != showContent)
        {
            context.showRemainingCapacity(showContent);
            hasChanged = true;
        }

        ResCapacityAggregation aggregation = _viewSetting.capacityAggregation();
        if (context.capacityAggregation() != aggregation)
        {
            context.capacityAggregation(aggregation);
            hasChanged = true;
            needsRefresh = true;
        }

        if (hasChanged)
        {
            ResourceAvailability.controlContext(context);
        }

        if (needsRefresh)
        {
            ResourceAvailability.clearSelections();
            ResourceAvailability.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterSettingsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected filter settings.
    /// </summary>
    /// <param name = "_filterSetting">Filter settings instance.</param>
    void filterSettingsReady(ResAvailabilityFilterSetting _filterSetting)
    {
        boolean hasChanged = false;
        context = ResourceAvailability.controlContext();

        str legalEntities = _filterSetting.LegalEntities();
        if (legalEntities != context.LegalEntities())
        {
            context.LegalEntities(legalEntities);
            hasChanged = true;
        }

        str departments = _filterSetting.Departments();
        if (departments != context.Departments())
        {
            context.Departments(departments);
            hasChanged = true;
        }

        str categories = _filterSetting.ResourceCategories();
        if (categories != context.ResourceCategories())
        {
            context.ResourceCategories(categories);
            hasChanged = true;
        }

        ProjActivityRoleRecency roleRecency = _filterSetting.ResourceCategoryRecency();
        if (roleRecency != context.ResourceCategoriesRecency())
        {
            context.ResourceCategoriesRecency(roleRecency);
            hasChanged = true;
        }

        if (hasChanged)
        {
            ResourceAvailability.controlContext(context);
            ResourceAvailability.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handle form task operations.
    /// </summary>
    /// <param name = "_taskId">Task identifier.</param>
    /// <returns>1 when the operation succeeds. Otherwise, 0.</returns>
    public int task(int _taskId)
    {
        #Task
        int ret = super(_taskId);

        if (ret && _taskId == #taskRefresh)
        {
            SearchString.text("");
            resourceCharacteristics.searchCriteria(ResSearchCriteria::construct());
            ResourceAvailability.clearSelections();

            element.applyAdvancedSearchCriteria();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SoftBookRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftBookHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft book hours of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardBookHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard book hours of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailabilityDataController dataController = ResourceAvailabilityDataController::construct(ResourceAvailability);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearSelections</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Synchronizes resource availability view.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Synchronize</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Synchronizes resource availability view.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
            ResourceAvailability.refreshAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenViewSettings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open Availability view settings form.
        /// </summary>
        public void clicked()
        {
            super();

            ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
            context = ResourceAvailability.controlContext();
            context.startDateTime(StartDateTime.dateTimeValue());
            context.endDateTime(EndDateTime.dateTimeValue());
            viewSetting.startDateTime(context.startDateTime());
            viewSetting.endDateTime(context.endDateTime());
            viewSetting.timescale(context.timescale());
            viewSetting.capacityToggleDescription("@SYS4008832");
            viewSetting.showScheduleCapacity(context.showRemainingCapacity());
            viewSetting.showScheduleDescription(context.showScheduleDescription());
            viewSetting.capacityAggregation(context.capacityAggregation());

            viewSetting.coverage(ResUserSettingCoverage::ResourceAvailabilityView);
            viewSetting.selectionsReady += eventhandler(element.viewSettingsReady);
            viewSetting.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenFilterSettings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open Availability view filter settings form.
        /// </summary>
        public void clicked()
        {
            super();

            ResAvailabilityFilterSetting filterSetting = ResAvailabilityFilterSetting::construct();
            context = ResourceAvailability.controlContext();
            filterSetting.LegalEntities(context.LegalEntities());
            filterSetting.Departments(context.Departments());
            filterSetting.ResourceCategories(context.ResourceCategories());
            filterSetting.ResourceCategoryRecency(context.ResourceCategoriesRecency());

            filterSetting.selectionsReady += eventhandler(element.filterSettingsReady);
            filterSetting.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Automatically search for matching resource names when user leaves search field.
        /// </summary>
        /// <returns>Passes on the return of super.</returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ResourceAvailability.clearSelections();
                searchController.searchByAnyCriteria(SearchString.text());
                searchController.refresh();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Search</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Search for resources with specified criteria.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
            searchController.searchByAnyCriteria(SearchString.text());
            searchController.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdvancedSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open Advanced resource characteristics search form.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
            resourceCharacteristics.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddContentFromFuture</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds more content from the future.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
            ResourceAvailability.addMoreToLeft();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles event when start date/time has been modified.
        /// </summary>
        /// <returns>True when operation succeeds. Otherwise, false.</returns>
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                utcdatetime newStartDateTime = AVTimeframe::getTimeframe(this.dateTimeValue(), ResourceAvailability.timescale()).start();
                utcdatetime controlStartDateTime = ResourceAvailability.startDateTime();

                if (newStartDateTime != controlStartDateTime)
                {
                    context = ResourceAvailability.controlContext();
                    context.startDateTime(newStartDateTime);
                    ResourceAvailability.startDateTime(context.startDateTime());

                    if (newStartDateTime > ResourceAvailability.endDateTime())
                    {
                        context.endDateTime(newStartDateTime);
                        ResourceAvailability.endDateTime(context.endDateTime());
                    }

                    ResourceAvailability.controlContext(context);
                    ResourceAvailability.clearSelections();
                    ResourceAvailability.refresh();
                }
                else
                {
                    StartDateTime.dateTimeValue(controlStartDateTime);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EndDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles event when end date/time has been modified.
        /// </summary>
        /// <returns>True when operation succeeds. Otherwise, false.</returns>
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                utcdatetime newEndDateTime = AVTimeframe::getTimeframe(this.dateTimeValue(), ResourceAvailability.timescale()).end();
                utcdatetime controlEndDateTime = ResourceAvailability.endDateTime();

                if (newEndDateTime != controlEndDateTime)
                {
                    context = ResourceAvailability.controlContext();
                    context.endDateTime(newEndDateTime);
                    ResourceAvailability.endDateTime(context.endDateTime());

                    if (newEndDateTime < ResourceAvailability.startDateTime())
                    {
                        context.startDateTime(newEndDateTime);
                        ResourceAvailability.startDateTime(context.startDateTime());
                    }

                    ResourceAvailability.controlContext(context);
                    ResourceAvailability.clearSelections();
                    ResourceAvailability.refresh();
                }
                else
                {
                    EndDateTime.dateTimeValue(controlEndDateTime);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddContentFromPast</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds more content from the past.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAvailability.clearSelections();
            ResourceAvailability.addMoreToRight();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceAvailability</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>startDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust start date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">Start date/time string.</param>
        /// <returns>Start date/time value string.</returns>
        public str startDateTimeStr(str _value = AVUtil::getDateTimeStr(StartDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            StartDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>endDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust end date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">End date/time string.</param>
        /// <returns>End date/time value string.</returns>
        public str endDateTimeStr(str _value = AVUtil::getDateTimeStr(EndDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            EndDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selections</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update resource reservation details grid upon user updating chart item selection.
        /// </summary>
        /// <param name = "_selections">Chart item selections.</param>
        /// <returns>Chart item selections.</returns>
        public AvailabilityViewSelections selections(AvailabilityViewSelections _selections)
        {
            AvailabilityViewSelections avSelections = super (_selections);
            ResResourceReservationDetails::updateReservationDetailsTable(_selections, context.timescale(), ReservationDetails, ReservationDetails_ds);
            return avSelections;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Cancel resource reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();
            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceAvailability);
            resourceReservation.cancelOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Confirm</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Confirm resource soft reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();
            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceAvailability);
            resourceReservation.confirmOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ReservationDetails</Name>
			<Table>ResTmpResourceReservationDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementIDName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservedHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:ResourceAvailability</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Execute</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>SoftBookMenu</Name>
								<ElementPosition>1610612731</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS4009019</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009021</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009018</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009020</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftBookHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009863</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS4008817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>HardBookMenu</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS4009015</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009017</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009014</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009016</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardBookHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS4009862</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS4008806</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ClearSelections</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>ClearSelection</NormalImage>
								<Text>@Res:ClearSelections</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Synchronize</Name>
								<HelpText>@Res:SynchronizeResourceAvailability</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Sync</NormalImage>
								<Text>@Res:ResourceGridRefresh</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenViewSettings</Name>
								<HelpText>@Res:ViewSettingsHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>View</NormalImage>
								<Text>@Res:ViewSettings</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenFilterSettings</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@Res:FilterSettingsHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Filter</NormalImage>
								<Text>@Res:FilterSettings</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Caption>@Res:ResourceAvailability</Caption>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderControls</Name>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SearchControls</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SearchString</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:Name</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Search</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>Find</NormalImage>
								<Text>Search</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>AdvancedSearch</Name>
								<Type>Button</Type>
								<Width>64</Width>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>More</NormalImage>
								<Text>Advanced</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateRange</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>AddContentFromFuture</Name>
								<HelpText>@Res:AddMoreContentLeft</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>ChevronLeft</NormalImage>
								<Text>@Res:AddMoreContentLeft</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>StartDateTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DateTime</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:AvailabilityStartDateTime</Label>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateTimeControl">
								<Name>EndDateTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DateTime</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:AvailabilityEndDateTime</Label>
								<TimeSeconds>No</TimeSeconds>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>AddContentFromPast</Name>
								<HelpText>@Res:AddMoreContentRight</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>ChevronRight</NormalImage>
								<Text>@Res:AddMoreContentRight</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Availability</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AvailabilityViewChart</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Legend</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>AvailableIcon</Name>
										<ExtendedStyle>image_Available</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PartiallyAvailableIcon</Name>
										<ExtendedStyle>image_PartiallyAvailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendPartiallyAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>PartiallyAvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendPartiallyAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>BookedIcon</Name>
										<ExtendedStyle>image_Booked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendBooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendBooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>OverbookedIcon</Name>
										<ExtendedStyle>image_Overbooked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendBooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>OverbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendOverbooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>UnavailableIcon</Name>
										<ExtendedStyle>image_Unavailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendUnavailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnavailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendUnavailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>SoftbookedIcon</Name>
										<ExtendedStyle>image_gridIcon</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftReservedOrRequested</Label>
										<NormalImage>Tag</NormalImage>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>SoftbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:SoftReservedOrRequested</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
							<AxFormControl>
								<Name>ResourceAvailability</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>AvailabilityView</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Collection</Name>
											<ComponentType>AvailabilityViewBuildCollection</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>CollectionTemplates</TypeName>
													<Value>FlatList</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>Title</Name>
													<Type>String</Type>
													<Value>@Res:Resources</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthMode</Name>
													<Type>Enum</Type>
													<TypeName>FormWidth</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ResourceCard</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rows</Name>
													<Type>Int32</Type>
													<Value>20</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Int32</Type>
													<Value>True</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>CollectionFields</Name>
											<ExtensionComponents>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Name</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Name</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Role</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Company</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
											</ExtensionComponents>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Timeline</Name>
											<ComponentType>AvailabilityViewBuildTimeline</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>TimelineTemplates</TypeName>
													<Value>PointInTime</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightMode</Name>
													<Type>Enum</Type>
													<TypeName>FormHeight</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>TimeframeHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>None</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>timelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>columns</Name>
													<Type>Int32</Type>
													<Value>5</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Int32</Type>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>TimelineFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Chart</Name>
											<ComponentType>AvailabilityViewBuildChart</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>ChartTemplates</TypeName>
													<Value>Buckets</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ReservationCardHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>ChartFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>DataController</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
											<Value>ResAvailableResourceDataController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>Timescale</Name>
											<Type>Enum</Type>
											<TypeName>AVTimeframeType</TypeName>
											<Value>Week</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Res:ResourceAvailability</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReservationDetailsTabPageControl</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>Toolbar</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ToolbarButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Cancel</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Release</NormalImage>
												<Text>@Res:CancelReservations</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Confirm</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>OK</NormalImage>
												<Text>@SYS4001382</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ReservationGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ResourceName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ResourceName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_EngagementIDName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementIDName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReservationDetails_EngagementType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementType</DataField>
										<DataSource>ReservationDetails</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_TaskName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaskName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_StartTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_EndTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ReservationType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservationType</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservationDetails_ReservedHours</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservedHours</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ReservationDetails</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Res:ReservationDetails</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>