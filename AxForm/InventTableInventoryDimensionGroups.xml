<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventTableInventoryDimensionGroups</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class InventTableInventoryDimensionGroups extends FormRun implements RetailIProductKit
{
    DataAreaId                  itemDataAreaId;
    ItemId                      itemId;
    EcoResProductRecId          product;

    private EcoResTrackingDimensionGroupRecId currentTrackingDimensionGroupRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        FormDataSource      formDataSource;
        FormRun             callingForm;
        int                 dataSourceNo;
        Common              callingRecord = element.args().record();
        boolean             isTemplateEditFormRecord = callingRecord && SysRecordTemplate::isTemplateEditFormRecord(callingRecord);

        if (!isTemplateEditFormRecord)
        {
            if (!this.promptChangeTrackingDimensionGroupToNonBatch())
            {
                return;
            }

            InventTableInventoryDimensionGroups::updateDimensionGroupsForItem(
                itemDataAreaId, itemId,
                storageDimensionGroup.value(),
                trackingDimensionGroup.value(),
                product);
        }

        super();

        if (FormDataUtil::isFormDataSource(callingRecord))
        {  
            callingForm = element.args().caller();

            for (dataSourceNo = 1; dataSourceNo <= callingForm.dataSourceCount(); dataSourceNo++)
            {
                formDataSource = callingForm.dataSource(dataSourceNo);

                if (    formDataSource.table() == tableNum(EcoResStorageDimensionGroupItem)
                    ||  formDataSource.table() == tableNum(EcoResTrackingDimensionGroupItem)
                    ||  formDataSource.table() == tableNum(InventTable))
                {
                    if (isTemplateEditFormRecord)
                    {
                        switch (formDataSource.table())
                        {
                            case tableNum(EcoResStorageDimensionGroupItem):
                                EcoResStorageDimensionGroupItem storageDimensionGroupItem = formDataSource.cursor();
                                if (storageDimensionGroupItem)
                                {
                                    storageDimensionGroupItem.StorageDimensionGroup = storageDimensionGroup.value();
                                    storageDimensionGroupItem.doUpdate();
                                }
                                break;

                            case tableNum(EcoResTrackingDimensionGroupItem):
                                EcoResTrackingDimensionGroupItem trackingDimensionGroupItem = formDataSource.cursor();
                                if (trackingDimensionGroupItem)
                                {
                                    trackingDimensionGroupItem.TrackingDimensionGroup = trackingDimensionGroup.value();
                                    trackingDimensionGroupItem.doUpdate();
                                }
                                break;

                            default:
                                break;
                        }
                    }

                    formDataSource.reread();
                    formDataSource.refresh();

                    // A call to active() is needed to trigger the button state update logic.
                    formDataSource.active();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptChangeTrackingDimensionGroupToNonBatch</Name>
				<Source><![CDATA[
    private boolean promptChangeTrackingDimensionGroupToNonBatch()
    {
        EcoResTrackingDimensionGroupRecId newTrackingDimensionGroupRecId = trackingDimensionGroup.value();
        if (#PdsBatchAttribEnabled
            && newTrackingDimensionGroupRecId != currentTrackingDimensionGroupRecId)
        {
            InventTable inventTable = InventTable::find(itemId);
            if (inventTable.areShelfLifeDatesSpecified()
                    && this.isBatchDimensionActiveForTrackingDimensionGroup(currentTrackingDimensionGroupRecId)
                    && !this.isBatchDimensionActiveForTrackingDimensionGroup(newTrackingDimensionGroupRecId))
            {
                if (Box::okCancel("@SCM:Message_InventTableInventoryDimensionGroups_ChangeTrackingDimensionGroupNonBatch_ResetShelfLife", DialogButton::Ok) != DialogButton::Ok)
                {
                    trackingDimensionGroup.value(currentTrackingDimensionGroupRecId);
                    return false;
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchDimensionActiveForTrackingDimensionGroup</Name>
				<Source><![CDATA[
    private boolean isBatchDimensionActiveForTrackingDimensionGroup(EcoResTrackingDimensionGroupRecId _trackingDimensionGroupRecId)
    {
        return InventDimGroupSetup::newDimensionGroups(0, 0, _trackingDimensionGroupRecId).getFieldSetup(fieldnum(InventDim, InventBatchId)).isActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args() || !(element.args().record() is InventTable))
        {
            throw error(Error::missingFormActiveBuffer(element.name(), tablePName(InventTable)));
        }

        super();

        this.initFromInventTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    private void initFromInventTable()
    {
        InventTable         inventTable = element.args().record() as InventTable;

        itemDataAreaId  = inventTable.DataAreaId;
        itemId          = inventTable.ItemId;
        product         = inventTable.Product;

        productDimensionGroup.value(EcoResProductDimensionGroupProduct::findByProduct(inventTable.Product).ProductDimensionGroup);

        storageDimensionGroup.value(EcoResStorageDimensionGroupItem::findByItem(inventTable.DataAreaId, inventTable.ItemId).StorageDimensionGroup);
        // Storage dimension group for items can only be changed if there is no definition for the product
        if (EcoResStorageDimensionGroupProduct::findByProduct(inventTable.Product).RecId)
        {
            storageDimensionGroup.allowEdit(false);
            storageDimensionGroup.skip(true);
        }

        currentTrackingDimensionGroupRecId = EcoResTrackingDimensionGroupItem::findByItem(inventTable.DataAreaId, inventTable.ItemId).TrackingDimensionGroup;
        trackingDimensionGroup.value(currentTrackingDimensionGroupRecId);
        // Tracking dimension group for items can only be changed if there is no definition for the product
        if (EcoResTrackingDimensionGroupProduct::findByProduct(inventTable.Product).RecId)
        {
            trackingDimensionGroup.allowEdit(false);
            trackingDimensionGroup.skip(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductKit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the current product is a kit.
    /// </summary>
    /// <returns>
    ///  true if product is a kit; otherwise, false.
    /// </returns>
    public boolean isProductKit()
    {
        return EcoResProduct::find(product).isProductKit();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ProductDimensionGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            EcoResProductDimensionGroup::jumpRef(this.value(), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StorageDimensionGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            EcoResStorageDimensionGroup::jumpRef(this.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrackingDimensionGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            EcoResTrackingDimensionGroup::jumpRef(this.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS330432</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>ProductDimensionGroup</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ProductDimensionGroup_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>EcoResProductDimensionGroupRecId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>StorageDimensionGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>StorageDimensionGroup_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>EcoResStorageDimensionGroupRecId</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>TrackingDimensionGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TrackingDimensionGroup_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>EcoResTrackingDimensionGroupRecId</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>