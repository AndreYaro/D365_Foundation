<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgMESRequestActionDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JmgMESRequestActionDialog extends FormRun
{
    ProdUnitId              selectedProdUnitId;
    WrkCtrGroupId           selectedResourceGroup;
    WrkCtrId                selectedWrkCtrId;

    boolean                 calledFromRegistration;
    boolean                 calledFromResourceJobs;
    boolean                 calledFromChangeFeedback;

    boolean                 doJobRegistrationClicked;

    boolean                 dialogCancelled;

    QueryBuildDataSource    qbdsWrkCtrResourceAndGroupView;
    QueryBuildRange         qbrResGroup;
    QueryBuildRange         qbrUnit;

    JmgWorkerRecId          worker;

    WrkCtrStatKey           openClause;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        ret = super();

        dialogCancelled = true;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeButtonLabels</Name>
				<Source><![CDATA[
    public void changeButtonLabels()
    {
        str         buttonLabel;

        switch (openClause)
        {
            case WrkCtrStatKey::None :
                buttonLabel = "@SYS328509"; //Open production unit
                break;
            case WrkCtrStatKey::WrkCtrGroupId :
                buttonLabel = "@SYS328510"; //Open resource group
                break;
            case WrkCtrStatKey::WrkCtrId :
                buttonLabel = "@SYS328511"; //Open resource
                break;
        }

        okChangeFeedButton.text(buttonLabel);
        okResourceButton.text(buttonLabel);
        okRegFormButton.text(buttonLabel);
        this.enableDisableButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispalyWarningForProductionUnit</Name>
				<Source><![CDATA[
    public void dispalyWarningForProductionUnit()
    {
        selectedWrkCtrId  = '';
        selectedResourceGroup  = '';
        this.displayWarningText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayWarningForResourceGroup</Name>
				<Source><![CDATA[
    public void displayWarningForResourceGroup()
    {
        selectedWrkCtrId  = '';
        this.displayWarningText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayWarningText</Name>
				<Source><![CDATA[
    public void displayWarningText()
    {
        boolean     jobsAvailable = false;

        jobsAvailable = this.hasActiveJobs();

        if (!jobsAvailable)
        {
            warning("@SYS328170");
        }
        element.changeButtonLabels();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doJobRegistrationClicked</Name>
				<Source><![CDATA[
    public boolean doJobRegistrationClicked()
    {
        return doJobRegistrationClicked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableButtons</Name>
				<Source><![CDATA[
    public void enableDisableButtons()
    {
        boolean isProdUnitSelected      =  selectedProdUnitIdControl.text() != ''       && openClause == WrkCtrStatKey::None;
        boolean isResourceGroupSelected =  selectedResourceGroupControl.text() != ''    && openClause == WrkCtrStatKey::WrkCtrGroupId;
        boolean isResourceSelected      =  this.selectedResource(false, '')             && openClause == WrkCtrStatKey::WrkCtrId;

        jmgResourceJobs.enabled(isResourceGroupSelected || isResourceSelected);
        jmgChangeFeedback.enabled(isResourceGroupSelected || isResourceSelected);
        jmgRegistration.enabled((isResourceGroupSelected || isResourceSelected) || isProdUnitSelected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasActiveJobs</Name>
				<Source><![CDATA[
    private boolean hasActiveJobs()
    {
        Query                   query = new Query();
        QueryBuildDataSource    jobTableDataSource;
        QueryBuildDataSource    wrkCtrTableDataSource;
        QueryBuildRange         qbrProdProdUnit;
        QueryBuildRange         qbrProdResourceGroup;
        QueryBuildRange         qbrProdWrkCtrId;
        int                     elementsCount;

        jobTableDataSource = SysQuery::findOrCreateDataSource(query, tableNum(JmgJobTable));

        wrkCtrTableDataSource = jobTableDataSource.addDataSource(tableNum(WrkCtrResourceAndGroupView));
        wrkCtrTableDataSource.joinMode(JoinMode::InnerJoin);
        wrkCtrTableDataSource.fetchMode(QueryFetchMode::One2One);

        JmgWrkCtrResourceAndGroupViewHelper::addLinkToJmgJobTable(wrkCtrTableDataSource);

        qbrProdProdUnit         = wrkCtrTableDataSource.addRange(fieldNum(WrkCtrResourceAndGroupView, ProdUnitId));
        qbrProdWrkCtrId         = jobTableDataSource.addRange(fieldNum(JmgJobTable, WrkCtrId));
        qbrProdResourceGroup    = jobTableDataSource.addRange(fieldNum(JmgJobTable, ResourceGroup));

        if (selectedWrkCtrId)
        {
            qbrProdWrkCtrId.value(selectedWrkCtrId);
        }
        else if (selectedResourceGroup)
        {
            qbrProdResourceGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).RecId));
        }
        else if (selectedProdUnitId)
        {
            qbrProdProdUnit.value(selectedProdUnitId);
        }

        jobTableDataSource.firstOnly(true);

        elementsCount = SysQuery::countTotal(new SysQueryRun(query));

        return elementsCount != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        formName                    callerName;
        boolean                     allowAll                    = false;
        boolean                     allowJobRegistrationOnly    = false;
        boolean                     calledAsResourcePrompt      = false;
        WrkCtrIdBase                initialValue;
        WrkCtrResourceAndGroupView  wrkCtrResAndGroupView;

        FormRun                     caller;

        super();
        if (element.args() && element.args().caller())
        {
            caller = element.args().caller();
        }
        if (caller && caller.args()  && caller.args().menuItemName() == menuitemDisplayStr(JmgRegistrationClockInOut))
        {
            okRegFormButton.menuItemName(menuitemDisplayStr(JmgRegistrationClockInOut));
        }

        openClause = WrkCtrStatKey::WrkCtrId;

        dialogCancelled             = false;
        calledFromRegistration      = false;
        calledFromChangeFeedback    = false;
        calledFromResourceJobs      = false;
        doJobRegistrationClicked    = false;

        if (caller)
        {
            callerName = caller.name();
        }

        initialValue    = element.args().parm();
        select firstonly wrkCtrResAndGroupView
                where wrkCtrResAndGroupView.WrkCtrId == initialValue;

        if (wrkCtrResAndGroupView && wrkCtrResAndGroupView.IsIndividualResource == NoYes::Yes)
        {
            selectedWrkCtrId        = initialValue;
            selectedProdUnitId      = WrkCtrTable::resourceGroup(selectedWrkCtrId).ProdUnitId;
            selectedResourceGroup   = WrkCtrTable::resourceGroup(selectedWrkCtrId).WrkCtrId;
            qbrResGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).RecId));
            wrkCtrResourceAndGroupView_DS.executeQuery();
            wrkCtrResourceAndGroupView_DS.markRecord(wrkCtrResAndGroupView,1);
        }
        else if (wrkCtrResAndGroupView && wrkCtrResAndGroupView.IsIndividualResource == NoYes::No)
        {
            selectedWrkCtrId        = '';
            selectedResourceGroup   = initialValue;
            selectedProdUnitId      = WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).ProdUnitId;
            qbrResGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).RecId));
            wrkCtrResourceAndGroupView_DS.executeQuery();
        }
        else if (ProdUnitTable::find(initialValue))
        {
            selectedWrkCtrId        = '';
            selectedResourceGroup   = '';
            selectedProdUnitId      = initialValue;
            qbrUnit.value(queryValue(selectedProdUnitId));
            wrkCtrResourceAndGroupView_DS.executeQuery();
        }

        switch (callerName)
        {
            case formStr(JmgRegistration):
                calledFromRegistration      = true;
                allowJobRegistrationOnly    = element.args().parmEnum() == NoYes::Yes;
                break;
            case formStr(JmgChangeFeedback):
                calledFromChangeFeedback    = true;
                break;
            case formStr(JmgResourceJobs):
                calledFromResourceJobs      = true;
                break;
            default:
                allowAll                    = true;
                break;
        }

        calledAsResourcePrompt = calledFromResourceJobs || calledFromChangeFeedback || (calledFromRegistration && allowJobRegistrationOnly);

        //Enable and show Buttons for supervisor if All buttons are allowed, or if form has not been called as a prompt for resources only.
        RequestActionButtonGroup.visible(allowAll || !calledAsResourcePrompt);
        RequestActionButtonGroup.enabled(allowAll || !calledAsResourcePrompt);

        //Enable and show Ok button for jobregistration if this form has been called from job registration form, and all buttons are not allowed and job registration is the only allowed action
        okRegFormButton.enabled(okRegFormButton.visible(calledFromRegistration && !allowAll && allowJobRegistrationOnly));

        //Enable and show Ok button for edit job list if called from the Edit job list form, and all buttons are not allowed, and Job registration is not the only allowed action
        okResourceButton.enabled(okResourceButton.visible(calledFromResourceJobs && !allowAll && !allowJobRegistrationOnly));

        //Enable and show Ok button for Job History if called from the Job History form, and all buttons are not allowed, and Job registration is not the only allowed action
        okChangeFeedButton.enabled(okChangeFeedButton.visible(calledFromChangeFeedback && !allowAll && !allowJobRegistrationOnly));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDialogCancelled</Name>
				<Source><![CDATA[
    public boolean isDialogCancelled()
    {
        return dialogCancelled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorker</Name>
				<Source><![CDATA[
    public JmgWorkerRecId parmWorker(JmgWorkerRecId _worker = worker)
    {
        worker = _worker;
        return worker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ProdUnitId      prodUnitId;
        WrkCtrId        wrkCtrId;
        WrkCtrTable     wrkCtrTable;
        Struct formParameters = this.args().parmObject();
        super();

        if (formParameters && formParameters is Struct)
        {
            prodUnitId = formParameters.value('prodUnitId');
            wrkCtrId = formParameters.value('wrkCtrId');

            if (wrkCtrId)
            {
                wrkCtrTable = WrkCtrTable::find(wrkCtrId);
                if (wrkCtrTable.IsIndividualResource == NoYes::No)
                {
                    selectedResourceGroup = wrkCtrId;
                    SelectedResourceGroupControl.text(wrkCtrId);
                    SelectedResourceGroupControl.setFocus();
                }
                else
                {
                    selectedResourceGroup = WrkCtrTable::resourceGroup(wrkCtrId).WrkCtrId;
                    SelectedResourceGroupControl.text(selectedResourceGroup);

                    selectedWrkCtrId = wrkCtrId;
                    Grid.setFocus();
                }
            }
            else if (prodUnitId)
            {
                selectedProdUnitId = prodUnitId;
                SelectedProdUnitIdControl.text(prodUnitId);
                SelectedProdUnitIdControl.setFocus();
            }

            this.enableDisableButtons();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedProdUnitId</Name>
				<Source><![CDATA[
    public edit ProdUnitId selectedProdUnitId(boolean _set, ProdUnitId _value)
    {
        if (_set)
        {
            if (selectedProdUnitId  != _value)
            {
                selectedProdUnitId  = _value;
                selectedResourceGroupControl.text(selectedResourceGroup);
                this.dispalyWarningForProductionUnit();
            }

            if (selectedProdUnitId)
            {
                qbrUnit.value(queryValue(selectedProdUnitId));
            }
            else
            {
                qbrUnit.value(SysQuery::valueUnlimited());
            }

            qbrResGroup.value(SysQuery::valueUnlimited());
            wrkCtrResourceAndGroupView_DS.executeQuery();
        }

        return selectedProdUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedResource</Name>
				<Source><![CDATA[
    public edit ProdUnitId selectedResource(boolean _set, WrkCtrId _value)
    {
        if (_set)
        {
            selectedWrkCtrId  = _value;
            element.displayWarningText();
        }

        return (openClause == WrkCtrStatKey::WrkCtrId ? selectedWrkCtrId : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedResourceGroup</Name>
				<Source><![CDATA[
    public edit WrkCtrGroupId selectedResourceGroup(boolean _set, WrkCtrGroupId _value)
    {
        if (_set)
        {
            if (selectedResourceGroup  != _value)
            {
                selectedResourceGroup  = _value;
                this.displayWarningForResourceGroup();
            }

            if (selectedResourceGroup)
            {
                qbrResGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).RecId));
                selectedProdUnitId = WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).ProdUnitId;
            }
            else
            {
                qbrResGroup.value(SysQuery::valueUnlimited());
            }

            wrkCtrResourceAndGroupView_DS.executeQuery();
        }

        return selectedResourceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectWrkCtr</Name>
				<Source><![CDATA[
    public void selectWrkCtr()
    {
        selectedWrkCtrId = wrkCtrResourceAndGroupView.WrkCtrId;

        if (selectedWrkCtrId)
        {
            element.displayWarningText();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInput</Name>
				<Source><![CDATA[
    public boolean validateInput()
    {
        boolean ret = true;

        switch (openClause)
        {
            case WrkCtrStatKey::None :
                selectedResourceGroup = '';
            case WrkCtrStatKey::WrkCtrGroupId :
                selectedWrkCtrId = '';
                break;
        }

        if (selectedWrkCtrId)
        {
            ret = WrkCtrTable::checkExist(selectedWrkCtrId);
        }
        else if (selectedResourceGroup)
        {
            if (!WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup))
            {
                ret = checkFailed(strFmt("@SYS25542", selectedResourceGroup));
            }
        }
        else
        {
            if (!ProdUnitTable::find(selectedProdUnitId))
            {
                ret = checkFailed(strFmt("@SYS309731", selectedProdUnitId));
            }
        }

        if (ret && (calledFromResourceJobs) && !selectedWrkCtrId && !selectedResourceGroup)
        {
            ret = checkFailed("@SYS309732");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WrkCtrResourceAndGroupView</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (openClause == WrkCtrStatKey::WrkCtrId)
            {
                selectedWrkCtrId = wrkCtrResourceAndGroupView.WrkCtrId;

                if (selectedWrkCtrId)
                {
                    element.displayWarningText();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            date    todaysDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());

            super();

            qbdsWrkCtrResourceAndGroupView = this.queryBuildDataSource();

            qbdsWrkCtrResourceAndGroupView.clearDynalinks();
            qbdsWrkCtrResourceAndGroupView.clearLinks();

            qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ValidFrom)).value(SysQuery::range(null, todaysDate));
            qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ValidTo)).value(SysQuery::range(todaysDate, null));

            qbrUnit     = qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ProdUnitId));

            if (selectedProdUnitId)
            {
                qbrUnit.value(queryValue(selectedProdUnitId));
            }

            qbrResGroup = qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ResourceGroup));

            if (selectedResourceGroup)
            {
                qbrResGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(selectedResourceGroup).RecId));
            }

            qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, IsIndividualResource)).value(queryValue(NoYes::Yes));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SelectedProdUnitIdControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            openClause = WrkCtrStatKey::None;
            element.changeButtonLabels();
            element.dispalyWarningForProductionUnit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.enableDisableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            openClause = WrkCtrStatKey::None;
            element.changeButtonLabels();
            element.enableDisableButtons();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectedResourceGroupControl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            openClause = WrkCtrStatKey::WrkCtrGroupId;
            element.changeButtonLabels();
            element.displayWarningForResourceGroup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WrkCtrResourceGroup::lookupWrkCtrId(this, '', selectedProdUnitId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.enableDisableButtons();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            openClause = WrkCtrStatKey::WrkCtrGroupId;
            element.changeButtonLabels();
            element.enableDisableButtons();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JmgRegistration</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromRegistration)
                {
                    super();
                }

                doJobRegistrationClicked = true;
                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JmgChangeFeedback</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromChangeFeedback)
                {
                    super();
                }

                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JmgEmplSignedIn</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JmgResourceJobs</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromResourceJobs)
                {
                    super();
                }

                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WrkCtrTable_WrkCtrId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            openClause = WrkCtrStatKey::WrkCtrId;
            element.changeButtonLabels();
            element.selectWrkCtr();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WrkCtrTable_Name</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            openClause = WrkCtrStatKey::WrkCtrId;
            element.changeButtonLabels();
            element.selectWrkCtr();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WrkCtrResourceAndGroupView_EmplId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            openClause = WrkCtrStatKey::WrkCtrId;
            element.changeButtonLabels();
            element.selectWrkCtr();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkChangeFeedButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromChangeFeedback)
                {
                    super();
                }

                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkResourceButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromResourceJobs)
                {
                    super();
                }

                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkRegFormButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (element.validateInput())
            {
                if (!calledFromRegistration)
                {
                    super();
                }

                doJobRegistrationClicked = true;
                element.close();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrResourceAndGroupView</Name>
			<Table>WrkCtrResourceAndGroupView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsIndividualResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonnelNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Caption xmlns="">@SYS304393</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SecondaryInstruction</Name>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS320275</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>UnitAndGroupGroup</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ProductionUnitGroup</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SelectedProdUnitIdControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>selectedProdUnitId</DataMethod>
								<Label>@SYS304390</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS115964</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ResourceGroupGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SelectedResourceGroupControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>selectedResourceGroup</DataMethod>
								<Label>@SYS304389</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ReferenceGroup</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<Label>@SCM:ReferenceGroupControl</Label>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@SYS15433</Caption>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>RequestActionActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RequestActionButtonGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JmgRegistration</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgRegistrationJobQueue</MenuItemName>
										<Text>@SYS309669</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JmgChangeFeedback</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1503238551</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgChangeFeedback</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JmgEmplSignedIn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986915</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgEMplSignedIn</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS38568</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JmgResourceJobs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735280</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>JmgResourceJobs</MenuItemName>
										<Text>@SYS304386</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WrkCtrTable_WrkCtrId</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>WrkCtrId</DataField>
								<DataSource>WrkCtrResourceAndGroupView</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WrkCtrTable_Name</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>WrkCtrResourceAndGroupView</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WrkCtrResourceAndGroupView_EmplId</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PersonnelNumber</DataField>
								<DataSource>WrkCtrResourceAndGroupView</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>WrkCtrResourceAndGroupView</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>WorkerGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>OkChangeFeedButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>JmgChangeFeedback</MenuItemName>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SYS301992</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>OkResourceButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>JmgResourceJobs</MenuItemName>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SYS301992</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>OkRegFormButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<DefaultButton>Yes</DefaultButton>
						<MenuItemName>JmgRegistrationJobQueue</MenuItemName>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SYS5469</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<Text>@SYS12483</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>