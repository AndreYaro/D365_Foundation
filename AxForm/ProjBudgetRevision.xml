<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjBudgetRevision</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjBudgetRevision extends FormRun implements IProjIdSelectable, IProjBudgetGridUpdatable
{
    ProjId      projId;
    RecId       projBudgetRecId;
    ProjBudget  projBudgetArgs;
    ProjTree    projTree;
    ProjTable   projTable;
    RecId       projRevisionRecId;

    ProjBudgetRevision  projBudgetRevisionArgs;

    ProjBudgetRevisionManagerActionType     revActionType;

    ProjId      selectedProjId;
    ProjId      selectedProjIdInBudgetForm;

    boolean     allRevLinesSaved;
    boolean     allowEdit;
    boolean     callFromWorkflow;
}
]]></Source>
			</Method>
			<Method>
				<Name>allowDeletion</Name>
				<Source><![CDATA[
    private boolean allowDeletion(RecId _projBudgetRevisionLine, RecId _projBudgetLine)
    {
        boolean         enableDeletion = true;
        ProjBudgetLine  projBudgetLine;

        if (_projBudgetRevisionLine && ProjBudgetRevisionLine::find(_projBudgetRevisionLine).PreviousApprovedBudget != 0)
        {
            enableDeletion = false;
        }

        if (enableDeletion && _projBudgetLine)
        {
            projBudgetLine = ProjBudgetLine::find(_projBudgetLine);
            if (projBudgetLine.CommittedRevisions != 0 || projBudgetLine.OriginalBudget != 0)
            {
                enableDeletion = false;
            }
        }

        return enableDeletion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    public boolean canSubmitToWorkflow()
    {
        boolean ret;

        ret = allRevLinesSaved && projBudgetRevision.canSubmitToWorkflow();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRequestedBy</Name>
				<Source><![CDATA[
    public void getRequestedBy()
    {
        if (projBudgetRevision.RequestedByEmpl)
        {
            requestorType.selection(ProjBudgetRevRequestorType::Employee);

            projBudgetRevision_RequestedByCust.visible(false);
            projBudgetRevision_RequestedByEmpl.visible(true);
            projBudgetRevision_RequestedByVend.visible(false);

            projBudgetRevision_RequestedByEmpl.enabled(true);
        }
        else if (projBudgetRevision.RequestedByVend)
        {
            requestorType.selection(ProjBudgetRevRequestorType::Vendor);

            projBudgetRevision_RequestedByCust.visible(false);
            projBudgetRevision_RequestedByEmpl.visible(false);
            projBudgetRevision_RequestedByVend.visible(true);

            projBudgetRevision_RequestedByEmpl.enabled(false);
        }
        else
        {
            requestorType.selection(ProjBudgetRevRequestorType::Customer);

            projBudgetRevision_RequestedByCust.visible(true);
            projBudgetRevision_RequestedByEmpl.visible(false);
            projBudgetRevision_RequestedByVend.visible(false);

            projBudgetRevision_RequestedByEmpl.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSummaryofCostRevisionLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of cost revision lines and update the summary control on the form.
    /// </summary>
    public void getSummaryofCostRevisionLine()
    {
        container summaryAmounts;

        summaryAmounts = ProjBudgetRevisionManager::getSummaryOfRevisionLine(projBudgetRevLineCostTmp, selectedProjId);

        costPrevApprBudgetTotal.realValue(conPeek(summaryAmounts, 1));
        costRevisionTotal.realValue(conPeek(summaryAmounts, 2));
        costNewBudgetTotal.realValue(costPrevApprBudgetTotal.realValue() + costRevisionTotal.realValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSummaryofRevenueRevisionLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of revenue revision line and update the summary control on the form.
    /// </summary>
    public void getSummaryofRevenueRevisionLine()
    {
        container summaryAmounts;

        summaryAmounts = ProjBudgetRevisionManager::getSummaryOfRevisionLine(projBudgetRevLineRevenueTmp, selectedProjId);

        revenuePrevApprBudgetTotal.realValue(conPeek(summaryAmounts, 1));
        revenueRevisionTotal.realValue(conPeek(summaryAmounts, 2));
        revenueNewBudgetTotal.realValue(revenuePrevApprBudgetTotal.realValue() + revenueRevisionTotal.realValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ProjBudgetRevision  projBudgetRevisionLocal;
        Object              callerForm;

        if (element.args() &&
            element.args().menuItemType() == MenuItemType::Display &&
            element.args().menuItemName() == menuitemDisplayStr(ProjBudgetRevisionWorkflow) &&
            !element.args().dataset())
        {
            callFromWorkflow = true;
        }

        if (!callFromWorkflow &&
           (!element.args() ||
           (element.args().dataset() != tableNum(ProjBudget) &&
            element.args().dataset() != tableNum(ProjBudgetRevision))))
        {
            throw error(strFmt("@SYS25516",element.name()));
        }

        if (element.args() && element.args().caller())
        {
            callerForm = element.args().caller();
        }

        revActionType = element.args().parmEnum();

        switch (revActionType)
        {
            case ProjBudgetRevisionManagerActionType::NewRevision:
                projBudgetArgs = element.args().record();
                break;

            default :
                // Called from UWL
                if (element.args().lookupRecord())
                {
                    projBudgetRevisionArgs = element.args().lookupRecord() as ProjBudgetRevision;
                }
                else
                {
                    projBudgetRevisionArgs = element.args().record() as ProjBudgetRevision;
                }
                break;
        }
        if (!callFromWorkflow)
        {
            if (!projBudgetRevisionArgs)
            {
                projBudgetRecId = projBudgetArgs.RecId;
                projBudgetRevisionLocal = ProjBudgetRevision::createRevision(projBudgetRecId);
                projRevisionRecId = projBudgetRevisionLocal.RecId;
                selectedProjId = projBudgetArgs.RootProjId;
            }
            else
            {
                projRevisionRecId = projBudgetRevisionArgs.RecId;
                projBudgetRecId = projBudgetRevisionArgs.ProjBudget;
                selectedProjId = ProjBudget::find(projBudgetRecId).RootProjId;
                projBudgetRevisionLocal = ProjBudgetRevision::find(projBudgetRevisionArgs.RecId);
            }

            if (projBudgetRevisionLocal.RevisionWorkflowStatus == ProjBudgetRevisionWFStatus::Approved)
            {
                revActionType = ProjBudgetRevisionManagerActionType::ViewRevision;
            }
            projTable = ProjTable::find(selectedProjId);
        }
        super();

        element.updateWorkflowControls();

        if (!callFromWorkflow)
        {
            this.setRevenueGroupVisiblility(projTable);
            element.initInternal();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInternal</Name>
				<Source><![CDATA[
    public void initInternal()
    {
        FormRun             formRun;
        IProjIdSelectable   projIdSelectable;

        if (element.args() && element.args().caller())
        {
            formRun = element.args().caller();
        }

        allRevLinesSaved = true;

        // selectedProjId can never be blank, unless revision form has been called from the revisions list form. In this case we traverse back to the Project budget form to get the selected project
        if (!selectedProjId)
        {
            projIdSelectable = formRun as IProjIdSelectable;
            if (projIdSelectable)
            {
                selectedProjIdInBudgetForm = projIdSelectable.projectId();
            }
            selectedProjId = ProjTable::find(selectedProjIdInBudgetForm).ParentId != '' ? ProjTable::find(selectedProjIdInBudgetForm).ParentId : selectedProjIdInBudgetForm;
        }

        //enable tree when is the project part of a hierarchy and independent budget is NOT applicable.
        if (selectedProjId && (ProjTable::child(selectedProjId) || projTable.ParentId != '') && !(projTable.UseBudgeting && projTable.ProjBudgetManagement == ProjBudgetManagement::Independent))
        {
            projTree = ProjTree::construct(tree, ProjTreeType::ProjectHierarchy, selectedProjId);
            projTree.parmCreateMaster(true);
            projTree.setupChart();

            if (selectedProjIdInBudgetForm)
            {
                selectedProjId = selectedProjIdInBudgetForm;
            }
            projTree.selectNode(selectedProjId);

            treeGroup.visible(true);
            splitterGroup.visible(true);
        }

        projectTitleText.text(ProjBudgetSource::getProjBudgetTitleText(ProjTable::find(selectedProjId), projBudgetRecId, projRevisionRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshBudgetLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the budget line.
    /// </summary>
    /// <param name="_budgetLineRecId">
    /// The recid of the budget line.
    /// </param>    
    /// <remarks>
    /// This method is currently being called from ProjBudgeLineDetails.close()
    /// </remarks>
    public void refreshBudgetLine(RefRecId _budgetLineRecId)
    {
        if (projBudgetRevLineCostTmp.ProjBudgetLine == _budgetLineRecId)
        {
            projBudgetRevLineCostTmp.setTmpData(ProjBudgetRevisionManager::getRevisionCostLines(revActionType, projBudgetRecId, projRevisionRecId));
            element.getSummaryofCostRevisionLine();            
            projBudgetRevLineCostTmp_ds.selectionChanged();
            projBudgetRevLineCostTmp_ds.write();
        }

        if (projBudgetRevLineRevenueTmp.ProjBudgetLine == _budgetLineRecId)
        {
            projBudgetRevLineRevenueTmp.setTmpData(ProjBudgetRevisionManager::getRevisionRevenueLines(revActionType, projBudgetRecId, projRevisionRecId));
            element.getSummaryofRevenueRevisionLine();            
            projBudgetRevLineRevenueTmp_ds.selectionChanged();
            projBudgetRevLineRevenueTmp_ds.write();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RefreshLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// 1. Refresh the Cost and Revenue grid when the project tree selection changed.
    /// 2. Refresh the Cost and Revenue grid after we add new line in Cost or Revenue grid.
    /// </summary>
    public void RefreshLine()
    {
        str filterStr;
        #Define.Star('*')

        if (projTree)
        {
            selectedProjId = projTree.getSelection();
            filterStr = selectedProjId + #Star;

            projBudgetRevLineCostTmp_ProjId.filter(filterStr);
            projBudgetRevLineRevenueTmp_ProjId.filter(filterStr);
        }

        element.getSummaryofCostRevisionLine();
        element.getSummaryofRevenueRevisionLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveCostRevisionLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the cost revision lines
    /// </summary>
    /// <remarks>
    /// Inserts or updates records in <c>ProjBudgetRevisionLine</c> table based on the modifications from
    /// the <c>TmpProjBudgetRevisionLine</c> on the form.
    /// It also activates the workflow in case of the first modification
    /// </remarks>
    public void saveCostRevisionLines()
    {
        revActionType = ProjBudgetRevisionManagerActionType::EditRevision;

        ProjBudgetRevisionManager::saveRevisionLines(revActionType, projBudgetRevLineCostTmp);

        projBudgetRevLineCostTmp.setTmpData(ProjBudgetRevisionManager::getRevisionCostLines(revActionType, projBudgetRecId, projRevisionRecId));
        projBudgetRevLineCostTmp_ds.executeQuery();

        allRevLinesSaved = true;

        element.updateWorkflowControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveRevenueRevisionLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Saves the revenue revision lines
    /// </summary>
    /// <remarks>
    /// Inserts or updates records in <c>ProjBudgetRevisionLine</c> table based on the modifications from
    /// the <c>TmpProjBudgetRevisionLine</c> on the form.
    /// It also activates the workflow in case of the first modification
    /// </remarks>
    public void saveRevenueRevisionLines()
    {
        revActionType = ProjBudgetRevisionManagerActionType::EditRevision;

        ProjBudgetRevisionManager::saveRevisionLines(revActionType, projBudgetRevLineRevenueTmp);

        projBudgetRevLineRevenueTmp.setTmpData(ProjBudgetRevisionManager::getRevisionRevenueLines(revActionType, projBudgetRecId, projRevisionRecId));
        projBudgetRevLineRevenueTmp_ds.executeQuery();

        allRevLinesSaved = true;

        element.updateWorkflowControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projectId</Name>
				<Source><![CDATA[
    public ProjId projectId()
    {
        return selectedProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setForecastButtonAccess</Name>
				<Source><![CDATA[
    public void setForecastButtonAccess()
    {
        ProjStatusType projStatusType = projTable.status();

        if (projStatusType.ctrlForecast())
        {
            itemForecast.enabled(projStatusType.ctrlForecastItem());
            expenseForecast.enabled(projStatusType.ctrlForecastCost());
            feeForecast.enabled(projStatusType.ctrlForecastRevenue());
            hourForecast.enabled(projStatusType.ctrlForecastHour());
        }
        else
        {
            itemForecast.enabled(false);
            expenseForecast.enabled(false);
            feeForecast.enabled(false);
            hourForecast.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRevenueGroupVisiblility</Name>
				<Source><![CDATA[
    public void setRevenueGroupVisiblility(ProjTable _projTable)
    {
        revenue.visible(_projTable &&
            (_projTable.Type == ProjType::TimeMaterial ||
             _projTable.Type == ProjType::FixedPrice ||
            (ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled() && ProjMultipleContractLinesForProjectFeatureHelper::getProjContractLineByContractIdTransType(_projTable.ProjId, _projTable.ProjInvoiceProjId, ProjTransType::Revenue))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the design of <c>ProjectBudgetRevision</c> form according to the value of <c>RevisionWorkflowStatus</c> field in the <c>ProjBudgetRevision</c> table.
    /// </summary>
    public void updateDesign()
    {
        allowEdit = projBudgetRevision.allowEditRevisionLineGrid();

        element.setForecastButtonAccess();

        createAllocateButton.enabled(projBudgetRevision.allowEditRevisionLineGrid());
        importFromForecastOrProject.enabled(projBudgetRevision.allowEditRevisionLineGrid());
        editCostUncommitted.enabled(projBudgetRevision.allowEditUncommitedButton());
        editRevenueUncommitted.enabled(projBudgetRevision.allowEditUncommitedButton());
        viewCommitted.enabled(projBudgetRevision.allowViewAllocationButton());

        element.updateDesignRevenue();
        element.updateDesignCost();

        projBudgetRevision_ds.allowCreate(allowEdit);
        projBudgetRevision_ds.allowDelete(allowEdit);
        projBudgetRevision_ds.allowEdit(allowEdit);
        requestorType.allowEdit(allowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignCost</Name>
				<Source><![CDATA[
    public void updateDesignCost()
    {
        boolean allowEditCost     = allowEdit && !projBudgetRevLineCostTmp.ProjBudgetLine;
        boolean allowDeletionCost = allowEdit && this.allowDeletion(projBudgetRevLineCostTmp.ProjBudgetRevisionLine,
                                                                    projBudgetRevLineCostTmp.ProjBudgetLine);
        projBudgetRevLineCostTmp_ds.allowDelete(allowDeletionCost);
        costDelete.enabled(allowDeletionCost);

        projBudgetRevLineCostTmp_ds.allowCreate(allowEdit);
        costNew.enabled(allowEdit);

        projBudgetRevLineCostTmp_ProjId.allowEdit(allowEditCost);
        projBudgetRevLineCostTmp_ActivityNumber.allowEdit(allowEditCost);
        projBudgetRevLineCostTmp_ProjTransType.allowEdit(allowEditCost);
        projBudgetRevLineCostTmp_CategoryId.allowEdit(allowEditCost);
        projBudgetRevLineCostTmp_IncrementalChange.allowEdit(allowEdit);
        projBudgetRevLineCostTmp_NewBudget.allowEdit(allowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignRevenue</Name>
				<Source><![CDATA[
    public void updateDesignRevenue()
    {
        boolean allowEditRevenue = allowEdit && !projBudgetRevLineRevenueTmp.ProjBudgetLine;
        boolean allowDeleteRevenue = allowEdit && this.allowDeletion(projBudgetRevLineRevenueTmp.ProjBudgetRevisionLine,
                                                                    projBudgetRevLineRevenueTmp.ProjBudgetLine);

        projBudgetRevLineRevenueTmp_ds.allowDelete(allowDeleteRevenue);
        revenueDelete.enabled(allowDeleteRevenue);

        projBudgetRevLineRevenueTmp_ds.allowCreate(allowEdit);
        revenueNew.enabled(allowEdit);

        projBudgetRevLineRevenueTmp_ProjId.allowEdit(allowEditRevenue);
        projBudgetRevLineRevenueTmp_ActivityNumber.allowEdit(allowEditRevenue);
        projBudgetRevLineRevenueTmp_ProjTransType.allowEdit(allowEditRevenue);
        projBudgetRevLineRevenueTmp_CategoryId.allowEdit(allowEditRevenue);
        projBudgetRevLineRevenueTmp_IncrementalChange.allowEdit(allowEdit);
        projBudgetRevLineRevenueTmp_NewBudget.allowEdit(allowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGridHelper</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates cost and revenue grids.
    /// </summary>
    /// <param name = "_updateCostGrid">
    ///     A boolean value that indicates whether or not the cost grid should be updated.
    /// </param>
    /// <param name = "_updateRevenueGrid">
    ///     A boolean value that indicates whether or not the revenue grid should be updated.
    /// </param>
    protected void updateGridHelper(boolean _updateCostGrid, boolean _updateRevenueGrid)
    {
        if (_updateCostGrid)
        {
            projBudgetRevLineCostTmp.clear();
            projBudgetRevLineCostTmp_ds.init();
            projBudgetRevLineCostTmp_ds.research(true);
        }

        if (_updateRevenueGrid)
        {
            projBudgetRevLineRevenueTmp.clear();
            projBudgetRevLineRevenueTmp_ds.init();
            projBudgetRevLineRevenueTmp_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGrids</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates Cost and Revenue grids.
    /// </summary>
    /// <param name="_updateCostGrid">
    /// update Cost grid?
    /// </param>
    /// <param name="_updateRevenueGrid">
    /// update Revenue grid?
    /// </param>
    public void updateGrids(boolean _updateCostGrid = true, boolean _updateRevenueGrid = true)
    {
        //Execute query on the grids will not be sufficient here due to temp tables etc.,
        if (revActionType == ProjBudgetRevisionManagerActionType::NewRevision)
        {
            revActionType = ProjBudgetRevisionManagerActionType::EditRevision;
            this.updateGridHelper(_updateCostGrid, _updateRevenueGrid);
            revActionType = ProjBudgetRevisionManagerActionType::NewRevision;
        }
        else
        {
            this.updateGridHelper(_updateCostGrid, _updateRevenueGrid);
        }

        ProjBudgetRevisionManager::updateRevisionAllocationLines(projRevisionRecId);

        projectTitleText.text(ProjBudgetSource::getProjBudgetTitleText(ProjTable::find(selectedProjId), projBudgetRecId, projRevisionRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRequestor</Name>
				<Source><![CDATA[
    public void updateRequestor()
    {
        switch (requestorType.selection())
        {
            case ProjBudgetRevRequestorType::Customer :

                projBudgetRevision.RequestedByEmpl = 0;
                projBudgetRevision.RequestedByVend = '';

                projBudgetRevision_RequestedByCust.visible(true);
                projBudgetRevision_RequestedByEmpl.visible(false);
                projBudgetRevision_RequestedByVend.visible(false);
                break;

            case ProjBudgetRevRequestorType::Employee :

                projBudgetRevision.RequestedByCust = '';
                projBudgetRevision.RequestedByVend = '';

                projBudgetRevision_RequestedByCust.visible(false);
                projBudgetRevision_RequestedByEmpl.visible(true);
                projBudgetRevision_RequestedByVend.visible(false);

                projBudgetRevision_RequestedByEmpl.enabled(true);
                break;

            case ProjBudgetRevRequestorType::Vendor :

                projBudgetRevision.RequestedByCust = '';
                projBudgetRevision.RequestedByEmpl = 0;

                projBudgetRevision_RequestedByCust.visible(false);
                projBudgetRevision_RequestedByEmpl.visible(false);
                projBudgetRevision_RequestedByVend.visible(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyRecordContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data of ProjBudgetRevision form from ProjBudgetRevision table.
    /// </summary>
    /// <param name = "_recordContext"> The record context </param>
    /// <returns> returns true if recordContext exists </returns>
    public boolean applyRecordContext(str _recordContext)
    {
        boolean ret;
    
        ret = super(_recordContext);

        if (ret && callFromWorkflow && ProjBudgetRevision)
        {
            projBudgetRevisionArgs.data(ProjBudgetRevision);
            projBudgetRecId = ProjBudgetRevision.ProjBudget;
            projRevisionRecId = ProjBudgetRevision.RecId;
            selectedProjId = ProjBudget::find(projBudgetRecId).RootProjId;

            if (ProjBudgetRevision.RevisionWorkflowStatus == ProjBudgetRevisionWFStatus::Approved)
            {
                revActionType = ProjBudgetRevisionManagerActionType::ViewRevision;
            }

            projectTitleText.text(ProjBudgetSource::getProjBudgetTitleText(ProjTable::find(selectedProjId), projBudgetRecId, projRevisionRecId));

            projBudgetRevLineCostTmp.setTmpData(ProjBudgetRevisionManager::getRevisionCostLines(revActionType, projBudgetRecId, projRevisionRecId));
            element.getSummaryofCostRevisionLine();

            projBudgetRevLineRevenueTmp.setTmpData(ProjBudgetRevisionManager::getRevisionRevenueLines(revActionType, projBudgetRecId, projRevisionRecId));
            element.getSummaryofRevenueRevisionLine();
        }
                
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWorkflowControls</Name>
				<Source><![CDATA[
    public void updateWorkflowControls()
    {
        if (ProjParameters::find().DisplayWorkflowInstructions)
        {
            ProjBudgetRevisionLine projBudgetRevisionLine;

            select firstonly RecId from projBudgetRevisionLine
                where projBudgetRevisionLine.ProjBudgetRevision == projBudgetRevision.RecId;

            ProjBudgetRevisionWorkflowDropDialog.enabled(projBudgetRevisionLine.RecId);
        }
        else
        {
            super();

            ProjBudgetRevisionWorkflowDropDialog.visible(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjBudgetRevision</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.queryProjBudgetRevision();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>queryProjBudgetRevision</Name>
						<Source><![CDATA[
        private void queryProjBudgetRevision()
        {
            Query                   query = new Query();
            QueryBuildDataSource    projBudgetRevisionDS;
            QueryBuildRange         revisionRecordId;

            if (callFromWorkflow && projRevisionRecId == 0)
            {
                return;
            }
            projBudgetRevisionDS  = query.addDataSource(tableNum(ProjBudgetRevision));
            revisionRecordId = projBudgetRevisionDS.addRange(fieldNum(ProjBudgetRevision, RecId));
            revisionRecordId.value(queryValue(projRevisionRecId));

            projBudgetRevision_ds.query(query);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.updateDesign();
            element.getRequestedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesign();
            element.getRequestedBy();
            element.updateWorkflowControls();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjBudgetRevLineRevenueTmp</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            str filterStr;
            #Define.Star('*')

            filterStr = selectedProjId + #Star;
            projBudgetRevLineRevenueTmp_ProjId.filter(filterStr);

            super(_append);
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();
            this.checkLineDetail();
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkLineDetail</Name>
						<Source><![CDATA[
        private void checkLineDetail()
        {
            ProjBudgetLineDetail    projBudgetLineDetail;

            projBudgetRevLineRevenueTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, NewBudget)).enabled(true);
            projBudgetRevLineRevenueTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, IncrementalChange)).enabled(true);

            if (projBudgetRevLineRevenueTmp.ProjBudgetRevisionLine)
            {
                select firstonly RecId from projBudgetLineDetail
                    where projBudgetLineDetail.ProjBudgetLine == projBudgetRevLineRevenueTmp.ProjBudgetLine &&
                        projBudgetLineDetail.ProjBudgetRevisionLine == projBudgetRevLineRevenueTmp.ProjBudgetRevisionLine;

                if (projBudgetLineDetail.RecId)
                {
                    projBudgetRevLineRevenueTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, NewBudget)).enabled(allowEdit);
                    projBudgetRevLineRevenueTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, IncrementalChange)).enabled(allowEdit);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ProjTable projectTable;

            revenueRevisionTotal.realValue(revenueRevisionTotal.realValue() -
                                           projBudgetRevLineRevenueTmp.orig().IncrementalChange +
                                           projBudgetRevLineRevenueTmp.IncrementalChange);
            revenueNewBudgetTotal.realValue(revenueNewBudgetTotal.realValue() -
                                            projBudgetRevLineRevenueTmp.orig().IncrementalChange +
                                            projBudgetRevLineRevenueTmp.IncrementalChange);

            super();

            element.saveRevenueRevisionLines();
            element.RefreshLine();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            projBudgetRevLineRevenueTmp.ProjId                  = selectedProjId;
            projBudgetRevLineRevenueTmp.ProjBudgetRevision      = projRevisionRecId;
            projBudgetRevLineRevenueTmp.ProjBudgetLineType      = ProjBudgetLineType::Revenue;
            projBudgetRevLineRevenueTmp.ProjTransType           = ProjTransType::Hour;
            projBudgetRevLineRevenueTmp.Marked                  = NoYes::Yes;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesignRevenue();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (!callFromWorkflow)
            {
                projBudgetRevLineRevenueTmp.setTmpData(ProjBudgetRevisionManager::getRevisionRevenueLines(revActionType, projBudgetRecId, projRevisionRecId));

                element.getSummaryofRevenueRevisionLine();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            ret = super();

            if (ret &&
                projBudgetRevLineRevenueTmp.ProjTransType == ProjTransType::Revenue &&
                ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(ProjTable::find(projBudgetRevLineRevenueTmp.ProjId), ProjTransType::Revenue))
            {
                error("@SYP4881400");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ProjBudgetLine::lookupCategoriesByProject(
                    _formControl,
                    projBudgetRevLineRevenueTmp.ProjTransType,
                    projBudgetRevLineRevenueTmp.ProjId,
                    tableNum(TmpProjBudgetRevisionLine)
                    );
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IncrementalChange</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                projBudgetRevLineRevenueTmp.NewBudget = projBudgetRevLineRevenueTmp.ApprovedBudget +
                                                        projBudgetRevLineRevenueTmp.IncrementalChange;
                projBudgetRevLineRevenueTmp.Marked = NoYes::Yes;

                allRevLinesSaved = false;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>NewBudget</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                projBudgetRevLineRevenueTmp.IncrementalChange = projBudgetRevLineRevenueTmp.NewBudget -
                                                                projBudgetRevLineRevenueTmp.ApprovedBudget;
                projBudgetRevLineRevenueTmp.Marked = NoYes::Yes;

                allRevLinesSaved = false;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                switch (projTable.ProjBudgetManagement)
                {
                    case ProjBudgetManagement::Independent:
                        ProjTable::lookupSelectedProjId(_formControl, _filterStr, selectedProjId);
                        break;
                    case ProjBudgetManagement::None:
                    default:
                        ProjTable::lookupProjIdHierarchy(_formControl, _filterStr, selectedProjId);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ProjTable currentProjTable = ProjTable::find(projBudgetRevLineRevenueTmp.ProjId);

                if (projBudgetRevLineRevenueTmp.orig().ProjId != projBudgetRevLineRevenueTmp.ProjId)
                {
                    projBudgetRevLineRevenueTmp.ActivityNumber = '';
                }

                super();

                if (!ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethod(currentProjTable, projBudgetRevLineRevenueTmp.ProjTransType)
                    && !ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(currentProjTable, projBudgetRevLineRevenueTmp.ProjTransType))
                {
                    warning(strFmt("@SYS4006518", projBudgetRevLineRevenueTmp.ProjId, "@SYS343391"));
                    projBudgetRevLineRevenueTmp.ProjId = projBudgetRevLineRevenueTmp.orig().ProjId;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>ProjBudgetRevLineCostTmp</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            str filterStr;
            #Define.Star('*')

            filterStr = selectedProjId + #Star;
            projBudgetRevLineCostTmp_ProjId.filter(filterStr);

            super(_append);
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();
            this.checkLineDetail();
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkLineDetail</Name>
						<Source><![CDATA[
        private void checkLineDetail()
        {
            ProjBudgetLineDetail    projBudgetLineDetail;

            projBudgetRevLineCostTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, NewBudget)).enabled(true);
            projBudgetRevLineCostTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, IncrementalChange)).enabled(true);

            if (projBudgetRevLineCostTmp.ProjBudgetRevisionLine)
            {
                select firstonly RecId from projBudgetLineDetail
                    where projBudgetLineDetail.ProjBudgetLine == projBudgetRevLineCostTmp.ProjBudgetLine &&
                        projBudgetLineDetail.ProjBudgetRevisionLine == projBudgetRevLineCostTmp.ProjBudgetRevisionLine;

                if (projBudgetLineDetail.RecId)
                {
                    projBudgetRevLineCostTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, NewBudget)).enabled(allowEdit);
                    projBudgetRevLineCostTmp_ds.object(fieldNum(TmpProjBudgetRevisionLine, IncrementalChange)).enabled(allowEdit);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            costRevisionTotal.realValue(costRevisionTotal.realValue() -
                                        projBudgetRevLineCostTmp.orig().IncrementalChange +
                                        projBudgetRevLineCostTmp.IncrementalChange);
            costNewBudgetTotal.realValue(costNewBudgetTotal.realValue() -
                                         projBudgetRevLineCostTmp.orig().IncrementalChange +
                                         projBudgetRevLineCostTmp.IncrementalChange);

            super();

            element.saveCostRevisionLines();
            element.RefreshLine();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesignCost();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            projBudgetRevLineCostTmp.ProjId                 = selectedProjId;
            projBudgetRevLineCostTmp.ProjBudgetRevision     = projRevisionRecId;
            projBudgetRevLineCostTmp.ProjBudgetLineType     = ProjBudgetLineType::Cost;
            projBudgetRevLineCostTmp.ProjTransType          = ProjTransType::Hour;
            projBudgetRevLineCostTmp.Marked                 = NoYes::Yes;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes query object which retrieves the cost data.
        /// </summary>
        public void init()
        {
            super(); 

            if (!callFromWorkflow)
            {
                projBudgetRevLineCostTmp.setTmpData(ProjBudgetRevisionManager::getRevisionCostLines(revActionType, projBudgetRecId, projRevisionRecId));

                element.getSummaryofCostRevisionLine();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ProjBudgetLine::lookupCategoriesByProject(
                    _formControl,
                    projBudgetRevLineCostTmp.ProjTransType,
                    projBudgetRevLineCostTmp.ProjId,
                    tableNum(TmpProjBudgetRevisionLine));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IncrementalChange</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                projBudgetRevLineCostTmp.NewBudget = projBudgetRevLineCostTmp.ApprovedBudget +
                                                     projBudgetRevLineCostTmp.IncrementalChange;
                projBudgetRevLineCostTmp.Marked = NoYes::Yes;

                allRevLinesSaved = false;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>NewBudget</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                projBudgetRevLineCostTmp.IncrementalChange = projBudgetRevLineCostTmp.NewBudget -
                                                             projBudgetRevLineCostTmp.ApprovedBudget;
                projBudgetRevLineCostTmp.Marked = NoYes::Yes;

                allRevLinesSaved = false;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                if (projBudgetRevLineCostTmp.orig().ProjId != projBudgetRevLineCostTmp.ProjId)
                {
                    projBudgetRevLineCostTmp.ActivityNumber = '';
                }
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                switch (projTable.ProjBudgetManagement)
                {
                    case ProjBudgetManagement::Independent:
                        ProjTable::lookupSelectedProjId(_formControl, _filterStr, selectedProjId);
                        break;
                    case ProjBudgetManagement::None:
                    default:
                        ProjTable::lookupProjIdHierarchy(_formControl, _filterStr, selectedProjId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>createAllocateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormRun         createAllocation;
            Args            allocationArgs;

            super();

            allocationArgs = new Args(formStr(ProjBudgetDimensionAllocate));
            allocationArgs.caller(element);

            allocationArgs.record(projBudgetRevision);

            createAllocation = classfactory.formRunClass(allocationArgs);

            createAllocation.run();
            createAllocation.wait();

            if (createAllocation.closedOk())
            {
                if (projBudgetRevLineRevenueTmp_ds.cursor())
                {
                    projBudgetRevLineRevenueTmp_ds.reread();
                    projBudgetRevLineRevenueTmp_ds.refresh();
                }

                if (projBudgetRevLineCostTmp_ds.cursor())
                {
                    projBudgetRevLineCostTmp_ds.reread();
                    projBudgetRevLineCostTmp_ds.refresh();
                }

                element.updateDesign();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        public boolean expanding(int _idx, FormTreeExpand _action, anytype _data)
        {
            return projTree.expanding(_idx, _action, _data);
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            if (_oldItem.data())
            {
                super(_oldItem, _newItem, _how);

                element.RefreshLine();

                if ( selectedProjId )
                {
                    element.setRevenueGroupVisiblility(ProjTable::find(selectedProjId));
                    projectTitleText.text(ProjBudgetSource::getProjBudgetTitleText(ProjTable::find(selectedProjId), projBudgetRecId, projRevisionRecId));
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestorType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            element.updateRequestor();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CostNew</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            projBudgetRevLineCostTmp_ds.create();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CostDelete</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (projBudgetRevLineCostTmp.ProjBudgetLine)
            {
                if (DialogButton::Yes == Box::yesNo("@SYS320415", DialogButton::Yes))
                {
                    ProjBudgetRevisionManager::revisionLineDeletionHelper(projBudgetRevLineCostTmp.ProjBudgetRevisionLine, projBudgetRevLineCostTmp.ProjBudgetLine);
                    element.updateGrids(true, false);
                }
            }
            else
            {
                projBudgetRevLineCostTmp_ds.delete();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjBudgetLineDetail</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            RefRecId    currentProjBudgetLineRecid;
            if (projBudgetRevLineCostTmp.ProjBudgetRevisionLine == 0)
            {
                currentProjBudgetLineRecid = projBudgetRevLineCostTmp.ProjBudgetLine;

                projBudgetRevLineCostTmp.Marked = true;
                projBudgetRevLineCostTmp_ds.write();

                projBudgetRevLineCostTmp_ds.positionToRecordByValue(fieldNum(TmpProjBudgetRevisionLine,ProjBudgetLine), queryValue(currentProjBudgetLineRecid));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjBudgetRevLineCostTmp_ActivityNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            HierarchyTreeTable::lookupHierarchyTree(this, ProjTable::find(projBudgetRevLineCostTmp.ProjId));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RevenueNew</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            projBudgetRevLineRevenueTmp_ds.create();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RevenueDelete</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (projBudgetRevLineRevenueTmp.ProjBudgetLine)
            {
                if (DialogButton::Yes == Box::yesNo("@SYS320415", DialogButton::Yes))
                {
                    ProjBudgetRevisionManager::revisionLineDeletionHelper(projBudgetRevLineRevenueTmp.ProjBudgetRevisionLine, projBudgetRevLineRevenueTmp.ProjBudgetLine);
                    element.updateGrids(false, true);
                }
            }
            else
            {
                projBudgetRevLineRevenueTmp_ds.delete();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjBudgetLineDetail1</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            RefRecId    currentProjBudgetLineRecid;

            if (projBudgetRevLineRevenueTmp.ProjBudgetRevisionLine == 0)
            {
                currentProjBudgetLineRecid = projBudgetRevLineRevenueTmp.ProjBudgetLine;
                projBudgetRevLineRevenueTmp.Marked = true;
                projBudgetRevLineRevenueTmp_ds.write();

                projBudgetRevLineRevenueTmp_ds.positionToRecordByValue(fieldNum(TmpProjBudgetRevisionLine,ProjBudgetLine),queryValue(currentProjBudgetLineRecid));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjBudgetRevLineRevenueTmp_ActivityNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            HierarchyTreeTable::lookupHierarchyTree(this, ProjTable::find(projBudgetRevLineRevenueTmp.ProjId));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjBudgetRevision</Name>
			<Table>ProjBudgetRevision</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedByCust</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedByEmpl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedByVend</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevisionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevisionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevisionWorkflowStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>RevisionIdIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjBudgetRevLineRevenueTmp</Name>
			<Table>TmpProjBudgetRevisionLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncrementalChange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Marked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NewBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetRevision</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetRevisionLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjBudgetRevision</JoinSource>
			<AllowCreate>No</AllowCreate>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjBudgetRevLineCostTmp</Name>
			<Table>TmpProjBudgetRevisionLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncrementalChange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Marked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NewBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetRevision</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetRevisionLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjBudgetRevision</JoinSource>
			<AllowCreate>No</AllowCreate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS315536</Caption>
		<Pattern xmlns="">SimpleListDetails-Tree</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">ProjBudgetRevision</TitleDataSource>
		<WorkflowDataSource xmlns="">ProjBudgetRevision</WorkflowDataSource>
		<WorkflowEnabled xmlns="">Yes</WorkflowEnabled>
		<WorkflowType xmlns="">ProjBudgetRevision</WorkflowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Import</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ImportFromForecastOrProject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>ProjBudgetImport</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS4005260</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Create</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>createAllocateButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<Text>@SYS310797</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ViewCommitted</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ProjViewCommittedRevisionAllocation</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS310096</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>Forecast</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>HourForecast</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ProjForecastEmpl</MenuItemName>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS114868</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ExpenseForecast</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ProjForecastCost</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS114869</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ItemForecast</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ForecastSalesProj</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS114870</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FeeForecast</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ProjForecastRevenue</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS114871</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS59002</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RelatedInformation</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjBudgetBalances</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<DataSource>ProjBudgetRevision</DataSource>
										<MenuItemName>ProjBudgetBalances</MenuItemName>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS111665</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@PSA2281</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ProjBudgetRevisionWorkflowDropDialogButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>ProjBudgetRevisionWorkflowDropDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>ProjBudgetRevision</DataSource>
								<MenuItemName>ProjBudgetRevisionWorkflowDropDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Workflow</NormalImage>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TreeGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>Tree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SplitterGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Visible>No</Visible>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TitleGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProjectTitleText</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>Heading</ExtendedStyle>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Proj:ProjectTitleText</Label>
						<ShowLabel>No</ShowLabel>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>RevisionDetails</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Header</Name>
						<ElementPosition>715827880</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevision_RevisionId</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RevisionId</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevision_ExternalReference</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjBudgetRevision_ProjBudgetRevision_ExternalReference</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExternalReference</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ProjBudgetRevision_RevisionDate</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RevisionDate</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS35583</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Information</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevision_Description</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ProjBudgetRevision_RequestedDate</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RequestedDate</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjBudgetRevision_RevisionWorkflowStatus</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RevisionWorkflowStatus</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS60385</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RequestedBy</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RequestorType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>ProjBudgetRevRequestorType</EnumType>
										<Label>@SYS81228</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevision_RequestedByVend</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RequestedByVend</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjBudgetRevision_RequestedByEmpl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProjBudgetRevision_RequestedByEmpl_DirPerson_FK_Name</Name>
												<DataRelationPath>HcmWorker.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjBudgetRevision</DataSource>
										<ReferenceField>RequestedByEmpl</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevision_RequestedByCust</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RequestedByCust</DataField>
										<DataSource>ProjBudgetRevision</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS325186</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Costs</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CostActionPane</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>CostActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>CostNew</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<NormalImage>New</NormalImage>
														<Text>@SYS2055</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>CostDelete</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>EditCostUncommitted</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1789569704</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>ProjBudgetRevLineCostTmp</DataSource>
														<MenuItemName>ProjEditUncommittedRevisionAllocation</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ProjBudgetLineDetail</Name>
														<ElementPosition>1968526675</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>ProjBudgetRevLineCostTmp</DataSource>
														<MenuItemName>projbudgetlineDetail</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
														<OpenMode>Edit</OpenMode>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>ProjBudgetRevLineCostTmp</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CostGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<LeftMode>AutoRight</LeftMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineCostTmp_ProjId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineCostTmp_ActivityNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjBudgetRevLineCostTmp_ProjTransType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editProjCostType</DataMethod>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineCostTmp_CategoryId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineCostTmp_ApprovedBudget</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovedBudget</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineCostTmp_IncrementalChange</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncrementalChange</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineCostTmp_NewBudget</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NewBudget</DataField>
										<DataSource>ProjBudgetRevLineCostTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>ProjBudgetRevLineCostTmp</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CostBudgetLineTotal</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Skip>Yes</Skip>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPrevApprBudgetTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325192</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostRevisionTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325190</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostNewBudgetTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325204</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS40781</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Revenue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>RevenueActionPane</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>RevenueActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>RevenueButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>RevenueNew</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<NormalImage>New</NormalImage>
														<Text>@SYS2055</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>RevenueDelete</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>EditRevenueUncommitted</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1789569704</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
														<MenuItemName>ProjEditUncommittedRevisionAllocation</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ProjBudgetLineDetail1</Name>
														<ElementPosition>1968526675</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
														<MenuItemName>projbudgetlinedetail</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
														<OpenMode>Edit</OpenMode>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridRevenue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineRevenueTmp_ProjId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineRevenueTmp_ActivityNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjBudgetRevLineRevenueTmp_ProjTransType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editProjRevenueType</DataMethod>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjBudgetRevLineRevenueTmp_CategoryId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineRevenueTmp_ApprovedBudget</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovedBudget</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineRevenueTmp_IncrementalChange</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncrementalChange</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjBudgetRevLineRevenueTmp_NewBudget</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NewBudget</DataField>
										<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>ProjBudgetRevLineRevenueTmp</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RevenueBudgetLineTotal</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Skip>Yes</Skip>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RevenuePrevApprBudgetTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325192</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RevenueRevisionTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325190</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RevenueNewBudgetTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS325204</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS3583</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>