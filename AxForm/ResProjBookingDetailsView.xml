<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResProjBookingDetailsView</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResProjBookingDetailsView extends FormRun
{
    private ResResourceSchedulingController controller;
    private ResAvailabilityViewContext context;
    private ResourceCategoryRecId resourceCategory;
    private ResourceCategoryRecId defaultCategory;
    private ActivityRecId activity;
    private ResEngagementIDName engagementIDName;
    private boolean requestWorkflowEnabled;

}
]]></Source>
			</Method>
			<Method>
				<Name>schedulingController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the scheduling controller instance
    /// </summary>
    /// <param name = "_controller">Scheduling controller</param>
    /// <returns>Instance of <c>ResResourceSchedulingController</c></returns>
    public ResResourceSchedulingController schedulingController(ResResourceSchedulingController _controller = controller)
    {
        controller = _controller;
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize form data
    /// </summary>
    public void init()
    {
        super();

        ResUtil::validateResPerfDataUpgradeStatus();

        requestWorkflowEnabled = ResRequestHelper::isWorkflowEnabled();
        Confirm.visible(!requestWorkflowEnabled);

        // initialize activity team role lookup
        defaultCategory = ResourceCategoryFacade::defaultResourceCategory();
        ActivityTeamRole.text("@Res:AllRoles");
        ActivityTeamRole.enabled(!AllRoles.value());

        // initialize activity team bookings controller
        ResProjTeamController projTeamController;

        if (!controller)
        {
            controller = element.args().caller() as ResResourceSchedulingController;
            projTeamController = controller.ProjTeamController();
        }

        if (projTeamController)
        {
            ProjId selectedProjId = projTeamController.ProjId();
            ProjName selectedProjName = projTeamController.ProjName();
            activity = ProjWBS::getRootActivityRecId(selectedProjId);
            engagementIDName =  selectedProjId +  ' ' + selectedProjName;

            // initialize form title
            str caption = strfmt("@Res:ProjBookingDetailsView", selectedProjId, selectedProjName);
            this.design().caption(caption);

            // initialize activity team booking details
            context = ResAvailabilityViewContext::construct();
            context.activity(activity);

            utcdatetime startDateTime = DateTimeUtil::newDateTime(ActivityFacade::getEarliestTeamMemberPlannedStartDate(activity), 0);
            utcdatetime earliestReservationDateTime = ActivityFacade::getEarliestReservationDateTime(activity);
            if (earliestReservationDateTime != DateTimeUtil::minValue())
            {
                startDateTime = startDateTime < earliestReservationDateTime
                    ? startDateTime : earliestReservationDateTime;
            }

            utcdatetime endDateTime = DateTimeUtil::newDateTime(ActivityFacade::getLatestTeamMemberPlannedEndDate(activity), 0);
            utcdatetime latestReservationDateTime = ActivityFacade::getLatestReservationDateTime(activity);
            if (earliestReservationDateTime != DateTimeUtil::minValue())
            {
                endDateTime = endDateTime > latestReservationDateTime
                    ? endDateTime : latestReservationDateTime;
            }

            // Close this form if ResRollupCalendarShared does not have sufficient TimeFrame range.
            if (ResUtil::validateRollupCalendarTimeFrameRange(startDateTime, endDateTime, true, element))
            {
                AVTimeframeType timescale = ResUtil::getRecommendedTimeframeType(startDateTime, endDateTime);
                context.timescale(timescale);
                context.startDateTime(startDateTime);
                context.endDateTime(endDateTime);

                ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
                viewSetting.coverage(ResUserSettingCoverage::ActivityResourcesView);
                viewSetting.find();

                context.showRemainingCapacity(viewSetting.showScheduleCapacity());
                context.showScheduleDescription(viewSetting.showScheduleDescription());
                context.capacityAggregation(viewSetting.capacityAggregation());

                ResourceBookingDetails.startDateTime(context.startDateTime());
                ResourceBookingDetails.endDateTime(context.endDateTime());
                ResourceBookingDetails.timescale(context.timescale());
                ResourceBookingDetails.controlContext(context);
            }   
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTeamMemberByRole</Name>
				<Source><![CDATA[
    void updateTeamMemberByRole()
    {
        ResAvailabilityViewSearchController searchController;
        searchController = ResAvailabilityViewSearchController::newFromAvailabilityViewControl(ResourceBookingDetails);
        searchController.searchByActivityResourceRole(PSASchedRole::findById(ActivityTeamRole.text()).RecId);
        searchController.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewSettingsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected view settings
    /// </summary>
    /// <param name = "_viewSetting">View settings instance</param>
    void viewSettingsReady(ResAvailabilityViewSetting _viewSetting)
    {
        context = ResourceBookingDetails.controlContext();
        boolean hasChanged;
        boolean needsRefresh;

        utcdatetime dateTime;
        dateTime = _viewSetting.startDateTime();
        if (context.startDateTime() != dateTime)
        {
            context.startDateTime(dateTime);
            ResourceBookingDetails.startDateTime(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        dateTime = _viewSetting.endDateTime();
        if (context.endDateTime() != dateTime)
        {
            context.endDateTime(dateTime);
            ResourceBookingDetails.endDateTime(dateTime);
            hasChanged = true;
        }

        AVTimeframeType timescale = _viewSetting.timescale();
        if (context.timescale() != timescale)
        {
            context.timescale(timescale);
            ResourceBookingDetails.timescale(timescale);
            hasChanged = true;
            needsRefresh = true;
        }

        boolean showContent;
        showContent = _viewSetting.showScheduleDescription();
        if (context.showScheduleDescription() != showContent)
        {
            context.showScheduleDescription(showContent);
            hasChanged = true;
        }

        showContent = _viewSetting.showScheduleCapacity();
        if (context.showRemainingCapacity() != showContent)
        {
            context.showRemainingCapacity(showContent);
            hasChanged = true;
        }

        ResCapacityAggregation aggregation = _viewSetting.capacityAggregation();
        if (context.capacityAggregation() != aggregation)
        {
            context.capacityAggregation(aggregation);
            hasChanged = true;
            needsRefresh = true;
        }

        if (hasChanged)
        {
            ResourceBookingDetails.controlContext(context);
        }

        if (needsRefresh)
        {
            ResourceBookingDetails.clearSelections();
            ResourceBookingDetails.refresh();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ReservationDetails</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// To Enable/Disable confirm and cancel buttons for selected record.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;

            ret = super();

            boolean currentEngagementSelected = ResResourceReservationDetails::isOnlyCurrentEngagementSelected(ReservationDetails_ds, engagementIDName);

            Confirm.enabled(currentEngagementSelected);

            if (!requestWorkflowEnabled)
            {
                Cancel.enabled(currentEngagementSelected);
            }
            else
            {
                Cancel.enabled(currentEngagementSelected && !ResResourceReservationDetails::isWorkflowRecordSelected(ReservationDetails_ds));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ClearSelections</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clear all control selections.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceBookingDetails.clearSelections();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Synchronize</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Synchronizes activity reservations view
        /// </summary>
        public void clicked()
        {
            super();
            ResourceBookingDetails.clearSelections();
            ResourceBookingDetails.refreshAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenViewSettings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens activity reservations view settings
        /// </summary>
        public void clicked()
        {
            super();

            context = ResourceBookingDetails.controlContext();
            ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
            viewSetting.startDateTime(context.startDateTime());
            viewSetting.endDateTime(context.endDateTime());
            viewSetting.timescale(context.timescale());
            viewSetting.capacityToggleDescription("@SYS4008832");
            viewSetting.showScheduleCapacity(context.showRemainingCapacity());
            viewSetting.showScheduleDescription(context.showScheduleDescription());
            viewSetting.capacityAggregation(context.capacityAggregation());

            viewSetting.coverage(ResUserSettingCoverage::ActivityResourcesView);
            viewSetting.selectionsReady += eventhandler(element.viewSettingsReady);
            viewSetting.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AllRoles</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Whether to show all project team roles.
        /// </summary>
        /// <returns></returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (AllRoles.value())
            {
                ActivityTeamRole.text("@Res:AllRoles");
                ResourceBookingDetails.clearSelections();
                element.updateTeamMemberByRole();
            }
            ActivityTeamRole.enabled(!AllRoles.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ActivityTeamRole</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Launch project team roles lookup.
        /// </summary>
        public void lookup()
        {
            Query query = new Query();
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(PSASchedRole), this);

            sysTableLookup.addLookupfield(fieldNum(PSASchedRole, RoleId), true);
            sysTableLookup.addLookupfield(fieldNum(PSASchedRole, Description));

            QueryBuildDataSource roleDS = query.addDataSource(tableNum(PSASchedRole));
            QueryBuildDataSource projTeamDS = roleDS.addDataSource(tableNum(PSAProjSchedRole));
            projTeamDS.addLink(fieldNum(PSASchedRole, RecId), fieldNum(PSAProjSchedRole, ResourceCategory));
            projTeamDS.joinMode(JoinMode::ExistsJoin);

            QueryBuildRange projTeamRange = projTeamDS.addRange(fieldNum(PSAProjSchedRole, ProjId));
            projTeamRange.value(queryValue(controller.ProjTeamController().ProjId()));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays project team by the selected role.
        /// </summary>
        /// <returns>Whether modified has been successful.</returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ResourceBookingDetails.clearSelections();
                element.updateTeamMemberByRole();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceBookingDetails</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>selections</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update resource reservation details grid upon user updating chart item selection.
        /// </summary>
        /// <param name = "_selections">Chart item selections.</param>
        /// <returns>Chart item selections.</returns>
        public AvailabilityViewSelections selections(AvailabilityViewSelections _selections)
        {
            AvailabilityViewSelections avSelections = super (_selections);
            ResResourceReservationDetails::updateReservationDetailsTable(_selections,
                context.timescale(), ReservationDetails, ReservationDetails_ds);
            return avSelections;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Cancel resource reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();

            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceBookingDetails);
            resourceReservation.cancelOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Confirm</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Confirm resource soft reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();

            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceBookingDetails);
            resourceReservation.confirmOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ReservationDetails</Name>
			<Table>ResTmpResourceReservationDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementIDName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservedHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:ProjBookingDetailsView</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ClearSelections</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>ClearSelection</NormalImage>
								<Text>@Res:ClearSelections</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Synchronize</Name>
								<HelpText>@Res:SynchronizeActivityReservations</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Sync</NormalImage>
								<Text>@Res:ResourceGridRefresh</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenViewSettings</Name>
								<HelpText>@Res:ViewSettingsHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>View</NormalImage>
								<Text>@Res:ViewSettings</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderControls</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>AllRoles</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Res:ShowAllRoles</Label>
						<Value>1</Value>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ActivityTeamRole</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@Res:ProjectRolePicker</Label>
						<LookupButton>Always</LookupButton>
						<LookupOnly>Yes</LookupOnly>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>BookingDetails</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectTeamReservations</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Legend</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>AvailableIcon</Name>
										<ExtendedStyle>image_Available</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PartiallyAvailableIcon</Name>
										<ExtendedStyle>image_PartiallyAvailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendPartiallyAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>PartiallyAvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendPartiallyAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>BookedIcon</Name>
										<ExtendedStyle>image_Booked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendBooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendBooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>OverbookedIcon</Name>
										<ExtendedStyle>image_Overbooked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendOverbooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>OverbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendOverbooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>UnavailableIcon</Name>
										<ExtendedStyle>image_Unavailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendUnavailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnavailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendUnavailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>SoftbookedIcon</Name>
										<ExtendedStyle>image_gridIcon</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftReservedOrRequested</Label>
										<NormalImage>Tag</NormalImage>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>SoftbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:SoftReservedOrRequested</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
							<AxFormControl>
								<Name>ResourceBookingDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>AvailabilityView</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Collection</Name>
											<ComponentType>AvailabilityViewBuildCollection</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>CollectionTemplates</TypeName>
													<Value>FlatList</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>Title</Name>
													<Type>String</Type>
													<Value>@Res:Resources</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthMode</Name>
													<Type>Enum</Type>
													<TypeName>FormWidth</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ResourceCard</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>True</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rows</Name>
													<Type>Int32</Type>
													<Value>20</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>CollectionFields</Name>
											<ExtensionComponents>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Name</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Name</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Role</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Company</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
											</ExtensionComponents>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Timeline</Name>
											<ComponentType>AvailabilityViewBuildTimeline</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>TimelineTemplates</TypeName>
													<Value>PointInTime</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightMode</Name>
													<Type>Enum</Type>
													<TypeName>FormHeight</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>TimeframeHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>None</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>columns</Name>
													<Type>Int32</Type>
													<Value>5</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>TimelineFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Chart</Name>
											<ComponentType>AvailabilityViewBuildChart</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>ChartTemplates</TypeName>
													<Value>Buckets</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ReservationCardHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>ChartFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>DataController</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
											<Value>ResActivityReservationsDataController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>Timescale</Name>
											<Type>Enum</Type>
											<TypeName>AVTimeframeType</TypeName>
											<Value>Week</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Res:ResourceReservations</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReservationDetailsTabPageControl</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>Toolbar</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ToolbarButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Cancel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Release</NormalImage>
												<Text>@Res:CancelReservations</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Confirm</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>OK</NormalImage>
												<Text>@SYS4001382</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ReservationGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ResourceName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ResourceName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_EngagementIDName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementIDName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReservationDetails_EngagementType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementType</DataField>
										<DataSource>ReservationDetails</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_TaskName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaskName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_StartTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_EndTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ReservationType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservationType</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservationDetails_ReservedHours</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservedHours</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ReservationDetails</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Res:ReservationDetails</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>