<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgChangeFeedback</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JmgChangeFeedback extends FormRun
{
    FormGroupControl        activeEmployeesGroup;
    WrkCtrId                currentResource;
    Map                     selectedRegistrations;
    QueryBuildRange         regDateTimeRange;
    JmgChangeFeedbackFilter selectedFilter;
    ProdUnitId              curProdUnitId;
    JmgMESDocuHandling      docHand;
    JmgChangeFeedbackFilter dateFilter;

    private static boolean isJmgChangeFeedbackEditPickingListFlightEnabled = JmgChangeFeedbackEditPickingListFlight::instance().isEnabled();

}
]]></Source>
			</Method>
			<Method>
				<Name>changeDateFilter</Name>
				<Source><![CDATA[
    public void changeDateFilter()
    {
        this.setDateFilter(dateFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>changedFeedback</Name>
				<Source><![CDATA[
    public void changedFeedback(JmgTmpJobBundleProdFeedback _jmgTmpJobBundleProdFeedback)
    {
        JmgTermReg startJob;
        JmgTermReg stopJob;
        JmgStampJournalTrans jmgStampJournalTrans;
        JmgPostStandardSystem       jmgPostStandardSystem;
        JmgProdMultiReportFinished  jmgProdMultiReportFinished;
        JmgProdCancelFinished       jmgProdCancelFinished;

        if (!isJmgChangeFeedbackEditPickingListFlightEnabled)
		{
			ttsbegin;
		}
        
        while select _jmgTmpJobBundleProdFeedback
        {
            select firstonly forupdate stopJob
                where _jmgTmpJobBundleProdFeedback.JmgTermRegRecId == stopJob.RecId
                join  forupdate startJob
                where stopJob.MatchRecIdStartStop   == startJob.RecId;

            // Post changes in quantities
            if (startJob.GoodItems + stopJob.GoodItems                      != _jmgTmpJobBundleProdFeedback.GoodNow
                || startJob.PdsCWGoodItems + stopJob.PdsCWGoodItems         != _jmgTmpJobBundleProdFeedback.PdsCWGoodNow
                || startJob.ErrorSpecification + stopJob.ErrorSpecification != _jmgTmpJobBundleProdFeedback.ErrorSpecification
                || stopJob.FinishedCode                                     != _jmgTmpJobBundleProdFeedback.ReportAsFinished)
            {
                jmgStampJournalTrans.JobId                  = stopJob.JobId;
                jmgStampJournalTrans.ProfileDate            = startJob.ProfileDate;
                jmgStampJournalTrans.Worker                 = startJob.Worker;
                jmgStampJournalTrans.setJournalTransTypes(JmgTermJob::commonJob(startJob.JobId));
                jmgStampJournalTrans.Module                 = JmgModuleEnum::PROD;
                jmgStampJournalTrans.QtyGood                = _jmgTmpJobBundleProdFeedback.GoodNow;
                jmgStampJournalTrans.PdsCWQtyGood           = _jmgTmpJobBundleProdFeedback.PdsCWGoodNow;
                jmgStampJournalTrans.ErrorSpecification     = _jmgTmpJobBundleProdFeedback.ErrorSpecification;
                jmgStampJournalTrans.SysQtyGood             = (startJob.GoodItems + stopJob.GoodItems);
                jmgStampJournalTrans.PdsCWSysQtyGood        = (startJob.PdsCWGoodItems + stopJob.PdsCWGoodItems);
                jmgStampJournalTrans.SysErrorSpecification  = (startJob.ErrorSpecification + stopJob.ErrorSpecification);
                jmgStampJournalTrans.StartDate              = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(startJob.RegDateTime, DateTimeUtil::getOriginatingTimeZone(startJob.RegDateTime)));
                jmgStampJournalTrans.StartTime              = DateTimeUtil::time(DateTimeUtil::applyTimeZoneOffset(startJob.RegDateTime, DateTimeUtil::getOriginatingTimeZone(startJob.RegDateTime)));
                jmgStampJournalTrans.JobFinished            = _jmgTmpJobBundleProdFeedback.ReportAsFinished == JmgFeedbackStatus::Completed ? NoYes::Yes : NoYes::No;

                jmgPostStandardSystem   = JmgPostStandardSystem::constructJmgStampJournalTrans(jmgStampJournalTrans, _jmgTmpJobBundleProdFeedback.WHSLicensePlate);

                jmgProdMultiReportFinished = jmgPostStandardSystem.createReportFinishedJournal();

                if (jmgProdMultiReportFinished && jmgProdMultiReportFinished.parmUserCanceled())
                {
                    throw error("@SYS18447");
                }

                if (jmgProdMultiReportFinished)
                {
                    jmgProdMultiReportFinished.runOperation();
                }

                jmgPostStandardSystem.postQty(jmgStampJournalTrans);

                // Cancel finished report
                if (stopJob.FinishedCode == 2 && _jmgTmpJobBundleProdFeedback.ReportAsFinished != JmgFeedbackStatus::Completed)
                {
                    jmgProdCancelFinished = JmgProdCancelFinished::construct();
                    jmgProdCancelFinished.parmJobId(stopJob.JobId);

                    if (_jmgTmpJobBundleProdFeedback.ReportAsFinished == JmgFeedbackStatus::InProgress)
                    {
                        jmgProdCancelFinished.parmJobStatus(ProdJobStatus::Started);
                    }
                    else if (_jmgTmpJobBundleProdFeedback.ReportAsFinished == JmgFeedbackStatus::Stopped)
                    {
                        jmgProdCancelFinished.parmJobStatus(ProdJobStatus::Stopped);
                    }

                    jmgProdCancelFinished.revertCompletedStatus();
                    stopJob.reread();
                }

                if (isJmgChangeFeedbackEditPickingListFlightEnabled)
                {
                    ttsbegin;
                }

                startJob.GoodItems          = 0;
                startJob.ScrapItems         = 0;
                startJob.PdsCWGoodItems     = 0;
                startJob.PdsCWScrapItems    = 0;
                startJob.ErrorSpecification = '';
                startJob.update();
                stopJob.GoodItems           = _jmgTmpJobBundleProdFeedback.GoodNow;
                stopJob.PdsCWGoodItems      = _jmgTmpJobBundleProdFeedback.PdsCWGoodNow;
                stopJob.ErrorSpecification  = _jmgTmpJobBundleProdFeedback.ErrorSpecification;
                stopJob.FinishedCode        = _jmgTmpJobBundleProdFeedback.ReportAsFinished;
                stopJob.ScrapItems          = JmgErrorSpecificationForm::getTotalErrorQuantity(stopJob.ErrorSpecification);
                stopJob.PdsCWScrapItems     = JmgErrorSpecificationForm::getTotalPdsCWErrorQuantity(stopJob.ErrorSpecification);
                stopJob.update();

                if (isJmgChangeFeedbackEditPickingListFlightEnabled)
                {
                    ttscommit;
                }
            }
        }

        if (!isJmgChangeFeedbackEditPickingListFlightEnabled)
        {
            ttscommit;
        }
        selectedRegistrations = new Map(Types::Record, Types::Record);
        jmgTermReg_StartJob_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedFilter</Name>
				<Source><![CDATA[
    public JmgChangeFeedbackFilter getSelectedFilter()
    {
        return selectedFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedJobIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns list of selected jobs Ids.
    /// </summary>
    /// <returns>
    /// Container, containing ids of selected jobs.
    /// </returns>
    public container getSelectedJobIds()
    {
        container jobIds;
        JmgTermReg termReg;
        MapEnumerator mapEnumerator = selectedRegistrations.getEnumerator();

        while (mapEnumerator.moveNext())
        {
            termReg = mapEnumerator.currentKey();
            jobIds += termReg.JobId;
        }

        return jobIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedJobs</Name>
				<Source><![CDATA[
    public JmgTmpJobBundleProdFeedback getSelectedJobs()
    {
        JmgTmpJobBundleProdFeedback ret;
        Map                         m;
        MapEnumerator               mapEnumerator;
        JmgTermReg                  startRegistration;
        JmgTermJob_Prod             prodJob;
        JmgTermReg                  stopRegistration;

        m = new Map(Types::Record, Types::Record);

        startRegistration = jmgTermReg_StartJob_DS.getFirst(1);
        if (!startRegistration)
        {
            startRegistration = jmgTermReg_StartJob_DS.cursor();
        }

        while (startRegistration)
        {
            select firstonly stopRegistration
                    where stopRegistration.MatchRecIdStartStop == startRegistration.RecId;

            m.insert(startRegistration, stopRegistration);
            startRegistration = jmgTermReg_StartJob_DS.getNext();
        }

        mapEnumerator = m.getEnumerator();
        while (mapEnumerator.moveNext())
        {
            startRegistration = mapEnumerator.currentKey();
            stopRegistration = mapEnumerator.currentValue();
            prodJob = JmgTermJob::construct(startRegistration.JobId);
            ret.JobRef                  = prodJob.jobRef();
            ret.JobId                   = prodJob.jobId();
            ret.JobType                 = prodJob.prodJobType();
            ret.JobDescription          = prodJob.jobDescription();
            ret.QtyGood                 = prodJob.qtyGood();
            ret.QtyError                = prodJob.qtyError();
            ret.RouteOprPriority        = prodJob.oprPriority();
            ret.CalcQty                 = prodJob.calcQty();
            ret.GoodNow                 = startRegistration.GoodItems + stopRegistration.GoodItems;
            ret.PdsCWQtyGood            = prodJob.pdsCWQtyGood();
            ret.PdsCWQtyError           = prodJob.pdsCWQtyError();
            ret.PdsCWCalcQty            = prodJob.pdsCWCalcQty();
            ret.PdsCWGoodNow            = startRegistration.PdsCWGoodItems + stopRegistration.PdsCWGoodItems;
            ret.ErrorSpecification      = startRegistration.ErrorSpecification + stopRegistration.ErrorSpecification;
            ret.ReportAsFinished        = stopRegistration.FinishedCode;
            ret.JmgTermRegRecId         = stopRegistration.RecId;
            ret.insert();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedResource</Name>
				<Source><![CDATA[
    public WrkCtrId getSelectedResource()
    {
        return currentResource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        this.setCurrentResource();

        super();

        if (!currentResource && !curProdUnitId)
        {
            element.close();
        }

        selectedRegistrations = new Map(Types::Record, Types::Record);

        this.setDateFilter(JmgChangeFeedbackFilter::Today);
        ChangeFilterDate.text(enum2str(JmgChangeFeedbackFilter::Today));

        element.design().caption(strFmt("@SYS53184","@SYS310790",WrkCtrTable::find(currentResource).Name));
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptForResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the <c>JmgMESRequestActionDialog</c> form and lets the user pick which resource to open the form with.
    /// </summary>
    /// <returns>
    /// Boolean value, true if "Select Resource and Action" dialog has been exited using an Ok button, otherwise false.
    /// </returns>
    public boolean promptForResource()
    {
        Args        args;
        FormRun     requestActionDialog;
        Object      resourcePickingObject;
        boolean     isDialogCanceled;

        args   = new Args(formStr(JmgMESRequestActionDialog));
        args.caller(element);
        args.parm(currentResource);
        requestActionDialog = classfactory.formRunClass(args);

        requestActionDialog.run();
        requestActionDialog.wait(true);

        resourcePickingObject = requestActionDialog;
        currentResource = resourcePickingObject.selectedResource(false, '');

        isDialogCanceled = resourcePickingObject.isDialogCancelled();

        if (!isDialogCanceled)
        {
            currentResource = resourcePickingObject.selectedResource(false, '');
            if(!currentResource)
            {
                currentResource = resourcePickingObject.selectedResourceGroup(false, '');
            }
            curProdUnitId = resourcePickingObject.selectedProdUnitId(false, '');
            
            if (element.design())
            {
                element.design().caption("@SYS302791" + ' - ' + WrkCtrTable::find(currentResource).Name);
            }
        }

        return !isDialogCanceled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        docHand = JmgMESDocuHandling::construct(JmgMESShowAttachments);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrentResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the current resource from dialog or <c>Args</c> object.
    /// </summary>
    private void setCurrentResource()
    {
        // Get from JmgMESRequestActionDialog
        if (element.args().caller() && element.args().caller().name() == formStr(JmgMESRequestActionDialog))
        {
            currentResource = element.args().caller().selectedResource(false, '');

            if (!currentResource)
            {
                currentResource = element.args().caller().selectedResourceGroup(false, '');
            }
        }

        // Get from Args
        if (!currentResource && element.args() && element.args().parm())
        {
            currentResource = element.args().parm();
        }

        // If not set, prompt user:
        if (!currentResource)
        {
            this.promptForResource();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDateFilter</Name>
				<Source><![CDATA[
    public void setDateFilter(JmgChangeFeedbackFilter _value)
    {
        JmgDateTime fromDateTime;
        switch (_value)
        {
            case JmgChangeFeedbackFilter::Today:
                fromDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), 0, DateTimeUtil::getUserPreferredTimeZone());
                break;
            case JmgChangeFeedbackFilter::ThisWeek:
                fromDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) - 7, 0, DateTimeUtil::getUserPreferredTimeZone());
                break;
            case JmgChangeFeedbackFilter::ThisMonth:
                fromDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) - 7, 0, DateTimeUtil::getUserPreferredTimeZone());
                break;
            default:
                fromDateTime = DateTimeUtil::minValue();
                break;
        }
        if (!regDateTimeRange)
        {
            regDateTimeRange = jmgTermReg_StartJob_DS.query().dataSourceTable(tableNum(JmgTermReg), 1).addRange(fieldNum(JmgTermReg, RegDateTime));
        }
        regDateTimeRange.value(queryRange(fromDateTime, DateTimeUtil::maxValue()));
        jmgTermReg_StartJob_DS.executeQuery();
        selectedFilter = _value;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JmgTermReg_StartJob</Name>
				<Methods>
					<Method>
						<Name>totalQtyError</Name>
						<Source><![CDATA[
        public display ProdReportedError totalQtyError(JmgTermReg _jmgTermReg)
        {
            JmgTermReg stopRegistration;
            select firstonly ScrapItems
                from  stopRegistration
                where stopRegistration.MatchRecIdStartStop == _jmgTermReg.RecId;

            return _jmgTermReg.ScrapItems + stopRegistration.ScrapItems;
        }

]]></Source>
					</Method>
					<Method>
						<Name>totalQtyGood</Name>
						<Source><![CDATA[
        public display ProdReportedGood totalQtyGood(JmgTermReg _jmgTermReg)
        {
            JmgTermReg stopRegistration;
            select firstonly GoodItems
                from  stopRegistration
                where stopRegistration.MatchRecIdStartStop == _jmgTermReg.RecId;

            return _jmgTermReg.GoodItems + stopRegistration.GoodItems;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWTotalQtyGood</Name>
						<Source><![CDATA[
        public display PdsCWBatchGood pdsCWTotalQtyGood(JmgTermReg _jmgTermReg)
        {
            JmgTermReg stopRegistration;

            select firstonly PdsCWGoodItems
                from  stopRegistration
                where stopRegistration.MatchRecIdStartStop == _jmgTermReg.RecId;

            return _jmgTermReg.PdsCWGoodItems + stopRegistration.PdsCWGoodItems;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWTotalQtyError</Name>
						<Source><![CDATA[
        public display PdsCWBatchErr pdsCWTotalQtyError(JmgTermReg _jmgTermReg)
        {
            JmgTermReg stopRegistration;

            select firstonly PdsCWScrapItems
                from  stopRegistration
                where stopRegistration.MatchRecIdStartStop == _jmgTermReg.RecId;

            return _jmgTermReg.PdsCWScrapItems + stopRegistration.PdsCWScrapItems;
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();

            this.rereadSelectedRegistrations();

            JmgFeedbackWizard.enabled(selectedRegistrations.elements());
            docHand.updateDocsForAll(element.getSelectedJobIds());
        }

]]></Source>
					</Method>
					<Method>
						<Name>rereadSelectedRegistrations</Name>
						<Source><![CDATA[
        private void rereadSelectedRegistrations()
        {
            JmgTermReg jmgTermRegMarked;

            selectedRegistrations = new Map(Types::Record, Types::Record);

            for (jmgTermRegMarked = JmgTermReg_StartJob_DS.getFirst(1);
                jmgTermRegMarked != null;
                jmgTermRegMarked = JmgTermReg_StartJob_DS.getNext())
            {
                selectedRegistrations.insert(jmgTermRegMarked, JmgTermReg::find(jmgTermRegMarked.MatchRecIdStartStop));
            }

            JmgTermReg currentlySelectedJmgTermReg = JmgTermReg_StartJob_DS.cursor() as JmgTermReg;
            if (currentlySelectedJmgTermReg && !selectedRegistrations.exists(currentlySelectedJmgTermReg))
            {
                selectedRegistrations.insert(currentlySelectedJmgTermReg, JmgTermReg::find(jmgTermRegMarked.MatchRecIdStartStop));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>JmgTermReg_StopJob</Name>
				<Methods>
					<Method>
						<Name>status</Name>
						<Source><![CDATA[
        public display JmgStoppedCompletedStatus status(JmgTermReg _jmgTermReg)
        {
            JmgStoppedCompletedStatus   ret;
            if (_jmgTermReg.FinishedCode    == 2)
            {
                ret = JmgStoppedCompletedStatus::Completed;
            }
            else
            {
                ret = JmgStoppedCompletedStatus::Stopped;
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>JmgJobTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbds;

            super();

            qbds = this.query().dataSourceTable(tableNum(JmgJobTable));
            qbds.clearLinks();
            qbds.addLink(fieldNum(JmgTermReg, JobId), fieldNum(JmgJobTable, JobId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>lockedWindow</Name>
						<Source><![CDATA[
        public display ImageRes lockedWindow(JmgJobTable _jmgJobTable)
        {
            return enum2int(_jmgJobTable.Locked);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrResourceAndGroupView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource    qbdsWrkCtrResourceAndGroupView = this.queryBuildDataSource();
            QueryBuildDataSource    qbdsJmgJobTable                = this.query().dataSourceTable(tableNum(JmgJobTable));

            qbdsWrkCtrResourceAndGroupView.clearLinks();
            qbdsWrkCtrResourceAndGroupView.addLink(fieldNum(JmgTermReg, ResNo), fieldNum(WrkCtrResourceAndGroupView, WrkCtrId));

            qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ValidFrom)).value(
                    strFmt('(%1.%2 <= %3.%4)',
                            qbdsWrkCtrResourceAndGroupView.name(),
                            fieldStr(WrkCtrResourceAndGroupView, ValidFrom),
                            qbdsJmgJobTable.name(),
                            fieldStr(JmgJobTable, FromDate))
            );
            qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, ValidTo)).value(
                    strFmt('(%1.%2 >= %3.%4)',
                            qbdsWrkCtrResourceAndGroupView.name(),
                            fieldStr(WrkCtrResourceAndGroupView, ValidTo),
                            qbdsJmgJobTable.name(),
                            fieldStr(JmgJobTable, FromDate))
            );

            this.filterOnResourceAndProdUnitId();
        }

]]></Source>
					</Method>
					<Method>
						<Name>filterOnResourceAndProdUnitId</Name>
						<Source><![CDATA[
        public void filterOnResourceAndProdUnitId()
        {
            QueryBuildDataSource    qbdsWrkCtrResourceAndGroupView = this.queryBuildDataSource();

            qbdsWrkCtrResourceAndGroupView.clearRange(fieldNum(WrkCtrResourceAndGroupView, WrkCtrIdGroup));
            qbdsWrkCtrResourceAndGroupView.clearRange(fieldNum(WrkCtrResourceAndGroupView, WrkCtrId));
            qbdsWrkCtrResourceAndGroupView.clearRange(fieldNum(WrkCtrResourceAndGroupView, ProdUnitId));

            if (currentResource)
            {
                WrkCtrTable selectedWrkCtrTable = WrkCtrTable::find(currentResource);

                if (selectedWrkCtrTable.IsIndividualResource == NoYes::No)
                {
                    qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, WrkCtrIdGroup)).value(currentResource);
                }
                else
                {
                    qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView, WrkCtrId)).value(currentResource);
                }
            }
            else if (curProdUnitId)
            {
                qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView,ProdUnitId)).value(curProdUnitId);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrTableIndividualView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource    qbdsWrkCtrTableIndividualView = this.query().dataSourceName(wrkCtrTableIndividualView_ds.name());
            QueryBuildDataSource    qbdsJmgJobTable               = this.query().dataSourceTable(tableNum(JmgJobTable));

            qbdsWrkCtrTableIndividualView.clearLinks();
            qbdsWrkCtrTableIndividualView.addLink(fieldNum(JmgTermReg, ResNo), fieldNum(WrkCtrTableIndividualView, WrkCtrId));

            qbdsWrkCtrTableIndividualView.addRange(fieldNum(WrkCtrTableIndividualView, ValidFrom)).value(
                    strFmt('(%1.%2 <= %3.%4)',
                            qbdsWrkCtrTableIndividualView.name(),
                            fieldStr(WrkCtrTableIndividualView, ValidFrom),
                            qbdsJmgJobTable.name(),
                            fieldStr(JmgJobTable, FromDate))
            );

            qbdsWrkCtrTableIndividualView.addRange(fieldNum(WrkCtrTableIndividualView, ValidTo)).value(
                    strFmt('(%1.%2 >= %3.%4)',
                            qbdsWrkCtrTableIndividualView.name(),
                            fieldStr(WrkCtrTableIndividualView, ValidTo),
                            qbdsJmgJobTable.name(),
                            fieldStr(JmgJobTable, FromDate))
            );

            this.filterOnResourceAndProdUnitId();
        }

]]></Source>
					</Method>
					<Method>
						<Name>filterOnResourceAndProdUnitId</Name>
						<Source><![CDATA[
        public void filterOnResourceAndProdUnitId()
        {
            QueryBuildDataSource qbdsWrkCtrTableIndividualView = this.queryBuildDataSource();
            qbdsWrkCtrTableIndividualView.clearRange(fieldNum(WrkCtrTableIndividualView, WrkCtrIdGroup));
            qbdsWrkCtrTableIndividualView.clearRange(fieldNum(WrkCtrTableIndividualView, ProdUnitId));
            QueryBuildDataSource qbdsJmgTermReg = this.query().dataSourceTable(tableNum(JmgTermReg));
            qbdsJmgTermReg.clearRange(fieldNum(JmgTermReg, ResNo));

            if (currentResource)
            {
                WrkCtrTable selectedWrkCtrTable = WrkCtrTable::find(currentResource);
                if (selectedWrkCtrTable.IsIndividualResource == NoYes::No)
                {
                    qbdsWrkCtrTableIndividualView.addRange(fieldNum(WrkCtrTableIndividualView, WrkCtrIdGroup)).value(currentResource);
                }
                else
                {
                    qbdsJmgTermReg.addRange(fieldNum(JmgTermReg, ResNo)).value(currentResource);
                }
            }
            else if (curProdUnitId)
            {
                qbdsWrkCtrTableIndividualView.addRange(fieldNum(WrkCtrTableIndividualView,ProdUnitId)).value(curProdUnitId);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SwitchResourceButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if (element.promptForResource())
            {
                WrkCtrResourceAndGroupView_DS.filterOnResourceAndProdUnitId();
                WrkCtrTableIndividualView_DS.filterOnResourceAndProdUnitId();
                jmgTermReg_StartJob_DS.executeQuery();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JmgMESShowAttachments</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            JmgDialogFormClass  dlgForm = new JmgDialogFormClass("@SYS302292","@SYS302291", "@SYS302287");
            //"The job(s) you are starting contains one or more attachments that have to be read before the job can be started.","View Attachments");

            docHand.updateDocsForAll(element.getSelectedJobIds());
            dlgForm.openAttachmentDialog(docHand);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChangeFilterDate</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            dateFilter = str2enum(dateFilter, this.valueStr());
            element.changeDateFilter();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JmgTermReg_StartJob</Name>
			<Table>JmgTermReg</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutoStamp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Error</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorSpecification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinishedCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobIdAbs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchRecIdStartStop</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnCallActivity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWGoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWStartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysMrpUpdateRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpGoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpStartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPilot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdPilot</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JmgTermReg_StopJob</Name>
			<Table>JmgTermReg</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutoStamp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Error</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorSpecification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinishedCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobIdAbs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchRecIdStartStop</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnCallActivity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWGoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWStartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SysMrpUpdateRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpGoodItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpScrapItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TmpStartItems</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPilot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdPilot</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgTermReg_StartJob</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JmgJobTable</Name>
			<Table>JmgJobTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Locked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprActId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWCalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgTermReg_StartJob</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrResourceAndGroupView</Name>
			<Table>WrkCtrResourceAndGroupView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsIndividualResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonnelNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgTermReg_StartJob</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrTableIndividualView</Name>
			<Table>WrkCtrTableIndividualView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsIndividualResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonnelNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgTermReg_StartJob</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS310790</Caption>
		<DataSource xmlns="">JmgTermReg_StartJob</DataSource>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>JobListButtonGroup</Name>
						<ElementPosition>805306366</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>JmgFeedbackWizard</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<MenuItemName>JmgFeedbackWizard</MenuItemName>
								<MultiSelect>Yes</MultiSelect>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>SwitchResourceButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS301535</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<Text>@SYS328013</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>JmgMESShowAttachments</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>JmgMESShowAttachments</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>Yes</MultiSelect>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Columns>-1</Columns>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118024</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>ChangeFilterDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<EnumType>JmgChangeFeedbackFilter</EnumType>
						<Label>@SYS302789</Label>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>JmgTermReg_StartJob_Worker</Name>
						<ElementPosition>402653181</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JmgTermReg_StartJob_Worker_PersonnelNumber</Name>
								<DataRelationPath>HcmWorker</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<ReferenceField>Worker</ReferenceField>
						<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>Locked</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>536870908</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Image</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>highPriorityImage</DataMethod>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS190626</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>JmgJobTable_PriorityResource</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>671088635</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PriorityResource</DataField>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JmgJobTable_ModuleRefId</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>805306362</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ModuleRefId</DataField>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS89639</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JmgJobTable_ItemId</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>939524089</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemId</DataField>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JmgJobTable_OprActId</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741816</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>OprActId</DataField>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS101237</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>JmgJobTable_Type</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1207959543</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Type</DataField>
						<DataSource>JmgJobTable</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgJobTable_CalcQty</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1342177270</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CalcQty</DataField>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS190647</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>goodQuantity</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1476394997</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>totalQtyGood</DataMethod>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>jobStatus</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1744830451</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>status</DataMethod>
						<DataSource>JmgTermReg_StopJob</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>emplWorking</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1879048178</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>emplWorking</DataMethod>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>JmgTermReg_StartJob_modifiedDateTime</Name>
						<ElementPosition>2013265905</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>modifiedDateTime</DataField>
						<DataSource>JmgTermReg_StartJob</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgJobTable_PdsCWCalcQty</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2144337918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PdsCWCalcQty</DataField>
						<DataSource>JmgJobTable</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>pdsCWGoodQuantity</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2145910782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsCWTotalQtyGood</DataMethod>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>badQuantity</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2146260307</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>totalQtyError</DataMethod>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>pdsCWBadQuantity</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2146609832</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsCWTotalQtyError</DataMethod>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>JmgTermReg_StartJob</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ResourceJobsInfo</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>ResourceJobsInfo_OprNum</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Left</Alignment>
						<Border>None</Border>
						<DataField>OprNum</DataField>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JmgJobTable_Description</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS12225</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>FromDateTime</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Left</Alignment>
						<Border>None</Border>
						<DataField>RegDateTime</DataField>
						<DataSource>JmgTermReg_StartJob</DataSource>
						<Label>@SYS109394</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>ToDateTime</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Left</Alignment>
						<Border>None</Border>
						<DataField>RegDateTime</DataField>
						<DataSource>JmgTermReg_StopJob</DataSource>
						<Label>@SYS109395</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>previousOperation</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Left</Alignment>
						<Border>None</Border>
						<DataMethod>previousOperation</DataMethod>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS301543</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>prevOperationQtyGood</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Left</Alignment>
						<Border>None</Border>
						<DataMethod>prevOperationQtyGood</DataMethod>
						<DataSource>JmgJobTable</DataSource>
						<Label>@SYS301542</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>JmgJobTable_ItemId1</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemId</DataField>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>itemName</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>itemName</DataMethod>
						<DataSource>JmgJobTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<ViewEditMode>View</ViewEditMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>JmgEmployeeWorkingOnJobPart</Name>
			<DataSource>JmgJobTable</DataSource>
			<DataSourceRelation>JmgJobTable.JmgTermReg_Active</DataSourceRelation>
			<ElementPosition>1073741823</ElementPosition>
			<MenuItemName>JmgEmployeeWorkingOnJobPart</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>