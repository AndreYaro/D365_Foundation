<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayEmplStandardDeductionTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RPayEmplStandardDeductionTable extends FormRun
{
    #Resource
    #RPayModuleName
    #define.Value3(3)

    RPayStandardDeductionType   rPayStandardDeductionType;
    RPayTrans                   rPayTrans;
    Imagelist                   imagelist;
    int                         dragIdx;
}
]]></Source>
			</Method>
			<Method>
				<Name>createList</Name>
				<Source><![CDATA[
    void createList()
    {
        RPayEmplStandardDeductionTable  payEmplStandardDeductionTable;
        RPayStandardDeductionTable      payStandardDeductionTable;
        FormListItem                    item;
        int                             idx;
        RHRMEmplTable                   emplTableLocal, emplTableLocal1;

        list.deleteAll();

        emplTableLocal1 = RHRMEmplTable::find(rPayEmplStandardDeductionTable.EmplId);
        while select DocumentNum, DocumentDate, DeductionCode, RecId from payEmplStandardDeductionTable order by DeductionOrder desc
                  where payEmplStandardDeductionTable.DeductionCode == rPayEmplStandardDeductionTable.DeductionCode
              exists join emplTableLocal
                  where emplTableLocal.PayMainEmplId         == emplTableLocal1.PayMainEmplId &&
                        payEmplStandardDeductionTable.EmplId == emplTableLocal.EmployeeId
        {
            item = new FormListItem(payEmplStandardDeductionTable.DeductionCode);
            item.data(payEmplStandardDeductionTable.RecId);
            idx = list.addItem(item);

            select firstonly DeductionName from payStandardDeductionTable
                where payStandardDeductionTable.DeductionCode == payEmplStandardDeductionTable.DeductionCode;

            item = new FormListItem(payStandardDeductionTable.DeductionName);
            item.subItem(1);
            item.idx(idx);
            list.setItem(item);
            item = new FormListItem(payEmplStandardDeductionTable.DocumentNum);
            item.subItem(2);
            item.idx(idx);
            list.setItem(item);
            item = new FormListItem(strfmt("@GLS106745",payEmplStandardDeductionTable.DocumentDate));

            item.subItem(3);
            item.idx(idx);
            list.setItem(item);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (! (this.args().parmEnumType() == enumnum(RPayStandardDeductionType)))
        {
            return;
        }
        rPayStandardDeductionType = this.args().parmEnum();
        super();
        this.updateDesign();
        this.design().caption(enum2str(rPayStandardDeductionType));
        this.initList();

        SegmentedEntry.parmIsDefaultAccount(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initList</Name>
				<Source><![CDATA[
    void initList()
    {
        this.setImageList();
        list.addColumn(1,new FormListColumn("@GLS106059",1,100));
        list.addColumn(2,new FormListColumn("@GLS101388",2,220));
        list.addColumn(3,new FormListColumn("@GLS104522",3,150));
        list.addColumn(4,new FormListColumn("@SYS2587",4,100));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean lookupLedgerDimension(LedgerJournalACType _acType, FormControl _control)
    {
        switch (_acType)
        {
            case LedgerJournalACType::Bank:
                BankAccountTable::lookupBankAccount(_control);
                break;
            case LedgerJournalACType::Cust:
                CustTable::lookupCustomer(_control);
                break;
            case LedgerJournalACType::FixedAssets:
                AssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::Project:
                ProjTable::lookupProjId(_control, RPayEmplStandardDeductionTable);
                break;
            case LedgerJournalACType::Vend:
                VendTable::lookupVendor(_control);
                break;
            case LedgerJournalACType::RDeferrals:
                RDeferralsTable::lookupDeferrals(_control, dateMax());
                break;
            case LedgerJournalACType::FixedAssets_RU:
                RAssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::RCash:
                RCashTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::Employee_RU:
                EmployeeTable_RU::lookupAdvHolder(_control);
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useCustomlookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean useCustomlookupLedgerDimension(int _accountTypeEnumValue)
    {
        boolean returnValue;

        LedgerJournalACType accountType = any2enum(_accountTypeEnumValue);
        switch (accountType)
        {
            case LedgerJournalACType::Bank:
            case LedgerJournalACType::Cust:
            case LedgerJournalACType::FixedAssets:
            case LedgerJournalACType::Project:
            case LedgerJournalACType::Vend:
            case LedgerJournalACType::RDeferrals:
            case LedgerJournalACType::FixedAssets_RU:
            case LedgerJournalACType::RCash:
            case LedgerJournalACType::Employee_RU:
                returnValue = true;
                break;
            default:
                returnValue = false;
                break;
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setImageList</Name>
				<Source><![CDATA[
    #Resource
    void setImageList()
    {
        ;
        imagelist = new Imagelist(Imagelist::smallIconWidth() , Imagelist::smallIconHeight());

        imagelist.add(new Image(#RES_NODE_TABLE));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        FormDataObject totalSum;
        FormDataObject endDate;
        FormDataObject deductPercentage;
        FormDataObject periodSum;
        FormDataObject paySequence;
        FormDataObject alimonyPostSequence;
        FormDataObject bankTransAccountId;

        totalSum            =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,TotalSum));
        endDate             =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,EndDate));
        deductPercentage    =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,DeductPercentage));
        periodSum           =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,PeriodSum));
        paySequence         =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,PaySequence));
        alimonyPostSequence =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,AlimonyPostSequence));
        bankTransAccountId  =  rPayEmplStandardDeductionTable_ds.object(fieldnum(RPayEmplStandardDeductionTable,BankTransAccountId));

        switch (rPayStandardDeductionType)
        {
            case RPayStandardDeductionType::Alimony:
                alimonyPayment.visible(true);
                lucreCalculation.visible(false);
                postalTransferList.visible(true);
                alimonySheetReport.visible(true);
                break;
            case RPayStandardDeductionType::Borrowing:
                alimonyPayment.visible(false);
                lucreCalculation.visible(true);
                postalTransferList.visible(false);
                alimonySheetReport.visible(false);
                break;
            case RPayStandardDeductionType::Other:
                alimonyPayment.visible(false);
                lucreCalculation.visible(false);
                postalTransferList.visible(false);
                alimonySheetReport.visible(false);
                break;
            default:
                break;
        }

        if (rPayEmplStandardDeductionTable.EndDate)
        {
            rPayEmplStandardDeductionTable.TotalSum = 0;
            totalSum.enabled(false);
        }
        else
        {
            totalSum.enabled(true);
        }

        if (rPayEmplStandardDeductionTable.TotalSum)
        {
            rPayEmplStandardDeductionTable.EndDate = dateNull();
            endDate.enabled(false);
        }
        else
        {
            endDate.enabled(true);
        }

        if (rPayEmplStandardDeductionTable.PeriodSum)
        {
            rPayEmplStandardDeductionTable.DeductPercentage = 0;
            deductPercentage.enabled(false);
        }
        else
        {
            deductPercentage.enabled(true);
        }

        if (rPayEmplStandardDeductionTable.DeductPercentage)
        {
            rPayEmplStandardDeductionTable.PeriodSum = 0;
            periodSum.enabled(false);
        }
        else
        {
            periodSum.enabled(true);
        }

        if (rPayEmplStandardDeductionTable.AlimonyPaymentType == RPayAlimPaymentType::Post)
        {
            alimonyPostSequence.enabled(true);
        }
        else
        {
            rPayEmplStandardDeductionTable.AlimonyPostSequence = 0;
            alimonyPostSequence.enabled(false);
        }
        if (rPayEmplStandardDeductionTable.AlimonyPaymentType == RPayAlimPaymentType::Bank ||
            rPayStandardDeductionType != RPayStandardDeductionType::Alimony)
        {
            bankTransAccountId.enabled(true);
        }
        else
        {
            rPayEmplStandardDeductionTable.BankTransAccountId = '';
            bankTransAccountId.enabled(false);
        }
        if (rPayTrans.RecId)
        {
            paySequence.allowEdit(false);
        }
        else
        {
            paySequence.allowEdit(true);
        }

        payRecalcStandardDeduction.enabled(!rPayEmplStandardDeductionTable.CorrectedPeriod &&
                                            rPayEmplStandardDeductionTable.StartDate       &&
                                            rPayEmplStandardDeductionTable.EndDate         &&
                                            rPayEmplStandardDeductionTable.DeductPercentage > 0);

        rPayEmplStandardDeductionTable_ds.refresh();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RPayEmplStandardDeductionTable</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            rPayEmplStandardDeductionTable_DS.reread();
            rPayEmplStandardDeductionTable_DS.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            ;
            rPayEmplStandardDeductionTable.initFromStandardDeductionParameters(rPayStandardDeductionType);
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            RPayEmplStandardDeductionTable payEmplStandardDeductionTable;
            RHRMEmplTable                  emplTableLocal, emplTableLocal1;

            select firstonly RecId from payEmplStandardDeductionTable
                where payEmplStandardDeductionTable.RecId == rPayEmplStandardDeductionTable.RecId;

            if (!payEmplStandardDeductionTable.RecId)
            {
                emplTableLocal1 = RHRMEmplTable::find(rPayEmplStandardDeductionTable.EmplId);

                select firstonly DeductionOrder from payEmplStandardDeductionTable order by DeductionOrder desc
                    where payEmplStandardDeductionTable.DeductionCode == rPayEmplStandardDeductionTable.DeductionCode
                exists join emplTableLocal
                    where emplTableLocal.PayMainEmplId         == emplTableLocal1.PayMainEmplId &&
                          payEmplStandardDeductionTable.EmplId == emplTableLocal.EmployeeId;

                rPayEmplStandardDeductionTable.DeductionOrder = payEmplStandardDeductionTable.DeductionOrder + 1;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (ret)
            {
                select firstonly rPayTrans
                    where rPayTrans.SourceTableId == rPayEmplStandardDeductionTable.TableId &&
                          rPayTrans.SourceRecId   == rPayEmplStandardDeductionTable.RecId;
                element.updateDesign();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource  rPayEmplStandardDeductionTableDs,
                                  rPayStandardDeductionTableDs;

            rPayEmplStandardDeductionTableDs = rPayEmplStandardDeductionTable_Q.dataSourceNo(1);
            rPayStandardDeductionTableDs     = rPayEmplStandardDeductionTableDs.addDataSource(tablenum(RPayStandardDeductionTable));
            rPayStandardDeductionTableDs.addRange(fieldnum(RPayStandardDeductionTable,DeductionType)).value(queryValue(rPayStandardDeductionType));
            rPayStandardDeductionTableDs.joinMode(JoinMode::ExistsJoin);
            rPayStandardDeductionTableDs.relations(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AlimonyPaymentType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankTransAccountId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                switch (rPayEmplStandardDeductionTable.RecipientType)
                {
                    case RPayStandardDeductionRecipientType::Cust:
                        CustBankAccount::lookupBankAccount(_formControl, rPayEmplStandardDeductionTable.Recipient);
                        break;

                    case RPayStandardDeductionRecipientType::Vend:
                        VendBankAccount::lookupBankAccount(_formControl, rPayEmplStandardDeductionTable.Recipient);
                        break;

                    default :
                        RHRMPersonBankAccount::lookupBankAccount(_formControl, rPayEmplStandardDeductionTable.Recipient);
                        break;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DeductionCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ;
                RPayEmplStandardDeductionTable::lookupDeductionCode(_formControl,rPayStandardDeductionType);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayEmplStandardDeductionTable.initFromStandardDeductionTable(rPayStandardDeductionType,
                                                                              rPayEmplStandardDeductionTable.DeductionCode);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DeductPercentage</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>EndDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PeriodSum</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Recipient</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                RPayEmplStandardDeductionTable.BankTransAccountId = '';
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RecipientType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (rPayEmplStandardDeductionTable.RecipientType == RPayStandardDeductionRecipientType::Empl)
                {
                    rPayEmplStandardDeductionTable.Recipient = rPayEmplStandardDeductionTable.EmplId;
                }
                else
                {
                    rPayEmplStandardDeductionTable.Recipient = '';
                }
                rPayEmplStandardDeductionTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TotalSum</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ButtonCalc</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            RPayCalculate_StandardDeduction payCalculate = new RPayCalculate_StandardDeduction(RPayModuleTable::find(#ModuleNameStandardDeduction));
            ;

            payCalculate.queryRun().interactive(NoYes::Yes);
            payCalculate.calcQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            int i = list.getNextItem(FormListNext::Selected);
            ;

            list.moveItem(i, i-1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            int i =  list.getNextItem(FormListNext::Selected);
            ;

            list.moveItem(i, i+1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);
            if (_toTab == #Value3)
            {
                element.createList();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RPayEmplStandardDeductionTable_DeductionCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ;
            RPayEmplStandardDeductionTable::lookupDeductionCode(this,rPayStandardDeductionType);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                if (! ( select rPayStandardDeductionTable where  rPayStandardDeductionTable.DeductionType == rPayStandardDeductionType &&
                                                               rPayStandardDeductionTable.DeductionCode == this.text()).RecId)
                {
                    error("@GLS106111");
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShipTo_BankTransAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args     args;
            RHRMPersonBankAccount rHRMPersonBankAccount;

            if (rPayEmplStandardDeductionTable.RecipientType == RPayStandardDeductionRecipientType::Empl)
            {
                args = new Args();

                rHRMPersonBankAccount = RHRMPersonBankAccount::findEmplId(rPayEmplStandardDeductionTable.Recipient, rPayEmplStandardDeductionTable.BankTransAccountId);

                if (rPayEmplStandardDeductionTable.BankTransAccountId && rHRMPersonBankAccount)
                {
                    args.record(rHRMPersonBankAccount);
                }
                else
                {
                    args.record(rPayEmplStandardDeductionTable);
                }

                args.openMode(OpenMode::View);

                FormRun formRun = new MenuFunction(menuitemDisplayStr(RHRMPersonBankAccounts), MenuItemType::Display).create(args);
                formRun.run();
                formRun.wait();
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (rPayEmplStandardDeductionTable.RecipientType == RPayStandardDeductionRecipientType::Vend)
            {
                VendBankAccount::lookupBankAccount(this,
                                                    rPayEmplStandardDeductionTable.Recipient,
                                                    CompanyInfo::findRecId(CompanyInfo::current()).DataArea,
                                                    DateTimeUtil::newDateTime(RPayEmplStandardDeductionTable.StartDate, 0, DateTimeUtil::getCompanyTimeZone()));
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>List</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>beginDrag</Name>
						<Source><![CDATA[
        public int beginDrag(int _x, int _y)
        {
            int ret;

            dragIdx = -1;
            // beginDrag is obsolete and super() always returns 0
            ret = 0;
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>drop</Name>
						<Source><![CDATA[
        public void drop(FormControl _dragSource, FormDrag _dragMode, int _x, int _y)
        {
            int idx;

            if (_dragSource.equal(this))
            {
                idx = -1;
                if (_dragMode == FormDrag::Move)
                {
                    this.moveItem(dragIdx,idx);
                }
            }

            super(_dragSource, _dragMode, _x, _y);
        }

]]></Source>
					</Method>
					<Method>
						<Name>itemMoved</Name>
						<Source><![CDATA[
        public void itemMoved(int _idx, int _newIdx)
        {
            RPayEmplStandardDeductionTable  payEmplStandardDeductionTable;
            FormListItem                    listItem;
            int                             tmpIdx = 0;
            ;

            if (this.getCount() == 1)
                return;

            ttsbegin;
            while (tmpIdx >= 0)
            {
                listItem = this.getItem(tmpIdx,1);

                select firstonly forupdate payEmplStandardDeductionTable
                    where payEmplStandardDeductionTable.RecId == listItem.data();

                payEmplStandardDeductionTable.DeductionOrder = tmpIdx + 1;
                payEmplStandardDeductionTable.update();

                tmpIdx   = this.getNextItem(FormListNext::Below, tmpIdx);
            }
            ttscommit;

            rPayEmplStandardDeductionTable_DS.research();
            super(_idx, _newIdx);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SegmentedEntry</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(RPayEmplStandardDeductionTable.AccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RPayEmplStandardDeductionTable</Name>
			<Table>RPayEmplStandardDeductionTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlimonyPaymentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlimonyPostSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BorrowingPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ByWorkerCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductionOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeductPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmplId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MustBeProfitCalculated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MustBeSumControlled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaySequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodFrequency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodSum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Recipient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecipientType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseBorrowingGain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP925</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<TitleDataSource xmlns="">RPayEmplStandardDeductionTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoLeft</LeftMode>
						<Top>0</Top>
						<TopMode>BottomEdge</TopMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ButtonCalc</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS7895</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PayString</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayStandardDeductionSumModule_OneType</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PaymentHistory</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
								<MenuItemName>RPayStandardDeductionSumModule</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PayRecalcStandardDeduction</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayRecalcStandardDeduction</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuPrint</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PostalTransferList</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>RPayPostalTransferList</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AlimonySheetReport</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>RPayAlimonySheetReport</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>RpayStandardDeductionBankPayment</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>RpayStandardDeductionBankPayment</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RUP246</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayReverse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048188</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
								<MenuItemName>RPayReverse</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane_ButtonGroup1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup1</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>MoveUp</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RUP243</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>MoveDown</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS2047</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOverview</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridOverview</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RPayEmplStandardDeductionTable_DeductionCode</Name>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductionCode</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RPayEmplStandardDeductionTable_EmplId</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmplId</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RPayEmplStandardDeductionTable_DocumentNum</Name>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RPayEmplStandardDeductionTable_DocumentDate</Name>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RPayEmplStandardDeductionTable_StartDate</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RPayEmplStandardDeductionTable_EndDate</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RPayEmplStandardDeductionTable_TotalSum</Name>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalSum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RPayEmplStandardDeductionTable_PeriodSum</Name>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodSum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RPayEmplStandardDeductionTable_DeductPercentage</Name>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductPercentage</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
						</Controls>
						<RightMargin>2</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabGeneral</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_DeductionCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductionCode</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_EmplId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmplId</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_DocumentNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Identification_DocumentDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeductionPeriod</Name>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DeductionPeriod_StartDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DeductionPeriod_EndDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndDate</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>DeductionPeriod</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ShipTo</Name>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ShipTo_RecipientType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RecipientType</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ShipTo_Recipient</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Recipient</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ShipTo_BankTransAccountId</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransAccountId</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ShipTo</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeductionAmounts</Name>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DeductionAmounts_TotalSum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalSum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DeductionAmounts_PeriodSum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodSum</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DeductionAmounts_DeductPercentage</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductPercentage</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>DeductionAmounts</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AlimonyPayment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AlimonyPayment_AlimonyPaymentType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AlimonyPaymentType</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>AlimonyPayment_AlimonyPostSequence</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AlimonyPostSequence</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>AlimonyPayment</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LucreCalculation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>BorrowingPercentage</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BorrowingPercentage</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MustBeProfitCalculated</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MustBeProfitCalculated</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LucreCalculation_ReverseBorrowingGain</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseBorrowingGain</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>LucreCalculation</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CalculationOrder</Name>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>CalculationOrder_DeductionOrder</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeductionOrder</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>CalculationOrder_PaySequence</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaySequence</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CalculationOrder_PeriodFrequency</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodFrequency</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CalculationOrder_MustBeSumControlled</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MustBeSumControlled</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CalculationOrder_ByWorkerCalculation</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ByWorkerCalculation</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CalculationOrder</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Note</Name>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Note_Notes</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Note</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Reverse_Group</Name>
								<ElementPosition>1952257860</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Reverse_CorrectedPeriod</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedPeriod</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Reverse</DataGroup>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOrder</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ListView</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>List</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<DragDrop>Manual</DragDrop>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<RowSelect>Yes</RowSelect>
										<SingleSelection>No</SingleSelection>
										<ViewType>Report</ViewType>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>@RUP933</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPosting</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountNumber</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AccountNumber_AccountType</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>SegmentedEntry</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RPayEmplStandardDeductionTable</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormContainerControl">
										<Name>DimensionEntryControl</Name>
										<Type>Container</Type>
										<FormControlExtension>
											<Name>DimensionEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>ClassName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmControlLabelText</Name>
													<Type>String</Type>
													<Value>@SYS138487</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmEnumerationName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataSourceName</Name>
													<Type>String</Type>
													<Value>RPayEmplStandardDeductionTable</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValueSetReferenceField</Name>
													<Type>String</Type>
													<Value>DefaultDimension</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmEnumValueSetReferenceField</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<Controls />
									</AxFormControl>
								</Controls>
								<DataSource>RPayEmplStandardDeductionTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS5943</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<TabAutoChange>No</TabAutoChange>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>