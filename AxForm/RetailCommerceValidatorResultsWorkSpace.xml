<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCommerceValidatorResultsWorkSpace</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailCommerceValidatorResultsWorkSpace extends FormRun
{
    private RetailCommerceValidator commerceValidator;
    private RetailCommerceValidatorTestStage preselectedEntityType = RetailCommerceValidatorTestStage::Products;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form
    /// </summary>
    public void init()
    {
        commerceValidator = element.args().record();
        commerceValidator.reread();

        super();

        // For validators that are triggered automatically (by merchandising Copilot feature),
        // we allow user to view the partial results while validator is still running.
        // But to keep backward compatibility, we are not allowing for manual run.
        if (!commerceValidator.IsAutomatedRun
            && commerceValidator.ValidationExecutionPhase != RetailCommerceValidatorExecutionPhase::Completed)
        {
            throw Info("@Retail:RetailCommerceValidationIsNotCompleted");
        }

        // Set the preselected entity type.
        // One of the usage is for merchandising copilot configuration risks fasttab in "channel categories and product attributes" form.
        // This fasttab displays summaries for product, category and catalog configuration risks in separate columns, customer could click each column to review the full list of risks,
        // which brings user to RetailCommerceValidatorResultsWorkSpace.
        // If user selected review all in "category" column, RetailCommerceValidatorResultsWorkSpace should preselect "category" entity instead of showing "product" entity.
        if (element.args().callerName() == formStr(RetailInternalOrganization) &&
            element.args().parmEnumType() == enumNum(RetailCommerceValidatorTestStage))
        {
            this.parmPreselectedEntityType(element.args().parmEnum());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreselectedEntityType</Name>
				<Source><![CDATA[
    internal RetailCommerceValidatorTestStage parmPreselectedEntityType(RetailCommerceValidatorTestStage _preselectedEntityType = preselectedEntityType)
    {
        preselectedEntityType = _preselectedEntityType;

        return preselectedEntityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeResultsByRulesFormDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the RetailCommerceValidatorRules data source with the given result status filter
    /// </summary>
    /// <param name = "_resultStatusFilter">The RetailCommerceValidatorResultStatusFilter value.</param>
    private void executeResultsByRulesFormDataSource(RetailCommerceValidatorResultStatusFilter _resultStatusFilter)
    {
        FormRun rulesFormPartRun = ResultsByRulesList.getPartFormRun();
        FormDataSource validatorRules;
        Object objRulesForm = rulesFormPartRun;

        // Filter the Results by Rules page with result status = _resultStatusFilter.
        if (formHasMethod(rulesFormPartRun, 'setResultStatusFilter'))
        {
            objRulesForm.setResultStatusFilter(_resultStatusFilter);
        }

        for (int i = 0; i <= rulesFormPartRun.dataSourceCount(); i++)
        {
            // First data source is RetailCommerceValidator
            validatorRules = rulesFormPartRun.dataSource(i);

            if (validatorRules && (validatorRules.table() == tableNum(RetailCommerceValidatorRules)))
            {
                validatorRules.executeQuery();
                break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailCommerceValidator</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the datasource.
        /// </summary>
        public void init()
        {
            super();

            Query query = this.query();

            QueryBuildDataSource qbdsValidator = query.dataSourceTable(tableNum(RetailCommerceValidator));

            qbdsValidator.addRange(fieldNum(RetailCommerceValidator,ValidationId)).value(SysQuery::value(commerceValidator.ValidationId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ExecuteValidation</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Resets and executes validation.
        /// </summary>
        public void clicked()
        {
            DialogButton dialogInput = Box::YesNo("@Retail:RetailCommerceValidatorResetWorkDialog",DialogButton::No);

            if (dialogInput == DialogButton::Yes)
            {
                RetailCommerceValidator::execute(commerceValidator.ValidationId, RetailCommerceValidatorExecutionMode::ExecuteAll);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExecuteFailed</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes failed validation.
        /// </summary>
        public void clicked()
        {
            RetailCommerceValidator::execute(commerceValidator.ValidationId, RetailCommerceValidatorExecutionMode::ExecuteFailed);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TotalRules</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>getData</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the loaded rules data.
        /// </summary>
        /// <returns>An instance for <c> TileButtonControlData </c> class with data</returns>
        public TileButtonControlData getData()
        {
            TileButtonControlData ret = super();

            if (commerceValidator.IsAutomatedRun)
            {
                // For automated run, not all the validator rules are executed, especially the ones that require heavy database resources,
                // this is to avoid performance impact.
                // As a result, we cannot load the number of rules from RetailCommerceValidatorCounters since it only records the total number of rules.
                // In this case, we should retrive number of rules that are really being executed from RetailCommerceValidatorTests.
                RetailCommerceValidatorTests validatorTests;

                select count(RecId) from validatorTests
                    where validatorTests.ValidationId == commerceValidator.ValidationId;

                ret.strTileData(int642Str(validatorTests.RecId));
            }
            else
            {
                RetailCommerceValidatorCounters counters;

                // Total number of loaded rules.
                select firstonly counters
                    where counters.MetricId == "@Retail:RetailCommerceValidatorNumberOfLoadedRulesMetricId";

                ret.strTileData(int2Str(counters.TotalCount));
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes click event.
        /// </summary>
        public void clicked()
        {
            // Not providing click event
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TotalErrors</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>getData</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the data.
        /// </summary>
        /// <returns>An instance for <c> TileButtonControlData </c> class with data</returns>
        public TileButtonControlData getData()
        {
            TileButtonControlData ret = super();

            RetailCommerceValidatorCounters counters;

            // Total number of Erros per validation.
            select sum (ErrorCount) from counters
                where counters.ValidationId == commerceValidator.ValidationId
                    && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                    && counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationMetricId";

            ret.strTileData(int2Str(counters.ErrorCount));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes click event.
        /// </summary>
        public void clicked()
        {
            // Activate results by rules page.
            ResultsByRulesTabPage.activatePage();

            element.executeResultsByRulesFormDataSource(RetailCommerceValidatorResultStatusFilter::Error);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TotalWarnings</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>getData</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the data.
        /// </summary>
        /// <returns>An instance for <c> TileButtonControlData </c> class with data</returns>
        public TileButtonControlData getData()
        {
            TileButtonControlData ret = super();

            RetailCommerceValidatorCounters counters;

            // Total number of warnings per validation.
            select sum (WarningCount) from counters
                where counters.ValidationId == commerceValidator.ValidationId
                    && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                    && counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationMetricId";

            ret.strTileData(int2Str(counters.WarningCount));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes click event.
        /// </summary>
        public void clicked()
        {
            // Activate results by rules page.
            ResultsByRulesTabPage.activatePage();

            element.executeResultsByRulesFormDataSource(RetailCommerceValidatorResultStatusFilter::Warning);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TotalMessages</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>getData</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the data.
        /// </summary>
        /// <returns>An instance for <c> TileButtonControlData </c> class with data</returns>
        public TileButtonControlData getData()
        {
            TileButtonControlData ret = super();

            RetailCommerceValidatorCounters counters;

            // Total number of warnings per validation.
            select sum (MessageCount) from counters
                where counters.ValidationId == commerceValidator.ValidationId
                    && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                    && counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationMetricId";

            ret.strTileData(int2Str(counters.MessageCount));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes click event.
        /// </summary>
        public void clicked()
        {
            // Activate results by rules page.
            ResultsByRulesTabPage.activatePage();

            element.executeResultsByRulesFormDataSource(RetailCommerceValidatorResultStatusFilter::Message);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailCommerceValidator</Name>
			<Table>RetailCommerceValidator</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ChannelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CounterRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentBatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MetricId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationExecutedTest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationExecutionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationProgressPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationResultStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationTotalTest</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Retail:RetailCommerceValidationResults</Caption>
		<DataSource xmlns="">RetailCommerceValidator</DataSource>
		<Pattern xmlns="">WorkspaceOperational</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Workspace</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionHeader</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ValidationbuttonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ExecuteValidation</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<AutoRefreshData>Yes</AutoRefreshData>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Play</NormalImage>
								<Text>@SYS2076</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ExecuteFailed</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<AutoRefreshData>Yes</AutoRefreshData>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Play</NormalImage>
								<Text>@Retail:RetailCommerceValidatorExecuteFailedLabel</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<DataSource>RetailCommerceValidator</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>PanaromaTab</Name>
				<ExtendedStyle>tab_simpleFastTab</ExtendedStyle>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SummaryTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>workspace_tileLayout</ExtendedStyle>
						<Pattern>SectionTiles</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TotalRules</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension>
									<Name>TileButtonControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>tile</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidationTotalsTile</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>tileDisplay</Name>
											<Type>Enum</Type>
											<TypeName>TileDisplay</TypeName>
											<Value>TextOnly</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<CopyCallerQuery>No</CopyCallerQuery>
								<Text>@Retail:RetailCommerceValidatorTotalRulesTilesText</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TotalErrors</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension>
									<Name>TileButtonControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>tile</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidationTotalsTile</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>tileDisplay</Name>
											<Type>Enum</Type>
											<TypeName>TileDisplay</TypeName>
											<Value>TextOnly</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<CopyCallerQuery>No</CopyCallerQuery>
								<Text>@Retail:RetailCommerceValidatorRuleTotalError</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TotalWarnings</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension>
									<Name>TileButtonControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>tile</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidationTotalsTile</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>tileDisplay</Name>
											<Type>Enum</Type>
											<TypeName>TileDisplay</TypeName>
											<Value>TextOnly</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<CopyCallerQuery>No</CopyCallerQuery>
								<Text>@Retail:RetailCommerceValidatorRuleTotalWarning</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TotalMessages</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension>
									<Name>TileButtonControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>tile</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidationTotalsTile</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>tileDisplay</Name>
											<Type>Enum</Type>
											<TypeName>TileDisplay</TypeName>
											<Value>TextOnly</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<CopyCallerQuery>No</CopyCallerQuery>
								<Text>@Retail:RetailCommercevalidatorTotalMessages</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>ResultCharts</Name>
								<Type>Container</Type>
								<FormControlExtension>
									<Name>FormPartControl</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>dataLinks</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetName</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidatorTotalResultChartResult</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>autoRefreshInterval</Name>
											<Type>Int32</Type>
											<Value>60</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmRunMode</Name>
											<Type>Enum</Type>
											<TypeName>FormPartControlRunMode</TypeName>
											<Value>Local</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<Caption>@SYS80378</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabbedSectionList</Name>
						<Pattern>SectionTabbedList</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>ResultsTabbedListTab</Name>
								<Height>500</Height>
								<HeightMode>Manual</HeightMode>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ResultsByEntityTabPage</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>ResultsByEntityList</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Container</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension>
													<Name>FormPartControl</Name>
													<ExtensionComponents>
														<AxFormControlExtensionComponent xmlns=""
															i:type="AxFormControlExtensionComponentComposite">
															<Name>dataLinks</Name>
															<ExtensionComponents />
														</AxFormControlExtensionComponent>
													</ExtensionComponents>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>targetName</Name>
															<Type>String</Type>
															<Value>RetailCommerceValidatorResultsByEntity</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>autoRefreshInterval</Name>
															<Type>Int32</Type>
															<Value>0</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmRunMode</Name>
															<Type>Enum</Type>
															<TypeName>FormPartControlRunMode</TypeName>
															<Value>Local</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
												<NeededAccessLevel>Delete</NeededAccessLevel>
											</AxFormControl>
										</Controls>
										<Caption>@Retail:RetailCommerceValidatorByEntity</Caption>
										<DataSource>RetailCommerceValidator</DataSource>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ResultsByRulesTabPage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>ResultsByRulesList</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Container</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension>
													<Name>FormPartControl</Name>
													<ExtensionComponents>
														<AxFormControlExtensionComponent xmlns=""
															i:type="AxFormControlExtensionComponentComposite">
															<Name>dataLinks</Name>
															<ExtensionComponents />
														</AxFormControlExtensionComponent>
													</ExtensionComponents>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>targetName</Name>
															<Type>String</Type>
															<Value>RetailCommerceValidatorResultsByRules</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>autoRefreshInterval</Name>
															<Type>Int32</Type>
															<Value>0</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmRunMode</Name>
															<Type>Enum</Type>
															<TypeName>FormPartControlRunMode</TypeName>
															<Value>Local</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<Caption>@Retail:RetailCommerceValidatorByRules</Caption>
										<DataSource>RetailCommerceValidator</DataSource>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<NeededAccessLevel>Correction</NeededAccessLevel>
								<DataSource>RetailCommerceValidator</DataSource>
								<Style>VerticalTabs</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS33918</Caption>
						<DataSource>RetailCommerceValidator</DataSource>
						<FastTabExpanded>Yes</FastTabExpanded>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RelatedLinksTabPage</Name>
						<Pattern>SectionRelatedLinks</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS72248</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>