<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjBudgetImport</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class ProjBudgetImport extends FormRun
    {
        ProjTable           projTable;
        ProjBudget          projBudget;
        ProjId              projectId;
        ProjBudgetRevision  projBudgetRevision;
        ForecastModelId     defaultModelIdForForecastImport;
        ForecastModelId     defaultModelIdForEstimatesImport;

        #define.emptyString('')
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ProjParameters      projParameters = ProjParameters::find();
        ForecastModel       forecastModel;
        FormRun             formRun = element.args().caller();
        IProjIdSelectable   projIdSelectable = formRun as IProjIdSelectable;

        super();

        if (formRun.name() == formStr(ProjBudget))
        {
            projBudget      = element.args().record();
            projectId       = projBudget.RootProjId;
        }
        else if (formRun.name() == formStr(ProjBudgetRevision))
        {
            projBudgetRevision  = element.args().record();
            projectId           = ProjBudget::find(projBudgetRevision.ProjBudget).RootProjId;
            projBudget.RecId    = projBudgetRevision.ProjBudget;
            this.design().caption("@SYS4006000");
        }

        if (projIdSelectable)
        {
            projectId = projIdSelectable.projectId();
        }

        projTable = ProjTable::find(projectId);
        importBudgetForProject.text(projectId);
        defaultModelIdForForecastImport = ProjBudgetManager::getDefaultModelForProject(projectId);

        select firstonly ModelId from forecastModel
            where forecastModel.Blocked == NoYes::No
            && forecastModel.ModelId == projParameters.ModelId;

        defaultModelIdForEstimatesImport = forecastModel.ModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        sourceType.modified();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SourceType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                sourceValue.visible(true);
                summarizeByCategory.value(true);
                sourceValue.text('');
                if (sourceType.selection() == ProjBaseBudgetOn::ProjectTransactions)
                {
                    summarizeByCategory.allowEdit(false);
                    sourceValue.label("@SYS4005257");
                    sourceValue.helpText("@SYS4005255");
                }
                else
                {
                    summarizeByCategory.allowEdit(true);
                    sourceValue.label("@SYS82923");
                    sourceValue.helpText("@SYS4009506");
                    if (sourceType.selection() == ProjBaseBudgetOn::Forecast)
                    {
                        sourceValue.text(defaultModelIdForForecastImport);
                    }
                    else if (SourceType.selection() == ProjBaseBudgetOn::Estimates)
                    {
                        sourceValue.text(defaultModelIdForEstimatesImport);
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SourceValue</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysProjBudgetSourceLookup;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildDataSource    queryBuildDataSourceJoin;

            switch (sourceType.selection())
            {
                case ProjBaseBudgetOn::Forecast :
                    sysProjBudgetSourceLookup = SysTableLookup::newParameters(tableNum(ForecastModel), this, true);
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ForecastModel, ModelId));
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ForecastModel, Txt));

                    // creating query
                    queryBuildDataSource = query.addDataSource(tableNum(ForecastModel));

                    queryBuildDataSource.addRange(fieldNum(ForecastModel, ProjBudgetType)).value(queryValue(ProjBudgetType::None));
                    //Check to see if a forecast exists for this project id
                    queryBuildDataSourceJoin = queryBuildDataSource.addDataSource(tableNum(ProjForecastUnion));
                    queryBuildDataSourceJoin.relations(false);
                    queryBuildDataSourceJoin.joinMode(JoinMode::ExistsJoin);
                    queryBuildDataSourceJoin.addLink(fieldNum(ForecastModel, ModelId), fieldNum(ProjForecastUnion, ModelId));
                    queryBuildDataSourceJoin.addRange(fieldNum(ProjForecastUnion, ProjId)).value(projectId + '*');

                    sysProjBudgetSourceLookup.parmQuery(query);

                    sysProjBudgetSourceLookup.performFormLookup();
                    break;

                case ProjBaseBudgetOn::Estimates :
                    sysProjBudgetSourceLookup = SysTableLookup::newParameters(tableNum(ForecastModel), this, true);
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ForecastModel, ModelId));
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ForecastModel, Txt));

                    // creating query
                    queryBuildDataSource = query.addDataSource(tableNum(ForecastModel));
                    queryBuildDataSource.addRange(fieldNum(ForecastModel, Blocked)).value(queryValue(NoYes::No));

                    sysProjBudgetSourceLookup.parmQuery(query);

                    sysProjBudgetSourceLookup.performFormLookup();
                    break;

                case ProjBaseBudgetOn::ProjectTransactions :
                    sysProjBudgetSourceLookup = SysTableLookup::newParameters(tableNum(ProjTable), this, true);
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ProjTable, ProjId));
                    sysProjBudgetSourceLookup.addLookupfield(fieldNum(ProjTable, Name));

                    if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled())
                    {
                        sysProjBudgetSourceLookup.addLookupfield(fieldNum(ProjTable, Type));
                    }

                    // creating query
                    queryBuildDataSource = query.addDataSource(tableNum(ProjTable));

                    sysProjBudgetSourceLookup.parmQuery(query);

                    sysProjBudgetSourceLookup.performFormLookup();
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            MenuItemName                actionName;
            MenuFunction                menuFunction;
            Args                        args;
            IProjBudgetGridUpdatable    projBudgetGridUpdatable;
            ProjBudgetImportBatch projBudgetImportBatch = new ProjBudgetImportBatch();

            args = new Args();
            actionName = menuitemActionStr(projBudgetImportBatch);

            projBudgetImportBatch.parmProjId(projTable.ProjId);
            projBudgetImportBatch.parmProjBudgetRecId(projBudget.RecId);
            projBudgetImportBatch.parmProjBudgetRevisionRecId(projBudgetRevision.RecId);
            projBudgetImportBatch.parmSource(sourceValue.text());
            projBudgetImportBatch.parmMarkValue(markUpValue.realValue());
            projBudgetImportBatch.parmProjBudgetImportOptions(markUpDown.selection());
            projBudgetImportBatch.parmProjBaseBudgetOn(sourceType.selection());
            projBudgetImportBatch.parmSummarizeByCategory(summarizeByCategory.checked());
            projBudgetImportBatch.parmInBatch(runAsBatch.checked());
            args.parmObject(projBudgetImportBatch);
            menuFunction = new MenuFunction(actionName, MenuItemType::Action);
            menuFunction.run(args);

            projBudgetGridUpdatable = element.args().caller();
            if (projBudgetGridUpdatable)
            {
                projBudgetGridUpdatable.updateGrids();
            }

            super();
            this.formRun().close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS4005266</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SaveSize xmlns="">No</SaveSize>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopGroup</Name>
				<ElementPosition>477218588</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TitleGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ImportBudgetForProject</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ProjId</ExtendedDataType>
								<Label>@SYS4005265</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SourceType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>ProjBaseBudgetOn</EnumType>
								<Label>@SYS4005256</Label>
								<Selection>1</Selection>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SourceValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS4005257</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SummarizeByCategory</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS4005259</Label>
								<Value>1</Value>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>RunAsBatch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1994091957</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS2312</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>MarkUpGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>MarkUpDown</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>DynBackgroundWhite</BackgroundColor>
								<Columns>2</Columns>
								<EnumType>ProjBudgetImportOptions</EnumType>
								<ForegroundColor>ButtonText</ForegroundColor>
								<FrameType>None</FrameType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>MarkUpValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>MarkupValue</ExtendedDataType>
								<Label>@SYS4005251</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Bold>Light</Bold>
						<Caption>@SYS4005250</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AlignControl>Yes</AlignControl>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>