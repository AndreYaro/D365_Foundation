<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TMSLoadBuildWorkbench</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TMSLoadBuildWorkbench extends FormRun implements TMSILoadBuildWorkbench
{
    SysQueryRun                 criteriaQueryRun;
    TMSLoadBuildWorkbenchForm   tmsLoadBuildWorkbenchForm;
    container                   deliveryZipCodes;
    protected SysFormEnumComboBox supplyDemandTypeComboBox;
    protected boolean isSysFormEnumComboBoxFlightEnabled = WHSLoadBuildWorkbenchSupplyDemandTypeFlight::instance().isEnabled();

}
]]></Source>
			</Method>
			<Method>
				<Name>clearForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes all the values entered into the form.
    /// </summary>
    public void clearForm()
    {
        TMSSupplyDemandType.selection(0);
        Strategy.value(0);
        CustomerAccount.text('');
        VendorAccount.text('');
        shippingDateFrom.dateValue(dateNull());
        shippingDateTo.dateValue(dateNull());
        originSiteId.text('');
        originLocationId.text('');
        originFromPostalCode.text('');
        originToPostalCode.text('');
        originCountry.text('');
        deliveryDateFrom.dateValue(dateNull());
        deliveryDateTo.dateValue(dateNull());
        destinationSiteId.text('');
        destinationLocationId.text('');
        destinationFromPostalCode.text('');
        destinationToPostalCode.text('');
        destinationCountry.text('');
        filterCode1.text('');
        filterCode2.text('');
        filterCode3.text('');
        filterCode4.text('');
        this.setCriteriaQueryRun();

        deliveryZipCodes = conNull();
        // Clear scheduledRoute route parameter
        tmsLoadBuildWorkbenchForm.parmScheduledRoute(null);

        this.setupForm();

        //clean up tmp template records
        TMSTmpLoadTemplateFormHelper::deleteTmpLoadTemplateFromForm(TMSTmpLoadTemplate);

        TMSTmpLoadTemplate_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDestinationAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables the destination address fields.
    /// </summary>
    /// <param name="_enabled">
    /// If true, enable the fields, disable otherwise.
    /// </param>
    public void enableDestinationAddress(boolean _enabled)
    {
        DestinationFromPostalCode.enabled(_enabled);
        DestinationToPostalCode.enabled(_enabled);
        DestinationCountry.enabled(_enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDestinationWarehouseAndSite</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void enableDestinationWarehouseAndSite(boolean _enabled)
    {
        DestinationLocationId.enabled(_enabled);
        DestinationSiteId.enabled(_enabled);

        if (_enabled)
        {
            if (DestinationLocationId.valueStr())
            {
                this.enableDestinationAddress(false);
            }
            else
            {
                this.enableDestinationAddress(true);
            }
        }
        else
        {
            DestinationLocationId.text('');
            DestinationSiteId.text('');
            this.enableDestinationAddress(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFilterCodes</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void enableFilterCodes(boolean _enable)
    {
        FilterCode1.enabled(_enable);
        FilterCode2.enabled(_enable);
        FilterCode3.enabled(_enable);
        FilterCode4.enabled(_enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableOriginAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables the origin address fields.
    /// </summary>
    /// <param name="_enabled">
    /// If true, enable the fields, disable otherwise.
    /// </param>
    public void enableOriginAddress(boolean _enabled)
    {
        OriginFromPostalCode.enabled(_enabled);
        OriginToPostalCode.enabled(_enabled);
        OriginCountry.enabled(_enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableOriginWarehouseAndSite</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void enableOriginWarehouseAndSite(boolean _enabled)
    {
        OriginLocationId.enabled(_enabled);
        OriginSiteId.enabled(_enabled);

        if (_enabled)
        {
            if (OriginLocationId.valueStr())
            {
                this.enableOriginAddress(false);
            }
            else
            {
                this.enableOriginAddress(true);
            }
        }
        else
        {
            OriginLocationId.text('');
            OriginSiteId.text('');
            this.enableOriginAddress(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillTmpLoadTemplate</Name>
				<Source><![CDATA[
    public void fillTmpLoadTemplate(TMSLoadBuildTemplateId  _tmsLoadBuildTemplateId)
    {
        TMSTmpLoadTemplateFormHelper::generateTmpLoadTemplateFromForm(TMSTmpLoadTemplate, _tmsLoadBuildTemplateId);

        TMSTmpLoadTemplate_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateDeliveryZipCodeContainer</Name>
				<Source><![CDATA[
    /// <summary>
    ///  A container with all destination zip codes is created by looping over a routes segments.
    /// </summary>
    /// <param name="_routeCode">
    ///  Route code used to get route segments.
    /// </param>
    private void generateDeliveryZipCodeContainer(TMSRouteCode  _routeCode)
    {
        TMSRouteSegment         routeSegment;
        LogisticsPostalAddress  postalAddress;
        boolean                 firstRecord = true;

        while select DestinationLocation, RecId from routeSegment
            order by Sequence asc
                where routeSegment.RouteCode == _routeCode
                join ZipCode from postalAddress
                    where postalAddress.Location == routeSegment.DestinationLocation
        {
            // Include origin postal code if a site and warehouse are not specified
            if (firstRecord
            &&  originSiteId.text() == ''
            &&  originLocationId.text() == '')
            {
                // Use the query value since these zip codes will eventually be added to the query for building load lines.
                deliveryZipCodes += queryValue(OriginFromPostalCode.valueStr());
                firstRecord = false;
            }

            deliveryZipCodes += queryValue(postalAddress.ZipCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLoadBuildSupplyDemandType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public TMSLoadBuildSupplyDemandType getLoadBuildSupplyDemandType()
    {
        if (isSysFormEnumComboBoxFlightEnabled)
        {
            return supplyDemandTypeComboBox.selection();
        }
        return TMSSupplyDemandType.selection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLoadBuildSupplyDemandType</Name>
				<Source><![CDATA[
    internal void setLoadBuildSupplyDemandType(TMSLoadBuildSupplyDemandType _loadBuildSupplyDemandType)
    {
        if (isSysFormEnumComboBoxFlightEnabled)
        {
            supplyDemandTypeComboBox.select(_loadBuildSupplyDemandType);
        }
        else
        {
            TMSSupplyDemandType.selection(_loadBuildSupplyDemandType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (isSysFormEnumComboBoxFlightEnabled)
        {
            // supplyDemandTypeComboBox is only retrieving the selected value after form run()
            this.setCriteriaQueryRun();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (isSysFormEnumComboBoxFlightEnabled)
        {
            this.initSupplyDemandTypeComboBox();
        }
        super();
        
        if (!isSysFormEnumComboBoxFlightEnabled)
        {
            this.setCriteriaQueryRun();
        }

        tmsLoadBuildWorkbenchForm = TMSLoadBuildWorkbenchForm::newParameters(this);

        ProposeLoads.visible(tmsLoadBuildWorkbenchForm.userHasProposeServiceAccessRights());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSupplyDemandTypeComboBox</Name>
				<Source><![CDATA[
    private void initSupplyDemandTypeComboBox()
    {
        supplyDemandTypeComboBox = SysFormEnumComboBox::newParameters(
            element,
            element.controlId(formControlStr(TMSLoadBuildWorkbench, TMSSupplyDemandType)),
            enumNum(TMSLoadBuildSupplyDemandType),
            this.supportedSupplyDemandTypTypes());
    }

]]></Source>
			</Method>
			<Method>
				<Name>supportedSupplyDemandTypTypes</Name>
				<Source><![CDATA[
    [Hookable(true)]
    protected Set supportedSupplyDemandTypTypes()
    {
        Set supportedSupplyDemandTypTypes = new Set(Types::Enum);
        supportedSupplyDemandTypTypes.add(TMSLoadBuildSupplyDemandType::Sales);
        return supportedSupplyDemandTypTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBaseQueryData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the criteria common to all queries.
    /// </summary>
    /// <param name="_queryData">
    /// The <c>TMSLoadBuildQueryCriteria</c> instance to populate.
    /// </param>
    [Hookable(false)]
    protected void populateBaseQueryData(TMSLoadBuildQueryCriteria _queryData)
    {
        _queryData.parmBaseQuery(criteriaQueryRun.query());
        _queryData.parmShippingDateFrom(ShippingDateFrom.dateValue());
        _queryData.parmShippingDateTo(ShippingDateTo.dateValue());
        _queryData.parmOriginPostalCodeFrom(OriginFromPostalCode.valueStr());
        _queryData.parmOriginPostalCodeTo(OriginToPostalCode.valueStr());
        _queryData.parmOriginCountry(OriginCountry.valueStr());
        _queryData.parmDeliveryDateFrom(DeliveryDateFrom.dateValue());
        _queryData.parmDeliveryDateTo(DeliveryDateTo.dateValue());
        _queryData.parmDestinationPostalCodeFrom(DestinationFromPostalCode.valueStr());
        _queryData.parmDestinationPostalCodeTo(DestinationToPostalCode.valueStr());
        _queryData.parmDestinationCountry(DestinationCountry.valueStr());
        _queryData.parmScheduledRoute(ScheduledRoute.valueStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFilterCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the filter code data to the criteria for creating a query.
    /// </summary>
    /// <param name="_queryData">
    /// The <c>TMSLoadBuildSrcLineQueryCriteria</c> instance to populate.
    /// </param>
    [Hookable(false)]
    protected void populateFilterCodes(TMSLoadBuildSrcLineQueryCriteria _queryData)
    {
        _queryData.parmFilterCode1(FilterCode1.valueStr());
        _queryData.parmFilterCode2(FilterCode2.valueStr());
        _queryData.parmFilterCode3(FilterCode3.valueStr());
        _queryData.parmFilterCode4(FilterCode4.valueStr());
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the template details into the form.
    /// </summary>
    /// <param name="_template">
    /// The template to use as a source to populate the form.
    /// </param>
    public void populateForm(TMSLoadBuildTemplate _template)
    {
        if (_template)
        {
            this.setLoadBuildSupplyDemandType(_template.SupplyDemandType);
            Strategy.value(_template.LoadBuildStrategy);
            OriginSiteId.text(_template.OriginSiteId);
            OriginLocationId.text(_template.OriginLocationId);
            OriginFromPostalCode.text(_template.OriginFromPostalCode);
            OriginToPostalCode.text(_template.OriginToPostalCode);
            OriginCountry.text(_template.OriginCountryId);
            DestinationSiteId.text(_template.DestinationSiteId);
            DestinationLocationId.text(_template.DestinationLocationId);
            DestinationFromPostalCode.text(_template.DestinationFromPostalCode);
            DestinationToPostalCode.text(_template.DestinationToPostalCode);
            DestinationCountry.text(_template.DestinationCountryId);
            FilterCode1.text(_template.FilterCode1);
            FilterCode2.text(_template.FilterCode2);
            FilterCode3.text(_template.FilterCode3);
            FilterCode4.text(_template.FilterCode4);

            if (_template.SupplyDemandQueryRun)
            {
                this.setCriteriaQueryRun(new SysQueryRun(_template.SupplyDemandQueryRun));
            }
            else
            {
                this.setCriteriaQueryRun();
            }

            this.setAccountFromTemplate(_template);
            this.setupForm();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountFromTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the account details from the template
    /// </summary>
    /// <param name = "_template">
    /// The template to use as a source to populate the account.
    /// </param>
    [Hookable(true)]
    protected void setAccountFromTemplate(TMSLoadBuildTemplate _template)
    {
        switch (_template.SupplyDemandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales,
                TMSLoadBuildSupplyDemandType::TransferIssue,
                TMSLoadBuildSupplyDemandType::Shipment:
                CustomerAccount.text(_template.Account);
                break;
            case TMSLoadBuildSupplyDemandType::Purchase:
                VendorAccount.text(_template.Account);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFormScheduledRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the template details into the form from scheduledRoute records.
    /// </summary>
    /// <param name="_route">
    /// The scheduledRoute route to use as a source to populate the form.
    /// </param>
    public void populateFormScheduledRoute(TMSRoute    _route)
    {
        TMSRouteSegment         routeSegment;
        LogisticsPostalAddress  postalAddress;

        select OriginLocation, RecId from routeSegment
            order by Sequence asc
                where routeSegment.RouteCode == _route.RouteCode
                join CountryRegionId,ZipCode from postalAddress
                    where postalAddress.Location == routeSegment.OriginLocation;

        if (routeSegment)
        {
            // Remove any existing zip codes
            deliveryZipCodes = conNull();

            // Assign selected scheduledRoute route parameter
            tmsLoadBuildWorkbenchForm.parmScheduledRoute(_route);

            // Auto-populate criteria data
            ShippingDateFrom.dateValue(DateTimeUtil::date(_route.ShipUTCDateTime));
            ShippingDateTo.dateValue(DateTimeUtil::date(_route.ShipUTCDateTime));
            OriginSiteId.text(_route.InventSiteId);
            OriginLocationId.text(_route.InventLocationId);
            OriginFromPostalCode.text(postalAddress.ZipCode);
            OriginToPostalCode.text(postalAddress.ZipCode);
            OriginCountry.text(postalAddress.CountryRegionId);

            // Automatically create a load template record if one exists for the route
            if (_route.RouteSchedule != 0)
            {
                TMSRouteSchedule routeSchedule = TMSRouteSchedule::find(_route.RouteSchedule);

                if (routeSchedule.LoadTemplateId)
                {
                    // Clear existing template records
                    delete_from TMSTmpLoadTemplate;

                    TMSTmpLoadTemplate.initValue();
                    TMSTmpLoadTemplate.Sequence     = 1;
                    TMSTmpLoadTemplate.LoadTemplate = routeSchedule.LoadTemplateId;

                    if (TMSTmpLoadTemplate.validateWrite())
                    {
                        TMSTmpLoadTemplate.insert();
                    }

                    TMSTmpLoadTemplate_DS.research();
                }
            }

            this.generateDeliveryZipCodeContainer(_route.RouteCode);

            this.setupForm();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateQueryData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the query criteria for creating a query.
    /// </summary>
    /// <returns>
    /// A populated instance of <c>TMSLoadBuildQueryCriteria</c>
    /// </returns>
    [Replaceable]
    public TMSLoadBuildQueryCriteria populateQueryData()
    {
        TMSLoadBuildQueryCriteria queryData;

        switch (this.getLoadBuildSupplyDemandType())
        {
            case TMSLoadBuildSupplyDemandType::Sales:
                queryData = this.populateSalesQueryData();
                break;
            default:
                throw error("@SYP4861102");
        }

        return queryData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateSalesQueryData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the query criteria for creating a sales query.
    /// </summary>
    /// <returns>
    /// A populated instance of <c>TMSLoadBuildSalesQueryCriteria</c>
    /// </returns>
    protected TMSLoadBuildSalesQueryCriteria populateSalesQueryData()
    {
        TMSLoadBuildSalesQueryCriteria queryData = TMSLoadBuildSalesQueryCriteria::construct();

        this.populateBaseQueryData(queryData);

        this.populateFilterCodes(queryData);

        queryData.parmCustomerAccount(CustomerAccount.valueStr());
        queryData.parmOriginLocationId(OriginLocationId.valueStr());
        queryData.parmOriginSiteId(OriginSiteId.valueStr());

        return queryData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the template based on the Form fields.
    /// </summary>
    /// <param name="_template">
    /// The template to populate.
    /// </param>
    public void populateTemplate(TMSLoadBuildTemplate _template)
    {
        _template.LoadBuildStrategy             = Strategy.value();
        _template.SupplyDemandType              = this.getLoadBuildSupplyDemandType();
        _template.OriginSiteId                  = OriginSiteId.valueStr();
        _template.OriginLocationId              = OriginLocationId.valueStr();
        _template.OriginFromPostalCode          = OriginFromPostalCode.valueStr();
        _template.OriginToPostalCode            = OriginToPostalCode.valueStr();
        _template.OriginCountryId               = OriginCountry.valueStr();
        _template.DestinationSiteId             = DestinationSiteId.valueStr();
        _template.DestinationLocationId         = DestinationLocationId.valueStr();
        _template.DestinationFromPostalCode     = DestinationFromPostalCode.valueStr();
        _template.DestinationToPostalCode       = DestinationToPostalCode.valueStr();
        _template.DestinationCountryId          = DestinationCountry.valueStr();
        _template.FilterCode1                   = FilterCode1.valueStr();
        _template.FilterCode2                   = FilterCode2.valueStr();
        _template.FilterCode3                   = FilterCode3.valueStr();
        _template.FilterCode4                   = FilterCode4.valueStr();
        _template.SupplyDemandQueryRun          = criteriaQueryRun.pack();

        switch (_template.SupplyDemandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales,
                TMSLoadBuildSupplyDemandType::Shipment:
                _template.Account = CustomerAccount.valueStr();
                break;
            case TMSLoadBuildSupplyDemandType::Purchase:
                _template.Account = VendorAccount.valueStr();
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLoadBuildTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create load building template from the fields on the form.
    /// </summary>
    /// <param name="_loadBuildTemplateName">
    /// Name for the load building template.
    /// </param>
    /// <param name="_loadBuildTemplateDescription">
    /// Description for the load building template.
    /// </param>
    public boolean createLoadBuildTemplate(TMSLoadBuildTemplateName _loadBuildTemplateName, TMSTemplateDescription _loadBuildTemplateDescription)
    {
        TMSLoadBuildTemplate template;
        boolean result = false;

        if (_loadBuildTemplateName)
        {
                template.LoadBuildTemplateName = _loadBuildTemplateName;
                template.Description = _loadBuildTemplateDescription;
                this.populateTemplate(template);

                if (!TMSLoadBuildTemplate::findByLoadBuildTemplateName(_loadBuildTemplateName) && template.validateWrite())
                {
                    ttsbegin;

                    template.insert();

                    TMSTmpLoadTemplateFormHelper::generateLoadBuildLoadTemplateFromForm(TMSTmpLoadTemplate, template.RecId);

                    ttscommit;

                    loadBuildTemplateId.value(template.RecId);
                    this.setupForm();

                    result = true;
                }
                else
                {
                    error("@TRX:TRX_Message_Error_CreateDuplicatedLoadBuildTemplateOrMissingFields");
                }
        }
        else
        {
            error("@SYP4861244");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyLoadBuildTemplate</Name>
				<Source><![CDATA[
    public boolean applyLoadBuildTemplate(TMSLoadBuildTemplateId _loadBuildTemplateId)
    {
        TMSLoadBuildTemplate loadBuildTemplate = TMSLoadBuildTemplate::find(_loadBuildTemplateId);
        boolean result = false;

        if (loadBuildTemplate)
        {
            loadBuildTemplateId.value(loadBuildTemplate.RecId);

            this.populateForm(loadBuildTemplate);
            this.fillTmpLoadTemplate(loadBuildTemplate.RecId);

            result = true;
        }
        else
        {
            error("@TRX:TRX_Message_Error_InvalidLoadBuildTemplateEntered");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCriteriaQueryRun</Name>
				<Source><![CDATA[
    public void setCriteriaQueryRun(SysQueryRun _criteriaQueryRun = null)
    {
        if (!_criteriaQueryRun)
        {
            criteriaQueryRun = TMSLoadBuildWorkbenchForm::createNewQueryRun(this.getLoadBuildSupplyDemandType());
        }
        else
        {
            criteriaQueryRun = _criteriaQueryRun;
        }

        //we want a fresh query and not the one saved in syslast value by the query form
        criteriaQueryRun.promptLoadLastUsedQuery(false);
        criteriaQueryRun.promptAllowSave(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the form depending on the consolidation type used.
    /// </summary>
    public void setupForm()
    {
        updateTemplateButton.enabled(LoadBuildTemplateId.value());
        this.setupFormControlsFromDemandType(this.getLoadBuildSupplyDemandType());
        if (ScheduledRoute.valueStr())
        {
            this.setupFormScheduledRoute();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupFormControlsFromDemandType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the form controls that depend on the type of demand.
    /// </summary>
    protected void setupFormControlsFromDemandType(TMSLoadBuildSupplyDemandType _demandType)
    {
        switch (_demandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales:
                CustomerAccount.visible(true);
                CustomerAccount.enabled(true);
                VendorAccount.visible(false);
                VendorAccount.text('');
                this.enableFilterCodes(true);
                this.enableOriginWarehouseAndSite(true);
                this.enableDestinationWarehouseAndSite(false);
                break;
            case TMSLoadBuildSupplyDemandType::Purchase:
                CustomerAccount.visible(false);
                CustomerAccount.text('');
                VendorAccount.visible(true);
                this.enableFilterCodes(true);
                this.enableOriginWarehouseAndSite(false);
                this.enableDestinationWarehouseAndSite(true);
                break;
            case TMSLoadBuildSupplyDemandType::TransferIssue:
                CustomerAccount.visible(false);
                CustomerAccount.text('');
                VendorAccount.visible(false);
                VendorAccount.text('');
                this.enableFilterCodes(true);
                this.enableOriginWarehouseAndSite(true);
                this.enableDestinationWarehouseAndSite(true);
                break;
            case TMSLoadBuildSupplyDemandType::Shipment:
                CustomerAccount.visible(true);
                CustomerAccount.enabled(true);
                VendorAccount.visible(false);
                VendorAccount.text('');
                this.enableFilterCodes(false);
                this.enableOriginWarehouseAndSite(true);
                this.enableDestinationWarehouseAndSite(false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupFormScheduledRoute</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the form following the selection of a scheduledRoute.
    /// </summary>
    public void setupFormScheduledRoute()
    {
        updateTemplateButton.enabled(LoadBuildTemplateId.value());

        CustomerAccount.visible(true);
        CustomerAccount.enabled(false);
        CustomerAccount.text('');
        VendorAccount.visible(false);
        VendorAccount.text('');

        ShippingDateFrom.enabled(true);
        ShippingDateTo.enabled(false);
        OriginLocationId.enabled(false);
        OriginSiteId.enabled(false);
        this.enableOriginAddress(false);

        DeliveryDateFrom.enabled(false);
        DeliveryDateTo.enabled(false);
        DestinationLocationId.enabled(false);
        DestinationLocationId.text('');
        DestinationSiteId.enabled(false);
        DestinationSiteId.text('');
        this.enableDestinationAddress(false);

        this.enableFilterCodes(true);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TMSTmpLoadTemplate</Name>
				<Methods>
					<Method>
						<Name>setSequence</Name>
						<Source><![CDATA[
        void setSequence(boolean _up = false)
        {
            TMSTmpLoadTemplate   tmsTmpLoadTemplateLocal;

            tmsTmpLoadTemplateLocal = this.cursor();
            tmsTmpLoadTemplateLocal = tmsTmpLoadTemplateLocal.sequenceArrange(_up);

            this.executeQuery();
            element.args().lookupRecord(tmsTmpLoadTemplateLocal);
            this.research(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            TMSLoadBuildWorkbenchForm::validateMoveButtons(
                TMSTmpLoadTemplate_ds,
                ButtonMoveUpLine,
                ButtonMoveDownLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            TMSLoadBuildWorkbenchForm::validateMoveButtons(
                TMSTmpLoadTemplate_ds,
                ButtonMoveUpLine,
                ButtonMoveDownLine);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            TMSTmpLoadTemplate.Sequence = TMSTmpLoadTemplate::getNextSequenceNumber(TMSTmpLoadTemplate);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ProposeLoads</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            TMSLoadBuildQueryCriteria queryCriteria;
            boolean postalCodesValid = TMSLoadBuildWorkbenchForm::validatePostalCodes(
                OriginFromPostalCode.valueStr(),
                OriginToPostalCode.valueStr(),
                DestinationFromPostalCode.valueStr(),
                DestinationToPostalCode.valueStr());

            super();

            if (postalCodesValid)
            {
                queryCriteria = element.populateQueryData();

                tmsLoadBuildWorkbenchForm.parmLoadBuildQueryCriteria(queryCriteria);
                tmsLoadBuildWorkbenchForm.parmDeliveryZipCodes(deliveryZipCodes);
                tmsLoadBuildWorkbenchForm.parmLoadBuildLoadTemplateList(TMSTmpLoadTemplateFormHelper::createLoadTemplateIdList(tmsTmpLoadTemplate));
                tmsLoadBuildWorkbenchForm.proposeLoadsClicked();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>QueryButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setCriteriaQueryRun(criteriaQueryRun);

            criteriaQueryRun.prompt();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateTemplateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            TMSLoadBuildTemplate template;

            ttsbegin;
            template = TMSLoadBuildTemplate::find(LoadBuildTemplateId.value(), true);
            element.populateTemplate(template);
            template.update();

            TMSTmpLoadTemplateFormHelper::generateLoadBuildLoadTemplateFromForm(TMSTmpLoadTemplate, template.RecId);
            ttscommit;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LoadBuildTemplateId</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            TMSLoadBuildTemplate template;

            ret = super();

            if (this.value())
            {
                template = TMSLoadBuildTemplate::find(this.value());
                if (template)
                {
                    element.populateForm(template);
                }
                else
                {
                    element.clearForm();
                }
            }
            else
            {
                element.clearForm();
            }

            element.fillTmpLoadTemplate(template.RecId);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TMSSupplyDemandType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setupForm();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduledRoute</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange;

            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TMSRoute), this);

            sysTableLookup.addLookupField(fieldNum(TMSRoute, RouteCode));
            sysTableLookup.addLookupField(fieldNum(TMSRoute, Description));
            sysTableLookup.addLookupField(fieldNum(TMSRoute, ShipUTCDateTime));

            queryBuildDataSource = query.addDataSource(tableNum(TMSRoute));

            // Only get scheduledRoute routes
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(TMSRoute, RouteSchedule));
            queryBuildRange.value(SysQuery::valueNot(0));

            // Make sure scheduledRoute routes do not already have a load assigned
            queryBuildDataSource = queryBuildDataSource.addDataSource(tableNum(WHSLoadTable));
            queryBuildDataSource.joinMode(JoinMode::NoExistsJoin);
            queryBuildDataSource.relations(false);
            queryBuildDataSource.addLink(fieldNum(TMSRoute, RouteCode), fieldNum(WHSLoadTable, RouteCode));

            sysTableLookup.parmQuery(query);

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            TMSRoute    route;
            boolean     ret;

            ret = super();

            if (this.text())
            {
                route = TMSRoute::find(this.text());

                if (route)
                {
                    element.populateFormScheduledRoute(route);
                }
                else
                {
                    element.clearForm();
                }
            }
            else
            {
                element.clearForm();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OriginSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            OriginLocationId.text(tmsLoadBuildWorkbenchForm.clearInvalidInventLocationIdFilter(OriginLocationId.valueStr(), this.valueStr()));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OriginLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventLocation::lookupBySiteIdAllTypes(OriginLocationId, OriginSiteId.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                 ret;
            InventLocation          inventLocation;
            LogisticsPostalAddress  logisticsPostalAddress;

            ret = super();

            if (this.valueStr())
            {
                inventLocation          = InventLocation::find(this.valueStr());
                logisticsPostalAddress  = inventLocation.logisticsPostalAddress();

                OriginSiteId.text(inventLocation.InventSiteId);
                OriginFromPostalCode.text(logisticsPostalAddress.ZipCode);
                OriginToPostalCode.text(logisticsPostalAddress.ZipCode);
                OriginCountry.text(logisticsPostalAddress.CountryRegionId);
                element.enableOriginAddress(false);
            }
            else
            {
                element.enableOriginAddress(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DestinationSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            DestinationLocationId.text(tmsLoadBuildWorkbenchForm.clearInvalidInventLocationIdFilter(DestinationLocationId.valueStr(), this.valueStr()));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DestinationLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventLocation::lookupBySiteIdAllTypes(DestinationLocationId, DestinationSiteId.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                 ret;
            InventLocation          inventLocation;
            LogisticsPostalAddress  logisticsPostalAddress;

            ret = super();

            if (this.valueStr())
            {
                inventLocation = InventLocation::find(this.valueStr());
                logisticsPostalAddress  = inventLocation.logisticsPostalAddress();

                DestinationSiteId.text(inventLocation.InventSiteId);
                DestinationFromPostalCode.text(logisticsPostalAddress.ZipCode);
                DestinationToPostalCode.text(logisticsPostalAddress.ZipCode);
                DestinationCountry.text(logisticsPostalAddress.CountryRegionId);
                element.enableDestinationAddress(false);
            }
            else
            {
                element.enableDestinationAddress(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMoveUpLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            tmsTmpLoadTemplate_ds.setSequence(true);

            TMSLoadBuildWorkbenchForm::validateMoveButtons(
                TMSTmpLoadTemplate_ds,
                ButtonMoveUpLine,
                ButtonMoveDownLine);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMoveDownLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            TMSTmpLoadTemplate_ds.setSequence();

            TMSLoadBuildWorkbenchForm::validateMoveButtons(
                TMSTmpLoadTemplate_ds,
                ButtonMoveUpLine,
                ButtonMoveDownLine);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TMSTmpLoadTemplate</Name>
			<Table>TMSTmpLoadTemplate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Sequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CounterField>Sequence</CounterField>
			<Index>SequenceIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TMSLoadBuildTemplate</Name>
			<Table>TMSLoadBuildTemplate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Account</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCountryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationFromPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationToPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilterCode1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilterCode2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilterCode3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilterCode4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadBuildStrategy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadBuildTemplateName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginCountryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginFromPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginToPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SupplyDemandQueryRun</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SupplyDemandType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYP4861122</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ProposeLoads</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>WHSandTMS</ConfigurationKey>
								<ElementPosition>1022611260</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYP4861115</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYP4861116</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonSeparatorControl">
								<Name>FormButtonSeparatorControl1</Name>
								<Type>ButtonSeparator</Type>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>QueryButton</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYP4861114</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@WAX401</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonSeparatorControl">
								<Name>FormButtonSeparatorControl2</Name>
								<Type>ButtonSeparator</Type>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>TemplateActionPaneTab</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>TemplateButtons</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ApplyTemplateDropDialogButton</Name>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TMSLoadBuildTemplate</DataSource>
										<MenuItemName>TMSLoadBuildTemplateApply</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>UpdateTemplateButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@TRX:TMSLoadBuildWorkbenchUpdateTemplateButtonHelpText</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@TRX:TMSLoadBuildWorkbenchUpdateTemplateButtonLabel</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>CreateTemplateDropDialogButton</Name>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>TMSLoadBuildTemplateCreate</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>TemplatesButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LoadBuidTemplates</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TMSLoadBuildTemplate</DataSource>
										<MenuItemName>TMSLoadBuildTemplates</MenuItemName>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@TRX:TRX_Task_Title_TemplateActionPaneTab</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>LoadBuildTemplateId</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<ExtendedDataType>TMSLoadBuildTemplateId</ExtendedDataType>
						<Label>@SYP4861054</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>Strategy</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<ExtendedDataType>TMSLoadBuildStrategyId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TMSSupplyDemandType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>TMSLoadBuildSupplyDemandType</EnumType>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustomerAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>CustAccount</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendorAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>VendAccount</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ScheduledRoute</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@TRX:BtnCaptionScheduledRoute</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Dates</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ShippingDateFrom</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>417566264</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYP4861105</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ShippingDateTo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>626349396</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYP4861104</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DeliveryDateFrom</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>402653182</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYP4861119</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DeliveryDateTo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>603979773</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYP4861118</Label>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS80293</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Origin</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OriginSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>835132529</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSiteId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OriginLocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventLocationId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OriginFromPostalCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1252698793</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSPostalCodeFromRegExpression</ExtendedDataType>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OriginToPostalCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1550960410</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSPostalCodeToRegExpression</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OriginCountry</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1849222027</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSCountryRegion</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS26398</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Destination</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DestinationSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306365</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventSiteId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DestinationLocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>InventLocationId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DestinationFromPostalCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSPostalCodeFromRegExpression</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DestinationToPostalCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1849222028</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSPostalCodeToRegExpression</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DestinationCountry</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSCountryRegion</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS72080</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FilterCodes</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FilterCode1</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSFilterCode1</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FilterCode2</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSFilterCode2</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FilterCode3</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSFilterCode3</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FilterCode4</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TMSFilterCode4</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@WAX1137</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LoadTemplates</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>Column</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneLine</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTabLine</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroupLine</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>NewButtonLine</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@SYS2318</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteButtonLine</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS135131</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>TMSTmpLoadTemplate</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroupLine</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMoveUpLine</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@WAX2806</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<MultiSelect>No</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Up</NormalImage>
														<Text>@SYS74619</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMoveDownLine</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@WAX2807</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<MultiSelect>No</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Down</NormalImage>
														<Text>@SYS74620</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>TMSTmpLoadTemplate</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>TMSTmpLoadTemplate</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Identification</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>Identification_Sequence</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_TMS:TMSLoadBuildWorkbench_Identification_Sequence</HelpText>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Sequence</DataField>
												<DataSource>TMSTmpLoadTemplate</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Identification_LoadTemplate</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LoadTemplate</DataField>
												<DataSource>TMSTmpLoadTemplate</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>Identification</DataGroup>
										<DataSource>TMSTmpLoadTemplate</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TMSTmpLoadTemplate</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@TRX:TMSLoadBuildLoadTemplatesCaption</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>