<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PayrollNewPayStatement</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PayrollNewPayStatement extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        Args            args;
        MenuFunction    menuFunction;
        FormRun         formRun;

        PayrollPayStatementGenerationTask generationTask;

        super();

        generationTask = new PayrollPayStatementGenerationTask();
        generationTask.initializeFromPayment(PayrollPayStatement);
        generationTask.parmCalcBenefitsOnManualPayStatement(CalcBenefits.value());
        generationTask.runOperation();

        if (element.args().caller() == null || element.args().caller().name() != formStr(PayrollPaystatement))
        {
            args = new Args();
            args.lookupRecord(PayrollPayStatement);
            args.caller(element);
            args.openMode(OpenMode::Edit);
            menuFunction = new MenuFunction(menuitemDisplayStr(PayrollPayStatement), MenuItemType::Display);
            formRun = menuFunction.create(args);
            formRun.run();
        }
        else if (element.args().caller().name() == formStr(PayrollPayStatement))
        {
            if (formHasMethod(element.args().caller(), identifierStr('refreshPayStatement')))
            {
                element.args().caller().refreshPayStatement(payrollPayStatement.RecId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidCreate</Name>
				<Source><![CDATA[
    public boolean isValidCreate()
    {
        return PayrollPayStatement.PayPeriod && PayrollPayStatement.PaymentDate && PayrollPayStatement.Worker;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayrollPayStatement</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            PayrollPayStatement.ReversedPayStatement = 0;
            PayrollPayStatement.PaymentType = PayrollPaymentType::Manual;
            PayrollPayStatement.CreationType = PayrollPayStatementCreationType::UserEntry;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            RecId                           currentLE;
            NumberSeq                       numberSeq;
            boolean ret = element.isValidCreate();

            if (ret)
            {
                currentLE = CompanyInfo::current();

                ttsBegin;

                // Assign the document number via the number sequence
                numberSeq = NumberSeq::newGetNum(PayrollParameters::numRefPayStatementId());
                PayrollPayStatement.DocumentNumber = numberSeq.num();

                PayrollPayStatement.batchNumber = PayrollPayStatementGeneration::getBatchNumber();

                // Determine if the payment method should be electronic or check for this worker
                if (PayrollPayStatement::isAccountExistsForElectronicPayment(PayrollPayStatement.Worker))
                {
                    PayrollPayStatement.PaymentMethodType = PayrollPaymentMethodType::ElectronicPayment;
                }
                else
                {
                    PayrollPayStatement.PaymentMethodType = PayrollPaymentMethodType::Check;
                }

                ttsCommit;
            }

            ret = ret && super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PayPeriod</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                PayrollPayStatement.PaymentDate = PayrollPayPeriod::find(PayrollPayStatement.PayPeriod).DefaultPaymentDate;

                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = super(_formReferenceControl);

                if (ret)
                {
                    ret = PayrollPayPeriod::resolveReferencePayPeriodByPayCycle(_formReferenceControl, payrollPayCyclelookup.text());
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return PayrollPayPeriod::lookupPayPeriodByPayCycle(_formReferenceControl, payrollPaycyclelookup.valueStr());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PayrollPayCycleLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            PayrollPayCycle::jumpRefPayCycle(this.text(), this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            PayrollPayCycle::lookupPayCycle(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            payrollPayStatement.PayPeriod = PayrollPayPeriod::findOpenPeriodByPayCycle(PayrollPayCycle::findByPayCycle(this.text()).RecId).RecId;
            PayrollPayStatement.PaymentDate = PayrollPayPeriod::find(PayrollPayStatement.PayPeriod).DefaultPaymentDate;
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayrollPayStatement</Name>
			<Table>PayrollPayStatement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GrossAccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReversed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetAccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentJournalBatchNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentMethodType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReversedPayStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@Payroll:PayrollNewPayStatement</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Content</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PayrollPayCycleLookup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1060959181</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@Payroll:PayCycle</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>PayPeriodGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1332590297</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>PayrollPayStatement</DataSource>
						<Mandatory>Yes</Mandatory>
						<ReferenceField>PayPeriod</ReferenceField>
						<ReplacementFieldGroup>Period</ReplacementFieldGroup>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>PaymentDate</Name>
						<ElementPosition>1604221413</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymentDate</DataField>
						<DataSource>PayrollPayStatement</DataSource>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>WorkerGroup</Name>
						<ElementPosition>1875852529</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>PayrollPayStatement</DataSource>
						<ReferenceField>Worker</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>CalcBenefits</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2011668087</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@Payroll:ProcessPrimaryBenefits</Label>
						<Value>1</Value>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<DataSource>PayrollPayStatement</DataSource>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>Commit</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@Payroll:Create</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>