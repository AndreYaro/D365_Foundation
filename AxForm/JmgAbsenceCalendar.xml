<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgAbsenceCalendar</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JmgAbsenceCalendar extends FormRun implements SysIFilterConsumerForm
{
}
]]></Source>
			</Method>
			<Method>
				<Name>registerDatasourceOnQueryingEvent</Name>
				<Source><![CDATA[
    public void registerDatasourceOnQueryingEvent()
    {
        JmgAbsenceCalendar_DS.OnQueryExecuting += eventhandler(this.parmFilterFormQueryEventHandler().applyFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        Object formRun;

        super();

        if (element.args() && element.args().caller())
        {
            formRun = element.args().caller();

            if (formHasMethod(formRun, identifierStr(refresh)))
            {
                formRun.refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Object      caller = element.args().caller();

        super();

        switch (element.args().dataset())
        {
            case tablenum(JmgShopSupervisorMyTeam):
                JmgShopSupervisorMyTeam shopSupervisorMyTeam = element.args().record() as JmgShopSupervisorMyTeam;
                this.setWorkerFilter(HcmWorker::find(shopSupervisorMyTeam.Worker));
                break;

            case tablenum(JmgTmpEmployeeSignInStatus):
                JmgTmpEmployeeSignInStatus tmpEmployeeSignInStatus = element.args().record() as JmgTmpEmployeeSignInStatus;
                this.setWorkerFilter(HcmWorker::findByPersonnelNumber(tmpEmployeeSignInStatus.PersonnelNumber));
                break;

            case tablenum(HcmWorker):
                this.setWorkerFilter(element.args().record());
                break;

            case tableNum(JmgEmployee):
                JmgEmployee jmgEmployee = element.args().record();
                this.setJmgEmployeeFilter(jmgEmployee);
                break;
        }

        if (caller)
        {
            if (caller.name() == formstr(JmgEmplSignedIn)
                ||  caller.name() == formstr(HcmWorker)
                ||  caller.name() == formstr(HcmWorkerV2)
                ||  caller.name() == formstr(JmgShopSupervisorMyTeam))
            {
                JmgAbsenceCalendar_Worker.visible(false);
            }
        }
        jmgAbsenceCalendar_DS.query().dataSourceTable(tablenum(JmgAbsenceCalendar)).addRange(fieldnum(JmgAbsenceCalendar, CalculationTrans)).value(queryValue(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerFilter</Name>
				<Source><![CDATA[
    private void setWorkerFilter(HcmWorker _worker)
    {
        JmgEmployee jmgEmployee = JmgEmployee::find(_worker.RecId);
        if (jmgEmployee.RecId)
        {
            this.setJmgEmployeeFilter(jmgEmployee);
        }
        else
        {
            throw error(strfmt("@SYS38368", _worker.PersonnelNumber));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setJmgEmployeeFilter</Name>
				<Source><![CDATA[
    private void setJmgEmployeeFilter(JmgEmployee _employee)
    {
        jmgAbsenceCalendar_DS.query().dataSourceTable(tablenum(JmgAbsenceCalendar)).addRange(fieldnum(JmgAbsenceCalendar, Worker)).value(queryValue(_employee.Worker));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ipcActivityIdLookup</Name>
				<Source><![CDATA[
    public void ipcActivityIdLookup(FormControl _callingControl, JmgIpcCategoryId _jmgCategoryId)
    {
        Query query;
        QueryBuildDataSource queryBuildDataSource;
        SysTableLookup sysTableLookup;
        sysTableLookup = SysTableLookup::newParameters(tablenum(JmgIpcActivity), _callingControl);

        sysTableLookup.addLookupfield(fieldnum(JmgIpcActivity, Activity));
        sysTableLookup.addLookupfield(fieldnum(JmgIpcActivity, Description));

        query = new Query();
        queryBuildDataSource = query.addDataSource(tablenum(JmgIpcActivity));
        if (_jmgCategoryId)
        {
            queryBuildDataSource.addRange(fieldnum(JmgIpcActivity, Category)).value(_jmgCategoryId);
        }
        else
        {
            queryBuildDataSource.addRange(fieldnum(JmgIpcActivity, Type)).value(enum2str(JmgStampTypeEnum::Absence));
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ipcCategoryIdLookup</Name>
				<Source><![CDATA[
    public void ipcCategoryIdLookup(FormControl _callingControl)
    {
        Query query;
        QueryBuildDataSource queryBuildDataSource;
        SysTableLookup sysTableLookup;
        sysTableLookup = SysTableLookup::newParameters(tablenum(JmgIpcCategory), _callingControl);

        sysTableLookup.addLookupfield(fieldnum(JmgIpcCategory, Category));
        sysTableLookup.addLookupfield(fieldnum(JmgIpcCategory, Description));

        query = new Query();
        queryBuildDataSource = query.addDataSource(tablenum(JmgIpcCategory));
        queryBuildDataSource.addRange(fieldnum(JmgIpcCategory, Type)).value(enum2str(JmgStampTypeEnum::Absence));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JmgAbsenceCalendar</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            FormRun             callerForm;
            JmgEmployee         jmgEmployee;
            JmgTmpEmplSignedIn  jmgTmpEmplSignedIn;
            JmgProfileSpec      jmgProfileSpec;
            JmgProfileId        jmgProfileId;
            JmgProfileTypeTable jmgProfileTypeTableIn;
            JmgProfileDate      jmgProfileDateIn;
            JmgProfileTypeTable jmgProfileTypeTableOut;
            JmgProfileDate      jmgProfileDateOut;

            super();

            if (element.args().caller())
            {
                callerForm = element.args().caller();
            }

            if (element.args().dataset() == tablenum(JmgEmployee))
            {
                jmgEmployee = element.args().record();
                jmgAbsenceCalendar.Worker = jmgEmployee.Worker;
            }
            if (element.args().dataset() == tablenum(JmgTmpEmplSignedIn))
            {
                jmgTmpEmplSignedIn = element.args().record();
                jmgEmployee = JmgEmployee::find(jmgTmpEmplSignedIn.Worker);
                jmgAbsenceCalendar.Worker = jmgEmployee.Worker;
            }

            if (jmgEmployee)
            {
                jmgProfileId = jmgEmployee.profileId(
                    DateTimeUtil::date(DateTimeUtil::utcNow()),
                    DateTimeUtil::time(DateTimeUtil::utcNow()));

                if (jmgProfileId)
                {
                    jmgProfileTypeTableIn = JmgProfileTypeTable::findClockIn();
                    jmgProfileDateIn = JmgTermReg::calcProfileDate(JmgTermRegType::ClockIn, jmgEmployee, DateTimeUtil::utcNow());
                    jmgProfileTypeTableOut = JmgProfileTypeTable::findClockOut();
                    jmgProfileDateOut = JmgTermReg::calcProfileDate(JmgTermRegType::ClockOut, jmgEmployee, DateTimeUtil::utcNow());

                    select firstonly StartDay, StartTime
                        from jmgProfileSpec
                        where jmgProfileSpec.Profile        == jmgProfileId
                            && jmgProfileSpec.ProfileType   == jmgProfileTypeTableIn.RecId
                            && jmgProfileSpec.DayId         == JmgProfiles::date2DayId(jmgProfileDateIn);

                    jmgAbsenceCalendar.FromDateTime = DateTimeUtil::newDateTime(jmgProfileDateIn + jmgProfileSpec.StartDay, jmgProfileSpec.StartTime, DateTimeUtil::getUserPreferredTimeZone());

                    select firstonly StartDay, StartTime
                        from jmgProfileSpec
                        where jmgProfileSpec.Profile        == jmgProfileId
                            && jmgProfileSpec.ProfileType   == jmgProfileTypeTableOut.RecId
                            && jmgProfileSpec.DayId         == JmgProfiles::date2DayId(jmgProfileDateOut);

                    jmgAbsenceCalendar.ToDateTime = DateTimeUtil::newDateTime(jmgProfileDateOut + jmgProfileSpec.StartDay, jmgProfileSpec.StartTime, DateTimeUtil::getUserPreferredTimeZone());
                }
                else
                {
                    jmgAbsenceCalendar.FromDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),0,DateTimeUtil::getUserPreferredTimeZone());
                    jmgAbsenceCalendar.ToDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),timeMax(),DateTimeUtil::getUserPreferredTimeZone());
                }
            }
            else
            {
                jmgAbsenceCalendar.FromDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),0,DateTimeUtil::getUserPreferredTimeZone());
                jmgAbsenceCalendar.ToDateTime = DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),timeMax(),DateTimeUtil::getUserPreferredTimeZone());
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>JmgAbsenceCalendar_Worker</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filtering the content of the worker lookup
        /// </summary>
        public void lookup()
        {
            Query                   query;
            QueryBuildDataSource    qbdsWorker;
            QueryBuildDataSource    qbdsMyTeamWorker;

            if (element.args().menuItemName() == menuitemdisplaystr(JmgMyTeamPlannedAbsence))
            {
                HcmWorkerLookup workerLookup = HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany();

                query           = workerLookup.updateQuery();
                qbdsWorker      = query.dataSourceTable(tableNum(HcmWorker));
                qbdsMyTeamWorker = qbdsWorker.addDataSource(tableNum(JmgShopSupervisorMyTeamView));
                qbdsMyTeamWorker.joinMode(JoinMode::ExistsJoin);
                qbdsMyTeamWorker.addLink(fieldNum(HcmWorker, RecId), fieldNum(JmgShopSupervisorMyTeamView, Worker));

                workerLookup.lookupWorker(this);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Grid_M_hrmAbsenceCodeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Lookup absense codes based on corresponding absense group selection
        /// </summary>
        [Hookable(false)]
        public void lookup()
        {
            JmgAbsenceCalendar::lookupHRMAbsenceCodeId(this, jmgAbsenceCalendar.hrmAbsenceCodeGroupId(false, ''));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JmgAbsenceCalendar</Name>
			<Table>JmgAbsenceCalendar</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalculationTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisableAtSigning</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Disabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Seconds</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>HcmWorker</Name>
					<Table>HcmWorker</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>createdBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createdDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Person</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PersonnelNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>JmgAbsenceCalendar</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>HcmWorker</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS38546</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">JmgAbsenceCalendar</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>JmgAbsenceCalendar_Worker</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>JmgAbsenceCalendar</DataSource>
						<ReferenceField>Worker</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>JmgAbsenceCalendar_FromDateTime</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FromDateTime</DataField>
						<DataSource>JmgAbsenceCalendar</DataSource>
						<Label>@SYS109394</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>JmgAbsenceCalendar_ToDateTime</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ToDateTime</DataField>
						<DataSource>JmgAbsenceCalendar</DataSource>
						<Label>@SYS109395</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>DisableAtSigning</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_HRM:JmgAbsenceCalendar_DisableAtSigning</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>DisableAtSigning</DataField>
						<DataSource>JmgAbsenceCalendar</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>Disabled</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_HRM:JmgAbsenceCalendar_Disabled</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Disabled</DataField>
						<DataSource>JmgAbsenceCalendar</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_M_hrmAbsenceCodeGroupId</Name>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>hrmAbsenceCodeGroupId</DataMethod>
						<DataSource>JmgAbsenceCalendar</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_M_hrmAbsenceCodeId</Name>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>hrmAbsenceCodeId</DataMethod>
						<DataSource>JmgAbsenceCalendar</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_M_hrmAbsenceCodeDescription</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>hrmAbsenceCodeDescription</DataMethod>
						<DataSource>JmgAbsenceCalendar</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
				</Controls>
				<DataSource>JmgAbsenceCalendar</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>