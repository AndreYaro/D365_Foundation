<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvPolicyRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvPolicyRule extends FormRun
{
    RefRecId                    policyRuleTypeIndex;
    RefRecId                    policyIndex;
    SysPolicyRule               sysPolicyRule;
    boolean                     isNew;
    str                         expressionBinderClass = classStr(TrvRuleExpressionSetup);
    TrvExpType                  filterExpenseType;
    SysPolicyType               policyType;
    SysPolicyRuleType           policyRuleType;
    boolean                     cancelPolicy;
    TableName                   policyDocumentTableName;

}
]]></Source>
			</Method>
			<Method>
				<Name>cancelPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clean up any newly created policy and related records when canceled.
    /// </summary>
    private void cancelPolicy()
    {
        ExpressionTable         expressionTable;
        TrvPolicyRule           trvPolicyRuleDelete;
        TrvPolicyLanguageTxt    langTxt;

        if (isNew)
        {
            ttsbegin;

            // Clear out the expression table
            expressionTable = ExpressionTable::findRecId(trvPolicyRule.ExpressionTableRecId, true);
            expressionTable.delete();

            // Clear out any message text translations that may have been added
            delete_from langTxt where langTxt.TrvPolicyRule == trvPolicyRule.RecId;

            // Finally, delete the temporary rule itself in case it was saved
            delete_from trvPolicyRuleDelete where trvPolicyRuleDelete.RecId == trvPolicyRule.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when user clicks Ok or taps enter to save and dismiss the form.
    /// </summary>
    public void closeOk()
    {
        // Validate that there is a valid message and a valid action selected.
        if (this.validateMessageAndAction())
        {
            this.savePolicy();
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when user clicks Cancel or taps esc to dismiss the form.
    /// </summary>
    public void closeCancel()
    {
        this.cancelPolicy();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the expression model for the current expression.
    /// </summary>
    /// <returns><c>ExpressionModel</c> object</returns>
    public Microsoft.Dynamics.AX.Framework.Expression.Model.ExpressionModel getModel()
    {
        return SysExpressionBuilderControl.GetExpressionModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the type of policy rule, expression control, form caption, policy message and the editability of field groups.
    /// </summary>
    public void init()
    {
        str         ruleTypeLabel;
        DictEnum    ruleTypeEnum;

        ruleTypeEnum = new DictEnum(enumNum(SysPolicyRuleTypeEnum));

        super();

        companycontext.text(CompanyInfo::find().DataArea);

        if (!element.args() || !element.args().caller())
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        policyRuleTypeIndex = str2int64(element.args().parm());
        policyIndex = element.args().caller().getPolicyIndex();
        sysPolicyRule = element.args().record() as SysPolicyRule;

        // Clears RecIds & garbage from the form title once the record is safely in the sysPolicyRule member
        element.args().record(null);

        select PolicyType, Name from policyRuleType where policyRuleType.RecId == policyRuleTypeIndex;
        select policyType where policyType.RecId == policyRuleType.PolicyType;

        //detect which type of policyruletype and set the expression builder's binding class accordingly
        switch (policyType.PolicyType)
        {
            case SysPolicyTypeEnum::TrvExpensePolicy:
                policyDocumentTableName = tableStr(TrvExpTrans);
                ruleTypeLabel = ruleTypeEnum.value2Label(ruleTypeEnum.symbol2Value(policyRuleType.Name));
                switch (policyRuleType.Name)
                {
                    // Expense policy rules.
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvAirlinePolicyRule)):
                        expressionBinderClass = classStr(TrvAirlineRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Airline;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvCarRentalPolicyRule)):
                        expressionBinderClass = classStr(TrvCarRentalRuleExpressionSetup);
                        filterExpenseType = TrvExpType::CarRental;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvHotelPolicyRule)):
                        expressionBinderClass = classStr(TrvHotelRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Hotel;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvHeaderPolicyRule)):
                        expressionBinderClass = classStr(TrvHeaderRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Empty;
                        policyDocumentTableName = tableStr(TrvExpTable);
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvConferencePolicyRule)):
                        expressionBinderClass = classStr(TrvRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Conference;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvEntertainmentPolicyRule)):
                        expressionBinderClass = classStr(TrvEntertainmentRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Entertainment;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvMileagePolicyRule)):
                        expressionBinderClass = classStr(TrvMileageRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Transport;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvMiscellaneousPolicyRule)):
                        expressionBinderClass = classStr(TrvRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Expense;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvMealsPolicyRule)):
                        expressionBinderClass = classStr(TrvMealsRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Meals;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvPersonalPolicyRule)):
                        expressionBinderClass = classStr(TrvPersonalRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Personal;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvGiftPolicyRule)):
                        expressionBinderClass = classStr(TrvGiftRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Gift;
                        break;
                    default:
                        expressionBinderClass = classStr(TrvRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Empty;
                        break;
                }
                break;

            case SysPolicyTypeEnum::TrvRequisitionPolicy:
                policyDocumentTableName = tableStr(TrvRequisitionLine);
                ruleTypeLabel = ruleTypeEnum.value2Label(ruleTypeEnum.symbol2Value(policyRuleType.Name));
                switch (policyRuleType.Name)
                {
                    // travel
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionAirlinePolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Airline;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionCarRentallPolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::CarRental;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionHotelPolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Hotel;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionHeaderPolicyRule)):
                        expressionBinderClass = classStr(TrvReqHeaderRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Empty;
                        policyDocumentTableName = tableStr(TrvRequisitionTable);
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionEntertainementPolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Entertainment;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionMileagePolicyRule)):
                        expressionBinderClass = classStr(TrvReqMileageRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Transport;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionMeals)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Meals;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionConferencePolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Conference;
                        break;
                    case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TrvRequisitionMiscellaneousPolicyRule)):
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Expense;
                        break;
                    default:
                        expressionBinderClass = classStr(TrvRequisitionRuleExpressionSetup);
                        filterExpenseType = TrvExpType::Empty;
                        break;
                }
                break;
        }

        // Set the caption on the form.
        this.design().caption(strFmt("@SYS309171", enum2str(policyType.PolicyType), strLwr(ruleTypeLabel)));

        if (!sysPolicyRule)
        {
            commandButton.clicked();
            SysExpressionBuilderControl.ExpressionDocumentClass(expressionBinderClass);
            SysExpressionBuilderControl.InitializeExpression(0);
            isNew = true;
        }
        else
        {
            SysPolicyUtil::filterPolicyRule(trvPolicyRule_ds, sysPolicyRule);
            SysExpressionBuilderControl.ExpressionDocumentClass(expressionBinderClass);
            SysExpressionBuilderControl.InitializeExpression(TrvPolicyRule.ExpressionTableRecId);
            isNew = false;
        }

        // Set policy message datasource range.
        QueryBuildDataSource txtDS =  TrvPolicyLanguageTxt_DS.query().dataSourceName(tableStr(TrvPolicyLanguageTxt));
        SysQuery::findOrCreateRange(txtDS, fieldnum(TrvPolicyLanguageTxt, TrvPolicyRule)).value(queryValue(TrvPolicyRule.RecId));
        SysQuery::findOrCreateRange(txtDS, fieldnum(TrvPolicyLanguageTxt, LanguageId)).value(queryValue(SystemParameters::getSystemLanguageId()));

        trvPolicyTable_Action.selection(trvPolicyRule.Action);

        // If expired, do not allow editing.
        if (!isNew && (trvPolicyRule.ValidTo < DateTimeUtil::utcNow() || trvPolicyRule.ValidFrom == trvPolicyRule.ValidTo))
        {
            groupDetails.enabled(false);
            Ok.visible(false);
        }
        else
        {
            // Disable the validfrom control in case the rule has already started.
            if (trvPolicyRule.ValidFrom <= DateTimeUtil::utcNow() && isNew == NoYes::No)
            {
                validFromDate.enabled(false);
            }
            groupDetails.enabled(true);
            Ok.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>savePolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Permanently save the expression, the policy rule and the policy text.
    /// </summary>
    public void savePolicy()
    {
        ExpressionTable         expressionTable;
        TrvPolicyLanguageTxt    trvPolicyLanguage, trvPolicyLanguageTxtNew;
        RecordInsertList        trvPolicyLanguageTxtList;
        recId                   origRecid;

        // Write the expression to the expression table.
        expressionTable = ExpressionTable::findRecId(trvPolicyRule.ExpressionTableRecId, true);
        expressionTable = ExpressionTable::saveExpression(expressionTable.RecId, element.getModel());

        origRecid = trvPolicyRule.RecId;
        trvPolicyRule.ExpressionTableRecId = expressionTable.RecId;

        trvPolicyRule.Action = trvPolicyTable_Action.selection();
        trvPolicyRule.write();
        TrvPolicyLanguageTxt_DS.write();

        // Copy the languagetxt entries from the retired policy to the new policy.
        if (origRecid != trvPolicyRule.RecId && origRecid != 0)
        {
            trvPolicyLanguageTxtList = new RecordInsertList(tableNum(TrvPolicyLanguageTxt));

            while select trvPolicyLanguage where trvPolicyLanguage.TrvPolicyRule == origRecid
            {
                trvPolicyLanguageTxtNew.TrvPolicyRule   = trvPolicyRule.RecId;
                trvPolicyLanguageTxtNew.LanguageId      = trvPolicyLanguage.LanguageId;
                trvPolicyLanguageTxtNew.Txt             = trvPolicyLanguage.Txt;
                trvPolicyLanguageTxtList.add(trvPolicyLanguageTxtNew);
            }

            trvPolicyLanguageTxtList.insertDatabase();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMessageAndAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate that a message to display and an action to take when a policy is violated is specified in the form.
    /// </summary>
    /// <returns>True if both are valid; otherwise, false.</returns>
    private boolean validateMessageAndAction()
    {
        if (trvPolicyTable_Action.selection() == 0)
        {
            warning("@SYS342778");
        }
        else if (strLTrim(TrvPolicyLanguageTxt.Txt) == '')
        {
            warning("@SYS342779");
        }
        else
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvPolicyRule</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            trvPolicyRule.Policy = policyIndex;
            trvPolicyRule.PolicyRuleType = policyRuleTypeIndex;
            trvPolicyRule.ValidFrom = DateTimeUtil::newDateTime(DateTimeUtil::date(DateTimeUtil::utcNow()), 0, DateTimeUtil::getUserPreferredTimeZone());
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Skip the writes triggered by framework when focus is lost.
        /// Write is only allowed from savePolicy method which triggers a save after the expression is saved.
        /// </summary>
        public void write()
        {
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TrvPolicyLanguageTxt</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (TrvPolicyRule.RecId && strLTrim(TrvPolicyLanguageTxt.Txt) != '')
            {
                TrvPolicyLanguageTxt.LanguageId = SystemParameters::getSystemLanguageId();
                TrvPolicyLanguageTxt.TrvPolicyRule = TrvPolicyRule.RecId;
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TrvPolicyRuleEvaluation</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Run the test evaluation form to test the current expression against existing records.
        /// </summary>
        public void clicked()
        {
            Args args = new Args();

            args.caller(element);
            args.parm(policyDocumentTableName);

            new MenuFunction(MenuItemDisplayStr(TrvPolicyRuleEvaluation), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>companycontext</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            appl.setDefaultCompany(companycontext.valueStr(), false);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SysExpressionBuilderControl</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>CustomLookupPreInit</Name>
						<Source><![CDATA[
        /// <summary>
        /// This is called before the init is called on the custom lookup form.
        /// This is used to send additional parameters.
        /// </summary>
        /// <param name = "formRun">Lookup form instance.</param>
        public void CustomLookupPreInit(FormRun formRun)
        {
            super(formRun);
            formRun.parmPolicyRuleTypeIndex(filterExpenseType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MessageLanguages</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open the language translations form for entering the policy message.
        /// </summary>
        void clicked()
        {
            MenuFunction menuFunction;
            Args args = new Args();

            menuFunction = new MenuFunction(menuitemDisplayStr(TrvPolicyLanguageTxt), MenuItemType::Display);

            // Check access rights
            if (!menuFunction || !menuFunction.checkAccessRights())
            {
                // Access rights are not sufficient to use this function.
                throw error("@SYS81158");
            }

            if (!trvPolicyRule)
            {
                element.savePolicy();
            }

            args.record(trvPolicyRule);

            args.caller(this);
            menuFunction.run(args);

            TrvPolicyLanguageTxt_DS.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvPolicyRule</Name>
			<Table>TrvPolicyRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Action</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Policy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyRuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RootExpressionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<ValidTimeStateUpdate>EffectiveBased</ValidTimeStateUpdate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvPolicyLanguageTxt</Name>
			<Table>TrvPolicyLanguageTxt</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvPolicyRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TrvPolicyRule</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS302374</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupDetails</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RuleDetails</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>800</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ValidFromDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidFrom</DataField>
										<DataSource>TrvPolicyRule</DataSource>
										<Label>@SYS35161</Label>
										<TimeHours>No</TimeHours>
										<TimeMinute>No</TimeMinute>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ValidToDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidTo</DataField>
										<DataSource>TrvPolicyRule</DataSource>
										<Label>@SYS102701</Label>
										<TimeHours>No</TimeHours>
										<TimeMinute>No</TimeMinute>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IsInherited</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsInherited</DataField>
										<DataSource>TrvPolicyRule</DataSource>
										<Label>@SYS135083</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>CommandButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Command>New</Command>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExpressionBuilderGroup</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>ActionPane</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>ExpressionTestActionPaneTab</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>ActionPaneButtonGroup</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>TrvPolicyRuleEvaluation</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<MenuItemName>TrvPolicyRuleEvaluation</MenuItemName>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpressionBuilderContent</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>companycontext</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>CompanyId</ExtendedDataType>
												<Label>@SYS343504</Label>
											</AxFormControl>
											<AxFormControl>
												<Name>SysExpressionBuilderControl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<FormControlExtension>
													<Name>SysExpressionBuilderControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>ExpressionDataSource</Name>
															<Type>String</Type>
															<Value>TrvPolicyRule</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>ExpressionReferenceField</Name>
															<Type>String</Type>
															<Value>ExpressionTableRecId</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>ExpressionDocumentClass</Name>
															<Type>String</Type>
															<Value>TrvRuleExpressionSetup</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>FieldLookupForm</Name>
															<Type>String</Type>
															<Value>TrvExpressionBuilderLookup</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>CustomLookupEDTs</Name>
															<Type>String</Type>
															<Value>TrvCostTypeEDT,TrvExpSubCategoryEDT,HcmPositionRecId</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>SupportExplicitSaveOnly</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
															<Value>No</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Bold>Bold</Bold>
								<Caption>@SYS106467</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BottomGroup</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TrvPolicyTable_Action</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<EnumType>TrvPolicyViolationLevel</EnumType>
										<HideFirstEntry>Yes</HideFirstEntry>
										<Label>@SYS106468</Label>
										<LabelBold>Bold</LabelBold>
										<ShowLabel>No</ShowLabel>
										<Items />
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Caption>@SYS106468</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MessageGroup</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TrvPolicyTable_Message</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>TrvPolicyLanguageTxt</DataSource>
										<LabelBold>Bold</LabelBold>
										<LabelPosition>Above</LabelPosition>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MessageButtonGroup</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>MsgButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>MessageLanguages</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MenuItemName>TrvPolicyLanguageTxt</MenuItemName>
												<NormalImage>Translate</NormalImage>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>