<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchCreateFromSalesOrder</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PurchCreateFromSalesOrder extends FormRun
{
    #resAppl

    PurchCreateFromSalesOrder   purchCreateFromSalesOrder;
    TmpPurchLinePrice           tmpPurchLinePrice;

    Map                         mapModifiedQty;

    InventDimCtrl_Frm_Mov       inventDimFormSetup;
    boolean                     calledFromInitFields;
    Map                         canIncludeLineMap;
    FormObservableLink          markAllFormObservable;
    FormObservableLink          multiLineDiscountObservable;
    private boolean             delayMultiLineDiscountCalculation;
    private Set                 accountNumberSet;

}
]]></Source>
			</Method>
			<Method>
				<Name>preventIncludeSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should we block inclusion of the provided <c>SalesLine</c> record for PO creation?
    /// </summary>
    /// <param name = "_salesLine">Sales order line record.</param>
    /// <returns>true if the order line should not be included; otherwise, false.</returns>
    public boolean preventIncludeSalesLine(SalesLine _salesLine)
    {
        return _salesLine.Reservation == ItemReservation::Explosion
            && VendTable::find(InventTable::find(_salesLine.ItemId).primaryVendorId(_salesLine.InventDimId)).interCompanyTradingRelationActive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        if (element.closedOk())
        {
            select firstonly tmpPurchLinePrice where tmpPurchLinePrice.Included == NoYes::Yes;
            if (!(tmpPurchLinePrice.SalesId && tmpPurchLinePrice.LineNum))
            {
                warning("@SYS106603");
            }
            else
            {
                if (!element.checkSelectedLines(true) || !PurchCreateFromSalesOrder::checkTransferred(tmpPurchLinePrice))
                {
                    return false;
                }
            }
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canIncludeSalesLine</Name>
				<Source><![CDATA[
    public boolean canIncludeSalesLine(SalesLine _salesLine)
    {
        RefRecId            inventTransOriginRecId;

        if (!canIncludeLineMap.exists(_salesLine.RecId))
        {
            InventTrans         inventTrans;
            InventTransOrigin   inventTransOrigin;

            if (_salesLine.isStocked())
            {
                select firstonly RecId from inventTransOrigin
                    where inventTransOrigin.InventTransId == _salesLine.InventTransId
                    exists join inventTrans
                        where inventTrans.InventTransOrigin == inventTransOrigin.RecId
                           && inventTrans.TransChildType    != InventTransChildType::None;
            }

            inventTransOriginRecId = inventTransOrigin.RecId;
            canIncludeLineMap.insert(_salesLine.RecId,inventTransOriginRecId);
        }
        else
        {
            inventTransOriginRecId = canIncludeLineMap.lookup(_salesLine.RecId);
        }

        return inventTransOriginRecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSelectedLines</Name>
				<Source><![CDATA[
    boolean checkSelectedLines(boolean close = false)
    {
        purchCreateFromSalesOrder.parmTmpPurchLinePrice(tmpPurchLinePrice);
        purchCreateFromSalesOrder.parmTransferAddress(transferAddress.value());
        purchCreateFromSalesOrder.parmRecalculateDlvDates(RecalculateDlvDates.value());
        boolean ok = purchCreateFromSalesOrder.checkSelectedLines();

        if (!close)
        {
            if (ok)
            {
                throw info("@SYS11281");
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        purchCreateFromSalesOrder.parmTmpPurchLinePrice(tmpPurchLinePrice);
        purchCreateFromSalesOrder.parmTransferAddress(transferAddress.value());
        purchCreateFromSalesOrder.parmRecalculateDlvDates(RecalculateDlvDates.value());
        purchCreateFromSalesOrder.parmInsertMinMaxQty(checkBoxMinMaxQty.value());
        purchCreateFromSalesOrder.parmSearchForAgreements(searchForAgreements.value());

        purchCreateFromSalesOrder.parmTransferDeliveryAddressFromAgreement(false);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeAll</Name>
				<Source><![CDATA[
    void  includeAll(boolean  _markall = false)
    {
        boolean     isWarning = false;
        QueryRun qR = new QueryRun(salesLine_ds.query());

        delayMultiLineDiscountCalculation = true;
        accountNumberSet = new Set(Types::String);

        while (qR.next())
        {
            NoYes included = salesLine_ds.included(true, qR.get(tableNum(SalesLine)), _markall);
            if (_markall && included == NoYes::No)
            {
                isWarning = true;
            }
        }

        // No need to recalculate multiple line discount when include all is disabled because all the discount 
        // information has been reset by method initTmpPurchLinePriceToCheckSalesLineIncluded
        if (delayMultiLineDiscountCalculation && _markall)
        {
            element.delayRecalcMultiLineDiscount();
        }

        delayMultiLineDiscountCalculation = false;
        accountNumberSet = null;

        salesLine_ds.refreshEx(-1);

        if (isWarning)
        {
            warning("@SYS87374");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();

        purchCreateFromSalesOrder = element.args().caller();

        if (!purchCreateFromSalesOrder)
        {
            throw error("@SYS22539");
        }

        purchCreateFromSalesOrder.parmInitFields(true);

        canIncludeLineMap = new Map(typeName2Type(extendedTypeStr(RecId)), typeName2Type(extendedTypeStr(RecId)));

        checkBoxMinMaxQty.value(purchCreateFromSalesOrder.parmInsertMinMaxQty());

        transferAddress.visible(false);

        this.control(this.controlId(formControlStr(PurchCreateFromSalesOrder, Currency)))
            .allowEdit(!PurchAutoCreateFromSOCurrencyCodeNotEditableFlight::instance().isEnabled());

        if (purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip)
        {
            transferAddress.value(true);
            transferAddress.allowEdit(false);
            transferAddress.visible(true);
            checkBoxMinMaxQty.value(false);
            element.design().caption("@SYS78212");
            qty.allowEdit(false);
            checkBoxMinMaxQty.allowEdit(false);
            qtyInSalesUnit.visible(false);
            pdsCWQty.allowEdit(false);
            RecalculateDlvDates.visible(SalesDirDelivRecalcDateFeature::instance().isEnabled());
        }

        if (purchCreateFromSalesOrder.parmSalesTable() || purchCreateFromSalesOrder.parmSalesLine())
        {
            purchCreateFromSalesOrder.parmExecuteQuery(true);
        }

        if (!mapModifiedQty)
        {
            mapModifiedQty = new Map(typeName2Type(extendedTypeStr(RecId)), Types::Enum);
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);

        // Notify if any sales line related to event kanbans is excluded in the form query
        Query peggingExclusionsQuery = purchCreateFromSalesOrder.querySalesLine(salesline_ds.query(), true);
        QueryRun peggingExclusionsQueryRun = new QueryRun(peggingExclusionsQuery);

        if (peggingExclusionsQueryRun.next())
        {
            warning("@SYS345038");
        }

        salesLine_ds.query(purchCreateFromSalesOrder.querySalesLine(salesline_ds.query()));

        if (purchCreateFromSalesOrder.parmCallerRecord().TableId == tableNum(SalesTable)
        ||  purchCreateFromSalesOrder.parmCallerRecord().TableId == tableNum(SalesLine))
        {
            buttonselect.visible(false);

            // SalesId range must be locked when caller record is SalesTable or SalesLine because under that circumstances temporary table tmpPurchLinePrice
            // is loaded only for caller sales order and therefore user is not able to create POs from the other sales order lines.
            if (salesLine_ds.queryBuildDataSource().rangeField(fieldNum(SalesLine, SalesId)))
            {
                salesLine_ds.queryBuildDataSource().rangeField(fieldNum(SalesLine, SalesId)).status(RangeStatus::Locked);
            }
        }

        markAllFormObservable = new FormObservableLink();
        multiLineDiscountObservable = new FormObservableLink();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFields</Name>
				<Source><![CDATA[
    void initFields()
    {
        calledFromInitFields = true;
        boolean checkBoxMinMaxQtySet = checkBoxMinMaxQty.value();

        QueryRun queryRun = new QueryRun(salesLine_ds.query());
        while (queryRun.next())
        {
            SalesLine getSalesLine = queryRun.get(tableNum(SalesLine));

            element.selectTmpPurchLinePrice(getSalesLine);

            tmpPurchLinePrice.initFromSalesLine(getSalesLine);

            tmpPurchLinePrice.write();

            salesLine_ds.specifyVendAccount(true, getSalesLine, element.retrieveVendAccount(getSalesLine));

            if (element.isDirectDelivery(getSalesLine))
            {
                salesLine_ds.specifyPurchUnit(true, getSalesLine, getSalesLine.SalesUnit);
                salesLine_ds.specifyMinMaxQty(true, getSalesLine, element.retrieveMinMaxQtyForDeliveryTypeDropShip(getSalesLine.RemainSalesPhysical, getSalesLine));
            }
            else
            {
                PurchQty purchQuantity = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(getSalesLine.ItemId,
                                                                                                               getSalesLine.InventDimId,
                                                                                                               getSalesLine.getPurchQty(),
                                                                                                               getSalesLine.SalesUnit,
                                                                                                               tmpPurchLinePrice.PurchUnit,
                                                                                                               NoYes::Yes);

                if (checkBoxMinMaxQtySet)
                {
                    purchQuantity = InventTable::calculateOrderQuantity(getSalesLine.inventTable().inventItemPurchSetup(getSalesLine.InventDimId),
                                                                        getSalesLine.InventDimId,
                                                                        purchQuantity,
                                                                        getSalesLine.inventTable().purchUnitId(),
                                                                        false);
                }
                salesLine_ds.specifyMinMaxQty(true, getSalesLine, element.retrieveMinMaxQty(purchQuantity, getSalesLine));
            }

            // Automatically set the include grid column if
            // the sales line drop ship flag is set.
            if (getSalesLine.mcrSalesLineDropShipment().DropShipment == noyes::Yes)
            {
                salesline_ds.included(true, getSalesLine, noyes::Yes);
            }

            element.resetPriceAgreementAndLineAmountIfNeeded(tmpPurchLinePrice);

            if (mapModifiedQty.exists(getSalesLine.RecId))
            {
                mapModifiedQty.insert(getSalesLine.RecId, NoYes::No);
            }

        }
        calledFromInitFields = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDirectDelivery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the delivery type of the <c>PurchCreateFromSalesOrder</c> instance is direct delivery.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    /// <returns>
    /// true if the delivery type is direct delivery; otherwise, false.
    /// </returns>
    protected boolean isDirectDelivery(SalesLine _salesLine)
    {
        return purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveMinMaxQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the quantity to initialize the purchase quantity on the purchase line price record.
    /// </summary>
    /// <param name="_newMinMaxQty">
    /// The quantity to retrieve.
    /// </param>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    /// <returns>
    /// New quantity for purchase quantity initialization.
    /// </returns>
    protected ProductQuantity retrieveMinMaxQty(ProductQuantity _newMinMaxQty, SalesLine _salesLine)
    {
        return _newMinMaxQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveMinMaxQtyForDeliveryTypeDropShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the quantity to initialize the purchase quantity on the purchase line price record for direct delivery.
    /// </summary>
    /// <param name="_newMinMaxQty">
    /// The quantity to retrieve.
    /// </param>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    /// <returns>
    /// New quantity for purchase quantity initialization.
    /// </returns>
    protected ProductQuantity retrieveMinMaxQtyForDeliveryTypeDropShip(ProductQuantity _newMinMaxQty, SalesLine _salesLine)
    {
        return _newMinMaxQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the vendor account based on the sales line record.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    /// <returns>
    /// A vendor account.
    /// </returns>
    protected VendAccount retrieveVendAccount(SalesLine _salesLine)
    {
        return _salesLine.inventTable().primaryVendorId(_salesLine.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTmpPurchLinePriceToCheckSalesLineIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>TmpPurchLinePrice</c> record that's used to check if the sales line can be included.
    /// </summary>
    /// <param name = "_salesLine">The <c>SalesLine</c> record used for the initialization.</param>
    /// <param name = "_included">Determines whether the sales line is marked as included.</param>
    public void initTmpPurchLinePriceToCheckSalesLineIncluded(SalesLine _salesLine, NoYes _included)
    {
        tmpPurchLinePrice.SalesId           = _salesLine.SalesId;
        tmpPurchLinePrice.LineNum           = _salesLine.LineNum;
        tmpPurchLinePrice.SalesLineRefRecId = _salesLine.RecId;
        tmpPurchLinePrice.Included          = _included;
        tmpPurchLinePrice.ItemId            = _salesLine.ItemId;
        tmpPurchLinePrice.InventDimId       = _salesLine.InventDimId;

        if (tmpPurchLinePrice.Included == NoYes::No)
        {
            tmpPurchLinePrice.MultiLinePercent = 0;
            tmpPurchLinePrice.MultiLineDisc    = 0;
            tmpPurchLinePrice.setLineAmount();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertMinMaxQty</Name>
				<Source><![CDATA[
    void  insertMinMaxQty(boolean _insertMinMaxQty = false)
    {
        QueryRun qR = new QueryRun(salesLine_ds.query());

        while (qR.next() && _insertMinMaxQty)
        {
            SalesLine getSalesLine = qR.get(tableNum(SalesLine));

            element.selectTmpPurchLinePrice(getSalesLine);

            if (!tmpPurchLinePrice.isInterCompanyVendor())
            {
                Qty minMaxQty = InventTable::calculateOrderQuantity(getSalesLine.inventTable().inventItemPurchSetup(tmpPurchLinePrice.InventDimId),
                                                                    tmpPurchLinePrice.InventDimId,
                                                                    tmpPurchLinePrice.PurchQty,
                                                                    tmpPurchLinePrice.PurchUnit,
                                                                    false);

                tmpPurchLinePrice.SalesId           = getSalesLine.SalesId;
                tmpPurchLinePrice.LineNum           = getSalesLine.LineNum;
                tmpPurchLinePrice.SalesLineRefRecId = getSalesLine.RecId;
                tmpPurchLinePrice.PurchQty          = minMaxQty;
                tmpPurchLinePrice.ItemId            = getSalesLine.ItemId;
                tmpPurchLinePrice.InventDimId       = getSalesLine.InventDimId;

                if (PdsGlobal::pdsIsCWItem(getSalesLine.ItemId))
                {
                    Qty cwMinMaxQty = PdsCatchWeight::cwQty(getSalesLine.ItemId,minMaxQty);
                    tmpPurchLinePrice.PdsCWQty = cwMinMaxQty;
                    tmpPurchLinePrice.PurchQty = PdsCatchWeight::inventQty(
                                                        getSalesLine.ItemId,
                                                        cwMinMaxQty);
                }
                tmpPurchLinePrice.write();

                InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy = tmpPurchLinePrice.interCompanyActionPolicy();

                if (element.mustResetPrice(interCompanyEndpointActionPolicy))
                {
                    tmpPurchLinePrice.salesPurchLineInterface().resetPriceAgreement();
                    tmpPurchLinePrice.salesPurchLineInterface().setPriceAgreement(InventDim::find(tmpPurchLinePrice.InventDimId));
                }

                tmpPurchLinePrice.setLineAmount();
                tmpPurchLinePrice.update();

                if ((!interCompanyEndpointActionPolicy || interCompanyEndpointActionPolicy.PriceDiscountSearch)
                   && tmpPurchLinePrice.Included == NoYes::Yes)
                {
                    salesLine_ds.recalcMultiLineDiscount(tmpPurchLinePrice);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustResetPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the price must be reset based on the intercompany end point policy.
    /// </summary>
    /// <param name = "_interCompanyEndpointActionPolicy">The intercompany policy.</param>
    /// <returns>true if the price must be reset; otherwise, false.</returns>
    protected boolean mustResetPrice(InterCompanyEndpointActionPolicy _interCompanyEndpointActionPolicy)
    {
        return (!_interCompanyEndpointActionPolicy || _interCompanyEndpointActionPolicy.PriceDiscountSearch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefVendAccount</Name>
				<Source><![CDATA[
    void jumpRefVendAccount(Common common, Object object, str parm = '')
    {
        Args args = new Args();
        args.record(common);
        args.caller(object);
        args.parm(parm);

        new MenuFunction(menuitemDisplayStr(VendTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>select</Name>
				<Source><![CDATA[
    void select()
    {
        QueryRun  selectSaleslines = new QueryRun(salesLine_ds.query());

        if (selectSaleslines.prompt())
        {
            purchCreateFromSalesOrder.parmExecuteQuery(true);
            purchCreateFromSalesOrder.parmInitFields(true);
            salesLine_ds.query(selectSaleslines.query());
            salesLine_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectTmpPurchLinePrice</Name>
				<Source><![CDATA[
    public void selectTmpPurchLinePrice(SalesLine _salesLine)
    {
        select tmpPurchLinePrice
           where tmpPurchLinePrice.SalesId           == _salesLine.SalesId
              && tmpPurchLinePrice.LineNum           == _salesLine.LineNum
              && tmpPurchLinePrice.SalesLineRefRecId == _salesLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toBeDirectDelivered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the purchase order line is intended for direct delivery.
    /// </summary>
    /// <returns>
    /// true if the purchase order line is of type direct delivery; otherwise, false.
    /// </returns>
    public boolean toBeDirectDelivered()
    {
        return purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventMovement movement = InventMovement::construct(salesLine);
        InterCompanyEndpointActionPolicy interCompanyActionPolicy;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init :
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl_Frm_Mov::newFromFormMovement(element, movement);
                }

            case InventDimFormDesignUpdate::Active :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::FieldChange :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(false);
                break;

            default : throw error(strFmt("@SYS54195",funcName()));
        }

        element.selectTmpPurchLinePrice(salesLine);

        if (tmpPurchLinePrice.isInterCompanyVendor())
        {
            interCompanyActionPolicy = tmpPurchLinePrice.interCompanyActionPolicy();

            qty.allowEdit(false);
            purchasePrice.allowEdit(interCompanyActionPolicy.EditPrice);
            price.allowEdit(interCompanyActionPolicy.EditPrice);
            discount.allowEdit(interCompanyActionPolicy.EditDiscount);
        }
        else
        {
            qty.allowEdit(true);
            purchasePrice.allowEdit(true);
            price.allowEdit(true);
            discount.allowEdit(true);
        }

        if (purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip)
        {
            qty.allowEdit(false);
            pdsCWQty.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInterCompanyDelivery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if intercompany delivery options are valid for the specified combination of sales order line and vendor.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales order line.
    /// </param>
    /// <param name="_vendAccount">
    /// Identification of the vendor.
    /// </param>
    /// <param name="_showWarnings">
    /// true if warning messages should be added to the info log if any warnings found; otherwise, false.
    /// </param>
    /// <returns>
    /// true if the combinations are valid; otherwise, false.
    /// </returns>
    public boolean validateInterCompanyDelivery(
        SalesLine   _salesLine,
        VendAccount _vendAccount,
        boolean     _showWarnings)
    {
        if (_salesLine.InventRefTransId)
        {
            return true;
        }

        VendTable vendTable = VendTable::find(_vendAccount);
        if (!vendTable.interCompanyTradingRelationActive())
        {
            // Vendor not related to intercompany trading
            return true;
        }

        SalesTable salesTable = _salesLine.salesTable();

        if (purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip
        && !salesTable.InterCompanyDirectDelivery)
        {
            if (_showWarnings)
            {
                warning("@SYS94401");
            }
            // No need to do the next validation as the delivery type values are excluding each other
            return false;
        }

        if (purchCreateFromSalesOrder.tradeLineDlvType() != TradeLineDlvType::DropShip
        &&  salesTable.InterCompanyDirectDelivery)
        {
            if (_showWarnings)
            {
                warning("@SYS94405");
            }
            return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesLineIncluded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the sale line is included for the movement.
    /// </summary>
    /// <param name = "_salesLine">The sales line record.</param>
    /// <returns>true, if the sales line is included for the movement; otherwise, false.</returns>
    protected boolean isSalesLineIncluded(SalesLine _salesLine)
    {
        if (_salesLine.isDropShipment() || _salesLine.checkIfMarked())
        {
            return true;
        }

        InventMovement movement = InventMovement::constructNoThrow(_salesLine);
        return movement && !movement.checkAllowManualMarking();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the vendor account.
    /// </summary>
    /// <param name="_vendAccount">
    /// The vendor account number which is to be validated.
    /// </param>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    /// <returns>
    /// true if the vendor account is valid; otherwise, false.
    /// </returns>
    protected boolean validateVendAccount(VendAccount _vendAccount, SalesLine _salesLine)
    {
        if (!VendTable::exist(_vendAccount))
        {
            warning(strFmt("@SYS11817",_vendAccount));
            return false;
        }
        else if (purchCreateFromSalesOrder.isVendorBlocked(_vendAccount))
        {
            if (calledFromInitFields)
            {
                warning(strFmt("@SYS127748", _salesLine.ItemId, _vendAccount));
            }
            else
            {
                warning(strFmt("@SYS1138", _vendAccount));
            }
            return false;
        }

        if (tmpPurchLinePrice.AccountNum == _vendAccount)
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmountOnVendorAccountEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the line amount during the edit of the vendor account.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    [Replaceable]
    protected void setLineAmountOnVendorAccountEdit(SalesLine _salesLine)
    {
        element.setLineAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the currency code for the given vendor account number.
    /// </summary>
    /// <param name="_vendAccount">
    /// The vendor account number.
    /// </param>
    /// <returns>
    /// The currency code of a vendor record.
    /// </returns>
    [Replaceable]
    protected CurrencyCode retrieveCurrencyCode(VendAccount _vendAccount)
    {
        return VendTable::find(_vendAccount).Currency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmountOnPriceComponentEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the line amount during the edit of the price component.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    [Replaceable]
    protected void setLineAmountOnPriceComponentEdit(SalesLine _salesLine)
    {
        element.setLineAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmountOnPurchaseQuantityEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the line amount during the edit of the purchase quantity.
    /// </summary>
    /// <param name="_salesLine">
    /// The sales line record.
    /// </param>
    [Replaceable]
    protected void setLineAmountOnPurchaseQuantityEdit(SalesLine _salesLine)
    {
        element.setLineAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    private void setLineAmount()
    {
        tmpPurchLinePrice.setLineAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeApprovedVendorListCheck</Name>
				<Source><![CDATA[
	/// <summary>
    ///		Initializes the <c>PdsApprovedVendorListCheck</c> class members.
    /// </summary>
    /// <param name = "_avlCheck">
    ///		An instance of <c>PdsApprovedVendorListCheck</c> class.
	/// </param>
    /// <param name = "_vendAccount">
    ///		A vendor account.
	/// </param>
    protected void initializeApprovedVendorListCheck(PdsApprovedVendorListCheck _avlCheck, VendAccount _vendAccount)
    {
        _avlCheck.parmVendAccount(_vendAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isIncluded</Name>
				<Source><![CDATA[
	/// <summary>
    ///		Determines whether the sales line is included.
    /// </summary>
    /// <param name = "_tmpPurchLinePrice">
    ///		A <c>TmpPurchLinePrice</c> record.
	/// </param>
    /// <returns>
    ///		true, if the sales line is included; otherwise, false.
	/// </returns>
    protected boolean isIncluded(TmpPurchLinePrice _tmpPurchLinePrice)
    {
        if (_tmpPurchLinePrice.Included)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetPriceAgreementAndLineAmountIfNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Price agreement search and line amount recalculation
    /// </summary>
    /// <param name = "_tmpPurchLinePrice">
    ///		A <c>TmpPurchLinePrice</c> record.
    /// </param>
    protected void resetPriceAgreementAndLineAmountIfNeeded(TmpPurchLinePrice _tmpPurchLinePrice = tmpPurchLinePrice)
    {
        if (element.mustResetPrice(_tmpPurchLinePrice.interCompanyActionPolicy()))
        {
            _tmpPurchLinePrice.salesPurchLineInterface().resetPriceAgreement();
            _tmpPurchLinePrice.salesPurchLineInterface().setPriceAgreement(InventDim::find(_tmpPurchLinePrice.InventDimId), true);
            _tmpPurchLinePrice.setLineAmount();
            _tmpPurchLinePrice.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delayRecalcMultiLineDiscount</Name>
				<Source><![CDATA[
    private void delayRecalcMultiLineDiscount()
    {
        if (accountNumberSet && accountNumberSet.elements())
        {
            SetEnumerator se = accountNumberSet.getEnumerator();
            while (se.moveNext())
            {
                CustVendAC accountNum = se.current();
                select firstonly tmpPurchLinePrice
                    where tmpPurchLinePrice.AccountNum  == accountNum &&
                          tmpPurchLinePrice.Included    == NoYes::Yes;

                VendTable vendTable = VendTable::find(tmpPurchLinePrice.AccountNum);

                PurchTable purchTable = salesLine_ds.createTmpPurchTable(tmpPurchLinePrice.AccountNum,
                                                      vendTable.MultiLineDisc,
                                                      vendTable.Currency);
            
                purchTable.PriceDiscHeading::updateMultiLineDiscTmp(tmpPurchLinePrice, tmpPurchLinePrice.AccountNum);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SalesLine</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(SalesLine,pdsCWUnitId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyCWMinMaxQty</Name>
						<Source><![CDATA[
        /// <summary>
        /// Return and or set min or max catch weight quantity field
        /// </summary>
        /// <param name="_set">Set value to field</param>
        /// <param name="_salesLine">Current SalesLine record</param>
        /// <param name="_cwMinMaxQty">min/max catch weight qty in field</param>
        /// <returns>Current min or max catch weight qty</returns>
        edit PdsCWInventQty specifyCWMinMaxQty(boolean _set,
                                  SalesLine _salesLine,
                                  Qty       _cwMinMaxQty)

        {
            Qty cwMinMaxQty = 0;

            if (PdsGlobal::pdsIsCWItem(_salesLine.ItemId))
            {
                select tmpPurchLinePrice
                    where tmpPurchLinePrice.SalesId == _salesLine.SalesId &&
                          tmpPurchLinePrice.LineNum == _salesLine.LineNum;

                if (tmpPurchLinePrice)
                {
                    cwMinMaxQty = tmpPurchLinePrice.PdsCWQty;
                }

                if (_set)
                {
                    if (_cwMinMaxQty)
                    {
                        tmpPurchLinePrice.SalesId       = _salesLine.SalesId;
                        tmpPurchLinePrice.LineNum       = _salesLine.LineNum;
                        tmpPurchLinePrice.PdsCWQty      = _cwMinMaxQty;
                        tmpPurchLinePrice.PurchQty      = PdsCatchWeight::inventQty(
                                                            _salesLine.ItemId,
                                                            _cwMinMaxQty,
                                                            _salesLine.SalesUnit);

                        mapModifiedQty.insert(_salesLine.RecId, NoYes::Yes);

                        cwMinMaxQty = tmpPurchLinePrice.PdsCWQty;
                        tmpPurchLinePrice.write();
                    }
                    else
                    {
                        tmpPurchLinePrice.delete();
                        cwMinMaxQty = 0;
                    }
                }
            }
            return cwMinMaxQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>purchSalesQtyDiffInSalesUnit</Name>
						<Source><![CDATA[
        display MarkupQty purchSalesQtyDiffInSalesUnit(SalesLine _salesLine)
        {
            return this.purchQtyInSalesUnit(_salesLine) - _salesLine.onOrderInSalesUnit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>purchQtyInSalesUnit</Name>
						<Source><![CDATA[
        display PurchQty purchQtyInSalesUnit(SalesLine _salesLine)
        {
            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_salesLine.ItemId,
                                                                                         _salesLine.InventDimId,
                                                                                         this.specifyMinMaxQty(false, _salesLine, 0),
                                                                                         tmpPurchLinePrice.PurchUnit,
                                                                                         _salesLine.SalesUnit,
                                                                                         NoYes::Yes);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyPurchUnit</Name>
						<Source><![CDATA[
        edit PurchUnit specifyPurchUnit(boolean _set, SalesLine _salesLine, PurchUnit _purchUnit)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,PurchUnit),_purchUnit);
        }

]]></Source>
					</Method>
					<Method>
						<Name>netAmountMST</Name>
						<Source><![CDATA[
        display AmountMST netAmountMST(SalesLine _salesLine)
        {
            AmountMST amountMST;
            multiLineDiscountObservable.observe();

            element.selectTmpPurchLinePrice(_salesLine);

            if (tmpPurchLinePrice)
            {
                amountMST = tmpPurchLinePrice.LineAmountMst;
            }

            return amountMST;
        }

]]></Source>
					</Method>
					<Method>
						<Name>recalcMultiLineDiscount</Name>
						<Source><![CDATA[
        void recalcMultiLineDiscount(TmpPurchLinePrice _tmpPurchLinePrice)
        {
            if (delayMultiLineDiscountCalculation)
            {
                accountNumberSet.add(_tmpPurchLinePrice.AccountNum);
            }
            else
            {
                SalesId salesId = _tmpPurchLinePrice.SalesId;
                LineNum lineNum = _tmpPurchLinePrice.LineNum;
                SalesLineRefRecId salesLineRefRecId = _tmpPurchLinePrice.SalesLineRefRecId;

                VendTable vendTable = VendTable::find(_tmpPurchLinePrice.AccountNum);

                PurchTable purchTable = this.createTmpPurchTable(_tmpPurchLinePrice.AccountNum,
                                                      vendTable.MultiLineDisc,
                                                      vendTable.Currency);
            
                purchTable.PriceDiscHeading::updateMultiLineDiscTmp(_tmpPurchLinePrice,_tmpPurchLinePrice.AccountNum);

                select firstonly _tmpPurchLinePrice
                    where _tmpPurchLinePrice.SalesId           == salesId
                       && _tmpPurchLinePrice.LineNum           == lineNum
                       && _tmpPurchLinePrice.SalesLineRefRecId == salesLineRefRecId;
            }


            multiLineDiscountObservable.markChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>createTmpPurchTable</Name>
						<Source><![CDATA[
        PurchTable createTmpPurchTable(AccountNum _accountNum,
                                      MultiLnDiscCode _multiLineDisc,
                                      CurrencyCode _currency)
        {
            PurchTable purchTable;

            purchTable.setTmp();

            purchTable.OrderAccount = _accountNum;
            purchTable.MultiLineDisc = _multiLineDisc;
            purchTable.CurrencyCode = _currency;

            return purchTable;
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkAllowCreate</Name>
						<Source><![CDATA[
        display ImageRes checkAllowCreate(SalesLine _salesLine)
        {
            return this.retrieveAllowCreateImage(_salesLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>retrieveAllowCreateImage</Name>
						<Source><![CDATA[
        /// <summary>
        /// Retrieves the image for allow create operation.
        /// </summary>
        /// <param name="_salesLine">
        /// The sales line record.
        /// </param>
        /// <returns>
        /// The image for the allow create operation.
        /// </returns>
        [Replaceable]
        protected ImageRes retrieveAllowCreateImage(SalesLine _salesLine)
        {
            #resAppl

            if (_salesLine.isDropShipment() || _salesLine.qtyMarked())
            {
                return #ImageWarning;
            }

            if (element.toBeDirectDelivered() && _salesLine.isPackingSlipOrInvoiceUpdated())
            {
                return #ImageWarning;
            }

            if (!element.canIncludeSalesLine(_salesLine))
            {
                return #ImageWarning;
            }

            if (!_salesLine.InventRefTransId)
            {
                if (_salesLine.salesTable().InterCompanyDirectDelivery)
                {
                    if (purchCreateFromSalesOrder.tradeLineDlvType() != TradeLineDlvType::DropShip)
                    {
                        return #ImageWarning;
                    }
                    else
                    {
                        if (_salesLine.pickedInTotalSalesUnit())
                        {
                            return #ImageWarning;
                        }
                    }
                }
                if (_salesLine.Scrap)
                {
                    return #ImageWarning;
                }

                if (element.preventIncludeSalesLine(_salesLine))
                {
                    return #ImageWarning;
                }
            }

            return 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>netAmount</Name>
						<Source><![CDATA[
        display AmountCur netAmount(SalesLine _salesLine)
        {
            AmountCur cur;
            multiLineDiscountObservable.observe();

            element.selectTmpPurchLinePrice(_salesLine);

            if (tmpPurchLinePrice)
            {
                cur = tmpPurchLinePrice.LineAmount;
            }
            return cur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyUnitPrice</Name>
						<Source><![CDATA[
        edit Price specifyUnitPrice(boolean _set, SalesLine _salesLine, Price _price)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,Price),_price);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyCurrencyCode</Name>
						<Source><![CDATA[
        edit CurrencyCode specifyCurrencyCode(boolean _set, SalesLine _salesLine, CurrencyCode _currencyCode)
        {
            CurrencyCode code;

            if (_set)
            {
                tmpPurchLinePrice.CurrencyCode = _currencyCode;
                tmpPurchLinePrice.setLineAmount();
                tmpPurchLinePrice.write();

                code = _currencyCode;
            }
            else
            {
                element.selectTmpPurchLinePrice(_salesLine);

                if (tmpPurchLinePrice)
                {
                    code = tmpPurchLinePrice.CurrencyCode;
                }
            }

            return code;

        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyPriceUnit</Name>
						<Source><![CDATA[
        edit PriceUnit specifyPriceUnit(boolean _set, SalesLine _salesLine, PriceUnit _priceUnit)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,PriceUnit),_priceUnit);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyMarkup</Name>
						<Source><![CDATA[
        edit PurchMarkup specifyMarkup(boolean _set, SalesLine _salesLine, PurchMarkup _priceMarkup)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,Markup),_priceMarkup);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyLineDiscount</Name>
						<Source><![CDATA[
        edit DiscAmount specifyLineDiscount(boolean _set, SalesLine _salesLine, DiscAmount _amount)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,LineDisc),_amount);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyLinePct</Name>
						<Source><![CDATA[
        edit DiscPct specifyLinePct(boolean _set, SalesLine _salesLine, DiscPct _percent)
        {
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,LinePercent),_percent);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyMultiLinePct</Name>
						<Source><![CDATA[
        edit PurchMultiLnPercent specifyMultiLinePct(boolean _set, SalesLine _salesLine, PurchMultiLnPercent _percent)
        {
            multiLineDiscountObservable.observe();
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,MultiLinePercent),_percent);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyMultiLineDisc</Name>
						<Source><![CDATA[
        edit PurchMultiLnDisc specifyMultiLineDisc(boolean _set,SalesLine _salesLine, PurchMultiLnDisc _disc)
        {
            multiLineDiscountObservable.observe();
            return this.specifyPriceComponent(_set,_salesLine,fieldNum(TmpPurchLinePrice,MultiLineDisc),_disc);
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyPriceComponent</Name>
						<Source><![CDATA[
        anytype specifyPriceComponent(boolean _set, SalesLine _salesLine, fieldId _priceField, anytype _priceFieldValue)
        {
            anytype priceFieldValue;

            element.selectTmpPurchLinePrice(_salesLine);

            if (tmpPurchLinePrice)
            {
                priceFieldValue = tmpPurchLinePrice.(_priceField);
            }

            if (_set)
            {
                tmpPurchLinePrice.SalesId           = _salesLine.SalesId;
                tmpPurchLinePrice.LineNum           = _salesLine.LineNum;
                tmpPurchLinePrice.SalesLineRefRecId = _salesLine.RecId;
                tmpPurchLinePrice.(_priceField)     = _priceFieldValue;
                tmpPurchLinePrice.write();
                element.setLineAmountOnPriceComponentEdit(_salesLine);
                tmpPurchLinePrice.write();
            }

            return priceFieldValue;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            if (purchCreateFromSalesOrder.parmExecuteQuery())
            {
                super();
                if (purchCreateFromSalesOrder.parmInitFields())
                {
                    element.initFields();
                    purchCreateFromSalesOrder.parmInitFields(false);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyVendAccount</Name>
						<Source><![CDATA[
        edit VendAccount specifyVendAccount(boolean _set, SalesLine _salesLine, VendAccount _vendAccount)
        {
            VendAccount vendAccount;
            VendAccount oldVendAccount;

            element.selectTmpPurchLinePrice(_salesLine);

            if (tmpPurchLinePrice)
            {
                vendAccount = tmpPurchLinePrice.AccountNum;
            }

            if (_set)
            {
                if (_vendAccount && #PdsApprovedVendorListEnabled)
                {
                    PdsApprovedVendorListCheck avlCheck = PdsApprovedVendorListCheck::newFromTable(_salesLine);
                    
                    element.initializeApprovedVendorListCheck(avlCheck, _vendAccount);

                    if (!avlCheck.validateCheck())
                    {
                        //
                        // need to return here as the vendor account
                        // field is being reset to its previous value
                        // and the following checks are not to be performed
                        //
                        return vendAccount;
                    }
                }

                if (_vendAccount)
                {
                    oldVendAccount = tmpPurchLinePrice.AccountNum;

                    if (!element.validateVendAccount(_vendAccount, _salesLine))
                    {
                        return VendAccount;
                    }

                    tmpPurchLinePrice.SalesId           = _salesLine.SalesId;
                    tmpPurchLinePrice.LineNum           = _salesLine.LineNum;
                    tmpPurchLinePrice.SalesLineRefRecId = _salesLine.RecId;
                    tmpPurchLinePrice.AccountNum        = _vendAccount;
                    tmpPurchLinePrice.CurrencyCode      = element.retrieveCurrencyCode(_vendAccount);
                    if (purchCreateFromSalesOrder.tradeLineDlvType() == TradeLineDlvType::DropShip)
                    {
                        if (tmpPurchLinePrice.isInterCompanyVendor())
                        {
                            tmpPurchLinePrice.PurchQty = _salesLine.getPurchQty();
                        }
                    }
					else
                    {
                        if (tmpPurchLinePrice.isInterCompanyVendor())
                        {
                            tmpPurchLinePrice.PurchUnit = _salesLine.SalesUnit;
                            tmpPurchLinePrice.PurchQty = _salesLine.getPurchQty();
                        }
                        else
                        {
                            tmpPurchLinePrice.PurchUnit = _salesLine.inventTable().purchUnitId();
                            tmpPurchLinePrice.PurchQty = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(tmpPurchLinePrice.ItemId,
                                                                                                                           tmpPurchLinePrice.InventDimId,
                                                                                                                           _salesLine.getPurchQty(),
                                                                                                                           _salesLine.SalesUnit,
                                                                                                                           tmpPurchLinePrice.PurchUnit,
                                                                                                                           NoYes::Yes);
                        }
                    }
                    tmpPurchLinePrice.write();

                    if (tmpPurchLinePrice.Included == NoYes::Yes)
                    {
                        if (salesLine_ds.checkAllowCreate(_salesLine) != 0)
                        {
                            salesLine_ds.included(true,_salesLine,false);

                            if (!_salesLine.InventRefTransId)
                            {
                                element.validateInterCompanyDelivery(_salesLine, tmpPurchLinePrice.AccountNum, true);

                                if (_salesLine.Scrap)
                                {
                                    warning("@SYS94407");
                                }

                                if (element.preventIncludeSalesLine(_salesLine))
                                {
                                    warning("@SYS105405");
                                }
                            }
                        }
                    }

                    vendAccount = tmpPurchLinePrice.AccountNum;

                    InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy = tmpPurchLinePrice.interCompanyActionPolicy();

                    if (element.mustResetPrice(interCompanyEndpointActionPolicy))
                    {
                        tmpPurchLinePrice.salesPurchLineInterface().resetPriceAgreement();
                        tmpPurchLinePrice.salesPurchLineInterface().setPriceAgreement(InventDim::find(tmpPurchLinePrice.InventDimId), true);
                    }

                    element.setLineAmountOnVendorAccountEdit(_salesLine);
                    tmpPurchLinePrice.update();

                    if (!interCompanyEndpointActionPolicy || interCompanyEndpointActionPolicy.PriceDiscountSearch)
                    {
                        if (tmpPurchLinePrice.Included == NoYes::Yes)
                        {
                            this.recalcMultiLineDiscount(tmpPurchLinePrice);
                        }
                        if (oldVendAccount)
                        {
                            select firstonly tmpPurchLinePrice where tmpPurchLinePrice.AccountNum == oldVendAccount;

                            if (tmpPurchLinePrice)
                            {
                                this.recalcMultiLineDiscount(tmpPurchLinePrice);
                            }
                        }
                    }
                }
            }

            return vendAccount;
        }

]]></Source>
					</Method>
					<Method>
						<Name>specifyMinMaxQty</Name>
						<Source><![CDATA[
        edit ProductQuantity specifyMinMaxQty(boolean _set, SalesLine _salesLine, ProductQuantity _minMaxQty)
        {
            ProductQuantity minMaxQty;

            element.selectTmpPurchLinePrice(_salesLine);

            if (tmpPurchLinePrice)
            {
                minMaxQty = tmpPurchLinePrice.PurchQty;
            }

            if (_set)
            {
                tmpPurchLinePrice.SalesId           = _salesLine.SalesId;
                tmpPurchLinePrice.LineNum           = _salesLine.LineNum;
                tmpPurchLinePrice.SalesLineRefRecId = _salesLine.RecId;
                tmpPurchLinePrice.PurchQty          = _minMaxQty;

                mapModifiedQty.insert(_salesLine.RecId, NoYes::Yes);
                InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy = tmpPurchLinePrice.interCompanyActionPolicy();

                if (element.mustResetPrice(interCompanyEndpointActionPolicy))
                {
                    tmpPurchLinePrice.salesPurchLineInterface().resetPriceAgreement();
                    tmpPurchLinePrice.salesPurchLineInterface().setPriceAgreement(InventDim::find(tmpPurchLinePrice.InventDimId));
                }

                element.setLineAmountOnPurchaseQuantityEdit(_salesLine);
                tmpPurchLinePrice.write();

                if (tmpPurchLinePrice.Included == NoYes::Yes
                && (!interCompanyEndpointActionPolicy || interCompanyEndpointActionPolicy.PriceDiscountSearch))
                {
                    this.recalcMultiLineDiscount(tmpPurchLinePrice);
                }

                minMaxQty = _minMaxQty;
            }

            return minMaxQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>canBeIncluded</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the specified sales line is allowed to be included.
        /// </summary>
        /// <param name="_salesLine">
        /// The sales line record which is to be included.
        /// </param>
        /// <returns>
        /// true if the sales line can be included; otherwise, false.
        /// </returns>
        [Replaceable]
        protected boolean canBeIncluded(SalesLine _salesLine)
        {
            if (element.isSalesLineIncluded(_salesLine))
            {
                return false;
            }

            if (element.toBeDirectDelivered() && _salesLine.isPackingSlipOrInvoiceUpdated())
            {
                return false;
            }

            if (!element.canIncludeSalesLine(_salesLine))
            {
                return false;
            }

            if (!_salesLine.InventRefTransId)
            {
                if (!element.validateInterCompanyDelivery(_salesLine, salesLine_ds.specifyVendAccount(false, _salesLine, ''), false))
                {
                    return false;
                }

                if (_salesLine.Scrap)
                {
                    return false;
                }

                if (element.preventIncludeSalesLine(_salesLine))
                {
                    return false;
                }
            }

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>included</Name>
						<Source><![CDATA[
        edit NoYes included(boolean _set, SalesLine _salesLine, NoYes _included)
        {
            NoYes           included;

            markAllFormObservable.observe();

            if (_set && _included)
            {
                if (!this.canBeIncluded(_salesLine))
                {
                    included = NoYes::No;
                    return included;
                }
            }

            element.selectTmpPurchLinePrice(_salesLine);

            if (element.isIncluded(tmpPurchLinePrice))
            {
                included = NoYes::Yes;
            }

            if (_set)
            {
                element.initTmpPurchLinePriceToCheckSalesLineIncluded(_salesLine, _included);

                tmpPurchLinePrice.write();

                if (this.mustRecalcMultiLineDiscount(_salesLine))
                {
                    this.recalcMultiLineDiscount(tmpPurchLinePrice);
                }
                included = _included;
            }

            return included;
        }

]]></Source>
					</Method>
					<Method>
						<Name>mustRecalcMultiLineDiscount</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether to continue discount recalculation.
        /// </summary>
        /// <param name="_salesLine">
        /// The sales line record which is to be validated.
        /// </param>
        /// <returns>
        /// true if must recalculate discount; otherwise, false.
        /// </returns>
        protected boolean mustRecalcMultiLineDiscount(SalesLine _salesLine)
        {
            InterCompanyEndpointActionPolicy interCompanyEndpointActionPolicy = tmpPurchLinePrice.interCompanyActionPolicy();
            
            return !interCompanyEndpointActionPolicy || interCompanyEndpointActionPolicy.PriceDiscountSearch;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int  active()
        {
            int ret = super();

            element.updateDesign(InventDimFormDesignUpdate::Active);

            if (PdsGlobal::pdsIsCWItem(salesLine.ItemId))
            {
                pdsCWQty.enabled(true);
                qty.enabled(false);
            }
            else
            {
                if (#PdsCatchWeightEnabled)
                {
                    pdsCWQty.enabled(false);
                }
                qty.enabled(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CheckBoxIncludeAll</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.includeAll(checkBoxincludeAll.value());
            markAllFormObservable.markChanged();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckBoxMinMaxQty</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.insertMinMaxQty(checkBoxMinMaxQty.value());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelect</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.select();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChkIncluded</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (this.isSalesLineMarked())
            {
                warning("@SYS87373");
            }

            if (element.toBeDirectDelivered() && salesLine.isPackingSlipOrInvoiceUpdated())
            {
                warning("@SYS4010296"); // The sales line has already processed delivery and therefore cannot be included for direct delivery. Create a new order line for the quantity that needs direct delivery.
            }

            if (!element.canIncludeSalesLine(salesLine))
            {
                warning("@SYS309472");
            }

            if (!salesLine.InventRefTransId)
            {
                element.validateInterCompanyDelivery(salesLine, salesLine_ds.specifyVendAccount(false, salesLine, ''), true);

                if (salesLine.Scrap)
                {
                    warning("@SYS94407");
                }

                if (element.preventIncludeSalesLine(salesLine))
                {
                    warning("@SYS105405");
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>isSalesLineMarked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the sales line is marked.
        /// </summary>
        /// <returns>
        /// true if the sales line is marked; otherwise, false.
        /// </returns>
        protected boolean isSalesLineMarked()
        {
            return salesLine.isDropShipment() || salesLine.checkIfMarked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SpecifyVendAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        void jumpRef()
        {
            VendTable vendTable;

            if (tmpPurchLinePrice.AccountNum)
            {
                vendTable = VendTable::find(tmpPurchLinePrice.AccountNum);
                element.jumpRefVendAccount(vendTable, this);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            VendTable::lookupVendAccountItem(this, salesLine.ItemId, inventDim);
        }

]]></Source>
					</Method>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        str toolTip()
        {
            VendTable vendTable;

            if (tmpPurchLinePrice.AccountNum)
            {
                vendTable = VendTable::find(tmpPurchLinePrice.AccountNum);
                return vendTable.name();
            }

            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            ret = ret && element.validateInterCompanyDelivery(salesLine, this.text(), true);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return new FormControlAmbiguousReferenceResolver(this).resolveAmbiguousReference(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Check</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.checkSelectedLines();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SalesLine</Name>
			<Table>SalesLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementSkipAutoLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>BarCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>BarCodeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Complete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ConfirmedDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegionName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteInternalRef_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDocDate_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDocNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsName_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDateControlType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTaxGroup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryTaxItemGroup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpectedRetQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExternalItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyInventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransIdReturn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceGTDId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ItemBOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemReplaced</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ItemRouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LineHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCROrderLine2PriceHistoryRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>MultiLnDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>MultiLnPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OverDeliveryPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedPrioritizedIdList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingUnitQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribAutoRes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWExpectedRetQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWInventDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsExcludeFromRebate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsSameLot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsSameLotOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceAgreementDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjProposalInventQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjProposalQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchorderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>QtyOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RemainSalesFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RemainSalesPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Reservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailBlockQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnAllowReservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnArrivalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnClosedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnDispositionCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesDeliverNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Scrap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>sequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierDlvType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticValue_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatTriangularDeal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StockedProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TaxAutogenerated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>UnderDeliveryPct</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>SalesLineIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>SalesLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS26198</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupParameters</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>CheckBoxIncludeAll</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS68914</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS1296</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>CheckBoxMinMaxQty</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS82021</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS82020</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>TransferAddress</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS69434</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS50871</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SearchForAgreements</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS309470</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS309471</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>RecalculateDlvDates</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_SalesAndMarketing:PurchCreateFromSalesOrder_RecalculateDlvDates_HelpText</HelpText>
						<Type>CheckBox</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Label>@FieldDescriptions_SalesAndMarketing:PurchCreateFromSalesOrder_RecalculateDlvDates_Label</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Lines</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FormButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelect</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS29082</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS11584</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>ButtonLineInventory</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS69645</HelpText>
												<Left>0</Left>
												<LeftMode>RightEdge</LeftMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>InventDimParmFixed</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>InventDimParmFixed</MenuItemName>
														<SaveRecord>No</SaveRecord>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<SaveRecord>No</SaveRecord>
												<Text>@SYS981</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl1</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>QuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>Grid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ChkIncluded</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS69436</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>Included</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS28109</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Ok</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>1442840574</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>checkAllowCreate</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SpecifyVendAccount</Name>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>SpecifyVendAccount</DataMethod>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesLine_ItemId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSPalletId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSPalletId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PdsCatchWeight</ConfigurationKey>
										<ElementPosition>2097151998</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyCWMinMaxQty</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesLine_PdsCWSalesUnit</Name>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWUnitId</DataMethod>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Qty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyMinMaxQty</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesLine_SalesUnit</Name>
										<ElementPosition>2122317822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesUnit</DataField>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>purchUnit</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyPurchUnit</DataMethod>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Currency</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyCurrencyCode</DataMethod>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PurchasePrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyUnitPrice</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS110628</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NetAmount</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>netAmount</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS6901</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NetAmountMST</Name>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>netAmountMST</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS125496</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesLine_SalesId</Name>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SalesLine</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@SYS30149</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LineDetails</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>QtyInSalesUnit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesLine_PurchQtyInSalesUnit</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS138468</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PurchQtyInSalesUnit</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS138470</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesLine_RemainSalesPhysical</Name>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS138469</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>onOrderInSalesUnit</DataMethod>
										<DataSource>SalesLine</DataSource>
										<Label>@SYS138467</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RealEdit</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>purchSalesQtyDiffInSalesUnit</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>StringEdit</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesUnit</DataField>
										<DataSource>SalesLine</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS8719</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Discount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LinePct</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyLinePct</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LineDisc</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyLineDiscount</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>MultiLineDisc</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyMultiLineDisc</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>MultiLinePct</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyMultiLinePct</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS11829</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Price</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PriceUnit</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyPriceUnit</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Markup</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>specifyMarkup</DataMethod>
										<DataSource>SalesLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS12983</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS23823</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitButtons</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButtonOK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButtonCancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Check</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS24056</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS2076</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>