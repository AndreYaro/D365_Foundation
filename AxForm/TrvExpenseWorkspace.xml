<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvExpenseWorkspace</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvExpenseWorkspace extends FormRun
{
    boolean                     allExpenseReports;
    boolean                     allExpenses;
    boolean                     cancelFormInitialization;
    TrvWorkerParameter          trvWorkerParameter;
    TrvExpenseGroupBy           expensesGroupBy;
    TrvHcmWorkerRecId           currentWorkerRecId;
    const str                   expenseReportsViewKey = 'TrvExpenseWorkspaceExpenseReportsLastView';
    const str                   expensesViewKey = 'TrvExpenseWorkspaceExpensesLastView';

    private boolean isAdminPowerBIInitialized;
    private boolean isPersonalPowerBIInitialized;
    

}
]]></Source>
			</Method>
			<Method>
				<Name>initAdminReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes Power BI embedded setup for admin reports
    /// </summary>
    protected void initAdminReport()
    {
        // Secure entry point into the Workspace's admin expense report
        if (Global::hasMenuItemAccess(menuItemDisplayStr(TrvBIExpenseWorkspaceAdminAnalytics), MenuItemType::Display))
        {
            PBIReportControllerBase controller = new PBIReportControllerBase();
            PowerBIReportSetupHelper pbiReport = PowerBIReportSetupHelper::construct();
            pbiReport.parmGroupControl(PowerBIAdminReportGroup);
            pbiReport.parmResourceName(resourceStr(TrvBIExpenseAdminDashboardPBIX));
            pbiReport.parmShowNavContentPane(true);
            pbiReport.parmShowFilterPane(false);

            pbiReport.run();
        }
        isAdminPowerBIInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPersonalReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes Power BI embedded setup for personal reports
    /// </summary>
    protected void initPersonalReport()
    {
        // Secure entry point into the Workspace's personal expense report
        if (Global::hasMenuItemAccess(menuItemDisplayStr(TrvBIExpenseWorkspacePersonalAnalytics), MenuItemType::Display))
        {
            PBIReportControllerBase controller = new PBIReportControllerBase();
            PBIReportCustomParameters params = new PBIReportCustomParameters();
            Set securityRoleSet = new Set(Types::String);
            securityRoleSet.add("EmployeeCompanyFilter");
            params.showNavContentPane(true);

            // User context is User's RecID + Current Company Abbreviation
            params.securityTokenUserName(int642Str(HcmWorker::userId2Worker(curUserId()))+"-"+curExt());
            params.securityRoleList(securityRoleSet);
            PBIReportHelper::initializeCustomReportControl(resourceStr(TrvBIExpensePersonalDashboardPBIX), PowerBIPersonalReportGroup, params);
        }
        isPersonalPowerBIInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>navigateToTrvExpenseLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the <c>TrvExpenses</c> form in the context of the selected expense report.
    /// </summary>
    /// <param name="_expenseRecId">
    /// The expense report to drill into.
    /// </param>
    public void navigateToTrvExpenseLines(RefRecId _expenseRecId)
    {
        Args args;

        if (_expenseRecId)
        {
            args = new Args();
            args.record(TrvExpTrans::find(_expenseRecId));
            args.caller(element);
            args.openMode(OpenMode::Edit);

            FormRun formRun = new MenuFunction(menuitemDisplayStr(TrvExpenseLines), MenuItemType::Display).create(args);
            formRun.run();
            formRun.wait(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>navigateToTrvExpenses</Name>
				<Source><![CDATA[
    /// <summary>
    /// Will navigate to expense details form for the current expense report record.
    /// </summary>
    public void navigateToTrvExpenses(TrvExpNumber _expRptNumber)
    {
        TrvExpTable expenseReport = TrvExpTable::find(_expRptNumber);

        Args args = new Args();
        args.caller(element);
        args.record(expenseReport);
        args.parmObject(element.parmTrvWorkerParameter());
        args.openMode(OpenMode::Edit);

        if (element.args() && element.args().parmEnumType() == enumnum(TrvExpenseReportPageFilters))
        {
            args.parmEnumType(enumnum(TrvExpenseReportPageFilters));
            args.parmEnum(TrvExpenseReportPageFilters::AllMyExpenseReports);
        }

        FormRun formRun = new MenuFunction(menuitemdisplaystr(TrvExpenses), MenuItemType::Display).create(Args);
        formRun.run();
        formRun.wait(true);

        TrvExpTable_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshExpensesGrouping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh expenses grouping based on the selected value.
    /// </summary>
    /// <param name = "_expenseGroupingBy">
    /// Expenses group by value.
    /// </param>
    public void refreshExpensesGrouping(TrvExpenseGroupBy _expenseGroupingBy)
    {
        TrvExpTrans_DS.queryBuildDataSource().sortClear();

        switch (_expenseGroupingBy)
        {
            case TrvExpenseGroupBy::Category:
                ExpensesCardGrid.groupBy(identifierStr(TrvExpTrans_CostType));
                TrvExpTrans_DS.query().dataSourceTable(tablenum(TrvExpTrans)).addSortField(fieldNum(TrvExpTrans, CostType), SortOrder::Ascending);
                break;

            case TrvExpenseGroupBy::Project:
                ExpensesCardGrid.groupBy(identifierStr(TrvExpTrans_ProjId));
                TrvExpTrans_DS.query().dataSourceTable(tablenum(TrvExpTrans)).addSortField(fieldNum(TrvExpTrans, ProjId), SortOrder::Ascending);
                break;

            case TrvExpenseGroupBy::Date:
                ExpensesCardGrid.groupBy(identifierStr(TrvExpTrans_TransDate));
                TrvExpTrans_DS.query().dataSourceTable(tablenum(TrvExpTrans)).addSortField(fieldNum(TrvExpTrans, TransDate), SortOrder::Ascending);
                break;

            default:
                TrvExpTrans_DS.query().dataSourceTable(tablenum(TrvExpTrans)).addSortField(fieldNum(TrvExpTrans, TransDate), SortOrder::Ascending);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>expenseReportsGridListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the expense reports grid list view.
    /// </summary>
    public void expenseReportsGridListView()
    {
        ExpenseReportsCardTileGroup.visible(false);
        ExpenseReportsCardTileFilter.visible(false);
        ExpenseReportsGridListGroup.visible(true);
        ExpenseReportsGridListFilter.visible(true);
        element.configurationHelper().saveConfigurationValue(expenseReportsViewKey, formControlStr(TrvExpenseWorkspace, ExpenseReportsGridListGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>expenseReportsCardTileView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the expense reports card tile view.
    /// </summary>
    public void expenseReportsCardTileView()
    {
        ExpenseReportsCardTileGroup.visible(true);
        ExpenseReportsCardTileFilter.visible(true);
        ExpenseReportsGridListGroup.visible(false);
        ExpenseReportsGridListFilter.visible(false);
        element.configurationHelper().saveConfigurationValue(expenseReportsViewKey, formControlStr(TrvExpenseWorkspace, ExpenseReportsCardTileGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>expensesGridListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the expenses grid list view.
    /// </summary>
    public void expensesGridListView()
    {
        ExpensesCardTileGroup.visible(false);
        ExpensesCardTileFilter.visible(false);
        ExpensesGridListGroup.visible(true);
        ExpensesGridListFilter.visible(true);
        element.configurationHelper().saveConfigurationValue(expensesViewKey, formControlStr(TrvExpenseWorkspace, ExpensesGridListGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>expensesCardTileView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the expenses card tile view.
    /// </summary>
    public void expensesCardTileView()
    {
        ExpensesCardTileGroup.visible(true);
        ExpensesCardTileFilter.visible(true);
        ExpensesGridListGroup.visible(false);
        ExpensesGridListFilter.visible(false);
        element.configurationHelper().saveConfigurationValue(expensesViewKey, formControlStr(TrvExpenseWorkspace, ExpensesCardTileGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current logged in worker and company context.
    /// </summary>
    public void init()
    {
        if (!element.args())
        {
            throw error("@SYS22996");
        }

        currentWorkerRecId = HcmWorkerLookup::currentWorker();

        if (!currentWorkerRecId)
        {
            // The user is not a worker; prevent the form from initializing and running.
            cancelFormInitialization = true;
        }
        else
        {
            // Set the worker parameter object to current worker and current legal entity.
            this.parmTrvWorkerParameter(TrvWorkerParameter::newStandard(currentWorkerRecId, CompanyInfo::current()));

        }

        super();

        if (cancelFormInitialization)
        {
            // The form must close because the user is not a worker.
            this.lifecycleHelper().cancelFormInitialization(Exception::Error, TrvListPageHelper::getCurrentUserNotWorkerErrorMessage(TrvExpTable_DS.table()));
        }

        element.initWorkspaceTab();

        isAdminPowerBIInitialized = false;
        isPersonalPowerBIInitialized = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkspaceTab</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the form to show the expense lines of a form.
    /// </summary>
    public void initWorkspaceTab()
    {
        str expenseReportsView = element.configurationHelper().getConfigurationValue(expenseReportsViewKey);

        switch (expenseReportsView)
        {
            case formControlStr(TrvExpenseWorkspace, ExpenseReportsCardTileGroup):
                element.expenseReportsCardTileView();
                break;

            case formControlStr(TrvExpenseWorkspace, ExpenseReportsGridListGroup):
                element.expenseReportsGridListView();
                break;
            
            default:
                element.expenseReportsCardTileView();
                break;
        }

        str expensesView = element.configurationHelper().getConfigurationValue(expensesViewKey);

        switch (expensesView)
        {
            case formControlStr(TrvExpenseWorkspace, ExpensesCardTileGroup):
                element.expensesCardTileView();
                break;

            case formControlStr(TrvExpenseWorkspace, ExpensesGridListGroup):
                element.expensesGridListView();
                break;
            
            default:
                element.expensesCardTileView();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTrvWorkerParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>TrvWorkerParameter</c> parameter.
    /// </summary>
    /// <param name="_trvWorkerParameter">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>TrvWorkerParameter</c> parameter.
    /// </returns>
    public TrvWorkerParameter parmTrvWorkerParameter(TrvWorkerParameter _trvWorkerParameter = trvWorkerParameter)
    {
        trvWorkerParameter = _trvWorkerParameter;
        return trvWorkerParameter;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TrvExpTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Execute the query with the sort order and approval status filter.
        /// </summary>
        public void executeQuery()
        {
            TrvExpTable_ds.query().dataSourceTable(tablenum(TrvExpTable)).sortClear();
            TrvExpTable_ds.query().dataSourceTable(tablenum(TrvExpTable)).addSortField(fieldNum(TrvExpTable, CreatedDateTime), SortOrder::Descending);
            TrvExpTable_ds.query().dataSourceTable(tablenum(TrvExpTable)).addSortField(fieldNum(TrvExpTable, ExpNumber), SortOrder::Descending);

            TrvExpTable_ds.query().dataSourceTable(tableNum(TrvExpTable)).clearRange(fieldnum(TrvExpTable, ApprovalStatus));
            if (!allExpenseReports)
            {
                TrvExpTable_ds.query().dataSourceTable(tableNum(TrvExpTable)).addRange(fieldNum(TrvExpTable, ApprovalStatus)).value(queryValue(TrvAppStatus::Create));
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the ranges and set the default layout to group by approval status on init.
        /// </summary>
        public void initQuery(LegalEntity _legalEntity = CompanyInfo::current(), HcmWorkerRecId _worker = HcmWorkerLookup::currentWorker())
        {
            Query q = new Query();
            QueryBuildDataSource qbds = q.addDataSource(tablenum(TrvExpTable));
        
            QueryBuildRange legalEntityRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvExpTable, LegalEntity));
            legalEntityRange.value(queryValue(_legalEntity));
            legalEntityRange.status(RangeStatus::Locked);
        
            QueryBuildRange currentWorkerRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvExpTable, CreatingWorker));
            currentWorkerRange.value(queryValue(_worker));
            currentWorkerRange.status(RangeStatus::Locked);
        
            this.query(q);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the default layout to group by approval status on init.
        /// </summary>
        public void init()
        {
            this.initQuery();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleteImage</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the delete image for the grid.
        /// </summary>
        display container deleteImage()
        {
            return ImageReference::constructForSymbol(ImageReferenceSymbol::Delete).pack();
        }

]]></Source>
					</Method>
					<Method>
						<Name>editImage</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the edit image for the grid.
        /// </summary>
        display container editImage()
        {
            return ImageReference::constructForSymbol(ImageReferenceSymbol::EditSymbol).pack();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TrvExpTrans</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Execute the query with unattached expenses and sort order.
        /// </summary>
        public void executeQuery()
        {
            TrvExpTrans_ds.query().dataSourceTable(tableNum(TrvExpTrans)).addRange(fieldNum(TrvExpTrans, ExpNumber)).value(queryValue(''));

            element.refreshExpensesGrouping(expensesGroupBy);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the ranges on init.
        /// </summary>
        public void initQuery(LegalEntity _legalEntity = CompanyInfo::current(), HcmWorkerRecId _worker = HcmWorkerLookup::currentWorker())
        {
            Query q = new Query();
            QueryBuildDataSource qbds = q.addDataSource(tablenum(TrvExpTrans));
        
            QueryBuildRange legalEntityRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvExpTrans, LegalEntity));
            legalEntityRange.value(queryValue(_legalEntity));
            legalEntityRange.status(RangeStatus::Locked);
        
            QueryBuildRange currentWorkerRange = SysQuery::findOrCreateRange(qbds, fieldnum(TrvExpTrans, CreatingWorker));
            currentWorkerRange.value(queryValue(_worker));
            currentWorkerRange.status(RangeStatus::Locked);
        
            this.query(q);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initialize the query with legal entity and worker context.
        /// </summary>
        public void init()
        {
            this.initQuery();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorStatusIndicator</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns error if the itemization is not completed or the corresponding
        /// adjusted policy violation level for the line. If the expense is not inserted yet,
        /// this will not show any error.
        /// </summary>
        display container errorStatusIndicator(TrvExpTrans _trvExpTrans)
        {
            boolean suppressJustificationError;

            TrvpolicyviolationLevel level = TrvBudgetCheckHelper::errorIndicatorLevel(_trvExpTrans, suppressJustificationError);

            ImageReference imgRef;

            switch (level)
            {
                case TrvpolicyviolationLevel::None:
                    if (_trvExpTrans.itemizationStatus() != TrvExpItemizationStatus::NoItemizedLines || _trvExpTrans.receiptsAttached)
                    {
                        imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Info);
                        return imgRef.pack();
                    }

                    break;

                case TrvpolicyviolationLevel::Warning:
                case TrvpolicyviolationLevel::ApproveJustification:
                case TrvpolicyviolationLevel::SubmitJustification:
                case TrvpolicyviolationLevel::SubmitApproveJustification:
                    imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Warning);
                    return imgRef.pack();

                case TrvpolicyviolationLevel::Error:
                    imgRef = ImageReference::constructForSymbol(ImageReferenceSymbol::Error);
                    return imgRef.pack();
            }

            return conNull();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ExpRptCreateCommandButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the new expense report slider.
        /// </summary>
        public void clicked()
        {
            Args                            args = new Args();
            FormRun                         formRun;
            TrvNewExpenseReportParameter    newExpenseReportParameter = new TrvNewExpenseReportParameter();
    
            args.caller(element);
            args.openMode(OpenMode::New);
            newExpenseReportParameter.parmTrvWorkerParameter(element.parmTrvWorkerParameter());
            args.parmObject(newExpenseReportParameter);
    
            // Call the form to create a new expense report.
            formRun = new MenuFunction(MenuItemDisplayStr(TrvExpenseReportDetails), MenuItemType::Display).create(args);
            formRun.run();
            formRun.wait(true);

            TrvExpTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRptFilterButtonOpenAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Expense report filter.
        /// </summary>
        public void clicked()
        {
            super();

            if (!allExpenseReports)
            {
                ExpRptFilterTextOpenAll.text("@SYS11696");
                allExpenseReports = true;
            }
            else
            {
                ExpRptFilterTextOpenAll.text("@SYS75939");
                allExpenseReports = false;
            }
            
            TrvExpTable_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRptGridListViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display the expense report grid list view.
        /// </summary>
        public void clicked()
        {
            super();
            element.expenseReportsGridListView();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRptCardTileViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display the expense report card tile view.
        /// </summary>
        public void clicked()
        {
            super();
            element.expenseReportsCardTileView();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRpt_ExpNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the expense lines form on clicking the expense report number.
        /// </summary>
        public void jumpRef()
        {
            element.navigateToTrvExpenses(this.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRpt_GridNumber</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the expense lines form on clicking the expense report number.
        /// </summary>
        public void jumpRef()
        {
            // When a user clicks on TrvExpTableView_ExpNumber two interactions are sent by the browser to
            // the server: ExecuteHyperlink and SelectionChanged. The latter is a deferred event so no guarantees
            // can be made about its synchronousness. The side effect is that this method may execute before the override
            // of TrvExpTableView_DS.selectionChanged() and consequently the user would open a different expense report
            // than the one clicked. On the other hand, TrvExpTableView is already pointing to the correct record so
            // we manually synchronize both datasources before opening TrvExpenses.
            //element.synchronizeExpenseReportDatasources();
            element.navigateToTrvExpenses(this.valueStr());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRpt_GridEdit</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the expense lines form on clicking the edit button.
        /// </summary>
        public void clicked()
        {
            super();
            element.navigateToTrvExpenses(trvExpTable.ExpNumber);
            TrvExpTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRpt_GridDelete</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Delete the expense reports on clicking the delete button.
        /// </summary>
        public void clicked()
        {
            boolean confirmation;
    
            if (trvExpTable.ApprovalStatus == TrvAppStatus::Create || trvExpTable.ApprovalStatus == TrvAppStatus::None)
            {
                confirmation = Box::confirm("@Expense:DeleteConfirmation");
            
                if (!confirmation)
                {
                    return;
                }
    
                trvExpTable.delete();
                super();
                trvExpTable_ds.research();
                trvExpTrans_ds.research();
            }
            else
            {
                error(strFmt("@Expense:CannotDeleteExpenseReport", trvExpTable.ApprovalStatus));
                return;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpRptAttachToButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Picks the selected expenses and attaches them to a new expense report.
        /// </summary>
        public void clicked()
        {
            Args args = new Args();
            TrvNewExpenseReportParameter newExpenseReportParameter = new TrvNewExpenseReportParameter();

            List selectedExpensesList = TrvExpenseLineHelper::getSelectedExpensesForAttachment(TrvExpTrans_DS);

            // User selected cancel when prompted on whether to move already attached lines to the new expense report
            if (!selectedExpensesList)
            {
                return;
            }

            newExpenseReportParameter.parmExpenseLines(selectedExpensesList);
            newExpenseReportParameter.parmTrvWorkerParameter(TrvWorkerParameter::newStandard(currentWorkerRecId, CompanyInfo::current()));
            newExpenseReportParameter.parmCanSubmitImmediately(true);

            // Call the form to create a new expense report.
            args.caller(element);
            args.openMode(OpenMode::New);
            args.parmObject(newExpenseReportParameter);

            FormRun fr = new MenuFunction(MenuItemDisplayStr(TrvExpenseReportDetails), MenuItemType::Display).create(args);
            fr.run();
            fr.wait(true);

            //Refresh datasource after dialog completes
            TrvExpTrans_ds.research();
            TrvExpTable_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupByDateView</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Group the expenses by transaction date.
        /// </summary>
        public void clicked()
        {
            expensesGroupBy = TrvExpenseGroupBy::Date;

            TrvExpTrans_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupByCategoryView</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Group the expenses by category.
        /// </summary>
        public void clicked()
        {
            expensesGroupBy = TrvExpenseGroupBy::Category;

            TrvExpTrans_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupByProjectView</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Group the expenses by project.
        /// </summary>
        public void clicked()
        {
            expensesGroupBy = TrvExpenseGroupBy::Project;

            TrvExpTrans_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesGridListViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display the expenses grid list view.
        /// </summary>
        public void clicked()
        {
            super();
            element.expensesGridListView();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpensesCardTileViewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display the expenses card tile view.
        /// </summary>
        public void clicked()
        {
            super();
            element.expensesCardTileView();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TrvExpTrans_TransDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open the expenses form with selected expense highlighted.
        /// </summary>
        public void jumpRef()
        {
            super();
            element.navigateToTrvExpenseLines(trvExpTrans.RecId);
            trvExpTrans_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpenseTransDate_Grid</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open the expenses form with the selected expense highlighted.
        /// </summary>
        public void jumpRef()
        {
            super();
            element.navigateToTrvExpenseLines(trvExpTrans.RecId);
            trvExpTrans_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpenseEdit_Grid</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open the expenses form in edit mode with the selected expense highlighted.
        /// </summary>
        public void clicked()
        {
            super();
            element.navigateToTrvExpenseLines(trvExpTrans.RecId);
            trvExpTrans_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpenseDelete_Grid</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes the expense.
        /// </summary>
        public void clicked()
        {
            boolean confirmation;

            if (trvExpTrans.validateDelete())
            {
                confirmation = Box::confirm("@Expense:DeleteConfirmation");
            
                if (!confirmation)
                {
                    return;
                }

                trvExpTrans.delete();
                super();
                trvExpTrans_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdminExpenseAnalytics</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            if (!isAdminPowerBIInitialized)
            {
                element.initAdminReport();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PersonalExpenseAnalytics</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            if (!isPersonalPowerBIInitialized)
            {
                element.initPersonalReport();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TrvExpTable</Name>
			<Table>TrvExpTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AntiCorruptionApproverFlag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AntiCorruptionSubmitterFlag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Destination</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinalApprover</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyLE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreApprovalNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TrvExpTrans</Name>
			<Table>TrvExpTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyOverBudgetAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyReconciledAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdditionalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressCity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressZipCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillIssuedTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusinessPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAdvanceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>City</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedTaxAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostOwner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatingWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deduktion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionBreakfest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionDinner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeduktionLunch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntertainmentLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpTransNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyBilled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyLE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanySalesCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanySalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyTransferCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntercompanyTransferPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsBudgetCheckPending</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPreAuthorized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSplit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KMOwnCar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KMPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineLevelPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Location</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MappedToRequisitionLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MerchantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MileageFromAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MileageToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Mobile_Statement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetTransactionAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfPassengers</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalReceiptsRecvd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalSourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PBS_Statement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PBSRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingErrors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPolicyStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPolicyText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptsAttached</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReimburseAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubCategoryRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIncluded</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TicketUsed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRowNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvExpTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrvLocations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VehicleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ZipCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS101454</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dashboard</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ExpMgmtDashboardText</Name>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>ExpMgmtStaticText</Name>
						<Type>StaticText</Type>
						<FormControlExtension
							i:nil="true" />
						<Style>MainInstruction</Style>
						<Text>@SYS101454</Text>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>WorkspaceTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ExpenseReportsTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExpenseReportsGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpenseReportsFilterAndButtonGroup</Name>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExpenseReportsFilterGroup</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl>
														<Name>ExpenseReportsGridListFilter</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Visible>No</Visible>
														<FormControlExtension>
															<Name>QuickFilterControl</Name>
															<ExtensionComponents />
															<ExtensionProperties>
																<AxFormControlExtensionProperty>
																	<Name>targetControlName</Name>
																	<Type>String</Type>
																	<Value>ExpenseReportsGrid</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>placeholderText</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>defaultColumnName</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
															</ExtensionProperties>
														</FormControlExtension>
													</AxFormControl>
													<AxFormControl>
														<Name>ExpenseReportsCardTileFilter</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<FormControlExtension>
															<Name>QuickFilterControl</Name>
															<ExtensionComponents />
															<ExtensionProperties>
																<AxFormControlExtensionProperty>
																	<Name>targetControlName</Name>
																	<Type>String</Type>
																	<Value>ExpenseReportsCardGrid</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>placeholderText</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>defaultColumnName</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
															</ExtensionProperties>
														</FormControlExtension>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExpenseReportsButtonGroup</Name>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpRptCreateCommandButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<MultiSelect>No</MultiSelect>
														<Text>@Expense:NewExpenseReport</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>ExpRptFilterTextOpenAll</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HelpText>Something help</HelpText>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Style>MainInstruction</Style>
														<Text>@SYS75939</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpRptFilterButtonOpenAll</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>Filter</NormalImage>
														<Text>@SYS81048</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpRptGridListViewButton</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>Details</NormalImage>
														<Text>@SYS104898</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpRptCardTileViewButton</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>ViewAll</NormalImage>
														<Text>@Expense:TileView</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalRight</ArrangeMethod>
												<DataSource>TrvExpTable</DataSource>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpenseReportsCardTileGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>ExpenseReportsCardGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ExtendedStyle>cardList</ExtendedStyle>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>ExpRptCard</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>BusinessCard</ExtendedStyle>
														<Pattern>BusinessCardStatus</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormImageControl">
																<Name>ExpRpt_PolicyStatus</Name>
																<PreviewPartRef>TrvStatusPreview</PreviewPartRef>
																<Type>Image</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>errorStatusIndicator</DataMethod>
																<DataSource>TrvExpTable</DataSource>
																<Label>@SYS121619</Label>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ExpRpt_AmountMST</Name>
																<ExtendedStyle>Heading</ExtendedStyle>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<Alignment>Left</Alignment>
																<DataMethod>totalWithCurrencyCode</DataMethod>
																<DataSource>TrvExpTable</DataSource>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ExpRpt_Txt2</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Txt2</DataField>
																<DataSource>TrvExpTable</DataSource>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ExpRpt_ExpNumber</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ExpNumber</DataField>
																<DataSource>TrvExpTable</DataSource>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ExpRpt_DummyPlaceholder</Name>
																<ExtendedStyle>ImageCaption</ExtendedStyle>
																<Type>String</Type>
																<Visible>No</Visible>
																<FormControlExtension
																	i:nil="true" />
																<ChangeCase>UpperCase</ChangeCase>
																<Label>@SYS4004564</Label>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ExpRpt_ApprovalStatus</Name>
																<ExtendedStyle>Footer1</ExtendedStyle>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ApprovalStatus</DataField>
																<DataSource>TrvExpTable</DataSource>
																<ShowLabel>No</ShowLabel>
																<Items />
															</AxFormControl>
														</Controls>
														<ArrangeMethod>None</ArrangeMethod>
														<DataSource>TrvExpTable</DataSource>
														<Style>Card</Style>
													</AxFormControl>
												</Controls>
												<DataSource>TrvExpTable</DataSource>
												<ShowRowLabels>No</ShowRowLabels>
												<Style>List</Style>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpenseReportsGridListGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<Visible>No</Visible>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>ExpenseReportsGrid</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpRpt_GridStatus</Name>
														<PreviewPartRef>TrvStatusPreview</PreviewPartRef>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>errorStatusIndicator</DataMethod>
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS121619</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridNumber</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ExpNumber</DataField>
														<DataSource>TrvExpTable</DataSource>
														<Label>@Expense:ExpenseNumber</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ExpRpt_GridApprovalStatus</Name>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ApprovalStatus</DataField>
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS101302</Label>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>ExpRpt_GridHasReceiptsAttached</Name>
														<Type>CheckBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>hasReceiptsAttached</DataMethod>
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS130494</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridPurpose</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Txt2</DataField>
														<DataSource>TrvExpTable</DataSource>
														<DisplayLength>20</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridDestination</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Destination</DataField>
														<DataSource>TrvExpTable</DataSource>
														<DisplayLength>20</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridAmountMST</Name>
														<AllowEdit>No</AllowEdit>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>totalWithCurrencyCode</DataMethod>
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS3494</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>ExpRpt_GridPaymentDate</Name>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymentDate</DataField>
														<DataSource>TrvExpTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridPaymentVoucher</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>PaymentVoucher</DataField>
														<DataSource>TrvExpTable</DataSource>
														<DisplayLength>15</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpRpt_GridInvoiceId</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InvoiceId</DataField>
														<DataSource>TrvExpTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpRpt_GridEdit</Name>
														<ExtendedStyle>businessCard_notification</ExtendedStyle>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS16569</Label>
														<NormalImage>Edit</NormalImage>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpRpt_GridDelete</Name>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TrvExpTable</DataSource>
														<Label>@SYS21354</Label>
														<NormalImage>Delete</NormalImage>
													</AxFormControl>
												</Controls>
												<DataSource>TrvExpTable</DataSource>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@Expense:ExpenseReports</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ExpensesTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExpensesGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpensesFilterAndButtonGroup</Name>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExpensesFilterGroup</Name>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl>
														<Name>ExpensesGridListFilter</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Visible>No</Visible>
														<FormControlExtension>
															<Name>QuickFilterControl</Name>
															<ExtensionComponents />
															<ExtensionProperties>
																<AxFormControlExtensionProperty>
																	<Name>targetControlName</Name>
																	<Type>String</Type>
																	<Value>ExpensesGrid</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>placeholderText</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>defaultColumnName</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
															</ExtensionProperties>
														</FormControlExtension>
													</AxFormControl>
													<AxFormControl>
														<Name>ExpensesCardTileFilter</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<FormControlExtension>
															<Name>QuickFilterControl</Name>
															<ExtensionComponents />
															<ExtensionProperties>
																<AxFormControlExtensionProperty>
																	<Name>targetControlName</Name>
																	<Type>String</Type>
																	<Value>ExpensesCardGrid</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>placeholderText</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>defaultColumnName</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
															</ExtensionProperties>
														</FormControlExtension>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ExpensesButtonGroup</Name>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>ExpRptAttachToButton</Name>
														<HelpText>@Expense:AttachToNewExpenseReportDetails</HelpText>
														<Type>CommandButton</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@Expense:NewExpenseReport</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ExpRptAttachToExistingButton</Name>
														<AllowEdit>No</AllowEdit>
														<HelpText>@Expense:AttachToExistingExpenseReportDetails</HelpText>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<AutoRefreshData>Yes</AutoRefreshData>
														<CopyCallerQuery>Yes</CopyCallerQuery>
														<DataSource>TrvExpTrans</DataSource>
														<MenuItemName>TrvExpenseSelectReportDialog</MenuItemName>
														<MultiSelect>Yes</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@Expense:AttachToExpenseReport</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuButtonControl">
														<Name>ViewModesButtonGroup</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>MenuButton</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>GroupByDateView</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<Text>@SYP4861385</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>GroupByCategoryView</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<Text>@SYS32339</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>GroupByProjectView</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<Text>@SYS103045</Text>
															</AxFormControl>
														</Controls>
														<Text>@SYS99522</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpensesGridListViewButton</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>Details</NormalImage>
														<Text>@SYS104898</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ExpensesCardTileViewButton</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<NormalImage>ViewAll</NormalImage>
														<Text>@Expense:TileView</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalRight</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpensesCardTileGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>ExpensesCardGrid</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>cardList</ExtendedStyle>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>ExpensesCard</Name>
														<ExtendedStyle>BusinessCard</ExtendedStyle>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormImageControl">
																<Name>ExpenseTypeIcon</Name>
																<ExtendedStyle>ExpenseImage</ExtendedStyle>
																<Type>Image</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>showExpenseTypeIcon</DataMethod>
																<DataSource>TrvExpTrans</DataSource>
																<Label>@SYS101577</Label>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>AmountCurrWithCurrencyCode</Name>
																<ExtendedStyle>Heading</ExtendedStyle>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<Alignment>Left</Alignment>
																<DataMethod>amountWithCurrencyCode</DataMethod>
																<DataSource>TrvExpTrans</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ApprovalStatus</Name>
																<AllowEdit>No</AllowEdit>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ExtendedStyle></ExtendedStyle>
																<Type>ComboBox</Type>
																<Visible>No</Visible>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ApprovalStatus</DataField>
																<DataSource>TrvExpTrans</DataSource>
																<ShowLabel>No</ShowLabel>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>MerchantId</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Enabled>No</Enabled>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>MerchantId</DataField>
																<DataSource>TrvExpTrans</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDateControl">
																<Name>TrvExpTrans_TransDate</Name>
																<Type>Date</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>TransDate</DataField>
																<DataSource>TrvExpTrans</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>TrvExpTrans_CostType</Name>
																<ExtendedStyle>ImageCaption</ExtendedStyle>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>CostType</DataField>
																<DataSource>TrvExpTrans</DataSource>
																<LookupButton>Never</LookupButton>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>TrvExpTrans_ProjId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>ProjId</DataField>
																<DataSource>TrvExpTrans</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormImageControl">
																<Name>Status</Name>
																<ExtendedStyle>businessCard_notification</ExtendedStyle>
																<PreviewPartRef>TrvStatusPreview</PreviewPartRef>
																<Type>Image</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>errorStatusIndicator</DataMethod>
																<DataSource>TrvExpTrans</DataSource>
																<Label>@SYS121619</Label>
																<NormalImage>Warning</NormalImage>
																<ShowLabel>No</ShowLabel>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>None</ArrangeMethod>
														<DataSource>TrvExpTrans</DataSource>
														<Style>Card</Style>
													</AxFormControl>
												</Controls>
												<DataSource>TrvExpTrans</DataSource>
												<Style>List</Style>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExpensesGridListGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<Visible>No</Visible>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>ExpensesGrid</Name>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpensePolicyError_Grid</Name>
														<PreviewPartRef>TrvStatusPreview</PreviewPartRef>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>errorStatusIndicator</DataMethod>
														<DataSource>TrvExpTrans</DataSource>
														<Label>@SYS121619</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpenseTypeIcon_Grid</Name>
														<ExtendedStyle>ExpenseImage</ExtendedStyle>
														<Type>Image</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>showExpenseTypeIcon</DataMethod>
														<DataSource>TrvExpTrans</DataSource>
														<Label>@SYS101577</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>ExpenseTransDate_Grid</Name>
														<Type>Date</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>TransDate</DataField>
														<DataSource>TrvExpTrans</DataSource>
														<DisplayLength>12</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
														<Label>@SYS80056</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpenseMerchantId_Grid</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>MerchantId</DataField>
														<DataSource>TrvExpTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpenseCostType_Grid</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>CostType</DataField>
														<DataSource>TrvExpTrans</DataSource>
														<DisplayLength>15</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
														<Label>@SYS11718</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpenseAmountMSTCurrency_Grid</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>amountMSTWithCurrencyCode</DataMethod>
														<DataSource>TrvExpTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ExpenseProjId_Grid</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ProjId</DataField>
														<DataSource>TrvExpTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpenseEdit_Grid</Name>
														<ExtendedStyle>businessCard_notification</ExtendedStyle>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TrvExpTrans</DataSource>
														<Label>@SYS16569</Label>
														<NormalImage>Edit</NormalImage>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ExpenseDelete_Grid</Name>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TrvExpTrans</DataSource>
														<Label>@SYS21354</Label>
														<NormalImage>Delete</NormalImage>
													</AxFormControl>
												</Controls>
												<DataSource>TrvExpTrans</DataSource>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@Expense:UnattachedExpenses</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdminExpenseAnalytics</Name>
						<ConfigurationKey>PowerBIEmbedded_App</ConfigurationKey>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PowerBIAdminReportGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Expense:AdminExpenseDashboard</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PersonalExpenseAnalytics</Name>
						<ConfigurationKey>PowerBIEmbedded_App</ConfigurationKey>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PowerBIPersonalReportGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Expense:PersonalExpenseDashboard</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>