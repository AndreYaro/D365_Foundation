<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PSAContractLineSetupProjCate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PSAContractLineSetupProjCate extends FormRun
{
    PSAContractLineItems        psaContractLineItems;
    ProjTable                   projTable;
    ProjPostedTransTable        projPostedTransTable;

    QueryBuildRange             qbrCategoryLeftLineNumber;
    QueryBuildRange             qbrCategoryLeftProjId;
    QueryBuildRange             qbrCategoryLeftActiveOrSubscription;
    QueryBuildRange             qbrCategoryRightProjId;
    QueryBuildRange             qbrCategoryRightCategoryType;
    QueryBuildRange             qbrCategoryRightActiveOrSubscription;

    Query                       queryAvailable;
    Query                       querySelected;
    
    boolean enableMultipleContractLinesForProject = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();
}
]]></Source>
			</Method>
			<Method>
				<Name>addAllCategoriesToSelectedListed</Name>
				<Source><![CDATA[
    void addAllCategoriesToSelectedListed()
    {
        ProjCategory                projCategory;
        container                   dataProject;
        container                   dataCategory;
        QueryRun                    queryRun;

        if (psaContractLineItems.hasPostedHistory() && 
            ProjParameters::find().AllowUpdateOfChargeableCategoriesWithUninvoicedTransactions &&
            box::yesNo("@Proj:ValidateMessageForUninvoicedPostedTransactions", dialogButton::Yes) == dialogButton::Yes)
        {
            queryRun = new QueryRun(queryAvailable);
            while (queryRun.next())
            {
                projCategory = queryRun.get(tablenum(ProjCategory));
                element.addCategories(projCategory);
            }
        }

        if (psaContractLineItems.ContractLineNum)
        {
            if (projTable.ProjId)
            {
                dataProject += projTable.ProjId;
            }

            queryRun = new QueryRun(queryAvailable);
            while (queryRun.next())
            {
                projCategory = queryRun.get(tablenum(ProjCategory));
                dataCategory += projCategory.CategoryId;
            }

            PSAContractLineItemsServer::addCategoryToContractLines(dataProject, dataCategory, psaContractLineItems.ContractLineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCategoryToSelectedList</Name>
				<Source><![CDATA[
    void addCategoryToSelectedList()
    {
        ProjCategory                projCategory;
        container                   dataProject;
        container                   dataCategory;

        if (psaContractLineItems.hasPostedHistory() && 
            ProjParameters::find().AllowUpdateOfChargeableCategoriesWithUninvoicedTransactions &&
            box::yesNo("@Proj:ValidateMessageForUninvoicedPostedTransactions", dialogButton::Yes) == dialogButton::Yes)
        {
            projCategory = ProjCategoryAvailable_DS.getFirst(1);
            while (projCategory)
            {
                element.addCategories(projCategory);
                projCategory = ProjCategoryAvailable_DS.getNext();
            }
        }

        if (psaContractLineItems.ContractLineNum)
        {
            if (projTable.ProjId)
            {
                dataProject += projTable.ProjId;
            }

            projCategory = ProjCategoryAvailable_DS.getFirst(1);
            if (!projCategory)
            {
                dataCategory += ProjCategoryAvailable.CategoryId;
            }
            else
            {
                while (projCategory)
                {
                    dataCategory += projCategory.CategoryId;
                    projCategory = ProjCategoryAvailable_DS.getNext();
                }
            }

            PSAContractLineItemsServer::addCategoryToContractLines(dataProject, dataCategory, psaContractLineItems.ContractLineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractDesc</Name>
				<Source><![CDATA[
    display Description getContractDesc()
    {
        return ProjInvoiceTable::find(psaContractLineItems.ProjInvoiceProjId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractId</Name>
				<Source><![CDATA[
    display ProjInvoiceProjId getContractId()
    {
        return psaContractLineItems.ProjInvoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractLineNum</Name>
				<Source><![CDATA[
    display PSAContractLineNum getContractLineNum()
    {
        return psaContractLineItems.ContractLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjectId</Name>
				<Source><![CDATA[
    display ProjId getProjectId()
    {
        return projTable.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjectName</Name>
				<Source><![CDATA[
    display ProjName getProjectName()
    {
        return projTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args    args;
        Object  caller;

        super();

        if (element.enableMultipleContractLinesForProject)
        {
            ContractLineNum.label("@PSA2823");
        }

        args = element.args();
        if (args.dataset() == tablenum(PSAContractLineItems))
        {
            psaContractLineItems = args.record();

            caller = args.caller();
            if (formhasmethod(caller, identifierstr('getProjTable')))
            {
                projTable = caller.getProjTable();
            }
            if (!projTable)
            {
                throw warning("@PSA11556");
            }
        }
        else
        {
            throw error("@PSA2848");
        }

        if (psaContractLineItems && projTable)
        {
            // setup data source for avalable column of list pane layout
            qbrCategoryLeftLineNumber.value(psaContractLineItems.ContractLineNum);
            qbrCategoryLeftActiveOrSubscription.value(strfmt('(%1 == %2) || (%3 == %4)',
                fieldstr(ProjCategory, Active),
                any2int(NoYes::Yes),
                fieldstr(ProjCategory, SetupSubscription),
                any2int(NoYes::Yes)));
            qbrCategoryLeftProjId.value(projTable.ProjId);

            // set category types allowed by billing rule   
            if (psaContractLineItems.LineType == PSAContractLineType::TAndM || psaContractLineItems.LineType == PSAContractLineType::Progress)
            {
                qbrCategoryRightCategoryType.value(enum2Value(ProjCategoryType::Hour) + ',' + enum2Value(ProjCategoryType::Cost) + ','
                                                    + enum2Value(ProjCategoryType::Revenue) + ',' + enum2Value(ProjCategoryType::Item));
            }

            // setup data source for selected column of list pane layout
            qbrCategoryRightActiveOrSubscription.value(strfmt('(%1 == %2) || (%3 == %4)',
                fieldstr(ProjCategory, Active),
                any2int(NoYes::Yes),
                fieldstr(ProjCategory, SetupSubscription),
                any2int(NoYes::Yes)));
            qbrCategoryRightProjId.value(projTable.ProjId);
        }

        boolean disabledAddRemoveCat = false;
        boolean allowUpdateWithPostedTrans = ProjParameters::find().AllowUpdateOfChargeableCategoriesWithUninvoicedTransactions;
        if (enableMultipleContractLinesForProject)
        {
            disabledAddRemoveCat = !allowUpdateWithPostedTrans && psaContractLineItems.hasPostedHistoryForProject(projTable.ProjId);

            if (!disabledAddRemoveCat && psaContractLineItems.BillingMethod == ProjContractBillingMethod::FixedPrice)
            {
                // Additonal check for fixed price contract line to confirm there are no posted estimates.
                ProjControlPeriodTable estimate;

                select firstonly RecId from estimate
                    where estimate.ProjId == projTable.ProjId && estimate.PeriodStatus != ProjControlPeriodStatus::Reversal;

                disabledAddRemoveCat = estimate.RecId != 0;
            }
        }
        else
        {
            disabledAddRemoveCat = !allowUpdateWithPostedTrans && psaContractLineItems.hasPostedHistory();
        }

        AddCategory.enabled(!disabledAddRemoveCat);
        RemoveCategory.enabled(!disabledAddRemoveCat);
        AddAllCategories.enabled(!disabledAddRemoveCat);
        RemoveAllCategories.enabled(!disabledAddRemoveCat);
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAllCategoriesFromSelectedList</Name>
				<Source><![CDATA[
    void removeAllCategoriesFromSelectedList()
    {
        ProjCategory    projCategory;
        container       dataProject;
        container       dataCategory;
        QueryRun        queryRun;
        
        if (psaContractLineItems.hasPostedHistory() && 
            ProjParameters::find().AllowUpdateOfChargeableCategoriesWithUninvoicedTransactions &&
            box::yesNo("@Proj:ValidateMessageForUninvoicedPostedTransactions", dialogButton::Yes) == dialogButton::Yes)
        {
            queryRun = new QueryRun(querySelected);
            while (queryRun.next())
            {
                projCategory = queryRun.get(tablenum(ProjCategory));
                element.removeCategories(projCategory);
            }
        }

        if (psaContractLineItems.ContractLineNum)
        {
            if (projTable.ProjId)
            {
                dataProject += projTable.ProjId;
            }

            queryRun = new QueryRun(querySelected);
            while (queryRun.next())
            {
                projCategory = queryRun.get(tablenum(ProjCategory));
                dataCategory += projCategory.CategoryId;
            }

            PSAContractLineItemsServer::deleteCategoryFromContractLines(dataProject, dataCategory, psaContractLineItems.ContractLineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeCategoryFromSelectedList</Name>
				<Source><![CDATA[
    void removeCategoryFromSelectedList()
    {
        ProjCategory    projCategory;
        container       dataProject;
        container       dataCategory;

        if (psaContractLineItems.hasPostedHistory() && 
            ProjParameters::find().AllowUpdateOfChargeableCategoriesWithUninvoicedTransactions &&
            box::yesNo("@Proj:ValidateMessageForUninvoicedPostedTransactions", dialogButton::Yes) == dialogButton::Yes)
        {
            projCategory = ProjCategorySelected_DS.getFirst(1);
            while (projCategory)
            {
                element.removeCategories(projCategory);
                projCategory = ProjCategorySelected_DS.getNext();
            }                
        }
        if (psaContractLineItems.ContractLineNum)
        {
            if (projTable.ProjId)
            {
                dataProject += projTable.ProjId;
            }

            projCategory = ProjCategorySelected_DS.getFirst(1);
            if (!projCategory)
            {
                dataCategory += ProjCategorySelected.CategoryId;
            }
            else
            {
                while (projCategory)
                {
                    dataCategory += projCategory.CategoryId;
                    projCategory = ProjCategorySelected_DS.getNext();
                }
            }

            PSAContractLineItemsServer::deleteCategoryFromContractLines(dataProject, dataCategory, psaContractLineItems.ContractLineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeCategories</Name>
				<Source><![CDATA[
    private void removeCategories(ProjCategory _projCategory)
    {        
        update_recordset projPostedTransTable
        setting PSAContractLineNum = ''
        where projPostedTransTable.CategoryId == _projCategory.CategoryId &&
                projPostedTransTable.ProjId == projTable.ProjId &&
                projPostedTransTable.PSAContractLineNum == psaContractLineItems.ContractLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCategories</Name>
				<Source><![CDATA[
    private void addCategories(ProjCategory _projCategory)
    {        
        update_recordset projPostedTransTable
        setting PSAContractLineNum = psaContractLineItems.ContractLineNum
        where projPostedTransTable.CategoryId == _projCategory.CategoryId &&
                projPostedTransTable.ProjId == projTable.ProjId;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjCategorySelected</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbdsProjectCategory_Left;
            QueryBuildDataSource    qbdsPSAContractLineItemsSetup;

            const str datasourceLabel = 'ProjCategorySelected';

            querySelected = new Query();

            super();

            qbdsProjectCategory_Left = querySelected.addDataSource(tablenum(ProjCategory), datasourceLabel);

            qbdsPSAContractLineItemsSetup = qbdsProjectCategory_Left.addDataSource(tablenum(PSAContractLineItemsSetup));
            qbdsPSAContractLineItemsSetup.relations(true);
            qbrCategoryLeftLineNumber = qbdsPSAContractLineItemsSetup.addRange(fieldnum(PSAContractLineItemsSetup, ContractLineNum));
            qbrCategoryLeftProjId = qbdsPSAContractLineItemsSetup.addRange(fieldnum(PSAContractLineItemsSetup, ProjId));

            this.query(querySelected);

            qbrCategoryLeftActiveOrSubscription = this.query().dataSourceTable(tablenum(ProjCategory)).addRange(fieldnum(ProjCategory, RecId));
            qbrCategoryLeftActiveOrSubscription.value(strfmt('(%1 == %2) || (%3 == %4)',
                fieldstr(ProjCategory, Active),
                any2int(NoYes::Yes),
                fieldstr(ProjCategory, SetupSubscription),
                any2int(NoYes::Yes)));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjCategoryAvailable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbdsProjectCategory_Right;
            QueryBuildDataSource    qbdsPSAContractLineItemSetup;

            const str datasourcelabel = 'ProjCategoryAvailable';

            queryAvailable = new Query();

            super();

            qbdsProjectCategory_Right = queryAvailable.addDataSource(tablenum(ProjCategory), datasourcelabel);
            qbrCategoryRightCategoryType = qbdsProjectCategory_Right.addRange(fieldnum(ProjCategory, CategoryType));

            qbdsPSAContractLineItemSetup = qbdsProjectCategory_Right.addDataSource(tablenum(PSAContractLineItemsSetup));
            qbdsPSAContractLineItemSetup.relations(true);
            qbdsPSAContractLineItemSetup.joinMode(JoinMode::NoExistsJoin);
            qbrCategoryRightProjId = qbdsPSAContractLineItemSetup.addRange(fieldnum(PSAContractLineItemsSetup, ProjId));

            this.query(queryAvailable);

            qbrCategoryRightActiveOrSubscription = this.query().dataSourceTable(tablenum(ProjCategory)).addRange(fieldnum(ProjCategory, RecId));
            qbrCategoryRightActiveOrSubscription.value(strfmt('(%1 == %2) || (%3 == %4)',
                fieldstr(ProjCategory, Active),
                any2int(NoYes::Yes),
                fieldstr(ProjCategory, SetupSubscription),
                any2Int(NoYes::Yes)));

            this.query().dataSourceTable(tablenum(ProjCategory)).addRange(fieldNum(ProjCategory, PSAIndirectComponent)).value(queryValue(NoYes::No));
            this.query().dataSourceTable(tablenum(ProjCategory)).addRange(fieldNum(ProjCategory, PSACustPaymentRetention)).value(queryValue(NoYes::No));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AddCategory</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.addCategoryToSelectedList();

            ProjCategorySelected_DS.executeQuery();
            ProjCategoryAvailable_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemoveCategory</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.removeCategoryFromSelectedList();

            ProjCategorySelected_DS.executeQuery();
            ProjCategoryAvailable_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddAllCategories</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.addAllCategoriesToSelectedListed();

            ProjCategorySelected_DS.executeQuery();
            ProjCategoryAvailable_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemoveAllCategories</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.removeAllCategoriesFromSelectedList();

            ProjCategorySelected_DS.executeQuery();
            ProjCategoryAvailable_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjCategorySelected</Name>
			<Table>ProjCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryEmplOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSACustPaymentRetention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectComponent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupEstimate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupSubscription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCodeId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TsAbsence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjCategoryAvailable</Name>
			<Table>ProjCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Active</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryEmplOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSACustPaymentRetention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectComponent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupEstimate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupSubscription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCodeId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TsAbsence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BottomMargin xmlns="">10</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@PSA2921</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<LeftMargin xmlns="">10</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<RightMargin xmlns="">10</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<TopMargin xmlns="">10</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Header</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ContractId</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getContractId</DataMethod>
						<Label>@PSA143</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ContractDesc</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getContractDesc</DataMethod>
						<Label>@SYS300250</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ContractLineNum</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getContractLineNum</DataMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Project</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getProjectId</DataMethod>
						<Label>@SYS80304</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProjectName</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getProjectName</DataMethod>
						<Label>@SYS139022</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@SYS114913</Caption>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabControl</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<Pattern>ListPanel</Pattern>
						<PatternVersion>1.3</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ListPanelGroup</Name>
								<ExtendedStyle>listPanel</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>AvailableCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<ExtendedStyle>listPanel_availPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>CategoryGridAvailable</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjCategory_Right_CategoryId</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>CategoryId</DataField>
														<DataSource>ProjCategoryAvailable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjCategory_Right_Name</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>ProjCategoryAvailable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ProjCategory_Right_CategoryType</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>CategoryType</DataField>
														<DataSource>ProjCategoryAvailable</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataSource>ProjCategoryAvailable</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS304923</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SeperatorControlCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddCategory</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveRight</NormalImage>
												<Text>@SYS2318</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>RemoveCategory</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveLeft</NormalImage>
												<Text>@SYS311855</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddAllCategories</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveAllRight</NormalImage>
												<Text>@SYS105245</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>RemoveAllCategories</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<NormalImage>MoveAllLeft</NormalImage>
												<Text>@SYS70471</Text>
											</AxFormControl>
										</Controls>
										<BottomMargin>100</BottomMargin>
										<BottomMarginMode>Fixed</BottomMarginMode>
										<TopMargin>100</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SelectedCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<ExtendedStyle>listPanel_selPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>CategoryGridSelected</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjCategory_Left_CategoryId</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>CategoryId</DataField>
														<DataSource>ProjCategorySelected</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjCategory_Left_Name</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>ProjCategorySelected</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ProjCategory_Left_CategoryType</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>CategoryType</DataField>
														<DataSource>ProjCategorySelected</DataSource>
														<Items />
													</AxFormControl>
												</Controls>
												<DataSource>ProjCategorySelected</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS70576</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Proj:Categories</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>