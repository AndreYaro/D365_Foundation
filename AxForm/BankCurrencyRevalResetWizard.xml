<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BankCurrencyRevalResetWizard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BankCurrencyRevalResetWizard extends FormRun
{
    private BankCurrencyRevalResetWizard sysWizard;

    private BankCurrencyRevalCompanyFilter companyFilter;
    private BankCurrencyRevalResetController bankCurrencyRevalResetController;
    private BankCurrencyRevalResetContract bankCurrencyResetContract;
    private BankCurrencyRevalResetDimensionSettingTmp resetDimensionSetting;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args().caller() && element.args().caller() is BankCurrencyRevalResetWizard)
        {
            sysWizard = element.args().caller() as BankCurrencyRevalResetWizard;
        }
        else
        {
            BankCurrencyRevalResetWizard::main(new Args());
            element.close();
        }

        bankCurrencyRevalResetController = new BankCurrencyRevalResetController();

        bankCurrencyResetContract = bankCurrencyRevalResetController.getContract();

        this.setupDimensionSettingDataSource();

        this.applyGroupBy();
        
        RunOnceNotification.visible(BankCurrencyRevalOneTimeResetFlight::instance().isEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>wizard</Name>
				<Source><![CDATA[
    private SysWizard wizard()
    {
        return sysWizard;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyGroupBy</Name>
				<Source><![CDATA[
    private void applyGroupBy()
    {
        BankAccounts.groupBy(identifierStr(BankAccountTable_DataAreaId));

        BankAccountsFiltered.groupBy(identifierStr(BankAccountTableFiltered_DataAreaId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupDimensionSettingDataSource</Name>
				<Source><![CDATA[
    private void setupDimensionSettingDataSource()
    {
        this.initializeDimensionSettingInstance();

        ResetDimensionTmp.linkPhysicalTableInstance(resetDimensionSetting);
        ResetDimensionTmpFiltered.linkPhysicalTableInstance(resetDimensionSetting);
        ResetDimensionTmpDateValidation.linkPhysicalTableInstance(resetDimensionSetting);

        ResetDimensionTmp_ds.query().dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp)).addSortField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, CompanyId));
        ResetDimensionTmp_ds.query().dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp)).addSortField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, AccountID));

        ResetDimensionTmpFiltered_ds.query().dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp)).addSortField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, CompanyId));
        ResetDimensionTmpFiltered_ds.query().dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp)).addSortField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, AccountID));

        ResetDimensionTmpDateValidation_ds.queryBuildDataSource().addDataSource(tableNum(BankCurrencyRevalHistory));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFinish</Name>
				<Source><![CDATA[
    public boolean validateFinish()
    {
        boolean ret = true;

        if (!this.hasRecordsToBeProcessed())
        {
            error("@CashManagement:BankCurrencyRevalResetNoAccountSelected");
            ret = false;
        }
        else if (PostingDate.dateValue() == dateNull())
        {
            error(strFmt("@SYS331078", "@CashManagement:BankCurrencyRevalResetPostingDate"));
            ret = false;
        }
        else if (!this.validatePostingDate())
        {
            error("@CashManagement:BankCurrencyRevalResetInvalidResetPostingDate");
            ret = false;
        }
        else if (!this.validateDateInOpenFisicalPeriod())
        {
            ret = false;
        }
        else if (Box::yesNo("@CashManagement:BankCurrencyRevalResetPostingDateConfirmation", DialogButton::No) == DialogButton::No)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReset</Name>
				<Source><![CDATA[
    public void processReset()
    {
        this.applyValuesToContract(bankCurrencyResetContract);

        bankCurrencyRevalResetController.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyValuesToContract</Name>
				<Source><![CDATA[
    protected void applyValuesToContract(BankCurrencyRevalResetContract _bankCurrencyResetContract)
    {
        container config;

        for (BankCurrencyRevalResetDimensionSettingTmp dimensionSettingLocal = ResetDimensionTmpFiltered_ds.getFirst(); dimensionSettingLocal; dimensionSettingLocal = ResetDimensionTmpFiltered_ds.getNext())
        {
            config += [[dimensionSettingLocal.RefRecId, dimensionSettingLocal.ResetDimensionSetting]];
        }

        _bankCurrencyResetContract.parmPostingDate(PostingDate.dateValue());
        _bankCurrencyResetContract.parmBankDimensionConfig(config);
        _bankCurrencyResetContract.parmNeedsToBeSplitIntoTasks(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearSortOnResetDimensionTmp</Name>
				<Source><![CDATA[
    private void clearSortOnResetDimensionTmp()
    {
        int dataSourceCount = ResetDimensionTmp_ds.query().dataSourceCount();

        for (int dataSourceNo = 1; dataSourceNo <= dataSourceCount; dataSourceNo ++)
        {
            QueryBuildDataSource qbds = ResetDimensionTmp_ds.query().dataSourceNo(dataSourceNo);
            qbds.sortClear();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearSortOnFilteredResetDimensionTmp</Name>
				<Source><![CDATA[
    private void clearSortOnFilteredResetDimensionTmp()
    {
        int dataSourceCount = ResetDimensionTmpFiltered_ds.query().dataSourceCount();

        for (int dataSourceNo = 1; dataSourceNo <= dataSourceCount; dataSourceNo ++)
        {
            QueryBuildDataSource qbds = ResetDimensionTmpFiltered_ds.query().dataSourceNo(dataSourceNo);
            qbds.sortClear();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearQueryResetDimensionTmpDateValidation</Name>
				<Source><![CDATA[
    private void clearQueryResetDimensionTmpDateValidation()
    {
        int dataSourceCount = ResetDimensionTmpDateValidation_ds.query().dataSourceCount();

        for (int dataSourceNo = 1; dataSourceNo <= dataSourceCount; dataSourceNo ++)
        {
            QueryBuildDataSource qbds = ResetDimensionTmpDateValidation_ds.query().dataSourceNo(dataSourceNo);
            qbds.clearRanges();
            qbds.clearLinks();
            qbds.fields().clearFieldList();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterDimensionChange</Name>
				<Source><![CDATA[
    private void filterDimensionChange()
    {
        QueryBuildDataSource qbds = ResetDimensionTmpFiltered_ds.query()
            .dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp));

        boolean hasRecordsSelected = false;

        for (BankCurrencyRevalResetDimensionSettingTmp dimensionSettingLocal = ResetDimensionTmp_ds.getFirst(1); dimensionSettingLocal; dimensionSettingLocal = ResetDimensionTmp_ds.getNext())
        {
            qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId))
                .value(queryValue(dimensionSettingLocal.RecId));

            hasRecordsSelected = true;
        }

        BankAccountsFiltered.visible(hasRecordsSelected);

        if (!hasRecordsSelected)
        {
            qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId))
                .value(queryValue(0));
        }

        ResetDimensionTmpFiltered_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearFilterChanges</Name>
				<Source><![CDATA[
    private void clearFilterChanges()
    {
        ResetDimensionTmpFiltered_ds.query()
            .dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp))
            .clearRanges();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePostingDate</Name>
				<Source><![CDATA[
    private boolean validatePostingDate()
    {
        return this.validateLastResetDate() && this.validateRevalHistoryDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddMarkedBankAccount</Name>
				<Source><![CDATA[
    private void queryAddMarkedBankAccount()
    {
        this.clearQueryResetDimensionTmpDateValidation();

        boolean hasRecordsSelected = false;

        QueryBuildDataSource qbds = ResetDimensionTmpDateValidation_ds.query()
            .dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp));

        for (BankCurrencyRevalResetDimensionSettingTmp dimensionSettingLocal = ResetDimensionTmp_ds.getFirst(1); dimensionSettingLocal; dimensionSettingLocal = ResetDimensionTmp_ds.getNext())
        {
            qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId))
                .value(queryValue(dimensionSettingLocal.RecId));

            hasRecordsSelected = true;
        }

        if (!hasRecordsSelected)
        {
            qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId))
                .value(queryValue(0));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLastResetDate</Name>
				<Source><![CDATA[
    private boolean validateLastResetDate()
    {
        this.queryAddMarkedBankAccount();

        ResetDimensionTmpDateValidation_ds.query().dataSourceTable(tableNum(BankCurrencyRevalHistory)).enabled(false);

        QueryBuildDataSource qbds = ResetDimensionTmpDateValidation_ds.query()
            .dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp));

        str resetDateRange = strFmt('> %1',queryValue(PostingDate.dateValue()));

        qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, LastRevalResetDate))
            .value(resetDateRange);

        qbds.addRange(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, LastRevalResetDate))
            .value(queryValue(PostingDate.dateValue()));

        qbds.addSelectionField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId), SelectionField::Count);

        ResetDimensionTmpDateValidation_ds.executeQuery();

        return ResetDimensionTmpDateValidation.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRevalHistoryDate</Name>
				<Source><![CDATA[
    private boolean validateRevalHistoryDate()
    {
        this.queryAddMarkedBankAccount();

        QueryBuildDataSource qbds = ResetDimensionTmpDateValidation_ds.query()
            .dataSourceTable(tableNum(BankCurrencyRevalResetDimensionSettingTmp));

        QueryBuildDataSource qbdsHistory = ResetDimensionTmpDateValidation_ds.query().dataSourceTable(tableNum(BankCurrencyRevalHistory));

        qbdsHistory.enabled(true);

        qbdsHistory.addLink(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, CompanyId), fieldNum(BankCurrencyRevalHistory, LegalEntity));
        qbdsHistory.addLink(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, AccountID), fieldNum(BankCurrencyRevalHistory, BankAccountId));
        qbdsHistory.addRange(fieldNum(BankCurrencyRevalHistory, TransDate)).value(strFmt('> %1', queryValue(PostingDate.dateValue())));
        qbdsHistory.joinMode(JoinMode::ExistsJoin);

        qbds.addSelectionField(fieldNum(BankCurrencyRevalResetDimensionSettingTmp, RecId), SelectionField::Count);

        ResetDimensionTmpDateValidation_ds.executeQuery();

        return ResetDimensionTmpDateValidation.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDateInOpenFisicalPeriod</Name>
				<Source><![CDATA[
    private boolean validateDateInOpenFisicalPeriod()
    {
        boolean ok = true;
        Set validatedCompanies = new Set(Types::String);

        for (BankCurrencyRevalResetDimensionSettingTmp dimensionSettingLocal = ResetDimensionTmpFiltered_ds.getFirst(); dimensionSettingLocal; dimensionSettingLocal = ResetDimensionTmpFiltered_ds.getNext())
        {
            if (!validatedCompanies.in(dimensionSettingLocal.CompanyId))
            {
                changecompany(dimensionSettingLocal.CompanyId)
                {
                    RecId calendarRecId = CompanyInfoHelper::fiscalCalendarRecId();

                    // Validate dates fall in a currently open fiscal period.
                    if (!LedgerFiscalCalendar::checkDateIsValid(calendarRecId, PostingDate.dateValue(), FiscalPeriodType::Operating, false))
                    {
                        ok = checkFailed(strFmt("@CashManagement:BankCurrencyRevalDateNotInOpenFiscalYear", "@CashManagement:BankCurrencyRevalResetPostingDate", curExt()));
                    }
                    validatedCompanies.add(dimensionSettingLocal.CompanyId);
                }
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDimensionSettingInstance</Name>
				<Source><![CDATA[
    private void initializeDimensionSettingInstance()
    {
        CompanyInfo companyInfo;

        while select crosscompany DataArea, RecId from companyInfo
        {
            changecompany (companyInfo.DataArea)
            {
                BankAccountTable bankAccountTableLocal;
                Ledger ledger;

                insert_recordset resetDimensionSetting (RefRecId, CompanyId, Name, AccountID, ResetDimensionSetting, LastDimensionSetting, LastRevalResetDate)
                    select RecId, DataAreaId, Name, AccountID, RevalDimensionSetting, RevalDimensionSetting, LastRevalResetDate from bankAccountTableLocal
                        exists join ledger
                            where ledger.PrimaryForLegalEntity == companyInfo.RecId
                                && (!BankCurrencyRevalOneTimeResetFlight::instance().isEnabled() || bankAccountTableLocal.LastRevalResetDate == dateNull())
                                && (bankAccountTableLocal.CurrencyCode != ledger.AccountingCurrency
                                    || (ledger.ReportingCurrency != '' && bankAccountTableLocal.CurrencyCode != ledger.ReportingCurrency));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasRecordsToBeProcessed</Name>
				<Source><![CDATA[
    private boolean hasRecordsToBeProcessed()
    {
        return ResetDimensionTmpFiltered.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>BankCurrencyRevalResetTab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);

            if (_fromTab == 2 && _toTab == 3)
            {
                element.filterDimensionChange();
            }
            else if (_fromTab == 3 && _toTab == 2)
            {
                element.clearFilterChanges();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostingDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {    
            boolean ret = super();

            ret = ret && element.validatePostingDate();

            if (!ret)
            {
                error("@CashManagement:BankCurrencyRevalResetInvalidResetPostingDate");
            }

            ret = ret && element.validateDateInOpenFisicalPeriod();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ResetDimensionTmp</Name>
			<Table>BankCurrencyRevalResetDimensionSettingTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastRevalResetDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResetDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ResetDimensionTmpFiltered</Name>
			<Table>BankCurrencyRevalResetDimensionSettingTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastRevalResetDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResetDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ResetDimensionTmpDateValidation</Name>
			<Table>BankCurrencyRevalResetDimensionSettingTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastRevalResetDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResetDimensionSetting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:BankFCRReset</Caption>
		<Pattern xmlns="">Wizard</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Wizard</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>BankCurrencyRevalResetTab</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Welcome</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction</Name>
								<ExtendedStyle>Heading</ExtendedStyle>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text></Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body</Name>
								<AllowEdit>No</AllowEdit>
								<HeightMode>SizeToAvailable</HeightMode>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>WelcomeInstruction</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>staticText_defaultHeadingFont</ExtendedStyle>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetProcessOverview</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>WelcomeInstructionP1</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>staticText_defaultBoldFont</ExtendedStyle>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetOverviewP1</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>WelcomeInstructionP2</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetOverviewP2</Text>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:BankCurrencyRevalResetProcessOverview</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DimensionSetting</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstuction2</Name>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@CashManagement:BankCurrencyRevalResetDimensionSetting</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DimensionSettingTitle</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>staticText_defaultHeadingFont</ExtendedStyle>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetSelectAccounts</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DimensionSettingInstruction</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetDimensionSetting</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>BankAccounts</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Grid</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTable_DataAreaId</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyId</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTable_AccountID</Name>
												<AllowEdit>No</AllowEdit>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccountID</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTable_Name</Name>
												<AllowEdit>No</AllowEdit>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>RevalResetDimensionSetting</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ResetDimensionSetting</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
												<Label>@CashManagement:BankCurrencyRevalResetUseDimension</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CurrentDimensionSetting</Name>
												<AllowEdit>No</AllowEdit>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>LastDimensionSetting</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
												<Label>@CashManagement:BankCurrencyRevalResetCurrentDimension</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>LastResetDate</Name>
												<AllowEdit>No</AllowEdit>
												<Type>Date</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>LastRevalResetDate</DataField>
												<DataSource>ResetDimensionTmp</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>ResetDimensionTmp</DataSource>
										<GroupBy>BankAccountTable_DataAreaId</GroupBy>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@CashManagement:BankCurrencyRevalResetSelectAccounts</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DefineResetDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction3</Name>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@CashManagement:BankCurrencyRevalResetDateSelection</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridGroupFiltered</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ResetDateTitle</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>staticText_defaultHeadingFont</ExtendedStyle>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetDefineResetDate</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ResetDateInstruction</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetPostingDateHelpText</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PostingDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@CashManagement:BankCurrencyRevalResetPostingDate</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RunInBatch</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@CashManagement:RunInBatch</Label>
										<Value>1</Value>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>RunOnceNotification</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:BankCurrencyRevalResetRunOnceNotice</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>BankAccountsFiltered</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Grid</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTableFiltered_DataAreaId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyId</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTableFiltered_AccountID</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccountID</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>BankAccountTableFiltered_Name</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FilteredRevalResetDimensionSetting</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ResetDimensionSetting</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
												<Label>@CashManagement:BankCurrencyRevalResetUseDimension</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FilteredCurrentDimensionSetting</Name>
												<AllowEdit>No</AllowEdit>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>LastDimensionSetting</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
												<Label>@CashManagement:BankCurrencyRevalResetCurrentDimension</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>FilteredLastResetDate</Name>
												<AllowEdit>No</AllowEdit>
												<Type>Date</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>LastRevalResetDate</DataField>
												<DataSource>ResetDimensionTmpFiltered</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>ResetDimensionTmpFiltered</DataSource>
										<GroupBy>BankAccountTableFiltered_DataAreaId</GroupBy>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:BankCurrencyRevalResetDefineResetDate</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>