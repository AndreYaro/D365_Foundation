<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SMASubscriptionCreateDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class SMASubscriptionCreateDialog extends FormRun
    {
        SMASubscriptionCreate    smaSubscriptionCreate;
        ProjPeriodId             projPeriodId;
        ProjPeriodId             oldProjPeriodId;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        DialogRunbase dialog = element.args().caller();
        dialog.updateServer();

        if (smaSubscriptionCreate.checkCloseDialog(this))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editallowZeroSalesPrice</Name>
				<Source><![CDATA[
    edit NoYes editallowZeroSalesPrice(boolean _set, NoYes _allowZeroSalesPrice)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmallowZeroSalesPrice(_allowZeroSalesPrice);
        }

        return smaSubscriptionCreate.parmallowZeroSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContinues</Name>
				<Source><![CDATA[
    edit NoYes editContinues(boolean _set, NoYes _continues)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmContinues(_continues);
        }

        return smaSubscriptionCreate.parmContinues();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editEndDate</Name>
				<Source><![CDATA[
    edit TransDate editEndDate(boolean _set, TransDate _endDate)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmEndDate(_endDate);
        }

        return smaSubscriptionCreate.parmEndDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editGetPriceFrom</Name>
				<Source><![CDATA[
    edit SMAGetPriceFrom editGetPriceFrom(boolean _set, SMAGetPriceFrom _getPriceFrom)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmGetPriceFrom(_getPriceFrom);
        }

        return smaSubscriptionCreate.parmGetPriceFrom();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editInvoicePeriod</Name>
				<Source><![CDATA[
    edit ProjPeriodId editInvoicePeriod(boolean _set, ProjPeriodId _projPeriodId)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmInvoicePeriod(_projPeriodId);
        }

        return smaSubscriptionCreate.parmInvoicePeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPctPriceChange</Name>
				<Source><![CDATA[
    edit Percent editPctPriceChange(boolean _set, Percent _pctPriceChange)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmpctPriceChange(_pctPriceChange);
        }

        return smaSubscriptionCreate.parmpctPriceChange();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriodType</Name>
				<Source><![CDATA[
    edit SMASubscriptionPeriodType editPeriodType(boolean _set, SMASubscriptionPeriodType _periodtype)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmPeriodType(_periodtype);
        }

        return smaSubscriptionCreate.parmPeriodType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPostingDate</Name>
				<Source><![CDATA[
    edit TransDate editPostingDate(boolean _set, TransDate _postingDate)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmpostingDate(_postingDate);
        }

        return smaSubscriptionCreate.parmpostingDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editProjPeriodFrom</Name>
				<Source><![CDATA[
    edit ProjPeriodFrom editProjPeriodFrom(boolean _set, ProjPeriodFrom _projPeriodFrom)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmProjPeriodFrom(_projPeriodFrom);
        }

        return smaSubscriptionCreate.parmProjPeriodFrom();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editprojPeriodTo</Name>
				<Source><![CDATA[
    edit ProjPeriodTo editprojPeriodTo(boolean _set, ProjPeriodTo _projPeriodTo)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmProjPeriodTo(_projPeriodTo);
        }

        return smaSubscriptionCreate.parmProjPeriodTo();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editShowinfoLog</Name>
				<Source><![CDATA[
    edit NoYes editShowinfoLog(boolean _set, NoYes _noYes)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmShowInfoLog(_noYes);
        }

        return smaSubscriptionCreate.parmShowInfoLog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editStartDate</Name>
				<Source><![CDATA[
    edit TransDate editStartDate(boolean _set, TransDate _startDate)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmStartDate(_startDate);
        }

        return smaSubscriptionCreate.parmStartDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editTransTxt</Name>
				<Source><![CDATA[
    edit TransTxt editTransTxt(boolean _set, TransTxt _transTxt)
    {
        if (_set)
        {
            smaSubscriptionCreate.parmTransTxt(_transTxt);
        }

        return smaSubscriptionCreate.parmTransTxt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args() || !element.args().caller() || !element.args().caller().runBase())
        {
            throw error(strfmt("@SYS54195", funcname()));
        }

        smaSubscriptionCreate   = element.args().caller().runBase();
        projPeriodId            = smaSubscriptionCreate.parmInvoicePeriod();

        super();

        element.initFromInvoicePeriod(smaSubscriptionCreate.parmInvoicePeriod() == "");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDates</Name>
				<Source><![CDATA[
    void initDates(TransDate _transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        TransDate               subStartDate, subEndDate;
        SMASubscriptionTable    smaSubscriptionTable;
        ProjRevenueTrans        projRevenueTrans;
        ProjRevenueTransSale    projRevenueTransSale;

        switch (smaSubscriptionCreate.parmPeriodType())
        {
            case SMASubscriptionPeriodType::Regular:
                if (smaSubscriptionCreate.smaSubscriptionId())
                {
                    smaSubscriptionTable        = SMASubscriptionTable::find(smaSubscriptionCreate.smaSubscriptionId());
                    [subStartDate, subEndDate] = smaSubscriptionCreate.initNextDates(smaSubscriptionTable.invoicePeriodCode(),smaSubscriptionTable.LatestEnddate ? smaSubscriptionTable.LatestEnddate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                }
                else if (smaSubscriptionCreate.parmInvoicePeriod())
                {
                    [subStartDate, subEndDate] =  smaSubscriptionCreate.initNextDates(smaSubscriptionCreate.parmInvoicePeriod(), _transDate);
                }

                smaSubscriptionCreate.parmProjPeriodFrom(subStartDate);
                smaSubscriptionCreate.parmProjPeriodTo(subEndDate);
                break;
            case SMASubscriptionPeriodType::NonRegular:
                if (smaSubscriptionCreate.smaSubscriptionId())
                {
                    smaSubscriptionTable       = SMASubscriptionTable::find(smaSubscriptionCreate.smaSubscriptionId());
                    [subStartDate, subEndDate] = smaSubscriptionCreate.initNextDates(smaSubscriptionTable.invoicePeriodCode(),smaSubscriptionTable.LatestEnddate ? smaSubscriptionTable.LatestEnddate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                    if (! smaSubscriptionTable.LatestEnddate)
                    {
                        smaSubscriptionCreate.parmStartDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                        smaSubscriptionCreate.parmEndDate(ProjPeriodLine::findNextFromPeriodTo(smaSubscriptionTable.invoicePeriodCode(),DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())).PeriodTo);
                    }
                    else
                    {
                        smaSubscriptionCreate.parmStartDate(subStartDate);
                        smaSubscriptionCreate.parmEndDate(subEndDate);
                    }
                }
                else
                {
                    smaSubscriptionCreate.parmEndDate(dateNull());
                    smaSubscriptionCreate.parmStartDate(dateNull());
                }
                break;
            case SMASubscriptionPeriodType::PriceChange:
            case SMASubscriptionPeriodType::ReductionDays:
                if (smaSubscriptionCreate.smaSubscriptionId())
                {
                    smaSubscriptionTable       = SMASubscriptionTable::find(smaSubscriptionCreate.smaSubscriptionId());

                    select firstonly projRevenueTrans
                        where projRevenueTrans.smaSubscriptionId            == smaSubscriptionTable.SubscriptionId
                           && projRevenueTrans.smaEnddate                   == smaSubscriptionTable.LatestEnddate
                           && projRevenueTrans.smaSubscriptionPeriodType    == SMASubscriptionPeriodType::Regular
                        join projRevenueTransSale
                            where projRevenueTransSale.TransId              == projRevenueTrans.TransId
                                && projRevenueTransSale.TransStatus         != ProjTransStatus::Adjusted;

                    if (! projRevenueTrans)
                    {
                        select firstonly projRevenueTrans
                            where projRevenueTrans.smaSubscriptionId            == smaSubscriptionTable.SubscriptionId
                               && projRevenueTrans.smaEnddate                   == smaSubscriptionTable.LatestEnddate
                               && projRevenueTrans.smaSubscriptionPeriodType    == SMASubscriptionPeriodType::NonRegular
                        join TransId, TransStatus from projRevenueTransSale
                            where projRevenueTransSale.TransId                  == projRevenueTrans.TransId
                               && projRevenueTransSale.TransStatus              != ProjTransStatus::Adjusted;
                    }
                }

                if (projRevenueTrans)
                {
                    smaSubscriptionCreate.parmEndDate(projRevenueTrans.smaEnddate);
                    smaSubscriptionCreate.parmStartDate(projRevenueTrans.smaStartDate);
                }
                else
                {
                    smaSubscriptionCreate.parmEndDate(dateNull());
                    smaSubscriptionCreate.parmStartDate(dateNull());
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoicePeriod</Name>
				<Source><![CDATA[
    void initFromInvoicePeriod(boolean _periodIsEmpty)
    {
        element.setProjPeriodDate(!_periodIsEmpty);

        smaSubscriptionCreate.setQueryRangeFromInvoicePeriod();

        element.runBase().dialogUpdateQuery(Dialog::getDialogFromCaller(element));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runbase</Name>
				<Source><![CDATA[
    RunBase runbase()
    {
        return smaSubscriptionCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjPeriodDate</Name>
				<Source><![CDATA[
    void setProjPeriodDate(boolean visible = (smaSubscriptionCreate.parmInvoicePeriod()!= ''))
    {
        projPeriodFrom.visible(visible);
        projPeriodTo.visible(visible);
        startDate.visible(!visible);
        endDate.visible(!visible);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>editPeriodType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (smaSubscriptionCreate.parmPeriodType() == SMASubscriptionPeriodType::Regular)
            {
                element.editInvoicePeriod(true, projPeriodId);
                editInvoicePeriod.enabled(true);
                element.initFromInvoicePeriod(false);
            }
            else
            {
                element.editInvoicePeriod(true, "");
                editInvoicePeriod.enabled(false);
                element.initFromInvoicePeriod(this.text() == "");
            }

            element.initDates();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editInvoicePeriod</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            boolean valid;

            ret = super();

            // Validate the new value and set it to previous state if validation fails.
            // See editInvoicePeriod::modified() for more information.
            valid = smaSubscriptionCreate.validateInvoicePeriod();
            if (valid)
            {
                element.initFromInvoicePeriod(this.text() == "");
                element.initDates();
            }
            else
            {
                element.editInvoicePeriod(true, oldProjPeriodId);
                this.update();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean             ret;

            // The validate method is called before the new value is set in the
            // smaSubscriptionCreate object. Because of this we cannot validate
            // it here and we will do it in the modified() method.
            // Old value is stored for eventual rollback.
            oldProjPeriodId = smaSubscriptionCreate.parmInvoicePeriod();

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPeriodFrom</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ProjPeriodLine::lookupPeriod(this, smaSubscriptionCreate.parmInvoicePeriod(),smaSubscriptionCreate.parmProjPeriodFrom());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            ret = smaSubscriptionCreate.validateProjInvoicePeriodFrom() && ret;

            smaSubscriptionCreate.parmProjPeriodTo(ProjPeriodLine::findFromPeriod(smaSubscriptionCreate.parmInvoicePeriod(), this.dateValue()).PeriodTo);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>projPeriodTo</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ProjPeriodLine    projPeriodLine = ProjPeriodLine::findFromPeriod(smaSubscriptionCreate.parmInvoicePeriod(),smaSubscriptionCreate.parmProjPeriodFrom());
            ProjPeriodLine::lookupPeriodTo(this, smaSubscriptionCreate.parmInvoicePeriod(),projPeriodLine.PeriodTo);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            ret = smaSubscriptionCreate.validateProjInvoicePeriodTo();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS91624</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CreateSubscription</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RightButtonGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupLeft</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PeriodType</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>editPeriodType</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Create</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPeriodType</DataMethod>
												<Selection>1</Selection>
												<Items />
											</AxFormControl>
										</Controls>
										<Caption>@SYS84208</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InvoicePeriod</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>editInvoicePeriod</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editInvoicePeriod</DataMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>StartDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS84248</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editStartDate</DataMethod>
												<Label>@SYS24050</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>EndDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS84281</HelpText>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editEndDate</DataMethod>
												<Label>@SYS80662</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>ProjPeriodFrom</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editProjPeriodFrom</DataMethod>
												<Label>@SYS24050</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>projPeriodTo</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editprojPeriodTo</DataMethod>
												<Label>@SYS80662</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>editContinues</Name>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Create</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editContinues</DataMethod>
												<Label>@SYS25024</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS84219</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Subscription</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>editGetPriceFrom</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>SMASubscription_Indexation</ConfigurationKey>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Create</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editGetPriceFrom</DataMethod>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>editPctPriceChange</Name>
												<ConfigurationKey>SMASubscription_Indexation</ConfigurationKey>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS84249</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPctPriceChange</DataMethod>
												<Label>@SYS84237</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>editTransTxt</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editTransTxt</DataMethod>
												<Label>@SYS84317</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>editPostingDate</Name>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPostingDate</DataMethod>
												<Label>@SYS14475</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>editallowZeroSalesPrice</Name>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS84302</HelpText>
												<NeededPermission>Create</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editallowZeroSalesPrice</DataMethod>
												<Label>@SYS84301</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS14482</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Infolog</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>CtrlShowInfoLog</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS84234</HelpText>
												<NeededPermission>Create</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editShowinfoLog</DataMethod>
												<Label>@SYS74132</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS25246</Caption>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupRight</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>dialogStartGrp</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
