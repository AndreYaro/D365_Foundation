<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxReportHierarchyDesigner_IN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TaxReportHierarchyDesigner_IN extends FormRun
{
    //*******************************************************//
    // This form lets the user design and modify structures  //
    //*******************************************************//

    // The hierarchy being displayed
    TaxReportHierarchyInstance_IN       hierarchy;
    TaxReportHierarchyController_IN     controller;
    str                                 findString;

}
]]></Source>
			</Method>
			<Method>
				<Name>cancelSearch</Name>
				<Source><![CDATA[
    // Form parts
    /// <summary>
    /// Cancel the current search.
    /// </summary>
    void cancelSearch()
    {
        if (cancelSearch.enabled())
        {
            findString = '';
            FindFilter.parmFilterValue('');
            FindFilter.setFocus();
            controller.cancelFindNode();
            element.setRootInHierarchy();
            element.updateFindGroup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayHierarchyListForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the current hierarchy in the hierarchy list form.
    /// </summary>
    void displayHierarchyListForm()
    {
        Form            taxReportHierarchyList_IN;
        Args            args;
        FormRun         formRun;

        taxReportHierarchyList_IN = new Form(formStr(TaxReportHierarchyList_IN));

        args = new Args();
        args.parm(hierarchy.getHierarchyName());
        args.object(taxReportHierarchyList_IN);
        args.caller(element);

        formRun = classFactory.formRunClass(args);
        formRun.run();
        formRun.wait(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNodeDetailsForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display the details form of the selected node. For example, if the selected
    /// node represents a tax component, then the TaxComponentTable_IN form should
    /// be opened.
    /// </summary>
    void displayNodeDetailsForm()
    {
        TaxReportHrchyNode_IN   node;
        FormRun                 formRun;
        Args                    args;

        node = controller.getSelectedNode();
        args = new Args();

        switch (node.parmClassId())
        {
            case classNum(TaxReportHrchyTaxComponentNode_IN):
                args.parm(node.parmDisplayValue());
                args.parmEnum(TaxComponentTable_IN::findTaxComponent(node.parmDisplayValue()).TaxType);
                args.parmEnumType(args.parmEnum());

                formRun = new MenuFunction(
                    menuitemDisplayStr(TaxComponentTable_IN),
                    MenuItemType::Display).create(args);
                formRun.run();
                formRun.wait(true);
                break;

            case classNum(TaxReportHrchyServAcctCodeNode_IN):
                args.parm(node.parmDisplayValue());

                formRun = new MenuFunction(
                    menuitemDisplayStr(ServiceCodeTable_IN),
                    MenuItemType::Display).create(args);
                formRun.run();
                formRun.wait(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        //**********************//
        // Initializes the form //
        //**********************//

        super();

        // Get parameter information
        if (element.args() && element.args().parmObject())
        {
            hierarchy = element.args().parmObject();
        }

        controller = TaxReportHierarchyController_IN::construct(hierarchy, element);

        HierarchyDesignerControl.build();
        HierarchyDesignerControl.initControl(controller);
        HierarchyDesignerControl.notifyCenterNodeChanged += eventhandler(controller.changeSelectedNode);

        element.updateFindGroup();

        element.updateEditStructureButton();
        element.updateSetupButtonGroup();
        element.updatePreviewGroup(hierarchy.rootNode());
        element.updateToggleEnableButton();

        HierarchyDesignerControl.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current hierarchy instance.
    /// </summary>
    /// <returns>
    /// The current hierarchy instance.
    /// </returns>
    TaxReportHierarchyInstance_IN parmHierarchyInstance()
    {
        return hierarchy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRootInHierarchy</Name>
				<Source><![CDATA[
    private void setRootInHierarchy(int64 _nodeId = controller.getRootID())
    {
        HierarchyDesignerControl.parmRootNodeId(_nodeId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>performFind</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a set of nodes with the input string in the "Find" bar.
    /// 1) If found, switch to the first node in the result
    /// 2) If not found, popup a warning message
    /// </summary>
    void performFind(str _findString)
    {
        TaxReportHrchyNode_IN    foundNode;

        foundNode = controller.findNodeBySearchName(_findString);

        if (foundNode)
        {
            // Found
            element.setRootInHierarchy(foundNode.parmRecId());
            this.updateFindGroup();
        }
        else
        {
            // Not found
            info(strFmt("@SYS321704", _findString));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performFindNext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the next node in the search results.
    /// </summary>
    void performFindNext()
    {
        TaxReportHrchyNode_IN    foundNode;

        foundNode = controller.getNextFoundNode();

        if (foundNode)
        {
            // If the next node is found, update UI accordingly
            element.setRootInHierarchy(foundNode.parmRecId());
            this.updateFindGroup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performFindPrevious</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the previous node in the search results.
    /// </summary>
    void performFindPrevious()
    {
        TaxReportHrchyNode_IN    foundNode;

        foundNode = controller.getPreviousFoundNode();

        if (foundNode)
        {
            // If the previous node is found, update UI accordingly
            element.setRootInHierarchy(foundNode.parmRecId());
            this.updateFindGroup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>performSynchronize</Name>
				<Source><![CDATA[
    void performSynchronize()
    {
        hierarchy.synchronize();

        HierarchyDesignerControl.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>toggleEnableNode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Togglely enable/disable the selected node.
    /// </summary>
    void toggleEnableNode()
    {
        controller.toggleEnableNode();

        HierarchyDesignerControl.refresh();

        element.updateToggleEnableButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>toggleShowPreviewGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Togglely shows the preview pane.
    /// </summary>
    void toggleShowPreviewGroup()
    {
        previewGroup.visible(!previewGroup.visible());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEditStructureButton</Name>
				<Source><![CDATA[
    void updateEditStructureButton()
    {
        editStructure.enabled(
            TaxReportHierarchyHelper_IN::allowToEditHierarchyVersion(hierarchy.getHierarchyVersion()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFindGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the find group.
    /// 1) Enable the previous button if there are "previous" nodes in the current search.
    /// 2) Enable the next button if there are "next" nodes in the current search.
    /// 3) Enable the cancel button if the current search has non-empty results.
    /// </summary>
    void updateFindGroup()
    {
        findPrev.enabled(controller.hasPreviousFoundNode());
        findNext.enabled(controller.hasNextFoundNode());
        cancelSearch.enabled(controller.hasFoundNodes());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNodeDetailsButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the "Node details" button as per the selected node.
    /// 1) If the node value comes from an enum, the "Node details" button will be disabled
    /// 2) If the node value comes from a table, the "Node details" button will be enabled, so that
    ///    user can click the button to bring up the details form
    /// </summary>
    public void updateNodeDetailsButton()
    {
        boolean enabled = false;

        if (controller.getSelectedNode().parmNodeType() == TaxReportHierarchyNodeType_IN::TableNode)
        {
            enabled = true;
        }

        nodeDetailsButton.enabled(enabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePreviewGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the preview group with the current node information.
    /// </summary>
    /// <param name="_node">
    /// The current node.
    /// </param>
    void updatePreviewGroup(TaxReportHrchyNode_IN _node)
    {
        if (_node)
        {
            previewTitleControl.text(_node.parmDisplayValue());
            nodeTypeControl.text(_node.getNodeTypeLabel());
            searchNameControl.text(_node.parmDisplayValue());
        }
        else
        {
            previewTitleControl.text('');
            nodeTypeControl.text('');
            searchNameControl.text('');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSetupButtonGroup</Name>
				<Source><![CDATA[
    void updateSetupButtonGroup()
    {
        TaxReportHierarchy_IN   hierarchyLoc;

        hierarchyLoc = TaxReportHierarchy_IN::find(hierarchy.getHierarchyVersion().TaxReportHierarchy_IN);

        viewPanelSetup.enabled(hierarchyLoc.IsSetoffable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateToggleEnableButton</Name>
				<Source><![CDATA[
    void updateToggleEnableButton()
    {
        boolean enabled;

        enabled = controller.getSelectedNode().parmEnable();

        if (enabled)
        {
            // Show the "Disable" button
            enableButton.text("@SYS70337");
            enableButton.helpText("@SYS4005624");
            enableButton.normalImage("12259");
        }
        else
        {
            // Show the "Enable" button
            enableButton.text("@SYS70338");
            enableButton.helpText("@SYS4005625");
            enableButton.normalImage("10810");
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>EditStructure</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            EditStructure.visible(false);
            SynchronizeButton.visible(false);
            EnableButton.visible(true);

            if (hierarchy.rootNode())
            {
                element.setRootInHierarchy(hierarchy.rootNode().parmRecId());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SynchronizeButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.performSynchronize();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnableButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.toggleEnableNode();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NodeDetailsButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.displayNodeDetailsForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HidePreviewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.toggleShowPreviewGroup();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SetupTaxSetOffRule</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            FormRun formRun;
            Args    args;

            args = new Args();
            args.record(hierarchy.getHierarchyVersion());

            formRun = new MenuFunction(menuitemDisplayStr(TaxReportHierarchySetOffRules_IN), MenuItemType::Display).create(args);

            if (formRun)
            {
                formRun.run();
                formRun.wait(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FindFilter</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>applyFilter</Name>
						<Source><![CDATA[
        /// <summary>
        /// This method fires when a enter key is hit in the filter control.
        /// </summary>
        public void applyFilter()
        {
            str searchText = this.parmFilterValue();

            super();

            if (strlen(searchText) != 0)
            {
                if (findString)
                {
                    // clear results from previous search
                    element.cancelSearch();
                }
                this.parmFilterValue(searchText);
                element.performFind(searchText);
            }
            else
            {
                element.cancelSearch();
                this.setFocus();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CancelSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.cancelSearch();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FindPrev</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.performFindPrevious();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FindNext</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.performFindNext();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS4005621</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Height xmlns="">600</Height>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">1024</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Maintain</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>EditStructure</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AcquireFocus>No</AcquireFocus>
								<Big>Yes</Big>
								<Text>@SYS322285</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>SynchronizeButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Read</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AcquireFocus>No</AcquireFocus>
								<Big>Yes</Big>
								<Text>@SYS26522</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>EnableButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1503238552</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AcquireFocus>No</AcquireFocus>
								<Big>Yes</Big>
								<Text>@SYS93153</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS322962</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RelatedInformation</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>NodeDetailsButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AcquireFocus>No</AcquireFocus>
								<Big>Yes</Big>
								<Text>@SYS4005622</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>HidePreviewButton</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AcquireFocus>No</AcquireFocus>
								<Text>@SYS322284</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS322960</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ViewPanelSetup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>SetupTaxSetOffRule</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS4005633</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS342635</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FileterGroup</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>FindFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>CancelSearch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>Flat</Border>
						<ButtonDisplay>ImageOnly</ButtonDisplay>
						<NormalImage>Cancel</NormalImage>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS321705</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>FindPrev</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>Flat</Border>
						<ButtonDisplay>ImageOnly</ButtonDisplay>
						<NormalImage>Previous</NormalImage>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS321426</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>FindNext</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>Flat</Border>
						<ButtonDisplay>ImageOnly</ButtonDisplay>
						<NormalImage>Next</NormalImage>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS321427</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Style>CustomFilter</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>HierarchyDesignerControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>SizeToAvailable</HeightMode>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>HierarchyViewer</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmNumChildrenToDisplay</Name>
									<Type>Int32</Type>
									<Value>4</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmNumGrandchildrenToDisplay</Name>
									<Type>Int32</Type>
									<Value>6</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccessibleDescription</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccessibleDescriptionPrevChildren</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccessibleDescriptionNextChildren</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccessibleDescriptionPrevGrandchildren</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccessibleDescriptionNextGrandchildren</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
				<Columnspace>5</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>PreviewGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PreviewTitleControl</Name>
						<AlignControl>No</AlignControl>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<ColorScheme>WindowsPalette</ColorScheme>
						<ExtendedDataType>TaxReportHrchyNodeDisplayValue_IN</ExtendedDataType>
						<FontSize>11</FontSize>
						<ForegroundColor>DynTitleGreen</ForegroundColor>
						<ShowLabel>No</ShowLabel>
						<Style>TitleField</Style>
						<ViewEditMode>View</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>NodeDetails</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NodeTypeControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS40518</Label>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SearchNameControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TaxReportHrchyNodeDisplayValue_IN</ExtendedDataType>
								<Label>@SYS324439</Label>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AlignChildren>No</AlignChildren>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>HierarchyDetailPart</Name>
			<ElementPosition>715827882</ElementPosition>
			<MenuItemName>TaxReportHierarchyDesignerDetail_IN</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>HierarchyVersionPart</Name>
			<ElementPosition>1431655764</ElementPosition>
			<MenuItemName>TaxReportHierarchyDesignerVersions_IN</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>StructureSchematicDiagramPart</Name>
			<MenuItemName>TaxReportStructureSchematicDiagram_IN</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>