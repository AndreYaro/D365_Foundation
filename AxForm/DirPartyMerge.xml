<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DirPartyMerge</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DirPartyMerge extends FormRun
{
    FormDataSource  callerDataSource;
    container       selectedPartyRecIds;
    container       selectedPartyNames;
    dirPartyTable   partyRecord;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        DirPartyMerge   partyMerge;
        DualWriteProjectConfigurationEntity mappings;

        //Disable Merge when Dual Write mappings for Party is running.
        select firstonly mappings where mappings.ExternalEntityName == 'msdyn_parties';

        if(mappings)
        {
            throw error("@GlobalAddressBook:PartyMergeDisabled");
        }
        // merge
        partyMerge = new DirPartyMerge();
        partyMerge.parmSelectedParties(selectedPartyRecIds);
        partyMerge.mergedPartyId(partyRecord.RecId);
        if (partyMerge.validateMerge())
        {
            partyMerge.parmNotes(reasonMemo.text());
            partyMerge.run();
            callerDataSource.executeQuery();
            callerDataSource.positionToRecordByValue(fieldnum(DirPartyTable,Recid),queryValue(partyRecord.RecId));
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedParties</Name>
				<Source><![CDATA[
    void getSelectedParties()
    {
        DirPartyTable   partyTable;
        FormRun fr;
        DirPartyCheckDuplicate checkDuplicate;

        partyTable = callerDataSource.getFirst(true);

        // Only one party is selected
        if (!partyTable)
        {
            // Get party
            partyTable = callerDataSource.cursor();

            if (partyTable)
            {
                selectedPartyRecIds = [partyTable.RecId];
                selectedPartyNames = [partyTable.Name];
            }
        }
        else
        {
            // Traverse the selected parties
            for (partyTable = callerDataSource.getFirst(true); partyTable; partyTable = callerDataSource.getNext())
            {
                selectedPartyRecIds += partyTable.RecId;
                selectedPartyNames += partyTable.Name;
            }
        }

        // Include the party being search against
        fr = element.args().caller();
        if (fr.args().parmObject() is DirPartyCheckDuplicate)
        {
            checkDuplicate = fr.args().parmObject();
            selectedPartyRecIds += checkDuplicate.parmPartyRecord().RecId;
            selectedPartyNames += checkDuplicate.parmPartyRecord().Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        if (!element.args() || !element.args().caller() ||
            !SysDictClass::isEqualOrSuperClass(classIdGet(element.args().caller()),classnum(FormRun)) ||
            !FormDataUtil::isFormDataSource(element.args().record()))
        {
            throw error("@SYS22996");
        }
        callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
        element.getSelectedParties();
        this.args().record(null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateParties</Name>
				<Source><![CDATA[
    boolean validateParties(FormReferenceControl _control)
    {
        boolean ret = true;

        if (!confind(selectedPartyRecIds,_control.value()))
        {
            // The value '%1' in field '%2' is not found in relating table '%3'.
            ret = checkFailed(strfmt("@SYS112224",DirPartyTable::getName(_control.value()), fieldPName(DirPartyTable, Name),tableid2pname(tablenum(DirPartyTable))));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Party</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Object lookupForm;
            Args    args;

            args = new Args(formstr(DirPartyLookup));
            args.caller(this);
            lookupForm = classfactory.formRunClass(args);
            lookupForm.parmMergeLookup(true);
            lookupForm.parmMergePartyIds(selectedPartyRecIds);
            lookupForm.init();
            this.performFormLookup(lookupForm);

            partyRecord = lookupForm.selectRecordModeSelectedRecord();

            return partyRecord;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            boolean enableButtons;

            ret = super();

            if (ret)
            {
                enableButtons = this.value() != 0;
                validateMerge.enabled(enableButtons);
                commandButtonOK.enabled(enableButtons);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super() && element.validateParties(this);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidateMerge</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            DirPartyMerge   partyMerge;
            // merge
            partyMerge = new DirPartyMerge();
            partyMerge.parmSelectedParties(selectedPartyRecIds);
            partyMerge.mergedPartyId(partyRecord.RecId);
            if (partyMerge.validateMerge())
            {
                info("@SYS111925");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS321780</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_Group</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ParyIds</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>Party</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Party_Name</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<ExtendedDataType>DirPartyRecId</ExtendedDataType>
								<Label>@SYS321781</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Memo</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReasonMemo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Notes</ExtendedDataType>
								<Label>@SYS86426</Label>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
						</Controls>
						<BottomMargin>20</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ValidateMerge</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS41362</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButtonOK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButtonCancel</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>