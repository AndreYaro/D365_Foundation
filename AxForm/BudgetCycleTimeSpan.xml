<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetCycleTimeSpan</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetCycleTimeSpan extends FormRun implements OfficeIGeneratedWorkbookCustomExporter
{
    #task

    recId fiscalCalendarRecId;
    recId budgetCycleTimeSpanRecId;
    RecId budgetCycleRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>saveBudgetCycleTimeSpan</Name>
				<Source><![CDATA[
    /// <summary>
    /// Attempts to save the budget cycle time span if all mandatory fields are entered.
    /// </summary>
    private void saveBudgetCycleTimeSpan()
    {
        if (!budgetCycleTimeSpan.RecId
            && budgetCycleTimeSpan.Name
            && budgetCycleTimeSpan.FiscalCalendar)
        {
            if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::MapToFiscalYear)
            {
                // Save the budget cycle time span if all mandatory fields are entered.
                element.task(#taskSave);
            }
            else if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::SpecifyPeriods)
            {
                if (budgetCycleTimeSpan.DefaultNumberOfAccountingPeriods > 0)
                {
                    // Save the budget cycle time span if all mandatory fields are entered.
                    element.task(#taskSave);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        element.initValues();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    public void initValues()
    {
        Common                      common;
        FiscalCalendar              fiscalCalendar;
        BudgetControlBudgetCycle    budgetControlBudgetCycle;

        common = element.args().record();

        if (common.RecId != 0)
        {
            if (common.TableId == tablenum(FiscalCalendar))
            {
                // When called from fiscal calendar form.
                fiscalCalendar = common as FiscalCalendar;
                fiscalCalendarRecId = fiscalCalendar.RecId;
            }
            else if (common.TableId == tablenum(BudgetControlBudgetCycle))
            {
                // When called from budget control configuration form.
                // Clear the form title datasource from the dynalink.
                // BudgetControlConfiguration does not have a readable alternate key to display.
                element.args().record(null);

                budgetControlBudgetCycle = common as BudgetControlBudgetCycle;
                budgetCycleRecId = budgetControlBudgetCycle.BudgetCycle;
                budgetCycleTimeSpanRecId = BudgetCycle::find(budgetCycleRecId).BudgetCycleTimeSpan;
            }
            else if (common.TableId == tablenum(BudgetCycle))
            {
                // Clear the form title datasource from the dynalink.
                element.args().record(null);

                budgetCycleRecId = common.RecId;
                budgetCycleTimeSpanRecId = BudgetCycle::find(budgetCycleRecId).BudgetCycleTimeSpan;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEditMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets whether the fields can be editable or not.
    /// </summary>
    public void setEditMode()
    {
        if (budgetCycleTimeSpan.RecId != 0)
        {
            budgetCycleLengthOption.allowEdit(false);
            defaultNumberOfAccountingPeriods.allowEdit(false);
            fiscalCalendarReferenceGroup.allowEdit(false);

            budgetCycle_DS.allowEdit(true);
            budgetCycle_DS.allowCreate(true);
            budgetCycle_DS.allowDelete(true);

            addButton.enabled(true);
            removeButton.enabled(true);
        }
        else
        {
            budgetCycle_DS.allowEdit(false);
            budgetCycle_DS.allowCreate(false);
            budgetCycle_DS.allowDelete(false);

            addButton.enabled(false);
            removeButton.enabled(false);

            fiscalCalendarReferenceGroup.allowEdit(true);

            if (budgetCycleTimeSpan.FiscalCalendar != 0)
            {
                budgetCycleLengthOption.allowEdit(true);

                if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::MapToFiscalYear)
                {
                    budgetCycleLengthOption.selection(BudgetCycleLengthOption::MapToFiscalYear);
                    defaultNumberOfAccountingPeriods.allowEdit(false);
                }
                else
                {
                    defaultNumberOfAccountingPeriods.allowEdit(true);
                }
            }
            else
            {
                budgetCycleLengthOption.allowEdit(false);
                defaultNumberOfAccountingPeriods.allowEdit(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataEntityContext</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>ExportToExcelDataEntityContext</c> that specifies what should be exported for the specifed menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <returns>
    /// Returns the <c>ExportToExcelDataEntityContext</c> that specifies what should be exported for the specifed menu item;
    /// otherwise, null.
    /// </returns>
    public ExportToExcelDataEntityContext getDataEntityContext(OfficeGeneratedExportMenuItem _menuItem)
    {
        return ExportToExcelDataEntityContext::constructDefault(_menuItem.dataEntityName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        ListIterator dataEntityOptionsIterator = new ListIterator(_menuOptions.dataEntityOptions());

        // Remove auto-added data entities from the menu.
        while (dataEntityOptionsIterator.more())
        {
            dataEntityOptionsIterator.delete();
        }

        // Add entities that are not identified by default.
        OfficeGeneratedExportMenuItem menuItem = OfficeGeneratedExportMenuItem::construct(tableStr(BudgetCycleEntity), tableStr(BudgetCycleEntity));
        menuItem.displayName("@Budget:BudgetCycleLabel");
        _menuOptions.customMenuItems().addEnd(menuItem);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetCycleTimeSpan</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (budgetCycleTimeSpan.RecId == 0 && fiscalCalendarRecId != 0)
            {
                // Default the fiscal calendar with the passed in one if there is any.
                budgetCycleTimeSpan.FiscalCalendar = fiscalCalendarRecId;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.setEditMode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            budgetCycleTimeSpan_DS.cacheAddMethod(tablemethodstr(BudgetCycleTimeSpan, displayCalendarId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            element.setEditMode();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            Query  query = this.query();
            QueryBuildDataSource    budgetCycleTimeSpan_qbds;

            budgetCycleTimeSpan_qbds = query.dataSourceTable(tablenum(BudgetCycleTimeSpan));
            budgetCycleTimeSpan_qbds.clearDynalinks();
            budgetCycleTimeSpan_qbds.clearRange(fieldnum(BudgetCycleTimeSpan, FiscalCalendar));
            budgetCycleTimeSpan_qbds.clearRange(fieldnum(BudgetCycleTimeSpan, RecId));

            if (fiscalCalendarRecId != 0)
            {
                // When fiscal calendar is passed in.
                budgetCycleTimeSpan_qbds.addRange(fieldnum(BudgetCycleTimeSpan, FiscalCalendar)).value(SysQuery::value(fiscalCalendarRecId));
            }

            if (budgetCycleTimeSpanRecId != 0)
            {
                // When budget cycle time span is passed in.
                budgetCycleTimeSpan_qbds.addRange(fieldnum(BudgetCycleTimeSpan, RecId)).value(SysQuery::value(budgetCycleTimeSpanRecId));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            element.initValues();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid;

            if (budgetCycleTimeSpan.RecId == 0)
            {
                isValid = super();
            }
            else
            {
                isValid = budgetCycleTimeSpan.validateDelete();

                if (isValid && Box::yesNo("@SYS320426", DialogButton::No) == DialogButton::No)
                {
                    isValid = false;
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BudgetCycleLengthOption</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::MapToFiscalYear)
                {
                    budgetCycleTimeSpan.DefaultNumberOfAccountingPeriods = 0;
                    defaultNumberOfAccountingPeriods.allowEdit(false);
                }
                else
                {
                    defaultNumberOfAccountingPeriods.allowEdit(true);
                }

                // Attempt to save the budget cycle time span if all mandatory fields are entered.
                element.saveBudgetCycleTimeSpan();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DefaultNumberOfAccountingPeriods</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Attempt to save the budget cycle time span if all mandatory fields are entered.
                element.saveBudgetCycleTimeSpan();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FiscalCalendar</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setEditMode();

                // Attempt to save the budget cycle time span if all mandatory fields are entered.
                element.saveBudgetCycleTimeSpan();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                FiscalCalendar fiscalCalendar;
                CalendarId fiscalCalendarIdLocal;

                fiscalCalendarIdLocal = _formReferenceControl.filterValue(AbsoluteFieldBinding::construct(
                    fieldstr(FiscalCalendar, CalendarId),
                    tablestr(FiscalCalendar))).value();

                select firstonly fiscalCalendar
                    where fiscalCalendar.CalendarId == fiscalCalendarIdLocal;

                ret = fiscalCalendar;

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Attempt to save the budget cycle time span if all mandatory fields are entered.
                element.saveBudgetCycleTimeSpan();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>BudgetCycle</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (budgetCycleRecId)
            {
                // Identify the active record if budget cycle record id is passed.
                budgetCycle_ds.positionToRecord(BudgetCycle::find(budgetCycleRecId));

                // Clear the budget cycle record id in order to avoid highlighting
                // the same record when the active record changes.
                budgetCycleRecId = 0;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::SpecifyPeriods)
            {
                endingPeriodDateEdit.allowEdit(true);
            }
            else
            {
                endingPeriodDateEdit.allowEdit(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            budgetCycle.BudgetCycleTimeSpan = budgetCycleTimeSpan.RecId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>StartingPeriodDateEdit</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    fiscalCalendarPeriod_qbds;
            QueryBuildDataSource    fiscalYear_qbds;
            QueryBuildDataSource    fiscalCalendar_qbds;

            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(FiscalCalendarPeriod), this);

            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupfield(fieldnum(FiscalCalendarPeriod, Name));
            sysTableLookup.addLookupfield(fieldnum(FiscalCalendarPeriod, StartDate), true);

            // Limit and arrange the data selection.
            fiscalCalendarPeriod_qbds = query.addDataSource(tablenum(FiscalCalendarPeriod));
            fiscalCalendarPeriod_qbds.addRange(fieldnum(FiscalCalendarPeriod, Type)).value(SysQuery::value(int2str(enum2int(FiscalPeriodType::Operating))));
            fiscalCalendarPeriod_qbds.addOrderByField(fieldnum(FiscalCalendarPeriod, StartDate));
            fiscalYear_qbds = fiscalCalendarPeriod_qbds.addDataSource(tablenum(FiscalCalendarYear));
            fiscalYear_qbds.joinMode(JoinMode::ExistsJoin);
            fiscalYear_qbds.addLink(fieldnum(FiscalCalendarPeriod, FiscalCalendarYear), fieldnum(FiscalCalendarYear, RecId));

            if (budgetCycleTimeSpan.BudgetCycleLengthOption == BudgetCycleLengthOption::MapToFiscalYear)
            {
                // Show only start date of fiscal year in the lookup.
                fiscalYear_qbds.addLink(fieldnum(FiscalCalendarPeriod, StartDate), fieldnum(FiscalCalendarYear, StartDate));
            }

            fiscalCalendar_qbds = fiscalYear_qbds.addDataSource(tablenum(FiscalCalendar));
            fiscalCalendar_qbds.joinMode(JoinMode::ExistsJoin);
            fiscalCalendar_qbds.addLink(fieldnum(FiscalCalendarYear, FiscalCalendar), fieldnum(FiscalCalendar, RecId));
            fiscalCalendar_qbds.addRange(fieldnum(FiscalCalendar, RecId)).value(SysQuery::value(budgetCycleTimeSpan.FiscalCalendar));

            sysTableLookup.parmQuery(query);

            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EndingPeriodDateEdit</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    fiscalCalendarPeriod_qbds;
            QueryBuildDataSource    fiscalYear_qbds;
            QueryBuildDataSource    fiscalCalendar_qbds;

            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tablenum(FiscalCalendarPeriod), this);

            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupfield(fieldnum(FiscalCalendarPeriod, Name));
            sysTableLookup.addLookupfield(fieldnum(FiscalCalendarPeriod, EndDate), true);

            // Limit and arrange the data selection.
            fiscalCalendarPeriod_qbds = query.addDataSource(tablenum(FiscalCalendarPeriod));
            fiscalCalendarPeriod_qbds.addRange(fieldnum(FiscalCalendarPeriod, Type)).value(SysQuery::value(int2str(enum2int(FiscalPeriodType::Operating))));
            fiscalCalendarPeriod_qbds.addOrderByField(fieldnum(FiscalCalendarPeriod, EndDate));

            fiscalYear_qbds = fiscalCalendarPeriod_qbds.addDataSource(tablenum(FiscalCalendarYear));
            fiscalYear_qbds.joinMode(JoinMode::ExistsJoin);
            fiscalYear_qbds.addLink(fieldnum(FiscalCalendarPeriod, FiscalCalendarYear), fieldnum(FiscalCalendarYear, RecId));

            fiscalCalendar_qbds = fiscalYear_qbds.addDataSource(tablenum(FiscalCalendar));
            fiscalCalendar_qbds.joinMode(JoinMode::ExistsJoin);
            fiscalCalendar_qbds.addLink(fieldnum(FiscalCalendarYear, FiscalCalendar), fieldnum(FiscalCalendar, RecId));
            fiscalCalendar_qbds.addRange(fieldnum(FiscalCalendar, RecId)).value(SysQuery::value(budgetCycleTimeSpan.FiscalCalendar));

            sysTableLookup.parmQuery(query);

            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetCycleTimeSpan</Name>
			<Table>BudgetCycleTimeSpan</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetCycleLengthOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultNumberOfAccountingPeriods</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>BudgetCycleTimeSpanIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetCycle</Name>
			<Table>BudgetCycle</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetCycleTimeSpan</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndFiscalCalendarPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartFiscalCalendarPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>BudgetCycleTimeSpan</JoinSource>
			<Index>BudgetCycleIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS320372</Caption>
		<DataSource xmlns="">BudgetCycleTimeSpan</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>BudgetCycleTimeSpan</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BudgetCycleTimeSpan_Name</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>100</Width>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>BudgetCycleTimeSpan</DataSource>
								<Label>@SYS314453</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FiscalCalendar</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>175</Width>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayCalendarId</DataMethod>
								<DataSource>BudgetCycleTimeSpan</DataSource>
								<Label>@SYS105687</Label>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>BudgetCycleTimeSpan</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetCycleTimeSpanName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>BudgetCycleTimeSpan</DataSource>
						<Label>@SYS314453</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>FiscalCalendarReferenceGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FiscalCalendarReferenceGroup_CalendarId</Name>
								<DataRelationPath>FiscalCalendar</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>BudgetCycleTimeSpan</DataSource>
						<ReferenceField>FiscalCalendar</ReferenceField>
						<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>BudgetCycleLengthOption</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCycleTimeSpan_BudgetCycleLengthOption</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>BudgetCycleLengthOption</DataField>
						<DataSource>BudgetCycleTimeSpan</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>DefaultNumberOfAccountingPeriods</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCycleTimeSpan_DefaultNumberOfAccountingPeriods</HelpText>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>DefaultNumberOfAccountingPeriods</DataField>
						<DataSource>BudgetCycleTimeSpan</DataSource>
						<Label>@SYS328508</Label>
						<ShowZero>Yes</ShowZero>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<DataSource>BudgetCycleTimeSpan</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Details</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneStrip</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneStripTab</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ActionPaneStripAddRemoveGroup</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>BudgetCycle</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>BudgetCycle</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>BudgetCycle</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ChildGrid</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BudgetCycle_Name</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetCycleTimeSpan_BudgetCycle_Name</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>BudgetCycle</DataSource>
										<Label>@SYS7399</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>StartingPeriodDateEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>No</CacheDataMethod>
										<DataMethod>editCycleStartDate</DataMethod>
										<DataSource>BudgetCycle</DataSource>
										<Label>@SYS314464</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>EndingPeriodDateEdit</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>No</CacheDataMethod>
										<DataMethod>editCycleEndDate</DataMethod>
										<DataSource>BudgetCycle</DataSource>
										<Label>@SYS320411</Label>
									</AxFormControl>
								</Controls>
								<DataSource>BudgetCycle</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS314460</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>