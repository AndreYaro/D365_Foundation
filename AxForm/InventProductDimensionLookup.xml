<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventProductDimensionLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class InventProductDimensionLookup extends FormRun
    {
        InventDimCtrl_Frm_Lookup    inventDimFormSetup;

        boolean                     canSelect;

        // The mustKeepFormOpened variable is responsible to keep form opened
        boolean                     mustKeepFormOpened;

        // Packed
        boolean                     showAvail;
        boolean                     linkDimOnHand;      // Must link on-hand on all dimensions in caller form
        boolean                     linkDimVariants;    // Must link on all dimensions in caller form
        boolean                     selectAllCombi;

        boolean                     mustSaveLast;
        str                         callerName;
        FormStringControl           callerControl;
        FormStringControl           selectedControl;
        FormDataSource              selectedFormDataSource;
        boolean                     filterLookup;

        boolean                     isRetailLookup;

        InventAvailabilityFormCache inventAvailabilityFormCache;

        private Map inventNameEdtIdRetailFieldId  = new Map(Types::Integer, Types::Integer);
        private Map inventDimFieldIdRetailFieldId = new Map(Types::Integer, Types::Integer);

        #define.CurrentVersion(1)
        #localmacro.CurrentList
            ShowAvail,
            LinkDimOnHand,
            linkDimVariants,
            selectAllCombi
        #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>addInventDimensionMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a set of metadata related to an inventory dimension.
    /// </summary>
    /// <param name = "_inventDimFieldId">An inventory dimension field id in the <c>InventDim</c> table.</param>
    /// <param name = "_dimensionNameEdtId">An inventory dimension name EDT.</param>
    /// <param name = "_retailFieldId">An inventory dimension field id in the <c>RetailTmpDimensionValueDisplayOrder</c> table.</param>
    public void addInventDimensionMetadata(FieldId _inventDimFieldId, ExtendedTypeId _dimensionNameEdtId, FieldId _retailFieldId = 0)
    {
        if (_retailFieldId)
        {
            inventNameEdtIdRetailFieldId.insert(_dimensionNameEdtId, _retailFieldId);
            inventDimFieldIdRetailFieldId.insert(_inventDimFieldId, _retailFieldId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventDimensionMetadataEntries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes maps with dimensions metadata that the form uses.
    /// </summary>
    protected void initInventDimensionMetadataEntries()
    {
        this.addInventDimensionMetadata(
            InventDim::fieldIdSize(),
            extendedTypeNum(EcoResSizeName),
            fieldNum(RetailTmpDimensionValueDisplayOrder, EcoResSize));

        this.addInventDimensionMetadata(
            InventDim::fieldIdColor(),
            extendedTypeNum(EcoResColorName),
            fieldNum(RetailTmpDimensionValueDisplayOrder, EcoResColor));

        this.addInventDimensionMetadata(
            InventDim::fieldIdStyle(),
            extendedTypeNum(EcoResStyleName),
            fieldNum(RetailTmpDimensionValueDisplayOrder, EcoResStyle));        
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyRangesToTmpTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies or clears dimension ranges to the instance of temp table.
    /// </summary>
    /// <param name="_dataSource">
    /// The data source that contains table to apply ranges.
    /// </param>
    /// <param name="_setFilter">
    /// The parameter, which determines whether temp table should be filtered according to the current selection.
    /// </param>
    /// <remarks>
    /// Used when 'Range inventory dimensions' checkbox is checked
    /// </remarks>
    public void applyRangesToTmpTable(FormDataSource _dataSource, boolean _setFilter)
    {
        FormDataSource          callerInventDimDS = element.inventDimSetupObject().callerInventDimFormDatasource();
        InventDim               callerInventDim;
        FieldId                 callerFieldId = element.getDimFieldIdForLookup(NoYes::Yes);

        QueryBuildDataSource    qbds = _dataSource.query().dataSourceTable(tableNum(RetailTmpDimensionValueDisplayOrder));

        qbds.clearRanges();

        if (_setFilter)
        {
            callerInventDim = callerInventDimDS.cursor() as InventDim;

            MapEnumerator inventDimFieldIdRetailFieldIdEnumerator = inventDimFieldIdRetailFieldId.getEnumerator();

            while(inventDimFieldIdRetailFieldIdEnumerator.moveNext())
            {
                anytype callerInventDimFieldValue = callerInventDim.(inventDimFieldIdRetailFieldIdEnumerator.currentKey());
                FieldId retailTmpDimensionValueDisplayOrderFieldId = inventDimFieldIdRetailFieldIdEnumerator.currentValue();
                if (callerInventDimFieldValue
                    && callerFieldId != retailTmpDimensionValueDisplayOrderFieldId)
                {
                    qbds.addRange(retailTmpDimensionValueDisplayOrderFieldId).value(queryValue(callerInventDim.InventSizeId));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        if (canSelect)
        {
            if (mustSaveLast)
            {
                xSysLastValue::saveLast(this);
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    void closeSelect(str p1)
    {
        // If canSelect set to false, than the form hasn't been closed; super() has not been executed
        // If mustKeepFormOpened set to true, then the form has not been closed intentionally,
        // due to user interaction (check/uncheck action on checkbox controls)
        // The canSelect should be switched to true, so the form will be closed next time
        // in the appropriate way; the mustKeepFormOpened should be switched to false as well.

        if (!canSelect)
        {
            if (mustKeepFormOpened)
            {
                mustKeepFormOpened    = false;
                canSelect             = true;
            }

            return;
        }
        if (selectAllCombi && ctrlTabPageCombination.visible() && ctrlTabPageCombination.isActivePage())
        {
            FormDataSource callerInventDimDS = this.inventDimSetupObject().callerInventDimFormDatasource();

            if (callerInventDimDS)
            {
                InventDim callerInventDim = callerInventDimDS.cursor() as InventDim;

                Enumerator enum = InventDim::dimProductDimensionEnabledFieldList().getEnumerator();

                while (enum.moveNext())
                {
                    FieldId fieldId = enum.current();

                    if (inventDimAllVariants.(fieldId))
                    {
                        FormControl control = this.findDimensionControl(gridCombination, fieldId);
                        if (control && control.visible())
                        {
                            callerInventDim.(fieldId) = inventDimAllVariants.(fieldId);
                        }
                    }
                }
                                
                callerInventDimDS.refresh();
            }
        }
        super(p1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDimensionControl</Name>
				<Source><![CDATA[
    private FormStringControl findDimensionControl(Object _parentControl, FieldId _inventDimDataFieldId)
    {
        FormStringControl   dimensionControl;
        FormControl         control;
        int                 controlsCount;
        int                 i;

        //loop all child controls of a container (grid, group) and find the one that has
        //data field the same as passed InventDim field
        controlsCount = _parentControl.controlCount();
        for (i = 1; i <= controlsCount; ++i)
        {
            control = _parentControl.controlNum(i);
            if (control is FormStringControl)
            {
                dimensionControl = control as FormStringControl;
                if (   dimensionControl.dataSource()                        == _parentControl.dataSource()
                    && Global::fieldExt2Id(dimensionControl.dataField())    == _inventDimDataFieldId)
                {
                    return dimensionControl;
                }
            }
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimFieldIdForLookup</Name>
				<Source><![CDATA[
    private FieldId getDimFieldIdForLookup(boolean _lookupForRetail = false)
    {
        SysDictField            callerField;
        ExtendedTypeId          dimensionTypeId;
        FieldId                 dimFieldIdForLookup = 0;
        FormRun                 callerFormRun;
        Form                    callerForm;
        FormBuildDataSource     callerControlDataSource;
        TmpSysQuery             tmpSysQuery;

        //try EDT of a control, if not set then go for DataSource/DataField
        dimensionTypeId = callerControl.extendedDataType();
        if (!dimensionTypeId)
        {
            callerFormRun           = this.args().caller() as FormRun;
            callerForm              = callerFormRun.form();
            callerControlDataSource = callerForm.dataSource(callerControl.dataSource());
            callerField = new SysDictField(
                callerControlDataSource.table(),
                Global::fieldExt2Id(callerControl.dataField()));

            dimensionTypeId = callerField.typeId();

            // If the caller is a sysquery form and the caller control is a range,
            // the caller field is found through the sys query temporary table
            if ((dimensionTypeId == extendedTypeName2Id(extendedTypeStr(Str1260)) 
                    || dimensionTypeId == extendedTypeName2Id(extendedTypeStr(Str4095)))
				&& callerControlDataSource.table() == tableNum(TmpSysQuery))
            {
                tmpSysQuery = this.args().record() as TmpSysQuery;
                callerField = new SysDictField(tmpSysQuery.Table_Id, tmpSysQuery.Field_Id);
                dimensionTypeId = callerField.typeId();
            }
        }
        dimensionTypeId = this.rootExtendedDataType(dimensionTypeId);

        if (_lookupForRetail)
        {
            dimFieldIdForLookup = this.retailFieldNum(dimensionTypeId);
        }

        if (!dimFieldIdForLookup)
        {
            dimFieldIdForLookup = this.dimEDT2FieldId(dimensionTypeId);
        }

        return dimFieldIdForLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retailFieldNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets field Id from the <c>RetailTmpDimensionValueDisplayOrder</c> table that corresponds to an inventory dimension name EDT.
    /// </summary>
    /// <param name = "_extendedTypeId">An inventory dimension name EDT.</param>
    /// <returns>Corresponding field Id from the <c>RetailTmpDimensionValueDisplayOrder</c> table.</returns>
    protected FieldId retailFieldNum(ExtendedTypeId _extendedTypeId)
    {
        if (inventNameEdtIdRetailFieldId.exists(_extendedTypeId))
        {
            return inventNameEdtIdRetailFieldId.lookup(_extendedTypeId);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rootExtendedDataType</Name>
				<Source><![CDATA[
    private ExtendedTypeId rootExtendedDataType(ExtendedTypeId _extendedDataTypeId)
    {
        ExtendedTypeId rootTypeId = _extendedDataTypeId;

        //get to the base type - it must be one of product dimension name types
        var dictType = new DictType(_extendedDataTypeId);
        while (dictType.extend())
        {
            rootTypeId = dictType.extend();
            dictType = new DictType(rootTypeId);
        }
        return rootTypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimEDT2FieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>InventDim</c> field Id for an extended data type.
    /// </summary>
    /// <param name = "_extendedTypeId">The extended data type.</param>
    /// <returns>The field Id.</returns>
    private FieldId dimEDT2FieldId(ExtendedTypeId _extendedTypeId)
    {
        Enumerator enum = InventProductDimension::getEnumerator();

        while (enum.moveNext())
        {
            InventProductDimension inventProductDimension = enum.current() as InventProductDimension;

            if (inventProductDimension.isIdentifyingExtendedDataType(_extendedTypeId))
            {
                return inventProductDimension.parmInventDimFieldId();
            }
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        ExtendedTypeId          dimensionTypeId;
        SysDictType             dimensionEDT;

        callerName  = this.args().callerName();

        callerControl = SysTableLookup::getCallerStringControl(element.args());

        this.initInventDimensionMetadataEntries();

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            //try EDT of a control, if not set then go for DataSource/DataField
            dimensionTypeId = callerControl.extendedDataType();
            if (!dimensionTypeId)
            {
                dimensionTypeId = new SysDictField(callerControl.fieldBinding().tableId(),
                    callerControl.fieldBinding().fieldId()).typeId();
            }
            //get to the base type - it must be one of product dimension name types
            dimensionEDT = new SysDictType(dimensionTypeId);
            while (dimensionEDT.extend())
            {
                dimensionTypeId = dimensionEDT.extend();
                dimensionEDT = new SysDictType(dimensionTypeId);
            }

            if (inventNameEdtIdRetailFieldId.exists(dimensionTypeId))
            {
                isRetailLookup = true;
            }
        }

        super();

        this.addDimensionsToCombinationsGrid();

        element.updateDesign(InventDimFormDesignUpdate::Init);

        // Set the default option to select the released product variant on the Combination Tab
        // It allows user to populate all product dimensions on the line, rathen than one select product dimension value
        selectAllCombi = true;

        xSysLastValue::getLast(this);
        ctrlShowAvail.value(showAvail);

        if (this.inventDimSetupObject().hasCallerInventDimParm())
        {
            ctrlLinkDimOnHand.value(linkDimOnHand);
            ctrlLinkDimCombi.value(linkDimVariants);
            ctrlSelectAllCombi.value(selectAllCombi);
        }
        else
        {
            linkDimOnHand = false;
            ctrlLinkDimOnHand.visible(false);
            linkDimVariants = false;
            ctrlLinkDimCombi.visible(false);
            selectAllCombi = false;
            ctrlSelectAllCombi.visible(false);
        }

        inventAvailabilityFormCache = InventAvailabilityFormCache::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDimensionsToCombinationsGrid</Name>
				<Source><![CDATA[
    private void addDimensionsToCombinationsGrid()
    {
        InventDimensionEnumerator productDimensionsEnumerator = InventProductDimension::getEnumeratorForEnabledOrderedDimensions();
        FormControl gridCombinationControl = this.design().controlName(formControlStr(InventProductDimensionLookup, EcoResProductAllVariants_DisplayProductNumber));

        InventDim current = InventDimAllVariants_ds.cursor();

        while (productDimensionsEnumerator.moveNext())
        {
            gridCombinationControl = GridCombination.addDataField(InventDimAllVariants_ds.id(), productDimensionsEnumerator.currentInventDimFieldId(), gridCombinationControl);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDimensionControls</Name>
				<Source><![CDATA[
    private void initDimensionControls()
    {
        FormStringControl   dimensionControl;
        FieldId             dimFieldIdForLookup = this.inventDimSetupObject().parmMainSortFieldId();
        FieldId             retailFieldIdForLookup = this.getDimFieldIdForLookup(true);

        void moveControlToBeginning(Object _container, FormStringControl _control)
        {
            FormControl firstControl;

            do
            {
                _container.moveControl(_control.id());
                firstControl = _container.controlNum(1);
            }
            while (firstControl.id() != _control.id());
        }

        //make a dimension field (the one for we are looking up) the first field (after the product number) in the combination grid
        dimensionControl = this.findDimensionControl(gridCombination, dimFieldIdForLookup);
        moveControlToBeginning(gridCombination, dimensionControl);
        GridCombination.moveControl(EcoResProductAllVariants_DisplayProductNumber.id());

        //make a dimension field (the one for we are looking up) a first field in the on-hand grid
        dimensionControl = this.findDimensionControl(inventoryDimensions, dimFieldIdForLookup);
        moveControlToBeginning(inventoryDimensions, dimensionControl);

        //Set up field for GridDimension if is for Retail module and not called from <c>RetailCategoryPriceRule</c> form.
        if (this.showRetailLookup())
        {
            gridDimension.dataSource(retailDisplayOrderDimension_ds.id());
            dimensionName.dataSource(retailDisplayOrderDimension_ds.id());
            dimensionName.dataField(retailFieldIdForLookup);
        }
        else
        {
            dimensionName.dataSource(inventDimDimension_ds.id());
            dimensionName.dataField(dimFieldIdForLookup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRetailLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set up field for GridDimension if is for Retail module and not called from <c>RetailCategoryPriceRule</c> form.
    /// </summary>
    /// <returns>
    /// returns true if is for Retail module and not called from <c>RetailCategoryPriceRule</c> form, otherwise false.
    /// </returns>
    protected  boolean showRetailLookup()
    {
        return isRetailLookup && !(callerName == formStr(RetailCategoryPriceRule));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    void initParmDefault()
    {
        showAvail = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public InventDimCtrl_Frm_Lookup inventDimSetupObject()
    {
        FieldId dimFieldIdForLookup;

        if (!inventDimFormSetup)
        {
            dimFieldIdForLookup = this.getDimFieldIdForLookup();
            inventDimFormSetup  = InventDimCtrl_Frm_Lookup::newFromFormSortField(this, dimFieldIdForLookup);
        }
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueDesignName()
    {
        return this.args().caller().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueElementName()
    {
        return fieldId2name(tableNum(InventDim), this.inventDimSetupObject().parmMainSortFieldId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList,ctrlTab.tab()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        this.setSelectMode();

        filterLookup    = SysTableLookup::filterLookupPreRun_3DS(callerControl,
                                                                 selectedControl,
                                                                 inventDimDimension_ds,
                                                                 inventDimAllVariants_ds,
                                                                 inventDim_ds);
        this.setShowAvail();

        super();

        SysTableLookup::filterLookupPostRun(filterLookup,
                                            callerControl.text(),
                                            selectedControl,
                                            selectedFormDataSource);
        canSelect           = true;
        mustKeepFormOpened  = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionTabCaption</Name>
				<Source><![CDATA[
    private void setDimensionTabCaption()
    {
        FieldId                         dimFieldIdForLookup = this.inventDimSetupObject().parmMainSortFieldId();
        EcoResProductDimensionAttribute ecoResProductDimensionAttribute;
        SysDictTable                    dimensionTable;

        ecoResProductDimensionAttribute = EcoResProductDimensionAttribute::find(
            EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(dimFieldIdForLookup));

        dimensionTable = new SysDictTable(ecoResProductDimensionAttribute.getDimensionTableId());

        ctrlTabPageDimension.caption(dimensionTable.label());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelectMode</Name>
				<Source><![CDATA[
    void setSelectMode()
    {
        FormStringControl   dimensionControl;
        FieldId             retailFieldIdForLookup = this.getDimFieldIdForLookup(true);

        void setSelectedControlAndDataSource(FormStringControl  selectedControlToSet,
                                             FormDataSource     selectedFormDataSourceToSet)
        {
            selectedControl         = selectedControlToSet;
            selectedFormDataSource  = selectedFormDataSourceToSet;
            this.selectMode(selectedControl);
            selectedControl.setFocus();
        }

        if (this.inventDimSetupObject().hasCallerItemId())
        {
            switch (true)
            {
                case ctrlTabPageCombination.isActivePage():
                    dimensionControl = this.findDimensionControl(
                        gridCombination,
                        this.inventDimSetupObject().parmMainSortFieldId());

                    setSelectedControlAndDataSource(
                        dimensionControl,
                        inventDimAllVariants_ds);
                    break;

                case ctrlTabPageOnHand.isActivePage():
                    dimensionControl = this.findDimensionControl(
                        inventoryDimensions,
                        this.inventDimSetupObject().parmMainSortFieldId());

                    setSelectedControlAndDataSource(
                        dimensionControl,
                        inventDim_ds);
                    break;

                case ctrlTabPageDimension.isActivePage():
                default:
                    setSelectedControlAndDataSource(dimensionName, inventDimDimension_ds);
                    break;
            }
        }
        else
        {
            setSelectedControlAndDataSource(dimensionName, inventDimDimension_ds);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShowAvail</Name>
				<Source><![CDATA[
    void setShowAvail()
    {
        ctrlInventSum_AvailOrdered.visible(ctrlShowAvail.value());
        ctrlInventSum_AvailPhysical.visible(ctrlShowAvail.value());
        ctrlphysicalInvent.visible(!ctrlShowAvail.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTabPageCombinationVisible</Name>
				<Source><![CDATA[
    private void setTabPageCombinationVisible()
    {
        ItemId  callerItemId                        = this.inventDimSetupObject().callerItemId();
        boolean hasCallerItemId                     = this.inventDimSetupObject().hasCallerItemId();
        boolean hasCallerInventDim                  = this.inventDimSetupObject().callerInventDimFormDatasource() != null;

        if (   !hasCallerItemId
            || !hasCallerInventDim)
        {
            ctrlTabPageCombination.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTabPageOnHandVisible</Name>
				<Source><![CDATA[
    private void setTabPageOnHandVisible()
    {
        boolean hasCallerItemId     = this.inventDimSetupObject().hasCallerItemId();
        boolean hasCallerInventDim  = this.inventDimSetupObject().callerInventDimFormDatasource() != null;
        boolean mustSkipOnHand      = this.inventDimSetupObject().mustSkipOnHand();

        if (   !hasCallerItemId
            || !hasCallerInventDim
            || mustSkipOnHand)
        {
            ctrlTabPageOnHand.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortDataSourceByDisplayOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sorts data source by display order values of the dimension.
    /// </summary>
    /// <param name="_dataSource">
    /// The datasource that contains table to be sorted.
    /// </param>
    public void sortDataSourceByDisplayOrder(FormDataSource _dataSource)
    {
        QueryBuildDataSource    qbds;
        FieldId                 fieldId = this.getDimFieldIdForLookup(NoYes::Yes);

        qbds = _dataSource.query().dataSourceTable(tableNum(RetailTmpDimensionValueDisplayOrder));
        qbds.sortClear();

        qbds.addOrderByField(fieldNum(RetailTmpDimensionValueDisplayOrder, DisplayOrder));
        qbds.addOrderByField(fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer     tmpVersion     = conPeek(_packedClass,1);
        Integer     tab;

        switch (tmpVersion)
        {
            case #CurrentVersion :
                [tmpVersion,#CurrentList,tab] = _packedClass;
                break;
            default :
                return false;
        }
        //avoid giving focus to the lastValue tab if the tab is not visible
        if (ctrlTab.showTabs())
        {
            ctrlTab.tab(tab);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate   _mode)
    {
        boolean tabsVisible;
        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:

                this.setDimensionTabCaption();
                this.initDimensionControls();
                this.setTabPageCombinationVisible();
                this.setTabPageOnHandVisible();

                tabsVisible = ctrlTabPageOnHand.visible() || ctrlTabPageCombination.visible();
                ctrlTab.showTabs(tabsVisible);
                if (tabsVisible)
                {
                    this.inventDimSetupObject().formSetControls(true,true);
                }

                break;
            case InventDimFormDesignUpdate::LinkActive:
                this.inventDimSetupObject().formActiveSetup();
                this.inventDimSetupObject().formSetControls(true,true);
                break;
            default:
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initInventDimQueryDatasource(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            if (!ctrlTabPageOnHand.isActivePage())
            {
                return;
            }

            if (element.inventDimSetupObject().hasCallerItemId())
            {
                element.inventDimSetupObject().executeInventDimQueryDatasource(this, linkDimOnHand, showAvail);
                element.updateDesign(InventDimFormDesignUpdate::LinkActive);

                inventAvailabilityFormCache.refreshCache();

                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>availPhysical</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Display the physically available inventory.
        /// </summary>
        /// <param name="_inventDim">
        ///    The current <c>InventDim</c> table record.
        /// </param>
        /// <returns>
        ///    The physically available quantity.
        /// </returns>
        public display InventQtyAvailPhysical availPhysical(InventDim _inventDim)
        {
            return inventAvailabilityFormCache.availabilityFromDimJoinedWithSum(_inventDim, inventSum_ds).availPhysical();
        }

]]></Source>
					</Method>
					<Method>
						<Name>availOrdered</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Display the total available inventory.
        /// </summary>
        /// <param name="_inventDim">
        ///    The current <c>InventDim</c> table record.
        /// </param>
        /// <returns>
        ///    The total available quantity.
        /// </returns>
        public display InventQtyAvailOrdered availOrdered(InventDim _inventDim)
        {
            return inventAvailabilityFormCache.availabilityFromDimJoinedWithSum(_inventDim, inventSum_ds).availTotal();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventSum</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initInventSumQueryDatasource(this);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimCombinationAllVariants</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initInventDimCombinationQueryDataSource(this);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimAllVariants</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (!ctrlTabPageCombination.visible()
                || !ctrlTabPageCombination.isActivePage())
            {
                return;
            }

            if (element.inventDimSetupObject().hasCallerItemId())
            {
                element.inventDimSetupObject().executeInventDimLinkDimQueryDS(this.query().dataSourceName(inventDimAllVariants_ds.name()),linkDimVariants);
                element.updateDesign(InventDimFormDesignUpdate::LinkActive);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimDimension</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (!ctrlTabPageDimension.isActivePage())
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbds;

            super();

            this.query().clearGroupBy();
            qbds = this.query().dataSourceName(this.name());
            qbds.clearDynalinks();
            qbds.sortClear();

            qbds.addGroupByField(element.inventDimSetupObject().parmMainSortFieldId());
            qbds.addSortField(element.inventDimSetupObject().parmMainSortFieldId());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimCombinationDimension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.inventDimSetupObject().initInventDimCombinationQueryDataSource(this);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailDisplayOrderDimension</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (isRetailLookup)
            {
                element.sortDataSourceByDisplayOrder(this);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            Object formRun = this.formRun();

            super();

            element.inventDimSetupObject().initDisplayOrderDataSource(retailDisplayOrderDimension, formRun.getDimFieldIdForLookup(), tableNum(InventDim));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResProductAllVariants</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.queryBuildDataSource().addLink(fieldNum(InventDimCombination, DistinctProductVariant), fieldNum(EcoResProduct, RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ctrlTab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);

            mustSaveLast = true;

            element.setSelectMode();

            if (filterLookup)
            {
                selectedFormDataSource.research();
            }

            SysTableLookup::lookupTabChanged(callerControl,
                                             selectedControl,
                                             selectedFormDataSource);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlLinkDimCombi</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            mustSaveLast = true;

            super();

            linkDimVariants = ! linkDimVariants;

            inventDimAllVariants_ds.executeQuery();

            // The form should not be closed
            mustKeepFormOpened  = true;

            canSelect = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlSelectAllCombi</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            mustSaveLast = true;

            super();

            selectAllCombi = ! selectAllCombi;

            // The form should not be closed
            mustKeepFormOpened  = true;

            canSelect = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlLinkDimOnHand</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            mustSaveLast = true;

            super();

            linkDimOnHand = ! linkDimOnHand;

            inventDim_ds.executeQuery();

            // The form should not be closed
            mustKeepFormOpened  = true;

            canSelect = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlShowAvail</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            mustSaveLast = true;

            super();

            showAvail = ! showAvail;

            inventDim_ds.executeQuery();

            element.setShowAvail();

            // The form should not be closed
            mustKeepFormOpened  = true;

            canSelect = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension12</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventSum</Name>
			<Table>InventSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Arrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ordered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWArrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWDeducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPicked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Picked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Received</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Registered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<JoinSource>InventDim</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombinationAllVariants</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<JoinSource>InventDimAllVariants</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimAllVariants</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimDimension</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombinationDimension</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimDimension</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailDisplayOrderDimension</Name>
			<Table>RetailTmpDimensionValueDisplayOrder</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>availOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>availPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>defaultProductName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResColor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResStyle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>physicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductAllVariants</Name>
			<Table>EcoResProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DisplayProductNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>InventDimCombinationAllVariants</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResProductAllVariants_EcoResDistinctProduct</Name>
					<Table>EcoResDistinctProduct</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources>
						<AxFormDataSourceDerived>
							<Name>EcoResProductAllVariants_EcoResDistinctProductVariant</Name>
							<Table>EcoResDistinctProductVariant</Table>
							<Fields>
								<AxFormDataSourceField>
									<DataField>Partition</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>ProductMaster</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>RecId</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>RetaiTotalWeight</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>TableId</DataField>
								</AxFormDataSourceField>
							</Fields>
							<ReferencedDataSources />
							<DerivedDataSources />
						</AxFormDataSourceDerived>
					</DerivedDataSources>
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResProductAllVariants_EcoResProductMaster</Name>
					<Table>EcoResProductMaster</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>IsProductVariantUnitConversionEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailColorGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailSizeGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailStyleGroupId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>VariantConfigurationTechnology</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Frame xmlns="">Border</Frame>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">Custom</Pattern>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<Style xmlns="">Lookup</Style>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>ctrlTab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ctrlTabPageDimension</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimensionName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS14926</Label>
									</AxFormControl>
								</Controls>
								<DataSource>InventDimDimension</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<BottomMargin>0</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<LeftMargin>0</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>0</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
						<Caption>@SYS8089</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ctrlTabPageCombination</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridCombination</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EcoResProductAllVariants_DisplayProductNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DisplayProductNumber</DataField>
										<DataSource>EcoResProductAllVariants</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Name</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Name_M_defaultProductName</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>defaultProductName</DataMethod>
												<DataSource>InventDimCombinationAllVariants</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>Name</DataGroup>
										<DataSource>InventDimCombinationAllVariants</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>InventDimAllVariants</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ctrlGroupSetupCombi</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ctrlLinkDimCombi</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS54830</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS54829</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ctrlSelectAllCombi</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS74577</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS74576</Label>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<BottomMargin>4</BottomMargin>
								<BottomMarginMode>Fixed</BottomMarginMode>
								<LeftMargin>0</LeftMargin>
								<LeftMarginMode>Fixed</LeftMarginMode>
								<RightMargin>0</RightMargin>
								<RightMarginMode>Fixed</RightMarginMode>
								<TopMargin>4</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
						</Controls>
						<BottomMargin>0</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<LeftMargin>0</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>0</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
						<Caption>@SYS74037</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ctrlTabPageOnHand</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridOnhand</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>Auto</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSizeId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>429496728</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventColorId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>572662304</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStyleId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827880</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventVersionId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827880</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CtrlPhysicalInvent</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>physicalInventCalculated</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ctrlInventSum_AvailPhysical</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availPhysical</DataMethod>
										<DataSource>InventDim</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ctrlInventSum_AvailOrdered</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1968526674</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availOrdered</DataMethod>
										<DataSource>InventDim</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventDim</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ctrlGroupSetupOnHand</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ctrlLinkDimOnHand</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS54830</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS54829</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ctrlShowAvail</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS54828</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS54794</Label>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<BottomMargin>4</BottomMargin>
								<BottomMarginMode>Fixed</BottomMarginMode>
								<LeftMargin>0</LeftMargin>
								<LeftMarginMode>Fixed</LeftMarginMode>
								<RightMargin>0</RightMargin>
								<RightMarginMode>Fixed</RightMarginMode>
								<TopMargin>4</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
						</Controls>
						<BottomMargin>0</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<LeftMargin>0</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<TopMargin>0</TopMargin>
						<TopMarginMode>Fixed</TopMarginMode>
						<Caption>@SYS4118</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>