<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BOMRouteCopyDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BOMRouteCopyDialog extends FormRun
{
    BOMRouteCopyJob         copy;
    PmfFormCtrl_BOMRouteCopyDialog  pmfFormCtrl_BOMRouteCopyDialog;
    QueryBuildRange         qbrItemId;

    Map                     fromSelectionToEnum;
    Map                     toSelectionToEnum;

    Map                     fromEnumToSelection;
    Map                     toEnumToSelection;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        if (copy.checkCloseDialog())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>limitFromToDomain</Name>
				<Source><![CDATA[
    /// <summary>
    /// Limits the options available in the comboboxes to what is relevant in the current context.
    /// </summary>
    private void limitFromToDomain()
    {
        Set fromEnumSet = new Set(Types::Enum);
        Set toEnumSet = new Set(Types::Enum);

        void populateMaps(Set enumSet, Map enumToSelection, Map selectionToEnum)
        {
            SetEnumerator enum;
            int counter = 0;

            enum = enumSet.getEnumerator();
            counter = 0;

            while (enum.moveNext())
            {
                enumToSelection.insert(enum.current(), counter);
                selectionToEnum.insert(counter, enum.current());
                counter++;
            }
        }

        fromEnumToSelection = new Map(Types::Enum, Types::Integer);
        toEnumToSelection = new Map(Types::Enum, Types::Integer);

        fromSelectionToEnum = new Map(Types::Integer, Types::Enum);
        toSelectionToEnum = new Map(Types::Integer, Types::Enum);

        if (pmfFormCtrl_BOMRouteCopyDialog.isFormulaEnabled())
        {
            fromEnumSet.add(BOMRouteCopyDataType::FormulaVersion);
        }
        else
        {
            fromEnumSet.add(BOMRouteCopyDataType::BaseData);
        }
        fromEnumSet.add(BOMRouteCopyDataType::Production);

        toEnumSet.add(BOMRouteCopyDataType::BaseData);

        if (pmfFormCtrl_BOMRouteCopyDialog.isFormulaEnabled())
        {
            toEnumSet.add(BOMRouteCopyDataType::FormulaVersion);
        }
        if (element.args().parmEnumType() != enumnum(BOMCopyContext) ||
            element.args().parmEnum() != BOMCopyContext::NewBOM)
        {
            toEnumSet.add(BOMRouteCopyDataType::Production);
        }

        populateMaps(fromEnumSet, fromEnumToSelection, fromSelectionToEnum);
        populateMaps(toEnumSet, toEnumToSelection, toSelectionToEnum);

        SysFormEnumComboBox::newParameters(element, element.controlId(formcontrolstr(BOMRouteCopyDialog, FromTypeSelector)), enumnum(BOMRouteCopyDataType), fromEnumSet);
        SysFormEnumComboBox::newParameters(element, element.controlId(formcontrolstr(BOMRouteCopyDialog, ToTypeSelector)), enumnum(BOMRouteCopyDataType), toEnumSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showToGroup</Name>
				<Source><![CDATA[
    private void showToGroup(BOMRouteCopyDataType dataType)
    {
        ToBaseGrp.visible(dataType == BOMRouteCopyDataType::BaseData);
        PmfFormExist.visible(dataType == BOMRouteCopyDataType::FormulaVersion);
        ToProdGrp.visible(dataType == BOMRouteCopyDataType::Production);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showFromGroup</Name>
				<Source><![CDATA[
    private void showFromGroup(BOMRouteCopyDataType dataType)
    {
        FromBaseGrp.visible(dataType == BOMRouteCopyDataType::BaseData);
        PmfVerFromGrp.visible(dataType == BOMRouteCopyDataType::FormulaVersion);
        FromProdGrp.visible(dataType == BOMRouteCopyDataType::Production);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataType</Name>
				<Source><![CDATA[
    private BOMRouteCopyDataType getDataType(FormComboBoxControl _control)
    {
        if (_control == FromTypeSelector)
        {
            return fromSelectionToEnum.lookup(_control.selection());
        }
        else
        {
            return toSelectionToEnum.lookup(_control.selection());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataType</Name>
				<Source><![CDATA[
    private void setDataType(FormComboBoxControl _control, BOMRouteCopyDataType _type)
    {
        if (_control == FromTypeSelector)
        {
            _control.selection(fromEnumToSelection.lookup(_type));
        }
        else
        {
            _control.selection(toEnumToSelection.lookup(_type));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseDataProd</Name>
				<Source><![CDATA[
    private BaseDataProd getBaseDataProd(FormComboBoxControl _control)
    {
        if (this.getDataType(_control) == BOMRouteCopyDataType::Production)
        {
            return BaseDataProd::Production;
        }

        return BaseDataProd::BaseData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromTypeFromBaseDataProd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the from-type from a <c>BaseDataProd</c> to a <c>BOMRouteCopyDataType</c> for this class
    /// </summary>
    /// <param name = "_bdp"></param>
    /// <returns></returns>
    public BOMRouteCopyDataType fromTypeFromBaseDataProd(BaseDataProd _bdp)
    {
        switch (_bdp)
        {
            case BaseDataProd::BaseData:
                return (pmfFormCtrl_BOMRouteCopyDialog.isFormulaEnabled()
                        ? BOMRouteCopyDataType::FormulaVersion
                        : BOMRouteCopyDataType::BaseData);

            case BaseDataProd::Production:
            default:
                return BOMRouteCopyDataType::Production;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toTypeFromBaseDataProd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the to-type from a <c>BaseDataProd</c> to a <c>BOMRouteCopyDataType</c> for this class
    /// </summary>
    /// <param name = "_bdp"></param>
    /// <returns></returns>
    public BOMRouteCopyDataType toTypeFromBaseDataProd(BaseDataProd _bdp)
    {
        switch (_bdp)
        {
            case BaseDataProd::BaseData:
                return BOMRouteCopyDataType::BaseData;

            case BaseDataProd::Production:
            default:
                return BOMRouteCopyDataType::Production;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromBOMDate</Name>
				<Source><![CDATA[
    edit TransDate editFromBOMDate(boolean      set,
                                   TransDate    selection)
    {
        if (set)
        {
            copy.parmFromBOMDate(selection);
        }

        return copy.parmFromBOMDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromBOMId</Name>
				<Source><![CDATA[
    edit BOMId      editFromBOMId(boolean   set,
                                  BOMId     selection)
    {
        if (set)
        {
            copy.parmFromBOMId(selection);
            this.editFromSiteId(set, BOMTable::find(selection).SiteId);
            fromSiteId.update();
        }

        return copy.parmFromBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromConfigId</Name>
				<Source><![CDATA[
    edit EcoResItemConfigurationName editFromConfigId(
        boolean                     set,
        EcoResItemConfigurationName selection)
    {
        if (set)
        {
            copy.parmFromConfigId(selection);
        }

        return copy.parmFromConfigId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromItemId</Name>
				<Source><![CDATA[
    edit ItemIdProduction editFromItemId(boolean  set,
                               ItemId   itemId)
    {
        if (set)
        {
            copy.initFromItemId(itemId);
            this.setFromBaseData();
            fromBomId.update();
            fromRouteId.update();
            fromSiteId.update();
        }

        return copy.parmFromItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromProdId</Name>
				<Source><![CDATA[
    edit ProdId  editFromProdId(boolean set,
                                ProdId  selection)
    {
        if (set)
        {
            copy.parmFromProdId(selection);
        }

        return copy.parmFromProdId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromFormulaBomId</Name>
				<Source><![CDATA[
    void editFromFormulaBomId(BOMId _bomId, PmfBOMVersionRefRecId _formulaVersion)
    {
        if (element.getDataType(FromTypeSelector) == BOMRouteCopyDataType::FormulaVersion)
        {
            copy.parmPmfFromVerRecId(_formulaVersion);
        }

        element.editFromBOMId(true, _bomId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToFormulaBomId</Name>
				<Source><![CDATA[
    void editToFormulaBomId(boolean set, BOMId _bomId, PmfBOMVersionRefRecId _formulaVersion)
    {
        if (set)
        {
            copy.parmPmfToVerRecId(_formulaVersion);
        }

        element.editToBOMId(set, _bomId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromRouteDate</Name>
				<Source><![CDATA[
    edit TransDate editFromRouteDate(boolean    set,
                                     TransDate  selection)
    {
        if (set)
        {
            copy.parmFromRouteDate(selection);
        }

        return copy.parmFromRouteDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromRouteId</Name>
				<Source><![CDATA[
    edit RouteId editFromRouteId(boolean    set,
                                 RouteId    selection)
    {
        if (set)
        {
            copy.parmFromRouteId(selection);
        }

        return copy.parmFromRouteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFromSiteId</Name>
				<Source><![CDATA[
    edit InventSiteId editFromSiteId(boolean set, InventSiteId selection)
    {
        if (set)
        {
            copy.parmFromSiteId(selection);

            fromBomId.update();
        }
        return copy.parmFromSiteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMethod</Name>
				<Source><![CDATA[
    edit BOMCopyMethod editMethod(boolean       _set,
                                  BOMCopyMethod _method)
    {
        if (_set)
        {
            copy.parmMethod(_method);
        }

        return copy.parmMethod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editRouteOprHandling</Name>
				<Source><![CDATA[
    edit RouteOprHandling editRouteOprHandling(boolean          _set,
                                               RouteOprHandling _routeOprHandling)
    {
        if (_set)
        {
            copy.parmRouteOprHandling(_routeOprHandling);
            this.setToItemId(false);
            this.setToConfig(false);
        }
        return copy.parmRouteOprHandling();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editRouteOprReplace</Name>
				<Source><![CDATA[
    edit RouteOprReplace editRouteOprReplace(
        boolean             _set,
        RouteOprReplace     _routeOprReplace
        )
    {
        if (_set)
        {
            copy.parmRouteOprReplace(_routeOprReplace);
        }

        return copy.parmRouteOprReplace();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToBOMId</Name>
				<Source><![CDATA[
    edit BOMId editToBOMId(boolean  set,
                           BOMId    selection)
    {
        if (set)
        {
            copy.parmToBOMId(selection);
        }

        return copy.parmToBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToConfigId</Name>
				<Source><![CDATA[
    edit EcoResItemConfigurationName editToConfigId(
        boolean                     set,
        EcoResItemConfigurationName configId)
    {
        if (set)
        {
            copy.parmToConfigId(configId);
        }

        return copy.parmToConfigId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToItemId</Name>
				<Source><![CDATA[
    edit ItemIdProduction editToItemId(boolean          set,
                                       ItemIdProduction itemId)
    {
        if (set)
        {
            copy.parmToItemId(itemId);
            this.setToBaseData();
        }

        return copy.parmToItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToProdId</Name>
				<Source><![CDATA[
    edit ProdId editToProdId(boolean    set,
                             ProdId     selection)
    {
        if (set)
        {
            copy.parmToProdId(selection);
        }

        return copy.parmToProdId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToRouteId</Name>
				<Source><![CDATA[
    edit RouteId editToRouteId(boolean  set,
                               RouteId  selection)
    {
        if (set)
        {
            copy.parmToRouteId(selection);
        }

        return copy.parmToRouteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editToSiteId</Name>
				<Source><![CDATA[
    edit InventSiteId editToSiteId(boolean set, InventSiteId selection)
    {
        if (set)
        {
            copy.parmToSiteId(selection);
        }

        return copy.parmToSiteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editUpdateBOMId</Name>
				<Source><![CDATA[
    edit boolean editUpdateBOMId(boolean    set,
                                 boolean    selection)
    {
        if (set)
        {
            copy.parmUpdateBOMId(selection);
        }

        return copy.parmUpdateBOMId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editUpdateRoute</Name>
				<Source><![CDATA[
    edit NoYes editUpdateRoute(
        boolean     _set,
        NoYes       _updateRoute
        )
    {
        if (_set)
        {
            copy.parmUpdateRoute(_updateRoute);
        }

        return copy.parmUpdateRoute();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editUpdateRouteId</Name>
				<Source><![CDATA[
    edit boolean editUpdateRouteId(
        boolean         set,
        boolean         selection)
    {
        if (set)
        {
            copy.parmUpdateRouteId(selection);
        }

        return copy.parmUpdateRouteId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustUIForContext</Name>
				<Source><![CDATA[
    private void adjustUIForContext()
    {
        if (element.args().parmEnumType() == enumnum(BOMCopyContext) &&
            element.args().parmEnum() == BOMCopyContext::NewBOM)
        {
            ToProdGrp.enabled(false);
            SetupGrp.visible(false);

            ToBOMId.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (! ( classidget(element.args().caller()) == classidget(copy)))
        {
            throw error(strfmt("@SYS22456",element.name(),classId2Name(classidget(copy))));
        }

        copy = element.args().caller();

        pmfFormCtrl_BOMRouteCopyDialog = PmfFormCtrl_BOMRouteCopyDialog::newFromForm(element);

        if (copy.parmToItemId() && InventTable::isFormulaItem(copy.parmToItemId()))
        {
            pmfFormCtrl_BOMRouteCopyDialog.forceFormula();
        }

        this.limitFromToDomain();

        super();

        element.adjustUIForContext();

        pmfFormCtrl_BOMRouteCopyDialog.initPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        this.design().caption(copy.formCaption());

        pmfFormCtrl_BOMRouteCopyDialog.runPre();
        
        this.setDataType(FromTypeSelector,this.fromTypeFromBaseDataProd(copy.parmFromType()));
        this.setDataType(ToTypeSelector,this.toTypeFromBaseDataProd(copy.parmToType()));

        this.updateFields();

        super();

        toProdId.update();
        fromProdId.update();

        //set the control disabled if needed
        this.setRouteOprHandling(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBOM</Name>
				<Source><![CDATA[
    void setBOM(boolean setVisible)
    {
        this.setToBOM(setVisible);
        this.setFromBOM(setVisible);
        this.setToProduction(setVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromBaseData</Name>
				<Source><![CDATA[
    void setFromBaseData()
    {
        if (this.getDataType(FromTypeSelector) != BOMRouteCopyDataType::BaseData)
        {
            return;
        }

        element.setFromConfig();
        element.setFromBOM(false);
        element.setFromRoute(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromBOM</Name>
				<Source><![CDATA[
    void setFromBOM(boolean setVisible)
    {
        boolean set;
        set = copy.parmCopyBOM();

        if (setVisible)
        {
            fromBOMId.visible(set);
        }
        else
        {
            fromBOMId.enabled(set);
        }

        if (setVisible)
        {
            fromBOMDate.visible(set && copy.parmFromItemId());
        }
        else
        {
            fromBOMDate.enabled(set && copy.parmFromItemId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromConfig</Name>
				<Source><![CDATA[
    void setFromConfig()
    {
        ItemId  itemId;
        if (this.getDataType(FromTypeSelector) != BOMRouteCopyDataType::BaseData)
        {
            return;
        }

        itemId = copy.parmFromItemId();
        element.editFromConfigId(true,copy.parmFromConfigId());
        fromConfigId.enabled(itemId && InventTable::find(itemId).configActive());
        fromConfigId.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromRoute</Name>
				<Source><![CDATA[
    void setFromRoute(boolean setVisible)
    {
        boolean set;
        set = copy.parmCopyRoute();

        if (setVisible)
        {
            if (set != fromRouteId.visible())
            {
                fromRouteId.visible(set);
            }
        }
        else
        {
            if (set != fromRouteId.enabled())
            {
                fromRouteId.enabled(set);
            }
        }

        set  = set && copy.parmFromItemId();

        if (setVisible)
        {
            if (set != fromRouteDate.visible())
            {
                fromRouteDate.visible(set);
            }
        }
        else
        {
            if (set != fromRouteDate.enabled())
            {
                fromRouteDate.enabled(set);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRoute</Name>
				<Source><![CDATA[
    void setRoute(boolean setVisible)
    {
        this.setToRoute(setVisible);
        this.setFromRoute(setVisible);
        this.setRouteOprHandling(setVisible);
        this.setToProduction(setVisible);
        this.setToItemId(setVisible);
        this.setToConfig(setVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRouteOprHandling</Name>
				<Source><![CDATA[
    void setRouteOprHandling(boolean setVisible)
    {
        boolean setControlsEnabled;
        boolean setControlsVisible;

        setControlsVisible = copy.parmCopyRoute();
        setControlsEnabled = setControlsVisible && (this.getDataType(ToTypeSelector) == BOMRouteCopyDataType::BaseData);

        if (setVisible)
        {
            if (setControlsVisible != routeOprHandling.visible())
            {
                routeOprHandling.visible(setControlsVisible);
                routeOprReplace.visible(setControlsVisible);
            }
        }
        else
        {
            if (setControlsEnabled != routeOprHandling.enabled())
            {
                routeOprHandling.enabled(setControlsEnabled);
                routeOprReplace.enabled(setControlsEnabled);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToBaseData</Name>
				<Source><![CDATA[
    void setToBaseData()
    {
        this.setToBOM(false);
        this.setToRoute(false);
        this.setToItemId(false);
        this.setToConfig(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToBOM</Name>
				<Source><![CDATA[
    void setToBOM(boolean  setVisible)
    {
        boolean set;
        set = copy.parmCopyBOM();

        if (setVisible)
        {
            if (set != toBOMId.visible())
            {
                toBOMId.visible(set);
            }
        }
        else
        {
            if (set != toBOMId.enabled())
            {
                toBOMId.enabled(set);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToConfig</Name>
				<Source><![CDATA[
    void setToConfig(boolean setVisible)
    {
        boolean set;
        ItemId  itemId;
        if (this.getDataType(ToTypeSelector) != BOMRouteCopyDataType::BaseData)
        {
            return;
        }

        itemId  = copy.parmToItemId();
        set     = copy.parmCopyRoute() &&
                  copy.parmRouteOprHandling() != RouteOprHandling::NoCopy &&
                  itemId && InventTable::find(itemId).configActive();

        if (setVisible)
        {
            if (set != toConfigId.visible())
            {
                toConfigId.visible(set);
            }
        }
        else
        {
            if (set != toConfigId.enabled())
            {
                toConfigId.enabled(set);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToItemId</Name>
				<Source><![CDATA[
    void setToItemId(boolean setVisible)
    {
        boolean set;

        if (this.getDataType(ToTypeSelector) != BOMRouteCopyDataType::BaseData)
        {
            return;
        }

        set = copy.parmCopyRoute() && copy.parmRouteOprHandling() != RouteOprHandling::NoCopy;

        if (setVisible)
        {
            if (set != toItemId.visible())
            {
                toItemId.visible(set);
            }
        }
        else
        {
            if (set != toItemId.enabled())
            {
                toItemId.enabled(set);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToProduction</Name>
				<Source><![CDATA[
    void setToProduction(boolean setVisible)
    {
        if (setVisible)
        {
            updateBOMId.visible(copy.parmCopyBOM());
            updateRouteId.visible(copy.parmCopyRoute());
        }
        else
        {
            updateBOMId.enabled(copy.parmCopyBOM());
            updateRouteId.enabled(copy.parmCopyRoute());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToRoute</Name>
				<Source><![CDATA[
    void setToRoute(boolean setVisible)
    {
        boolean set;
        set = copy.parmCopyRoute();

        if (setVisible)
        {
            if (set != toRouteId.visible())
            {
                toRouteId.visible(set);
                updateRoute.visible(set);
            }
        }
        else
        {
            if (set != toRouteId.enabled())
            {
                toRouteId.enabled(set);
                updateRoute.enabled(set);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFields</Name>
				<Source><![CDATA[
    void updateFields()
    {
        this.setBOM(true);
        this.setRoute(true);
        this.setFromConfig();
        this.showFromGroup(this.getDataType(FromTypeSelector));
        this.showToGroup(this.getDataType(ToTypeSelector));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>FromTypeSelector</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            copy.parmFromType(element.getBaseDataProd(this));

            element.showFromGroup(element.getDataType(this));
            element.setRouteOprHandling(false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            pmfFormCtrl_BOMRouteCopyDialog.ctrlLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromConfigId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            ConfigLookup::lookupConfigId(this,copy.parmFromItemId(),false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromBOMId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventDim   inventDim;
            inventDim.InventSiteId = copy.parmFromSiteId();
            inventDim.configId = copy.parmFromConfigId();

            InventTable::lookupBOMId(this, copy.parmFromItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromRouteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventDim   inventDim;

            inventDim.InventSiteId = copy.parmFromSiteId();

            InventTable::lookupRouteId(this, copy.parmFromItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromFormulaItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            pmfFormCtrl_BOMRouteCopyDialog.ctrlLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromFormulaVersion</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            BOMVersion bomVersion = BOMVersion::pmfLookupReference(this, copy.parmFromItemId(),copy.parmFromSiteId());
            if (bomVersion)
            {
                element.editFromFormulaBomId(bomVersion.BomId, bomVersion.RecId);
            }
            return bomVersion;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BOMVersion bomVersion = BOMVersion::findRecId(this.value());
            if (bomVersion)
            {
                Args args = new Args();
                args.record(bomVersion.inventTable());
                MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(BOMConsistOf), MenuItemType::Display);
                menuFunction.run(args);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromProdId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ProdTable::lookupProdId(this, copy.parmFromProdId());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToTypeSelector</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            copy.parmToType(element.getBaseDataProd(this));

            element.showToGroup(element.getDataType(this));
            element.setRouteOprHandling(false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToConfigId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ConfigLookup::lookupConfigId(this,copy.parmToItemId(),false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToBOMId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            InventDim   inventDim;
            inventDim.InventSiteId = copy.parmToSiteId();
            InventTable::lookupBOMId(this, copy.parmToItemId(), inventDim);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToFormulaVersionCopy</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            BOMVersion bomVersion = BOMVersion::pmfLookupReference(this, copy.parmToItemId(),copy.parmToSiteId());
            if (bomVersion)
            {
                element.editToFormulaBomId(true, bomVersion.BomId, bomVersion.RecId);
            }
            return bomVersion;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToProdId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            ProdTable::lookupProdId(this, copy.parmToProdId(), null, ProdStatus::Created, ProdStatus::Created);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS22455</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentSectionGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FromType</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>FromTypeSelector</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>BOMRouteCopyDataType</EnumType>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
						</Controls>
						<Caption>@SYS68297</Caption>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FromBaseGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromItemId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromConfigId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromConfigId</DataMethod>
								<LookupButton>Always</LookupButton>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromSiteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromBOMId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromBOMId</DataMethod>
								<Label>@SYS22298</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromRouteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>ProdRouting</ConfigurationKey>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromRouteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FromBOMDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS50998</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromBOMDate</DataMethod>
								<Label>@SYS22297</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FromRouteDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>ProdRouting</ConfigurationKey>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS50999</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromRouteDate</DataMethod>
								<Label>@SYS22919</Label>
							</AxFormControl>
						</Controls>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PmfVerFromGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PMF</ConfigurationKey>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromFormulaItemId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromItemId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromFormulaSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromSiteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>FromFormulaVersion</Name>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<HideIfEmpty>No</HideIfEmpty>
								<ExtendedDataType>PmfBOMVersionRefRecId</ExtendedDataType>
								<Label>@PRO85</Label>
								<Mandatory>Yes</Mandatory>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
						</Controls>
						<AlignChildren>No</AlignChildren>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FromProdGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FromProdId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editFromProdId</DataMethod>
								<Label>@SYS8348</Label>
							</AxFormControl>
						</Controls>
						<OptionValue>0</OptionValue>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ToType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ToTypeSelector</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>BOMRouteCopyDataType</EnumType>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
						</Controls>
						<Caption>@SYS59059</Caption>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ToBaseGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToSiteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToItemId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToItemId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToConfigId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToConfigId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToBOMId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToBOMId</DataMethod>
								<Label>@SYS22298</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToRouteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>ProdRouting</ConfigurationKey>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToRouteId</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UpdateRoute</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>ProdRouting</ConfigurationKey>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS72642</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editUpdateRoute</DataMethod>
								<Label>@SYS72643</Label>
							</AxFormControl>
						</Controls>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PmfFormExist</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PMF</ConfigurationKey>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>ToFormulaVersionCopy</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<HideIfEmpty>No</HideIfEmpty>
								<ExtendedDataType>PmfBOMVersionRefRecId</ExtendedDataType>
								<Label>@PRO85</Label>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
						</Controls>
						<AlignChildren>No</AlignChildren>
						<OptionValue>0</OptionValue>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ToProdGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ToProdId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editToProdId</DataMethod>
								<Label>@SYS8348</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UpdateBOMId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BOMVersion</ConfigurationKey>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS51000</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editUpdateBOMId</DataMethod>
								<Label>@SYS26318</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UpdateRouteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>ProdRouting</ConfigurationKey>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS51001</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editUpdateRouteId</DataMethod>
								<Label>@SYS26320</Label>
							</AxFormControl>
						</Controls>
						<OptionValue>0</OptionValue>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SetupGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>Method</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS51002</HelpText>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Caption>@SYS22454</Caption>
								<DataMethod>editMethod</DataMethod>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>RouteOprHandling</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Caption>@SYS72812</Caption>
								<DataMethod>editRouteOprHandling</DataMethod>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>RouteOprReplace</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editRouteOprReplace</DataMethod>
							</AxFormControl>
						</Controls>
						<RightMargin>0</RightMargin>
						<RightMarginMode>Fixed</RightMarginMode>
						<Caption>@SYS2186</Caption>
						<Style>DialogContent</Style>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1879048190</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
