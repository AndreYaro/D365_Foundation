<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>FiscalDocumentText_BR</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class FiscalDocumentText_BR extends FormRun implements OfficeIMenuCustomizer
{
    Common              callerRecord;
    str                 callerFormControlName;
    boolean isCust, isVend;

}
]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        switch (tableId2PName(callerRecord.TableId))
        {
            case tablePName(InventTable):
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(ProductFiscalDocumentTextEntity)));
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(ProductFiscalDocTextReferenceProcessEntity)));
                break;
            case tablePName(VendTable):
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(VendorFiscalDocumentTextEntity)));
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(VendorFiscalDocTextReferencedProcessEntity)));
                break;
            case tablePName(CustTable):
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(CustomerFiscalDocumentTextEntity)));
                _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(CustomerFiscalDocTextReferencedProcessEntity)));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filters if as Legal texts or additional information
    /// </summary>
    public void fiscalDocumentFilter()
    {
        switch (callerFormControlName)
        {
            case identifierStr(FiscalDocumentText):
                DocuRefExt_BR_DS.query().dataSourceTable(tableNum(DocuRefExt_BR)).addRange(fieldNum(DocuRefExt_BR, FiscalInformation)).value(queryValue(NoYes::Yes));
                break;

            case identifierStr(AdditionalInformation):
                DocuRefExt_BR_DS.query().dataSourceTable(tableNum(DocuRefExt_BR)).addRange(fieldNum(DocuRefExt_BR, FiscalInformation)).value(queryValue(NoYes::No));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {        
        SalesTable                  salesTable;
        SalesLine                   salesLine;
        PurchTable                  purchTable;
        PurchLine                   purchLine;
        CustInvoiceTable            custInvoiceTable;
        CustInvoiceLine             custInvoiceLine;
        DocuTypeId                  fiscalDocumentTextDocuTypeId;
        TaxFiscalDocument_BR        taxFiscalDocument;
        TaxFiscalDocumentLine_BR    taxFiscalDocumentLine;

        boolean                 isInvoiced = false;

        super();

        if (!element.args().record())
        {
            // Window must be called with parameters.
            throw error("@SYS22539");
        }

        callerRecord = element.args().record();
        callerFormControlName = element.args().callerFormControl().name();

        fiscalDocumentTextDocuTypeId = BrazilParameters::find().FiscalDocumentTextDocuTypeId;

        if (!fiscalDocumentTextDocuTypeId)
        {
            // Document type must be specified at Brazil Parameters to use Fiscal document text.
            throw error(strFmt("@GLS63715",
                                   fieldId2pname(tableNum(BrazilParameters), fieldNum(BrazilParameters, FiscalDocumentTextDocuTypeId)),
                                   tableId2pname(tableNum(BrazilParameters)),
                                   "@GLS63725"));
        }

        switch (callerRecord.TableId)
        {
            case tableNum(CustTable):
                isCust = true;
            case tableNum(VendTable):
                isVend = true;
            case tableNum(InventTable):
                grid_TextType.visible(false);
                break;

            case tableNum(SalesTable):
                salesTable  = callerRecord;
                isInvoiced  = (salesTable.SalesStatus == SalesStatus::Invoiced);
                isCust = true;
                break;

            case tableNum(SalesLine):
                salesLine   = callerRecord;
                isInvoiced  = (salesLine.SalesStatus == SalesStatus::Invoiced);
                isCust = true;
                break;

            case tableNum(PurchTable):
                purchTable  = callerRecord;
                isInvoiced  = (purchTable.isInvoiced());
                isVend = true;
                break;

            case tableNum(PurchLine):
                purchLine   = callerRecord;
                isInvoiced  = (purchLine.isInvoiced());
                isVend = true;
                break;

            case tableNum(CustInvoiceTable):
                custInvoiceTable   = callerRecord;
                isInvoiced  = (custInvoiceTable.Posted == NoYes::Yes);
                isCust = true;
                break;

            case tableNum(CustInvoiceLine):
                custInvoiceLine = callerRecord;
                isInvoiced = (custInvoiceLine.custInvoiceTable().Posted == NoYes::Yes);
                isCust = true;
                break;

            case tableNum(TaxFiscalDocument_BR):
                taxFiscalDocument = callerRecord;
                isInvoiced = (taxFiscalDocument.Status != TaxFiscalDocumentStatus_BR::Open ||
                                  taxFiscalDocument.TaxFiscalDocToCancelRecID != 0);
                break;

            case tableNum(TaxFiscalDocumentLine_BR):
                taxFiscalDocumentLine = callerRecord;
                taxFiscalDocument = TaxFiscalDocument_BR::findRecId(taxFiscalDocumentLine.TaxFiscalDocument);
                isInvoiced = (taxFiscalDocument.Status != TaxFiscalDocumentStatus_BR::Open ||
                                  taxFiscalDocument.TaxFiscalDocToCancelRecID != 0);
                break;

            case tableNum(SalesComplementaryInvoiceHeader):
                isInvoiced = (callerRecord.(fieldNum(SalesComplementaryInvoiceHeader, Status)) != ComplementaryInvoiceStatus::Open);
                isCust = true;
                break;

            case tableNum(PurchComplementaryInvoiceHeader):
                isInvoiced = (callerRecord.(fieldNum(PurchComplementaryInvoiceHeader, Status)) != ComplementaryInvoiceStatus::Open);
                isVend = true;
                break;

            case tableNum(InventTransferTable):
                isInvoiced = (callerRecord.(fieldNum(InventTransferTable, TransferStatus)) != InventTransferStatus::Created);
                break;

            case tableNum(InventTransferLine):
                isInvoiced = (callerRecord.(fieldNum(InventTransferLine, RemainStatus)) == InventTransferRemainStatus::None);
                break;

            case tableNum(FiscalDocument_BR):
                isInvoiced = true;
                this.fiscalDocumentFilter();
                break;

            case tableNum(FiscalDocumentLine_BR):
                isInvoiced = true;
                break;
        }

        if (isCust)
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00040, funcName());
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00038, funcName());
        }
        else if (isVend)
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00027, funcName());
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00024, funcName());
        }

        docuRef_DS.allowEdit(!isInvoiced);
        docuRef_DS.allowCreate(!isInvoiced);
        docuRef_DS.allowDelete(!isInvoiced);

        docuRefExt_BR_DS.allowEdit(!isInvoiced);
        docuRefExt_BR_DS.allowCreate(!isInvoiced);
        docuRefExt_BR_DS.allowDelete(!isInvoiced);

        if (callerRecord.TableId == tableNum(FiscalDocument_BR) || callerRecord.TableId == tableNum(FiscalDocumentLine_BR))
        {
            FiscalDocumentReferencedProcess_BR_1_ds.object(fieldNum(FiscalDocumentReferencedProcess_BR, Agency)).allowEdit(!isInvoiced);
            FiscalDocumentReferencedProcess_BR_1_ds.object(fieldNum(FiscalDocumentReferencedProcess_BR, DocuRefExt_BR)).allowEdit(!isInvoiced);
        }
        else
        {
            FiscalDocumentReferencedProcess_BR_1_ds.allowEdit(!isInvoiced);
        }

        FiscalDocumentReferencedProcess_BR_1_ds.allowCreate(!isInvoiced);
        FiscalDocumentReferencedProcess_BR_1_ds.allowDelete(!isInvoiced);

        if (isInvoiced)
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00043, funcName());
            element.design().viewEditMode(ViewEditMode::View);
        }

        fiscalDocumentReferencedProcess_BR_1_ds.object(fieldNum(FiscalDocumentReferencedProcess_BR, ConcessionaryActType))
            .visible(FiscalEstablishment_BR::isTechnicalNoteEnabledForAnyFE(EFDocConstants_BR::NFeNT2021004v100));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocuRef</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            SysQuery::findOrCreateRange(docuRef_DS.query().dataSourceTable(tableNum(DocuRef)), fieldNum(DocuRef, @TypeID)).value(queryValue(BrazilParameters::find().FiscalDocumentTextDocuTypeId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            docuRef.TypeId      = BrazilParameters::find().FiscalDocumentTextDocuTypeId;
            docuRef.RefTableId = callerRecord.TableId;
            docuRef.RefRecId = callerRecord.RecId;
            docuRef.RefCompanyId = callerRecord.DataAreaId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            this.setTextIDFocus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            docuRefExt_BR.DocuRef   = docuRef.RecId;
            if (docuRefExt_BR.validateWrite())
            {
                docuRefExt_BR.write();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            DocuRef         sameSourceDocuRef;
            DocuRefExt_BR   existingDocuRefExt;
            boolean         ret = true;

            ret = super();

            if (ret)
            {
                select RecId from sameSourceDocuRef
                    where   sameSourceDocuRef.RefCompanyId  == docuRef.RefCompanyId
                        &&  sameSourceDocuRef.RefTableId    == docuRef.RefTableId
                        &&  sameSourceDocuRef.RefRecId      == docuRef.RefRecId
                join RecId from existingDocuRefExt
                    where   existingDocuRefExt.DocuRef      == sameSourceDocuRef.RecId
                        &&  existingDocuRefExt.TextID       == docuRefExt_BR.TextID
                        &&  existingDocuRefExt.Type         == docuRefExt_BR.Type;

                if (sameSourceDocuRef.RecId  != docuRef.RecId &&  existingDocuRefExt.RecId)
                {
                    ret = checkFailed(strFmt("@SYS328648",
                                                    tablePName( DocuRefExt_BR),
                                                    tableStr(   DocuRefExt_BR),
                                                    fieldPName( DocuRefExt_BR, TextID),
                                                    fieldStr(   DocuRefExt_BR, TextID),
                                                    docuRefExt_BR.TextID));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            SysQuery::findOrCreateRange(docuRef_DS.query().dataSourceTable(tableNum(DocuRef)), fieldNum(DocuRef, RefTableId  )).value(queryValue(callerRecord.TableId));
            SysQuery::findOrCreateRange(docuRef_DS.query().dataSourceTable(tableNum(DocuRef)), fieldNum(DocuRef, RefRecId    )).value(queryValue(callerRecord.RecId));
            SysQuery::findOrCreateRange(docuRef_DS.query().dataSourceTable(tableNum(DocuRef)), fieldNum(DocuRef, RefCompanyId)).value(queryValue(callerRecord.DataAreaId));

            super();

            docuRef_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>setTextIDFocus</Name>
						<Source><![CDATA[
        private void setTextIDFocus()
        {
            overview_TextID.setFocus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            infolog.formNoteButton(false, false);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>docuRefExtTextId_BR</Name>
						<Source><![CDATA[
        public display FiscalDocumentTextID_BR docuRefExtTextId_BR()
        {
            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>docuRefExtType_BR</Name>
						<Source><![CDATA[
        public display FiscalDocumentTextType_BR docuRefExtType_BR()
        {
            return FiscalDocumentTextType_BR::Blank;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>DocuRefExt_BR</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            docuRefExt_BR.Type  = FiscalDocumentTextType_BR::UserDef;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret= true;

            if (docuRefExt_BR.DocuRef)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (docuRefExt_BR.DocuRef)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TextID</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                FiscalDocumentSourceText_BR fiscalDocumentSourceText;

                super();

                fiscalDocumentSourceText = FiscalDocumentSourceText_BR::findByTextID(docuRefExt_BR.TextID);

                docuRef.Name                    = fiscalDocumentSourceText.Name;
                docuRef.Notes                   = fiscalDocumentSourceText.Notes;
                docuRef.Restriction             = fiscalDocumentSourceText.Restriction;
                DocuRefExt_BR.FiscalInformation    = fiscalDocumentSourceText.FiscalInformation;
                DocuRefExt_BR.TextID               = fiscalDocumentSourceText.TextID;

                if (docuRef_ds.validateWrite())
                {
                    docuRef_ds.write();                    
                    docuRefExt_BR.initProcessReference();

                    GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00080, funcName());

                    if (isCust)
                    {
                        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00036, funcName());
                    }
                }

                docuRef_DS.refresh();
                docuRefExt_BR_DS.refresh();
                FiscalDocumentReferencedProcess_BR_1_ds.research();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>FiscalDocumentReferencedProcess_BR_1</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            fiscalDocumentReferencedProcess_BR_1_ds.object(fieldNum(FiscalDocumentReferencedProcess_BR, ConcessionaryActType)).enabled(fiscalDocumentReferencedProcess_BR_1.Agency == Agency_BR::Sefaz);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Agency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                fiscalDocumentReferencedProcess_BR_1_ds.object(fieldNum(FiscalDocumentReferencedProcess_BR, ConcessionaryActType)).enabled(fiscalDocumentReferencedProcess_BR_1.Agency == Agency_BR::Sefaz);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocuRef</Name>
			<Table>DocuRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Author</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncyclopediaItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Restriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailEntryID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailStoreID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>RefIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocuRefExt_BR</Name>
			<Table>DocuRefExt_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocuRef</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<Index>DocuRefIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FiscalDocumentReferencedProcess_BR_1</Name>
			<Table>FiscalDocumentReferencedProcess_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Agency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionaryActType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuRefExt_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcessNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocuRefExt_BR</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS63718</Caption>
		<DataSource xmlns="">DocuRef</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Mode xmlns="">Add</Mode>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>DocuRef</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_TextID</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TextID</DataField>
								<DataSource>DocuRefExt_BR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_Name</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>DocuRef</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Grid_TextType</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Type</DataField>
								<DataSource>DocuRefExt_BR</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>DocuRef</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Overview</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Overview_TextID</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TextID</DataField>
								<DataSource>DocuRefExt_BR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Overview_Name</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>DocuRef</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>TextType</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Type</DataField>
								<DataSource>DocuRefExt_BR</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<BottomMargin>5</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTabControl</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Details</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Details_Notes</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Details_Restriction</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:FiscalDocumentText_BR_Details_Restriction</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Restriction</DataField>
										<DataSource>DocuRef</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Details_FiscalInformation</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FiscalInformation</DataField>
										<DataSource>DocuRefExt_BR</DataSource>
									</AxFormControl>
								</Controls>
								<TopMargin>10</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@GLS510053</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReferencedProcessTab</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ReferencedProccessActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ReferencedProccessActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ReferencedProccessNewDeleteGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>ReferencedProccessNewButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>ReferencedProccessDeleteButton</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS14425</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>DocuRef</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid1</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FiscalDocumentReferencedProcess_BR_1_Agency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Agency</DataField>
										<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FiscalDocumentReferencedProcess_BR_1_ProcessNumber</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProcessNumber</DataField>
										<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>FiscalDocumentReferencedProcess_BR_1_ConcessionaryActType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ConcessionaryActType</DataField>
										<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataSource>FiscalDocumentReferencedProcess_BR_1</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Brazil:FiscalDocumentReferencedProcesses</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>