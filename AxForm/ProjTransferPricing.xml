<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjTransferPricing</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjTransferPricing extends FormRun
{
    CurrencyCode currencyCode;
    QueryBuildRange queryBuildRange;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        currencyCode = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets field access based on current state.
    /// </summary>
    public void setFieldAccess()
    {
        ProjTransferPrice_DS.object(fieldNum(ProjTransferPrice, ResourceCategory)).allowEdit(ProjTransferPrice.TransType == ProjTransferPriceTransType::Timesheet && ProjTransferPrice.ProjCategory == 0);
        ProjTransferPrice_DS.object(fieldNum(ProjTransferPrice, ResourceCategory)).skip(!(ProjTransferPrice.TransType == ProjTransferPriceTransType::Timesheet && ProjTransferPrice.ProjCategory == 0));

        LaborProjCategory.enabled(ProjTransferPrice.ResourceCategory == 0);
        ExpenseProjCategory.enabled(ProjTransferPrice.ResourceCategory == 0);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjTransferPrice</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            FormTabPageControl activeTabPage;

            super();

            activeTabPage = Pricing.getActivePage();

            if (activeTabPage.name() == Labor.name())
            {
                ProjTransferPrice.TransType = ProjTransferPriceTransType::Timesheet;
            }
            else if (activeTabPage.name() == Expense.name())
            {
                ProjTransferPrice.TransType = ProjTransferPriceTransType::Expense;
            }
            else if (activeTabPage.name() == VendorInvoiceLine.name())
            {
                ProjTransferPrice.TransType = ProjTransferPriceTransType::VendInvoiceLine;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            queryBuildRange = this.query().dataSourceName(formDataSourceStr(ProjTransferPricing, ProjTransferPrice)).addRange(fieldnum(ProjTransferPrice, TransType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            FormTabPageControl activeTabPage = Pricing.getActivePage();

            if (activeTabPage.name() == Labor.name())
            {
                queryBuildRange.value(int2str(ProjTransferPriceTransType::Timesheet));
            }
            else if (activeTabPage.name() == Expense.name())
            {
                queryBuildRange.value(int2str(ProjTransferPriceTransType::Expense));
            }
            else if (activeTabPage.name() == VendorInvoiceLine.name())
            {
                queryBuildRange.value(int2str(ProjTransferPriceTransType::VendInvoiceLine));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.setFieldAccess();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return ResourceLookup::lookupResource(_formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Labor</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            ProjTransferPrice_DS.executeQuery();
            element.setFieldAccess();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LaborResourceCategory</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setFieldAccess();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LaborProjCategory</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup      sysTableLookup  = SysTableLookup::newParameters(tableNum(ProjCategory), this);
            Query               q;
            ProjCategoryLookup  pcLookup        = new ProjCategoryLookup();
            ProjTable           projTableLookup;
            boolean             isInterCompany  = projTransferPrice.ProjectDataAreaId != curext();

            if (!projTransferPrice.ProjectDataAreaId)
            {
                return;
            }

            sysTableLookup.addLookupfield(fieldNum(ProjCategory, CategoryId));
            sysTableLookup.addLookupfield(fieldNum(ProjCategory, Name));

            pcLookup.parmFormName(element.name());

            select firstonly crossCompany ProjId from projTableLookup where projTableLookup.RecId == projTransferPrice.ProjTable && projTableLookup.DataAreaId == projTransferPrice.ProjectDataAreaId;

            // Build query used for the Category lookup
            changecompany(projTransferPrice.ProjectDataAreaId)
            {
                pcLookup.parmIsIntercompany(isInterCompany);
                q = pcLookup.buildQuery(tableNum(ProjTransferPrice), projTableLookup.ProjId, projTransferPrice.Resource);
            }
            switch (ProjTransferPrice.TransType)
            {
                case ProjTransferPriceTransType::All:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Cost));
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Hour));

                case ProjTransferPriceTransType::Expense:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Cost));
                    break;

                case ProjTransferPriceTransType::Timesheet:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Hour));
                    break;
            }

            sysTableLookup.addSelectionField(fieldNum(ProjCategory, CategoryId));

            if (projTransferPrice.ProjectDataAreaId != curext())
            {
                q.allowCrossCompany(true);
                q.addCompanyRange(projTransferPrice.ProjectDataAreaId);
            }

            sysTableLookup.parmQuery(q);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setFieldAccess();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Expense</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            ProjTransferPrice_DS.executeQuery();
            element.setFieldAccess();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpenseProjCategory</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup      sysTableLookup  = SysTableLookup::newParameters(tableNum(ProjCategory), this);
            Query               q;
            ProjCategoryLookup  pcLookup        = new ProjCategoryLookup();
            ProjTable           projTableLookup;
            boolean             isInterCompany  = projTransferPrice.ProjectDataAreaId != curext();

            if (!projTransferPrice.ProjectDataAreaId)
            {
                return;
            }

            sysTableLookup.addLookupfield(fieldNum(ProjCategory, CategoryId));
            sysTableLookup.addLookupfield(fieldNum(ProjCategory, Name));

            pcLookup.parmFormName(element.name());

            select firstonly crossCompany ProjId from projTableLookup where projTableLookup.RecId == projTransferPrice.ProjTable && projTableLookup.DataAreaId == projTransferPrice.ProjectDataAreaId;

            // Build query used for the Category lookup
            changecompany(projTransferPrice.ProjectDataAreaId)
            {
                pcLookup.parmIsIntercompany(isInterCompany);
                q = pcLookup.buildQuery(tableNum(ProjTransferPrice), projTableLookup.ProjId, projTransferPrice.Resource);
            }
            switch (ProjTransferPrice.TransType)
            {
                case ProjTransferPriceTransType::All:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Cost));
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Hour));

                case ProjTransferPriceTransType::Expense:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Cost));
                    break;

                case ProjTransferPriceTransType::Timesheet:
                    q.dataSourceTable(tableNum(ProjCategory)).addRange(fieldNum(ProjCategory, CategoryType)).value(queryValue(ProjCategoryType::Hour));
                    break;
            }

            sysTableLookup.addSelectionField(fieldNum(ProjCategory, CategoryId));

            if (projTransferPrice.ProjectDataAreaId != curext())
            {
                q.allowCrossCompany(true);
                q.addCompanyRange(projTransferPrice.ProjectDataAreaId);
            }

            sysTableLookup.parmQuery(q);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setFieldAccess();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendorInvoiceLine</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            ProjTransferPrice_DS.executeQuery();
            element.setFieldAccess();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendorInvoiceLineProjectDataAreaId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            SysTableLookup          sysTableLookup = new SysTableLookup();

            sysTableLookup = SysTableLookup::newParameters(tableNum(CompanyInfo), this);

            sysTableLookup.addLookupfield(fieldNum(CompanyInfo, DataArea));
            sysTableLookup.setLabel("@SYS318577");
            sysTableLookup.addLookupfield(fieldNum(CompanyInfo, Name));

            query = ProjValEmplProjSetup::buildQueryCompanyLookup();

            sysTableLookup.addSelectionField(fieldNum(CompanyInfo, DataArea));

            sysTableLookup.parmQuery(query);

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjTransferPrice</Name>
			<Table>ProjTransferPrice</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS26377</Caption>
		<Pattern xmlns="">SimpleDetails-StandardTabsContainer</Pattern>
		<PatternVersion xmlns="">1.5</PatternVersion>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Pricing</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Labor</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>LaborGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LaborDate</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LaborProjectDataAreaId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjectDataAreaId</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LaborResourceCategory</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjTransferPrice</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
										<ReplacementFieldGroup>ResourceCategoryId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LaborProjCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCategory</DataMethod>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LaborResource</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjTransferPrice</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LaborPriceModel</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PriceModel</DataField>
										<DataSource>ProjTransferPrice</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LaborCurrency</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Currency</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LaborTransferPrice</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferPrice</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS35073</Caption>
						<DataSource>ProjTransferPrice</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Expense</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ExpenseGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ExpenseDate</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ExpenseProjectDataAreaId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjectDataAreaId</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ExpenseProjCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCategory</DataMethod>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ExpenseResource</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjTransferPrice</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ExpensePriceModel</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PriceModel</DataField>
										<DataSource>ProjTransferPrice</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ExpenseCurrency</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Currency</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ExpenseTransferPrice</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferPrice</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjTransferPrice</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS78349</Caption>
						<DataSource>ProjTransferPrice</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>VendorInvoiceLine</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>VendorInvoiceLineGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendorInvoiceLineDate</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendorInvoiceLineProjectDataAreaId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjectDataAreaId</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendorInvoiceLineProjCategory</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjCategory</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendorInvoiceLineResource</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjTransferPrice</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendorInvoiceLinePriceModel</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PriceModel</DataField>
										<DataSource>ProjTransferPrice</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendorInvoiceLineCurrency</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Currency</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendorInvoiceLineTransferPrice</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferPrice</DataField>
										<DataSource>ProjTransferPrice</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS108836</Caption>
						<DataSource>ProjTransferPrice</DataSource>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>