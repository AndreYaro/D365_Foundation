<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchPriceTolerance</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PurchPriceTolerance extends FormRun
{
    // These cache the last values of each field specifeed on the grid to enable restoring values after toggling the dropdowns
    TableGroupAll lastItemCode;
    ItemId lastItemId;
    ItemPriceToleranceGroupId lastItemPriceToleranceGroupId;

    TableGroupAll lastVendCode;
    AccountNum lastVendId;
    VendPriceToleranceGroupId lastVendPriceToleranceGroupId;
    #PurchPriceTolearanceConstants

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates access to the form when it is initially opened, and creates default company price tolerance record if it does not already exist.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// 'Use invoice matching' must be enabled in AP setup in order to open this form.
    /// </exception>
    public void init()
    {
        VendParameters vp;

        // Prevent the window from opening if the setup option is not checked
        vp = VendParameters::find();
        if (vp.editUseInvoiceMatching() == NoYes::No)
        {
            error("@SYS114452");
            this.close();
        }

        // A default "Item code: All / Account code: All" record will be inserted if missing to represent the company price tolerance
        PurchPriceTolerance::defaultCompanyToleranceRecord();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyQuery</Name>
				<Source><![CDATA[
    void modifyQuery()
    {
        Query query;
        QueryBuildDataSource qbdsPurchPriceTolerance;

        // when coming from other sources, still need to show all the records so remove the dynalinks and ranges
        if (element.args().record())
        {
            query = purchPriceToleranceData_ds.query();

            qbdsPurchPriceTolerance = query.dataSourceTable(tableNum(PurchPriceTolerance));
            qbdsPurchPriceTolerance.clearDynalinks();
            qbdsPurchPriceTolerance.clearRanges();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipRelationField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the allow edit and skip metadata properties on the specified field based on the code specified.
    /// </summary>
    /// <param name="fieldNumber">
    /// The field to set the properties for.
    /// </param>
    /// <param name="code">
    /// The code to base the decision to skip and mark not editable.
    /// </param>
    /// <remarks>
    /// All = not editable+skip, Table or Group = editable+not skip.
    /// </remarks>
    public void skipRelationField(int fieldNumber, TableGroupAll code)
    {
        boolean skip = (code == TableGroupAll::All);

        // Skip the relation fields when associated codes are set to All
        purchPriceToleranceData_ds.object(fieldNumber).allowEdit(!skip);
        purchPriceToleranceData_ds.object(fieldNumber).skip(skip);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PurchPriceToleranceData</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            element.modifyQuery();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// This event occurs when focus is initially placed in a new or existing grid row.
        /// </summary>
        /// <returns>
        /// true if the row can be entered, otherwise, false.
        /// </returns>
        /// <remarks>
        /// Enables or disables the ItemRelation and/or AccountRelation field depending on the ItemCode and AccountCode.
        /// Clears the cache values from the previous line.
        /// </remarks>
        public int active()
        {
            int ret;

            // Skip the relation fields if the associated codes are set to All
            element.skipRelationField(fieldNum(PurchPriceTolerance, ItemRelation), purchPriceToleranceData.ItemCode);
            element.skipRelationField(fieldNum(PurchPriceTolerance, AccountRelation), purchPriceToleranceData.AccountCode);

            // As the line is just receiving focus, clear out any cached values from the previous line
            lastItemCode = purchPriceToleranceData.ItemCode;
            lastVendCode = purchPriceToleranceData.AccountCode;
            lastItemId = '';
            lastVendId = '';
            lastItemPriceToleranceGroupId = '';
            lastVendPriceToleranceGroupId = '';

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// This event occurs when the AccountCode field is modified.
            /// </summary>
            /// <remarks>
            /// Stores the current AccountRelation field associated with the current AccountCode field,
            /// and restores the previous AccountRelation field associated with the new AccountCode field.
            /// </remarks>
            public void modified()
            {
                super();

                element.skipRelationField(fieldNum(PurchPriceTolerance, AccountRelation), purchPriceToleranceData.AccountCode);

                if (purchPriceToleranceData.AccountCode != lastVendCode)
                {
                    // Cache the VendId or VendPriceToleranceGroupId (depending on the previous AccountCode value)
                    switch (lastVendCode)
                    {
                        case TableGroupAll::GroupId :
                            lastVendPriceToleranceGroupId = purchPriceToleranceData.AccountRelation;
                            break;

                        case TableGroupAll::Table :
                            lastVendId = purchPriceToleranceData.AccountRelation;
                            break;

                        default :
                            Debug::assert(lastVendCode == TableGroupAll::All);
                    }

                    // Cache the new AccountCode and restore any cached VendId or VendPriceToleranceGroupId
                    lastVendCode = purchPriceToleranceData.AccountCode;
                    switch (purchPriceToleranceData.AccountCode)
                    {
                        case TableGroupAll::GroupId :
                            purchPriceToleranceData.AccountRelation = lastVendPriceToleranceGroupId;
                            break;

                        case TableGroupAll::Table :
                            purchPriceToleranceData.AccountRelation = lastVendId;
                            break;

                        default :
                            Debug::assert(lastVendCode == TableGroupAll::All);
                            purchPriceToleranceData.AccountRelation = #emptyRelation;
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// This event occurs when the ItemCode field is modified.
            /// </summary>
            /// <remarks>
            /// Stores the current ItemRelation field associated with the current ItemCode field,
            /// and restores the previous ItemRelation field associated with the new ItemCode field.
            /// </remarks>
            public void modified()
            {
                super();

                element.skipRelationField(fieldNum(PurchPriceTolerance, ItemRelation), purchPriceToleranceData.ItemCode);

                if (purchPriceToleranceData.ItemCode != lastItemCode)
                {
                    // Cache the ItemId or ItemPriceToleranceGroupId (depending on the previous ItemCode value)
                    switch (lastItemCode)
                    {
                        case TableGroupAll::GroupId :
                            lastItemPriceToleranceGroupId = purchPriceToleranceData.ItemRelation;
                            break;

                        case TableGroupAll::Table :
                            lastItemId = purchPriceToleranceData.ItemRelation;
                            break;

                        default :
                            Debug::assert(lastItemCode == TableGroupAll::All);
                    }

                    // Cache the new ItemCode and restore any cached ItemId or ItemPriceToleranceGroupId
                    lastItemCode = purchPriceToleranceData.ItemCode;
                    switch (purchPriceToleranceData.ItemCode)
                    {
                        case TableGroupAll::GroupId :
                            purchPriceToleranceData.ItemRelation = lastItemPriceToleranceGroupId;
                            break;

                        case TableGroupAll::Table :
                            purchPriceToleranceData.ItemRelation = lastItemId;
                            break;

                        default :
                            Debug::assert(lastItemCode == TableGroupAll::All);
                            purchPriceToleranceData.ItemRelation = #emptyRelation;
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PurchPriceToleranceData</Name>
			<Table>PurchPriceTolerance</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentTolerance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS114476</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">PurchPriceToleranceData</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Grid_ItemCode</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemCode</DataField>
						<DataSource>PurchPriceToleranceData</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_ItemRelation</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchPriceTolerance_Grid_ItemRelation</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemRelation</DataField>
						<DataSource>PurchPriceToleranceData</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Grid_AccountCode</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchPriceTolerance_Grid_AccountCode</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountCode</DataField>
						<DataSource>PurchPriceToleranceData</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_AccountRelation</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchPriceTolerance_Grid_AccountRelation</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountRelation</DataField>
						<DataSource>PurchPriceToleranceData</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Grid_PercentTolerance</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchPriceTolerance_Grid_PercentTolerance</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PercentTolerance</DataField>
						<DataSource>PurchPriceToleranceData</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataGroup>PriceTolerances</DataGroup>
				<DataSource>PurchPriceToleranceData</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>