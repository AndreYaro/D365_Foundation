<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjWIPTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjWIPTable extends FormRun
{
    QueryBuildRange     projSub_wipProjId;
    QueryBuildRange     projNotSub_wipProjId;
    QueryBuildRange     projNotSub_projGroupId;
    QueryBuildRange     projNotSub_projId;

    boolean             jumpToMain;
    boolean isFeatureEnabled = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();
    boolean isContractLineFeatureEnabled = ProjContractLineBasedRevenueRecognitionFeatureHelper::isFeatureEnabled();
    boolean isRevRecRenameFeatureEnabled = FeatureStateProvider::isFeatureEnabled(ProjEstimatesToRevRecRenameFeature::instance());
    private ProjRevRecInstrumentationLogger logger;


    #define.emptyString('')
}
]]></Source>
			</Method>
			<Method>
				<Name>addToWipProj</Name>
				<Source><![CDATA[
    void addToWipProj()
    {
        /* add the selected subprojects to an estimate project */
        ProjTable projTable_SelectedProj;
        ProjTable projTable_Update;

        if (projTable_NotSubProj.ProjId) //check if a proj is selected
        {
            projTable_SelectedProj = projTable_NotSubProj_DS.getFirst(1);

            if (ProjRevRecContractValidationFlight::instance().isEnabled() && ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled())
            {
                while (projTable_SelectedProj) //update WIPProject for all selected projs
                {
                    if (ProjRevRecHelper::allowRevRecProjectChange(projTable_SelectedProj.WIPProject, ProjWIPTable.ProjId)) // Check if setting to this Revenue Project is allowed
                    {
                        update_recordset projTable_Update
                        setting wipProject = projWIPTable.ProjId
                        where projTable_Update.ProjId == projTable_SelectedProj.ProjId;
                    }
                    else
                    {
                        throw error(strFmt(isRevRecRenameFeatureEnabled ? "@Proj:WIPProjAddErrorDueToExistingEstimatesV2" : "@Proj:WIPProjAddErrorDueToExistingEstimates", projTable_SelectedProj.ProjId));
                    }

                    projTable_SelectedProj = projTable_NotSubProj_DS.getNext();
                }
            }
            else
            {
                if (!projTable_SelectedProj) //only one proj selected
                {
                    update_recordset projTable_Update
                    setting wipProject = projWIPTable.ProjId
                    where projTable_Update.ProjId == projTable_NotSubProj.ProjId;
                }
                else //more than one proj selected
                {
                    while (projTable_SelectedProj) //update WIPProject for all selected projs
                    {
                        update_recordset projTable_Update
                        setting wipProject = projWIPTable.ProjId
                        where projTable_Update.ProjId == projTable_SelectedProj.ProjId;

                        projTable_SelectedProj = projTable_NotSubProj_DS.getNext();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addToSelectedContractLines</Name>
				<Source><![CDATA[
    void addToSelectedContractLines()
    {
        MultiSelectionHelper multiSelectionHelper = MultiSelectionHelper::construct();
        multiSelectionHelper.parmDatasource(ProjUnselectedContractLineView_ds);

        // Get the first selected record
        ProjUnselectedContractLineView selected = multiSelectionHelper.getFirst();
        ProjRevRecContractLine projRevRecContractLine;
        str contractLineIds = "";
        while(selected)
        {
            ttsbegin;
            projRevRecContractLine.clear();
            projRevRecContractLine.ContractLineNum = selected.ContractLineId;
            projRevRecContractLine.RevenueRecognitionId = projWIPTable.ProjId;
            projRevRecContractLine.insert();
            ttscommit;

            contractLineIds += selected.ContractLineID;

            //Attempt to get the next record
            selected = multiSelectionHelper.getNext();
        }

        using (var activityContext = logger.revRecActivity().postContractLineBasedRevRec())
        {
            logger.logInformation(strFmt(@"ContractLineAdd::%1 done for
                WipProjId: %2
                ContractLineNums: %3",
                ProjRevRecInstrumentationActivities::ContractLineBasedRevRec,
                projWIPTable.ProjId,
                contractLineIds));
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFromSelectedContractLines</Name>
				<Source><![CDATA[
    void removeFromSelectedContractLines()
    {
        MultiSelectionHelper multiSelectionHelper = MultiSelectionHelper::construct();
        multiSelectionHelper.parmDatasource(ProjSelectedContractLineView_ds);
        ProjSelectedContractLineView selected = multiSelectionHelper.getFirst();        

        str contractLineIds = "";

        while(selected)
        {
            if(element.checkRemoveSelectedContractLine(selected.ContractLineID, element.isFeatureEnabled))
            {
                this.removeContractLineRevProjAssociation(selected.ContractLineID);
            }

            contractLineIds += selected.ContractLineID;

            //Attempt to get the next record
            selected = multiSelectionHelper.getNext();
        }

        using (var activityContext = logger.revRecActivity().postContractLineBasedRevRec())
        {
            logger.logInformation(strFmt(@"ContractLineAdd::%1 done for
                WipProjId: %2
                ContractLineNums: %3",
                ProjRevRecInstrumentationActivities::ContractLineBasedRevRec,
                projWIPTable.ProjId,
                contractLineIds));
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>removeContractLineRevProjAssociation</Name>
				<Source><![CDATA[
    private void removeContractLineRevProjAssociation( PSAContractLineNum _contractLineNum)
    {
        ProjRevRecContractLine projRevRecContractLine;

        select forupdate projRevRecContractLine
            where projRevRecContractLine.ContractLineNum == _contractLineNum &&
            projRevRecContractLine.RevenueRecognitionId == projWIPTable.ProjId;

        ttsbegin;
        projRevRecContractLine.delete();
        ttscommit;

        // If _contractLineNum has a on acc trans, then after being disassociated from a wipProject, it should be associated 
        // to another project. This project should ideally be
        // 1. The WipProject it originally was attached to.
        // 2. New project will be created
        ProjOnAccTrans onAccTrans;
        select firstonly onAccTrans
            where onAccTrans.PSAContractLineNum == _contractLineNum
            && onAccTrans.ProjID == projWIPTable.ProjId;
        if (onAccTrans)
        {
            PSAContractLineItems psaContractLineItems = PSAContractLineItems::find(_contractLineNum);

            if(!psaContractLineItems.RecId)
            {
                throw error("@PSA3119");
            }
            ProjInvoiceTable projInvoiceTable = ProjInvoiceTable::find(psaContractLineItems.ProjInvoiceProjId);
            if (!projInvoiceTable.RecId)
            {
                throw Global::error(strFmt("@Proj:ContractDoesNotExist", psaContractLineItems.ProjInvoiceProjId));
            }

            // This contractline's corresponding wipproject should be the one with
            // 1. particular description.
            // 2. Not same as current wipProject i.e. projwIPTable.
            // 3. Having IsContractLineUsed set.
            // 4. Has no associated entry in projRevRecContractLine.
            // 5. Has no active estimates.
            ProjControlPeriodTable projControlPeriodTable;
            str description = strFmt("@Proj:ProjWIPTableDescContractLine",  projInvoiceTable.Description , psaContractLineItems.LineDesc);
            ProjWIPTable wipProject;
            select firstonly wipProject
                where wipProject.IsContractLineUsed == NoYes::Yes
                    && wipProject.Description == description
                    && wipProject.ProjId != projWIPTable.ProjId
                notexists join projRevRecContractLine
                    where projRevRecContractLine.RevenueRecognitionId == wipProject.ProjId
                notexists join projControlPeriodTable
                    where projControlPeriodTable.ProjId == wipProject.ProjId
                        && (projControlPeriodTable.PeriodStatus == ProjControlPeriodStatus::Created
                        || projControlPeriodTable.PeriodStatus == ProjControlPeriodStatus::Posted
                        || projControlPeriodTable.PeriodStatus == ProjControlPeriodStatus::Eliminate);

            if (!wipProject)
            {
                wipProject = ProjRevRecHelper::createFixedPriceEstimateProjectForContractLine(_contractLineNum);
            }
            else
            {
                projRevRecContractLine.clear();
                projRevRecContractLine.ContractLineNum = _contractLineNum;
                projRevRecContractLine.RevenueRecognitionId = wipProject.ProjId;
                if(!projRevRecContractLine.validateWrite())
                {
                    throw Global::error(strFmt("@SYS67205", tablePName(ProjRevRecContractLine)));
                }
                ttsbegin;
                projRevRecContractLine.insert();
                ttscommit;
            }

            using (var activityContext = logger.revRecActivity().postContractLineBasedRevRec())
            {
                logger.logInformation(strFmt(@"removeContractLineRevProjAssociation::%1 done for
                WipProjId: %2
                ContractLineNum: %3",
                ProjRevRecInstrumentationActivities::ContractLineBasedRevRec,
                wipProject.ProjId,
                _contractLineNum));
            }
        }      
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeProjState</Name>
				<Source><![CDATA[
    void changeProjState(ProjStatus _toProjStatus)
    {
        // Change project stage for all associated projects (in ProjTable).

        ProjTable       projTableState;
        ProjStatusUpd   projStatusUpd;

        if (Box::okCancel(strFmt("@SYS95391",_toProjStatus),DialogButton::Ok,"@SYS8313")  == DialogButton::Ok)
        {
            ttsbegin;
                while select forupdate projTableState where projTableState.wipProject == projWIPTable.ProjId
                {
                    projStatusUpd = ProjStatusUpd::construct(projTableState,_toProjStatus);
                    projStatusUpd.execute();
                }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ProjWIPTable projWIPTableRecord;

        if (element.args().dataset() == tableNum(ProjWIPTable))
        {
            projWIPTableRecord   = element.args().record();
        }

        logger = ProjRevRecInstrumentationLogger::createLogger(classStr(ProjControlActual));

        super();

        jumpToMain = SysFormRun::isCalledFromJumpRef(this.args(), fieldNum(ProjWIPTable, ProjId)) ? true : false;

        if (isFeatureEnabled)
        {
            info("@Proj:EstimateProjectRevProfileWarning");
            Identification_ProjId.enabled(false);
            ProjRevenueProfileId.visible(true);
            element.design().removeControl(ProjTable_ProjGroupId.id());
        }

        if (FeatureStateProvider::isFeatureEnabled(ProjEstimatesToRevRecRenameFeature::instance()))
        {
            element.design().caption("@Proj:RevenueProjects");
            Identification_ProjId.label("@Proj:RevProjectId");
            KontrolSystem.caption("@Proj:RevRec");
        }

        // Toggle visibility between ProjectTab and ContractLineTab based on ProjContractLineBasedRevenueRecognitionFeature
        ProjectsTab.visible(!isContractLineFeatureEnabled || projWIPTableRecord.isContractLineUsed == NoYes::No);

        ContractLineTab.visible(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        ContractLineTab.enabled(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        Controlsystem_DefaultProject.visible(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        Controlsystem_DefaultProject.enabled(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        Controlsystem_DefaultContractLine.visible(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        Controlsystem_DefaultContractLine.enabled(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes);
        Project.visible(!(isContractLineFeatureEnabled && projWIPTableRecord.IsContractLineUsed == NoYes::Yes));

    }

]]></Source>
			</Method>
			<Method>
				<Name>removeFromWipProj</Name>
				<Source><![CDATA[
    void removeFromWipProj()
    {
        /* remove the selected subprojects from estimate project */
        if (!element.isFeatureEnabled && !ProjWIPTable::checkRemoveProjectV2(projTable_SubProj.ProjId))
        {
            return;
        }

        if (projTable_SubProj.ProjId) //check if a proj is selected
        {
            ProjTable projTable_SelectedProj = projTable_SubProj_DS.getFirst(1);
            boolean invalidProjects = false;
            ttsbegin;

            while(projTable_SelectedProj)
            {
				// Do not throw error till the end to provide complete list of problematic projects
                if (!element.isFeatureEnabled || ProjWIPTable::checkRemoveProjectV2(projTable_SelectedProj.ProjId, element.isFeatureEnabled))
				{
                    projTable_SelectedProj.selectForUpdate(true);
                    if (ProjWIPTable::find(projTable_SelectedProj.ProjId))
                    {
                        // Reset the wip project back to its own project id if wipProj for that projId exists.
                        projTable_SelectedProj.WIPProject = projTable_SelectedProj.ProjId;
                    }
                    else
                    {
                        projTable_SelectedProj.WIPProject = '';
                    }
                    projTable_SelectedProj.update();
                }
				else 
				{
                    invalidProjects = true;
				}
    
                projTable_SelectedProj = projTable_SubProj_DS.getNext();
            }

			if (invalidProjects)
            {
                ttsabort;
			}
            else
			{
                ttscommit;
			}
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showChild</Name>
				<Source><![CDATA[
    boolean showChild()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override activate method to update control properties.
    /// </summary>
    /// <param name = "_active">Boolean data type that specifies whether a form has focus.</param>
    public void activate(boolean _active)
    {
        super(_active);

        if (_active)
        {
            boolean hasPendingEstimates = projWIPTable.hasPostedOrPendingEstimates();
            if(isFeatureEnabled)
            {
                ProjRevenueProfileId.allowEdit(!hasPendingEstimates);
                ProjRevenueProfileId.enabled(!hasPendingEstimates);
            }
            if(isContractLineFeatureEnabled)
            {
                Controlsystem_DefaultProject.allowEdit(!hasPendingEstimates);
                Controlsystem_DefaultProject.enabled(!hasPendingEstimates);
                Controlsystem_DefaultContractLine.allowEdit(!hasPendingEstimates);
                Controlsystem_DefaultContractLine.enabled(!hasPendingEstimates);
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRemoveSelectedContractLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether it is valid to remove an ContractLine from the estimate project.
    /// </summary>
    /// <param name = "_contractLineId">ContractLine ID to be removed.</param>
    /// <param name = "_multipleContractLineFeatureEnabled">Boolean indicating if multiple contract line feature is enabled. False by default.</param>
    /// <returns>True if contractLine does not have any associated transactions; Otherwise false</returns>
    public boolean checkRemoveSelectedContractLine(str _contractLineId, boolean _multipleContractLineFeatureEnabled = false)
    {

        ProjEmplTrans projEmplTrans;
        ProjEmplTransCost projEmplTransCost;
        ProjCostTrans projCostTrans;
        ProjCostTransCost projCostTransCost;
        ProjItemTrans projItemTrans;
        ProjItemTransCost projItemTransCost;
        ProjOnAccTrans projOnAccTrans;
        ProjOnAccTransSale projOnAccTransSale;
        
        select firstonly projEmplTrans
            where  projEmplTrans.PSAContractLineNum == _contractLineId
                join projEmplTransCost
                    where ((projEmplTransCost.TransId == projEmplTrans.TransId)
                        && (projEmplTransCost.TransStatus == ProjTransStatus::Estimated ||
                        projEmplTransCost.TransStatus == ProjTransStatus::Eliminated));

        if (projEmplTrans)
        {
            return checkFailed(element.getErrorMessage(_multipleContractLineFeatureEnabled, _contractLineId, projEmplTransCost.TransStatus, tableid2pname(tablenum(ProjEmplTransCost))));
        }

        select firstonly projCostTrans
            where  projCostTrans.PSAContractLineNum == _contractLineId
                join projCostTransCost
                    where ((projCostTransCost.TransId == projCostTrans.TransId)
                        && (projCostTransCost.TransStatus == ProjTransStatus::Estimated
                        ||  projCostTransCost.TransStatus == ProjTransStatus::Eliminated));

        if (projCostTrans)
        {
            return checkFailed(element.getErrorMessage(_multipleContractLineFeatureEnabled, _contractLineId, projCostTransCost.TransStatus, tableid2pname(tablenum(ProjCostTransCost))));
        }

        
        select firstonly projOnAccTrans
            where  projOnAccTrans.PSAContractLineNum == _contractLineId
                join projOnAccTransSale
                    where ((projOnAccTransSale.TransId == projOnAccTrans.TransId)
                        && (projOnAccTransSale.TransStatus == ProjTransStatus::Estimated ||
                        projOnAccTransSale.TransStatus == ProjTransStatus::Eliminated));

        if (projOnAccTrans)
        {
            return checkFailed(element.getErrorMessage(_multipleContractLineFeatureEnabled, _contractLineId, projOnAccTransSale.TransStatus, tableid2pname(tablenum(ProjOnAccTransSale))));
        }

        select firstonly projItemTrans
            where  ProjItemTrans.PSAContractLineNum == _contractLineId
                join projItemTransCost
                    where ((projItemTransCost.InventTransId == projItemTrans.InventTransId
                        && projItemTransCost.ProjAdjustRefId == projItemTrans.ProjAdjustRefId)
                        && (projItemTransCost.TransStatus == ProjTransStatus::Estimated
                        ||  projItemTransCost.TransStatus == ProjTransStatus::Eliminated));

        if (projItemTrans)
        {
            return checkFailed(element.getErrorMessage(_multipleContractLineFeatureEnabled, _contractLineId, projItemTransCost.TransStatus, tableid2pname(tablenum(ProjItemTransCost))));
        }
        

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getErrorMessage</Name>
				<Source><![CDATA[
    private str getErrorMessage(boolean _multipleContractLineFeatureEnabled, str _contractLineId, ProjTransStatus _transStatus, str _tableName)
    {
        str errorMessage;
        if (_multipleContractLineFeatureEnabled)
        {
            errorMessage = strFmt("@Proj:ContractLineUpdateErrorDuetoEstimate",  _contractLineId, _transStatus, _tableName);
        }
        else
        {
            errorMessage = strfmt("@Proj:ContractLineUpdateError", _transStatus, _tableName);
        }
        return errorMessage;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjWIPTable</Name>
				<Methods>
					<Method>
						<Name>projGroup</Name>
						<Source><![CDATA[
        public display ProjGroupId projGroup()
        {
            return ProjTable::find(projWIPTable.ProjId).ProjGroupId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            
            ctrlControlPeriod.enabled(ProjTable::find(ProjWIPTable.ProjId).allowEstimateCreation());

            if (ProjControlPeriodTable::eliminated(projWIPTable.ProjId, projWIPTable.ControlId))
            {
                addButton_Project.enabled(false);
            }
            else
            {
                addButton_Project.enabled(true);
            }
            if (projWIPTable.ProjId)
            {
                projSub_wipProjId.value(strFmt('%1',projWIPTable.ProjId));

                if (!isFeatureEnabled)
                {
                    projNotSub_wipProjId.value(queryValue(#emptyString));
                    projNotSub_projGroupId.value(strFmt('%1',projWIPTable_ds.projGroup()));
                    projNotSub_projId.value(strFmt('!%1',projWIPTable.ProjId));
                }
                else
                {
                    projNotSub_wipProjId.value(SysQuery::valueNot(projWIPTable.ProjId));
                }
            }
            else
            {
                projSub_wipProjId.value(queryValue(#emptyString));
                
                if (!isFeatureEnabled)
                {
                    projNotSub_wipProjId.value(queryValue(!#emptyString));
                    projNotSub_projGroupId.value(queryValue(#emptyString));
                    projNotSub_projId.value(queryValue(#emptyString));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         activeAll;

            queryBuildDataSource =  projWIPTable_ds.query().dataSourceTable(tableNum(ProjWIPTable));
            activeAll = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(ProjWIPTable, wipEliminated));
            activeAll.value('');

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ControlId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret && !ProjControl::exist(kontrolsystem_ControlId.text()))
                {
                    ret = checkFailed(strFmt("@SYS76877",kontrolsystem_ControlId.text()));
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource;

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjControl),_formControl);

                sysTableLookup.addLookupfield(fieldNum(ProjControl, ControlId), true);
                sysTableLookup.addLookupfield(fieldNum(ProjControl, Name));

                queryBuildDataSource = query.addDataSource(tableNum(ProjControl));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DefaultContractLineNum</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource;

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(PSAContractLineItems),_formControl);

                sysTableLookup.addLookupfield(fieldNum(PSAContractLineItems, ContractLineNum), true);
                sysTableLookup.addLookupfield(fieldNum(PSAContractLineItems, LineDesc));

                queryBuildDataSource = query.addDataSource(tableNum(PSAContractLineItems));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret && !PSAContractLineItems::find(Controlsystem_DefaultContractLine.text()))
                {
                    ret = checkFailed(strFmt("@SYS76877",Controlsystem_DefaultContractLine.text()));
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PeriodId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret && !ProjPeriodTable::exist(kontrolsystem_PeriodId.text()))
                {
                    ret = checkFailed(strFmt("@SYS76877",kontrolsystem_PeriodId.text()));
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();
                QueryBuildDataSource queryBuildDataSource;

                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjPeriodTable),_formControl);

                sysTableLookup.addLookupfield(fieldNum(ProjPeriodTable, PeriodId), true);
                sysTableLookup.addLookupfield(fieldNum(ProjPeriodTable, Description));

                queryBuildDataSource = query.addDataSource(tableNum(ProjPeriodTable));

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ProjTable::lookupProjWIP(_formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean     ret = true;
                ProjType    type;
                ProjTable   projTableLocal;

                projTableLocal = ProjTable::find(projWIPTable.ProjId);
                if (!projTableLocal)
                {
                    ret = checkFailed("@SYS327255");
                }

                if (ret)
                {
                    ret = super();
                }

                if (ret)
                {
                    type = projWIPTable.projType();
                    if (type != ProjType::FixedPrice &&
                        type != ProjType::Investment &&
                        !(projTableLocal.ProjInvoiceProjId &&
                          isFeatureEnabled &&
                          ProjMultipleContractLinesForProjectFeatureHelper::existContractLineForBillingMethod(projTableLocal.ProjId, projTableLocal.ProjInvoiceProjId, ProjContractBillingMethod::FixedPrice)))
                    {
                        //Project %1 must be of type Fixed price or Investment
                        ret = checkFailed(strFmt("@SYS77187", projWIPTable.ProjId));
                    }
                    else if (ProjRevRecHelper::getCompletePrincipleForProjTable(projTableLocal) == ProjCompletePrincip::NoWIP)
                    {
                        ret = checkFailed("@SYS107847");
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!isFeatureEnabled)
                {
                    if (! projWIPTable.RecId)
                    {
                        projWIPTable.Description = ProjTable::find(projWIPTable.ProjId).Name;
                    }

                    projSub_wipProjId.value(strFmt('%1',projWIPTable.ProjId));

                    projNotSub_wipProjId.value(queryValue(#emptyString));
                    projNotSub_projGroupId.value(strFmt('%1',projWIPTable_ds.projGroup()));
                    projNotSub_projId.value(strFmt('!%1',projWIPTable.ProjId));

                    projTable_SubProj_ds.executeQuery();
                    projTable_NotSubProj_ds.executeQuery();
                }
                
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjRevenueProfileId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Method to create custom lookup logic for <c>ProjRevenueProfileId</c> field.
            /// </summary>
            /// <param name = "_formControl">FormControl object on which the lookup is invoked.</param>
            /// <param name = "_filterStr">Input string in the field for lookup.</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ProjRevenueProfile::lookupValidProfileForRevRec(_formControl, _filterStr);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>ProjTable_SubProj</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projWIPTable.ProjId == projTable_SubProj.ProjId)
            {
                removeButton_Project.enabled(false);
            }
            else
            {
                removeButton_Project.enabled(true);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            Query                q;
            QueryBuildDataSource qbr1;

            q = new Query();

            super();

            qbr1 = q.addDataSource(tableNum(ProjTable),'ProjTable_SubProj');

            qbr1.relations(true);

            projSub_wipProjId = qbr1.addRange(fieldNum(ProjTable, wipProject));

            this.query(q);

            if (projWIPTable.ProjId == projTable_SubProj.ProjId)
            {
                removeButton_Project.enabled(false);
            }
            else
            {
                removeButton_Project.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjTable_NotSubProj</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            Query eligibleProjQuery = new Query();
            QueryBuildDataSource projTableDS = eligibleProjQuery.addDataSource(tableNum(ProjTable),'ProjTable_NotSubProj');
            if (isFeatureEnabled)
            {
                // Query is finding the eligible projects that have milestone line associated with them and dont have any estimate in non-reversal stage.
                
                QueryBuildDataSource onAccTransDS = projTableDS.addDataSource(tableNum(ProjOnAccTrans));
                QueryBuildDataSource estimatesDS = projTableDS.addDataSource(tableNum(ProjControlPeriodTable));
                
                onAccTransDS.relations(true);
                
                // Dont want the <c>ProjControlPeriodTable</c> relations to be loaded since we are adding the explicit link later.
                estimatesDS.relations(false);
                estimatesDS.joinMode(JoinMode::NoExistsJoin);
                estimatesDS.addLink(fieldNum(ProjTable, ProjId), fieldNum(ProjControlPeriodTable, ProjId));
                estimatesDS.addRange(fieldNum(ProjControlPeriodTable, PeriodStatus)).value(SysQuery::valueNot(ProjControlPeriodStatus::Reversal));

                // Clause for milestone transactions.
                onAccTransDS.addRange(fieldNum(ProjOnAccTrans, TransactionOrigin)).value(enum2Str(ProjOrigin::Milestone));
                
                // Group by to avoid duplicate values for same project ID.
                projTableDS.addGroupByAndSelectionField(fieldNum(ProjTable, ProjId));
                projTableDS.addGroupByAndSelectionField(fieldNum(ProjTable, Name));
                projTableDS.addGroupByAndSelectionField(fieldNum(ProjTable, Status));
                projTableDS.addGroupByAndSelectionField(fieldNum(ProjTable, WIPProject));

                // Clauses for project being still active and of type none.
                projTableDS.addRange(fieldNum(ProjTable, Status)).value(SysQuery::valueNot(enum2Str(ProjStatus::Completed)));
                projTableDS.addRange(fieldNum(ProjTable, Type)).value(enum2Str(ProjType::None));

                // Clause to exclude the projects already associated with thie wip project.
                projNotSub_wipProjId = projTableDS.addRange(fieldNum(ProjTable, WIPProject));

                this.query(eligibleProjQuery);
            }
            else
            {
                projTableDS.relations(true);
                projNotSub_wipProjId = projTableDS.addRange(fieldNum(ProjTable,wipProject));
                projNotSub_projGroupId = projTableDS.addRange(fieldNum(ProjTable,ProjGroupId));
                projNotSub_projId= projTableDS.addRange(fieldNum(ProjTable,ProjId));
                this.query(eligibleProjQuery);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjSelectedContractLineView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            
            ProjWIPTable projWIPTableRecord;

            if (element.args().dataset() == tableNum(ProjWIPTable))
            {
                projWIPTableRecord = element.args().record();

                Query selectedQuery = new Query();
                QueryBuildDataSource selectedDS = selectedQuery.addDataSource(tableNum(ProjSelectedContractLineView));
                selectedDS.addRange(fieldNum(ProjSelectedContractLineView, RevenueRecognitionId)).value(projWIPTableRecord.ProjId);
                this.query(selectedQuery);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AddButton_Project</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.addToWipProj();

            projTable_SubProj_ds.executeQuery();
            projtable_NotSubProj_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemoveButton_Project</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.removeFromWipProj();

            projTable_SubProj_ds.executeQuery();
            projTable_NotSubProj_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ContractLine_1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Redirect the clicked Contract Line on CE Environment
        /// </summary>
        public void jumpRef()
        {
            str contractLineID = projUnselectedContractLineView.ContractLineID;
            if(contractLineID != '')
            {
                ProjectOperationsDWHelper dwHelper = ProjectOperationsDWHelper::construct();
                dwHelper.openProjectContractLineDetailsInCE(contractLineID, ProjWIPTable.DataAreaId);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ContractId_1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Redirect to Contract on CE environment
        /// </summary>
        public void jumpRef()
        {
            str contractID = projUnselectedContractLineView.ContractID;
            if(contractID != '')
            {
                ProjectOperationsDWHelper dwHelper = ProjectOperationsDWHelper::construct();
                dwHelper.openProjectContractDetailsInCE(contractID, ProjWIPTable.DataAreaId);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddButton_ContractLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.addToSelectedContractLines();
            
            ProjUnselectedContractLineView_ds.executeQuery();
            ProjSelectedContractLineView_ds.executeQuery();

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemoveButton_ContractLine</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            if(element.isFeatureEnabled)
            {
                element.removeFromSelectedContractLines();
            
                ProjUnselectedContractLineView_ds.executeQuery();
                ProjSelectedContractLineView_ds.executeQuery();
            }
    
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ContractLine</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Redirects to the clicked Contract Line info on CE Environment
        /// </summary>
        public void jumpRef()
        {
            str contractLineID = projSelectedContractLineView.ContractLineID;
            if(contractLineID != '')
            {
                ProjectOperationsDWHelper dwHelper = ProjectOperationsDWHelper::construct();
                dwHelper.openProjectContractLineDetailsInCE(contractLineID, ProjWIPTable.DataAreaId);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ContractID</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Redirects to clicked Contract on CE environment
        /// </summary>
        public void jumpRef()
        {
            str contractID = projSelectedContractLineView.ContractID;
            if(contractID != '')
            {
                ProjectOperationsDWHelper dwHelper = ProjectOperationsDWHelper::construct();
                dwHelper.openProjectContractDetailsInCE(contractID, ProjWIPTable.DataAreaId);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjWIPTable</Name>
			<Table>ProjWIPTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsContractLineUsed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjRevenueProfileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPEliminated</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjTable_SubProj</Name>
			<Table>ProjTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlertTimeFrameWeeks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlternateBudgetProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertifiedPayroll</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompleteScheduled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractAmendment_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractDate_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractPeriod_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractValue_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Created</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtensionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Format</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Header</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobPayType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinTimeIncrement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OCIP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OCIPGL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetaryControlOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetManagement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetOverrunOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCarryForwardNegativeBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCarryForwardRemainingBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjDataSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectedEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectedStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertySearch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSADoInvoiceCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAForecastModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAForecastModelIdExternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSANotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqHourValidate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqItemValidate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAReadyForInvoicing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAResSchedStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainIncludeLower</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainScheduleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedConstraintDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedConstraintType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedDefaultDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedDuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedEffort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedFromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedIgnoreCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedMilestone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedScheduled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedUseDuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATeleFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATimeMeasure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATrackCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityExpenseForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityExpenseTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityHourForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityHourTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityItemForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityItemTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subject_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncCreatedByExternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncEntityId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncLastTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncToCRM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Template</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TemplateApplied</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimePostDetailSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAlternateProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseBudgeting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidateProjCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPSAArchitect</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsibleFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsibleSales</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjWIPTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjTable_NotSubProj</Name>
			<Table>ProjTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlertTimeFrameWeeks</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlternateBudgetProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertifiedPayroll</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompleteScheduled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractAmendment_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractDate_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractPeriod_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractValue_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Created</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultFundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtensionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Format</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Header</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobPayType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinTimeIncrement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OCIP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OCIPGL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetaryControlOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetManagement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjBudgetOverrunOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCarryForwardNegativeBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCarryForwardRemainingBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjDataSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectedEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectedStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertySearch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSADoInvoiceCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAForecastModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAForecastModelIdExternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAInvoiceMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSANotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqHourValidate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAPReqItemValidate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjTask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAReadyForInvoicing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAResSchedStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainIncludeLower</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetainScheduleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedConstraintDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedConstraintType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedDefaultDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedDuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedEffort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedFromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedIgnoreCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedMilestone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedScheduled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSASchedUseDuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATeleFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATimeMeasure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSATrackCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityExpenseForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityExpenseTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityHourForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityHourTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityItemForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequireActivityItemTrx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortingId[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subject_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncCreatedByExternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncEntityId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncLastTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncToCRM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Template</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TemplateApplied</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimePostDetailSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAlternateProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseBudgeting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidateProjCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPSAArchitect</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsibleFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerResponsibleSales</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjWIPTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjSelectedContractLineView</Name>
			<Table>ProjSelectedContractLineView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ContractID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractLineDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractLineID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevenueRecognitionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjUnselectedContractLineView</Name>
			<Table>ProjUnselectedContractLineView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ContractID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractLineID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AllowFormCompanyChange xmlns="">Yes</AllowFormCompanyChange>
		<Caption xmlns="">@SYS72778</Caption>
		<DataSource xmlns="">ProjWIPTable</DataSource>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">ProjWIPTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPaneHeader</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RelatedInfoGroup</Name>
						<ElementPosition>1476395002</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CtrlControlPeriod</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DataSource>ProjWIPTable</DataSource>
								<MenuItemName>ProjControlPeriod</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS105370</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CtrlControlPeriodV2</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DataSource>ProjWIPTable</DataSource>
								<MenuItemName>ProjControlPeriodV2</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<ShowShortCut>No</ShowShortCut>
								<Text>@Proj:RevRec</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Project</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DataSource>ProjWIPTable</DataSource>
								<MenuItemName>ProjProjectsListPage</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS36368</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS314516</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ProjWIPTable</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>939524094</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ProjId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Description</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Elimination_WIPEliminated</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WIPEliminated</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS35583</Caption>
								<DataSource>ProjWIPTable</DataSource>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Kontrolsystem</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Kontrolsystem_ControlId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524094</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ControlId</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Controlsystem_DefaultProject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524094</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DefaultProject</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Controlsystem_DefaultContractLine</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524094</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DefaultContractLineNum</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Kontrolsystem_PeriodId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1409286141</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodId</DataField>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjTable_ProjGroupId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ProjGroup</DataMethod>
										<DataSource>ProjWIPTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjRevenueProfileId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjRevenueProfileId</DataField>
										<DataSource>ProjWIPTable</DataSource>
										<Label>@Proj:RevenueProfileForm_Id</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS54063</Caption>
								<DataSource>ProjWIPTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS2952</Caption>
						<DataSource>ProjWIPTable</DataSource>
						<Scrollbars>Auto</Scrollbars>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectsTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1409286141</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ListPanel</Pattern>
						<PatternVersion>1.3</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SetupProject</Name>
								<ElementPosition>1431655764</ElementPosition>
								<ExtendedStyle>listPanel</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Available_Project</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<ExtendedStyle>listPanel_availPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>RightGrid</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjTable_NotSubProj_ProjId</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ProjId</DataField>
														<DataSource>ProjTable_NotSubProj</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjTable_NotSubProj_Name</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>ProjTable_NotSubProj</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ProjTable_NotSubProj_Status</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Status</DataField>
														<DataSource>ProjTable_NotSubProj</DataSource>
														<FastTabSummary>No</FastTabSummary>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>EstimateProjId</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>WIPProject</DataField>
														<DataSource>ProjTable_NotSubProj</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>ProjTable_NotSubProj</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS69648</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SeperatorControl_Project</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacingMode>Fixed</VerticalSpacingMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddButton_Project</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveRight</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS2318</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>RemoveButton_Project</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveLeft</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS311855</Text>
											</AxFormControl>
										</Controls>
										<TopMargin>80</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Selected_Project</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<ExtendedStyle>listPanel_selPanel</ExtendedStyle>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>LeftGrid</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjTable_SubProj_ProjId</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ProjId</DataField>
														<DataSource>ProjTable_SubProj</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProjTable_SubProj_Name</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>ProjTable_SubProj</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>ProjTable_SubProj_Status</Name>
														<ElementPosition>1879048190</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Status</DataField>
														<DataSource>ProjTable_SubProj</DataSource>
														<FastTabSummary>No</FastTabSummary>
														<Items />
													</AxFormControl>
												</Controls>
												<DataSource>ProjTable_SubProj</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS70298</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<Columns>3</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS50498</Caption>
						<Scrollbars>Auto</Scrollbars>
						<Style>DetailsFormGrid</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ContractLineTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<Pattern>ListPanel</Pattern>
						<PatternVersion>1.3</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SetupContractLine</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ExtendedStyle>listPanel</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Available_ContractLine</Name>
										<ExtendedStyle>listPanel_availPanel</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>UnselectedGrid</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractLine_1</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ContractLineID</DataField>
														<DataSource>ProjUnselectedContractLineView</DataSource>
														<Label>@Proj:ContractLineId</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractLineDescription_1</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Description</DataField>
														<DataSource>ProjUnselectedContractLineView</DataSource>
														<Label>@Proj:ContractLineDescription</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractId_1</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ContractID</DataField>
														<DataSource>ProjUnselectedContractLineView</DataSource>
														<Label>@Proj:ContractId</Label>
													</AxFormControl>
												</Controls>
												<DataSource>ProjUnselectedContractLineView</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@Proj:AvailableContractLine</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>SeperatorControl_ContractLine</Name>
										<ExtendedStyle>listPanel_buttonPanel</ExtendedStyle>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AddButton_ContractLine</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveRight</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS2318</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>RemoveButton_ContractLine</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>MoveLeft</NormalImage>
												<ShowShortCut>No</ShowShortCut>
												<Text>@SYS311855</Text>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Selected_ContractLine</Name>
										<ExtendedStyle>listPanel_selPanel</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>SelectedGrid</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractLine</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ContractLineID</DataField>
														<DataSource>ProjSelectedContractLineView</DataSource>
														<Label>@Proj:ContractLineId</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractLineDescription</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ContractLineDescription</DataField>
														<DataSource>ProjSelectedContractLineView</DataSource>
														<Label>@Proj:ContractLineDescription</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ContractID</Name>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>ContractID</DataField>
														<DataSource>ProjSelectedContractLineView</DataSource>
														<Label>@Proj:ContractId</Label>
													</AxFormControl>
												</Controls>
												<DataSource>ProjSelectedContractLineView</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@Proj:SelectedContractLine</Caption>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<Columns>3</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Proj:ContractLine</Caption>
						<Style>DetailsFormGrid</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ProjWIPTable</DataSource>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>ProjProjectsEstimateListPart</Name>
			<DataSource>ProjWIPTable</DataSource>
			<ElementPosition>536870911</ElementPosition>
			<IsLinked>Yes</IsLinked>
			<MenuItemName>ProjProjectsEstimateListPart</MenuItemName>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>ProjEstimateProjectForecastsFormPart</Name>
			<DataSource>ProjWIPTable</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>1073741822</ElementPosition>
			<MenuItemName>ProjEstimateProjectForecastsFormPart</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
		<AxFormPartReference xmlns="">
			<Name>ProjEstimateActualConsumptionInfoPart</Name>
			<DataSource>ProjWIPTable</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<ElementPosition>1610612733</ElementPosition>
			<MenuItemName>ProjEstimateActualConsumptionInfoPart</MenuItemName>
			<RunMode>Remote</RunMode>
		</AxFormPartReference>
	</Parts>
</AxForm>