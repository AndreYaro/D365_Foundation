<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayModuleTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RPayModuleTable extends FormRun
    {
        int             dragIdx;
        int             lastHilited;
        Imagelist       ilist;
        Imagelist       slist;
        FormTreeItem    itemFrom;
}
]]></Source>
			</Method>
			<Method>
				<Name>buildParentOf</Name>
				<Source><![CDATA[
    void buildParentOf(RPayModuleCode   _payModuleCode,
                       int              _treeHeader)

    {
        FormTreeItem    formTreeItem;
        RPayModuleTable payModuleLocal;
        int             node;
        ;
        while select PayModuleCode, PayModuleName from payModuleLocal
            where payModuleLocal.ParentModuleCode == _payModuleCode
        {
            formTreeItem = structure.getItem(_treeHeader);
            formTreeItem.children(1);
            structure.setItem(formTreeItem);
            formTreeItem = new FormTreeItem(payModuleLocal.PayModuleName,1,-1);
            formTreeItem.data(payModuleLocal.PayModuleCode);
            node = structure.addItem(_treeHeader,FormTreeAdd::Sort,formTreeItem);
            this.buildParentOf(payModuleLocal.PayModuleCode, node);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDragAndDrop</Name>
				<Source><![CDATA[
    boolean canDragAndDrop(int _idx)
    {
        FormTreeItem itemTo;
        ;
        itemTo = structure.getItem(_idx);
        if (itemTo)
        {
            if (typeOf(itemFrom.data()) == Types::Int64)
            {
                return false;
            }
        }
        else
        {
            if (typeOf(itemFrom.data()) == Types::String)
            {
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createStructure</Name>
				<Source><![CDATA[
    void createStructure()
    {
        RPayModuleTable         payModuleTableLocal;
        RPayModuleGroupTable    payModuleGroupTableLocal;
        FormTreeItem            formTreeItem;
        int                     rootIdx, nodeIdx;

        void addModulesForGroup(RPayModuleGroupId _payModuleGroupId, int _rootIdx)
        {
            while select PayModuleName from payModuleTableLocal
                where payModuleTableLocal.PayModuleGroupId == _payModuleGroupId
                 && payModuleTableLocal.ParentModuleCode   == ""
            {
                formTreeItem = new FormTreeItem(payModuleTableLocal.PayModuleName, 1);
                formTreeItem.data(payModuleTableLocal.PayModuleCode);
                nodeIdx = structure.addItem(_rootIdx, FormTreeAdd::Last, formTreeItem);
                this.buildParentOf(payModuleTableLocal.PayModuleCode, nodeIdx);
            }
        }

        structure.deleteAll();

        while select payModuleGroupTableLocal
        {
            formTreeItem = new FormTreeItem(payModuleGroupTableLocal.PayGroupName, 1);
            formTreeItem.data(payModuleGroupTableLocal.RecId);
            rootIdx = structure.addItem(FormTreeAdd::Root, FormTreeAdd::Last, formTreeItem);
            addModulesForGroup(payModuleGroupTableLocal.PayModuleGroupId, rootIdx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dropHilite</Name>
				<Source><![CDATA[
    void dropHilite(FormTreeControl _t,int _idx)
    {
        FormTreeItem    item;

        if (lastHilited)
        {
            item = _t.getItem(lastHilited);
            item.stateDropHilited(false);
            _t.setItem(item);
            lastHilited = 0;
        }

        if (_idx)
        {
            lastHilited = _idx;
            item = _t.getItem(lastHilited);
            item.stateDropHilited(true);
            _t.setItem(item);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        ;
        super();
        RPayModuleTable::payModuleInit();
        this.setImageList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setImageList</Name>
				<Source><![CDATA[
    #ResAppl
    void setImageList()
    {
        ilist = new Imagelist( Imagelist::smallIconWidth() , Imagelist::smallIconHeight() );

        ilist.add( new Image(#ImageTables));
        ilist.add( new Image(#ImageTable));

        structure.setImagelist(ilist );
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayModuleTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
            element.createStructure();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ParentModuleCode</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                boolean checkParents(RPayModuleTable _table, RPayModuleCode _code = _table.PayModuleCode)
                {
                    RPayModuleTable     localTable;
                    boolean check_ret = true;

                    if (!_table.ParentModuleCode)
                    {
                        return true;
                    }

                    localTable = RPayModuleTable::find(_table.ParentModuleCode);

                    if (localTable.ParentModuleCode == _code)
                    {
                        return checkFailed("@SYS119635");
                    }
                    else
                    {
                        check_ret = checkParents(localTable, _code);
                    }

                    return check_ret;
                }

                ret = super();

                if (PayModuleTable.ParentModuleCode == PayModuleTable.PayModuleCode)
                {
                    ret = checkFailed("@SYS119635");
                }

                //check parents nodes
                if (ret)
                {
                    ret = checkParents(PayModuleTable);
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Button</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            RPayModuleControl   payModuleControl;
            QueryRun            queryRun;
            FormRun             formRun;
            Args                args = new Args();
            ;
            payModuleControl = payModuleTable.payModuleControl();
            queryRun         = payModuleControl.queryRun();
            args.name(formStr(SysQueryForm));
            args.caller(queryRun);
            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();

            if (formRun.closedOk())
            {
                payModuleTable.Query = queryRun.query().pack();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ModuleOrder</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            element.createStructure();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Structure</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>beginDrag</Name>
						<Source><![CDATA[
        int beginDrag(int _x, int _y)
        {
            [dragIdx] = this.hitTest(_x, _y);
            itemFrom = this.getItem(dragIdx);
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>dragLeave</Name>
						<Source><![CDATA[
        void dragLeave()
        {
            element.dropHilite(this, 0);
        }

]]></Source>
					</Method>
					<Method>
						<Name>dragOver</Name>
						<Source><![CDATA[
        FormDrag dragOver(FormControl _dragSource, FormDrag _dragMode, int _x, int _y)
        {
            int idx;

            if (_dragSource.equal(this))
            {
                [idx] = this.hitTest(_x,_y);
                if (! element.canDragAndDrop(idx))
                {
                    return FormDrag::None;
                }

                if (idx <= 0)
                {
                   idx = 0;
                }
                element.dropHilite(this,idx);
                return _dragMode;
            }

            return FormDrag::None;
        }

]]></Source>
					</Method>
					<Method>
						<Name>drop</Name>
						<Source><![CDATA[
        void drop(FormControl _dragSource, FormDrag _dragMode, int _x, int _y)
        {
            int idx;
            ;
            if (_dragSource.equal(this))
            {
                element.dropHilite(this,0);
                [idx] = this.hitTest(_x,_y);
                if (element.canDragAndDrop(idx))
                {
                    if (_dragMode == FormDrag::Move)
                    {
                        this.moveItem(dragIdx,idx);
                    }
                    else
                    {
                        this.copyItem(dragIdx,idx);
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>itemMoved</Name>
						<Source><![CDATA[
        void itemMoved(int _oldIdx, int _newIdx)
        {
            RPayModuleGroupId       groupOld,groupNew;
            RPayModuleTable         payModule;
            RPayModuleGroupTable    payModuleGroup;
            FormTreeItem            formTreeItemParent,formTreeItemChild;

            if (typeOf(this.getItem(_oldIdx).data()) == Types::Int64)
            {
                formTreeItemChild  = this.getItem(this.getChild(_oldIdx));
                if (formTreeItemChild)
                {
                    formTreeItemParent = this.getItem(_oldIdx);
                    groupOld = (select firstonly rPayModuleGroupTable where rPayModuleGroupTable.RecId == formTreeItemParent.data()).PayModuleGroupId;
                    groupNew = (select reverse firstonly rPayModuleGroupTable index PayModuleGroupIdx).PayModuleGroupId;

                    ttsbegin;
                    while select forupdate PayModuleGroupId from payModule
                        where payModule.PayModuleGroupId == groupOld
                    {
                        payModule.PayModuleGroupId = groupNew + 1;
                        payModule.update();
                    }
                    while select forupdate PayModuleGroupId from payModuleGroup
                        where payModuleGroup.PayModuleGroupId == groupOld
                    {
                        payModuleGroup.PayModuleGroupId = groupNew + 1;
                        payModuleGroup.update();
                    }
                    RPayModuleGroupTable::updateCascadeGroupId(groupOld);
                    ttscommit;
                }
            }
            else
            {
                formTreeItemParent = this.getItem(this.getParent(_newIdx));
                if (formTreeItemParent)
                {
                    formTreeItemChild  = this.getItem(_newIdx);
                    ttsbegin;
                    //to group
                    if (typeOf(formTreeItemParent.data()) == Types::Int64)
                    {
                        groupNew = (select firstonly rPayModuleGroupTable
                                        where rPayModuleGroupTable.RecId == formTreeItemParent.data()).PayModuleGroupId;

                        select firstonly forupdate PayModuleGroupId, ParentModuleCode from payModule
                            where payModule.PayModuleCode == formTreeItemChild.data();

                        payModule.ParentModuleCode = "";
                    }
                    //to another ModuleTable
                    else
                    {
                        groupNew = RPayModuleTable::find(formTreeItemParent.data()).PayModuleGroupId;

                        select firstonly forupdate PayModuleGroupId, ParentModuleCode from payModule
                            where payModule.PayModuleCode == formTreeItemChild.data();

                        payModule.ParentModuleCode = formTreeItemParent.data();
                    }

                    payModule.PayModuleGroupId = groupNew;
                    payModule.update();
                    ttscommit;
                }
            }
            payModuleTable_ds.research();
            super(_oldIdx, _newIdx);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayModuleTable</Name>
			<Table>RPayModuleTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configurationKeyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NeedDeleteBeforeCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentModuleCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleSost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Query</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetTransDateToCalcDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>PayModuleGroupIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP1009</Caption>
		<DataSource xmlns="">PayModuleTable</DataSource>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayCalcSequence</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayCalcSequence</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Button</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS25531</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>PayModuleTable_PayModuleGroupId</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PayModuleGroupId</DataField>
								<DataSource>PayModuleTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayModuleTable_PayModuleCode</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PayModuleCode</DataField>
								<DataSource>PayModuleTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayModuleTable_PayModuleName</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PayModuleName</DataField>
								<DataSource>PayModuleTable</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>PayModuleTable</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
				<ViewEditMode>View</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<Style>SplitterVerticalContainer</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupGeneral</Name>
				<ElementPosition>954437176</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>PayModuleTable_PayModuleGroupId1</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PayModuleGroupId</DataField>
						<DataSource>PayModuleTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PayModuleTable_PayModuleCode1</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PayModuleCode</DataField>
						<DataSource>PayModuleTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PayModuleTable_PayModuleName1</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PayModuleName</DataField>
						<DataSource>PayModuleTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<RightMargin>5</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Setup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Setup_PayModuleSost</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayModuleSost</DataField>
										<DataSource>PayModuleTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Setup_NeedDeleteBeforeCalc</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>NeedDeleteBeforeCalc</DataField>
										<DataSource>PayModuleTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Setup_ParentModuleCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ParentModuleCode</DataField>
										<DataSource>PayModuleTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Setup</DataGroup>
								<DataSource>PayModuleTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ModuleOrder</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTreeControl">
								<Name>Structure</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<DragDrop>Manual</DragDrop>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Tree</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ShowSelAlways>No</ShowSelAlways>
							</AxFormControl>
						</Controls>
						<Caption>@RUP373</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>