<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BankReconciliationMatchRulePostingSetup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BankReconciliationMatchRulePostingSetup extends FormRun
{
    private BankReconciliationMatchActionType matchActionType;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        FormRun callerForm = element.args().caller();
        BankReconciliationMatchRule_PostingInfo postingInfo = element.args().record();
        matchActionType = BankReconciliationMatchRule::find(postingInfo.BankReconciliationMatchRule).MatchActionType;

        element.design().viewEditMode(callerForm.design().viewEditMode());

        switch (matchActionType)
        {
            case BankReconciliationMatchActionType::CustPaym:
                element.design().caption("@Bank:CustPaymParameter");
                Payment.visible(true);
                this.updateStatusOfAutoMatchCustAccount(postingInfo);
                this.updateStatusOfCustAccount(postingInfo);
                FinancialDimensionOffset.visible(true);
                Payment_AutoMatchCustAccount.visible(true);
                Payment_PaymMode.label("@Bank:DefaultMethodOfPayment");
                Bank_BanKTransType.label("@Bank:DefaultBankTransType");
                break;

            case BankReconciliationMatchActionType::SettleCustInv:
                element.design().caption("@Bank:CustPaymParameter");
                Payment.visible(true);
                FinancialDimensionOffset.visible(true);
                Payment_PaymMode.label("@Bank:DefaultMethodOfPayment");
                Bank_BanKTransType.label("@Bank:DefaultBankTransType");
                break;

            case BankReconciliationMatchActionType::VendPaym:
                element.design().caption("@Bank:VendPaymParameter");
                Payment.visible(true);
                Payment_VendAccount.visible(true);
                Payment_VendAccount.mandatory(true);
                FinancialDimensionOffset.visible(true);
                break;

            case BankReconciliationMatchActionType::Voucher:
                element.design().caption("@Bank:VoucherParameter");
                Tax.visible(true);
                TransactionDetail.visible(true);
                FinancialDimension.visible(true);
                BankReconciliationMatchRule_PostingInfo_AccountingDistributionTemplate.visible(true);
                TransactionDetail_OffsetLedgerDimension.mandatory(true);
                break;

            default:
                break;
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatusOfAutoMatchCustAccount</Name>
				<Source><![CDATA[
    private void updateStatusOfAutoMatchCustAccount(BankReconciliationMatchRule_PostingInfo _postingInfo)
    {
        if (matchActionType == BankReconciliationMatchActionType::CustPaym)
        {
            BankReconciliationMatchRuleLine matchInvoiceRuleLine = BankReconciliationMatchRuleLine::findBySysGeneratedType(
                _postingInfo.BankReconciliationMatchRule,
                BankReconMatchRuleLineSysGeneratedType::None,
                BankReconciliationMatchRuleLineType::MatchOpenClosedCustInvoice);
            Payment_AutoMatchCustAccount.visible(true);
            Payment_AutoMatchCustAccount.allowEdit(!matchInvoiceRuleLine.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatusOfCustAccount</Name>
				<Source><![CDATA[
    private void updateStatusOfCustAccount(BankReconciliationMatchRule_PostingInfo _postingInfo)
    {
        boolean isAllowEdit = matchActionType == BankReconciliationMatchActionType::CustPaym && !_postingInfo.AutoMatchCustAccount;

        Payment_CustAccount.visible(true);
        Payment_CustAccount.allowEdit(isAllowEdit);
        Payment_CustAccount.mandatory(isAllowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (bankReconciliationMatchRule_PostingInfo_ds.validateWrite())
        {
            super();

            FormRun callerForm = element.args().caller() as FormRun;

            if (callerForm && callerForm.name() == formStr(BankReconciliationMatchRule))
            {
                callerForm.dataSource(formDataSourceStr(BankReconciliationMatchRule, BankReconciliationMatchRule_PostingInfo)).research(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymModeBankTransType</Name>
				<Source><![CDATA[
    private void setPaymModeBankTransType(PaymMode _paymMode = null, boolean _isInit = true)
    {
        PaymMode paymMode;
        BankTransactionType bankTransType;
        CustVendPaymModeTable paymModeTable;

        switch (element.matchActionType)
        {
            case BankReconciliationMatchActionType::VendPaym:
                paymMode = _isInit ? VendTable::find(bankReconciliationMatchRule_PostingInfo.VendAccount).PaymMode : _paymMode;
                paymModeTable = VendPaymModeTable::find(paymMode);
                break;

            case BankReconciliationMatchActionType::CustPaym:
                paymMode = _isInit ? CustTable::find(bankReconciliationMatchRule_PostingInfo.CustAccount).PaymMode : _paymMode;
                paymModeTable = CustPaymModeTable::find(paymMode);
                break;

            case BankReconciliationMatchActionType::SettleCustInv:
                paymMode = _paymMode;
                paymModeTable = CustPaymModeTable::find(paymMode);
                break;

            default:
                break;
        }

        if (paymMode)
        {
            if (paymModeTable.FurtherPosting == NoYes::No)
            {
                bankTransType = paymModeTable.BankTransType;
            }
            else
            {
                paymMode = null;
            }
        }

        bankReconciliationMatchRule_PostingInfo.PaymMode = paymMode;
        bankReconciliationMatchRule_PostingInfo.BankTransType = bankTransType;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BankReconciliationMatchRule_PostingInfo</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.queryBuildDataSource().addRange(fieldNum(BankReconciliationMatchRule_PostingInfo, RecId)).value(queryValue(element.args().record().RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AutoMatchCustAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (BankReconciliationMatchRule_PostingInfo.AutoMatchCustAccount)
                {
                    BankReconciliationMatchRule_PostingInfo.CustAccount = '';
                }

                element.updateStatusOfCustAccount(BankReconciliationMatchRule_PostingInfo);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankTransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                bankReconciliationMatchRule_PostingInfo.OffsetLedgerDimension = BankTransType::find(bankReconciliationMatchRule_PostingInfo.BankTransType).LedgerDimension;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setPaymModeBankTransType();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();
                QueryBuildDataSource qbds;
                SysTableLookup sysTableLookup;

                switch (matchActionType)
                {
                    case BankReconciliationMatchActionType::VendPaym:
                        qbds = query.addDataSource(tablenum(VendPaymModeTable));
                        qbds.addRange(fieldNum(VendPaymModeTable, FurtherPosting)).value(queryValue(NoYes::No));
                        sysTableLookup = SysTableLookup::newParameters(tablenum(VendPaymModeTable), _formControl);
                        sysTableLookup.addLookupfield(fieldnum(VendPaymModeTable, PaymMode));
                        sysTableLookup.addLookupfield(fieldnum(VendPaymModeTable, Name));
                        sysTableLookup.parmQuery(query);
                        sysTableLookup.performFormLookup();
                        break;

                    case BankReconciliationMatchActionType::SettleCustInv:
                    case BankReconciliationMatchActionType::CustPaym:
                        qbds = query.addDataSource(tablenum(CustPaymModeTable));
                        qbds.addRange(fieldNum(CustPaymModeTable, FurtherPosting)).value(queryValue(NoYes::No));
                        sysTableLookup = SysTableLookup::newParameters(tablenum(CustPaymModeTable), _formControl);
                        sysTableLookup.addLookupfield(fieldnum(CustPaymModeTable, PaymMode));
                        sysTableLookup.addLookupfield(fieldnum(CustPaymModeTable, Name));
                        sysTableLookup.parmQuery(query);
                        sysTableLookup.performFormLookup();
                        break;

                    default:
                        break;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setPaymModeBankTransType(bankReconciliationMatchRule_PostingInfo.PaymMode, false);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();
                CustVendPaymModeTable paymModeTable;

                if (ret && bankReconciliationMatchRule_PostingInfo.PaymMode)
                {
                    switch (element.matchActionType)
                    {
                        case BankReconciliationMatchActionType::VendPaym:
                            paymModeTable = VendPaymModeTable::find(bankReconciliationMatchRule_PostingInfo.PaymMode);
                            if (!paymModeTable || paymModeTable.FurtherPosting)
                            {
                                ret = checkFailed(strFmt("@CashManagement:BankStatementGeneratePaymentDialogPaymModeError", bankReconciliationMatchRule_PostingInfo.PaymMode, fieldPName(BankReconciliationMatchRule_PostingInfo, PaymMode), tablepname(VendPaymModeTable)));
                            }
                            break;

                        case BankReconciliationMatchActionType::SettleCustInv:
                        case BankReconciliationMatchActionType::CustPaym:
                            paymModeTable = CustPaymModeTable::find(bankReconciliationMatchRule_PostingInfo.paymMode);
                            if (!paymModeTable || paymModeTable.FurtherPosting)
                            {
                                ret = checkFailed(strFmt("@CashManagement:BankStatementGeneratePaymentDialogPaymModeError", bankReconciliationMatchRule_PostingInfo.PaymMode, fieldPName(BankReconciliationMatchRule_PostingInfo, PaymMode), tablepname(CustPaymModeTable)));
                            }
                            break;

                        default:
                            break;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VendAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setPaymModeBankTransType();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BankReconciliationMatchRule_PostingInfo</Name>
			<Table>BankReconciliationMatchRule_PostingInfo</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoMatchCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconciliationMatchRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimensionOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Bank:CustPaymParameter</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>ContentTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FinancialTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Payment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Payment_AutoMatchCustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>AutoMatchCustAccount</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_VendAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendAccount</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_PaymMode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<DataGroup>Payment</DataGroup>
								<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>BankReconciliationMatchRule_PostingInfo_AccountingDateType</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>AccountingDateType</DataField>
								<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Bank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Bank_BankTransType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransType</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TransactionDetail</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>TransactionDetail_OffsetLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TransactionDetail_TransactionTxt</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionTxt</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<DataGroup>TransactionDetail</DataGroup>
								<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax_TaxGroup</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax_TaxItemGroup</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<DataGroup>Tax</DataGroup>
								<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS21975</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FinancialDimensionTabPage</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>FinancialDimensionTab</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>FinancialDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>BankReconciliationMatchRule_PostingInfo_AccountingDistributionTemplate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ReferenceGroup</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
												<ReferenceField>AccountingDistributionTemplate</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>BankReconciliationMatchRule_PostingInfo_DefaultDimension</Name>
												<Type>Container</Type>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@SYS101181</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>BankReconciliationMatchRule_PostingInfo</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<Caption>@SYS334441</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>FinancialDimensionOffset</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>BankReconciliationMatchRule_PostingInfo_DefaultDimensionOffset</Name>
												<Type>Container</Type>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@SYS101181</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>BankReconciliationMatchRule_PostingInfo</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DefaultDimensionOffset</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<Caption>@SYS11162</Caption>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS101181</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<DataSource>BankReconciliationMatchRule_PostingInfo</DataSource>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>