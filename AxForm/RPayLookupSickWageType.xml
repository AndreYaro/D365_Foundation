<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayLookupSickWageType</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RPayLookupSickWageType extends FormRun
    {
        boolean         first;
        boolean         mouseSelect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
        void closeSelect(str p1)
    {
        int     idx;
        FormListItem    formListItem;

        if (!p1 && mouseSelect)
        {
            idx = enumList.getNextItem(FormListNext::Selected);

            while (idx != -1)
            {
                formListItem = enumList.getItem(idx);
                if (idx)
                {
                    p1 += int2str(idx);
                }
                idx = enumList.getNextItem(FormListNext::Selected, idx);
            }
        }

        super(p1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        FormListItem        formListItem;
        DictEnum            dictEnum = new DictEnum(enumnum(RPaySickWageType));
        int                 values;
        int                 idx;
        int                 i;
        str                 tmpStr;
        ;

        super();

        enumList.addColumn(1, new FormListColumn(dictEnum.label() ? dictEnum.label() : dictEnum.name(),1, enumList.widthValue()-15));

        values = dictEnum.values();
        for (i=0; i < values; i++)
        {
            if (i)
            {
                tmpStr = "@SYS82282" + "@SYS77038" + dictEnum.index2Label(i);
                tmpStr = strfmt(tmpStr, i);
            }
            else
            {
                tmpStr = "@SYS77038" + dictEnum.index2Label(i);
            }

            formListItem = new FormListItem(tmpStr);
            formListItem.idx(idx);
            enumList.addItem(formListItem);
            idx = formListItem.idx()+1;
        }

        formListItem = enumList.getItem(0);
        formListItem.stateFocus(true);
        formListItem.stateSelected(true);
        enumList.setItem(formListItem);

        enumList.setFocus();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextField</Name>
				<Source><![CDATA[
        void nextField(int flags=1)
    {
        super(flags);
        element.returnSelection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnSelection</Name>
				<Source><![CDATA[
        void returnSelection()
    {
        str     selectionString;
        int     idx;
        FormListItem    formListItem;

        idx = enumList.getNextItem(FormListNext::Selected);

        while (idx != -1)
        {
            formListItem = enumList.getItem(idx);
            if (idx)
            {
                selectionString += int2str(idx);
            }
            idx = enumList.getNextItem(FormListNext::Selected, idx);
        }

        element.closeSelect(selectionString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
        #Task
    public int task(int _taskId)
    {
        int ret;

        ret = super(_taskId);

        if (_taskId == #taskEnter)
        {
            element.returnSelection();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>EnumList</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>mouseDown</Name>
						<Source><![CDATA[
                int mouseDown(int x, int y, int button, boolean ctrl, boolean shift)
        {
            int ret;
            ;

            ret = super(x, y, button, ctrl, shift);
            mouseSelect = true;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
                void selectionChanged(int idx, anytype data)
        {
            super(idx, data);

            if (!first && mouseSelect)
            {
                //mouseSelect = false;
                element.returnSelection();
            }
            else
            {
                first = false;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<Style xmlns="">Lookup</Style>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormListViewControl">
				<Name>EnumList</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ListView</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Border>None</Border>
				<ColumnHeader>No</ColumnHeader>
				<ViewType>Report</ViewType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>