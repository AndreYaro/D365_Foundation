<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustVendNettingProposalDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustVendNettingProposalDialog extends FormRun
{
    private CustVendNettingProposalContract custVendNettingProposalContract;
    private CustVendNettingProposalController custVendNettingProposalController;
    private FormCheckBoxControl batchProcessingEnabled;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!element.args().caller())
        {
            throw error("@SYS22539");
        }

        if (!(element.args().caller() is SysOperationDialog))
        {
            throw error(strFmt("@SYS86720", this.form().name(), classStr(SysOperationDialog)));
        }

        SysOperationDialog sysOperationDialog = element.args().caller() as SysOperationDialog;
        batchProcessingEnabled = sysOperationDialog.dialogForm().formRun().design().controlName('Fld1_1');
        if (!sysOperationDialog.controller() || !(sysOperationDialog.controller() is CustVendNettingProposalController))
        {
            throw error(strFmt("@CashManagement:IncorrectControllerType", classStr(CustVendNettingProposalController)));
        }

        custVendNettingProposalController = sysOperationDialog.controller() as CustVendNettingProposalController;
        custVendNettingProposalContract = custVendNettingProposalController.getDataContractObject(classStr(CustVendNettingProposalContract)) as CustVendNettingProposalContract;
        if (!custVendNettingProposalContract)
        {
            throw error(strFmt("@CashManagement:IncorrectDataContractType", classStr(CustVendNettingProposalContract)));
        }

        this.initControl();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControl</Name>
				<Source><![CDATA[
    private void initControl()
    {
        NettingPostingDate.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        NettingRule.text(custVendNettingProposalContract.parmRule());
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void closeOk()
    {
        custVendNettingProposalContract.parmRule(NettingRule.valueStr());
        custVendNettingProposalContract.parmTransDate(NettingPostingDate.dateValue());
        custVendNettingProposalContract.parmInvoiceDueDate(InvoiceDueDate.dateValue());
        custVendNettingProposalContract.parmEnablePreview(PreviewBeforePosting.value());

        custVendNettingProposalController.setEnablePreview(PreviewBeforePosting.value());

        if (custVendNettingProposalController.checkCloseDialog())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        return this;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>NettingRule</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public void lookup()
        {
            super();
            CustVendNettingRuleLookupTmp::performLookupForRules(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            CustVendNettingRule rule = CustVendNettingRule::find(this.valueStr());
            Args args = new Args();
            args.name(formStr(CustVendNettingRuleForm));
            args.record(rule);
            args.lookupRecord(rule);
            FormRun formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.detach();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PreviewBeforePosting</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            if (ret)
            {
                if (PreviewBeforePosting.value() == 1)
                {
                    batchProcessingEnabled.enabled(false);
                    batchProcessingEnabled.value(0);
                }
                else
                {
                    batchProcessingEnabled.enabled(true);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@CashManagement:NettingAutomationCaption</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Parameters</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NettingRule</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Name</ExtendedDataType>
								<Label>@CashManagement:NettingRule</Label>
								<LookupOnly>Yes</LookupOnly>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>NettingPostingDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@CashManagement:NettingPostingDate</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>InvoiceDueDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@CashManagement:InvoiceDueDate</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PreviewBeforePosting</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@CashManagement:PreviewBeforePosting</Label>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>Parameters</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>