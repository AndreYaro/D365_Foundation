<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>KanbanBoard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class KanbanBoard extends FormRun
{
    #SysSystemDefinedButtons
    KanbanBoardController   controller;
    TimerControl            timerControl;
    
}
]]></Source>
			</Method>
			<Method>
				<Name>startRefreshCycleTimer</Name>
				<Source><![CDATA[
    public void startRefreshCycleTimer()
    {
        // If the user wants automatic refresh, start the new timer
        if (controller.parmRefreshCycle() > 0)
        {
            if (!timerControl)
            {
                timerControl = this.design().addControlEx(classStr(TimerControl), 'KanbanBoardTimerControl');
                timerControl.onElapsed += eventhandler(this.timerControlElapsed);
            }
            else
            {
                timerControl.enabled(false);
            }

            timerControl.interval(controller.parmRefreshCycle());
            timerControl.enabled(true);
        }
        else if (timerControl)
        {
            timerControl.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>timerControlElapsed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event raised when the timer control elapses.
    /// </summary>
    public void timerControlElapsed()
    {
        this.refreshContent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateFilterChanged</Name>
				<Source><![CDATA[
    public void dateFilterChanged()
    {
        if (ViewFromDate.dateValue() != controller.parmViewFromDate())
        {
            controller.parmViewFromDate(ViewFromDate.dateValue());  
            element.refreshContent();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivtySelected</Name>
				<Source><![CDATA[
    public void onActivtySelected(str _activityId, GanttControlActivityIdCollection _allSelectedActivityIds)
    {
        controller.onActivtySelected(_activityId, _allSelectedActivityIds);

        this.enableActivityButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableActivityButtons</Name>
				<Source><![CDATA[
    private void enableActivityButtons()
    {
        int tasksSelected = controller.numOfTasksSelected();

        boolean singleTask = (tasksSelected == 1);
        OpenKanbanButton.enabled(singleTask);
        OpenKanbanRuleButton.enabled(singleTask);
        ViewPeggingTreeButton.enabled(singleTask);
        
        boolean atLeastOneTask = (tasksSelected >= 1);
        PrintKanbanButton.enabled(atLeastOneTask);
        FormButtonGroupKanbanJob.enabled(atLeastOneTask);
        FromButtonGroupProduction.enabled(atLeastOneTask);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        controller = KanbanBoardController::construct();
        controller.getLast();

        if (element.args().record() is KanbanJob)
        {
            KanbanJob kanbanJob = element.args().record();
            controller.parmWrkCtrResourceGroup(WrkCtrResourceGroup::find(kanbanJob.WorkCell));
        }
        else if(element.args().record() is LeanProductionFlowActivity)
        {
            LeanProductionFlowActivity leanProductionFlowActivity = element.args().record();
            controller.parmWrkCtrResourceGroup(WrkCtrResourceGroup::find(leanProductionFlowActivity.WrkCtrResourceGroup));
        }
        else if(element.args().record() is WrkCtrResourceGroup)
        {
            controller.parmWrkCtrResourceGroup(element.args().record());
        }
        else
        {
            controller.initViewFromDate();
        }
        
        super();

        this.initControls();
        this.refreshContent();
        this.enableActivityButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmController</Name>
				<Source><![CDATA[
    public KanbanBoardController parmController()
    {
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    private void initControls()
    {
        controller.parmGanttControl(GanttControl1);

        GanttControl1.onActivityDblClick += eventhandler(element.onActivityDblClick);
        GanttControl1.onActivitySelected += eventhandler(element.onActivtySelected);
        GanttControl1.onActivitiesChanged += eventhandler(element.onActivitiesChangedHandler);
        GanttControl1.onSummaryActivityExpand += eventhandler(element.onSummaryActivityExpand);
        GanttControl1.onSummaryActivityCollapse += eventhandler(element.onSummaryActivityCollapse);

        HideCompletedJobs.visible(KanbanBoardHideShowCompletedStatusFeature::instance().isEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSummaryActivityExpand</Name>
				<Source><![CDATA[
    public void onSummaryActivityExpand(str _activityId)
    {
        controller.onSummaryActivityExpand(_activityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSummaryActivityCollapse</Name>
				<Source><![CDATA[
    public void onSummaryActivityCollapse(str _activityId)
    {
        controller.onSummaryActivityCollapse(_activityId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivityDblClick</Name>
				<Source><![CDATA[
    public void onActivityDblClick(str _activityId)
    {
        if (!OpenKanbanButton.isRestricted())
        {
            controller.openKanban(_activityId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onActivitiesChangedHandler</Name>
				<Source><![CDATA[
    public void onActivitiesChangedHandler(List _modifications, GanttControlActivityModificationResponse _response)
    {
        controller.onActivitiesChangedHandler(_modifications, _response);
        element.refreshContent();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshContent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the content of the chart and the controller-dependent fields.
    /// </summary>
    public void refreshContent()
    {
        controller.reload();
        
        WrkCtrIdFilter.text(controller.parmWrkCtrResourceGroup().WrkCtrId);
        ViewFromDate.dateValue(controller.parmViewFromDate());
        PlanningPeriods.value(controller.parmNumberPlanningPeriods());
        ColorSettingsToggle.text(controller.themeColorToggleText());
        HideCompletedJobs.value(controller.parmHideCompletedJobs());

        int unplannedJobs = controller.numberOfUnplannedJobs();
        UnplannedJobsLink.enabled(unplannedJobs > 0);
        UnplannedJobsLink.text(strFmt("@SCM:KanbanBoardUnplannedJobsLink", unplannedJobs));

        element.enableActivityButtons();
        element.startRefreshCycleTimer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #task
        int ret;

        ret = super(_taskId);

        if (ret && controller)
        {
            if (_taskId == #taskRefresh)
            {
                this.refreshContent();
            }            
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();
        controller.saveLast();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefreshCycle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the refresh cycle.
    /// </summary>
    /// <returns>The refresh cycle.</returns>
    /// <remarks>This method is invoked from the <c>KanbanBoardRefreshCycle</c> form.</remarks>
    public int parmRefreshCycle()
    {
        return controller.parmRefreshCycle();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OpenKanbanButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.openKanban();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenKanbanRuleButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.openKanbanRule();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintKanbanButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.printKanbans();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewPeggingTreeButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.viewPeggingTree();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SchedulingListPageButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.schedulingListPage();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpandAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            GanttControl1.expandAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CollapseAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            GanttControl1.collapseAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>KanbanBoardRefreshCycle</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            if (_formRun.closedOk())
            {
                Object object = _formRun;
                controller.parmRefreshCycle(object.parmRefreshCycle());
                element.startRefreshCycleTimer();
            }            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ColorSettingsToggle</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            controller.toggleUseThemeColors();
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveBackward</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveBackward);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveForward</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveForward);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PreviousPeriodStart</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveStartPrev);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PreviousPeriodEnd</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveEndPrev);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NextPeriodStart</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveStartNext);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NextPeriodEnd</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.processSelectedKanbanJob(KanbanListPageOperationType::MoveEndNext);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForwardFreePeriod</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            if (_formRun.closedOk())
            {
                Object dialogForm = _formRun;
                controller.planSelectedKanbanJobsForward(dialogForm.fromDate(),
                                                         dialogForm.overrideCapacityShortageReaction(),
                                                         dialogForm.capacityShortageReaction());
                element.refreshContent();
            }            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>KanbanBoardUnplannedJobs</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(KanbanBoardUnplannedJobs), MenuItemType::Display);
            
            Args args = new Args();
            args.parmObject(element);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateEventKanban</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            controller.processSelectedKanbanJob(KanbanListPageOperationType::CreateEventKanbans);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChangeStatusProd</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            controller.changeStatusProd();
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanPeggingTree</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            controller.processSelectedKanbanJob(KanbanListPageOperationType::PlanKanbanPeggingTree);
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LeanRuleReassignmentWizard</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.openLeanRuleReassignmentWizard();
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WrkCtrIdFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WrkCtrResourceGroup::lookupWrkCtrId(this, '', '', true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            WrkCtrTable::jumpRefWrkCtrId(WrkCtrIdFilter.text(), false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                controller.parmWrkCtrResourceGroup(WrkCtrResourceGroup::findWrkCtrId(WrkCtrIdFilter.text()));
                element.refreshContent();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewFromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (ret)
            {
                element.dateFilterChanged();
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonPrevDate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            
            controller.periodBackward();
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonNextDate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            
            controller.periodForward();
            element.refreshContent();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanningPeriods</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            if (ret)
            {
                controller.parmNumberPlanningPeriods(PlanningPeriods.value());
                element.refreshContent();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HideCompletedJobs</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if (ret)
            {
                controller.parmHideCompletedJobs(HideCompletedJobs.value());
                element.refreshContent();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UnplannedJobsLink</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            KanbanBoardUnplannedJobs.clicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GanttControl1</Name>
				<Type>Container</Type>
				<Methods>
					<Method>
						<Name>getContextMenuOptions</Name>
						<Source><![CDATA[
        public str getContextMenuOptions()
        {
            super();

            ContextMenu menu = new ContextMenu();
            List options = new List(types::Class);

            if (!OpenKanbanButton.isRestricted() && OpenKanbanButton.enabled())
            {
                options.addEnd(ContextMenuOption::Create(enum2Str(KanbanBoardContextMenuOption::OpenKanban),
                                                         enum2int(KanbanBoardContextMenuOption::OpenKanban)));
            }
            if (!OpenKanbanRuleButton.isRestricted() && OpenKanbanRuleButton.enabled())
            {
                options.addEnd(ContextMenuOption::Create(enum2Str(KanbanBoardContextMenuOption::OpenKanbanRule),
                                                         enum2int(KanbanBoardContextMenuOption::OpenKanbanRule)));
            }
            if (!PrintKanbanButton.isRestricted() && PrintKanbanButton.enabled())
            {
                options.addEnd(ContextMenuOption::Create(enum2Str(KanbanBoardContextMenuOption::PrintKanban),
                                                         enum2int(KanbanBoardContextMenuOption::PrintKanban)));
            }
            if (!ViewPeggingTreeButton.isRestricted() && ViewPeggingTreeButton.enabled())
            {
                options.addEnd(ContextMenuOption::Create(enum2Str(KanbanBoardContextMenuOption::ViewPeggingTree),
                                                         enum2int(KanbanBoardContextMenuOption::ViewPeggingTree)));
            }

            menu.ContextMenuOptions(options);
            menu.OverrideSystemMenu(true);

            return menu.Serialize();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectedMenuOption</Name>
						<Source><![CDATA[
        public void selectedMenuOption(int selectedOption)
        {
            switch (any2Enum(selectedOption))
            {
                case KanbanBoardContextMenuOption::OpenKanban:
                    if (!OpenKanbanButton.isRestricted())
                    {
                        OpenKanbanButton.clicked();
                    }
                    break;

                case KanbanBoardContextMenuOption::OpenKanbanRule:
                    if (!OpenKanbanRuleButton.isRestricted())
                    {
                        OpenKanbanRuleButton.clicked();
                    }
                    break;

                case KanbanBoardContextMenuOption::PrintKanban:
                    if (!PrintKanbanButton.isRestricted())
                    {
                        PrintKanbanButton.clicked();
                    }
                    break;

                case KanbanBoardContextMenuOption::ViewPeggingTree:
                    if (!ViewPeggingTreeButton.isRestricted())
                    {
                        ViewPeggingTreeButton.clicked();
                    }
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS300274</Caption>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">640</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>FormActionPaneTabGeneral</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupGeneralView</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>OpenKanbanButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<FormViewOption>Details</FormViewOption>
										<MenuItemName>Kanban</MenuItemName>
										<Text>@SYS302440</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>OpenKanbanRuleButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<FormViewOption>Details</FormViewOption>
										<MenuItemName>KanbanRules</MenuItemName>
										<Text>@SYS302441</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PrintKanbanButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS302442</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ViewPeggingTreeButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LeanPeggingTree</MenuItemName>
										<Text>@SYS320711</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SchedulingListPageButton</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>KanbanJobSchedulingListPage</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ExpandAllButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttExpandAllActivities</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CollapseAllButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:GanttCollapseAllActivities</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS118430</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupGeneralSettings</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>KanbanBoardRefreshCycle</Name>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>KanbanBoardRefreshCycle</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ColorSettingsToggle</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SCM:UseThemeColors</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS132709</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupKanbanJob</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<NeededPermission>Delete</NeededPermission>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MoveBackward</Name>
										<HelpText>@SYS300279</HelpText>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS300277</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MoveForward</Name>
										<HelpText>@SYS300278</HelpText>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS300276</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>PreviousPeriod</Name>
										<Type>MenuButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PreviousPeriodStart</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS300257</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PreviousPeriodEnd</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS300258</Text>
											</AxFormControl>
										</Controls>
										<Text>@SYS300253</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>NextPeriod</Name>
										<Type>MenuButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>NextPeriodStart</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS300257</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>NextPeriodEnd</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS300258</Text>
											</AxFormControl>
										</Controls>
										<Text>@SYS300280</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ForwardFreePeriod</Name>
										<Type>DropDialogButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>KanbanBoardScheduleJobForward</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24586</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupPlan</Name>
								<HelpText>@SYS300264</HelpText>
								<NeededPermission>Delete</NeededPermission>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>KanbanBoardUnplannedJobs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>KanbanBoardUnplannedJobs</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS132738</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FromButtonGroupProduction</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CreateEventKanban</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS136408</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS300268</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ChangeStatusProd</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS132740</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PlanPeggingTree</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS322036</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS322037</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>LeanRuleReassignmentWizard</Name>
										<HelpText>@SYS333096</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS333095</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS4398</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:KanbanBoardActionPaneTabHeader</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterGroup</Name>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WrkCtrIdFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
						<Label>@SYS131859</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>ViewFromDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Date</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS4009856</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ButtonPrevDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>ImageOnly</ButtonDisplay>
						<NormalImage>MoveLeft</NormalImage>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SCM:KanbanBoard_ButtonPrevDate</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ButtonNextDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>ImageOnly</ButtonDisplay>
						<NormalImage>MoveRight</NormalImage>
						<ShowShortCut>No</ShowShortCut>
						<Text>@SCM:KanbanBoard_ButtonNextDate</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>PlanningPeriods</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>LeanPlanningPeriods</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>HideCompletedJobs</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Label>@SCM:HideCompletedJobs</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>UnplannedJobsLink</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>MenuFunctionButton</Type>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>KanbanBoardUnplannedJobs</MenuItemName>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Style>CustomFilter</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormContainerControl">
				<Name>GanttControl1</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Container</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension>
					<Name>GanttControl</Name>
					<ExtensionComponents />
					<ExtensionProperties />
				</FormControlExtension>
				<Controls />
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>