<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResAvailabilityFilterSetting</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResAvailabilityFilterSetting extends FormRun
{
    ResAvailabilityFilterSetting controller;

}
]]></Source>
			</Method>
			<Method>
				<Name>FilterSetting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or sets the filter controller.
    /// </summary>
    /// <param name = "_controller">Filter controller object.</param>
    /// <returns>Instance of <c>ResAvailabilityFilterSetting</c>.</returns>
    public ResAvailabilityFilterSetting FilterSetting(ResAvailabilityFilterSetting _controller = controller)
    {
        controller = _controller;
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize form with values from the ResAvailabilityFilterSetting controller.
    /// </summary>
    public void init()
    {
        super();

        if (element.args())
        {
            if (!controller)
            {
                controller = element.args().caller() as ResAvailabilityFilterSetting;
            }

            if (controller)
            {
                str legalEntities = controller.LegalEntities();
                if (legalEntities)
                {
                    LegalEntityFilter.text(legalEntities);
                }
                else
                {
                    LegalEntityFilter.text("@SYS4006013");
                }

                str departments = controller.Departments();
                if (departments)
                {
                    DepartmentFilter.text(departments);
                }
                else
                {
                    DepartmentFilter.text("@SYS4005023");
                }

                str categories = controller.ResourceCategories();
                if (categories)
                {
                    CategoryFilter.text(categories);
                }
                else
                {
                    CategoryFilter.text("@Res:AnyRole");
                }

                ProjActivityRoleRecency roleRecency = controller.ResourceCategoryRecency();
                if (roleRecency != ProjActivityRoleRecency::NoRange)
                {
                    CategoryRecency.selection(roleRecency);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>LegalEntityFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display legal entities.
        /// </summary>
        public void lookup()
        {
            Args args = new Args(formStr(ProjResourceCompanyLookup));
            FormRun formRun;

            args.callerFormControl(LegalEntityFilter);
            args.parm(int2Str(PickFromLegalEntityList.checked()));
            formRun = classfactory.formRunClass(args);
            formRun.init();

            LegalEntityFilter.performFormLookup(formRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DepartmentFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display departments.
        /// </summary>
        public void lookup()
        {
            Args args = new Args(formStr(ProjResourceDepartmentLookup));
            FormRun formRun;

            args.callerFormControl(DepartmentFilter);
            args.parm(int2Str(PickFromDepartmentList.checked()));
            formRun = classfactory.formRunClass(args);
            formRun.init();

            DepartmentFilter.performFormLookup(formRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CategoryFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display resource categories.
        /// </summary>
        public void lookup()
        {
            Args args = new Args(formStr(ProjRoleSelectionLookup));
            FormRun formRun;

            args.callerFormControl(CategoryFilter);
            formRun = classfactory.formRunClass(args);
            formRun.init();

            CategoryFilter.performFormLookup(formRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clicking OK button to set the filter values.
        /// </summary>
        public void clicked()
        {
            super();

            if (!controller)
            {
                controller = element.args().caller() as ResAvailabilityFilterSetting;
            }

            if (controller)
            {
                str legalEntities = LegalEntityFilter.text();
                controller.LegalEntities(legalEntities != "@SYS4006013" ? legalEntities : "");

                str departments = DepartmentFilter.text();
                controller.Departments(departments != "@SYS4005023" ? departments : "");

                str categories = CategoryFilter.text();
                if (categories != "@Res:AnyRole")
                {
                    controller.ResourceCategories(categories);
                    controller.ResourceCategoryRecency(CategoryRecency.selection());
                }
                else
                {
                    controller.ResourceCategories("");
                    controller.ResourceCategoryRecency(ProjActivityRoleRecency::NoRange);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Res:FilterSettings</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterSettings</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LegalEntityGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PickFromLegalEntityList</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:PickFromLegalEntityList</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LegalEntityFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:LegalEntity</Label>
								<LookupButton>Always</LookupButton>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@Res:LegalEntity</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DepartmentGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PickFromDepartmentList</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:PickFromDepartmentList</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DepartmentFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS4008923</Label>
								<LookupButton>Always</LookupButton>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4008923</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CategoryGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CategoryFilter</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Res:Role</Label>
								<LookupButton>Always</LookupButton>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>CategoryRecency</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>ProjActivityRoleRecency</EnumType>
								<Label>@SYS4008847</Label>
								<Items />
							</AxFormControl>
						</Controls>
						<Caption>@Res:Role</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommandButtons</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>