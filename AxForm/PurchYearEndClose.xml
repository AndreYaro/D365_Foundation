<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchYearEndClose</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PurchYearEndClose extends FormRun
{
    PurchYearEndProcess purchYearEndProcess;
    boolean             isBudgetOnly;
    FiscalCalendarRecId fiscalCalendarRecId;
    FiscalCalendarYear  fiscalCalendarYear;
    FiscalCalendarYear  previousFiscalCalendarYear;
    FiscalYearName      origFiscalYearName;

    date                lastRunDate;
    FiscalPeriodType    saveClosingPeriodType;
    private boolean isIncludeCarryForwardAmountsEnabled;

    private const int currentVersion = 1;

    #localmacro.CurrentList
        lastRunDate,
        fiscalCalendarYear,
        previousFiscalCalendarYear,
        saveClosingPeriodType
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>callBatchDialog</Name>
				<Source><![CDATA[
    public void callBatchDialog()
    {
        MenuFunction menuFunction;
        Args         args = new Args(this);

        args.caller(element);

        menuFunction = new MenuFunction(menuitemActionStr(BatchDialog), MenuItemType::Action);

        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>callProcessPOs</Name>
				<Source><![CDATA[
    public void callProcessPOs()
    {
        str message = isBudgetOnly ? "@SYS321696" : "@SYS303876";
        this.setValues();

        if (!purchYearEndProcess.validateProcessParameters())
        {
            return;
        }
        if (Box::okCancel(message, DialogButton::Ok, "@SYS304470") == DialogButton::Ok)
        {
            // closing the form with 'OK' will cause the run method to be called from the
            // PurchYearEndProcess class (for more details see: PurchYearEndProcess.main()).
            this.closeOk();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>callViewPurchaseOrder</Name>
				<Source><![CDATA[
    public void callViewPurchaseOrder()
    {
        FormRun purchTableDetails;
        Args    args = new Args();

        args.name(formStr(PurchTable));
        args.record(purchOrderTmpPeriodSelection);
        args.caller(element);

        // Menu item info will be used by security framework, when setting access rights to form datasources
        args.menuItemType(MenuItemType::Display);
        args.menuItemName(menuitemDisplayStr(PurchTable));

        purchTableDetails = classfactory.formRunClass(args);

        purchTableDetails.init();
        purchTableDetails.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>callViewSubLedgerJournal</Name>
				<Source><![CDATA[
    public void callViewSubLedgerJournal()
    {
        FormRun   subLedgerJournalLines;
        Args      args   = new Args();
        List      poList = new List(Types::String);
        PurchTable locPurchTable;
        PurchId   purchId;

        this.setValues(false);

        // just the selected purch order
        purchId = purchOrderTmpPeriodSelection.PurchTable;
        poList.addEnd(purchId);
        purchYearEndProcess.parmPOList(poList);

        if (purchYearEndProcess.generatePreviewJournal())
        {
            locPurchTable = PurchTable::find(purchTable.PurchId);

            args.name(formStr(SubLedgerJournalAccountEntry));
            args.record(locPurchTable);
            args.caller(element);

            subLedgerJournalLines = classfactory.formRunClass(args);

            subLedgerJournalLines.init();
            subLedgerJournalLines.run();

            // By putting 'true' in the wait statement, the user is prevented from returning to the calling form.
            subLedgerJournalLines.wait(true);
            AccountingEventProcessor::construct().deleteStartedPeriodCloseOpenEvents(SourceDocument::newFromSourceDocumentImplementation(locPurchTable));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        this.setValues();
        xSysLastValue::saveLast(purchYearEndProcess);

        lastRunDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        saveClosingPeriodType = cbxPeriodCode.selection() == cbxPeriodCode.find(enum2str(FiscalPeriodType::Operating))
            ? FiscalPeriodType::Operating : FiscalPeriodType::Closing;
        xSysLastValue::saveLast(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetCode</Name>
				<Source><![CDATA[
    public SysQueryRun getBudgetCode(BudgetTransactionType _budgetTransactionType,
        boolean _getWorkflowBudgetCode = false)
    {
        Query lookupQuery;
        SysQueryRun queryRun;

        // Add the query to the lookup form
        lookupQuery = BudgetTransactionManager::getBudgetTransactionCodeQuery(true, _budgetTransactionType);
        if (_getWorkflowBudgetCode)
        {
            lookupQuery.dataSourceTable(tableNum(BudgetTransactionCode)).addRange(
                fieldNum(BudgetTransactionCode, WorkflowTableSequenceNumber)).value(SysQuery::valueNotEmptyString());
        }
        else
        {
            lookupQuery.dataSourceTable(tableNum(BudgetTransactionCode)).addRange(
                fieldNum(BudgetTransactionCode, WorkflowTableSequenceNumber)).value(SysQuery::valueEmptyString());
        }

        lookupQuery.dataSourceTable(tableNum(BudgetTransactionCode)).addOrderByField(
            fieldNum(BudgetTransactionCode, IsDefault), SortOrder::Descending);

        queryRun = new SysQueryRun(lookupQuery);
        return queryRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstBudgetCode</Name>
				<Source><![CDATA[
    public RefRecId getFirstBudgetCode(SysQueryRun _budgetCodes)
    {
        BudgetTransactionCode budgetTransactionCodeRec;

        while (_budgetCodes.next())
        {
            budgetTransactionCodeRec = _budgetCodes.get(tableNum(BudgetTransactionCode));

            if (budgetTransactionCodeRec)
            {
                break;
            }
        }
        return budgetTransactionCodeRec.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValues</Name>
				<Source><![CDATA[
    private void getValues()
    {
        FiscalCalendarPeriod fiscalCalendarPeriod;

        if (isIncludeCarryForwardAmountsEnabled)
        {
            purchParmTmpPeriodClose.YearEndOption = purchYearEndProcess.parmYearEndOption();
        }
        else
        {
            purchParmTmpPeriodClose.YearEndOption = purchYearEndProcess.parmYearEndOption(PurchYearEndOption::ProcessAndDoNotCarryForwardBudget);
        }

        purchParmTmpPeriodClose.OriginalBudgetTransactionCode = purchYearEndProcess.parmOriginalBudgetTransactionCode();
        purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode = purchYearEndProcess.parmCarryForwardBudgetTransactionCode();

        // only set calendar options if calendar matches
        if (fiscalCalendar.CalendarId == purchYearEndProcess.parmFiscalCalendarID())
        {
            selectFiscalCalendarYear.text(purchYearEndProcess.parmPrevFiscalYearName());

            // initialize fiscal calendar year variables
            fiscalCalendarRecId = FiscalCalendar::findByCalendarId(purchYearEndProcess.parmFiscalCalendarID()).RecId;

            // note: previousFiscalCalendarYear and fiscalCalendarYear are set as part of unpack

            closingPostingDate.dateValue(purchYearEndProcess.parmClosingPostingDate());
            fiscalCalendarPeriod = FiscalCalendarPeriod::find(purchYearEndProcess.parmClosingFiscalCalendarPeriod());
            closingFiscalCalendarPeriod.text(fiscalCalendarPeriod.periodName());
            cbxPeriodCode.selection(cbxPeriodCode.find(enum2str(saveClosingPeriodType)));

            openingPostingDate.dateValue(purchYearEndProcess.parmOpeningPostingDate());
            fiscalCalendarPeriod = FiscalCalendarPeriod::find(purchYearEndProcess.parmOpeningFiscalCalendarPeriod());
            openingFiscalCalendarPeriod.text(fiscalCalendarPeriod.periodName());
        }

        purchParmTmpPeriodClose.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        LedgerParameters                 ledgerParameters = LedgerParameters::find();

        purchYearEndProcess = element.args().caller();
        if (!purchYearEndProcess)
        {
            throw error(Error::missingParameter(this));
        }

        super();

        this.initPurchParmTmpPeriodCloseTable();
        this.initPurchOrderTmpPeriodSelectionTable();

        isBudgetOnly = ((isConfigurationkeyEnabled(configurationKeyNum(LedgerAdv2BudgetCtrl) == NoYes::Yes))
            && (ledgerParameters.IsEncumbranceProcessEnabled == NoYes::No));

        closingFiscalCalendarPeriod.visible(!isBudgetOnly);
        cbxPeriodCode.visible(!isBudgetOnly);
        openingFiscalCalendarPeriod.visible(!isBudgetOnly);
        btnViewSubLedgerJournal.visible(!isBudgetOnly);
        if (!purchYearEndProcess)
        {
            btnBatch.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    void initParmDefault()
    {
        lastRunDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        saveClosingPeriodType = FiscalPeriodType::Operating;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPurchOrderTmpPeriodSelectionTable</Name>
				<Source><![CDATA[
    private void initPurchOrderTmpPeriodSelectionTable()
    {
        purchOrderTmpPeriodSelection.clear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPurchParmTmpPeriodCloseTable</Name>
				<Source><![CDATA[
    private void initPurchParmTmpPeriodCloseTable()
    {
        SysQueryRun budgetCodes;
        Counter budgetCodeCount;

        isIncludeCarryForwardAmountsEnabled = BudgetControlConfiguration::isIncludeCarryForwardAmountsEnabled(Ledger::current());

        if (purchYearEndProcess.isBudgetControlEnabledForPO() && isIncludeCarryForwardAmountsEnabled)
        {
            purchParmTmpPeriodClose.YearEndOption = PurchYearEndOption::ProcessAndCarryForwardBudget;
        }
        else
        {
            // No budget control - set the year end option and don't allow the user to change it.
            purchParmTmpPeriodClose.YearEndOption = PurchYearEndOption::ProcessAndDoNotCarryForwardBudget;
            PurchParmTmpPeriodClose_ds.object(fieldnum(purchParmTmpPeriodClose, YearEndOption)).allowEdit(false);
            PurchParmTmpPeriodClose_ds.object(fieldnum(purchParmTmpPeriodClose, YearEndOption)).skip(true);
        }

        fiscalCalendar_ds.research();
        fiscalCalendarRecId = fiscalCalendar.RecId;

        // Original budget code
        budgetCodes = element.getBudgetCode(BudgetTransactionType::OriginalBudget);
        budgetCodeCount = QueryRun::getQueryRowCount(budgetCodes.query(), intMax());
        if (budgetCodeCount == 1)
        {
            purchParmTmpPeriodClose.OriginalBudgetTransactionCode = this.getFirstBudgetCode(budgetCodes);
        }

        // Carry-froward budget code
        budgetCodes = element.getBudgetCode(BudgetTransactionType::CarryForwardBudget);
        budgetCodeCount = QueryRun::getQueryRowCount(budgetCodes.query(), intMax());
        if (budgetCodeCount == 1)
        {
            purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode = this.getFirstBudgetCode(budgetCodes);
        }

        purchParmTmpPeriodClose.insert();

        this.setCalendarPeriod(true, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    dataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private identifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    private identifierName lastValueElementName()
    {
        return this.name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private userId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBudgetCode</Name>
				<Source><![CDATA[
    public BudgetTransactionCode lookupBudgetCode(FormReferenceControl _control, BudgetTransactionType _budgetTransactionType)
    {
        SysReferenceTableLookup budgetTransactionCodeLookup;
        Query lookupQuery;

        budgetTransactionCodeLookup = SysReferenceTableLookup::newParameters(tableNum(BudgetTransactionCode), _control, true);

        // Add the fields to be shown in the lookup form
        budgetTransactionCodeLookup.addLookupfield(fieldNum(BudgetTransactionCode, Name));
        budgetTransactionCodeLookup.addLookupfield(fieldNum(BudgetTransactionCode, Description));

        // Add the query to the lookup form
        lookupQuery = BudgetTransactionManager::getBudgetTransactionCodeQuery(true, _budgetTransactionType);
        lookupQuery.dataSourceTable(tableNum(BudgetTransactionCode)).addRange(fieldNum(
            BudgetTransactionCode, WorkflowTableSequenceNumber)).value(SysQuery::valueEmptyString());
        budgetTransactionCodeLookup.parmQuery(lookupQuery);

        // Perform lookup
        return budgetTransactionCodeLookup.performFormLookup() as BudgetTransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [currentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetFormData</Name>
				<Source><![CDATA[
    public void resetFormData(boolean _resetYearData = true)
    {
        this.setCalendarPeriod(_resetYearData);

        purchOrderTmpPeriodSelection.deleteAll();

        this.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrievePOSysQuery</Name>
				<Source><![CDATA[
    public void retrievePOSysQuery()
    {
        SysQueryRun          queryRun;
        QueryBuildRange      initialPOStatusCriteria;
        QueryBuildDataSource purchTableqbds;
        PurchTable           purchTableRec;
        List                 poList;
        ListEnumerator       poListEnum;
        PurchId              purchId;
        PurchaseLineAmountsCalculate purchaseLineAmountsCalculate;

        queryRun = new SysQueryRun(new Query());

        // must make caller the form otherwise title isn't displayed
        // making the caller the form cause the sysquery's reset to be tied to the form's datasource
        // queryRun.args().caller(element);
        queryRun.title("@SYS303604");

        queryRun.query().addDataSource(tableNum(PurchTable));

        queryRun.promptLoadLastUsedQuery(false);
        queryRun.promptShowSorting(false);

        purchTableqbds = queryRun.query().dataSourceTable(tableNum(PurchTable));
        purchTableqbds.clearDynalinks();

        QueryBuildRange documentStateRange = SysQuery::findOrCreateRange(purchTableqbds, fieldNum(PurchTable, DocumentState));
        documentStateRange.value(queryValue(VersioningDocumentState::Confirmed));
        documentStateRange.status(RangeStatus::Hidden);

        initialPOStatusCriteria = purchTableqbds.addRange(fieldNum(PurchTable, PurchStatus));

        Range queryRange;
        queryRange = queryRangeConcat(queryRange, queryValue(PurchStatus::None));
        queryRange = queryRangeConcat(queryRange, queryValue(PurchStatus::Backorder));
        queryRange = queryRangeConcat(queryRange, queryValue(PurchStatus::Received));
        initialPOStatusCriteria.value(queryRange);

        initialPOStatusCriteria.status(RangeStatus::Hidden);

        if (queryRun.prompt())
        {
            ttsbegin;

            QueryFilter accountingDateFilter = queryRun.query().findQueryFilter( purchTableqbds, fieldStr(PurchTable, AccountingDate));

            if (! accountingDateFilter)
            {
                QueryBuildRange accountingDateRange = purchTableqbds.addRange(fieldNum(PurchTable, AccountingDate));
                accountingDateRange.value(queryRange(previousFiscalCalendarYear.StartDate, previousFiscalCalendarYear.EndDate));
            }

            purchOrderTmpPeriodSelection.deleteAll();

            poList = new List(Types::String);

            while (queryRun.next())
            {
                purchTableRec = queryRun.get(tableNum(PurchTable));

                poList.addEnd(purchTableRec.PurchId);
            }

            if (poList)
            {
                poList = List::create(PurchYearEndProcess::validatePurchaseOrders(poList.pack(),
                                                                                  purchParmTmpPeriodClose.YearEndOption,
                                                                                  previousFiscalCalendarYear.StartDate,
                                                                                  previousFiscalCalendarYear.EndDate));

                purchaseLineAmountsCalculate = new PurchaseLineAmountsCalculate();

                poListEnum = poList.getEnumerator();
                poListEnum.reset();
                while (poListEnum.moveNext())
                {
                    purchId = poListEnum.current();
                    purchaseLineAmountsCalculate.populateAmounts(purchId);
                    purchOrderTmpPeriodSelection.addItem(purchId,
                                                         purchaseLineAmountsCalculate.parmTotalInvoiceRemaining());
                }
            }

            ttscommit;

            // if updateDesign is call after purchOrderTmpYearEndSelection_ds.research then the
            // grid is not loaded correct
            element.updateDesign();

            purchOrderTmpPeriodSelection_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RefRecId budgetTransactionCodeRecId;
        SysQueryRun budgetCodes;
        Counter budgetCodeCount;
        BudgetTransactionCode budgetTransactionCode;
        date lastMonthDate = prevMth(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        super();

        cbxPeriodCode.delete(enum2str(FiscalPeriodType::Opening));
        cbxPeriodCode.selection(cbxPeriodCode.find(enum2str(FiscalPeriodType::Operating)));

        if (xSysLastValue::existLast(this))
        {
            xSysLastValue::getLast(this);

            // only set value from that save state if within the last month
            if (lastRunDate >= lastMonthDate)
            {
                if (xSysLastValue::existLast(purchYearEndProcess))
                {
                    xSysLastValue::getLast(purchYearEndProcess);

                    this.getValues();
                }
            }
        }

        // check to see if saved budget codes are still valid
        budgetTransactionCode = BudgetTransactionCode::find(purchParmTmpPeriodClose.OriginalBudgetTransactionCode);
        budgetCodes = element.getBudgetCode(BudgetTransactionType::OriginalBudget);
        budgetCodeCount = QueryRun::getQueryRowCount(budgetCodes.query(), intMax());
        if (!budgetTransactionCode.RecId
            || budgetTransactionCode.BudgetTransactionType != BudgetTransactionType::OriginalBudget
            || budgetTransactionCode.WorkflowTableSequenceNumber)
        {
            budgetTransactionCodeRecId = 0;
            if (budgetCodeCount == 1)
            {
                budgetTransactionCodeRecId = this.getFirstBudgetCode(budgetCodes);
            }
            purchParmTmpPeriodClose.OriginalBudgetTransactionCode = budgetTransactionCodeRecId;
        }
        purchParmTmpPeriodClose_OriginalBudgetTransactionCode.allowEdit(
            budgetCodeCount == 0 || budgetCodeCount > 1);

        budgetTransactionCode = BudgetTransactionCode::find(purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode);
        budgetCodes = element.getBudgetCode(BudgetTransactionType::CarryForwardBudget);
        budgetCodeCount = QueryRun::getQueryRowCount(budgetCodes.query(), intMax());
        if (!budgetTransactionCode.RecId
            || budgetTransactionCode.BudgetTransactionType != BudgetTransactionType::CarryForwardBudget
            || budgetTransactionCode.WorkflowTableSequenceNumber)
        {
            budgetTransactionCodeRecId = 0;
            if (budgetCodeCount == 1)
            {
                budgetTransactionCodeRecId = this.getFirstBudgetCode(budgetCodes);
            }
            purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode = budgetTransactionCodeRecId;
        }
        purchParmTmpPeriodClose_CarryForwardBudgetTransactionCode.allowEdit(
            budgetCodeCount == 0 || budgetCodeCount > 1);

        this.updateDesign();

        this.updateBudgetCodeControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    RunBase runBase()
    {
        return purchYearEndProcess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCalendarPeriod</Name>
				<Source><![CDATA[
    public void setCalendarPeriod(boolean _setYears = true, date _date = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        FiscalCalendarPeriod fiscalCalendarPeriod;

        if (_setYears)
        {
            fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(fiscalCalendarRecId, _date);

            select firstonly previousFiscalCalendarYear
                order by StartDate desc
                where  previousFiscalCalendarYear.StartDate      <  fiscalCalendarYear.StartDate
                    && previousFiscalCalendarYear.FiscalCalendar == fiscalCalendarYear.FiscalCalendar;
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            selectFiscalCalendarYear.text(previousFiscalCalendarYear.yearName());
            closingPostingDate.dateValue(previousFiscalCalendarYear.EndDate);

            if (!previousFiscalCalendarYear)
            {
                select firstonly fiscalCalendarYear
                    order by StartDate asc
                    where    fiscalCalendarYear.StartDate       >   closingPostingDate.dateValue(previousFiscalCalendarYear.EndDate)
                        &&   fiscalCalendarYear.FiscalCalendar  ==  fiscalCalendarRecId;
            }
        }
        else
        {
            if (previousFiscalCalendarYear)
            {
                selectFiscalCalendarYear.text(previousFiscalCalendarYear.yearName());
                closingPostingDate.dateValue(previousFiscalCalendarYear.EndDate);
            }
        }

        openingPostingDate.dateValue(fiscalCalendarYear.StartDate);

        select firstonly RecId, Name from fiscalCalendarPeriod
            order by StartDate asc
            where  fiscalCalendarPeriod.Type               == FiscalPeriodType::Operating
                && fiscalCalendarPeriod.FiscalCalendarYear == fiscalCalendarYear.RecId;

        openingFiscalCalendarPeriod.text(fiscalCalendarPeriod.periodName());

        purchParmTmpPeriodClose.update();

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValues</Name>
				<Source><![CDATA[
    private void setValues(boolean _setPOs = true)
    {
        FiscalCalendarPeriod  fiscalCalendarPeriod;
        List                  poList;
        boolean               normalPeriodCodeSelected;

        purchYearEndProcess.parmYearEndOption(purchParmTmpPeriodClose.YearEndOption);
        purchYearEndProcess.parmOriginalBudgetTransactionCode(purchParmTmpPeriodClose.OriginalBudgetTransactionCode);
        purchYearEndProcess.parmCarryForwardBudgetTransactionCode(purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode);
        purchYearEndProcess.parmFiscalCalendarID(fiscalCalendar.CalendarId);
        purchYearEndProcess.parmPrevFiscalYearName(selectFiscalCalendarYear.text());
        purchYearEndProcess.parmPrevFiscalYearStartDate(previousFiscalCalendarYear.StartDate);
        purchYearEndProcess.parmPrevFiscalYearEndDate(previousFiscalCalendarYear.EndDate);
        purchYearEndProcess.parmClosingPostingDate(closingPostingDate.dateValue());

        normalPeriodCodeSelected = (cbxPeriodCode.selection() == cbxPeriodCode.find(enum2str(FiscalPeriodType::Operating)));
        if (normalPeriodCodeSelected)
        {
            select firstonly RecId from fiscalCalendarPeriod
                order by fiscalCalendarPeriod.EndDate desc
                where  fiscalCalendarPeriod.Type               == FiscalPeriodType::Operating
                    && fiscalCalendarPeriod.EndDate            <= closingPostingDate.dateValue()
                    && fiscalCalendarPeriod.FiscalCalendarYear == previousFiscalCalendarYear.RecId;
        }
        else
        {
            fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(previousFiscalCalendarYear.RecId,
                closingFiscalCalendarPeriod.text());
        }
        purchYearEndProcess.parmClosingFiscalCalendarPeriod(fiscalCalendarPeriod.RecId);

        purchYearEndProcess.parmOpeningPostingDate(openingPostingDate.dateValue());

        fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(fiscalCalendarYear.RecId,
            openingFiscalCalendarPeriod.text());
        purchYearEndProcess.parmOpeningFiscalCalendarPeriod(fiscalCalendarPeriod.RecId);

        if (_setPOs)
        {
            poList = new List(Types::String);

            while select Selected, PurchTable from purchOrderTmpPeriodSelection
            {
                if (purchOrderTmpPeriodSelection.Selected == NoYes::Yes)
                {
                    poList.addEnd(purchOrderTmpPeriodSelection.PurchTable);
                }
            }

            purchYearEndProcess.parmPOList(poList);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer version = conPeek(packedClass, 1);

        switch (version)
        {
            case currentVersion:
                [version, #CurrentList] = packedClass;
                break;
            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBudgetCodeControls</Name>
				<Source><![CDATA[
    public void updateBudgetCodeControls()
    {
        boolean optionSet;
        PurchYearEndOption yearEndOption;

        // Check the budget codes and if necessary report warnings messages.
        yearEndOption = purchParmTmpPeriodClose.YearEndOption;
        optionSet = (yearEndOption == PurchYearEndOption::ProcessAndCarryForwardBudget);

        purchParmTmpPeriodClose_OriginalBudgetTransactionCode.enabled(optionSet);
        purchParmTmpPeriodClose_OriginalBudgetTransactionCode.skip(!optionSet);
        purchParmTmpPeriodClose_CarryForwardBudgetTransactionCode.enabled(optionSet);
        purchParmTmpPeriodClose_CarryForwardBudgetTransactionCode.skip(!optionSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        boolean ok = !purchOrderTmpPeriodSelection.isTableEmpty();
        boolean normalPeriodCodeSelected;

        btnIncludeAll.enabled(ok);
        btnExcludeAll.enabled(ok);
        btnViewSubLedgerJournal.enabled(ok);
        btnViewPurchaseOrder.enabled(ok);
        btnProcess.enabled(ok);

        normalPeriodCodeSelected = (cbxPeriodCode.selection() == cbxPeriodCode.find(enum2str(FiscalPeriodType::Operating)));
        if (normalPeriodCodeSelected && closingFiscalCalendarPeriod.text())
        {
            closingFiscalCalendarPeriod.text("");
        }

        closingFiscalCalendarPeriod.enabled(!normalPeriodCodeSelected);
        closingFiscalCalendarPeriod.skip(normalPeriodCodeSelected);

        purchParmTmpPeriodClose_ds.rereadReferenceDataSources();
        purchParmTmpPeriodClose_ds.refresh();

        // added call to research because grid was loosing all but the first row
        purchOrderTmpPeriodSelection_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBudgetCodes</Name>
				<Source><![CDATA[
    public boolean validateBudgetCodes()
    {
        BudgetTransactionType budgetTransactionType;
        RefRecId originalBudgetTransactionCode;
        RefRecId carryForwardBudgetTransactionCode;
        RefRecId originalBudgetTransactionCodeWithWorkflow;
        RefRecId carryForwardBudgetTransactionCodeWithWorkflow;
        boolean ret = true;

        originalBudgetTransactionCode = purchParmTmpPeriodClose.OriginalBudgetTransactionCode;
        carryForwardBudgetTransactionCode = purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode;

        if (!originalBudgetTransactionCode || !carryForwardBudgetTransactionCode)
        {
            originalBudgetTransactionCodeWithWorkflow = this.getFirstBudgetCode(this.getBudgetCode(BudgetTransactionType::OriginalBudget, true));
            carryForwardBudgetTransactionCodeWithWorkflow  = this.getFirstBudgetCode(this.getBudgetCode(BudgetTransactionType::CarryForwardBudget, true));

            if ((!originalBudgetTransactionCode && !carryForwardBudgetTransactionCode)
                && (originalBudgetTransactionCodeWithWorkflow && carryForwardBudgetTransactionCodeWithWorkflow))
            {
                purchParmTmpPeriodClose_OriginalBudgetTransactionCode.allowEdit(false);
                purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode = 0;
                purchParmTmpPeriodClose_CarryForwardBudgetTransactionCode.allowEdit(false);
                purchParmTmpPeriodClose.OriginalBudgetTransactionCode = 0;

                ret = checkFailed(strFmt("@SYS330746", formStr(BudgetTransactionCode)));
            }
            else if (originalBudgetTransactionCodeWithWorkflow || carryForwardBudgetTransactionCodeWithWorkflow)
            {
                if (originalBudgetTransactionCodeWithWorkflow)
                {
                    purchParmTmpPeriodClose_OriginalBudgetTransactionCode.allowEdit(false);
                    purchParmTmpPeriodClose.OriginalBudgetTransactionCode = 0;
                    budgetTransactionType = BudgetTransactionType::OriginalBudget;
                }
                else
                {
                    purchParmTmpPeriodClose_CarryForwardBudgetTransactionCode.allowEdit(false);
                    purchParmTmpPeriodClose.CarryForwardBudgetTransactionCode = 0;
                    budgetTransactionType = BudgetTransactionType::CarryForwardBudget;
                }

                ret = checkFailed(strFmt("@SYS330747", enum2str(budgetTransactionType), formStr(BudgetTransactionCode)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePeriod</Name>
				<Source><![CDATA[
    public boolean validatePeriod(recId _fisCalYearRecId, PeriodName _periodName, date _postingDate)
    {
        boolean                    ret                        = true;
        FiscalCalendarPeriod       fiscalCalendarPeriod;

        fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(_fisCalYearRecId, _periodName);
        if (fiscalCalendarPeriod.currentLedgerPeriodStatus() != FiscalPeriodStatus::Open)
        {
            warning(strFmt("@SYS303880", enum2str(FiscalPeriodStatus::Open)));
            ret = false;
        }

        if (!LedgerFiscalCalendar::checkModuleIsOpen(SysModule::Ledger, _postingDate, fiscalCalendarPeriod, false))
        {
            warning("@SYS303886");
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePeriodForControl</Name>
				<Source><![CDATA[
    public boolean validatePeriodForControl(FormStringControl _control)
    {
        boolean              ret                   = true;
        FiscalCalendarPeriod fiscalCalendarPeriod;
        PeriodName           periodName            = _control.valueStr();

        if (periodName)
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                if (previousFiscalCalendarYear)
                {
                    fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(
                        previousFiscalCalendarYear.RecId, periodName);
                }
                else
                {
                    fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(
                        fiscalCalendarYear.RecId, periodName);
                }
            }
            else
            {
                fiscalCalendarPeriod = FiscalCalendarPeriod::findByCalendarYearPeriod(
                    fiscalCalendarYear.RecId, periodName);
            }

            ret = fiscalCalendarPeriod.RecId != 0;
            if (!ret)
            {
                warning(strFmt("@SYS112224", periodName, _control.label(), tablePName(FiscalCalendarPeriod)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PurchTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not call super, as no data should be modified or created for this data source
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>FiscalCalendar</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(tableNum(FiscalCalendar)).addRange(fieldNum(FiscalCalendar, RecId)).value(
                queryValue(Ledger::fiscalCalendar(CompanyInfo::current())));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PurchOrderTmpYearEndClose_YearEndOption</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updateBudgetCodeControls();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectFiscalCalendarYear</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            origFiscalYearName = selectFiscalCalendarYear.text();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (origFiscalYearName != selectFiscalCalendarYear.text())
            {
                previousFiscalCalendarYear = FiscalCalendarYear::findByCalendarYearName(fiscalCalendarRecId,
                    selectFiscalCalendarYear.text());

                select firstonly fiscalCalendarYear
                    order by StartDate asc
                    where  fiscalCalendarYear.StartDate      >  previousFiscalCalendarYear.StartDate
                        && fiscalCalendarYear.FiscalCalendar == previousFiscalCalendarYear.FiscalCalendar;

                element.resetFormData(false);

                origFiscalYearName = selectFiscalCalendarYear.text();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>cbxPeriodCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            date    ledgerPostingDate;

            ret = super();

            if ((ret) && (cbxPeriodCode.selection() == cbxPeriodCode.find(enum2str(FiscalPeriodType::Closing))))
            {
                ledgerPostingDate = closingPostingDate.dateValue();
                if (ledgerPostingDate >= fiscalCalendarYear.StartDate
                    && ledgerPostingDate <= fiscalCalendarYear.EndDate)
                {
                    warning("@SYS303882");
                }
            }

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClosingFiscalCalendarPeriod</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                // ignore the return value as we don't want to locked on the edit control until a valid period is entered
                element.validatePeriod(previousFiscalCalendarYear.RecId, closingFiscalCalendarPeriod.text(),
                    closingPostingDate.dateValue());
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange queryBuildRange;
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(FiscalCalendarPeriod), this, false);

            sysTableLookup.addLookupfield(fieldNum(FiscalCalendarPeriod, Name));

            queryBuildDataSource = query.addDataSource(tableNum(FiscalCalendarPeriod));

            queryBuildDataSource.addSelectionField(fieldNum(FiscalCalendarPeriod, Name));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(FiscalCalendarPeriod, FiscalCalendarYear));

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                if (previousFiscalCalendarYear)
                {
                    queryBuildRange.value(int642str(previousFiscalCalendarYear.RecId));
                }
                else
                {
                    queryBuildRange.value(int642str(fiscalCalendarYear.RecId));
                }
            }
            else
            {
                queryBuildRange.value(int642str(previousFiscalCalendarYear.RecId));
            }

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(FiscalCalendarPeriod, Type));
            queryBuildRange.value(enum2str(FiscalPeriodType::Closing));

            // note: there is a framework issue with getting the items in the lookup to sort correctly
            queryBuildDataSource.addOrderByField(fieldNum(FiscalCalendarPeriod, StartDate));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super() && element.validatePeriodForControl(closingFiscalCalendarPeriod);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnRetrievePurchaseOrders</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.retrievePOSysQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnIncludeAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            purchOrderTmpPeriodSelection.selectAll(true);
            purchOrderTmpPeriodSelection_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnExcludeAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            purchOrderTmpPeriodSelection.selectAll(false);
            purchOrderTmpPeriodSelection_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnViewSubledgerJournal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.callViewSubLedgerJournal();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnViewPurchaseOrder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.callViewPurchaseOrder();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnBatch</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.callBatchDialog();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnProcess</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.callProcessPOs();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PurchOrderTmpPeriodSelection</Name>
			<Table>PurchOrderTmpPeriodSelection</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Balance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>PurchTableIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PurchParmTmpPeriodClose</Name>
			<Table>PurchParmTmpPeriodClose</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CarryForwardBudgetTransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalBudgetTransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>YearEndOption</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PurchTable</Name>
			<Table>PurchTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddressRefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoSummaryModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailSalesDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDocumentType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeRequestRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlv</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmedDlvEarliest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfirmingPO</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsTarget_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractNum_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountyOrigDest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CrossDockingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchangeRateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinalizeClosingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightSlipType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FSHAutoCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCustPurchOrderFormNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyOriginalSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEncumbranceRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ListCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalDeliveryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualEntryChangepolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingAgreement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDropShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeSupplier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeVendor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqAttention</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Requester</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailConcessionPurch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailDriverDetails</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailRetailStatusType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnItemNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReasonCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnReplacementCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateConfirmed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShippingDateRequested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntryChangePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemEntrySource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMVendRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>URL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerPurchPlacer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PresenceType_BR</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PurchOrderTmpPeriodSelection</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<CounterField>PurchId</CounterField>
			<Index>PurchIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FiscalCalendar</Name>
			<Table>FiscalCalendar</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS303584</Caption>
		<DataSource xmlns="">PurchParmTmpPeriodClose</DataSource>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SaveSize xmlns="">No</SaveSize>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>grpSupplementallInstructions</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FillText</Pattern>
				<PatternVersion>UX7 1.0</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>SupplementalInstruction</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Top>35</Top>
						<TopMode>Manual</TopMode>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DisplayHeight>3</DisplayHeight>
						<DisplayLength>120</DisplayLength>
						<Text>@SYS303595</Text>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>grpYearEndOptions</Name>
				<ElementPosition>1227133512</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>PurchOrderTmpYearEndClose_YearEndOption</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_PurchOrderTmpYearEndClose_YearEndOption</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ComboType>List</ComboType>
						<DataField>YearEndOption</DataField>
						<DataSource>PurchParmTmpPeriodClose</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>PurchParmTmpPeriodClose_OriginalBudgetTransactionCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_PurchParmTmpPeriodClose_OriginalBudgetTransactionCode</HelpText>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PurchParmTmpPeriodClose_OriginalBudgetTransactionCode_Name</Name>
								<DataRelationPath>OriginalBudgetTransactionCode</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>PurchParmTmpPeriodClose</DataSource>
						<ReferenceField>OriginalBudgetTransactionCode</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>PurchParmTmpPeriodClose_CarryForwardBudgetTransactionCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_PurchParmTmpPeriodClose_CarryForwardBudgetTransactionCode</HelpText>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PurchParmTmpPeriodClose_CarryForwardBudgetTransactionCode_Name</Name>
								<DataRelationPath>CarryForwardBudgetTransactionCode</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>PurchParmTmpPeriodClose</DataSource>
						<ReferenceField>CarryForwardBudgetTransactionCode</ReferenceField>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>grpPeriodOptions</Name>
				<ElementPosition>1533916890</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>grpCalendar</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_grpCalendar</HelpText>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FiscalCalendar_CalendarId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_FiscalCalendar_CalendarId</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>CalendarId</DataField>
								<DataSource>FiscalCalendar</DataSource>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SelectFiscalCalendarYear</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS303592</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>FiscalYearName</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS303589</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>grpClosingParameters</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ClosingPostingDate</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS303594</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS189891</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>cbxPeriodCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS303596</HelpText>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ComboType>List</ComboType>
								<DisplayLength>15</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<EnumType>FiscalPeriodType</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ClosingFiscalCalendarPeriod</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_ClosingFiscalCalendarPeriod</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>15</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ExtendedDataType>PeriodName</ExtendedDataType>
								<Label>@SYS128558</Label>
								<LookupButton>Always</LookupButton>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS303593</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>grpOpenParameters</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>OpeningPostingDate</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@SYS303599</HelpText>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS189891</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>OpeningFiscalCalendarPeriod</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:PurchYearEndClose_OpeningFiscalCalendarPeriod</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS303600</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS303598</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<HideIfEmpty>No</HideIfEmpty>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>grpRetrieveInstructions</Name>
				<Pattern>FillText</Pattern>
				<PatternVersion>UX7 1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>RetrieveInstructions</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Top>10</Top>
						<TopMode>Manual</TopMode>
						<Type>StaticText</Type>
						<VerticalSpacing>15</VerticalSpacing>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS303602</Text>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>grpRetrievePOs</Name>
				<ElementPosition>1840700268</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ActionPane</Type>
						<VerticalSpacingMode>Fixed</VerticalSpacingMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneTabControl">
								<Name>ActionPaneTab</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPaneTab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ActionPaneButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>btnRetrievePurchaseOrders</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS303603</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS303604</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>btnIncludeAll</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS303607</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS303605</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>btnExcludeAll</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS303609</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS303608</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>btnViewSubledgerJournal</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS303613</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS303612</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>btnViewPurchaseOrder</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@SYS303611</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS303610</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>grdRetrievePOs</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>PurchOrderTmpPeriodSelection_Selected</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Selected</DataField>
								<DataSource>PurchOrderTmpPeriodSelection</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PurchOrderTmpPeriodSelection_PurchTable</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchTable</DataField>
								<DataSource>PurchOrderTmpPeriodSelection</DataSource>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PurchTable_OrderAccount</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS303621</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>OrderAccount</DataField>
								<DataSource>PurchTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PurchTable_PurchName</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS303623</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchName</DataField>
								<DataSource>PurchTable</DataSource>
								<Label>@SYS303622</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PurchTable_PurchaseType</Name>
								<ElementPosition>2052412755</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS303624</HelpText>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchaseType</DataField>
								<DataSource>PurchTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PurchTable_PurchStatus</Name>
								<ElementPosition>2091559592</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS303625</HelpText>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchStatus</DataField>
								<DataSource>PurchTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>PurchOrderTmpPeriodSelection_Balance</Name>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Balance</DataField>
								<DataSource>PurchOrderTmpPeriodSelection</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataSource>PurchOrderTmpPeriodSelection</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
					</AxFormControl>
				</Controls>
				<HideIfEmpty>No</HideIfEmpty>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>btnBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS303588</HelpText>
						<LeftMode>AutoRight</LeftMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@SYS303587</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>btnProcess</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS303615</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS303614</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>btnCancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS303617</HelpText>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<TopMargin>13</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
