<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BankLCImportAllocateMarkupTrans_SA</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class BankLCImportAllocateMarkupTrans_SA extends FormRun
    {
        BankLCRefRecId                      bankLCRefRecId;
        BankLCLineRefRecId                  bankLCImportLineRefRecId;

        BankLCImportLineNumController       bankLCImportLineNumController;
        BankLCImportChargeFeatureChecker_SA bankLCImportChargeFeatureChecker;
}
]]></Source>
			</Method>
			<Method>
				<Name>allocate</Name>
				<Source><![CDATA[
        /// <summary>
        /// Calls the allocate method in trans type class.
        /// </summary>
        public void allocate()
        {
            BankLCImportChargeTransType_SA bankLCImportChargeTransType;

            if (bankLCImportChargeFeatureChecker.checkFeatureEnabled() && bankLCImportLineRefRecId)
            {
                bankLCImportChargeTransType = BankLCImportChargeTransType_SA::constructFromBankLCImport(bankLCRefRecId);
                bankLCImportChargeTransType.allocateMarkupTransToPurch(bankLCImportLineRefRecId);
            }

            if (element.args().caller())
            {
                element.args().caller().updateAfterMarkupTransAllocatedFromLC_SA();
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>editBankLCShipmentLineNum</Name>
				<Source><![CDATA[
        edit public BankLCShipmentLineNum editBankLCShipmentLineNum(
            boolean _set,
            BankLCShipmentLineNum _value)
        {
            BankLCImportLine        bankLCImportLineLocal;
            BankLCShipmentLineNum   lineNum;

            if (_set)
            {
                bankLCImportLineLocal = BankLCImportLine::findByImportTableAndLineNum(bankLCRefRecId, _value);

                if (bankLCImportLineLocal.RecId                     != 0
                    && bankLCImportLineLocal.ImportShipmentStatus   == BankLCImportShipmentStatusType::Open)
                {
                    bankLCImportLineRefRecId = bankLCImportLineLocal.RecId;
                }
            }
            else
            {
                lineNum = BankLCImportLine::find(bankLCImportLineRefRecId).LineNum;
            }

            return lineNum;
        }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
        {
            super();

            if (element.args().caller().name() == formstr(MarkupTrans))
            {
                bankLCRefRecId = element.args().caller().parmBankLCRefRecId_SA();
            }

            if (bankLCRefRecId == 0)
            {
                throw error(Error::missingRecord(formStr(BankLCImportAllocate)));
            }

            bankLCImportChargeFeatureChecker = BankLCImportChargeFeatureChecker_SA::construct();

            bankLCImportLineNumController = BankLCImportLineNumController::construct();
            bankLCImportLineNumController.parmBankLCRecId(bankLCRefRecId);
            bankLCImportLineNumController.parmAllowOpened(true);
        }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>IntEdit_LineNum</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
            public void jumpRef()
            {
                bankLCImportLineNumController.jumpRef();
            }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
            public void lookup()
            {
                bankLCImportLineNumController.performLookup(this);
            }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
            void clicked()
            {
                element.allocate();
                super();
            }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS332226</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SaveSize xmlns="">No</SaveSize>
		<Scrollbars xmlns="">No</Scrollbars>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>IntEdit_LineNum</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editBankLCShipmentLineNum</DataMethod>
						<Label>@SYS316154</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>