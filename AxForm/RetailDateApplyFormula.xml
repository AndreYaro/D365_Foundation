<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailDateApplyFormula</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RetailDateApplyFormula extends FormRun
    {
        RetailMassUpdateWorksheetLine   retailMassUpdateWorksheetLine;
        FieldId                         fieldId;
        RetailDateValues                dateComboValue;
        RetailDateOperator              mathematicalSignComboValue;
        int                             integerValue;
        RetailPeriodValue               periodsComboValue;
        date                            dateValue;
        date                            updatedDateValue;

}
]]></Source>
			</Method>
			<Method>
				<Name>calculation</Name>
				<Source><![CDATA[
    public void calculation()
    {
        int     tmpIntegerValue = 0;

        if (! dateValue)
        {
            dateValue = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
        }

        switch (mathematicalSignComboValue)
        {
            case RetailDateOperator::Minus :
                tmpIntegerValue = -IntegerValue;
                break;

            case RetailDateOperator::Plus :
                tmpIntegerValue =  IntegerValue;
                break;
        }

        switch (periodsComboValue)
        {
            case RetailPeriodValue::Days :
                updatedDateValue = utcDateTime2SystemDateTime(DateTimeUtil::addDays(DateTimeUtil::newDateTime(dateValue ,0), tmpIntegerValue));
                break;

            case RetailPeriodValue::Weeks :
                tmpIntegerValue     = 7 * tmpIntegerValue;
                updatedDateValue = utcDateTime2SystemDateTime(DateTimeUtil::addDays(DateTimeUtil::newDateTime(dateValue ,0), tmpIntegerValue));
                break;

            case RetailPeriodValue::Months :
                updatedDateValue = utcDateTime2SystemDateTime(DateTimeUtil::addMonths(DateTimeUtil::newDateTime(dateValue ,0), tmpIntegerValue));
                break;

            case RetailPeriodValue::Years :
                updatedDateValue = utcDateTime2SystemDateTime(DateTimeUtil::addYears(DateTimeUtil::newDateTime(dateValue ,0), tmpIntegerValue));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();
        element.getValueFromDialog();
        element.updateSingleOrMultipleRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValueFromDialog</Name>
				<Source><![CDATA[
    public void getValueFromDialog()
    {
        dateComboValue = DateCombo.selection();
        mathematicalSignComboValue = MathematicalSignCombo.selection();
        integerValue = IntEdit.value();
        periodsComboValue = PeriodsCombo.selection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        retailMassUpdateWorksheetLine = element.args().record();
        fieldId = str2int(element.args().parm());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setValueForUpdate</Name>
				<Source><![CDATA[
    public void setValueForUpdate(RetailMassUpdateWorksheetLine   _retailMassUpdateWorksheetLineUpdated)
    {
        switch (fieldId)
        {
            case fieldnum(RetailMassUpdateWorksheetLine,Purch_PriceDate) :
                _retailMassUpdateWorksheetLineUpdated.Purch_PriceDate = updatedDateValue;
                break;

            case fieldnum(RetailMassUpdateWorksheetLine,Sales_PriceDate) :
                _retailMassUpdateWorksheetLineUpdated.Sales_PriceDate = updatedDateValue;
                break;

            case fieldnum(RetailMassUpdateWorksheetLine,Invent_PriceDate) :
                _retailMassUpdateWorksheetLineUpdated.Invent_PriceDate = updatedDateValue;
                break;

            case fieldnum(RetailMassUpdateWorksheetLine,RetailInvent_dateToActivateItem) :
                _retailMassUpdateWorksheetLineUpdated.RetailInvent_dateToActivateItem = updatedDateValue;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSingleOrMultipleRow</Name>
				<Source><![CDATA[
    public void updateSingleOrMultipleRow()
    {
        Query                           q = new Query();
        QueryRun                        qr;
        QueryBuildRange                 qbr;
        QueryBuildDataSource            qbd, qbd1;
        InventTableModule               inventTableModule;
        RetailInventTable               retailInventTable;
        RetailMassUpdateWorksheetLine   retailMassUpdateWorksheetLineUpdated;

        qbd = q.addDataSource(tableNum(RetailMassUpdateWorksheetLine));
        qbd.update(true);
        if (FormulaApplyRadioButton.selection() == 0)
        {
            qbr = qbd.addRange(fieldNum(RetailMassUpdateWorksheetLine, RecId));
            qbr.value(SysQuery::value(retailMassUpdateWorksheetLine.RecId));
        }
        else
        {
            qbr = qbd.addRange(fieldNum(RetailMassUpdateWorksheetLine, RetailMassUpdateWorksheetTable));
            qbr.value(SysQuery::value(retailMassUpdateWorksheetLine.RetailMassUpdateWorksheetTable));
        }
        if (dateComboValue == RetailDateValues::IssueDate)
        {
            qbd1 = qbd.addDataSource(tableNum(RetailInventTable));
            qbd1.addLink(fieldnum(RetailMassUpdateWorksheetLine,ItemId), fieldnum(RetailInventTable,ItemId));
        }
        else
        {
            qbd1 = qbd.addDataSource(tableNum(inventTableModule));
            qbd1.addLink(fieldnum(RetailMassUpdateWorksheetLine,ItemId), fieldnum(inventTableModule,ItemId));
            switch (dateComboValue)
            {
                case RetailDateValues::PurchaseDateOfPrice :
                    qbd1.addRange(fieldnum(inventTableModule, ModuleType)).value(SysQuery::value(ModuleInventPurchSales::Purch));
                    break;

                case RetailDateValues::SellDateOfPrice :
                    qbd1.addRange(fieldnum(inventTableModule, ModuleType)).value(SysQuery::value(ModuleInventPurchSales::Sales));
                    break;

                case RetailDateValues::ManageCostsDateOfPrice :
                    qbd1.addRange(fieldnum(inventTableModule, ModuleType)).value(SysQuery::value(ModuleInventPurchSales::Invent));
                    break;
            }
        }

        qr = new QueryRun(q);

        ttsBegin;
        while (qr.next())
        {
            retailMassUpdateWorksheetLineUpdated = qr.get(tableNum(RetailMassUpdateWorksheetLine));
            if (dateComboValue == RetailDateValues::IssueDate)
            {
                retailInventTable = qr.get(tableNum(RetailInventTable));
                dateValue = retailInventTable.dateToActivateItem;
            }
            else
            {
                inventTableModule = qr.get(tableNum(InventTableModule));
                dateValue = inventTableModule.PriceDate;
            }
            this.calculation();
            this.setValueForUpdate(retailMassUpdateWorksheetLineUpdated);
            retailMassUpdateWorksheetLineUpdated.update();
        }
        element.args().caller().refresh();
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@RET490476</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>StaticText</Name>
				<ElementPosition>1022611260</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<HelpText>@FieldDescriptions_RetailMain:RetailDateApplyFormula_StaticText</HelpText>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@RET4160200</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group1</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>DateCombo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>RetailDateValues</EnumType>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>MathematicalSignCombo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>5</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<EnumType>RetailDateOperator</EnumType>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group2</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>IntEdit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<DisplayLength>10</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<ShowZero>Yes</ShowZero>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PeriodsCombo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>10</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<EnumType>RetailPeriodValue</EnumType>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ApplyFormulaGroup</Name>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>FormulaApplyRadioButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DisplayLength>0</DisplayLength>
								<DisplayLengthMode>Fixed</DisplayLengthMode>
								<FrameType>None</FrameType>
								<Items />
							</AxFormControl>
						</Controls>
						<Style>DialogContent</Style>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>