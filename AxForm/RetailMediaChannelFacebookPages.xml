<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailMediaChannelFacebookPages</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailMediaChannelFacebookPages extends FormRun
{
    #define.NoPageSelectedEntry('')

    RetailMediaChannelConnectorSettings originalRecord;
    RetailMediaChannelFacebookConnector connector;
    List pagesList;
    int originalSelectedPageIndex;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        ListEnumerator pagesListE;
        RetailFacebookPage selectedPage;
        str selectedValue = pagesComboBox.valueStr();
        int selectedIndex = pagesComboBox.selection();
        int currentIndex;

        str newPageId;
        str newPageName;
        str newToken;
        str newPageUrl;

        if (originalSelectedPageIndex != selectedIndex)
        {
            if (selectedIndex == 0)
            {
                // If 1st line has been selected,
                // remove the page id and token from the DB
                // and set page name to user's wall
                newPageId = "";
                newPageName = #NoPageSelectedEntry;
                newToken = "";
                newPageUrl = "";
            }
            else
            {
                // If one of the pages has been selected,
                // find the page object and use it to refresh the DB
                currentIndex = 1;
                pagesListE = pagesList.getEnumerator();
                while (pagesListE.moveNext())
                {
                    if (selectedIndex == currentIndex)
                    {
                        selectedPage = pagesListE.current();
                        break;
                    }
                    currentIndex++;
                }

                newPageId = selectedPage.parmPageId();
                newPageName = selectedPage.parmPageName();
                newToken = selectedPage.parmToken();
                newPageUrl = RetailMediaChannelFacebookConnector::buildPageWallLink(connector.getPageLink(selectedPage.parmPageId()));
            }

            RetailMediaChannelFacebookConnector::setupPage(originalRecord.RecId, newPageId, newPageName, newPageUrl, newToken);

            // Call back to the calling form's data source and ask it to reread
            // data from the DB
            if (element.args() && element.args().callerFormControl()
                && element.args().callerFormControl().dataSourceObject())
            {
                element.args().callerFormControl().dataSourceObject().reread();
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        ListEnumerator pagesListE;
        RetailFacebookPage page;
        int currentItemIndex = 0;
        int selectedIndex = 0;
        str currentPageName;
        int currentPageNameInstance;
        Map pageNamesMap = new Map(Types::String, Types::Integer);

        super();

        if (element.args() && element.args().dataset() == tableNum(RetailMediaChannelConnectorSettings))
        {
            originalRecord = element.args().record();
        }
        else
        {
            throw error("@RET810");
        }

        connector = RetailMediaChannelFacebookConnector::construct(originalRecord);

        // Insert user's wall page to allow for cases when no page is set up,
        // or user wants to post to his/her wall
        pagesComboBox.add(#NoPageSelectedEntry);
        pageNamesMap.insert(#NoPageSelectedEntry, 1);
        currentItemIndex++;

        pagesList = connector.getPages();
        pagesList = this.sortPages(pagesList);
        pagesListE = pagesList.getEnumerator();

        while (pagesListE.moveNext())
        {
            page = pagesListE.current();

            currentPageName = page.parmPageName();
            currentPageNameInstance = 1;
            // Facebook allows to have several pages with the same name.
            // AX ComboBox control, when have several items with the same
            // name, will select the first one from the top.
            // To solve this issue and make it more clear to the user
            // we add a suffix to the page name, if it is a diplucate,
            // bearing an instance number of that page name.
            // For example, if the page name occures for the first time
            // it will be added as-is:
            //     My Facebook page
            // But if there is another page with the same name we will suffix it
            // with the number showing its occurance, eg. like this:
            //     My Facebook page (2)
            if (pageNamesMap.exists(currentPageName))
            {
                currentPageNameInstance = pageNamesMap.lookup(currentPageName) + 1;
                pageNamesMap.remove(currentPageName);
                currentPageName = strFmt('%1 (%2)', currentPageName, currentPageNameInstance);
            }

            pageNamesMap.insert(currentPageName, currentPageNameInstance);

            pagesComboBox.add(currentPageName);

            if (originalRecord.PageId == page.parmPageId())
            {
                selectedIndex = currentItemIndex;
            }
            currentItemIndex++;
        }

        pagesComboBox.selection(selectedIndex);
        originalSelectedPageIndex = selectedIndex;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sortPages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sorts the supplied list of <c>RetailFacebookPage</c> objects
    /// based on the composite key [PageName]-[PageID].
    /// Returns new list with the pages sorted.
    /// </summary>
    /// <param name="pages">
    /// The list of <c>RetailFacebookPage</c> objects to sort.
    /// </param>
    /// <returns>
    /// See the description.
    /// </returns>
    private List sortPages(List pages)
    {
        Map sortingMap = new Map(Types::String, Types::Class);
        MapEnumerator mapE;
        RetailFacebookPage page;
        ListEnumerator listE = pages.getEnumerator();
        List sortedPages = new List(Types::Class);
        while (listE.moveNext())
        {
            page = listE.current();
            sortingMap.insert(
                strFmt('%1-%2', page.parmPageName(), page.parmPageId()),
                page);
        }
        mapE = sortingMap.getEnumerator();
        while (mapE.moveNext())
        {
            sortedPages.addEnd(mapE.currentValue());
        }

        return sortedPages;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@RET4160070</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SupplementalInstruction</Name>
				<ElementPosition>966367638</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@RET4160072</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>pagesComboBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ComboType>List</ComboType>
						<Label>@RET4160071</Label>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>