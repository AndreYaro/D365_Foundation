<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailAddChannelItems</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailAddChannelItems extends FormRun implements RetailIAddChannelItems
{
    FormDataSource                      callerDataSource;
    TableId                             callerTableId;
    RefRecId                            catalogId;
    RetailInternalOrgRefRecId           internalOrgRecId;
    RefRecId                            omInternalOrgRecId;
    RefRecId                            assortmentRecId;
    EcoResCategoryHierarchyId           hierarchyId;
    EcoResCategoryId                    categoryId;
    EcoResCategoryTreeDatasource        mHierarchyTree;
    boolean                             isMultiHierarchy;
    EcoResCategoryLookupParameters      lookupParameters;
    EcoResCategoryHierarchy             selectedHierarchy;
    boolean                             selectedHierachyIsSpecial;

    boolean                             addToCatalogFreeProducts;
    utcDateTime                         channelHierarchyDateTime;
    date                                assortmentMaxFromDate;
    date                                assortmentMinToDate;
    QueryBuildDataSource                assortedProductDS;
    boolean                             globalVariants;
    boolean                             isMultipleCatalogFeatureEnabled;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkAndAddHierarchy</Name>
				<Source><![CDATA[
    public void checkAndAddHierarchy()
    {
        EcoResCategoryHierarchyRole ecoResCategoryHierarchyRoleLocal;
        EcoResCategoryHierarchy     ecoResCategoryHierarchyLocal;
        QueryRun queryRun;
        int currentHierarchyIndex = 0;
        int selectedHierarchyIndex = currentHierarchyIndex;

        container roles = lookupParameters.parmMultiRoleSelectionSet();

        selectedHierarchy = element.getInitialCategoryHierarchy();

        // if multiple role lookup wasn't set, use the first role found on the selected hierarchy
        if (conLen(roles) == 0)
        {
            select firstonly NamedCategoryHierarchyRole from ecoResCategoryHierarchyRoleLocal
                where ecoResCategoryHierarchyRoleLocal.CategoryHierarchy == selectedHierarchy.RecId;
            roles = [ecoResCategoryHierarchyRoleLocal.NamedCategoryHierarchyRole];
        }

        // if more than 1 hierarchy matches the roles given, enable hierarchy picker
        queryRun = new QueryRun(this.queryHierarchiesByRoles(roles, true));
        if (queryRun.next())
        {
            ecoResCategoryHierarchyRoleLocal = queryRun.get(tableNum(EcoResCategoryHierarchyRole));
            if (ecoResCategoryHierarchyRoleLocal.RecId > 1)
            {
                isMultiHierarchy = true;
            }
        }
        else
        {
            isMultiHierarchy = false;
        }

        if (isMultiHierarchy)
        {
            queryRun = new QueryRun(this.queryHierarchiesByRoles(roles));

            while (queryRun.next())
            {
                ecoResCategoryHierarchyRoleLocal = queryRun.get(tableNum(EcoResCategoryHierarchyRole));
                ecoResCategoryHierarchyLocal = queryRun.get(tableNum(EcoResCategoryHierarchy));
                hierarchySelector.add(ecoResCategoryHierarchyLocal.Name); // Add the hierarchy names into category list.
                if (ecoResCategoryHierarchyLocal.Name == selectedHierarchy.Name)
                    selectedHierarchyIndex = currentHierarchyIndex;
                currentHierarchyIndex++;
            }

            hierarchySelector.selection(selectedHierarchyIndex);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addVariantsForMasters</Name>
				<Source><![CDATA[
    /// <summary>
    /// When a product master is added to tmpInventTable and no variants were also added, 
    /// include all variants for the product master into the tmpInventTable.
    /// Note: This behavior should be enforced only when the Multiple catalogs feature is enabled.
    /// </summary>
    void addVariantsForMasters()
    {
        RetailTmpProductsToAdd tmpVariants, tmpMasters;
        EcoResProduct products;
        EcoResDistinctProductVariant variants;
        CatalogProduct catalogVariants;

        if (FeatureStateProvider::isFeatureEnabled(ChannelMultipleCatalogsFeature::instance()))
        {
            // Extract product masters from the temp table of products to Add
            insert_recordset tmpMasters (EcoResProduct, EcoResProductName, EcoResDistinctProductVariant)
                select EcoResProduct, EcoResProductName, EcoResDistinctProductVariant
                from tmpInventTable 
                where TmpInventTable.EcoResDistinctProductVariant == 0;

            // Extract variants from the temp table of products to Add
            insert_recordset tmpVariants (EcoResProduct, EcoResProductName, EcoResDistinctProductVariant)
                select EcoResProduct, EcoResProductName, EcoResDistinctProductVariant 
                from tmpInventTable 
                where TmpInventTable.EcoResDistinctProductVariant != 0;

            // For each product master without variants in the temp table
            while select tmpMasters
                notexists join tmpVariants
                    where tmpVariants.EcoResProduct == tmpMasters.EcoResProduct

            {
                // Verify if there are variants of this product master already assigned to the catalog
                select firstonly RecId from variants 
                    where variants.ProductMaster == tmpMasters.EcoResProduct
                    join catalogVariants
                    where catalogVariants.Catalog == catalogId && catalogVariants.Product == variants.RecId;

                if (!catalogVariants)
                {
                    // Add all variants for the product into the tempTable
                    while select variants where variants.ProductMaster == tmpMasters.EcoResProduct
                    {
                        tmpInventTable.initValue();
                        tmpInventTable.EcoResDistinctProductVariant = variants.RecId;
                        tmpInventTable.EcoResProduct = tmpInventTable.EcoResProduct;
                        tmpInventTable.EcoResProductName = EcoResProductTranslation::getNameOrDefaultName(tmpInventTable.EcoResProduct, CompanyInfo::languageId());
                        tmpInventTable.insert();
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createToCatalogItemList</Name>
				<Source><![CDATA[
    void createToCatalogItemList(Catalog _catalogTable, Object _callerDataSource)
    {
        CatalogManager catalogManager = CatalogManager::construct(_catalogTable.RecId);

        // When Multiple Catalogs feature is enabled, the following rule is applied:
        // "When a product master is added and no variants were also added, include all variants
        // for the product master into the catalog"
        if (isMultipleCatalogFeatureEnabled && ExplodeVariantsChkBox.checked())
        {
            this.addVariantsForMasters();
        }

        if (categoryId && hierarchyId)
        {
            catalogManager.addProductsToCategory(tmpInventTable, hierarchyId, categoryId);
        }
        else
        {
            if (!addToCatalogFreeProducts)
            {
                catalogManager.addProductsToCatalog(tmpInventTable);

                // Clear entries.
                delete_from tmpInventTable;
            }
            else
            {
                catalogManager.mcrAddFreeProductsToCatalog(tmpInventTable);
            }
        }

        _callerDataSource.findRecord(Catalog::find(_catalogTable.RecId));
        _callerDataSource.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createToInternalOrgProduct</Name>
				<Source><![CDATA[
    void createToInternalOrgProduct()
    {
        while select tmpInventTable
        {
            RetailInternalOrgProduct::findOrCreateByInternalOrgProduct(internalOrgRecId, tmpInventTable.getProductRecId());
        }

        callerDataSource.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCategoryHierarchy</Name>
				<Source><![CDATA[
    private void enableCategoryHierarchy()
    {
        this.initializeCategoryTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialCategoryHierarchy</Name>
				<Source><![CDATA[
    private EcoResCategoryHierarchy getInitialCategoryHierarchy()
    {
        EcoResCategoryHierarchyRole retailHierarchyRole =
            EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail);

        return EcoResCategoryHierarchy::find(retailHierarchyRole.CategoryHierarchy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        RetailAddItemsParameter parameters;
        Catalog catalog;

        Common callerRecord = element.args().record();
        isMultipleCatalogFeatureEnabled = FeatureStateProvider::isFeatureEnabled(ChannelMultipleCatalogsFeature::instance());

        if (callerRecord is Catalog)
        {
            catalog = callerRecord;
            catalogId = callerRecord.RecId;
            parameters = element.args().parmObject();

            channelHierarchyDateTime = Catalog::getChannelHierarchyDateTime(catalogId);

            // Allow assortments overlapping catalog
            assortmentMaxFromDate = catalog.ValidTo;
            assortmentMinToDate = catalog.ValidFrom;

            globalVariants = true; // show global product variants.
        }
        else if (callerRecord is RetailInternalOrganization)
        {
            internalOrgRecId = callerRecord.RecId;
            callerDataSource = element.args().parmObject();

            // Use channel hierarchy as of now
            channelHierarchyDateTime = DateTimeUtil::utcNow();

            // Allow enrich current and future assorted products
            assortmentMaxFromDate = DateTimeUtil::date(DateTimeUtil::maxValue());
            assortmentMinToDate = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(channelHierarchyDateTime, DateTimeUtil::getCompanyTimeZone()));

            globalVariants = true; // show global product variants.
        }

        super();

        //Initialize form controls
        element.enableCategoryHierarchy();
        element.initializeExplodeVariantsChkBox();

        if (parameters)
        {
            hierarchyId = parameters.paramCategoryHierarchy();
            categoryId = parameters.paramCategoryId();
            catalogId = parameters.paramCatalogId();
            addToCatalogFreeProducts = parameters.mcrParamAddToCatalogFreeProducts();
        }
        if (catalogId || internalOrgRecId)
        {
            this.initializeChannelSelector();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAssortmentSelector</Name>
				<Source><![CDATA[
    void initializeAssortmentSelector()
    {
        RefRecId omInternalOrgRecIdLocal;
        RetailAssortedInternalOrganization  assortedInternalOrganization;
        RetailAssortmentID assortmentId;
        DirPartyName channelName = channelSelector.text();

        if (channelName)
        {
            if (catalogId)
            {
                omInternalOrgRecIdLocal = RetailCatalogInternalOrgName::findFirstByCatalogOrgName(catalogId, channelName).OMInternalOrganization;
            }
            else if (internalOrgRecId)
            {
                omInternalOrgRecIdLocal = RetailInternalOrganization::find(internalOrgRecId).InternalOrganization;
            }
            if (omInternalOrgRecIdLocal)
            {
                select firstonly AssortmentID from assortedInternalOrganization
                    where assortedInternalOrganization.AncestorOrganization == omInternalOrgRecIdLocal
                    && assortedInternalOrganization.AssortmentValidFrom <= assortmentMaxFromDate
                    && assortedInternalOrganization.AssortmentValidTo >= assortmentMinToDate;

                assortmentId = assortedInternalOrganization.AssortmentID;
            }
        }

        assortmentSelector.text(assortmentId);
        assortmentSelector.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCategoryTree</Name>
				<Source><![CDATA[
    //  Initializes the hierarchy for Retail product, Special hierarchy & procurement.
    public void initializeCategoryTree()
    {
        lookupParameters = new EcoResCategoryLookupParameters(
            false,
            false,
            false,
            true,
            '' ,
            null,
            0,
            0,
            ProcCategoryOrganizationOption::BuyingLegalEntity,
            0,
            [EcoResCategoryNamedHierarchyRole::Retail,
            EcoResCategoryNamedHierarchyRole::RetailChannelNavigation]);

        element.checkAndAddHierarchy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeExplodeVariantsChkBox</Name>
				<Source><![CDATA[
    private void initializeExplodeVariantsChkBox()
    {
        str explodeVariantsTxt = strFmt("@Retail:RetailAddChannelItemsExplodeVariantChkBoxLabel");
        ExplodeVariantsHTML.visible(catalogId && isMultipleCatalogFeatureEnabled);
        ExplodeVariantsHTML.parmHtml(strFmt("<html><body>%1</body></html>", explodeVariantsTxt));
        ExplodeVariantsChkBox.visible(catalogId && isMultipleCatalogFeatureEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeChannelSelector</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setting the first channel name and assortment number.
    /// </summary>
    private void initializeChannelSelector()
    {
        RetailCatalogInternalOrgName        catalogInternalOrgName;
        RetailInternalOrgName           internalOrgName;

        if (catalogId)
        {
            select firstonly InternalOrgName from catalogInternalOrgName
                where catalogInternalOrgName.Catalog == catalogId;
            channelSelector.text(catalogInternalOrgName.InternalOrgName);
        }
        else if (internalOrgRecId)
        {
            select firstonly Name from internalOrgName
                where internalOrgName.InternalOrganization == internalOrgRecId;
            channelSelector.text(internalOrgName.Name);
            channelSelector.enabled(false);
        }
        channelSelector.modified();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTmpProductsToAdd</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Creates record into <c>TmpRetailProductsToAdd</c>.
    /// </summary>
    /// <param name="_productRecId">
    ///  The product rec id.
    /// </param>
    /// <param name="_variantId">
    ///  The distinct product variant rec id.
    /// </param>
    /// <param name="_quantity">
    ///  Quantity. Currently ignored
    /// </param>
    public void insertIntoTmpProductsToAdd(RefRecId _productRecId,
                                        RefRecId _variantId,
                                        Qty      _quantity = 0)
    {
        if (this.canInsertIntoRetailTmpProductsToAdd(_productRecId, _variantId))
        {
            select firstonly tmpInventTable
                where tmpInventTable.EcoResProduct == _productRecId
                    && tmpInventTable.EcoResDistinctProductVariant == _variantId;

            if (!tmpInventTable)
            {
                tmpInventTable.clear();

                tmpInventTable.EcoResProduct        =  _productRecId;
                tmpInventTable.EcoResDistinctProductVariant = _variantId;
                tmpInventTable.EcoResProductName = EcoResProduct::find(_productRecId).productName();

                tmpInventTable.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInsertIntoRetailTmpProductsToAdd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether insertion of products to add is allowed.
    /// </summary>
    /// <param name = "_productRecId">The product rec id.</param>
    /// <param name = "_variantId">The distinct product variant rec id.</param>
    /// <returns>true if insertion into the <c>RetailTmpProductsToAdd</c> is allowed; otherwise, false.</returns>
    protected boolean canInsertIntoRetailTmpProductsToAdd(RefRecId _productRecId, RefRecId _variantId)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryHierarchiesByRoles</Name>
				<Source><![CDATA[
    private Query queryHierarchiesByRoles(container _roles, boolean _countOnly = false)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(EcoResCategoryHierarchyRole));
        int i;

        qbds.addDataSource(tableNum(EcoResCategoryHierarchy)).relations(true);

        for (i=1; i<=conLen(_roles); i++)
        {
            qbds.addRange(fieldNum(EcoResCategoryHierarchyRole, NamedCategoryHierarchyRole))
                .value(queryValue( conPeek(_roles,i) ));
        }

        if (_countOnly)
        {
            qbds.fields().clearFieldList();
            qbds.addSelectionField(fieldNum(EcoResCategoryHierarchyRole, RecId), SelectionField::Count);
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshDS</Name>
				<Source><![CDATA[
    public void refreshDS()
    {
        tmpinventTable_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        this.runCategoryTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runCategoryTree</Name>
				<Source><![CDATA[
    public void runCategoryTree()
    {
        EcoResCategory  root;

        if (isMultiHierarchy)
        {
            selectedHierarchy = EcoResCategoryHierarchy::findByName(hierarchySelector.valueStr());
        }

        root = EcoResCategory::getRoot(selectedHierarchy.RecId);

        if (selectedHierarchy.RecId)
        {
            selectedHierachyIsSpecial = EcoResCategoryHierarchyRole::existRoleHierarchyPair(EcoResCategoryNamedHierarchyRole::RetailSpecialGroup, selectedHierarchy.RecId);

            if (selectedHierachyIsSpecial)
            {
                // this may have issues with performance.
                // We will try to make sure that by the time we reach this point this was already done.
                RetailCategoryContainmentLookup::synchronizeCategoriesLookup();
            }

            mHierarchyTree = new EcoResCategoryTreeDatasource( ecoResCategory_ds,
                                                               hierarchyTreeCtrl,
                                                               fieldNum(EcoResCategory, RecId),
                                                               fieldNum(EcoResCategory, ParentCategory),
                                                               fieldNum(EcoResCategory, Name),
                                                               false /* No ID in description */,
                                                               true,
                                                               fieldNum(EcoResCategory, Code),
                                                               selectedHierarchy,
                                                               null,
                                                               lookupParameters,
                                                               fieldNum(EcoResCategory, NestedSetLeft) /* for tree sort order */
                                                               );

            if (root.RecId)
            {
                mHierarchyTree.initRoot(root.Name, root.RecId, mHierarchyTree.image() );
            }

            mHierarchyTree.setFocusOnFirstMatch();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showHideQtyColumn</Name>
				<Source><![CDATA[
    // this method checks whether Quantity column need to display on the Matrix pivot form.
    public boolean showHideQtyColumn()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAssortedProducts</Name>
				<Source><![CDATA[
    void updateAssortedProducts()
    {
        retailInternalOrgAssortedProdAddProduct_ds.query().dataSourceTable(tableNum(RetailInternalOrgAssortedProdAddProduct)).clearRanges();

        assortedProductDS = retailInternalOrgAssortedProdAddProduct_ds.query().dataSourceTable(tableNum(RetailInternalOrgAssortedProdAddProduct));

        assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, validFrom)).value('..' + queryValue(channelHierarchyDateTime));
        assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, validTo)).value(queryValue(channelHierarchyDateTime) + '..');
        assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, AssortmentValidFrom)).value('..' + queryValue(assortmentMaxFromDate));
        assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, AssortmentValidTo)).value(queryValue(assortmentMinToDate) + '..');
        assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, LanguageId)).value(SysQueryRangeUtil::currentLanguageId());

        assortedProductDS.addSortField(fieldNum(RetailInternalOrgAssortedProdAddProduct, DisplayProductNumber));
        assortedProductDS.addSortField(fieldNum(RetailInternalOrgAssortedProdAddProduct, ProductName));
        assortedProductDS.addSortField(fieldNum(RetailInternalOrgAssortedProdAddProduct, HasVariant));
        assortedProductDS.addSortField(fieldNum(RetailInternalOrgAssortedProdAddProduct, Product));
        assortedProductDS.addSortField(fieldNum(RetailInternalOrgAssortedProdAddProduct, Variant));
        assortedProductDS.orderMode(OrderMode::GroupBy);

        if (omInternalOrgRecId)
        {
            assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, AncestorInternalOrg))
                        .value(queryValue(omInternalOrgRecId));
        }

        if (assortmentRecId)
        {
            assortedProductDS.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, AssortmentRecId))
                        .value(queryValue(assortmentRecId));
        }

        retailInternalOrgAssortedProdAddProduct_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showGlobalVariants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows global product variants.
    /// </summary>
    public boolean showGlobalVariants()
    {
        return globalVariants;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailCatalogInternalOrg</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = 1;

            this.query().dataSourceTable(tableNum(RetailCatalogInternalOrg)).clearRanges();
            this.query().dataSourceTable(tableNum(RetailCatalogInternalOrg)).addRange(fieldNum(RetailCatalogInternalOrg, Catalog)).value(queryValue(catalogId));
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailInternalOrgAssortedProdAddProduct</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if ((retailInternalOrgAssortedProdAddProduct.Variant == 0) &&
                EcoResProductMaster::find(retailInternalOrgAssortedProdAddProduct.Product)  &&
                EcoResProductMaster::find(retailInternalOrgAssortedProdAddProduct.Product).hasProductVariants())
            {
                addVariantsButton.enabled(true);
            }
            else
            {
                addVariantsButton.enabled(false);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the data source query and displays the records retrieved.
        /// </summary>
        public void executeQuery()
        {
            // Only execute query when a category is selected to skip unnecessary queries during initial load
            if (!ecoResCategory)
            {
                return;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;
            
            super();
            
            qbds = this.query().dataSourceTable(tableNum(RetailInternalOrgAssortedProdAddProduct));
            qbds.addRange(fieldNum(RetailInternalOrgAssortedProdAddProduct, LanguageId)).value(SysQueryRangeUtil::currentLanguageId());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResCategory</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            RetailCategoryHelper::categorySelectionChanged(
                ecoResCategory,
                ecoResCategoryDescendents_ds,
                retailCategoryContainmentLookup_ds,
                selectedHierachyIsSpecial);

            retailInternalOrgAssortedProdAddProduct_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailCategoryContainmentLookup</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            RetailCategoryContainmentLookup::synchronizeCategoriesLookup();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResProductCategory</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            qbds = ecoResProductCategory_ds.query().dataSourceTable(tableNum(EcoResProductCategory));

            qbds.addLink(fieldNum(RetailInternalOrgAssortedProdAddProduct, Product), fieldNum(EcoResProductCategory, Product));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ChannelSelector</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                     query = new Query();
            QueryBuildDataSource      queryBuildDataSource;
            QueryBuildRange           queryBuildRange;

            // Create an instance of SysTableLookup where 'this' the current Form control.
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(RetailCatalogInternalOrgName), this);

            // The field to be shown in the lookup form.
            sysTableLookup.addLookupfield(fieldNum(RetailCatalogInternalOrgName, InternalOrgName));

            // Limit and arrange data selection.
            queryBuildDataSource = query.addDataSource(tableNum(RetailCatalogInternalOrgName));
            queryBuildRange      = queryBuildDataSource.addRange(fieldNum(RetailCatalogInternalOrgName, Catalog));

            queryBuildRange.value(queryValue(catalogId));

            sysTableLookup.parmQuery(query);

            // Perform lookup
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            DirPartyName selectedInternalOrgName;

            ret = super();

            selectedInternalOrgName = this.valueStr();
            if (catalogId)
            {
                omInternalOrgRecId = RetailCatalogInternalOrgName::findFirstByCatalogOrgName(catalogId, selectedInternalOrgName).OMInternalOrganization;
            }
            else if (internalOrgRecId)
            {
                omInternalOrgRecId = RetailInternalOrganization::find(internalOrgRecId).InternalOrganization;
            }

            element.initializeAssortmentSelector();
            element.updateAssortedProducts();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AssortmentSelector</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query          = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange;

            // Create an instance of SysTableLookup where 'this' the current Form control.
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(RetailAssortedInternalOrganization), this);

            // The field to be shown in the lookup form.
            sysTableLookup.addLookupfield(fieldNum(RetailAssortedInternalOrganization, AssortmentID));
            sysTableLookup.addLookupfield(fieldNum(RetailAssortedInternalOrganization, AssortmentName));

            // Limit and arrange data selection.
            queryBuildDataSource = query.addDataSource(tableNum(RetailAssortedInternalOrganization));
            queryBuildRange      = queryBuildDataSource.addRange(fieldNum(RetailAssortedInternalOrganization, AncestorOrganization));
            queryBuildRange.value(queryValue(omInternalOrgRecId));

            queryBuildDataSource.addRange(fieldNum(RetailAssortedInternalOrganization, validFrom)).value('..' + queryValue(channelHierarchyDateTime));
            queryBuildDataSource.addRange(fieldNum(RetailAssortedInternalOrganization, validTo)).value(queryValue(channelHierarchyDateTime) + '..');
            queryBuildDataSource.addRange(fieldNum(RetailAssortedInternalOrganization, AssortmentValidFrom)).value('..' + queryValue(assortmentMaxFromDate));
            queryBuildDataSource.addRange(fieldNum(RetailAssortedInternalOrganization, AssortmentValidTo)).value(queryValue(assortmentMinToDate) + '..');
            sysTableLookup.parmQuery(query);

            // Perform lookup
            sysTableLookup.performFormLookup();

            // do not call super().
            //    super()
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            RetailAssortmentID selectedAssortmentId;
            RetailAssortedInternalOrganization  assortedInternalOrganization;

            ret = super();

            selectedAssortmentId = this.valueStr();

            select firstOnly AssortmentRecId from assortedInternalOrganization
                where assortedInternalOrganization.AssortmentID == selectedAssortmentId
                    && assortedInternalOrganization.AssortmentValidFrom <= assortmentMaxFromDate
                    && assortedInternalOrganization.AssortmentValidTo >= assortmentMinToDate;

            assortmentRecId = assortedInternalOrganization.AssortmentRecId;

            element.updateAssortedProducts();

            assortmentSelector.text(RetailAssortmentTable::find(selectedAssortmentId).name);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HierarchySelector</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            EcoResCategoryHierarchy newlySelectedHierarchy;

            ret = super();

            newlySelectedHierarchy = EcoResCategoryHierarchy::findByName(this.valueStr());
            if (newlySelectedHierarchy.RecId != selectedHierarchy.RecId)
                element.runCategoryTree();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HierarchyTreeCtrl</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>expanded</Name>
						<Source><![CDATA[
        public void expanded(int _idx, FormTreeExpand _action, anytype _data)
        {
            super(_idx, _action, _data);
            if (mHierarchyTree)
            {
                mHierarchyTree.onExpanded(_idx, _action);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        public boolean expanding(int _idx, FormTreeExpand _action, anytype _data)
        {
            boolean ret;

            ret = super(_idx, _action, _data);

            if (mHierarchyTree)
            {
                mHierarchyTree.expanding(_idx, _action, _data);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            int root = this.getRoot();

            super(_oldItem, _newItem, _how);

            if (mHierarchyTree)
            {
                mHierarchyTree.selectionChanged(_oldItem, _newItem);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExplodeVariantsChkBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks or unchecks <c>ExplodeVariantsChkBox</c> check box.
        /// </summary>
        public void clicked()
        {
            super();

            if (this.checked())
            {
                Info("@Retail:RetailAddChannelItemsExplodeVariantRulesMessage");
                warning("@Retail:RetailAddChannelItemsExplodeVariantWarning");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Select_Button</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            List productsToAdd = new List(Types::Container);
            RetailInternalOrgAssortedProdAddProduct   retailInternalOrgAssortedProdAddProductLocal;
            FormDataSource fds = retailInternalOrgAssortedProdAddProduct_ds;

            for ( retailInternalOrgAssortedProdAddProductLocal = fds.getFirst(true) ? fds.getFirst(true) : fds.cursor();
            retailInternalOrgAssortedProdAddProductLocal;
            retailInternalOrgAssortedProdAddProductLocal = fds.getNext()
            )
            {
                productsToAdd.addEnd([
                    retailInternalOrgAssortedProdAddProductLocal.Product,
                    retailInternalOrgAssortedProdAddProductLocal.Variant,
                    retailInternalOrgAssortedProdAddProductLocal.ProductName
                ]);
            }

            TmpInventTable.bulkInsertIntoTmpProductsToAdd(productsToAdd);
            tmpInventTable_DS.research(true);
            fds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddVariantsButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;
            EcoResProductMaster master;

            args = new Args();

            select * from master where master.RecId == RetailInternalOrgAssortedProdAddProduct.Product;
            args.record(master);
            args.caller(element);
            new MenuFunction(menuitemDisplayStr(RetailMatrixPivot), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Remove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            RetailTmpProductsToAdd tmpProductsToAdd;
            FormDataSource ds;
            RetailTmpProductsToAdd tmpInventTable_local;

            super();

            // Create a new instance link from temporary table instance.
            tmpInventTable_local.linkPhysicalTableInstance(tmpInventTable);

            ds = FormDataUtil::getFormDataSource(tmpInventTable);

            for (tmpProductsToAdd = ds.getFirst(true) ? ds.getFirst(true) : ds.cursor(); tmpProductsToAdd; tmpProductsToAdd = ds.getNext())
            {
                // Delete all the selected rows from the grid.
                delete_from tmpInventTable_local
                    where tmpInventTable_local.EcoResProduct == tmpProductsToAdd.EcoResProduct &&
                    tmpInventTable_local.EcoResDistinctProductVariant == tmpProductsToAdd.EcoResDistinctProductVariant;
            }

            ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Common callerRecord;

            callerRecord = element.args().record();

            if (catalogId)
            {
                element.createToCatalogItemList(callerRecord, FormDataUtil::getFormDataSource(callerRecord));
            }
            else if (internalOrgRecId)
            {
                element.createToInternalOrgProduct();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailCatalogInternalOrg</Name>
			<Table>RetailCatalogInternalOrg</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssociatedListingAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssociatedListingActionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ListingCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailAssortedInternalOrganization</Name>
			<Table>RetailAssortedInternalOrganization</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AncestorOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCatalogInternalOrgName</Name>
			<Table>RetailCatalogInternalOrgName</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrgName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMInternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCatalogInternalOrg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpInventTable</Name>
			<Table>RetailTmpProductsToAdd</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResDistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResProductName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDim</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailInternalOrgAssortedProdAddProduct</Name>
			<Table>RetailInternalOrgAssortedProdAddProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AncestorInternalOrg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssortmentValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayProductNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Variant</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategory</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategory_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCategoryContainmentLookup</Name>
			<Table>RetailCategoryContainmentLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContainedCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDirty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductCategory</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResProductCategory</Name>
			<Table>EcoResProductCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>RetailInternalOrgAssortedProdAddProduct</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategoryDescendents</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResProductCategory</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategoryDescendents_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS132109</Caption>
		<ColumnSpace xmlns="">30</ColumnSpace>
		<ColumnSpaceMode xmlns="">Fixed</ColumnSpaceMode>
		<DialogSize xmlns="">Full</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Main</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Tree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupTree</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ChannelSelector</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@RET5708</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AssortmentSelector</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@RET5212</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>HierarchySelector</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS41044</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTreeControl">
										<Name>HierarchyTreeCtrl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Tree</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl>
										<Name>ExplodeVariantsHTML</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension>
											<Name>HtmlViewerControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>htmlField</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ExplodeVariantsChkBox</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Label>@Retail:RetailAddChannelItemsExplodeVariantChkBoxLabel</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<Caption>@RET5132</Caption>
							</AxFormControl>
						</Controls>
						<Columnspace>2</Columnspace>
						<ColumnspaceMode>Fixed</ColumnspaceMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VSplitterFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<Style>SplitterVerticalContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>MiddleGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AddProductsVariantsGroup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AvailableProducts</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DisplayLength>50</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<Text>@RET5929</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>AddProductsVariantsActionPane</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>ActionPaneTab</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>AddProducts</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>Select_Button</Name>
																<ElementPosition>1193046470</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>75</Width>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Add</NormalImage>
																<Text>@RET5134</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>AddVariantsButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1789569705</ElementPosition>
																<Enabled>No</Enabled>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>75</Width>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Add</NormalImage>
																<Text>@RET260149</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Columns>2</Columns>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Columns>2</Columns>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>Grid</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>StringEdit</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>DisplayProductNumber</DataField>
												<DataSource>RetailInternalOrgAssortedProdAddProduct</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Grid_ItemId</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ProductName</DataField>
												<DataSource>RetailInternalOrgAssortedProdAddProduct</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>HasVariants</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataField>HasVariant</DataField>
												<DataSource>RetailInternalOrgAssortedProdAddProduct</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>RetailInternalOrgAssortedProdAddProduct</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RET5927</Caption>
							</AxFormControl>
						</Controls>
						<Columnspace>2</Columnspace>
						<ColumnspaceMode>Fixed</ColumnspaceMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VSplitterAddProducts</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<Style>SplitterVerticalContainer</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>RightGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RightGroupGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ProductsToAdd</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>StaticText</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DisplayLength>50</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<Text>@RET5925</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>ActionPane</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>AddedProductsButtons</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>Remove</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>Button</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Delete</NormalImage>
																<Text>@RET5135</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<Columns>2</Columns>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Columns>2</Columns>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>AddedProducts</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>TmpInventTable_EcoResProduct</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TmpInventTable_EcoResProduct_DisplayProductNumber</Name>
														<DataRelationPath>EcoResProduct</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>TmpInventTable</DataSource>
												<Label>@SYS133863</Label>
												<ReferenceField>EcoResProduct</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProductName</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>EcoResProductName</DataField>
												<DataSource>TmpInventTable</DataSource>
												<Label>@RET490374</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>TmpInventTable_EcoResDistinctProductVariant</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>TmpInventTable_EcoResDistinctProductVariant_DisplayProductNumber</Name>
														<DataRelationPath>EcoResDistinctProductVariant</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>TmpInventTable</DataSource>
												<Label>@RET3153</Label>
												<ReferenceField>EcoResDistinctProductVariant</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InventoryDimensions</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_configId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>configId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventSizeId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSizeId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventColorId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventColorId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventStyleId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStyleId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventVersionId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventVersionId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventSiteId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSiteId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventLocationId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventLocationId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_inventBatchId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>inventBatchId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_wMSLocationId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>wMSLocationId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_inventSerialId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>inventSerialId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventStatusId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStatusId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_LicensePlateId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>LicensePlateId</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventOwnerId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventOwnerId_RU</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventProfileId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventProfileId_RU</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventGtdId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventGtdId_RU</DataField>
														<DataSource>InventDim</DataSource>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataGroup>InventoryDimensions</DataGroup>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>TmpInventTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RET5926</Caption>
								<DataSource>TmpInventTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TmpInventTable</DataSource>
					</AxFormControl>
				</Controls>
				<Columns>5</Columns>
				<Columnspace>25</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<FrameType>None</FrameType>
				<OptionValue>2</OptionValue>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@RET5137</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<Text>@RET5138</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>