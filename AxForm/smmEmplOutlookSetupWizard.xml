<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>smmEmplOutlookSetupWizard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class smmEmplOutlookSetupWizard extends FormRun
{
    smmEmplOutlookSetupWizard       sysWizard;
    boolean                         wizardInitialized;
    smmOutlookUserEntryID           outlookUserEntryID;
    Email                           outlookUserEmailId;
    smmContactPersonOutlookEntryID  outlookContactFolderEntryID;
    smmContactPersonOutlookStoreID  outlookContactFolderStoreID;
    smmTaskOutlookEntryID           outlookTaskFolderEntryID;
    smmTaskOutlookStoreID           outlookTaskFolderStoreID;
    smmCalendarOutlookEntryID       outlookCalendarFolderEntryID;
    smmCalendarOutlookStoreID       outlookCalendarFolderStoreID;
    HcmWorkerLookup                 hcmWorkerLookupCurrentCompany;
    OutlookUserSetup                exchangeUserSelection;
    smmOutlookMappingTypes          exchangeFolderType;
    URL                             exchangeServerUrl;

    container outlookUser;
    Email       email;
    Email       userEmail;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        element.saveEmployee();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        super();

        wizardInitialized = false;

        if (smmOutlookSyncDeprecationHandler::isOutlookSyncDisabled())
        {
            smmOutlookSyncDeprecationHandler::logSyncSkipMessageToTelemetry();
            throw error(strFmt("@SYS19306",funcName()));
        }

        smmOutlookSyncDeprecationHandler::showDeprecationMessage();

        if (element.args().caller())
        {
            sysWizard = element.args().caller();
        }

        // Completed page
        ctrlEndTxt1.text("@SYS81147");

        // Set it for current user
        ctrlWorkerTxt.value(HcmWorker::userId2Worker(curUserId()));
        ctrlUserIdTxt.text(curUserId());

        if (ctrlWorkerTxt.value())
        {
            element.initEmployee();
        }

        hcmWorkerLookupCurrentCompany = HcmWorkerLookup::newCustomOptions(true, true, true, false, true, true, true, true, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCurrentUser</Name>
				<Source><![CDATA[
    public void initCurrentUser()
    {
        // Get the current Outlook user profile id
        outlookUser = smmOutlookSync::currentOutlookUser();

        // Was a Outlook user profile found
        if (outlookUser != conNull())
        {
            email       = conPeek(outlookUser,3);
            userEmail   = SysUserInfo::find(ctrlUserIdTxt.text()).emailDisplay();

            // Set Outlook user profile
            ctrlOutlookUsrTxt.text(conPeek(outlookUser, 1));
            outlookUserEntryID = conPeek(outlookUser, 2);
            outlookUserEmailId = conPeek(outlookUser,3);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initEmployee</Name>
				<Source><![CDATA[
    void initEmployee()
    {
        HcmWorker               oldHcmWorker = HcmWorker::find(ctrlWorkerTxt.value());
        OutlookUserSetup        oldoutlookUserSetup;

        oldoutlookUserSetup = OutlookUserSetup::findByWorker(oldHcmWorker.RecId);

        // Init table from current worker record
        if (!ctrlOutlookUsrTxt.text())
        {
            ctrlOutlookUsrTxt.text(oldoutlookUserSetup.OutlookUserID);
            outlookUserEntryID = oldoutlookUserSetup.OutlookUserEntryID;
            outlookUserEmailId = oldHcmWorker.email();

            ctrlOutlookContactFolderTxt.text(oldoutlookUserSetup.OutlookContactFolderName);
            outlookContactFolderEntryID = oldoutlookUserSetup.OutlookContactFolderEntryID;
            outlookContactFolderStoreID = oldoutlookUserSetup.OutlookContactFolderStoreID;

            ctrlOutlookTaskFolderTxt.text(oldoutlookUserSetup.OutlookTaskFolderName);
            outlookTaskFolderEntryID = oldoutlookUserSetup.OutlookTaskOutlookEntryID;
            outlookTaskFolderStoreID = oldoutlookUserSetup.OutlookTaskOutlookStoreID;

            ctrlOutlookCalendarFolderTxt.text(oldoutlookUserSetup.OutlookCalendarFolderName);
            outlookCalendarFolderEntryID = oldoutlookUserSetup.OutlookCalendarOutlookEntryID;
            outlookCalendarFolderStoreID = oldoutlookUserSetup.OutlookCalendarOutlookStoreID;
        }

        ctrlUserIdTxt.text(DirPersonUserEx::worker2UserId(oldHcmWorker.RecId));
        ctrlOutlookContactFolderTxt.text(oldoutlookUserSetup.OutlookContactFolderName);
        ctrlOutlookTaskFolderTxt.text(oldoutlookUserSetup.OutlookTaskFolderName);
        ctrlOutlookCalendarFolderTxt.text(oldoutlookUserSetup.OutlookCalendarFolderName);

        synchronizeDaysBack.value(oldoutlookUserSetup.SmmSynchronizeDaysBack);
        synchronizeDaysForward.value(oldoutlookUserSetup.SmmSynchronizeDaysForward);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPage</Name>
				<Source><![CDATA[
    void initPage(int _fromTab, int _toTab)
    {
        switch (_toTab)
        {
            case smmEmplOutlookSetupWizard::UserMappingTabIndex:
                if (!wizardInitialized)
                {
                    sysWizard.init();
                    wizardInitialized = true;
                }
                break;
        }

        this.setNext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextPageOk</Name>
				<Source><![CDATA[
    boolean nextPageOk()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchangeFolderSelection</Name>
				<Source><![CDATA[
    public OutlookUserSetup parmExchangeFolderSelection(OutlookUserSetup _outlookUserSetup = exchangeUserSelection)
    {
        exchangeUserSelection = _outlookUserSetup;
        return exchangeUserSelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchangeFolderType</Name>
				<Source><![CDATA[
    public smmOutlookMappingTypes parmExchangeFolderType(smmOutlookMappingTypes _exchangeFolderType = exchangeFolderType)
    {
        exchangeFolderType = _exchangeFolderType;
        return exchangeFolderType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prevPageOK</Name>
				<Source><![CDATA[
    boolean prevPageOK()
    {
        return this.nextPageOK();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (!ctrlWorkerTxt.value())
        {
            error("@SYS36005");
            element.close();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveEmployee</Name>
				<Source><![CDATA[
    void saveEmployee()
    {
        HcmWorker               hcmWorker;
        OutlookUserSetup        outlookUserSetup;

        ttsbegin;

        hcmWorker = HcmWorker::find(ctrlWorkerTxt.value(), true);

        if (hcmWorker)
        {
            outlookUserSetup = OutlookUserSetup::findByWorker(hcmWorker.RecId,true);

            if (outlookUserSetup)
            {
                if (outlookUserSetup.OutlookUserEntryID != outlookUserEntryID)
                {
                    outlookUserSetup.OutlookUserID                 = ctrlOutlookUsrTxt.text();
                    outlookUserSetup.OutlookUserEntryID            = outlookUserEntryID;

                    // Clear outlook IDs
                    outlookUserSetup.OutlookCalendarOutlookEntryID = '';
                    outlookUserSetup.OutlookCalendarOutlookStoreID = '';
                    outlookUserSetup.OutlookCalendarFolderName     = '';

                    // Clear Outlook contact folder information
                    outlookUserSetup.OutlookContactFolderEntryID   = '';
                    outlookUserSetup.OutlookContactFolderStoreID   = '';
                    outlookUserSetup.OutlookContactFolderName      = '';

                    // Clear Outlook task folder information
                    outlookUserSetup.OutlookTaskOutlookEntryID     = '';
                    outlookUserSetup.OutlookTaskOutlookStoreID     = '';
                    outlookUserSetup.OutlookTaskFolderName         = '';
                }
                if (outlookUserSetup.OutlookContactFolderEntryID != outlookContactFolderEntryID || outlookUserSetup.OutlookContactFolderStoreID != outlookContactFolderStoreID)
                {
                    outlookUserSetup.OutlookContactFolderName      = ctrlOutlookContactFolderTxt.text();
                    outlookUserSetup.OutlookContactFolderEntryID   = outlookContactFolderEntryID;
                    outlookUserSetup.OutlookContactFolderStoreID   = outlookContactFolderStoreID;
                }
                if (outlookUserSetup.OutlookTaskOutlookEntryID != outlookTaskFolderEntryID || outlookUserSetup.OutlookTaskOutlookStoreID != outlookTaskFolderStoreID)
                {
                    outlookUserSetup.OutlookTaskFolderName         = ctrlOutlookTaskFolderTxt.text();
                    outlookUserSetup.OutlookTaskOutlookEntryID     = outlookTaskFolderEntryID;
                    outlookUserSetup.OutlookTaskOutlookStoreID     = outlookTaskFolderStoreID;
                }
                if (outlookUserSetup.OutlookCalendarOutlookEntryID != outlookCalendarFolderEntryID || outlookUserSetup.OutlookCalendarOutlookStoreID != outlookCalendarFolderStoreID)
                {
                    outlookUserSetup.OutlookCalendarFolderName         = ctrlOutlookCalendarFolderTxt.text();
                    outlookUserSetup.OutlookCalendarOutlookEntryID     = outlookCalendarFolderEntryID;
                    outlookUserSetup.OutlookCalendarOutlookStoreID     = outlookCalendarFolderStoreID;
                }

                outlookUserSetup.SmmSynchronizeDaysBack    = synchronizeDaysBack.value();
                outlookUserSetup.SmmSynchronizeDaysForward = synchronizeDaysForward.value();
                outlookUserSetup.update();
            }
        }
        else
        {
            // Worker '%1' does not exist
            checkFailed(strFmt("@SYS8607", ctrlWorkerTxt.value()));
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveUserEmail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates userInfo with the email provided by the user.
    /// </summary>
    void saveUserEmail()
    {
        SysUserInfo sysUserInfo;

        ttsbegin;

        sysUserInfo = SysUserInfo::find(ctrlUserIdTxt.text(), true);
        if (sysUserInfo && sysUserInfo.Email != ctrlExchangeMailId.text())
        {
            sysUserInfo.Email = ctrlExchangeMailId.text();
            sysUserInfo.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveUserExchangeServerUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates outlookusersetup with the new URL provided by the user.
    /// </summary>
    public void saveUserExchangeServerUrl()
    {
        OutlookUserSetup outlookUserSetup;

        if (exchangeServerUrl !=  ctrlExchangeServerUrl.text())
        {
            ttsbegin;

            outlookUserSetup = OutlookUserSetup::findByUser(ctrlUserIdTxt.text(), true);
            outlookUserSetup.ExchangeServerUrl = ctrlExchangeServerUrl.text();
            outlookUserSetup.update();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNext</Name>
				<Source><![CDATA[
    void setNext()
    {
        sysWizard.setTabsToSkip(false);

        sysWizard.nextEnabled(true, sysWizard.curTab(), false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tab</Name>
				<Source><![CDATA[
    FormTabControl tab()
    {
        return tab;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wizard</Name>
				<Source><![CDATA[
    SysWizard wizard()
    {
        return sysWizard;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        void tabChanged(int _fromTab, int _toTab)
        {
            boolean okToAdvance =  true;

            if (_fromTab == smmEmplOutlookSetupWizard::UserMappingTabIndex
                && _toTab == smmEmplOutlookSetupWizard::OutlookSyncTabIndex)
            {
                element.saveUserEmail();
                element.initCurrentUser();
                element.saveUserExchangeServerUrl();

                sysWizard.parmExchangeEmail(ctrlExchangeMailId.text());
                okToAdvance = sysWizard.validateServerAndEmailSettings();
            }

            if (okToAdvance)
            {
                super(_fromTab, _toTab);
                element.initPage(_fromTab, _toTab);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UserMapping</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            SysUserInfo                 sysUserInfo;
            OutlookSyncParameters       outlookSyncParameters;

            sysUserInfo = SysUserInfo::find(ctrlUserIdTxt.text());

            select ExchangeServerUrl from outlookSyncParameters;

            super();

            ctrlExchangeServerUrl.text(outlookSyncParameters.ExchangeServerUrl);
            ctrlExchangeMailId.text(sysUserInfo.Email);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlWorkerTxt</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;

            ret = hcmWorkerLookupCurrentCompany.lookupWorker(this);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            HcmWorker ret;

            ret = super();

            if (ret != null && !hcmWorkerLookupCurrentCompany.validateWorker(ret.RecId))
            {
                ret = null;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlExchangeServerUrl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlExchangeMailId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OutlookSync</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            boolean profileSelected;

            super();

            // Is outlook profile selected
            profileSelected = ctrlOutlookUsrTxt.text() ? true : false;
            pickContactOutlookFolder.enabled(profileSelected);
            pickTaskOutlookFolder.enabled(profileSelected);
            pickCalendarOutlookFolder.enabled(profileSelected);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseCurrentOutlookProfile</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.initCurrentUser();

            // Was a Outlook user profile found
            if (outlookUser)
            {
                // Enable pick folders
                pickContactOutlookFolder.enabled(true);
                pickTaskOutlookFolder.enabled(true);
                pickCalendarOutlookFolder.enabled(true);

                // Clear contact folder
                ctrlOutlookContactFolderTxt.text('');
                outlookContactFolderEntryID = '';
                outlookContactFolderStoreID = '';

                // Clear task folder
                ctrlOutlookTaskFolderTxt.text('');
                outlookTaskFolderEntryID = '';
                outlookTaskFolderStoreID = '';

                // Clear calendar folder
                ctrlOutlookCalendarFolderTxt.text('');
                outlookCalendarFolderEntryID = '';
                outlookCalendarFolderStoreID = '';

                element.setNext();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PickContactOutlookFolder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            smmOutlookSync_Contact  synchronization;
            OutlookUserSetup        outlookUserSetup;

            // Initialize synchronization class
            synchronization = smmOutlookSync::construct(smmOutlookMappingTypes::Contacts, ctrlUserIdTxt.text());
            synchronization.init(true,ctrlOutlookUsrTxt.text(), outlookUserEntryID, outlookUserEmailId);

            exchangeFolderType = smmOutlookMappingTypes::Contacts;
            smmUtility::openMenuItemForm(menuitemDisplayStr(smmEwsFolderPicker), null, this.formRun());
            ctrlOutlookContactFolderTxt.text(exchangeUserSelection.OutlookContactFolderName);

            // In outlook these are different for different user profiles on the machine but for exchange server these are same.
            outlookContactFolderEntryID = exchangeUserSelection.OutlookContactFolderEntryID;
            outlookContactFolderStoreID = exchangeUserSelection.OutlookContactFolderEntryID;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PickTaskOutlookFolder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            smmOutlookSync_Task synchronization;
            OutlookUserSetup    outlookUserSetup;

            // Initialize synchronization class
            synchronization = smmOutlookSync::construct(smmOutlookMappingTypes::Tasks, ctrlUserIdTxt.text());
            synchronization.init(true,ctrlOutlookUsrTxt.text(), outlookUserEntryID, outlookUserEmailId);

            exchangeFolderType = smmOutlookMappingTypes::Tasks;
            smmUtility::openMenuItemForm(menuitemDisplayStr(smmEwsFolderPicker), null, this.formRun());
            ctrlOutlookTaskFolderTxt.text(exchangeUserSelection.OutlookTaskFolderName);

            // In outlook these are different for different user profiles on the machine but for exchange server these are same.
            outlookTaskFolderEntryID = exchangeUserSelection.OutlookTaskOutlookEntryID;
            outlookTaskFolderStoreID = exchangeUserSelection.OutlookTaskOutlookEntryID;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PickCalendarOutlookFolder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            smmOutlookSync_Appointment  synchronization;
            OutlookUserSetup            outlookUserSetup;

            // Initialize synchronization class
            synchronization = smmOutlookSync::construct(smmOutlookMappingTypes::Appointments, ctrlUserIdTxt.text());
            synchronization.init(true,ctrlOutlookUsrTxt.text(), outlookUserEntryID, outlookUserEmailId);

            exchangeFolderType = smmOutlookMappingTypes::Appointments;
            smmUtility::openMenuItemForm(menuitemDisplayStr(smmEwsFolderPicker), null, this.formRun());
            ctrlOutlookCalendarFolderTxt.text(exchangeUserSelection.OutlookCalendarFolderName);

            // In outlook these are different for different user profiles on the machine but for exchange server these are same.
            outlookCalendarFolderEntryID = exchangeUserSelection.OutlookCalendarOutlookEntryID;
            outlookCalendarFolderStoreID = exchangeUserSelection.OutlookCalendarOutlookEntryID;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearOutlookFolders</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Should Outlook folders be cleared?
            if (Box::yesNo("@SYS90820", DialogButton::Yes, "@SYS90642") == DialogButton::Yes)
            {
                // Clear contact folder
                ctrlOutlookContactFolderTxt.text('');
                outlookContactFolderEntryID = '';
                outlookContactFolderStoreID = '';

                // Clear task folder
                ctrlOutlookTaskFolderTxt.text('');
                outlookTaskFolderEntryID = '';
                outlookTaskFolderStoreID = '';

                // Clear calendar folder
                ctrlOutlookCalendarFolderTxt.text('');
                outlookCalendarFolderEntryID = '';
                outlookCalendarFolderStoreID = '';
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS336173</Caption>
		<Pattern xmlns="">Wizard</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Wizard</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Welcome</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction</Name>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text></Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body</Name>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FormStaticTextControl1</Name>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SalesAndMarketing:ExchangeWizardIntro</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS27227</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>UserMapping</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction0</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS81135</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body1</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>UserMapping1</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>ctrlWorkerTxt</Name>
												<AlignControl>No</AlignControl>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Skip>Yes</Skip>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ctrlWorkerTxt_DirPerson_FK_Name</Name>
														<DataRelationPath>DirPerson_FK</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
												<ReplacementFieldGroup>Person</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
										<BottomMargin>20</BottomMargin>
										<BottomMarginMode>Fixed</BottomMarginMode>
										<Caption>@SYS81143</Caption>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>UserMapping2</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlUserIdTxt</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>UserId</ExtendedDataType>
												<Label>@sys4517</Label>
											</AxFormControl>
										</Controls>
										<BottomMargin>20</BottomMargin>
										<BottomMarginMode>Fixed</BottomMarginMode>
										<Caption>@SYS81144</Caption>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ExchangeServerSettings</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlExchangeServerUrl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SalesAndMarketing:ExchangeWebServicesURL</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlExchangeMailId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYP4860462</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<Caption>@SYP4860451</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS81134</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OutlookSync</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1700091219</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction2</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS81132</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body3</Name>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl3</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlOutlookUsrTxt</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>smmOutlookUserId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>UseCurrentOutlookProfile</Name>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS86550</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYP4860480</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl1</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlOutlookContactFolderTxt</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>smmOutlookContactFolderName</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PickContactOutlookFolder</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS86551</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYP4860481</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl2</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlOutlookTaskFolderTxt</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>smmOutlookTaskFolderName</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PickTaskOutlookFolder</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS87067</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYP4860482</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl4</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlOutlookCalendarFolderTxt</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>smmOutlookCalendarFolderName</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PickCalendarOutlookFolder</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS87066</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYP4860483</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ClearOutlookFolders</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS90643</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYP4860484</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SynchronizeDaysBack</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_SalesAndMarketing:smmEmplOutlookSetupWizard_SynchronizeDaysBack</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>smmSynchronizeDayBack</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SynchronizeDaysForward</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_SalesAndMarketing:smmEmplOutlookSetupWizard_SynchronizeDaysForward</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>smmSynchronizeDaysForward</ExtendedDataType>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYP4860497</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>End</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1923787432</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction4</Name>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body5</Name>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ctrlEndTxt1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYP4860082</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>