<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailPrintLabels</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailPrintLabels extends FormRun
{
    PurchTable              purchTable;
    PurchId                 purchId;
    ParmId                  parmId;
    FormDataSource          formDS;
    RecordSortedList        vendPackingSlipJour;
    RecordSortedList        inventTransferParmTable;

    RetailLabelTypeBase     labelType;
    InventDimCtrl_Frm_RetailLabel inventdimFormSetup;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Form    callerForm;
        TableId callerTableId;
        #define.columnValue(8)
        super();

        if (!element.args().caller())
            throw error("@SYS22539");

        callerForm = element.args().caller().form();
        labelType  = element.args().parmEnum();

        if (element.args() && callerForm)
        {
            callerTableId = element.args().dataset();
            switch (callerTableId)
            {
                case tableNum(PurchLine):
                    formDS= FormDataUtil::getFormDataSource(element.args().record());
                        break;
                case tableNum(PurchTable):
                    formDS= FormDataUtil::getFormDataSource(element.args().record());
                        break;
                case tableNum(VendPackingSlipJour):
                        vendPackingSlipJour = element.args().parmObject();
                        break;
                case tableNum(InventTransferParmTable):
                        inventTransferParmTable = element.args().parmObject();
                        break;
                case tableNum(InventTable):
                    formDS = FormDataUtil::getFormDataSource(element.args().record());
                        AddProductsButton.enabled(true);
                        break;
            }
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);
        ProductsGrid.visibleColsValue(#columnValue+conLen(inventdimFormSetup.dimFieldsActive(inventdimFormSetup.parmDimParmVisibleGrid())));

        element.initializeFromCallerForm(callerForm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTableLines</Name>
				<Source><![CDATA[
    private void initFromInventTableLines()
    {
        EcoResProduct   ecoResProduct;
        InventTable     inventTableLocal;

        for (inventTableLocal = formDS.getFirst(true) ? formDS.getFirst(true) : formDS.cursor();
        inventTableLocal;
        inventTableLocal = formDS.getNext())
        {
            while select ecoResProduct
                    where ecoResProduct.recid == inventTableLocal.Product
            {
                this.loadLines(ecoResProduct,
                            InventTableModule::find(TmpAddProducts.ItemId,ModuleInventPurchSales::Sales).UnitId,
                            1,
                            InventDim::findOrCreate(inventDim).inventDimId,
                            '',
                            '',
                            '',
                            true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferParmLine</Name>
				<Source><![CDATA[
    private void initFromInventTransferParmLine(RecordSortedList _recordSortedList)
    {
        InventTransferParmLine      inventTransferParmLineTmp;
        inventTransferParmTable     curInventTransParmTable;
        EcoResProduct               ecoResProduct;
        InventTable                 inventTable;
        InventTransferTable         inventTransferTable;
        InventDim                   inventDimTmp;

        boolean haveMore = _recordSortedList.first(curInventTransParmTable);

        while (haveMore)
        {
            while select ItemId, QtyShipNow,QtyReceiveNow,InventDimId,TransferId from inventTransferParmLineTmp
                where inventTransferParmLineTmp.ParmId == curInventTransParmTable.ParmId &&
                      inventTransferParmLineTmp.TransferId == curInventTransParmTable.TransferId
                join product from inventTable
                    where inventTable.ItemId == inventTransferParmLineTmp.ItemId
                join ecoResProduct
                    where ecoResProduct.RecId == inventTable.Product
                join InventLocationIdTo from inventTransferTable
                    where inventTransferTable.TransferId == curInventTransParmTable.TransferId
            {
                inventDimTmp = inventDim::find(inventTransferParmLineTmp.InventDimId);

                // Set To warehouse as default during ship and receive transfer order
                inventDimTmp.InventLocationId = inventTransferTable.InventLocationIdTo;
                inventDimTmp.initFromInventLocation(inventDimTmp.InventLocation());
                inventDimTmp = InventDim::findOrCreate(inventDimTmp);

                this.loadLines(ecoResProduct,
                                '',
                                inventTransferParmLineTmp.QtyShipNow ?inventTransferParmLineTmp.QtyShipNow:inventTransferParmLineTmp.QtyReceiveNow,
                                inventDimTmp.InventDimId,
                                InventDimCombination::findByInventDim(inventTransferParmLineTmp.ItemId, inventDimTmp).RetailVariantId,
                                '',
                                inventTransferParmLineTmp.TransferId);
            }

            haveMore = _recordSortedList.next(curInventTransParmTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    public void initFromPurchLine()
    {
        PurchLine       currentPurchLine;
        EcoResProduct   ecoResProduct;
        InventTable     inventTable;

        for (currentPurchLine = formDS.getFirst(true) ? formDS.getFirst(true): formDS.cursor();
        currentPurchLine;
        currentPurchLine= formDS.getnext())
        {
            select firstOnly ecoResProduct
                join Product from inventTable
                    where ecoResProduct.RecId == inventTable.Product &&
                        inventTable.ItemId == currentPurchLine.ItemId;

            this.loadLines(ecoResProduct,
                            currentPurchLine.PurchUnit,
                            currentPurchLine.PurchQty,
                            currentPurchLine.InventDimId,
                            currentPurchLine.VariantId,
                            currentPurchLine.PurchId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    private void initFromPurchTable()
    {
        PurchTable      currentPurchTable;
        PurchLine       purchLineTmp;
        EcoResProduct   ecoResProduct;
        InventTable     inventTable;

        for (currentPurchTable= formDS.getFirst(true) ? formDS.getFirst(true): formDS.cursor();
            currentPurchTable;
            currentPurchTable= formDS.getnext())
        {
            while select ItemId, PurchQty, InventDimId, PurchId, VariantId from purchLineTmp
                join ItemId from inventTable
                    where purchLineTmp.ItemId == inventTable.ItemId &&
                          purchLineTmp.PurchId == currentPurchTable.PurchId &&
                          purchLineTmp.IsDeleted == NoYes::No
                join  ecoResProduct
                    where ecoResProduct.RecId == inventTable.Product
            {
                this.loadLines(ecoResProduct,
                               purchLineTmp.PurchUnit,
                               purchLineTmp.PurchQty,
                               purchLineTmp.InventDimId,
                               purchLineTmp.VariantId,
                               purchLineTmp.PurchId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendPackingSlipJour</Name>
				<Source><![CDATA[
    private void initFromVendPackingSlipJour(RecordSortedList _vendPackingSlipJour)
    {
        VendPackingSlipJour     vendPackingSlipJourLocal;
        VendPackingSlipTrans    vendPackingSlipTrans;
        PurchLine               purchLine;
        EcoResProduct           ecoResProduct;
        InventTable             inventTable;
        InventTableModule       inventTableModule;

        boolean haveMore = _vendPackingSlipJour.first(vendPackingSlipJourLocal);

        // Loop all VendPackingSlipJour records during one posting product receipt
        while (haveMore)
        {
            // Retrieve available vendPackingSlipTrans records to be printed during posting
            while select Qty, inventdimId from vendPackingSlipTrans
                where vendPackingSlipTrans.VendPackingSlipJour == vendPackingSlipJourLocal.RecId
                join VariantId, PurchUnit from purchLine
                    where purchLine.InventTransId == vendPackingSlipTrans.InventTransId
                join RecId from inventTable
                    where inventTable.ItemId == vendPackingSlipTrans.ItemId
                join ecoResProduct
                    where ecoResProduct.RecId == inventTable.Product
                join inventTableModule
                    where inventTableModule.ItemId == inventTable.ItemId &&
                          inventTableModule.ModuleType == ModuleInventPurchSales::Sales
            {
                if (purchLine.orig().PurchUnit != purchLine.PurchUnit)
                {
                    this.loadLines(ecoResProduct,
                            purchLine.PurchUnit,
                            vendPackingSlipTrans.Qty,
                            vendPackingSlipTrans.inventdimId,
                            purchLine.VariantId,
                            vendPackingSlipJourLocal.PurchId,
                            '');
                }
                else
                {
                    this.loadLines(ecoResProduct,
                            inventTableModule.UnitId,
                            vendPackingSlipTrans.Qty,
                            vendPackingSlipTrans.inventdimId,
                            purchLine.VariantId,
                            vendPackingSlipJourLocal.PurchId,
                            '');
                }
            }

            haveMore = _vendPackingSlipJour.next(vendPackingSlipJourLocal);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        if (!inventdimFormSetup)
        {
            inventdimFormSetup = InventDimCtrl_Frm_RetailLabel::newFromForm(element);
            inventdimFormSetup.parmLargeRightClickForm(NoYes::Yes);
        }

        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromCallerForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes product labels from caller form.
    /// </summary>
    /// <param name = "_callerForm">The caller form.</param>
    protected void initializeFromCallerForm(Form _callerForm)
    {
        switch (_callerForm.name())
        {
            case formStr(PurchTable):
                element.initFromPurchLine();
                TmpAddProducts_PurchId.visible(true);
                break;

            case formStr(PurchEditLines):
                element.initFromVendPackingSlipJour(vendPackingSlipJour);
                TmpAddProducts_PurchId.visible(true);
                break;

            case formStr(InventTransferOrders):
            case formStr(WMSJournalTable):
                element.initFromInventTransferParmLine(inventTransferParmTable);
                TmpAddProducts_TransferId.visible(true);
                break;

            case formStr(EcoResProductDetailsExtended):
                inventDim_ds.query().dataSourceTable(tableNum(InventDim)).clearDynalinks();
                element.initFromInventTableLines();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Load lines for specified product.
    /// </summary>
    /// <param name = "_ecoResProduct">The product for which lines to be loaded.</param>
    /// <param name = "_lineUnit">The line unit.</param>
    /// <param name = "_lineQty">The line quantity.</param>
    /// <param name = "_lineInventDimId">The inventory dimension number.</param>
    /// <param name = "_variantID">The variant number.</param>
    /// <param name = "_purchId">The purchase id of the product.</param>
    /// <param name = "_transferId">The transfer number.</param>
    /// <param name = "_isFromReleasedProducts">A <c>Boolean</c> indicating whether the product is from released products.</param>
    protected void loadLines(EcoResProduct      _ecoResProduct,
                            PurchUnit           _lineUnit,
                            Qty                 _lineQty  = 0  ,
                            InventDimId         _lineInventDimId = '',
                            RetailVariantId     _variantID = '',
                            PurchId             _purchId = '',
                            InventTransferId    _transferId = '',
                            boolean             _isFromReleasedProducts = false)
    {
        RetailVariantId     displayVariantId;
        InventItemBarcode   inventItemBarcode;
        InventDim           inventDimTmp;
        RetailInventItemLabelSetup retailInventItemLabelSetup;
        TmpAddProducts.clear();

        TmpAddProducts.EcoResProduct    = _ecoResProduct.RecId;
        TmpAddProducts.Quantity         = _lineQty;
        TmpAddProducts.InventDim        = _lineInventDimId;
        TmpAddProducts.ValidDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        TmpAddProducts.PurchId          = _purchId;
        TmpAddProducts.TransferId       = _transferId;

        TmpAddProducts.ItemId = InventTable::findByProduct(TmpAddProducts.EcoResProduct).ItemId;

        element.updateText1AndText2();

        if (_lineUnit)
        {
            TmpAddProducts.UnitId          = _lineUnit;
        }
        else
        {
            TmpAddProducts.UnitId   = InventTableModule::find(TmpAddProducts.ItemId,ModuleInventPurchSales::Sales).UnitId;
        }

        // Initialize default variant number to be printed in product labels

        inventItemBarcode = InventItemBarcode::findShowForItem(TmpAddProducts.ItemId);
        displayVariantId = inventItemBarcode.RetailVariantId;
        if (_isFromReleasedProducts && displayVariantId)
        {
            TmpAddProducts.VariantId = displayVariantId;
            TmpAddproducts.InventDim = inventItemBarcode.inventDimId;
        }
        else if (_variantId)
        {   // Pre-populate the UI variant ID with the value provided from the PO
            TmpAddProducts.VariantId = _variantId;
        }

        // Initialize default store number to be printed from purchase orders/transfer orders
        inventDimTmp = InventDim::find(_lineInventDimId);
        if (!_isFromReleasedProducts && inventDimTmp)
        {
            TmpAddProducts.StoreId = TmpRetailLabelsToPrint::getStoreFromWarehouse(inventDimTmp.InventLocationId, inventDimTmp.dataAreaId);
        }

        // The quantity must be positive
        if (TmpAddProducts.Quantity <= 0)
        {
            TmpAddProducts.Quantity = 1;
            checkFailed("@RET4127");
        }

        TmpAddProducts.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>printLabelReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Print product labels based on report name.
    /// </summary>
    /// <param name="_reportName">
    /// Report name.
    /// </param>
    /// <remarks>
    /// Printing product labels.
    /// </remarks>
    public void printLabelReport(str _reportName)
    {
        RetailCreateSpecificLabel   rboCreateSpecificLabel = new RetailCreateSpecificLabel();

        rboCreateSpecificLabel.runForPrint(TmpAddProducts_ds, _reportName, labelType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(InventDimFormDesignUpdate _update)
    {
        switch (_update)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventdimFormSetup)
                {
                    inventdimFormSetup = InventDimCtrl_Frm_RetailLabel::newFromForm(element);
                }
                break;

            case InventDimFormDesignUpdate::Active:
                inventdimFormSetup.formActiveSetup(InventDimGroupSetup::newInventTable(InventTable::findByProduct(TmpAddProducts.EcoResProduct)));
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::FieldChange:
                inventdimFormSetup.formActiveSetup(InventDimGroupSetup::newInventTable(InventTable::findByProduct(TmpAddProducts.EcoResProduct)));
                inventDim.clearNotSelectedDim(inventDimFormSetup.parmDimParmEnabled());
                inventDimFormSetup.formSetControls(true);
                break;

            default:
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLabels</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a specified record in the <c>RetailInventItemLabelReportSetup</c> table exists.
    /// And checks if any products are selected for label printing.
    /// </summary>
    /// <returns>
    /// Return true, if the specified record is exists in <c>RetailInventItemLabelReportSetup</c>table.
    /// And the products are selected for label printing; othrerwise return false.
    /// </returns>
    [Wrappable(true)]
    protected final boolean checkLabels()
    {
        boolean checkLabel = true;

        if (!RetailInventItemLabelReportSetup::exist(labelType, reportName.valueStr()))
        {
            checkLabel = checkFailed(strFmt("@RET4126", labelType));
        }

        if (!tmpAddProducts && checkLabel)
        {
            checkLabel = checkFailed("@REX4161133");
        }

        return checkLabel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateText1AndText2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a specified record in the <c>RetailInventItemLabelReportSetup</c> table exists.
    /// Updates Text 1 and Text 2 for that record otherwise will assign Product name as Text 1
    /// </summary>
    private void updateText1AndText2()
    {
        RetailInventItemLabelSetup retailInventItemLabelSetup;
        OMOperatingUnit operatingUnit = RetailStoreTable::findOperatingUnit(RetailStoreTable::find(TmpAddProducts.StoreId).RecId);

        select firstonly retailInventItemLabelSetup 
			where retailInventItemLabelSetup.LabelType == labelType
                && retailInventItemLabelSetup.ItemId == TmpAddProducts.ItemId
                && retailInventItemLabelSetup.OMInternalOrganization == operatingUnit.RecId
                && retailInventItemLabelSetup.ReportName == ReportName.valueStr();

        if (retailInventItemLabelSetup)
        {
            TmpAddProducts.Text1 = retailInventItemLabelSetup.Text1;
            TmpAddProducts.Text2 = retailInventItemLabelSetup.Text2;
        }
        else
        {
            TmpAddProducts.Text1 = FeatureStateProvider::isFeatureEnabled(EcoResProductTranslationFallbackFeature::instance()) && EcoResProductParameters::find().UseFallbackTranslation ?
                                   InventTable::find(tmpAddProducts.ItemId).itemName() :  InventTable::find(tmpAddProducts.ItemId).defaultProductName();
                
               
             
            if (TmpAddProducts.Text2)
            {
                TmpAddProducts.Text2 = '';
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpAddProducts</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            tmpAddProducts_ds.query().dataSourceTable(tableNum(TmpRetailLabelsToPrint)).addOrderByField(fieldNum(TmpRetailLabelsToPrint, SequenceNumber));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int                     ret;
            InventTableExpanded     inventTableExpanded;

            ret = super();
            element.updateDesign(InventDimFormDesignUpdate::Active);

            inventdim_ds.active();

            // Check TmpAddProducts_VaiantId enable to edit
            select firstOnly ProductSubtype from inventTableExpanded
                where inventTableExpanded.ItemId == tmpAddProducts.ItemId;

            TmpAddProducts_VaiantId.enabled(inventTableExpanded.ProductSubtype == EcoResProductSubtype::ProductMaster);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateLines</Name>
						<Source><![CDATA[
        void updateLines(Map _map)
        {
            MapIterator mapIterator = new MapIterator(_map);
            RecId       recId;
            TmpRetailProductsToAdd  tmpProductsToAddInsert;

            while (mapIterator.more())
            {
                recId                       =   mapIterator.key();
                tmpProductsToAddInsert      =   mapIterator.value();

                select forupdate tmpAddProducts
                    where tmpAddProducts.RecId == recId;

                tmpAddProducts.TableRefRecId = tmpProductsToAddInsert.RecId;
                TmpAddProducts.SequenceNumber = tmpProductsToAddInsert.sequenceNum;
                tmpAddProducts.update();

                mapIterator.next();
            }

            tmpAddProducts_ds.research();
        }

]]></Source>
					</Method>
					<Method>
						<Name>removeLines</Name>
						<Source><![CDATA[
        void  removeLines(Set _recIdSet)
        {
            SetEnumerator setEnum = _recIdSet.getEnumerator();
            RecId recId;

            while (setEnum.moveNext())
            {
                recId = setEnum.current();
                delete_from tmpAddProducts where tmpAddProducts.RecId == recId;
            }

            tmpAddProducts_ds.research();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reReadLines</Name>
						<Source><![CDATA[
        void  reReadLines(RecordSortedList _recordList)
        {
            TmpRetailProductsToAdd  tmpProductsToAdd;
            boolean                 haveMoreValue = _recordList.first(tmpProductsToAdd);
            RetailVariantId         retailVariantId;
            RetailStoreId           headerStoreId;

            // Get the header store Id to update in the lines that have store Id missing.
            headerStoreId = this.formRun().control(this.formRun().controlId('StoreId')).valueStr();

            while (haveMoreValue)
            {
                select forupdate tmpAddProducts
                    where   tmpAddProducts.TableRefRecId    == tmpProductsToAdd.RecId
                       &&   tmpAddProducts.SequenceNumber   == tmpProductsToAdd.sequenceNum;

                retailVariantId = InventDimCombination::find(tmpProductsToAdd.ItemId, tmpProductsToAdd.InventDim).RetailVariantId;

                if (tmpAddProducts.RecId)
                {
                    tmpAddProducts.Quantity = tmpProductsToAdd.Quantity;
                    tmpAddProducts.VariantId = retailVariantId;
                    tmpAddProducts.InventDim = tmpProductsToAdd.InventDim;
                    tmpAddProducts.TableRefRecId = 0;

                    // If the line does not have a store Id, update it with the header store id.
                    if (tmpAddProducts.StoreId == '')
                    {
                        tmpAddProducts.StoreId = headerStoreId;
                    }

                    element.updateText1AndText2();

                    tmpAddProducts.update();
                }
                else
                {
                    delete_from tmpAddProducts
                        where tmpAddProducts.TableRefRecId    == tmpProductsToAdd.RecId;

                    tmpAddProducts.clear();
                    tmpAddProducts.EcoResProduct = tmpProductsToAdd.EcoResProduct;
                    tmpAddProducts.ItemId   = tmpProductsToAdd.ItemId;
                    tmpAddProducts.Quantity = tmpProductsToAdd.Quantity!=0 ? tmpProductsToAdd.Quantity: 1;
                    tmpAddProducts.VariantId = retailVariantId;
                    tmpAddProducts.UnitId   = InventTableModule::find(tmpAddProducts.ItemId,ModuleInventPurchSales::Sales).UnitId;
                    TmpAddProducts.SequenceNumber = tmpProductsToAdd.sequenceNum;
                    tmpAddProducts.ValidDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    tmpAddProducts.InventDim = tmpProductsToAdd.InventDim;

                    // Update it with the header store id.
                    tmpAddProducts.StoreId = headerStoreId;  

                    element.updateText1AndText2();

                    tmpAddProducts.insert();
                }
                haveMoreValue   = _recordList.next(tmpProductsToAdd);
            }

            tmpAddProducts_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign(InventDimFormDesignUpdate::FieldChange);
                inventDim.clearNotSelectedDim(element.inventDimSetupObject().parmDimParmEnabled());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (this.getValue() <= 0)
                {
                    ret = checkFailed("@RET4127");
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StoreId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // When user changes Store, the warehouse should be mapped appropriately.
                InventDim.InventLocationId = RetailStoreTable::find(tmpAddProducts.StoreId).InventLocation;
                InventDim.initFromInventLocation(InventDim.inventLocation());

                tmpAddProducts.InventDim = InventDim::findOrCreate(InventDim).inventDimId;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VariantId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                InventDim   combInventDim;
                super();

                combInventDim = InventDimCombination::findVariantId(tmpAddProducts.VariantId).inventDim();
                if (combInventDim)
                {
                    inventDim.InventSizeId  = combInventDim.InventSizeId;
                    inventDim.InventColorId = combInventDim.InventColorId;
                    inventDim.InventStyleId = combInventDim.InventStyleId;
                    inventDim.InventVersionId = combInventDim.InventVersionId;
                    inventDim.ConfigId      = combInventDim.ConfigId;

                    tmpAddProducts.InventDim    = InventDim::findOrCreate(inventDim).InventDimId;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ReportName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(RetailInventItemLabelReportSetup), this);
            query                   query = new query();

            sysTableLookup.addLookupfield(fieldNum(RetailInventItemLabelReportSetup, ReportName));

            query.addDataSource(tablenum(RetailInventItemLabelReportSetup));
            query.dataSourceTable(tableNum(RetailInventItemLabelReportSetup)).addRange(fieldNum(RetailInventItemLabelReportSetup, Type)).value(queryValue(labelType));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();

            element.updateText1AndText2();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StoreId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            RetailStoreId storeNumber;
            TmpRetailLabelsToPrint localTmpRetailLabelsToPrint;
    
            ret = super();

            // Storing the store id from header lookup.
            storeNumber = this.valueStr();
            // Read the latest updated tmpAddProducts datasource (As user is allowed to edit the store for each product as well). 
            tmpAddProducts_ds.reread();
            localTmpRetailLabelsToPrint.setTmpData(tmpAddProducts);
           
            ttsbegin;
            update_recordset localTmpRetailLabelsToPrint
            setting StoreId = storeNumber;
            ttscommit;
            
            tmpAddProducts_ds.research();
            
            element.updateText1AndText2();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            RetailLabelValidOnDate validDateUpdated;
            TmpRetailLabelsToPrint localTmpRetailLabelsToPrint;

            ret = super();
        
            // Storing the valid date from header lookup.
            validDateUpdated = str2Date(this.valueStr(), 321);

            if (validDateUpdated != dateNull()
                && Box::yesNo("@KB_4294262:PrintLabelsValidateChangeWarning", DialogButton::Yes) == DialogButton::Yes)
            {
                // Read the latest updated tmpAddProducts datasource (As user is allowed to edit the valid date for each product as well).
                tmpAddProducts_ds.reread();

                localTmpRetailLabelsToPrint.setTmpData(tmpAddProducts);

                ttsbegin;
                update_recordset localTmpRetailLabelsToPrint
                setting ValidDate = validDateUpdated;
                ttscommit;

                tmpAddProducts_ds.research();
            }
                    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpAddProducts_StoreId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            element.updateText1AndText2();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpAddProducts_VaiantId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FormRun formRun = ClassFactory.formRunClass(new Args(formstr(RetailVariantLookup)));

            formRun.args().parm(TmpAddProducts.ItemId);
            formRun.args().caller(TmpAddProducts_VaiantId);
            formRun.init();

            TmpAddProducts_VaiantId.performFormLookup(formRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkCommandButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            boolean checkError = element.checkLabels();

            if (!checkError)
            {
                return;
            }

            element.printLabelReport(reportName.valueStr());

            if (!tmpAddProducts)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpAddProducts</Name>
			<Table>TmpRetailLabelsToPrint</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDim</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SequenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Text1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Text2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VariantId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TmpAddProducts</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RET3836</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">TmpAddProducts</TitleDataSource>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AddProductsGrid</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ActionPane</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneTabControl">
								<Name>ActionPaneTab</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ActionPaneTab</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>AddProductsButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataSource>TmpAddProducts</DataSource>
												<MenuItemName>RetailAddProducts</MenuItemName>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>New</NormalImage>
												<Text>@SYS132109</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>RemoveCommandButton</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<NormalImage>Delete</NormalImage>
												<SaveRecord>No</SaveRecord>
												<Text>@RET5135</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>MenuItemButton</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<DataSource>TmpAddProducts</DataSource>
												<MenuItemName>InventDimParmFixed</MenuItemName>
												<NormalImage>Details</NormalImage>
												<Text>@SYS5951</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Paramters</Name>
						<ElementPosition>536870911</ElementPosition>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<FilterExpression>%1</FilterExpression>
						<Pattern>CustomFilters</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReportName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>RetailReportName</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>StoreId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>RetailStoreId</ExtendedDataType>
								<Label>@Retail:RetailDefaultStoreNumber</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ValidDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>RetailLabelValidOnDate</ExtendedDataType>
								<Label>@REX4161299</Label>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ProductsGrid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_StoreId</Name>
								<ElementPosition>115689354</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>StoreId</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_PurchId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>173534032</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchId</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_TransferId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>260301048</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransferId</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>TmpAddProducts_EcoResProduct</Name>
								<ElementPosition>471795649</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpAddProducts_EcoResProduct_DisplayProductNumber</Name>
										<DataRelationPath>EcoResProduct</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>TmpAddProducts</DataSource>
								<Label>@SYS133863</Label>
								<ReferenceField>EcoResProduct</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_text1</Name>
								<ElementPosition>723962289</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Text1</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_VaiantId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>VariantId</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InventoryDimensions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventSiteId</Name>
										<ElementPosition>286331152</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventLocationId</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventProfileId_RU</Name>
										<ElementPosition>572662304</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventProfileId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventOwnerId_RU</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventOwnerId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_inventBatchId</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventBatchId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_wMSLocationId</Name>
										<ElementPosition>1002159032</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>wMSLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_inventSerialId</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventSerialId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventStatusId</Name>
										<ElementPosition>1336212042</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStatusId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_LicensePlateId</Name>
										<ElementPosition>1383933900</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LicensePlateId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventGtdId_RU</Name>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventGtdId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_configId</Name>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>configId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventSizeId</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSizeId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventColorId</Name>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventColorId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventStyleId</Name>
										<ElementPosition>2004318064</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStyleId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventoryDimensions_InventVersionId</Name>
										<ElementPosition>2004318064</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventVersionId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataGroup>InventoryDimensions</DataGroup>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_UnitId</Name>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>UnitId</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TmpAddProducts_Quantity</Name>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Quantity</DataField>
								<DataSource>TmpAddProducts</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>TmpAddProducts_ValidOnDate</Name>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ValidDate</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TmpAddProducts_text2</Name>
								<ElementPosition>1952257860</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Text2</DataField>
								<DataSource>TmpAddProducts</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>TmpAddProducts</DataSource>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ComButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkCommandButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelCommandButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>