<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustPaymIdRefLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
/// <summary>
/// The CustPaymIdRefLookup form returns a specific CustTransOpen record.
/// </summary>
/// <remarks>
/// The initFromCustTransOpen method on the data source of the
/// LedgerJournalTrans table is called to return the selected information.
/// </remarks>
public class CustPaymIdRefLookup extends FormRun
{
    private FormRun callingForm;

}
]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Builds the query.
    /// </summary>
    protected void buildQuery()
    {
        Query q;
        QueryBuildDataSource ds;
       
        q = custTransOpenView_ds.query();
        q = this.addCrossCompanyRanges(q);

        ds = q.dataSourceTable(tablenum(CustOpenTransWithIdRef));
        ds.addRange(fieldnum(CustOpenTransWithIdRef, TransRefType)).value('!' + queryValue(CustTransRefType::BillOfExchange));
        ds.addOrderByField(fieldnum(CustOpenTransWithIdRef, TransRefId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCrossCompanyRanges</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds cross company ranges on query.
    /// </summary>
    /// <param name = "_query">
    ///     The <c>Query</c> object.
    /// </param>
    /// <returns>
    ///     The <c>Query</c> object.
    /// </returns>
    protected Query addCrossCompanyRanges(Query _query)
    {
        CompanyId company;
        container sharedCompanyList = CustVendOpenTransManager::findSharedServiceCompanies(curext());
        _query.allowCrossCompany(true);

        for (int i = 1; i <= conlen(sharedCompanyList); i++)
        {
            company = conpeek(sharedCompanyList, i);

            _query.addCompanyRange(company);
        }

        return _query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    /// <summary>
    /// Passes the selected CustTransOpen record to the calling form through the
    /// data source of the LedgerJournalTrans tale.
    /// </summary>
    /// <param name="_selectString">
    /// The select string value.
    /// </param>
    /// <remarks>
    /// The initFromCustTransOpen method on the data source of the
    /// LedgerJournalTrans table is called to return the selected information.
    /// </remarks>
    public void closeSelect(str _selectString)
    {
        super(_selectString);

        CustPaymISearchReference caller = callingForm as CustPaymISearchReference;

        if (caller)
        {
            caller.custOpenTransUsedInSearchByTransaction(custTransOpenView);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the CustPaymIdRefLookup form.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// The LedgerJournalTrans table was not an argument.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// The LedgerJournalTrans table argument is a data source.
    /// </exception>
    public void init()
    {
        super();

        if (this.args() != null && this.args().caller() != null && this.args().caller().name() == formStr(CustPaymEntry))
        {
            callingForm = this.args().caller();
        }
        else
        {
            throw error(Error::missingParameter(callingForm));
        }

        // set the field returned from the lookup
        this.selectMode(custTransIdRef_TransRefId);

        this.buildQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        FormStringControl callingControl;
        boolean filter = false;
        str searchText;

        #define.WildCard('*')
        callingControl = SysTableLookup::getCallerStringControl(element.args());
        searchText = callingControl.text();

        if ((strlen(searchText) != 0) && callingControl.hasChanged())
        {
            // do this manually because the requirements for this lookup require
            // it to automatically add the wildcard if the user doesn't enter it
            custTransOpenView_ds.autoSearch(false);

            filter = true;
        }

        super();

        if (filter)
        {
            custTransOpenView_ds.queryRun(new SysQueryRun(custTransOpenView_q));

            if (strfind(searchText, #WildCard, 1, strlen(searchText)) == 0)
            {
                // add the wildcard if it isn't there
                searchText = searchText + #WildCard;
            }

            custTransIdRef_TransRefId.filter(searchText);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpenView</Name>
			<Table>CustOpenTransWithIdRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRefType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS102674</Caption>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<TitleDataSource xmlns="">CustTransOpenView</TitleDataSource>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>custTransIdRef_TransRefId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransRefId</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>custTransIdRef_TransRefType</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransRefType</DataField>
						<DataSource>CustTransOpenView</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>custTransOpen_dataAreaId</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>dataAreaId</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>custTransOpen_AccountNum</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustAccount</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustName</Name>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>custTransOpen_DueDate</Name>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>DueDate</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>custTransOpen_AmountCur</Name>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AmountCur</DataField>
						<DataSource>CustTransOpenView</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>DiscAmount</Name>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>DiscAmountCur</DataField>
						<DataSource>CustTransOpenView</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>custTrans_CurrencyCode</Name>
						<ElementPosition>2143289342</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Currency</DataField>
						<DataSource>CustTransOpenView</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>CustTransOpenView</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>