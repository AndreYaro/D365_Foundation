<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ConfDefLayout_BR</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ConfDefLayout_BR extends FormRun implements OfficeIMenuCustomizer
{
    #ConfMacros_BR
    ConfLayoutGroups_BR confLayoutGroups;
    boolean             focusOnFields;

    LineNum             minFieldSeq;
    int                 minStartPos;

}
]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        _menuOptions.dataEntityOptions().addEnd(OfficeMenuDataEntityOptions::construct(tableStr(ConfiguratorLayoutFieldEntity)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean             ret;
        ConfLayoutLines_BR  confLayoutLines;
        ConfLayoutFields_BR confLayoutFields;
        int                 totalLayoutLength;
        int                 batchSize;

        ret = super();

        if (ret)
        {
            ret = this.checkRegisterTypeFields();

            if (ret && confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex)
            {
                ret = (this.checkComplexRecordTypeOrder() ? this.checkComplexMissingFields() : false);

                while select LayoutGroupId, LayoutLineNum, BatchLayoutLineType from confLayoutLines
                    order by LayoutLineNum
                        where confLayoutLines.LayoutGroupId == confLayoutGroups.LayoutGroupId
                {
                    while select RecId, Size from confLayoutFields
                        where   confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                            &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                            &&  confLayoutFields.FieldName      == #BatchId
                    {
                        if (confLayoutFields)
                        {
                            if (confLayoutLines.BatchLayoutLineType == ConfBatchLayoutLineType_BR::FileHeader)
                            {
                                batchSize = confLayoutFields.Size;
                            }
                            else if (confLayoutFields.Size != batchSize)
                            {
                                ret = checkFailed("@GLS1316");
                                break;
                            }
                        }
                    }
                }
            }
            else if (ret && confLayoutGroups.FileStructure == ConfFileStructure_BR::Simple)
            {
                ret = this.checkRecordTypeOrder();
            }

            if (ret && confLayoutGroups.LayoutType == ConfLayoutTypesChoice_BR::FixedLength)
            {
                while select LayoutGroupId, LayoutLineNum, ConfRecordLength from confLayoutLines
                    where confLayoutLines.LayoutGroupId == confLayoutGroups.LayoutGroupId
                {
                    confLayoutFields = null;

                    select maxof(EndPosition) from confLayoutFields
                        where   confLayoutFields.LayoutGroupId == confLayoutLines.LayoutGroupId
                            &&  confLayoutFields.LayoutLineNum == confLayoutLines.LayoutLineNum;

                    totalLayoutLength = confLayoutFields.EndPosition;

                    if (totalLayoutLength && confLayoutLines.ConfRecordLength < totalLayoutLength)
                    {
                        ret = checkFailed("@GLS1147");
                    }
                }
            }
        }

        if (ret)
        {
            this.updateFieldSeq();
        }
        else
        {
            confLayoutLines_BR_DS.reSelectLinesCursor(confLayoutLines_BR.LayoutLineNum);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkComplexMissingFields</Name>
				<Source><![CDATA[
    public NoYes checkComplexMissingFields()
    {
        NoYes               ret = NoYes::Yes;
        ConfLayoutLines_BR  confLayoutLines;
        ConfLayoutFields_BR confLayoutFields;

        while select LayoutGroupId,LayoutLineNum,BatchLayoutLineType from confLayoutLines
            order by LayoutLineNum
                where confLayoutLines.LayoutGroupId == confLayoutGroups.LayoutGroupId
        {
            select confLayoutFields
                where   confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                    &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                    &&  confLayoutFields.FieldName      == #BatchId;

            if (!confLayoutFields)
            {
                ret = checkFailed(strFmt("@GLS1320", #BatchId, confLayoutLines.BatchLayoutLineType));
            }

            if (confLayoutLines.BatchLayoutLineType == ConfBatchLayoutLineType_BR::BatchHeader)
            {
                select LayoutGroupId,LayoutLineNum,FieldName from confLayoutFields
                    where   confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                        &&  confLayoutFields.FieldName      == fieldStr(LedgerJournalTransPayment_BR, epPaymentType_BR);

                if (!confLayoutFields)
                {
                    ret = checkFailed(strFmt("@GLS1320", fieldPName(LedgerJournalTransPayment_BR, epPaymentType_BR), ConfBatchLayoutLineType_BR::BatchHeader));
                }

                select confLayoutFields
                    where   confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                        &&  confLayoutFields.FieldName      == fieldStr(LedgerJournalTransPayment_BR, epPaymentWay_BR);

                if (!confLayoutFields)
                {
                    ret = checkFailed(strFmt("@GLS1320", fieldPName(LedgerJournalTransPayment_BR, epPaymentWay_BR), ConfBatchLayoutLineType_BR::BatchHeader));
                }
            }

            if (confLayoutLines.BatchLayoutLineType == ConfBatchLayoutLineType_BR::Details)
            {
                select confLayoutFields
                    where confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                        && confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                        &&
                            (confLayoutFields.TableName == tableStr(CustPaymModeSpec)
                                && (confLayoutFields.FieldName == fieldStr(CustPaymModeSpec, EPSegment_BR)
                                    || confLayoutFields.FieldName == fieldStr(CustPaymModeSpec, EPSegmentReturn_BR))
                            )
                            ||
                            (confLayoutFields.TableName == tableStr(VendPaymModeSpec)
                                && confLayoutFields.FieldName == fieldStr(VendPaymModeSpec, EPSegment_BR)
                            );

                if (!confLayoutFields)
                {
                    ret = checkFailed(strFmt("@GLS1320", fieldPName(EPSegmentTable_BR, epSegment_BR), ConfBatchLayoutLineType_BR::Details));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkComplexRecordTypeOrder</Name>
				<Source><![CDATA[
    public NoYes checkComplexRecordTypeOrder()
    {
        NoYes               ret = NoYes::Yes;
        ConfLayoutLines_BR  confLayoutLinesloc;
        container           lineType;
        int                 i;

        while select LayoutGroupId,BatchLayoutLineType from confLayoutLinesloc
            order by LayoutLineNum
                where confLayoutLinesloc.LayoutGroupId == confLayoutLines_BR.LayoutGroupId
        {
            lineType += confLayoutLinesloc.BatchLayoutLineType;
        }

        if (lineType)
        {
            if (!conFind(lineType, ConfBatchLayoutLineType_BR::FileHeader))
            {
                return checkFailed(strFmt("@GLS1312", ConfBatchLayoutLineType_BR::FileHeader));
            }

            if (!conFind(lineType, ConfBatchLayoutLineType_BR::BatchHeader))
            {
                return checkFailed(strFmt("@GLS1312", ConfBatchLayoutLineType_BR::BatchHeader));
            }

            if (!conFind(lineType, ConfBatchLayoutLineType_BR::Details))
            {
                return checkFailed(strFmt("@GLS1312", ConfBatchLayoutLineType_BR::Details));
            }

            if (conPeek(lineType, 1) != ConfBatchLayoutLineType_BR::FileHeader)
            {
                return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
            }

            if (conPeek(lineType, 2) != ConfBatchLayoutLineType_BR::BatchHeader)
            {
                return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
            }

            for (i = 3; i <= conLen(lineType); i++)
            {
                switch (conPeek(lineType, i))
                {
                    case ConfBatchLayoutLineType_BR::FileHeader:
                        if (conPeek(lineType, 1) != ConfBatchLayoutLineType_BR::FileHeader)
                        {
                            return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
                        }
                        else
                        {
                            return checkFailed(strFmt("@GLS1323", ConfBatchLayoutLineType_BR::FileHeader, i));
                        }

                    case ConfBatchLayoutLineType_BR::BatchHeader:
                        if (conPeek(lineType, 2) != ConfBatchLayoutLineType_BR::BatchHeader)
                        {
                            return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
                        }
                        else
                        {
                            return checkFailed(strFmt("@GLS1323", ConfBatchLayoutLineType_BR::BatchHeader, i));
                        }

                    case ConfBatchLayoutLineType_BR::Details:
                        if (conPeek(lineType, i - 1) != ConfBatchLayoutLineType_BR::Details &&
                            conPeek(lineType, i - 1) != ConfBatchLayoutLineType_BR::BatchHeader)
                        {
                            return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
                        }
                        break;

                    case ConfBatchLayoutLineType_BR::BatchTrailer:
                        if (conPeek(lineType, i - 1) != ConfBatchLayoutLineType_BR::Details)
                        {
                            return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
                        }
                        break;

                    case ConfBatchLayoutLineType_BR::FileTrailer:
                        if (conPeek(lineType, i - 1) != ConfBatchLayoutLineType_BR::BatchTrailer &&
                            conPeek(lineType, i - 1) != ConfBatchLayoutLineType_BR::Details)
                        {
                            return checkFailed(strFmt("@GLS1322" ,"@GLS1303", "@GLS1304" , "@SYS8811" , "@GLS1305" , "@GLS1306"));
                        }
                        break;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRecordTypeOrder</Name>
				<Source><![CDATA[
    public NoYes checkRecordTypeOrder()
    {
        ConfLayoutLines_BR  confLayoutLines;
        int                 newCheck;
        int                 oldCheck = 0;
        NoYes               ret = NoYes::Yes;

        while select LayoutLineType from confLayoutLines
            order by LayoutLineNum
                where confLayoutLines.LayoutGroupId == confLayoutLines_BR.LayoutGroupId
        {
            if (confLayoutLines.LayoutLineType == ConfLayoutLineType_BR::Header)
            {
                newCheck = 1;
            }
            else if (confLayoutLines.LayoutLineType == ConfLayoutLineType_BR::Detail)
            {
                newCheck = 2;
            }
            else
            {
                newCheck = 3;
            }

            if (oldCheck > newCheck)
            {
                ret = checkFailed("@GLS1185");
                break;
            }

            oldCheck = newCheck;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRegisterTypeFields</Name>
				<Source><![CDATA[
    public NoYes checkRegisterTypeFields()
    {
        NoYes               retval = NoYes::Yes;
        ConfLayoutLines_BR  confLayoutLines;
        ConfLayoutFields_BR confLayoutFields;

        if (ConfLayoutGroups_BR::find(confLayoutLines_BR.LayoutGroupId).ConfRegisterType)
        {
            while select LayoutGroupId, LayoutLineNum, BatchLayoutLineType, LayoutLineType from confLayoutLines
                where confLayoutLines.LayoutGroupId == confLayoutGroups.LayoutGroupId
            {
                select RecId from confLayoutFields
                    where   confLayoutFields.LayoutGroupId  == confLayoutLines.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                        &&  confLayoutFields.FieldName      == #RegisterType;

                if (!confLayoutFields)
                {
                    if (confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex)
                    {
                        retval = checkFailed(strFmt("@GLS1193", confLayoutLines.BatchLayoutLineType));
                    }
                    else
                    {
                        retval = checkFailed(strFmt("@GLS1193", confLayoutLines.LayoutLineType));
                    }
                }
            }
        }

        return retval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields</Name>
				<Source><![CDATA[
    public void enableFields()
    {
        boolean value;

        value = (confLayoutGroups.LayoutType == ConfLayoutTypesChoice_BR::FixedLength);

        confLayoutFields_EndPosition    .visible(value);
        confLayoutFields_Size           .visible(value);
        confLayoutFields_StartPos       .visible(value);
        confLayoutFields_FieldFill      .visible(value);
        confLayoutFields_Justifiy       .visible(value);
        confLayoutFields_TruncateField  .visible(value);

        value = (confLayoutGroups.FileStructure == ConfFileStructure_BR::Simple);

        confLayoutLines_LayoutLineType          .visible(value);
        confLayoutLines_LayoutLineType          .enabled(value);
        confLayoutLines_BatchLayoutLineType     .visible(!value);
        confLayoutLines_BatchId                 .visible(!value);
        confLayoutLines_Hide                    .visible(!value);
        detailsConfLayoutLines_LayoutLineType   .visible(value);
        detailsConfLayoutLines_LayoutLineType   .enabled(value);
        detailsConfLayoutLines_BatchLayLineType .visible(!value);
        detailsConfLayoutLines_BatchId          .visible(!value);
        detailsConfLayoutLines_Hide             .visible(!value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (    element.args()
            &&  element.args().record()
            &&  element.args().dataset() == tableNum(ConfLayoutGroups_BR))
        {
            confLayoutGroups = element.args().record();
            confLayoutGroups.selectForUpdate(true);
        }
        else
        {
            throw error(strFmt("@SYS22678", this.name()));
        }

        super();

        if (confLayoutGroups.LayoutType != ConfLayoutTypesChoice_BR::FixedLength)
        {
            confLayoutLines_Size.visible(false);
            layoutTotalLength.visible(false);
        }

        registerType.value(confLayoutGroups.ConfRegisterType);

        element.enableFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        int ret;

        ret = super(_taskId);

        if (ret && _taskId == #taskDeleteRecord)
        {
            ttsbegin;

            minFieldSeq = 0;
            minStartPos = 0;

            layoutTotalLength.value(confLayoutFields_BR_DS.recordLength());

            ttscommit;

            confLayoutFields_BR_ds.reSelectFieldsCursor(minFieldSeq);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFieldSeq</Name>
				<Source><![CDATA[
    public void updateFieldSeq()
    {
        int                 fieldSeq = 1;
        ConfLayoutLines_BR  confLayoutLines;
        ConfLayoutFields_BR confLayoutFields;

        ttsbegin;

        while select LayoutLineNum from confLayoutLines
            where confLayoutLines.LayoutGroupId == confLayoutLines_BR.LayoutGroupId
        {
            fieldSeq = 1;
            while select forupdate confLayoutFields
                order by FieldSeq
                    where   confLayoutFields.LayoutGroupId == confLayoutLines_BR.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum == confLayoutLines.LayoutLineNum
            {
                confLayoutFields.FieldSeq = fieldSeq;
                confLayoutFields.update();
                fieldSeq++;
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFieldValueSummaryStatus</Name>
				<Source><![CDATA[
    public void updateFieldValueSummaryStatus()
    {
        boolean canHaveValue    =   !(confLayoutFields_BR.isDateOrTime()
                                    ||  (confLayoutFields_BR.isBatchID()
                                        && confLayoutLines_BR.isBatch()));

        boolean canHaveSummary  =   confLayoutFields_BR.isNumeric()
                                    && confLayoutLines_BR.isTrailer(confLayoutGroups);

        confLayoutFields_BR_DS.object(fieldNum(ConfLayoutFields_BR, Value       )).allowEdit(canHaveValue);
        confLayoutFields_BR_DS.object(fieldNum(ConfLayoutFields_BR, Summaryfield)).allowEdit(canHaveSummary);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromLines</Name>
				<Source><![CDATA[
    public void updateFromLines(LineNum   _lineNum, ConfLayoutGroupId_BR  _confLayoutGroupId)
    {
        ConfLayoutFields_BR   confLayoutFields;

        ttsbegin;

        while select forupdate confLayoutFields
            where   confLayoutFields.LayoutGroupId == _confLayoutGroupId
                &&  confLayoutFields.LayoutLineNum == _lineNum + 1
        {
            confLayoutFields.LayoutLineNum = confLayoutFields.LayoutLineNum - 1;
            confLayoutFields.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ConfLayoutLines_BR</Name>
				<Methods>
					<Method>
						<Name>refreshLines</Name>
						<Source><![CDATA[
        void refreshLines(LineNum   _lineNum, ConfLayoutGroupId_BR  _confLayoutGroupId_BR)
        {
            ConfLayoutFields_BR  confLayoutFields;

            ttsbegin;

            while select forupdate confLayoutFields
                where   confLayoutFields.LayoutGroupId == _confLayoutGroupId_BR
                    &&  confLayoutFields.LayoutLineNum == _lineNum + 1
            {
                confLayoutFields.LayoutLineNum = confLayoutFields.LayoutLineNum - 1;
                confLayoutFields.update();
            }

            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            real  lineNumber;

            lineNumber = confLayoutLines_BR.LayoutLineNum;

            super();

            this.research();
            this.reSelectLinesCursor(lineNumber);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            LineNum lineNum;

            super();
            lineNum  = confLayoutLines_BR.LayoutLineNum;
            confLayoutLines_BR_DS.research();
            confLayoutLines_BR_DS.reSelectLinesCursor(lineNum);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (confLayoutLines_BR)
            {
                layoutLineUp.enabled  (confLayoutLines_BR.prevNextLine(NextPrevious::Previous).RecId);
                layoutLineDown.enabled(confLayoutLines_BR.prevNextLine(NextPrevious::Next    ).RecId);
            }
            else
            {
                layoutLineUp.enabled(false);
                layoutLineDown.enabled(false);
            }

            this.formRun().lockWindowUpdate(true);

            if (confLayoutGroups.LayoutType == ConfLayoutTypesChoice_BR::FixedLength)
            {
                layoutTotalLength.value(confLayoutFields_BR_DS.recordLength());
            }

            confLayoutFields_BR_DS.active();
            this.formRun().lockWindowUpdate(false);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            confLayoutLines_BR.initFromLayoutGroup(confLayoutGroups);
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reSelectLinesCursor</Name>
						<Source><![CDATA[
        void reSelectLinesCursor(LineNum _lineSequence)
        {
            element.args().lookupRecord(ConfLayoutLines_BR::findRecordType(confLayoutLines_BR.LayoutGroupId, _lineSequence, true));
            confLayoutLines_BR_DS.research(false);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ConfLayoutFields_BR</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            this.reSelectFieldsCursor(confLayoutFields_BR.FieldSeq);
            layoutTotalLength.value(confLayoutFields_BR_DS.recordLength());
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (!minFieldSeq || ConfLayoutFields_BR.FieldSeq < minFieldSeq)
            {
                minFieldSeq    = ConfLayoutFields_BR.FieldSeq;
                minStartPos    = ConfLayoutFields_BR.StartPos;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();
            layoutFieldUp.enabled(false);
            layoutFieldDown.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>recordLength</Name>
						<Source><![CDATA[
        public int recordLength()
        {
            ConfLayoutFields_BR confLayoutFields;
            int                 length = 0;

            while select Size from confLayoutFields
                where    confLayoutFields.LayoutLineNum == confLayoutLines_BR.LayoutLineNum
                    &&  confLayoutFields.LayoutGroupId  == confLayoutGroups.LayoutGroupId
            {
                length = length + confLayoutFields.Size;
            }

            return length;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            ConfLayoutFields_BR confLayoutFields;

            confLayoutFields_BR.initFromLayoutLines(confLayoutLines_BR);

            select reverse firstonly EndPosition from confLayoutFields
                where   confLayoutFields.LayoutLineNum == confLayoutLines_BR.LayoutLineNum
                    &&  confLayoutFields.LayoutGroupId == confLayoutGroups.LayoutGroupId;

            confLayoutFields_BR.StartPos = confLayoutFields.EndPosition + 1;

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int                 ret;
            int                 total = 0;
            ConfLayoutFields_BR confLayoutFields;

            ret = super();

            this.formRun().lockWindowUpdate(true);

            element.enableFields();
            element.updateFieldValueSummaryStatus();

            if (confLayoutFields_BR)
            {
                layoutFieldUp.enabled  (confLayoutFields_BR.prevNextLine(NextPrevious::Previous).RecId);
                layoutFieldDown.enabled(confLayoutFields_BR.prevNextLine(NextPrevious::Next    ).RecId);
            }
            else
            {
                layoutFieldUp.enabled(false);
                layoutFieldDown.enabled(false);
            }

            if (confLayoutGroups.LayoutType == ConfLayoutTypesChoice_BR::FixedLength)
            {
                while select Size from confLayoutFields
                    where   confLayoutFields.LayoutGroupId == confLayoutGroups.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum == confLayoutLines_BR.LayoutLineNum
                {
                    if (confLayoutFields)
                    {
                        total += confLayoutFields.Size;
                    }
                }

                layoutTotalLength.value(total);
            }

            this.formRun().lockWindowUpdate(false);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reSelectFieldsCursor</Name>
						<Source><![CDATA[
        void reSelectFieldsCursor(LineNum _fieldSequence)
        {
            this.research();
            confLayoutFields_BR_DS.setPosition(real2int(_fieldSequence));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>FieldName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateFieldValueSummaryStatus();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                this.performFormLookup(null,_formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>performFormLookup</Name>
								<Source><![CDATA[
            public void performFormLookup(xFormRun _form, FormControl _formControl)
            {
                #ResAppl

                Object                  formRun;
                container               names;
                ConfDefinitions_BR      tableDefinition;
                DictFieldGroup          dictFieldGroup;
                ConfLayoutLines_BR      confLayoutLines;
                ConfLayoutFields_BR     confLayoutFields;
                SysDictField            sysDictField;
                SysDictField            arrayField;
                SysDictTable            dictTable;
                TableId                 tableId = tableName2id(confLayoutFields_BR.TableName);
                int                     i, k;

                formRun = ConfHelpers_BR::createLookup(_formControl);
                formRun.init();

                if (confLayoutFields_BR.TableName == #Command)
                {
                    names = [#Blanks, #Zeros, #Fixed, #Sequence, #SequenceZeroBased, #SystemDate];

                    if (registerType.value())
                    {
                        names += #RegisterType;
                    }

                    if (confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex)
                    {
                        names += #SystemTime;
                    }

                    if (confLayoutLines_BR.isTrailer(confLayoutGroups))
                    {
                        names += #QtdRegistersinBatch_File;
                    }
                }
                else
                {
                    if (confLayoutLines_BR.isTrailer(confLayoutGroups))
                    {
                        while select LayoutLineNum from confLayoutLines
                            where   confLayoutLines.LayoutGroupId           == confLayoutGroups.LayoutGroupId
                                &&  (   confLayoutLines.LayoutLineType      == ConfLayoutLineType_BR::Detail
                                    ||  confLayoutLines.BatchLayoutLineType == ConfBatchLayoutLineType_BR::Details)
                        {
                            while select TableName, FieldName from confLayoutFields
                                where   confLayoutFields.LayoutGroupId  == confLayoutGroups.LayoutGroupId
                                    &&  confLayoutFields.LayoutLineNum  == confLayoutLines.LayoutLineNum
                                    &&  confLayoutFields.TableName      == confLayoutFields_BR.TableName

                            {
                                if (    confLayoutFields.TableName != #Command
                                    &&  confLayoutFields.FieldName
                                    &&  !conFind(names, confLayoutFields.FieldName))
                                {
                                    names += confLayoutFields.FieldName;
                                }
                            }
                        }
                    }
                    else
                    {
                        while select FieldName, FieldGroup from tableDefinition
                            where   tableDefinition.ConfGroupId == confLayoutGroups.ConfGroupId
                                &&  tableDefinition.TableName   == confLayoutFields_BR.TableName
                        {
                            if (tableDefinition.FieldName)
                            {
                                names += tableDefinition.FieldName;
                            }

                            if (tableDefinition.FieldGroup)
                            {
                                dictFieldGroup = new DictFieldGroup(tableId, tableDefinition.FieldGroup);

                                for (i = 1; i <= dictFieldGroup.numberOfFields(); i++)
                                {
                                    sysDictField = new SysDictField(tableId, dictFieldGroup.field(i));
                                    if (sysDictField.arraySize() > 1)
                                    {
                                        for (k = 1; k <= sysDictField.arraySize(); k++)
                                        {
                                            arrayField  = new SysDictField(tableId, sysDictField.id(),k);
                                            dictTable   = new SysDictTable(tableId);
                                            names       += dictTable.fieldName(arrayField.extendedFieldId());
                                        }
                                    }
                                    else
                                    {
                                        names += fieldId2name(tableId, dictFieldGroup.field(i));
                                    }
                                }
                            }
                        }
                    }
                }

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::FileTrailer
                    &&  confLayoutFields_BR.TableName           == #Command)
                {
                    names += #QtdBatches;
                }

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::Details
                    &&  confLayoutFields_BR.TableName           == #Command)
                {
                    names += #BatchRegisterNumber;
                    names += #BatchSequenceNumber;
                }

                if (    confLayoutGroups.FileStructure  == ConfFileStructure_BR::Complex
                    &&  confLayoutFields_BR.TableName   == #Command)
                {
                    names += #BatchId;
                }

                formRun.choices(names, #ImageField);
                super(formRun, _formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                ConfDefinitions_BR      tableDefinition;
                container               names;
                DictFieldGroup          dictFieldGroup;
                ConfLayoutFields_BR     confLayoutFields;
                SysDictField            sysDictField;
                SysDictField            arrayField;
                SysDictTable            dictTable;
                TableId                 tableId = tableName2id(confLayoutFields_BR.TableName);
                int                     i, k;

                if (confLayoutFields_BR.TableName == #Command
                    &&  (   confLayoutFields_BR.FieldName == #Blanks
                        ||  confLayoutFields_BR.FieldName == #Zeros
                        ||  confLayoutFields_BR.FieldName == #Fixed
                        ||  confLayoutFields_BR.FieldName == #Sequence
                        ||  confLayoutFields_BR.FieldName == #SequenceZeroBased
                        ||  confLayoutFields_BR.FieldName == #Systemdate
                        ||  confLayoutFields_BR.FieldName == #SystemTime
                        ||  confLayoutFields_BR.FieldName == #RegisterType
                        ||  confLayoutFields_BR.FieldName == #BatchId
                        ||  confLayoutFields_BR.FieldName == #QtdBatches
                        ||  confLayoutFields_BR.FieldName == #QtdRegistersinBatch_File
                        ||  confLayoutFields_BR.FieldName == #BatchRegisterNumber
                        ||  confLayoutFields_BR.FieldName == #BatchSequenceNumber
                        ))
                {
                    ret = true;
                }
                else
                {
                    ret = super();
                }

                if (ret)
                {
                    if (    confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex
                        &&  confLayoutLines_BR.BatchLayoutLineType == ConfBatchLayoutLineType_BR::Details
                        &&  confLayoutFields_BR.FieldName == fieldPName(EPSegmentTable_BR, epSegment_BR))
                    {
                        confLayoutFields = ConfLayoutFields_BR::findRecord( confLayoutGroups.LayoutGroupId,
                                                                            confLayoutLines_BR.LayoutLineNum,
                                                                            confLayoutFields_BR.TableName,
                                                                            fieldPName(EPSegmentTable_BR, epSegment_BR),
                                                                            false);

                        if (    confLayoutFields
                            &&  confLayoutFields.FieldSeq != confLayoutFields_BR.FieldSeq)
                        {
                            ret = checkFailed(strFmt("@GLS1313", fieldPName(EPSegmentTable_BR, epSegment_BR)));
                        }
                    }
                }

                if (confLayoutFields_BR.TableName == #Command)
                {
                    names = [#Blanks, #Zeros, #Fixed, #Sequence, #SequenceZeroBased, #SystemDate];

                    if (registerType.value())
                    {
                        names += #RegisterType;
                    }

                    if (confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex)
                    {
                        names += #SystemTime;
                    }

                    if (confLayoutLines_BR.isTrailer(confLayoutGroups))
                    {
                        names += #QtdRegistersinBatch_File;
                    }
                }
                else
                {
                    while select  tableDefinition
                        where   tableDefinition.ConfGroupId == confLayoutGroups.ConfGroupId
                            &&  tableDefinition.TableName   == confLayoutFields_BR.TableName
                    {
                        if (tableDefinition.FieldName)
                        {
                            names += tableDefinition.FieldName;
                        }

                        if (tableDefinition.FieldGroup)
                        {
                            dictFieldGroup = new DictFieldGroup(tableId, tableDefinition.FieldGroup);

                            for (i = 1; i <= dictFieldGroup.numberOfFields(); i++)
                            {
                                sysDictField = new SysDictField(tableId, dictFieldGroup.field(i));
                                if (sysDictField.arraySize() >1)
                                {
                                    for (k = 1; k <= sysDictField.arraySize(); k++)
                                    {
                                        arrayField  = new SysDictField(tableId, sysDictField.id(),k);
                                        dictTable   = new SysDictTable(tableId);
                                        names       += dictTable.fieldName(arrayField.extendedFieldId());
                                    }
                                }
                                else
                                {
                                    names += fieldId2name(tableId,dictFieldGroup.field(i));
                                }
                            }
                        }
                    }
                }

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::FileTrailer)
                {
                    names += #QtdBatches;
                }

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::Details)
                {
                    names += #BatchRegisterNumber;
                    names += #BatchSequenceNumber;
                }

                if (    confLayoutGroups.FileStructure  == ConfFileStructure_BR::Complex
                    &&  confLayoutFields_BR.TableName   == #Command)
                {
                    names += #BatchID;
                }

                if (confLayoutFields_BR.FieldName != #None)
                {
                    if (!conFind(names, confLayoutFields_BR.FieldName))
                    {
                        ret = false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MethodName</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateFieldValueSummaryStatus();
            }

]]></Source>
							</Method>
							<Method>
								<Name>performFormLookup</Name>
								<Source><![CDATA[
            public void performFormLookup(xFormRun _form, FormControl _formControl)
            {
                #ResAppl

                Object                  formRun;
                container               names;
                SysDictTable            sysDictTable;
                DictMethod              dictMethod;
                DictType                dictType;
                TableId                 tableId = tableName2id(confLayoutFields_BR.TableName);
                int                     i;

                formRun = ConfHelpers_BR::createLookup(_formControl);
                formRun.init();

                sysDictTable = new SysDictTable(tableId);
                if (sysDictTable)
                {
                    for (i = 1; i <= sysDictTable.objectMethodCnt(); i++)
                    {
                        dictMethod = sysDictTable.objectMethodObject(i);

                        if (dictMethod
                            && (    dictMethod.displayType() == DisplayFunctionType::Get
                                ||  dictMethod.displayType() == DisplayFunctionType::Set))
                        {
                            dictType = new DictType(dictMethod.returnId());
                            if (     dictType
                                &&  (   dictType.baseType() == Types::String
                                    ||  dictType.baseType() == Types::Integer
                                    ||  dictType.baseType() == Types::Real
                                    ||  dictType.baseType() == Types::Date
                                    ||  dictType.baseType() == Types::Enum
                                    )
                              )
                            {
                                names += dictMethod.name();
                            }
                        }
                    }
                }

                formRun.choices(names, #ImageMethod);
                super(formRun, _formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                this.performFormLookup(null, _formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Summaryfield</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                this.performFormLookup(null,_formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>performFormLookup</Name>
								<Source><![CDATA[
            public void performFormLookup(xFormRun _form, FormControl _formControl)
            {
                #ResAppl

                Object              formRun;
                container           names;
                ConfSummation_BR    confsummation;
                ConfTable_BR        confTable;

                void addSummaryFields()
                {
                    if (confLayoutFields_BR.FieldName)
                    {
                        while select SumSelected, CountSelected, AverageSelected from confsummation
                            where   confsummation.ConfGroupId == confLayoutGroups.ConfGroupId
                                &&  confsummation.TableName   == confLayoutFields_BR.TableName
                                &&  confsummation.FieldName   == confLayoutFields_BR.FieldName
                        {
                            if (confsummation.SumSelected)
                            {
                                names += #SumTotal;
                            }

                            if (confsummation.CountSelected)
                            {
                                names += #Count;
                            }

                            if (confsummation.AverageSelected)
                            {
                                names += #Average;
                            }
                        }
                    }
                    else
                    {
                        names += #SumTotal;
                        names += #Count;
                        names += #Average;
                    }
                }

                formRun = ConfHelpers_BR::createLookup(_formControl);
                formRun.init();

                confTable = ConfTable_BR::find(confLayoutGroups.ConfGroupId);
                if (confTable.IsQueryBased)
                {
                    names += #SumTotal;
                    names += #Count;
                    names += #Average;
                }
                else
                {
                    if (confLayoutGroups.FileStructure == ConfFileStructure_BR::Simple)
                    {
                        if (    confLayoutLines_BR.LayoutLineType   == ConfLayoutLineType_BR::Trailer
                            &&  confLayoutFields_BR.TableName       != #Command
                            &&  (   confLayoutFields_BR.FieldName   != #None
                                ||  confLayoutFields_BR.MethodName  != #None))
                        {
                            addSummaryFields();
                        }
                    }
                    else
                    {
                        if (    (   confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::FileTrailer
                                ||  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::BatchTrailer)
                            &&  confLayoutFields_BR.TableName               != #Command
                            &&  (   confLayoutFields_BR.FieldName           != #None
                                ||  confLayoutFields_BR.MethodName          != #None))
                        {
                            addSummaryFields();
                        }
                    }
                }

                formRun.choices(names, #ImageField);
                super(formRun, _formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TableName</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                this.performFormLookup(null, _formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                info("@GLS1213");
                return;
            }

]]></Source>
							</Method>
							<Method>
								<Name>performFormLookup</Name>
								<Source><![CDATA[
            public void performFormLookup(xFormRun _form, FormControl _formControl)
            {
                #ResAppl

                Object                  formRun;
                container               names;
                ConfTableSelection_BR   tableSelection;
                ConfLayoutLines_BR      confLayoutLines;
                ConfLayoutFields_BR     confLayoutFields;

                formRun = ConfHelpers_BR::createLookup(_formControl);
                formRun.init();

                if (confLayoutGroups.FileStructure == ConfFileStructure_BR::Complex
                    &&  (    confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::BatchTrailer
                        ||  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::FileTrailer))
                {
                    while select LayoutLineNum from confLayoutLines
                        where   confLayoutLines.LayoutGroupId       == confLayoutGroups.LayoutGroupId
                            &&  confLayoutLines.BatchLayoutLineType == ConfBatchLayoutLineType_BR::Details
                    {
                        while select TableName from confLayoutFields
                            where   confLayoutFields.LayoutGroupId == confLayoutGroups.LayoutGroupId
                                &&  confLayoutFields.LayoutLineNum == confLayoutLines.LayoutLineNum
                        {
                            if (confLayoutFields.TableName != #Command)
                            {
                                if (!conFind(names, confLayoutFields.TableName))
                                {
                                    names += confLayoutFields.TableName;
                                }
                            }
                        }
                    }
                }
                else if (confLayoutLines_BR.LayoutLineType != ConfLayoutLineType_BR::Trailer)
                {
                    while select TableName from tableSelection
                          where  tableSelection.ConfGroupId == confLayoutGroups.ConfGroupId
                    {
                        names += tableSelection.TableName;
                    }
                }
                else if (ConfLayoutLines_BR::findRecordType(confLayoutGroups.LayoutGroupId, confLayoutLines_BR.LayoutLineNum + 1))
                {
                    while select TableName from confLayoutFields
                        where   confLayoutFields.LayoutGroupId == confLayoutGroups.LayoutGroupId
                            &&  confLayoutFields.BatchId       == confLayoutLines_BR.BatchId
                    {
                        if (confLayoutFields.TableName != #Command)
                        {
                            if (!conFind(names, confLayoutFields.TableName))
                            {
                                names += confLayoutFields.TableName;
                            }
                        }
                    }
                }
                else
                {
                    while select TableName from confLayoutFields
                        where   confLayoutFields.LayoutGroupId == confLayoutGroups.LayoutGroupId
                    {
                        if (confLayoutFields.TableName != #Command)
                        {
                            if (!conFind(names, confLayoutFields.TableName))
                            {
                                names += confLayoutFields.TableName;
                            }
                        }
                    }
                }

                names += #Command;
                formRun.choices(names, #ImageTable);
                super(formRun,_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Value</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean             ret;
                ConfLayoutLines_BR  confLayoutLines;

                ret = super();

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::Details
                    &&  confLayoutFields_BR.FieldName           == fieldStr(EPSegmentTable_BR, epSegment_BR)
                    &&  confLayoutFields_BR.Value               != #None)
                {
                    select confLayoutLines
                        where   confLayoutLines.LayoutGroupId   == confLayoutGroups.LayoutGroupId
                            &&  confLayoutLines.Segment         == confLayoutFields_BR.Value
                            &&  confLayoutLines.LayoutLineNum   != confLayoutFields_BR.LayoutLineNum;

                    if (confLayoutLines)
                    {
                        ret = checkFailed(strFmt("@GLS1324", confLayoutFields_BR.Value, confLayoutLines.GroupName));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (    confLayoutGroups.FileStructure          == ConfFileStructure_BR::Complex
                    &&  confLayoutLines_BR.BatchLayoutLineType  == ConfBatchLayoutLineType_BR::Details
                    &&  confLayoutFields_BR.FieldName           == fieldStr(EPSegmentTable_BR, epSegment_BR)
                    &&  confLayoutFields_BR.Value               != #None)
                {
                    confLayoutLines_BR.Segment = confLayoutFields_BR.Value;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LayoutLineUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ConfLayoutLines_BR  prevLine;
            LineNum             lineNum1;
            LineNum             lineNum2;

            super();

            ttsbegin;

            prevLine = confLayoutLines_BR.prevNextLine(NextPrevious::Previous, true);
            if (!prevLine)
            {
                ttsabort;
                return;
            }

            confLayoutLines_BR.selectForUpdate(true);
            confLayoutLines_BR.reread();

            lineNum1                            = confLayoutLines_BR.LayoutLineNum;
            lineNum2                            = prevLine.LayoutLineNum;
            confLayoutLines_BR.LayoutLineNum    = maxInt() - 1;

            confLayoutLines_BR.doUpdate();

            prevLine.LayoutLineNum              = lineNum1;
            confLayoutLines_BR.LayoutLineNum    = lineNum2;

            prevLine.doUpdate();
            confLayoutLines_BR.doUpdate();

            ttscommit;

            ConfHelpers_BR::exchangeLines(lineNum1, lineNum2, confLayoutLines_BR.LayoutGroupId);
            confLayoutLines_BR_DS.research();
            confLayoutLines_BR_DS.reSelectLinesCursor(lineNum2);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LayoutLineDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ConfLayoutLines_BR  nextLine;
            LineNum             lineNum1;
            LineNum             lineNum2;

            super();

            ttsbegin;

            nextLine = confLayoutLines_BR.prevNextLine(NextPrevious::Next, true);
            if (!nextLine)
            {
                ttsabort;
                return;
            }

            confLayoutLines_BR.selectForUpdate(true);
            confLayoutLines_BR.reread();

            lineNum1                            = confLayoutLines_BR.LayoutLineNum;
            lineNum2                            = nextLine.LayoutLineNum;
            confLayoutLines_BR.LayoutLineNum    = maxInt() - 1;

            confLayoutLines_BR.doUpdate();

            nextLine.LayoutLineNum              = lineNum1;
            confLayoutLines_BR.LayoutLineNum    = lineNum2;

            nextLine.doUpdate();
            confLayoutLines_BR.doUpdate();

            ttscommit;

            ConfHelpers_BR::exchangeLines(lineNum1, lineNum2, confLayoutLines_BR.LayoutGroupId);
            confLayoutLines_BR_DS.research();
            confLayoutLines_BR_DS.reSelectLinesCursor(lineNum2);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RegisterType</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            confLayoutGroups.ConfRegisterType = registerType.value();
            confLayoutGroups.update();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetailsConfLayoutLines_BatchLayLineType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            confLayoutFields_SummaryField.visible(confLayoutLines_BR.BatchLayoutLineType != ConfBatchLayoutLineType_BR::Details);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LayoutFieldUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ConfLayoutFields_BR prevField, confLayoutFields;
            LineNum             fieldSeq1;
            LineNum             fieldSeq2;
            int                 startpos;
            int                 size;
            int                 nextstartpos = 0;

            super();

            ttsbegin;

            prevField = confLayoutFields_BR.prevNextLine(NextPrevious::Previous,true);
            if (!prevField)
            {
                ttsabort;
                return;
            }

            confLayoutFields_BR.selectForUpdate(true);
            confLayoutFields_BR.reread();

            fieldSeq1                       = confLayoutFields_BR.FieldSeq;
            fieldSeq2                       = prevField.FieldSeq;
            startpos                        = prevField.StartPos;
            size                            = confLayoutFields_BR.Size;
            confLayoutFields.FieldSeq       = prevField.FieldSeq;
            confLayoutFields_BR.FieldSeq    = maxInt()-1;

            confLayoutFields_BR.doUpdate();

            prevField.FieldSeq              = fieldSeq1;
            confLayoutFields_BR.FieldSeq    = fieldSeq2;
            confLayoutFields_BR.StartPos    = startpos;
            confLayoutFields_BR.EndPosition = startpos + size - 1;
            nextStartPos                    = confLayoutFields_BR.EndPosition + 1;

            prevField.doUpdate();
            confLayoutFields_BR.doUpdate();

            while select forupdate confLayoutFields
                order by FieldSeq
                    where   confLayoutFields.LayoutGroupId  == confLayoutLines_BR.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum  == confLayoutLines_BR.LayoutLineNum
                        &&  confLayoutFields.FieldSeq       >  confLayoutFields_BR.FieldSeq
            {
                if (nextStartPos)
                {
                    confLayoutFields.StartPos = nextStartPos;
                }

                confLayoutFields.EndPosition    = confLayoutFields.StartPos + confLayoutFields.Size - 1;
                nextStartPos                    = confLayoutFields.EndPosition + 1;
                confLayoutFields.doUpdate();
            }

            ttscommit;

            confLayoutFields_BR_DS.reSelectFieldsCursor(fieldSeq2);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LayoutFieldDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ConfLayoutFields_BR nextField, confLayoutFields;
            LineNum             fieldSeq1;
            LineNum             fieldSeq2;
            int                 startPos;
            int                 size;
            int                 nextStartPos = 0;

            super();

            ttsbegin;

            nextField = confLayoutFields_BR.prevNextLine(NextPrevious::Next,true);

            if (!nextField)
            {
                ttsabort;
                return;
            }

            confLayoutFields_BR.selectForUpdate(true);
            confLayoutFields_BR.reread();

            fieldSeq1                       = confLayoutFields_BR.FieldSeq;
            fieldSeq2                       = nextField.FieldSeq;
            startPos                        = confLayoutFields_BR.StartPos;
            size                            = nextField.Size;
            confLayoutFields.FieldSeq       = confLayoutFields_BR.FieldSeq;
            confLayoutFields_BR.FieldSeq    = maxInt() - 1;

            confLayoutFields_BR.doUpdate();

            nextField.FieldSeq              = fieldSeq1;
            confLayoutFields_BR.FieldSeq    = fieldSeq2;
            nextField.StartPos              = startPos;
            nextField.EndPosition           = startPos + size - 1;
            nextStartPos                    = nextField.EndPosition + 1;

            nextField.doUpdate();
            confLayoutFields_BR.doUpdate();

            while select forupdate confLayoutFields
                order by FieldSeq
                    where   confLayoutFields.LayoutGroupId  == confLayoutLines_BR.LayoutGroupId
                        &&  confLayoutFields.LayoutLineNum  == confLayoutLines_BR.LayoutLineNum
                        &&  confLayoutFields.FieldSeq       >  nextField.FieldSeq
            {
                if (!nextStartPos)
                {
                    confLayoutFields.StartPos = startPos;
                }
                else
                {
                    confLayoutFields.StartPos = nextStartPos;
                }

                confLayoutFields.EndPosition    = confLayoutFields.StartPos + confLayoutFields.Size - 1;
                nextStartPos                    = confLayoutFields.EndPosition + 1;
                confLayoutFields.doUpdate();
            }

            ttscommit;

            confLayoutFields_BR_DS.reSelectFieldsCursor(fieldSeq2);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ConfLayoutLines_BR</Name>
			<Table>ConfLayoutLines_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchLayoutLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConfRecordLength</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hide</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutLineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Segment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ConfLayoutFields_BR</Name>
			<Table>ConfLayoutFields_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndPosition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldArrayIdx</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldFill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldSeq</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Format</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Justifiy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MethodName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MethodTypeDisplayEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Size</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartPos</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Summaryfield</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TruncateField</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ConfLayoutLines_BR</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS159</Caption>
		<DataSource xmlns="">ConfLayoutLines_BR</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>NewDeleteGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LayoutLineUp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Primary>Yes</Primary>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS5474</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LayoutLineDown</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Primary>Yes</Primary>
								<ShowShortCut>No</ShowShortCut>
								<Text>@SYS2047</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ConfLayoutLines_BR</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<CountryRegionCodes>BR</CountryRegionCodes>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>GridLayoutLines</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CustomFilter</Name>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>RegisterType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_OrganizationAdministration:ConfDefLayout_BR_RegisterType</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@GLS1311</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>GridLayoutLines</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ConfLayoutLines_GroupName</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>GroupName</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>ConfLayoutLines_Size</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ConfRecordLength</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<Label>@SYS74721</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ConfLayoutLines_LayoutLineNum</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>LayoutLineNum</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<LabelAlignment>Right</LabelAlignment>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ConfLayoutLines_LayoutLineType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>LayoutLineType</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ConfLayoutLines_BatchLayoutLineType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>BatchLayoutLineType</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ConfLayoutLines_BatchId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>BatchId</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>ConfLayoutLines_Hide</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Hide</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<Label>@SYS25491</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<Columnspace>12</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Header</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsConfLayoutLines_GroupName</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>GroupName</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SizeGroups</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>DetailsConfLayoutLines_Size</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ConfRecordLength</DataField>
								<DataSource>ConfLayoutLines_BR</DataSource>
								<Label>@SYS74721</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>layoutTotalLength</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@GLS64282</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>DetailsConfLayoutLines_LayoutLineNum</Name>
						<ElementPosition>954437176</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>LayoutLineNum</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<LabelAlignment>Right</LabelAlignment>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DetailsConfLayoutLines_LayoutLineType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1193046470</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>LayoutLineType</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<LabelAlignment>Right</LabelAlignment>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DetailsConfLayoutLines_BatchLayLineType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>BatchLayoutLineType</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<LabelAlignment>Right</LabelAlignment>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DetailsConfLayoutLines_BatchId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1670265058</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>BatchId</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>DetailsConfLayoutLines_Hide</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1908874352</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Hide</DataField>
						<DataSource>ConfLayoutLines_BR</DataSource>
						<Label>@SYS25491</Label>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LayoutFields</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>LayoutFieldsActionPane</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>LayoutFieldsActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>LayoutFieldsPaneButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>NewLayoutField</Name>
														<ElementPosition>613566756</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS59247</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteLayoutField</Name>
														<ElementPosition>920350134</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>LayoutFieldUp</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1533916890</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<NormalImage>Up</NormalImage>
														<Primary>Yes</Primary>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS5474</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>LayoutFieldDown</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1840700268</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<NormalImage>Down</NormalImage>
														<Primary>Yes</Primary>
														<ShowShortCut>No</ShowShortCut>
														<Text>@SYS2047</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>ConfLayoutFields_BR</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridLayoutFields</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_BatchId</Name>
										<ElementPosition>226050910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BatchId</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ConfLayoutFields_FieldSeq</Name>
										<ElementPosition>339076365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldSeq</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_TableName</Name>
										<ElementPosition>452101820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TableName</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_FieldName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>565127275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldName</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_SummaryField</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>678152730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Summaryfield</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ConfLayoutFields_FieldArrayIdx</Name>
										<ElementPosition>791178185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldArrayIdx</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_MethodName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>904203640</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MethodName</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ConfLayoutFields_StartPos</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1017229095</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<AllowNegative>No</AllowNegative>
										<DataField>StartPos</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ConfLayoutFields_EndPosition</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1130254550</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndPosition</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>ConfLayoutFields_Size</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1243280005</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Size</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ConfLayoutFields_Type</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1356305460</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Type</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_Format</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1469330915</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Format</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_Value</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1582356370</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Value</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_FieldFill</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1695381825</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_OrganizationAdministration:ConfDefLayout_BR_ConfLayoutFields_FieldFill</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldFill</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ConfLayoutFields_Justifiy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1808407280</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Justifiy</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ConfLayoutFields_TruncateField</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1921432735</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TruncateField</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConfLayoutFields_Comments</Name>
										<ElementPosition>2034458190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Comments</DataField>
										<DataSource>ConfLayoutFields_BR</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
								</Controls>
								<DataSource>ConfLayoutFields_BR</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@GLS999</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>