<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SysPolicySourceDocumentRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SysPolicySourceDocumentRule extends FormRun
{
    SysPolicySourceDocument sysPolicySourceDocument;
    SysPolicyRule sysPolicyRule;
    SysPolicyTypeEnum  policyTypeEnum;
    SysPolicySourceDocumentRule origRule;

    RefRecId policyRuleTypeIndex;
    RefRecId policyIndex;
    boolean isNew;
    boolean inheritedValueExists;
    boolean allowCopy;

}
]]></Source>
			</Method>
			<Method>
				<Name>addTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>SysPolicySourceDocumentRuleTranslation</c> table, if possible.
    /// </summary>
    /// <returns>
    /// true if a record was inserted; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The opening of the <c>SysQueryForm</c> form with the select button causes the translation datasource
    /// to lose its data binding and change writing behavior, so a manual insert is sometimes required.
    /// </remarks>
    public boolean addTranslation()
    {
        SysPolicySourceDocumentRuleTranslation translation;

        if (Message.valueStr() != '' && sysPolicySourceDocumentRule.RecId != 0)
        {
            translation.Message = Message.valueStr();
            translation.LanguageTable = SystemParameters::getSystemLanguageId();
            translation.PolicySourceDocumentRule = sysPolicySourceDocumentRule.RecId;

            translation.insert();

            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        DialogRunbase dialog = element.args().caller();

        dialog.updateServer();

        if (sysPolicySourceDocument.checkCloseDialog())
        {
            if (!element.hasTranslation() && !element.addTranslation())
            {
                warning(strfmt("@SYS328775", SystemParameters::getSystemLanguageId()));
                return;
            }

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks to see if the current rule has a translation record for the system language.
    /// </summary>
    /// <returns>
    /// true if the rule has a translation; otherwise, false.
    /// </returns>
    public boolean hasTranslation()
    {
        SysPolicySourceDocumentRuleTranslation translation;

        select firstOnly Message from translation
            where translation.PolicySourceDocumentRule == sysPolicySourceDocumentRule.RecId
                && translation.LanguageTable == SystemParameters::getSystemLanguageId();

        return translation.Message != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SysPolicyName sysPolicyName;

        super();

        if (!element.args().caller())
        {
            throw error("@SYS22996");
        }

        policyTypeEnum = element.args().parmEnum();
        sysPolicySourceDocument =  element.args().caller().runbase();

        if (!sysPolicySourceDocument.parmRecId())
        {
            sysPolicySourceDocument.parmIsNewRecord(true);
        }
        policyRuleTypeIndex = str2int64(sysPolicySourceDocument.getArgs().parm());
        sysPolicyRule = sysPolicySourceDocument.getArgs().record();
        policyIndex = sysPolicyRule.Policy;

        sysPolicyName = SysPolicySourceDocumentRuleType::find(sysPolicySourceDocument.parmPolicyRuleTypeIndex()).Name;
        element.design().caption("@SYS133140" + ': ' + sysPolicyName);

        if (sysPolicySourceDocument.parmIsView())
        {
            groupDates.allowEdit(false);
            generalGroup.allowEdit(false);
            bottomButtonGrp.allowEdit(false);
            translate_Message.enabled(false);
            ok.enabled(false);
        }

        if (!sysPolicyRule)
        {
            commandbutton.clicked();
        }
        else
        {
            SysPolicyUtil::filterPolicyRule(sysPolicySourceDocumentRule_ds, sysPolicyRule);

            if ((sysPolicySourceDocumentRule.ValidTo < DateTimeUtil::utcNow() || sysPolicySourceDocumentRule.ValidFrom == sysPolicySourceDocumentRule.ValidTo))
            {
                // if policy rule expired, then disable editing
                groupDates.allowEdit(false);
                generalGroup.allowEdit(false);
                bottomButtonGrp.allowEdit(false);
                translate_Message.enabled(false);
                ok.enabled(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    RunBase runBase()
    {
        return sysPolicySourceDocument;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SysPolicySourceDocumentRule</Name>
				<Methods>
					<Method>
						<Name>written</Name>
						<Source><![CDATA[
        public void written()
        {
            super();

            if (allowCopy)
            {
                while select PolicySourceDocumentRule, Message, LanguageTable from sysPolicySourceDocumentRuleTranslation
                    where sysPolicySourceDocumentRuleTranslation.PolicySourceDocumentRule == origRule.RecId
                {
                    sysPolicySourceDocumentRuleTranslation.PolicySourceDocumentRule = sysPolicySourceDocumentRule.RecId;
                    sysPolicySourceDocumentRuleTranslation.insert();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>writing</Name>
						<Source><![CDATA[
        public void writing()
        {
            QueryRun origQuery;
            QueryRun currentQuery;
            sysPolicySourceDocumentRule.QueryPacked = sysPolicySourceDocument.queryRun().query().pack();

            if (!sysPolicySourceDocument.parmIsNewRecord())
            {
                origRule = SysPolicySourceDocumentRule::find(sysPolicySourceDocumentRule.RecId);
                origQuery = new QueryRun(origRule.QueryPacked);
                currentQuery = new  QueryRun(sysPolicySourceDocumentRule.QueryPacked);

                // for active rule only
                if (origRule.ValidFrom < DateTimeUtil::utcNow())
                {
                    // only allow creation if active rule dates or query has changed
                    if (origRule.ValidFrom != sysPolicySourceDocumentRule.ValidFrom
                        || origRule.ValidTo != sysPolicySourceDocumentRule.ValidTo
                        || !origQuery.equal(currentQuery))
                    {
                        allowCopy = true;
                        sysPolicySourceDocumentRule.validTimeStateUpdateMode(ValidTimeStateUpdate::CreateNewTimePeriod);
                    }
                    else
                    {
                        sysPolicySourceDocumentRule.QueryPacked = origRule.QueryPacked;
                    }
                }
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            sysPolicySourceDocumentRule.PolicyRuleType = policyRuleTypeIndex;
            sysPolicySourceDocumentRule.Policy = policyIndex;

            if (!sysPolicyRule)
            {
                sysPolicySourceDocumentRule.ValidFrom = sysPolicySourceDocument.getArgs().caller().getDefaultStartDate(policyIndex, policyRuleTypeIndex);
                sysPolicySourceDocumentRule.ValidTo = DateTimeUtil::maxValue();
                sysPolicySourceDocumentRule.QueryPacked = sysPolicySourceDocument.queryRun().query().pack();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            utcdatetime utcNow;
            utcdatetime validFromUTCDateTime, validToUTCDateTime;
            boolean ret = super();

            utcNow = DateTimeUtil::utcNow();

            // convert local time to UTC time
            if (setToDate.dateTimeValue() >= DateTimeUtil::maxValue())
            {
                validToUTCDateTime = DateTimeUtil::newDateTime(DateTimeUtil::date(DateTimeUtil::maxValue()), DateTimeUtil::time(DateTimeUtil::maxValue()), DateTimeUtil::getUserPreferredTimeZone());
            }
            else
            {
                validToUTCDateTime = DateTimeUtil::newDateTime(DateTimeUtil::date(setToDate.dateTimeValue()), DateTimeUtil::time(setToDate.dateTimeValue()), DateTimeUtil::getUserPreferredTimeZone());
            }

            if (validToUTCDateTime <= utcNow)
            {
                ret = checkFailed("@SYS136921");
            }

            //convert local time to UTC time
            validFromUTCDateTime = DateTimeUtil::newDateTime(DateTimeUtil::date(setFromDate.dateTimeValue()), DateTimeUtil::time(setFromDate.dateTimeValue()), DateTimeUtil::getUserPreferredTimeZone());

            if (ret && (DateTimeUtil::date(validFromUTCDateTime) < DateTimeUtil::date(utcNow)) && (sysPolicySourceDocumentRule.RecId == 0))
            {
                if (Box::okCancel("@SYS138421", DialogButton::Ok) == DialogButton::Ok)
                {
                    sysPolicySourceDocumentRule.ValidFrom = utcNow;
                    ret = true;
                }
                else
                {
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>SysPolicySourceDocumentRuleTranslation</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            SysTranslationHelper::filterTranslationTable(sysPolicySourceDocumentRuleTranslation_ds, fieldnum(SysPolicySourceDocumentRuleTranslation, LanguageTable));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            sysPolicySourceDocumentRuleTranslation.LanguageTable = SystemParameters::getSystemLanguageId();
            sysPolicySourceDocumentRuleTranslation.PolicySourceDocumentRule = sysPolicySourceDocumentRule.RecId;

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Translate_Message</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
                {
                    SysTranslationHelper sysTranslationHelper;

                    if (sysPolicySourceDocumentRule.RecId)
                    {
                        if (!element.hasTranslation())
                        {
                            element.addTranslation();
                        }

                        sysTranslationHelper = new SysTranslationHelper(tablenum(SysPolicySourceDocumentRule), tablenum(SysPolicySourceDocumentRuleTranslation));

                        sysTranslationHelper.launchTranslationDetailForm(sysPolicySourceDocumentRule.RecId);

                        sysPolicySourceDocumentRule_ds.executeQuery();
                    }

                    super();
                }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            sysPolicySourceDocumentRule.QueryPacked = sysPolicySourceDocument.queryRun().query().pack();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (sysPolicySourceDocument.parmIsNewRecord())
            {
                if (sysPolicySourceDocumentRule.RecId)
                {
                    select forupdate sysPolicyRule where sysPolicyRule.RecId == sysPolicySourceDocumentRule.RecId;
                    sysPolicyRule.doDelete();
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SysPolicySourceDocumentRule</Name>
			<Table>SysPolicySourceDocumentRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DuplicateSinceDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Policy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyRuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QueryPacked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SamplePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
					<Mandatory>Yes</Mandatory>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<ValidTimeStateAutoQuery>DateRange</ValidTimeStateAutoQuery>
			<ValidTimeStateUpdate>Correction</ValidTimeStateUpdate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SysPolicySourceDocumentRuleTranslation</Name>
			<Table>SysPolicySourceDocumentRuleTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Message</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicySourceDocumentRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SysPolicySourceDocumentRule</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS329487</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<MaximizeBox xmlns="">No</MaximizeBox>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SupplementalInstruction</Name>
				<ElementPosition>1610612733</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS329488</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupDates</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>setFromDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ValidFrom</DataField>
						<DataSource>SysPolicySourceDocumentRule</DataSource>
						<Label>@SYS50168</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>setToDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ValidTo</DataField>
						<DataSource>SysPolicySourceDocumentRule</DataSource>
						<Label>@SYS102701</Label>
					</AxFormControl>
				</Controls>
				<BottomMargin>11</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<ColumnsMode>Fill</ColumnsMode>
				<LeftMargin>11</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>11</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>11</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GeneralGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1574821340</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ActionGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Message</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Message</DataField>
								<DataSource>SysPolicySourceDocumentRuleTranslation</DataSource>
								<FastTabSummary>Yes</FastTabSummary>
								<Label>@SYS329342</Label>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Translate_Message</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<ExtendedStyle>button_inlineImageOnly</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>Translate</NormalImage>
								<Text>Translate desc</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<BottomMargin>11</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<ColumnsMode>Fill</ColumnsMode>
				<LeftMargin>11</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>11</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>11</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SupplimentalExplanationGroup</Name>
				<Pattern>FillText</Pattern>
				<PatternVersion>UX7 1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>StaticText</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Bold>Bold</Bold>
						<Text>@SYS318684</Text>
					</AxFormControl>
				</Controls>
				<Caption>@AccountsPayable:SelectionCriteria</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>dialogStartGrp</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RightButtonGrp</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
					</AxFormControl>
				</Controls>
				<BottomMargin>11</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<LeftMargin>11</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>11</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>11</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomButtonGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>New</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>