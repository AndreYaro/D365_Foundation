<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SMABOMDesignerEditBOM</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class SMABOMDesignerEditBOM extends FormRun
    {
        SMABOMDesignerCtrl          designerCtrl;
        boolean                     mayWrite;
        boolean                     allowCreate;
        boolean                     createMode;
        boolean                     templateMode;
        boolean                     forceClose;
        boolean                     keepLevel;
        NoYesId                     replacement;
        NoYesId                     createServiceOrder;
        int                         curDropNode;
        SMAServiceOrderId           serviceOrderId;
        SMAServiceBOMTable          curBOM;
        InventDimCtrl_Frm           inventDimFormSetup;
        container                   replaceRecIds;
}
]]></Source>
			</Method>
			<Method>
				<Name>bomDesignerCtrl</Name>
				<Source><![CDATA[
    SMABOMDesignerCtrl bomDesignerCtrl()
    {
        return designerCtrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        if (forceClose)
        {
            return true;
        }

        if (element.closedOk())
        {
            smaServiceBOMTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

            if (!smaServiceBOMTable_ds.validateWrite(true))
            {
                return false;
            }
        }

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        SMAQuantity  updatedQty;

        smaServiceBOMTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

        // Update
        if (this.closedOk() && smaServiceBOMTable_ds.validateWrite(true))
        {
            // Save record if it is created
            if (createMode)
            {
                mayWrite = true;
                smaServiceBOMTable_ds.write(serviceOrderId, smaServiceBOMTable.bomQty);
            }
            else
            {
                // If changes has been done or replacemnt
                if (!designerCtrl.toolsBufCmpData(curBOM, smaServiceBOMTable) || (replacement))
                {
                    mayWrite = true;
                    // Is it a replacement?
                    if (!replacement)
                    {
                        // If quantity not zero
                        if (smaServiceBOMTable.bomQty != 0)
                        {
                            if (curBOM.bomQty > smaServiceBOMTable.bomQty)
                            {
                                // The updated quantity is less than original qty
                                smaServiceBOMTable_ds.write(serviceOrderId, smaServiceBOMTable.bomQty);
                            }
                            else
                            {
                                // The updated quantity is greater than original qty
                                smaServiceBOMTable_ds.write(serviceOrderId, smaServiceBOMTable.bomQty - curBOM.bomQty);
                            }
                        }
                        else
                        {
                            // Delete record
                            if (designerCtrl.canDeleteMasterBOM())
                            {
                                designerCtrl.treeDeleteLines();
                            }
                        }
                    }
                    else
                    {
                        if (smaServiceBOMTable.bomQty != 0)
                        {
                            if (curBOM.bomQty >= smaServiceBOMTable.bomQty)
                            {
                                // Save replacement quantity
                                updatedQty = smaServiceBOMTable.bomQty;

                                // BOM line not changed
                                smaServiceBOMTable.bomQty = curBOM.bomQty;
                                smaServiceBOMTable_ds.write(serviceOrderId, updatedQty);
                            }
                        }
                    }
                }
            }

            forceClose = true;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        forceClose = true;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createItemReq</Name>
				<Source><![CDATA[
    void createItemReq(SMAServiceOrderTable _serviceOrder, SMAQuantity _qty)
    {
        SalesTableForm_ProjectSalesItem salesTableForm;
        SalesLine                       salesLine;
        ProjTable                       projTable   = ProjTable::find(_serviceOrder.ProjId);
        InventTable                     inventTable = InventTable::find(smaServiceBOMTable.ItemId);

        salesTableForm = SalesTableForm::construct(SalesTableFormId::ProjectSalesItem, projTable);

        salesLine.clear();
        salesLine.SalesType = SalesType::ItemReq;

        salesTableForm.salesLine_initValue(salesLine);

        salesLine.initFromProjTable(projTable);

        salesTableForm.salesLine_Create(salesLine);

        salesTableForm.resetSalesLine(salesLine);

        salesLine.ServiceOrderId        = _serviceOrder.ServiceOrderId;
        salesLine.CustAccount           = _serviceOrder.CustAccount;

        salesLine.ItemId                = smaServiceBOMTable.ItemId;
        salesLine.setInventDimId(inventDim.InventDimId);

        salesLine.itemIdChanged();

        salesLine.SalesUnit             = smaServiceBOMTable.UnitID;
        salesLine.QtyOrdered            = _qty;
        salesLine.SalesQty              = _qty;
        salesLine.modifiedField(fieldNum(SalesLine, QtyOrdered));
        SalesLine::modifySalesQty(salesLine,inventDim);
        salesLine.CostPrice     = InventTable::find(salesLine.ItemId).costPcsPrice(salesLine.InventDimId,inventDim);

        salesLine.ProjCategoryId        = element.getProjCategoryId(inventTable);
        salesLine.ReceiptDateRequested  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        AxSalesLine::newSalesLine(salesLine);

        salesLine.LineNum = SalesLine::lastLineNum(salesLine.SalesId) + 1.0;

        salesTableForm.salesLine_Write(salesLine);

        salesLine.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createServiceOrderLine</Name>
				<Source><![CDATA[
    public void createServiceOrderLine(SMAServiceOrderId _serviceOrderId, SMAQuantity _qty)
    {
        SMAServiceOrderTable    serviceOrderTable = SMAServiceOrderTable::find(_serviceOrderId);
        SMAServiceOrderLine     serviceOrderLine;
        InventTable             inventTable;
        InventDim               inventDimCopy;

        if (!_serviceOrderId)
        {
            // There is no service order number selected
            throw error(strFmt("@SYS89012", _serviceOrderId));
        }

        if (serviceOrderTable)
        {
            // Check stage of service order selected
            if (serviceOrderTable.checkStageAllowModify())
            {
                inventTable = InventTable::find(smaServiceBOMTable.ItemId);

                if (grpReference_CreateLine.value() == NoYes::Yes)
                {
                    // Create a new service order line
                    ttsbegin;

                    serviceOrderLine.clear();
                    serviceOrderTable = SMAServiceOrderTable::find(_serviceOrderId, true);

                    serviceOrderLine.Origin              = SMAServiceOrderOrigin::System;
                    serviceOrderLine.ServiceOrderId      = _serviceOrderId;
                    serviceOrderLine.initFromServiceOrder(_serviceOrderId);

                    // Date ranges are set to the general service date taken from the service order
                    serviceOrderLine.DateRangeFrom      = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(serviceOrderTable.ServiceDateTime,DateTimeUtil::getUserPreferredTimeZone()));
                    serviceOrderLine.DateRangeTo        = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(serviceOrderTable.ServiceDateTime,DateTimeUtil::getUserPreferredTimeZone()));

                    serviceOrderLine.TransactionType    = SMATransactionType::Item;
                    serviceOrderLine.ItemId             = smaServiceBOMTable.ItemId;
                    serviceOrderLine.modifiedField(fieldNum(SMAServiceOrderLine, ItemId));

                    inventDimCopy   = serviceOrderLine.inventDim();
                    EcoResProductDimGroupSetup::copyProductDimensionsForProductMaster(inventTable.Product, InventDim::find(smaServiceBOMTable.InventDimId), inventDimCopy);

                    serviceOrderLine.setInventDimIdFromInventDim(inventDimCopy);

                    serviceOrderLine.Unit               = smaServiceBOMTable.UnitID;
                    serviceOrderLine.ProjCategoryId     = element.getProjCategoryId(inventTable);
                    serviceOrderLine.Qty                = _qty;

                    serviceOrderLine.insert();

                    // Update service order status
                    serviceOrderTable.updateProgress();
                    serviceOrderTable.update();

                    ttscommit;
                }
                else
                if (grpReference_CreateItemReq.value() == NoYes::Yes)
                {
                    element.createItemReq(serviceOrderTable, _qty);
                }
            }
            else
            {
                // Update has been canceled.
                throw error("@SYS18447");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjCategoryId</Name>
				<Source><![CDATA[
    ProjCategoryId getProjCategoryId(InventTable _inventTable)
    {
        ProjCategoryId projCategoryId;

        if (_inventTable.ProjCategoryId)
        {
            projCategoryId = _inventTable.ProjCategoryId;
        }
        else
        {
            projCategoryId = ProjParameters::find().ItemCategory;
        }

        return projCategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Set replaceSet;

        if (!element.args() || !element.args().caller() || classIdGet(element.args().caller()) != classNum(SMABOMDesignerCtrl))
        {
            super();
            element.close();
            return;
        }

        createMode      = false;
        templateMode    = false;

        designerCtrl    = element.args().caller();
        curBOM          = element.args().record();
        keepLevel       = element.args().parmEnum();
        replaceSet      = element.args().parmObject();

        if (replaceSet && replaceSet.elements())
        {
            replaceRecIds = SMABOMDesignerCtrl::intSet2Con(replaceSet);
        }

        if (!curBOM.RecId || !designerCtrl)
        {
            createMode  = true;
        }

        super();

        if (createMode)
        {
            allowCreate = true;
            curDropNode = designerCtrl.parmCurDropNode();
            smaServiceBOMTable_ds.create();
            smaServiceBOMTable.data(curBOM);
            inventDim.data(smaServiceBOMTable.inventDim());
            inventDim_ds.linkType(FormLinkType::Active);
            smaServiceBOMTable.initStandardBOMQty();
            smaServiceBOMTable_ds.write();
        }

        templateMode = designerCtrl.isMasterMode();

        element.setFieldAccess();

        // Update inventory dimension controls
        element.updateDesign(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreateOrder</Name>
				<Source><![CDATA[
    public NoYesId parmCreateOrder(NoYesId _value = createServiceOrder)
    {
        createServiceOrder = _value;

        return createServiceOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAccess</Name>
				<Source><![CDATA[
    public void setFieldAccess()
    {
        // Show off/on service reference group
        grpReference.visible(!templateMode);
        grpReference_ServiceOrderId.allowEdit(grpReference_CreateLine.value() || grpReference_CreateItemReq.value());

        // Show off/on replace check box
        bomQuantity_Replace.visible(!createMode && !templateMode);

        // Show off/on create service Order check box
        grpReference_CreateLine.visible(!templateMode);
        grpReference_CreateItemReq.visible(!templateMode);

        // Enable/disable Item fields
        bomQuantity_UnitID.allowEdit(createMode);
        identification_ItemId.allowEdit(createMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReplacement</Name>
				<Source><![CDATA[
    public void setReplacement(NoYesId _value)
    {
        replacement = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setServiceOrderCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls active state of ServiceOrderCreate and Replacement checkboxes
    /// </summary>
    public void setServiceOrderCreate()
    {
        boolean createSeO = false;
        boolean higherQuantity;

        higherQuantity = (curBOM.bomQty > 0 && smaServiceBOMTable.bomQty > curBOM.bomQty) || !smaServiceBOMTable;

        // Replacement is off
        if (replacement == NoYes::No)
        {
            // Enable Create service order box if new quantity is higher than old quantity
            if (higherQuantity)
            {
                createSeO = true;
            }
        }
        else
        // Replacement is on
        {
            // Enable Create service order box if new quantity is lower than <= old quantity
            if (smaServiceBOMTable.bomQty > 0 && smaServiceBOMTable.bomQty <= curBOM.bomQty)
            {
                createSeO = true;
            }
        }

        grpReference_CreateLine.enabled(createSeO);
        grpReference_CreateItemReq.enabled(createSeO);

        // if unchecked, clear values
        if (!createSeO)
        {
            // clear checkboxes
            grpReference_CreateLine.value(NoYes::No);
            grpReference_CreateItemReq.value(NoYes::No);

            // clear create order attribute
            element.parmCreateOrder(NoYes::No);
        }
        // update field access
        element.setFieldAccess();

        // Disable Replacement check box if new quantity is higher than old quantity or no record selected or enable otherwise
        bomQuantity_Replace.enabled(!higherQuantity);

        if (!bomQuantity_Replace.enabled())
        {
            // clear checkbox
            bomQuantity_Replace.value(NoYes::No);

            // clear replacement attribute
            element.setReplacement(NoYes::No);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate _mode)
    {
        InventDimParm                   inventDimParmEnabled_1;
        InventDimParm                   inventDimParmVisible_1;
        InventDimGroupSetup             inventDimGroupSetup;

        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init        :
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl::newFromForm(element);
                }
                inventDimFormSetup.parmSkipOnHandLookUp(true);

            case InventDimFormDesignUpdate::Active      :
            case InventDimFormDesignUpdate::FieldChange :
                inventDimGroupSetup = InventDimGroupSetup::newItemId(smaServiceBOMTable.ItemId);

                inventDimFormSetup.formActiveSetup(inventDimGroupSetup);
                inventDimParmVisible_1.initProductDimensionsAllGroups();
                inventDimParmEnabled_1.initDimBOM(inventDimGroupSetup);
                inventDimFormSetup.parmDimParmVisible(inventDimParmVisible_1);
                inventDimFormSetup.parmDimParmEnabled(inventDimParmEnabled_1);
                inventDimFormSetup.formSetControls(false);

                grpInventoryDimensions.enabled(createMode);
                break;

            // Incorrect parameter for the function %1
            default :
                throw error(strFmt("@SYS54195", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateBOMQty</Name>
				<Source><![CDATA[
    public boolean validateBOMQty()
    {
        boolean ret = true;

        if (replacement && (curBOM.bomQty < smaServiceBOMTable.bomQty))
        {
            // Replacement quantity cannot be greater than original quantity.
            ret = checkFailed("@SYS97084");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateServiceOrder</Name>
				<Source><![CDATA[
    public boolean validateServiceOrder(SMAServiceOrderId _serviceOrderId)
    {
        boolean ret = true;

        if (!SMAServiceOrderTable::exist(_serviceOrderId))
        {
            // Service order '%1' not found.
            ret = checkFailed(strFmt("@SYS89012", _serviceOrderId));
        }

        // Check stage of service order selected
        ret = ret && SMAServiceOrderTable::find(_serviceOrderId).checkStageAllowModify();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            if (allowCreate)
            {
                super(append);
                allowCreate = false;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // super() should not be called
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>configId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (!EcoResProductMasterConfigurationMgr::configure( _formControl,
                                                                    smaServiceBOMTable.ItemId,
                                                                    InventDim::findOrCreate(inventDim).InventDimId))
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SMAServiceBOMTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite(boolean _apply = false)
        {
            boolean ret = false;

            if (!_apply)
            {
                ret = true;
            }
            else
            {
                smaServiceBOMTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

                ret = super();

                if (replacement && (curBOM.bomQty < smaServiceBOMTable.bomQty))
                {
                    // Replacement quantity cannot be greater than original quantity.
                    ret = checkFailed("@SYS97084");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (!createMode)
            {
                super();

                smaServiceBOMTable.bomVersionDate           = curBOM.bomVersionDate;
                smaServiceBOMTable.ObjectId                 = curBOM.ObjectId;
                smaServiceBOMTable.ServiceObjectRelationId  = curBOM.ServiceObjectRelationId;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (createMode)
            {
                inventDim.initFromInventTable(InventTable::find(smaServiceBOMTable.ItemId));
            }

            element.updateDesign(InventDimFormDesignUpdate::Active);
            element.setServiceOrderCreate();

            switch (designerCtrl.parmServiceObjectRelation().RelTableId)
            {
                case (tableNum(SMAAgreementTable)) :
                    smaTableKeyId.visible(true);
                    smaTableKeyId.text(designerCtrl.parmServiceObjectRelation().RelKeyId);
                    break;

                case (tableNum(SMAServiceOrderTable)) :
                    smaTableKeyId.visible(false);
                    grpReference_ServiceOrderId.allowEdit(false);
                    // Init Create Service Order number
                    serviceOrderId = designerCtrl.parmServiceObjectRelation().RelKeyId;
                    grpReference_ServiceOrderId.text(serviceOrderId);
                    break;

                default:
                    break;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write(SMAServiceOrderId _serviceOrderId = '', SMAQuantity _serviceOrderQty = 0)
        {
            if (mayWrite)
            {
                ttsbegin;
                smaServiceBOMTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

                // Save changed BOM line, history line is created
                super();

                // Create service order line if requested
                if ((createServiceOrder) && (_serviceOrderQty > 0) && (_serviceOrderId != ''))
                {
                    // Create Service order with qty
                    element.createServiceOrderLine(_serviceOrderId, _serviceOrderQty);

                    // Update history line for reference
                    if (createMode)
                    {
                        smaServiceBOMTable.updateHistoryLine(_serviceOrderId, SMAServiceBOMChangeAction::InsertedLine, grpReference_CreateItemReq.value());
                    }
                    else
                    {
                        smaServiceBOMTable.updateHistoryLine(_serviceOrderId, SMAServiceBOMChangeAction::UpdatedLine, grpReference_CreateItemReq.value());
                    }
                }

                // Mark replacement in history if any
                if (replacement)
                {
                    smaServiceBOMTable.replaceQtyLines(_serviceOrderQty);
                }
                else
                {
                    smaServiceBOMTable.replaceLines(replaceRecIds);
                }

                mayWrite = false;

                ttscommit;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(tableNum(SMAServiceBOMTable)).addRange(fieldNum(SMAServiceBOMTable,RecId)).value(queryValue(curBOM.RecId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            if (allowCreate)
            {
                super(append);

                allowCreate = false;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BOMQty</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = ret && element.validateBOMQty();

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setServiceOrderCreate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign(InventDimFormDesignUpdate::FieldChange);
                inventDim_ds.setCurrent();
                inventDim_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BOMQuantity_Replace</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setReplacement(bomQuantity_Replace.value());
            element.setServiceOrderCreate();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GrpReference_CreateLine</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.parmCreateOrder(grpReference_CreateLine.value());
            element.setFieldAccess();

            grpReference_CreateItemReq.value(NoYes::No);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GrpReference_CreateItemReq</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.parmCreateOrder(grpReference_CreateItemReq.value());

            grpReference_CreateLine.value(NoYes::No);

            element.setFieldAccess();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GrpReference_ServiceOrderId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FormRun         formRun ;
            Args            argForm     = new Args() ;

            argForm.name(formStr(SMAServiceOrderLookup)) ;
            argForm.caller(this) ;

            switch (designerCtrl.parmServiceObjectRelation().RelTableId)
            {
                case tableNum(SMAServiceOrderTable):
                    argForm.parm(SMAServiceOrderTable::find(designerCtrl.parmServiceObjectRelation().RelKeyId).AgreementId);
                    break;

                case tableNum(SMAAgreementTable):
                    argForm.parm(designerCtrl.parmServiceObjectRelation().RelKeyId);
                    break;

                default:
                    break;
            }

            formRun = classfactory.formRunClass(argForm) ;
            formRun.init() ;

            this.performFormLookup(formRun) ;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            serviceOrderId = grpReference_ServiceOrderId.text();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();
            ret = ret && element.validateServiceOrder(grpReference_ServiceOrderId.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>SMAServiceBOMTable</JoinSource>
			<LinkType>Active</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SMAServiceBOMTable</Name>
			<Table>SMAServiceBOMTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BOMCopyRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMCopyRefParentLineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMCopyRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMVersionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
					<Enabled>No</Enabled>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ObjectId</DataField>
					<Enabled>No</Enabled>
					<Skip>Yes</Skip>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceBOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceBOMLineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceBOMParentLineId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitID</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS67774</Caption>
		<Frame xmlns="">Dialog</Frame>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpIdentification</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpIdentification_ServiceBOMId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ServiceBOMId</DataField>
										<DataSource>SMAServiceBOMTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ItemId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>SMAServiceBOMTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GrpIdentification_ItemType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemType</DataField>
										<DataSource>SMAServiceBOMTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>SMAServiceBOMTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpBOMQuantity</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>BOMQuantity_BOMQty</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BOMQty</DataField>
										<DataSource>SMAServiceBOMTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BOMQuantity_UnitID</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitID</DataField>
										<DataSource>SMAServiceBOMTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BOMQuantity_Replace</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS94184</HelpText>
										<NeededPermission>Create</NeededPermission>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS84714</Label>
									</AxFormControl>
								</Controls>
								<Columnspace>1</Columnspace>
								<ColumnspaceMode>Fixed</ColumnspaceMode>
								<Caption>@SYS59970</Caption>
								<DataSource>SMAServiceBOMTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpInventoryDimensions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_configId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>configId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventSizeId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSizeId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventColorId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventColorId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventStyleId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStyleId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventVersionId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventVersionId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventSiteId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_inventBatchId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventBatchId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_wMSLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>wMSLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_inventSerialId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventSerialId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventStatusId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStatusId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_LicensePlateId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LicensePlateId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventOwnerId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventOwnerId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventProfileId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventProfileId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpInventoryDimensions_InventGtdId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventGtdId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS70071</Caption>
								<DataGroup>InventoryDimensions</DataGroup>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GrpReference</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SMATableKeyId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>924611014</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>SMATableKeyId</ExtendedDataType>
										<Label>@SYS79078</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GrpReference_CreateLine</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1386916521</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS94252</HelpText>
										<NeededPermission>Create</NeededPermission>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS94251</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GrpReference_CreateItemReq</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1700091219</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Create</NeededPermission>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS102509</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GrpReference_ServiceOrderId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1923787432</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>SMAServiceOrderId</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS15217</Caption>
								<DataSource>SMAServiceBOMTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@sys9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>