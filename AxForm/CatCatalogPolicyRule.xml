<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CatCatalogPolicyRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class CatCatalogPolicyRule extends FormRun
    {
        RefRecId                policyRuleTypeIndex;
        RefRecId                policyIndex;
        boolean                 isRetired;
        CatCatalogPolicyRule    catalogPolicyRule;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        CatProcureCatalogTable  procureCatalog;

        super();

        if (!(element.args().caller()))
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        policyRuleTypeIndex = str2int64(element.args().parm());
        catalogPolicyRule = element.args().record();
        policyIndex = element.args().caller().getPolicyIndex();
        combobox.loadParameters();

        if (catalogPolicyRule)
        {
            SysPolicyUtil::filterPolicyRule(catCatalogPolicyRule_ds,catalogPolicyRule);

            select Name, PublishingStatus from procureCatalog
                where procureCatalog.RecId == catalogPolicyRule.Catalog;

            // Normally we don't show the user inactive catalogs on this form, but it's possible that the catalog has
            // been inactivated (retiring the rule), so we have to add it to the combobox before we can select it
            if (procureCatalog.PublishingStatus == ProcureCatalogPublishingStatus::Inactive)
            {
                combobox.add(procureCatalog.Name);
            }

            // Select the catalog for this rule in the combobox
            if (procureCatalog)
            {
                combobox.selectText(procureCatalog.Name);
            }
            else
            {
                combobox.selectText('');
            }

            // Disable the combobox for retired rules
            if (catalogPolicyRule.ValidTo <= DateTimeUtil::utcNow())
            {
                isRetired = true;
                combobox.enabled(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (!catalogPolicyRule)
        {
            CatCatalogPolicyRule_DS.create();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CatCatalogPolicyRule</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            CatProcureCatalogTable procureCatalog;

            ret = super();

            select RecId from procureCatalog where procureCatalog.Name == combobox.valueStr();

            if (procureCatalog)
            {
                catCatalogPolicyRule.Catalog = procureCatalog.RecId;
            }
            else
            {
                error("@SYS109233");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            catCatalogPolicyRule.PolicyRuleType = policyRuleTypeIndex;
            catCatalogPolicyRule.Policy = policyIndex;

            if (!catCatalogPolicyRule)
            {
                catCatalogPolicyRule.ValidFrom = element.args().caller().getDefaultStartDate(policyIndex, policyRuleTypeIndex);
                catCatalogPolicyRule.ValidTo = DateTimeUtil::maxValue();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>loadParameters</Name>
						<Source><![CDATA[
        public void loadParameters()
        {
            CatProcureCatalogTable catProcureCatalogTable;

            while select Name from catProcureCatalogTable
                where catProcureCatalogTable.PublishingStatus == ProcureCatalogPublishingStatus::Active
            {
                this.add(catProcureCatalogTable.Name);
            }

            this.add('');
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CatProcureCatalogTable  procureCatalog;

            if (!isRetired)
            {
                select RecId, PublishingStatus from procureCatalog
                        where procureCatalog.Name == combobox.valueStr();

                // Creating/changing the catalog for existing policy rule: this scenario occurs when
                // the user has launched the catalog policy rule form and before the user could change
                // the date another user has inactivated the catalog in the catalog management form.
                if (procureCatalog.PublishingStatus == ProcureCatalogPublishingStatus::Active)
                {
                    super();
                    catCatalogPolicyRule_ds.write();
                }
                else
                {
                   error("@SYS340005");
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CatCatalogPolicyRule</Name>
			<Table>CatCatalogPolicyRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Policy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyRuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<ValidTimeStateUpdate>EffectiveBased</ValidTimeStateUpdate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS135546</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SupplementalInstruction</Name>
				<ElementPosition>1717986916</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<DisplayHeight>2</DisplayHeight>
				<DisplayHeightMode>Fixed</DisplayHeightMode>
				<DisplayLength>80</DisplayLength>
				<DisplayLengthMode>Fixed</DisplayLengthMode>
				<Text>@SYS329080</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>ValidFromDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_ProcurementAndSourcing:CatCatalogPolicyRule_ValidFromDate</HelpText>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ValidFrom</DataField>
						<DataSource>CatCatalogPolicyRule</DataSource>
						<Label>@SYS35161</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>ValidToDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_ProcurementAndSourcing:CatCatalogPolicyRule_ValidToDate</HelpText>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>ValidTo</DataField>
						<DataSource>CatCatalogPolicyRule</DataSource>
						<Label>@SYS102701</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>IsInherited</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>IsInherited</DataField>
						<DataSource>CatCatalogPolicyRule</DataSource>
						<Label>@SYS135083</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>ComboBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_ProcurementAndSourcing:CatCatalogPolicyRule_ComboBox</HelpText>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ComboType>List</ComboType>
						<Label>@SYS89156</Label>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>