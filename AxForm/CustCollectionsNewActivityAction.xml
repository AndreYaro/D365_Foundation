<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustCollectionsNewActivityAction</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustCollectionsNewActivityAction extends FormRun
{
    Set validTypeIds;
    List caseList;
    List transactionList;
}
]]></Source>
			</Method>
			<Method>
				<Name>checkOK</Name>
				<Source><![CDATA[
    public void checkOK()
    {
        ok.enabled(smmActivities_Purpose.text() != '' && validTypeIds.in(smmActivities_TypeId.text()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        RefRecId custRecId = element.args().record().RecId;
        RefRecId caseRecId;
        smmActivities activity;

        activity.initValue(smmActivityCategory::Action);
        activity.setActivityNum();
        activity.Closed = NoYes::Yes;
        activity.modifiedField(fieldNum(smmActivities, Closed));
        activity.TypeId = smmActivities_TypeId.text();
        activity.Purpose = smmActivities_Purpose.text();
        activity.UserMemo = smmActivities_UserMemo.text();
        activity.insertParentLink(smmActivityParentType::Customer, custRecId, true);
        activity.insertParentLink(smmActivityParentType::Collections, custRecId);
        activity.ActualEndDateTime = DateTimeUtil::removeTimeZoneOffset(smmActivities_ActualEndDateTime.dateTimeValue(), DateTimeUtil::getUserPreferredTimeZone());
        activity.StartDateTime = activity.ActualEndDateTime;
        activity.EndDateTime = activity.ActualEndDateTime;
        activity.insert();

        List activityList = new List(Types::Int64);
        activityList.addStart(activity.RecId);

        if (caseList && LinkMarkedRecords.value() == true)
        {
            CustCollectionsLinkContext context = CustCollectionsLinkContext::construct();
            context.parmPrimaryList(caseList);
            context.parmReferenceList(activityList);
            context.parmAction(CustCollectionsLinkAction::LinkActivitiesToCase);

            CustCollectionsLinkHandler handler = CustCollectionsLinkHandler::construct();
            handler.parmContext(context);
            handler.run();
        }

        if (transactionList && LinkMarkedRecords.value() == true)
        {
            CustCollectionsLinkContext context = CustCollectionsLinkContext::construct();
            context.parmPrimaryList(activityList);
            context.parmReferenceList(transactionList);
            context.parmAction(CustCollectionsLinkAction::LinkActivityAndTransaction);

            CustCollectionsLinkHandler handler = CustCollectionsLinkHandler::construct();
            handler.parmContext(context);
            handler.run();
        }

        super();

        if (element.args().caller() && element.args().caller() is FormRun && formHasMethod(element.args().caller(), identifierStr(refreshActivities)))
        {
            element.args().caller().refreshActivities();
        }

        element.saveLastValues();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastValues</Name>
				<Source><![CDATA[
    private void getLastValues()
    {
        container lastValues = xSysLastValue::getValue(curext(), curUserId(), UtilElementType::Form, form.name());

        if (conLen(lastValues) > 0)
        {
            smmActivities_TypeId.text(conPeek(lastValues, 1));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        smmActivityTypeGroup smmActivityTypeGroup;

        smmActivities_ActualEndDateTime.dateTimeValue(DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone())));
        element.getLastValues();

        super();

        validTypeIds = new Set(Types::String);

        while select @TypeId from smmActivityTypeGroup
        {
            validTypeIds.add(smmActivityTypeGroup.TypeId);
        }

        element.checkOK();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveLastValues</Name>
				<Source><![CDATA[
    private void saveLastValues()
    {
        xSysLastValue::putValue([smmActivities_TypeId.text()], curext(), curUserId(), UtilElementType::Form, form.name());
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
    #Task
        if (_taskId == #taskEnter)
        {
            if (ok.enabled())
            {
                ok.clicked();
            }
            return 0;
        }
        else
        {
            return super(_taskId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        var iCollections = element.args().caller() as CustCollectionsICallbackRequest;

        if (iCollections)
        {
            switch (element.args().callerName())
            {
                case formStr(CustCollectionsCaseListPage):
                    caseList = iCollections.parmListOfMarkedRecordsFromDS('CustCollectionsCaseDetail');
                    LinkMarkedRecords.label("@AccountsReceivable:CustCollectionsLinkActivityToMarkedCases");
                    break;
                case formStr(CustCollections):
                    caseList = iCollections.parmListOfMarkedRecordsFromDS('CaseDetailBase');
                    transactionList = iCollections.parmListOfMarkedRecordsFromDS('CustTrans');
                    break;
            }

            if (caseList || transactionList)
            {
                LinkMarkedRecords.enabled(true);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>smmActivities_TypeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean changed = super();

            element.checkOK();

            return changed;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.checkOK();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>smmActivities_Purpose</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean changed = super();

            element.checkOK();

            return changed;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.checkOK();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS311986</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>smmActivities_TypeId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>smmActivityTypeId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>smmActivities_Purpose</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>smmActivityPurpose</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>smmActivities_UserMemo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>smmActivityUserMemo</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>smmActivities_ActualEndDateTime</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>smmActivityActualEndDateTime</ExtendedDataType>
						<TimeSeconds>No</TimeSeconds>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>LinkMarkedRecords</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@AccountsReceivable:CustCollectionsLinkActivityToMarked</Label>
						<Style>Toggle</Style>
						<Value>1</Value>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS136792</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>