<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSInboundConfigurationWizard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSInboundConfigurationWizard extends FormRun
{
    private WHSInboundConfigurationWizard inboundConfigurationWizard;
    private Set selectedWarehouseIdsBasedOnGroup = new Set(Types::String);
    private boolean isWorkOrderTypeComboBoxInitialized;

}
]]></Source>
			</Method>
			<Method>
				<Name>wizard</Name>
				<Source><![CDATA[
    public SysWizard wizard()
    {
        return inboundConfigurationWizard;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().caller())
        {
            inboundConfigurationWizard = element.args().caller();
        }
        
        super();

        this.initWorkOrderTypeTab();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTabPage</Name>
				<Source><![CDATA[
    public void initTabPage(int _fromPage, int _toPage)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkOrderTypeTab</Name>
				<Source><![CDATA[
    private void initWorkOrderTypeTab()
    {
        container inboundWorkTransTypes = this.inboundWorkTransTypes();
        if (conLen(inboundWorkTransTypes) > 1)
        {
            this.enableWorkOrderTypeTab();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableWorkOrderTypeTab</Name>
				<Source><![CDATA[
    private void enableWorkOrderTypeTab()
    {
        WorkOrderTypeTabPage.visible(true);

        const int workOrderTypeTabPageIdx = 3;
        this.wizard().skipTab(workOrderTypeTabPageIdx, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkOrderTypeComboBoxOnce</Name>
				<Source><![CDATA[
    private void initWorkOrderTypeComboBoxOnce()
    {
        if (isWorkOrderTypeComboBoxInitialized)
        {
            return;
        }
        
        WorkOrderTypeComboBox.clear();
            
        DictEnum dictEnum = DictEnum::newFromName(enumStr(WHSWorkTransType));
        container inboundWorkTransTypes = this.inboundWorkTransTypes();
        for (int i = 1; i <= conLen(inboundWorkTransTypes); i++)
        {
            WHSWorkTransType inboundWorkTransType = conPeek(inboundWorkTransTypes, i);            
            WorkOrderTypeComboBox.add(dictEnum.value2Label(any2Int(inboundWorkTransType)));
        }

        isWorkOrderTypeComboBoxInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inboundWorkTransTypes</Name>
				<Source><![CDATA[
    [Wrappable]
    internal container inboundWorkTransTypes()
    {
        return [WHSWorkTransType::Purch];
    }

]]></Source>
			</Method>
			<Method>
				<Name>tab</Name>
				<Source><![CDATA[
    public FormTabControl tab()
    {
        return tab;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultGroupCaption</Name>
				<Source><![CDATA[
    private void initDefaultGroupCaption()
    {
        DefaultWorkClassesGroup.caption(strFmt("@WAX:WHSInboundConfigurationWizard_WorkClass"));
        DefaultWorkTemplatesGroup.caption(strFmt("@WAX:WHSInboundConfigurationWizard_WorkTemplate"));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkTransTypeCaption</Name>
				<Source><![CDATA[
    private void initWorkTransTypeCaption()
    {
        WHSInboundConfigurationWizardWorkTransTypeLabels labels = inboundConfigurationWizard.context().workTransTypeLabels;
        PoWorkClassString.label(labels.inboundWorkClass());
        PoWorkTemplateString.label(labels.inboundWorkTemplate());
        PoPutLocationDirectiveString.label(labels.inboundPutLocationDirective());
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPurchaseWorkClassId</Name>
				<Source><![CDATA[
    internal edit WHSWorkClassId editPurchaseWorkClassId(boolean _set, WHSWorkClassId _purchaseWorkClassId)
    {
        if (_set)
        {
            inboundConfigurationWizard.context().purchaseWorkClassId = strRTrim(_purchaseWorkClassId);
            inboundConfigurationWizard.nextEnabled(this.checkMandatoryWorkClassForNextButton() && this.checkRecLocToEnableNextForSetupPage());
        }

        return inboundConfigurationWizard.context().purchaseWorkClassId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPurchaseWorkTemplateCode</Name>
				<Source><![CDATA[
    internal edit WHSWorkTemplateCode editPurchaseWorkTemplateCode(boolean _set, WHSWorkTemplateCode _purchaseWorkTemplateCode)
    {
        if (_set)
        {
            inboundConfigurationWizard.context().purchaseWorkTemplateCode = strRTrim(_purchaseWorkTemplateCode);
            inboundConfigurationWizard.nextEnabled(this.checkMandatoryWorkClassForNextButton() && this.checkRecLocToEnableNextForSetupPage());
        }

        return inboundConfigurationWizard.context().purchaseWorkTemplateCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPoPutLocationDirectiveName</Name>
				<Source><![CDATA[
    internal edit WHSLocDirName editPoPutLocationDirectiveName(boolean _set, WHSLocDirName _poPutLocationDirectiveName)
    {
        if (_set)
        {
            inboundConfigurationWizard.context().poPutLocationDirectiveName = strRTrim(_poPutLocationDirectiveName);
        }

        return inboundConfigurationWizard.context().poPutLocationDirectiveName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReceivingLocation</Name>
				<Source><![CDATA[
    internal edit WHSLocType editReceivingLocation(boolean _set, WMSLocationId _receiving)
    {
        if(_set)
        {
            inboundConfigurationWizard.context().receivingLocationId = _receiving;
            WHSLocProfileId.mandatory(_receiving != '');
            WHSLocProfileId.enabled(_receiving != '');
            if(!WHSLocProfileId.enabled() || !_receiving )
            {
                WHSLocProfileId.text('');
            }
            inboundConfigurationWizard.nextEnabled(this.checkRecLocToEnableNextForSetupPage() && this.checkMandatoryWorkClassForNextButton());
        }
        return inboundConfigurationWizard.context().receivingLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editWarehouseGroupId</Name>
				<Source><![CDATA[
    internal edit WhsWarehouseGroupId editWarehouseGroupId(boolean _set, WhsWarehouseGroupId _warehouseGroupId)
    {
        if(_set)
        {
            inboundConfigurationWizard.context().warehouseGroupId = _warehouseGroupId;
        }
        return inboundConfigurationWizard.context().warehouseGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRecLocToEnableNextForSetupPage</Name>
				<Source><![CDATA[
    public boolean checkRecLocToEnableNextForSetupPage()
    {
        if(ReceiptEditControl.valueStr() != '' && WHSLocProfileId.valueStr() == '')
        {
            return false;
        }
        else if(ReceiptEditControl.valueStr() == '')
        {
            return true;
        }
        else if(WHSLocProfileId.valueStr() != '')
        {
            WHSLocationProfile locationProfile = WHSLocationProfile::find(WHSLocProfileId.valueStr());
            
            if (locationProfile.LPControlled)
            {
                return true;
            }
            else
            {
                warning(strFmt("@WAX:WHSInboundConfigurationWizard_LocationProfileIdWarning"));
                return false;
            }
        }
        else
        {
            return true;
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMandatoryWorkClassForNextButton</Name>
				<Source><![CDATA[
    public boolean checkMandatoryWorkClassForNextButton()
    {
        PoWorkClassString.mandatory(PoWorkTemplateString.valueStr() != '');
        
        if (PoWorkClassString.mandatory() && PoWorkClassString.valueStr() != '')
        {
            return true;
        }
        if (!PoWorkClassString.mandatory())
        {
            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWarehousesSelectionNextEnabled</Name>
				<Source><![CDATA[
    private void updateWarehousesSelectionNextEnabled()
    {
        if(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::All)
        {
            inboundConfigurationWizard.nextEnabled(true);
        }
        if(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::Group)
        {
            inboundConfigurationWizard.nextEnabled(WarehouseGroupId.valueStr() != '');
        }
        if(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::Warehouse)
        {
            Set warehouseIds = inboundConfigurationWizard.context().warehouseIds;
            boolean anyWarehouseSelected = warehouseIds && !warehouseIds.empty();
            inboundConfigurationWizard.nextEnabled(anyWarehouseSelected);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadWarehouseLocationsOfWarehouseGroup</Name>
				<Source><![CDATA[
    public void loadWarehouseLocationsOfWarehouseGroup(WhsWarehouseGroupId _warehouseGroupId)
    {
        QueryBuildDataSource qbtWWhslink = InventLocation_ds.query().dataSourceTable(tableNum(WhsWarehouseGroupLink));
        
        if (qbtWWhslink)
        {
            qbtWWhslink.clearRanges();
            qbtWWhslink.addRange(fieldNum(WhsWarehouseGroupLink, WarehouseGroupId)).value(queryValue(_warehouseGroupId));
        
            qbtWWhslink.enabled(true);
        }
        
        InventLocation_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>reloadWarehouseLocations</Name>
				<Source><![CDATA[
    public void reloadWarehouseLocations()
    {
        QueryBuildDataSource qbtWWhslink = InventLocation_ds.query().dataSourceTable(tableNum(WhsWarehouseGroupLink));

        if (qbtWWhslink)
        {
            qbtWWhslink.clearRanges();
            qbtWWhslink.enabled(false);
        }
          
        InventLocation_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWarehouseSelectionFields</Name>
				<Source><![CDATA[
    public void initWarehouseSelectionFields()
    {
        WarehouseGroupId.mandatory(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::Group);
        WarehouseGroupId.visible(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::Group);
        WarehousesSelectionGrid.enabled(WarehouseGroupAllComboBox.selection() == WhsWarehouseGroupAll::Warehouse);
        WarehouseGroupId.text('');
        inboundConfigurationWizard.context().warehouseGroupId = WarehouseGroupId.valueStr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillBaseDataSetupCompleteListView</Name>
				<Source><![CDATA[
    public void fillBaseDataSetupCompleteListView()
    {
        SetupCompleteSummaryListView.deleteAll();
        
        WHSInboundConfigurationWizardWorkTransTypeLabels labels = inboundConfigurationWizard.context().workTransTypeLabels;

        if (inboundConfigurationWizard.context().receivingLocationId != '')
        {
            SetupCompleteSummaryListView.addItem(new FormListItem(strFmt("@WAX:WHSInboundConfigurationWizard_Summary_ReceivingLocation",inboundConfigurationWizard.context().receivingLocationId)));
        }
        if (inboundConfigurationWizard.context().purchaseWorkClassId != '')
        {
            SetupCompleteSummaryListView.addItem(new FormListItem(strFmt(labels.inboundWorkClassIdSummary(), inboundConfigurationWizard.context().purchaseWorkClassId)));
        }
        if (inboundConfigurationWizard.context().purchaseWorkTemplateCode != '')
        {
            SetupCompleteSummaryListView.addItem(new FormListItem(strFmt(labels.inboundWorkTemplateCodeSummary(), inboundConfigurationWizard.context().purchaseWorkTemplateCode)));
        }
        if (inboundConfigurationWizard.context().poPutLocationDirectiveName)
        {
            SetupCompleteSummaryListView.addItem(new FormListItem(strFmt(labels.inboundPutLocationDirectiveNameSummary(), inboundConfigurationWizard.context().poPutLocationDirectiveName)));
        }
        SetupCompleteSummaryListView.addItem(new FormListItem(strFmt("@WAX:WHSInboundConfigurationWizard_Summary_SelectedWarehouses", inboundConfigurationWizard.context().warehouseSelection, inboundConfigurationWizard.context().warehouseGroupId)));
       
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSummaryListViewColumns</Name>
				<Source><![CDATA[
    private void initSummaryListViewColumns()
    {
        FormListControl listView = SetupCompleteSummaryListView;
        listView.addColumn(1, new FormListColumn("@SYS7576",1,350));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventLocation</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            
            this.loadOnlyWhsEnabledWarehouses();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markChanged</Name>
						<Source><![CDATA[
        public void markChanged()
        {
            super();
            this.updateSelectedWarehousesContext();
            element.updateWarehousesSelectionNextEnabled();
        }

]]></Source>
					</Method>
					<Method>
						<Name>loadOnlyWhsEnabledWarehouses</Name>
						<Source><![CDATA[
        private void loadOnlyWhsEnabledWarehouses()
        {
            QueryBuildDataSource qbds = InventLocation_ds.query().dataSourceTable(tableNum(InventLocation));
            qbds.addRange(fieldNum(InventLocation, WHSEnabled)).value(queryValue(NoYes::Yes));

            qbds.clearDynalinks();
            qbds.clearLinks();
            
            QueryBuildDataSource qbdsChildBOL = qbds.addDataSource(tableNum(WhsWarehouseGroupLink));

            qbdsChildBOL.addLink(fieldNum(InventLocation, InventLocationId), fieldNum(WhsWarehouseGroupLink, InventLocationId));
            qbdsChildBOL.joinMode(JoinMode::InnerJoin);
            qbdsChildBOL.enabled(false);

            InventLocation_ds.executeQuery();
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateSelectedWarehousesContext</Name>
						<Source><![CDATA[
        private void updateSelectedWarehousesContext()
        {
            Array markedRecords = InventLocation_ds.recordsMarked();
            
            Set selectedWarehouseIds = new Set(Types::String);
            for(int i = 1; i <= markedRecords.lastIndex(); i++)
            {
                int markedRowIndex = markedRecords.value(i);
                InventLocation warehouse = InventLocation_ds.cursor(markedRowIndex);
                
                selectedWarehouseIds.add(warehouse.InventLocationId);
            }
        
            whsInboundConfigurationWizardContext context = inboundConfigurationWizard.context();
            context.warehouseIds = selectedWarehouseIds;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>WarehouseSelectionTabPage</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            
            element.updateWarehousesSelectionNextEnabled();
    
            InventLocation_ds.research(true);
    
            this.markSelectedWarehouseIds();
            
            element.initWarehouseSelectionFields();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markSelectedWarehouseIds</Name>
						<Source><![CDATA[
        private void markSelectedWarehouseIds()
        {
            Set warehouseIds = inboundConfigurationWizard.context().warehouseIds;
            InventLocation warehouse;
            for (
                warehouse = InventLocation_ds.getFirst();
                warehouse;
                warehouse = InventLocation_ds.getNext())
            {
                if (warehouseIds.in(warehouse.InventLocationId))
                {
                    InventLocation_ds.markRecord(warehouse, 1);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WarehouseGroupAllComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.initWarehouseSelectionFields();
            element.reloadWarehouseLocations();
            inboundConfigurationWizard.context().warehouseIds = new Set(Types::String);
            inboundConfigurationWizard.context().warehouseSelection = this.selection();
            element.updateWarehousesSelectionNextEnabled();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WarehouseGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if(WarehouseGroupId)
            {
                WarehousesSelectionGrid.enabled(false);
                element.loadWarehouseLocationsOfWarehouseGroup(WarehouseGroupId.valueStr());
                element.updateWarehousesSelectionNextEnabled();
                inboundConfigurationWizard.context().warehouseGroupId = this.valueStr();

            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WorkOrderTypeTabPage</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();            

            element.initWorkOrderTypeComboBoxOnce();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WorkOrderTypeComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
        
            WHSWorkTransType workTransType;
            workTransType = str2enum(workTransType, this.getText(this.selection()));

            inboundConfigurationWizard.setInboundWorkTransType(workTransType);
            
            element.initWorkTransTypeCaption();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultSetupTabPage</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();
    
            element.initDefaultGroupCaption();
            element.initWorkTransTypeCaption();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            
            WHSLocProfileId.enabled(ReceiptEditControl.valueStr() != '');
            inboundConfigurationWizard.nextEnabled(element.checkRecLocToEnableNextForSetupPage() && element.checkMandatoryWorkClassForNextButton());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PoWorkClassString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Not calling super() to disable lookup
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PoWorkTemplateString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Not calling super() to disable lookup
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PoPutLocationDirectiveString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // Not calling super() to disable lookup
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WHSLocProfileId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            
            inboundConfigurationWizard.context().receivingProfileId = this.valueStr();
            
            inboundConfigurationWizard.nextEnabled(element.checkRecLocToEnableNextForSetupPage() && element.checkMandatoryWorkClassForNextButton());
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SetupCompleteTabPage</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            
            element.fillBaseDataSetupCompleteListView();
            inboundConfigurationWizard.nextEnabled(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();
        
            element.initSummaryListViewColumns();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventLocation</Name>
			<Table>InventLocation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllowLaborStandards</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllowMarkingReservationRemoval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoUpdateShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsolidateShipAtRTW</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CycleCountAllowPalletMove</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DecrementLoadLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultContainerTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultKanbanFinishedGoodsLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProductionFinishGoodsLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProductionInputLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultQualityMaintenanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultReturnCreditOnlyLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultShipMaintenanceLoc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>emptyPalletLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnableQualityManagement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FSHStore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventCountingGroup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationIdGoodsInRoute_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationIdQuarantine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationIdReqMain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationIdTransit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventUseDefaultProductionLocationForFormulaBOM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadReleaseReservationPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Manual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maxPickingRouteTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maxPickingRouteVolume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceGroup_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>pickingLineTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintBOLBeforeShipConfirm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdReserveOnlyWhse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBODefaultInventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBODefaultWMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBODefaultWMSPalletId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseToWarehouseRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveInventBlockingOnStatusChange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqRefill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReserveAtLoadPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailInventNegFinancial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailInventNegPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailWeightEx1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailWMSLocationIdDefaultReturn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailWMSPalletIdDefaultReturn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UniqueCheckDigits</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>useWMSOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccountCustom_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseAutoReleaseReservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WHSEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WHSProdOrderBackflushMustUseReservedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WHSRawMaterialPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSAisleNameActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSLevelFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSLevelNameActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSlocationIdDefaultIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSLocationIdDefaultReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSLocationIdGoodsInRoute_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPositionFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPositionNameActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSRackFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSRackNameActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkProcessingPolicyName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WhsWarehouseGroupLink</Name>
			<Table>WhsWarehouseGroupLink</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@WAX:WHSInboundConfigurationWizard_Title</Caption>
		<Pattern xmlns="">Wizard</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Wizard</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>WelcomeTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>WelcomeText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@WAX:WHSInboundConfigurationWizard_Description</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WelcomeGroup</Name>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>WelcomeListText</Name>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@WAX:WHSInboundConfigurationWizard_WelcomeStepDescription</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@WAX:WHSInboundConfigurationWizard_WelcomeStep</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>WarehouseSelectionTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>WarehouseSelectionText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@WAX:WHSInboundConfigurationWizard_WarehouseSelectionDescription</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WarehouseGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>WarehouseGroupSelection</Name>
										<Pattern>CustomFilters</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>WarehouseGroupAllComboBox</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<EnumType>WhsWarehouseGroupAll</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WarehouseGroupId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalLeft</ArrangeMethod>
										<FrameType>None</FrameType>
										<Style>CustomFilter</Style>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>WarehousesSelectionGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Grid</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WarehouseId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventLocation</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Name</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>InventLocation</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SiteId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventLocation</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>InventLocation</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@WAX:WHSInboundConfigurationWizard_WarehouseSelectionStep</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>WorkOrderTypeTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>WorkOrderTypeText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@WAX:WHSInboundConfigurationWizard_WorkOrderTypeSelectionDescription</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WorkOrderTypeGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>WorkOrderTypeComboBox</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>WHSWorkTransType</EnumType>
										<Selection>1</Selection>
										<Items />
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@WAX:WHSInboundConfigurationWizard_WorkOrderTypeStep</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DefaultSetupTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>DefaultSetupText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@WAX:WHSInboundConfigurationWizard_DefaultSetupDescription</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DefaultEntitiesGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DefaultWorkClassesGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PoWorkClassString</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPurchaseWorkClassId</DataMethod>
												<LookupButton>Never</LookupButton>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DefaultWorkTemplatesGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PoWorkTemplateString</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPurchaseWorkTemplateCode</DataMethod>
												<LookupButton>Never</LookupButton>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DefaultLocationDirectivesGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PoPutLocationDirectiveString</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPoPutLocationDirectiveName</DataMethod>
												<LookupButton>Never</LookupButton>
											</AxFormControl>
										</Controls>
										<Caption>@WAX:WHSInboundConfigurationWizard_LocationDirective</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ReceieveLocation</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReceiptEditControl</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editReceivingLocation</DataMethod>
												<ExtendedDataType>WHSId</ExtendedDataType>
												<Label>@WAX:WHSInboundConfigurationWizard_ReceivingLocation</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WHSLocProfileId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WHSLocProfileId</ExtendedDataType>
												<Label>@WAX:WHSInboundConfigurationWizard_ReceivingLocProfile</Label>
												<LookupButton>Always</LookupButton>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<Caption>@WAX:WHSInboundConfigurationWizard_ReceivingLocation</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@WAX:WHSInboundConfigurationWizard_SetUpStep</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SetupCompleteTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>SetupCompleteText</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@WAX:WHSInboundConfigurationWizard_SetupCompleteDescription</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SetupCompleteGroup</Name>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>SetupCompleteSummaryListView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<BackgroundColor>InactiveBorder</BackgroundColor>
										<ColorScheme>WindowsPalette</ColorScheme>
										<ColumnHeaderButton>Yes</ColumnHeaderButton>
										<ViewType>Report</ViewType>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@WAX:WHSInboundConfigurationWizard_SetupCompleteStep</Caption>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>No</AllowUserSetup>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>