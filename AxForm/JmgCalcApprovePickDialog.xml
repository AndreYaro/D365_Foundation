<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgCalcApprovePickDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JmgCalcApprovePickDialog extends FormRun
{
    JmgWeekNumberTmp    weekNumberTmp;
    JmgCalcApproveMode  calcApproveMode;
    JmgGroupCalcId		groupCalcId;
    JmgGroupApproveId   groupApproveId;

    int dateOptionValue;

    #Define.CurrentVersion(2)
    #Localmacro.CurrentList
        dateOptionValue,
        groupCalcId,
        groupApproveId
    #endMacro

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();
        
        Args    args = element.createArgsForJmgCalcApproveForm();

        FormRun formRun = ClassFactory.formRunClass(args);

        formRun.init();
        formRun.run();
        formRun.wait();
        formRun.detach();

        xSysLastValue::saveLast(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!JmgTimeCalcParmeters::checkTimeParmsSetup(true))
        {
            this.close();
            return;
        }

        xSysLastValue::getLast(this);

        date yesterday = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()) - 1;
        int yearNumber, weekNumber;
        [weekNumber, yearNumber] = JmgWeekNumberTmp::getWeekNumberAndYearForWeek(yesterday);

        JmgWeekNumberTmp::populateYearCombobox(pickYearCtrl, yearNumber);
        pickWeekCtrl.text(int2str(weekNumber));
        pickDateCtrl.dateValue(yesterday);

        if (this.args().parmEnumType() == enumNum(JmgCalcApproveMode))
        {
            if (this.args().parmEnum() == JmgCalcApproveMode::Calculate)
            {
                this.initCalcMode();
            }

            if (this.args().parmEnum() == JmgCalcApproveMode::Approve)
            {
                this.initApproveMove();
            }
        }
        else
        {
            this.initCalcMode();
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCalcMode</Name>
				<Source><![CDATA[
    private void initCalcMode()
    {
        calcApproveMode = JmgCalcApproveMode::Calculate;
        approveGroupCtrl.visible(false);

        JmgGroupCalc    jmgGroupCalc;     

        if (groupCalcId)
        {
            select firstonly jmgGroupCalc
                where jmgGroupCalc.GroupId == groupCalcId;
        }
        
        if (!jmgGroupCalc)
        {
            select firstonly jmgGroupCalc;
        }

        calculateGroupCtrl.text(jmgGroupCalc.GroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initApproveMove</Name>
				<Source><![CDATA[
    private void initApproveMove()
    {
        calcApproveMode = JmgCalcApproveMode::Approve;
        calculateGroupCtrl.visible(false);

        JmgGroupApprove    jmgGroupApprove;      

        if (groupApproveId)
        {
            select firstonly jmgGroupApprove
                where jmgGroupApprove.GroupId == groupApproveId;
        }
        
        if (!jmgGroupApprove)
        {
            select firstonly jmgGroupApprove;
        }

        approveGroupCtrl.text(jmgGroupApprove.GroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWeekNumbersTable</Name>
				<Source><![CDATA[
    private JmgWeekNumberTmp getWeekNumbersTable()
    {
        if (!weekNumberTmp || year(weekNumberTmp.ToDate) != str2Int(pickYearCtrl.valueStr()))
        {
            weekNumberTmp = JmgWeekNumberTmp::getWeekNumbersTable(str2Int(pickYearCtrl.valueStr()));

            // If week 53 was selected, but current year does not contain this week
            select firstonly weekNumberTmp
                where weekNumberTmp.Week == str2Int(pickWeekCtrl.valueStr());

            if (!weekNumberTmp.RecId)
            {
                // Set week 01
                select firstonly weekNumberTmp
                    order by weekNumberTmp.Week;

                pickWeekCtrl.text(int2Str(weekNumberTmp.Week));
            }
        }

        return weekNumberTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    void initParmDefault()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    dataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private identifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    private identifierName lastValueElementName()
    {
        return this.name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private userId lastValueUserId()
    {
        return curuserid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        dateOptionValue = DateGroup.optionValue();

        return [#CurrentVersion,#currentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer  version     = conpeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        DateGroup.optionValue(dateOptionValue);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createArgsForJmgCalcApproveForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method creates Args for the formRun.
    /// </summary>
    /// <returns>
    /// Returns the <c>Args</c> instance.
    /// </returns>
    protected Args createArgsForJmgCalcApproveForm()
    {
        Args args = new Args();

        JmgCalcApproveFormParm parms = new JmgCalcApproveFormParm();
        parms.calcApproveMode = calcApproveMode;

        if (DateGroup.optionValue())
        {
            args.name(formstr(JmgCalcApproveDateView));
            parms.viewDate = pickDateCtrl.dateValue();
        }
        else
        {
            args.name(formstr(JmgCalcApproveWeekView));
            parms.weekNumber = str2int(pickWeekCtrl.valueStr());
            parms.yearNumber = str2int(pickYearCtrl.valueStr());
        }

        if (calcApproveMode == JmgCalcApproveMode::Calculate)
        {
            groupCalcId = calculateGroupCtrl.valueStr();
            parms.calcGroupId = groupCalcId;
        }

        if (calcApproveMode == JmgCalcApproveMode::Approve)
        {
            groupApproveId = approveGroupCtrl.valueStr();
            parms.approveGroupId = groupApproveId;
        }

        args.parmObject(parms);

        return args;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>pickYearCtrl</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            super();

            element.getWeekNumbersTable();

            return true;
    
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>pickWeekCtrl</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args;
            FormRun formRun;

            args = new Args(formStr(JmgWeekNumberLookup));
            args.record(element.getWeekNumbersTable());
            args.parm(this.valueStr());
            formRun = classfactory.formRunClass(args);
            formRun.init();
            this.performFormLookup(formRun);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentSection</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>calculateGroupCtrl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>JmgGroupCalcId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>approveGroupCtrl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>JmgGroupApproveId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>WeekGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>pickYearCtrl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>JmgYear</ExtendedDataType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>pickWeekCtrl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>JmgWeek</ExtendedDataType>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:JmgViewRegistrationsWeek</Caption>
						<FrameOptionButton>Radio</FrameOptionButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>pickDateCtrl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>JmgDate</ExtendedDataType>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:JmgViewRegistrationsDay</Caption>
						<FrameOptionButton>Radio</FrameOptionButton>
						<OptionValue>0</OptionValue>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitButtons</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>