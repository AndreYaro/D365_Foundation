<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SMATemplateGroup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class SMATemplateGroup extends FormRun
    {
        Map                     treeRecId;
        FormTreeItem            treeItem;
        ImageRes                imageRes;
}
]]></Source>
			</Method>
			<Method>
				<Name>buildSubTree</Name>
				<Source><![CDATA[
    private void buildSubTree(SMATemplateGroup _templateGroup, int _parentIdx = 0)
    {
        SMATemplateGroup    childTemplateGroup;
        Integer             nodeIdx             = 0;

        if (!treeRecId.exists(_templateGroup.RecId))
        {
            nodeIdx = SysFormTreeControl::addTreeItem(templateTree, element.treeText(_templateGroup), _parentIdx, _templateGroup.TemplateGroupId, imageRes, SMATemplateGroup::isParent(_templateGroup.TemplateGroupId));
            treeRecId.insert(_templateGroup.RecId, nodeIdx);

            // If template group has a child then create sub tree
            while select childTemplateGroup where childTemplateGroup.ParentTemplateGroupId == _templateGroup.TemplateGroupId
            {
                element.buildSubTree(childTemplateGroup, nodeIdx);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildTree</Name>
				<Source><![CDATA[
    private void buildTree()
    {
        SMATemplateGroup        templateGroup;

        smaTemplateGroup.write();

        templateGroup.recordLevelSecurity(true);

        templateTree.deleteAll();

        while select templateGroup order by ParentTemplateGroupId, TemplateGroupId
        {
            element.buildSubTree(templateGroup);
        }

        // Select the current node
        templateTree.expand(treeRecId.lookup(smaTemplateGroup.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTree</Name>
				<Source><![CDATA[
    void createTree()
    {
        if (treeControl.value())
        {
            templateTree.deleteAll();

            // Prepare tree RecId map
            treeRecId = new Map(Types::Integer, Types::Int64);

            this.buildTree();

            templateTree.select(templateTree.getRoot());
            templateTree.setFocus();

            groupOverview.visible(false);
            groupTreeView.visible(true);

            templateTree.select(element.treeNode(smaTemplateGroup.TemplateGroupId));
        }

        smaTemplateGroup_ds.allowCreate(false);
        smaTemplateGroup_ds.allowDelete(false);
        smaTemplateGroup_ds.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTree</Name>
				<Source><![CDATA[
    void deleteTree()
    {
        if (!smaTemplateGroup.TemplateGroupId)
        {
            smaTemplateGroup_ds.executeQuery();
        }

        groupOverview.visible(true);
        groupTreeView.visible(false);

        smaTemplateGroup_ds.allowCreate(true);
        smaTemplateGroup_ds.allowDelete(true);
        smaTemplateGroup_ds.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        element.showGroups();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showGroups</Name>
				<Source><![CDATA[
    void showGroups()
    {
        groupOverview.visible(!treeControl.value());
        groupTreeView.visible(treeControl.value());
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeNode</Name>
				<Source><![CDATA[
    public Integer treeNode(SMATemplateGroupId _groupId)
    {
        if (_groupId)
        {
            return treeRecId.lookup(SMATemplateGroup::find(_groupId).RecId);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeText</Name>
				<Source><![CDATA[
    public str treeText(SMATemplateGroup _templateGroup)
    {
        // %1, %2
        return strfmt("@SYS26868", _templateGroup.TemplateGroupId, _templateGroup.Description);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>treeControl</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (!smaTemplateGroup.TemplateGroupId)
            {
                return false;
            }

            if (treeControl.value())
            {
                element.createTree();
            }
            else
            {
                element.deleteTree();
            }

            element.showGroups();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TemplateTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            SMATemplateGroup    templateGroup;

            super(_oldItem, _newItem, _how);

            if (_newItem.data() && _oldItem.data() && smaTemplateGroup.TemplateGroupId != _newItem.data())
            {
                templateGroup = SMATemplateGroup::find(_newItem.data());
                smaTemplateGroup_ds.positionToRecord(templateGroup);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SMATemplateGroup</Name>
			<Table>SMATemplateGroup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentTemplateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TemplateGroupId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS88965</Caption>
		<DataSource xmlns="">SMATemplateGroup</DataSource>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>SMATemplateGroup</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CtrlSelectors</Name>
				<ElementPosition>939524094</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>treeControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS87544</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS50138</Label>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupOverview</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1342177277</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_TemplateGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>TemplateGroupId</DataField>
								<DataSource>SMATemplateGroup</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_Description</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>SMATemplateGroup</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Grid_ParentTemplateGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ParentTemplateGroupId</DataField>
								<DataSource>SMATemplateGroup</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataGroup>Overview</DataGroup>
						<DataSource>SMATemplateGroup</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>BorderlessGridContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupTreeView</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1744830460</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>TemplateTree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<FormControlExtension
							i:nil="true" />
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<FrameType>None</FrameType>
				<Style>DetailTitleContainer</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
