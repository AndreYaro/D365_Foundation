<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CreditCardPaymentBreakDownForm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CreditCardPaymentBreakDownForm extends FormRun
{
    private ICreditCardSalesOrderInvoiceToPaymentRecordAccess recordAccess;
    private const int Threshold = 50;

}
]]></Source>
			</Method>
			<Method>
				<Name>getRecordAccess</Name>
				<Source><![CDATA[
    private ICreditCardSalesOrderInvoiceToPaymentRecordAccess getRecordAccess()
    {
        if (!recordAccess)
        {
            recordAccess = CreditCardSalesOrderInvoiceToPaymentRecordAccessorFactory::getCreditCardSalesOrderInvoiceToPaymentRecordAccess();
        }
        return recordAccess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryResume</Name>
				<Source><![CDATA[
    private void tryResume()
    {
        MultiSelectionHelper selection = MultiSelectionHelper::construct();
        selection.parmDatasource(this.dataSource().formRun().dataSource(1));
        CreditCardPaymentBreakDownTable markedRecords = selection.getFirst();
        if (!markedRecords)
        {
            throw error(Error::missingRecord(tableStr(CreditCardPaymentBreakDownTable)));
        }
        int totalCnt = 0;
        while (markedRecords)
        {
            totalCnt += 1;
            markedRecords = selection.getNext();
        }
        if (totalCnt >= Threshold)
        {
            info("@CashManagement:CreditCardPaymentBreakDownFormTooMuchRecords");
        }

        markedRecords = selection.getFirst();
        while (markedRecords)
        {
            CreditCardBreakDownInvoiceToPaymentRunner runner = CreditCardBreakDownInvoiceToPaymentRunner::construct(markedRecords.RecId);
            CreditCardPaymentExecutionId CreditCardPaymentExecutionId = runner.startWithPreCheck(); 
            if (!CreditCardPaymentExecutionId)
            {
                error(strFmt("@CashManagement:CreditCardPaymentBreakDownFormFailResume", markedRecords.SalesInvoiceId, markedRecords.SalesId));
            }
            else
            {
                markedRecords.reread();
                info(strFmt("@CashManagement:CreditCardPaymentBreakDownFormTriggerResume", markedRecords.SalesInvoiceId, markedRecords.SalesId));
                Args args = new Args();
                args.record(markedRecords);
                CreditCardPaymentBreakDownController::startProcess(args);
            }
            markedRecords = selection.getNext();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryTerminate</Name>
				<Source><![CDATA[
    private void tryTerminate()
    {
        MultiSelectionHelper selection = MultiSelectionHelper::construct();
        selection.parmDatasource(this.dataSource().formRun().dataSource(1));
        CreditCardPaymentBreakDownTable markedRecords = selection.getFirst();
        if (!markedRecords)
        {
            throw error(Error::missingRecord(tableStr(CreditCardPaymentBreakDownTable)));
        }

        while (markedRecords)
        {
            if (markedRecords.isInActiveBatchJob())
            {
                error(strFmt("@CashManagement:CreditCardPaymentBreakDownFormTerminateUnderExecution", markedRecords.SalesInvoiceId, markedRecords.SalesId));
            }
            else
            {
                boolean res = element.getRecordAccess().finishTask(markedRecords, CreditCardPaymentProcessingState::Terminated);

                if (!res)
                {
                    error(strFmt("@CashManagement:CreditCardPaymentBreakDownFormFailTerminate", markedRecords.SalesInvoiceId, markedRecords.SalesId));
                }
                else
                {
                    info(strFmt("@CashManagement:CreditCardPaymentBreakDownFormTerminateSuccess", markedRecords.SalesInvoiceId, markedRecords.SalesId));
                }
            }
            markedRecords = selection.getNext();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showSlider</Name>
				<Source><![CDATA[
    private void showSlider()
    {
        CreditCardPaymentBreakDownTable breakDownTable = this.dataSource().formRun().dataSource(1).cursor();
        Args args = new Args(formstr(CreditCardPaymentBreakDownInfologSlider));
        args.record(breakDownTable);
        MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(CreditCardPaymentBreakDownInfologSlider), MenuItemType::Display);

        FormRun formRun = menuFunction.create(args);
        formRun.run();
        formRun.wait();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        creditCardPaymentBreakDownTable_ds.queryBuildDataSource().addRange(fieldNum(CreditCardPaymentBreakDownTable, CreditCardPaymentProcessingStatus)).value(SysQuery::value(CreditCardPaymentProcessingState::NotStarted));
        creditCardPaymentBreakDownTable_ds.queryBuildDataSource().addRange(fieldNum(CreditCardPaymentBreakDownTable, CreditCardPaymentProcessingStatus)).value(SysQuery::value(CreditCardPaymentProcessingState::InProcess));
        creditCardPaymentBreakDownTable_ds.queryBuildDataSource().addRange(fieldNum(CreditCardPaymentBreakDownTable, CreditCardPaymentProcessingStatus)).value(SysQuery::value(CreditCardPaymentProcessingState::StopOnError));
        creditCardPaymentBreakDownTable_ds.queryBuildDataSource().addRange(fieldNum(CreditCardPaymentBreakDownTable, CreditCardPaymentProcessingStatus)).value(SysQuery::value(CreditCardPaymentProcessingState::StopOnException));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
        CreditCardPaymentBreakDownTable prevTableLine = element.args().record();
        if (prevTableLine)
        {
            QuickFilter.parmFilterValue(prevTableLine.SalesInvoiceId);
            QuickFilter.applyFilter();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Resume</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.tryResume();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Terminate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.tryTerminate();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Status</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.showSlider();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CreditCardPaymentBreakDownTable</Name>
			<Table>CreditCardPaymentBreakDownTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardPaymentExecutionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardPaymentOperation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardPaymentProcessingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardPaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardSalesOrderType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceJourContainer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCustPaymTableContainer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTableContainer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:CreditCardIncompleteCardsPayment</Caption>
		<DataSource xmlns="">CreditCardPaymentBreakDownTable</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Actions</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Resume</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<AutoRefreshData>Yes</AutoRefreshData>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@CashManagement:CreditCardPaymentBreakDownFormResume</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Terminate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<AutoRefreshData>Yes</AutoRefreshData>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@CashManagement:CreditCardPaymentBreakDownFormTerminate</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Status</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@CashManagement:CreditCardPaymentBreakDownFormViewHistory</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FormGroupControl1</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>FormGridControl</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>CreditCardPaymentBreakDownTable_SalesInvoiceId</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>FormGridControl</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CreditCardPaymentBreakDownTable_SalesId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SalesId</DataField>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CreditCardPaymentBreakDownTable_SalesInvoiceId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SalesInvoiceId</DataField>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>CreditCardPaymentProcessingStatus</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreditCardPaymentProcessingStatus</DataField>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CreditCardPaymentStatus</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<CacheDataMethod>No</CacheDataMethod>
						<DataMethod>renderCreditCardPaymentStatus</DataMethod>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
						<Label>@CashManagement:CreditCardPaymentStatusErrorCategory</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PaymentConnector</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>connectorName</DataMethod>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
						<Label>@SYS4000740</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Amount</Name>
						<Type>Real</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Amount</DataField>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
						<Label>Amount</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>CreditCardPaymentProcessingCount</Name>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>retryCount</DataMethod>
						<DataSource>CreditCardPaymentBreakDownTable</DataSource>
						<Label>@CashManagement:NumberOfAttempts</Label>
					</AxFormControl>
				</Controls>
				<DataSource>CreditCardPaymentBreakDownTable</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>