<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProcCategoryPolicyRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProcCategoryPolicyRule extends FormRun
{
    EcoResCategoryHierarchy     currentProcurementCategoryHierarchy;
    SysPolicyRule               currentSysPolicyRule;

    RefRecID                    policyRuleTypeIndex;
    RefRecID                    policyIndex;

    boolean                     isEscPressed;
    boolean                     isRuleExpired;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean         ret;
        ret = super();

        if (ret && isEscPressed && FormDataUtil::isFormDataSource(currentSysPolicyRule))
        {
            FormDataUtil::getFormDataSource(currentSysPolicyRule).reread();
        }

        if (ret && !isEscPressed && !isRuleExpired && FormDataUtil::isFormDataSource(currentSysPolicyRule))
        {
            ret = FormDataUtil::getFormDataSource(currentSysPolicyRule).leaveRecord();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Object        callerFormObject;
        utcdatetime   utcMaxValue = DateTimeUtil::maxValue();
        utcdatetime   maxValidToUTCDateTime;
        boolean       formOpenedForNew;
        Common        commonForEmptyTitle;

        if (!element.args().caller())
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        callerFormObject      = element.args().caller();
        policyRuleTypeIndex   = str2int64(element.args().parm());
        currentSysPolicyRule  = element.args().record();
        policyIndex           = callerFormObject.getPolicyIndex();
        formOpenedForNew      = element.args().parmEnum() == OpenMode::New;

        super();

        if (formOpenedForNew || currentSysPolicyRule.RecId == 0) // This is a new rule
        {
            maxValidToUTCDateTime =  DateTimeUtil::newDateTime(DateTimeUtil::date(utcMaxValue),
                                                               DateTimeUtil::time(utcMaxValue),
                                                               DateTimeUtil::getUserPreferredTimeZone());

            maxValidToUTCDateTime = (maxValidToUTCDateTime > utcMaxValue) ? utcMaxValue : maxValidToUTCDateTime;

            // Seed the rule fields, but don't insert yet
            currentSysPolicyRule.initValue();
            currentSysPolicyRule.Policy         = policyIndex;
            currentSysPolicyRule.PolicyRuleType = policyRuleTypeIndex;
            currentSysPolicyRule.ValidFrom      = element.args().caller().getDefaultStartDate(policyIndex, policyRuleTypeIndex);
            currentSysPolicyRule.ValidTo        = maxValidToUTCDateTime;
        }
        else // This is an existing rule
        {
            // If the record is PAST (expired) or PRESENT (active), neither of the dates are editable.
            //   Why?  If PAST, changing is never allowed, period.
            //   If PRESENT, ValidFrom changes are handled by creating a new rule and ValidTo changes
            //   are handled by the shorten/lengthen rule duration button in correction mode
            //   If FUTURE, we can safely update (correct) the dates on the current rule
            if (currentSysPolicyRule.ValidFrom <= DateTimeUtil::utcNow())
            {
                validFromDate.allowEdit(false);
                validToDate.allowEdit(false);
            }

            // If the policy rule has expired (PAST), then disable ALL editing
            if (currentSysPolicyRule.ValidTo <= DateTimeUtil::utcNow())
            {
                isRuleExpired = true;
                categoryPolicyRuleButtonGroup.enabled(false);
                categoryPolicyRuleGrid.allowEdit(false);
            }
        }

        // Initialize dates with the new or existing rule values now that we have them
        validFromDate.dateTimeValue(currentSysPolicyRule.ValidFrom);
        validToDate.dateTimeValue(currentSysPolicyRule.ValidTo);

        // Set the DS range in order to display all the rows for the given rule
        procCategoryPolicyParameter_ds.query().dataSourceTable(tablenum(ProcCategoryPolicyParameter)).clearDynalinks();
        procCategoryPolicyParameter_ds.query().dataSourceTable(tablenum(ProcCategoryPolicyParameter)).clearLinks();
        procCategoryPolicyParameter_ds.query().dataSourceTable(tablenum(ProcCategoryPolicyParameter)).addRange(
            fieldnum(ProcCategoryPolicyParameter, ProcurementCategoryPolicyRule)).value(queryValue(currentSysPolicyRule.RecId));

        currentProcurementCategoryHierarchy = EcoResCategoryHierarchy::find(
                EcoResCategoryHierarchyRole::getHierarchiesByRole(
                    EcoResCategoryNamedHierarchyRole::Procurement).CategoryHierarchy);
        element.args().record(commonForEmptyTitle);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromDate</Name>
				<Source><![CDATA[
    public edit validFromDateTime setFromDate(boolean _set, validFromDateTime _dateTime)
    {
        if (_set)
        {
            currentSysPolicyRule.ValidFrom = _dateTime;
        }

        return currentSysPolicyRule.ValidFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSysPolicyRule</Name>
				<Source><![CDATA[
    boolean setSysPolicyRule()
    {
        utcdatetime utcNow = DateTimeUtil::utcNow();
        utcdatetime validFromUTCDateTime, validToUTCDateTime;

        // Convert local times (displayed in the UtcDateTimeEdit control) to UTC times (to be stored in the DB)
        validFromUTCDateTime = DateTimeUtil::removeTimeZoneOffset(validFromDate.dateTimeValue(),
                                                                  DateTimeUtil::getUserPreferredTimeZone());

        validToUTCDateTime   = DateTimeUtil::removeTimeZoneOffset(validToDate.dateTimeValue(),
                                                                  DateTimeUtil::getUserPreferredTimeZone());

        // We give the user a 1 minute grace period to enter data for a new rule, and then we want to
        // correct the effective date because they really shouldn't be creating past-effective rules
        if (validFromUTCDateTime <= DateTimeUtil::addMinutes(utcNow, -1) && currentSysPolicyRule.RecId == 0)
        {
            // Policy rule start date is in the past.  This is not allowed.
            // Would you like to use the current date and time?
            if (Box::okCancel("@SYS138421",DialogButton::Ok) == DialogButton::Ok)
            {
                validFromUTCDateTime = utcNow;
                validFromDate.dateTimeValue(utcNow);
            }
            else
            {
                return false;
            }
        }

        ttsbegin;

        currentSysPolicyRule.Policy         = policyIndex;
        currentSysPolicyRule.PolicyRuleType = policyRuleTypeIndex;
        currentSysPolicyRule.ValidFrom      = validFromUTCDateTime;
        currentSysPolicyRule.ValidTo        = validToUTCDateTime;
        currentSysPolicyRule.IsInherited    = false; // Should be always false because
        // we want the search to stop once
        // the first rule is found.

        if (currentSysPolicyRule.validateWrite())
        {
            currentSysPolicyRule.validTimeStateUpdateMode(ValidTimeStateUpdate::EffectiveBased);
            currentSysPolicyRule.write();
        }

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToDate</Name>
				<Source><![CDATA[
    public edit validToDateTime setToDate(boolean _set, validToDateTime _dateTime)
    {
        if (_set)
        {
            currentSysPolicyRule.ValidTo = _dateTime;
        }

        return currentSysPolicyRule.ValidTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task

        if (_taskId == #taskEsc)
        {
            isEscPressed = true;
        }

        return super(_taskId);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProcCategoryPolicyParameter</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            categoryPolicyRuleDelete.enabled(procCategoryPolicyParameter_ds.cursor().RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            categoryPolicyRuleDelete.enabled(procCategoryPolicyParameter_ds.cursor().RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = false;

            if (procCategoryPolicyParameter.validateField(fieldnum(ProcCategoryPolicyParameter, ProcurementCategory)))
            {
                if (currentSysPolicyRule.RecId == 0)
                {
                    if (!element.setSysPolicyRule())
                    {
                        return false;
                    }
                }

                procCategoryPolicyParameter.ProcurementCategoryPolicyRule = currentSysPolicyRule.RecId;

                ret = super();

                categoryPolicyRuleDelete.enabled(ret);
            }

            return ret && (currentSysPolicyRule.RecId != 0);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ProcurementCategory</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::resolveCategoryHierarchy(_formReferenceControl, currentProcurementCategoryHierarchy).RecId ? EcoResCategory::resolveCategoryHierarchy(_formReferenceControl, currentProcurementCategoryHierarchy) : null;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::lookupCategoryHierarchy(_formReferenceControl, currentProcurementCategoryHierarchy);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CategoryPolicyRuleNew</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            categoryPolicyRuleDelete.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProcCategoryPolicyParameter</Name>
			<Table>ProcCategoryPolicyParameter</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasDeductionRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasQuestionnaireRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasReceivingRequirement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicyOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcurementCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProcurementCategoryPolicyRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordExpenditureOnGoodsReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorSelection</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS304930</Caption>
		<DataSource xmlns="">ProcCategoryPolicyParameter</DataSource>
		<DialogSize xmlns="">Full</DialogSize>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Body</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SysPolicyRuleDateGroupTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SysPolicyRuleDateGroup</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ValidFromDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>setFromDate</DataMethod>
										<Label>@SYS35161</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ValidToDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>setToDate</DataMethod>
										<Label>@SYS102701</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS304921</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CategoryPolicyRuleGroupTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CategoryPolicyRuleActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>CategoryPolicyRuleActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>CategoryPolicyRuleButtonGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>CategoryPolicyRuleNew</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS342787</HelpText>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS316747</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>CategoryPolicyRuleDelete</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS342788</HelpText>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<MultiSelect>Yes</MultiSelect>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS342789</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CategoryPolicyRuleGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProcCategoryPolicyParameter_ProcurementCategory</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProcCategoryPolicyParameter_ProcurementCategory_Name</Name>
												<DataRelationPath>EcoResCategory</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
										<ReferenceField>ProcurementCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProcCategoryPolicyParameter_VendorSelection</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendorSelection</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProcCategoryPolicyParameter_HasQuestionnaireRequirement</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProcurementAndSourcing:ProcCategoryPolicyRule_ProcCategoryPolicyParameter_HasQuestionnaireRequirement</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>HasQuestionnaireRequirement</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProcCategoryPolicyParameter_MatchingPolicyOption</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MatchingPolicyOption</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProcCategoryPolicyParameter_HasReceivingRequirement</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProcurementAndSourcing:ProcCategoryPolicyRule_ProcCategoryPolicyParameter_HasReceivingRequirement</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>HasReceivingRequirement</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProcCategoryPolicyParameter_HasDeductionRequirement</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProcurementAndSourcing:ProcCategoryPolicyRule_ProcCategoryPolicyParameter_HasDeductionRequirement</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>HasDeductionRequirement</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProcCategoryPolicyParameter_RecordExpenditureOnGoodsReceipt</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProcurementAndSourcing:ProcCategoryPolicyRule_ProcCategoryPolicyParameter_RecordExpenditureOnGoodsReceipt</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>RecordExpenditureOnGoodsReceipt</DataField>
										<DataSource>ProcCategoryPolicyParameter</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProcCategoryPolicyParameter</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS304922</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommit</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CloseButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@SYS15212</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
