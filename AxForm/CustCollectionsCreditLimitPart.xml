<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustCollectionsCreditLimitPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustCollectionsCreditLimitPart extends FormRun
{
    FormRun caller;
    boolean callerHasParmAgingPeriodDefMethod;
    boolean callerHasParmCurrencyToShowMethod;
    boolean callerHasparmSelectedCompaniesMethod;

    container selectedCompanies;

    CustVendReportName selectedAgingPeriodDef;
    CurrencyCode currency;
    str creditLimitLabel;

    QueryBuildRange agingPeriodRange;

}
]]></Source>
			</Method>
			<Method>
				<Name>displayAgingBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays aging snapshots balances for the current customer and a selected aging period definition.
    /// </summary>
    public void displayAgingBalances()
    {
        CurrencyExchangeHelper currencyExchangeHelper = CurrencyExchangeHelper::newExchangeDate(
            Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId),
            custAging.AgingDate);
        CustAgingLegalEntity custAgingLegalEntity = element.totalAgingByCompany(custAging.RecId);

        element.design().caption(strfmt("%1 - %2", "@SYS190115", custAging.displayAgingDate()));

        element.displayAmount(currencyExchangeHelper, custAgingLegalEntity, custAgingLegalEntity_Amount1, fieldnum(CustAgingLegalEntity, CreditLimitMst), "@SYS136832", strfmt("@SYS305170", currency));
        element.displayAmount(currencyExchangeHelper, custAgingLegalEntity, custAgingLegalEntity_Amount2, fieldnum(CustAgingLegalEntity, AmountDueMst), "@SYS136827");

        this.updateDisplayAmounts(currencyExchangeHelper, custAgingLegalEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the value, label, and help text of a given form control based on transaction currency.
    /// </summary>
    /// <param name = "_currencyExchangeHelper">
    /// An instance of the <c>CurrencyExchangeHelper</c> class used to help convert from accounting to transaction currency.
    /// </param>
    /// <param name = "_custAgingLegalEntity">
    /// A <c>CustAgingLegalEntity</c> buffer containing aging information for the current customer.
    /// </param>
    /// <param name = "_ctl">
    /// An instanc of the <c>FormRealControl</c>, which contains the aging value to be updated.
    /// </param>
    /// <param name = "_fieldId">
    /// The fieldId for the field which stores the aging value to be displayed.
    /// </param>
    /// <param name = "_helpText">
    /// The help text value to be applied to the <c>FormRealControl</c> instance.
    /// </param>
    /// <param name = "_label">
    /// The label value to be applied to the <c>FormRealControl</c> instance.
    /// </param>
    protected void displayAmount(
        CurrencyExchangeHelper _currencyExchangeHelper,
        CustAgingLegalEntity _custAgingLegalEntity,
        FormRealControl _ctl,
        fieldId _fieldId,
        str _helpText,
        str _label = "")
    {
        SysDictField field = new SysDictField(tablenum(CustAgingLegalEntity), _fieldId);
        AmountMST amountMST = _currencyExchangeHelper.calculateAccountingToTransaction(currency, _custAgingLegalEntity.(_fieldId), true);

        _ctl.realValue(amountMST);
        _ctl.label(_label ? _label : field.label());
        _ctl.helpText(_helpText ? _helpText : field.help());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDisplayAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the value, label, and help text of specific form controls based on the type of <c>TypeOfCreditmaxCheck</c> for the current customer.
    /// </summary>
    /// <param name = "_currencyExchangeHelper">
    /// An instance of the <c>CurrencyExchangeHelper</c> class used to help convert from accounting to transaction currency.
    /// </param>
    /// <param name = "_custAgingLegalEntity">
    /// A <c>CustAgingLegalEntity</c> buffer containing aging information for the current customer.
    /// </param>
    protected void updateDisplayAmounts(CurrencyExchangeHelper _currencyExchangeHelper, CustAgingLegalEntity _custAgingLegalEntity)
    {
        switch (CustParameters::find().CreditMaxCheck)
        {
            case TypeOfCreditmaxCheck::None:
            case TypeOfCreditmaxCheck::Balance:
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount3, fieldnum(CustAgingLegalEntity, CreditRemainingMst), "@SYS136829");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount4, fieldnum(CustAgingLegalEntity, PackingSlipBalanceMst), "@SYS136831");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount5, fieldnum(CustAgingLegalEntity, OpenOrderBalanceMst), "@SYS136830");
                break;
            case TypeOfCreditmaxCheck::BalanceDelivered:
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount3, fieldnum(CustAgingLegalEntity, PackingSlipBalanceMst), "@SYS136831");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount4, fieldnum(CustAgingLegalEntity, CreditRemainingMst), "@SYS136829");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount5, fieldnum(CustAgingLegalEntity, OpenOrderBalanceMst), "@SYS136830");
                break;
            case TypeOfCreditmaxCheck::BalanceAll:
            default:
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount3, fieldnum(CustAgingLegalEntity, PackingSlipBalanceMst), "@SYS136831");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount4, fieldnum(CustAgingLegalEntity, OpenOrderBalanceMst), "@SYS136830");
                element.displayAmount(_currencyExchangeHelper, _custAgingLegalEntity, custAgingLegalEntity_Amount5, fieldnum(CustAgingLegalEntity, CreditRemainingMst), "@SYS136829");
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SysDictField creditLimitfield;

        super();

        caller = element.args().caller();
        if (caller)
        {
            callerHasParmAgingPeriodDefMethod = formHasMethod(caller, 'parmSelectedAgingPeriodDef');
            callerHasParmCurrencyToShowMethod = formHasMethod(caller, 'parmCurrencyToShow');
            callerHasparmSelectedCompaniesMethod = formHasMethod(caller, 'parmSelectedCompanies');
        }

        currency = CompanyInfoHelper::standardCurrency();

        creditLimitfield = new SysDictField(tablenum(CustAgingLegalEntity), fieldnum(CustAgingLegalEntity, CreditLimitMst));
        creditLimitLabel = creditLimitfield.label();

        selectedAgingPeriodDef = CustCollectionsListPageHelper::getDefaultAgingPeriodByPool('');
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAgingByCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the total aging information for the current aging record.
    /// </summary>
    /// <param name = "_custAgingRecId">The current aging record's RecId.</param>
    /// <returns>The <c>CustAgingLegalEntity</c> buffer to be populated with total aging information.</returns>
    public CustAgingLegalEntity totalAgingByCompany(RefRecId _custAgingRecId)
    {
        CustAgingLegalEntity selectAging;
        CustAgingLegalEntity totalAging;
        CompanyInfo companyInfo;

        while select selectAging
            where selectAging.CustAging == _custAgingRecId
            join DataArea
                from companyInfo
                where companyInfo.RecId == selectAging.SourceLegalEntity
        {
            if (!selectedCompanies || confind(selectedCompanies, companyInfo.DataArea))
            {
                this.populateTotalAging(totalAging, selectAging);
            }
        }

        return totalAging;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTotalAging</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates values for total aging statistics based on the currently selected aging information.
    /// </summary>
    /// <param name = "_totalAging">The <c>CustAgingLegalEntity</c> buffer to be populated with total aging information.</param>
    /// <param name = "_selectAging">The selected <c>CustAgingLegalEntity</c> buffer.</param>
    protected void populateTotalAging(CustAgingLegalEntity _totalAging, CustAgingLegalEntity _selectAging)
    {
        _totalAging.AmountDueMst += _selectAging.AmountDueMst;
        _totalAging.CreditLimitMst += _selectAging.CreditLimitMst;
        _totalAging.CreditRemainingMst += _selectAging.CreditRemainingMst;
        _totalAging.PackingSlipBalanceMst += _selectAging.PackingSlipBalanceMst;
        _totalAging.OpenOrderBalanceMst += _selectAging.OpenOrderBalanceMst;
}

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustAging</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
            public void init()
            {
                super();

            agingPeriodRange = SysQuery::findOrCreateRange(custAging_q.dataSourceTable(tablenum(CustAging)), fieldnum(CustAging, StatRepInterval));
    }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
            {
                Object callerObj = caller;

            if (callerHasParmAgingPeriodDefMethod)
                {
                    selectedAgingPeriodDef = callerObj.parmSelectedAgingPeriodDef();
        }

            if (callerHasParmCurrencyToShowMethod)
                {
                    currency = callerObj.parmCurrencyToShow();
        }

            if (callerHasparmSelectedCompaniesMethod)
                {
                    selectedCompanies = callerObj.parmSelectedCompanies();
        }

            agingPeriodRange.value(selectedAgingPeriodDef);

            super();

            element.displayAgingBalances();
    }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustAging</Name>
			<Table>CustAging</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgingPeriod6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FirstNonzeroBalancePeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatRepInterval</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS190115</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">FormPartFactboxCard</Pattern>
		<PatternVersion xmlns="">UX7 1.0</PatternVersion>
		<Scrollbars xmlns="">No</Scrollbars>
		<Style xmlns="">FormPart</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>CustAgingLegalEntity_Amount1</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Real</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColor>Highlight3D</BackgroundColor>
				<ExtendedDataType>AmountMST</ExtendedDataType>
				<NoOfDecimals>-1</NoOfDecimals>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>CustAgingLegalEntity_Amount2</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Real</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColor>Highlight3D</BackgroundColor>
				<ExtendedDataType>AmountMST</ExtendedDataType>
				<NoOfDecimals>-1</NoOfDecimals>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>CustAgingLegalEntity_Amount3</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Real</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColor>Highlight3D</BackgroundColor>
				<ExtendedDataType>AmountMST</ExtendedDataType>
				<NoOfDecimals>-1</NoOfDecimals>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>CustAgingLegalEntity_Amount4</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Real</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColor>Highlight3D</BackgroundColor>
				<ExtendedDataType>AmountMST</ExtendedDataType>
				<NoOfDecimals>-1</NoOfDecimals>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>CustAgingLegalEntity_Amount5</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1789569705</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Real</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<BackgroundColor>Highlight3D</BackgroundColor>
				<ExtendedDataType>AmountMST</ExtendedDataType>
				<NoOfDecimals>-1</NoOfDecimals>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>