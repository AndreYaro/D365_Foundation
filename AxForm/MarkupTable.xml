<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MarkupTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class MarkupTable extends FormRun
{
    boolean                                 showDocumentMatching;
    // <GSA>
    boolean                                 isCountryRegion_SA;
    boolean                                 isBankLCImportChargeFeatureEnabled_SA;
    // </GSA>
    boolean                                 originTransOrder;
    // <GEERU>
    #ISOCountryRegionCodes
    boolean countryRegion_RU;
    // </GEERU>

    boolean         isIndiaTaxMarked;
    boolean         isRetailEnabled;
    boolean         isMarkupTable_INEnabled;
    MarkupModule    markupModule;

}
]]></Source>
			</Method>
			<Method>
				<Name>configIsLetterOfCreditControl_SA</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable/disable controls on the form
    /// </summary>
    public void configIsLetterOfCreditControl_SA()
    {
        // <GSA>
        if (markupTable.ModuleType == MarkupModuleType::Vend)
        {
            markupTable_ds.object(fieldNum(MarkupTable, IsLetterOfCredit_SA)).allowEdit(markupTable.CustType == MarkupType::Item);

            if (markupTable.IsLetterOfCredit_SA == NoYes::Yes)
            {
                markupTable_ds.object(fieldNum(MarkupTable, VendType)).allowEdit(false);
                markupTable_ds.object(fieldNum(MarkupTable, VendPosting)).allowEdit(false);
                markupTable_ds.object(fieldNum(MarkupTable, VendorLedgerDimension)).allowEdit(false);
            }
            else
            {
                markupTable_ds.object(fieldNum(MarkupTable, VendType)).allowEdit(true);
                markupTable_ds.object(fieldNum(MarkupTable, VendPosting)).allowEdit(true);
                markupTable_ds.object(fieldNum(MarkupTable, VendorLedgerDimension)).allowEdit(true);
            }
        }
        // </GSA>
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDocumentMatching</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the editable state of the document matching form field.
    /// </summary>
    public void enableDocumentMatching()
    {
        documentMatching.enabled(markupTable.isMarkupOfTypeCustVend());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTransit_RU</Name>
				<Source><![CDATA[
    void enableTransit_RU()
    {
        Transit_RU.visible(markupTable.ModuleType == MarkupModuleType::Cust);
    }

]]></Source>
			</Method>
			<Method>
				<Name>forceUseInMatching</Name>
				<Source><![CDATA[
    /// <summary>
    /// Forces the UseInMatching value to true when the MarkupType is Cust/Vend.
    /// </summary>
    public void forceUseInMatching()
    {
        element.enableDocumentMatching();
        if (markupTable.isMarkupOfTypeCustVend())
        {
            documentMatching_UseInMatching.checked(true);
            markupTable.UseInMatching = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowDebitTypeItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the warning should be showed while checking account type.
    /// </summary>
    /// <returns>true, if the warning should be showed while checking account type; otherwise, false.</returns>
    protected boolean allowDebitTypeItem()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCustVendTypeForModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if account type is supported for a given markup module.
    /// </summary>
    /// <param name = "_markupType">The markup type to check account type for.</param>
    public boolean checkCustVendTypeForModule(MarkupType _markupType)
    {
        if ((!this.allowDebitTypeItem() 
                || _markupType != MarkupType::Item)
            && markupModule == MarkupModuleType::Invent 
            && _markupType != MarkupType::LedgerAccount 
            && !countryRegion_RU)
        {
            warning(strFmt("@SCM:ChargesCodeAccountTypeWarning", "@SYS8343"));
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void  init()
    {
        QueryBuildRange module;
        boolean         markupMaxAmountVisible;

        // <GIN>
        isIndiaTaxMarked = TaxParameters::checkTaxParameters_IN();
        isRetailEnabled = isConfigurationkeyEnabled(configurationKeyNum(Retail));
        isMarkupTable_INEnabled = SysExtensionSerializerExtensionMap::isExtensionEnabled(tableNum(MarkupTable_IN));
        // </GIN>

        super();
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        module = markupTable_ds.query().dataSourceTable(tableNum(MarkupTable)).addRange(fieldNum(MarkupTable, ModuleType));

        if (element.args().parmEnumType() == enumNum(MarkupModuleType))
        {
            markupModule = element.args().parmEnum();
        }
        else
        {
            // When jumping to the form via a markup code field (link) on other forms (previously "View details")
            if (element.args().dataset())
            {
                this.initializeFromCallerTable();
            }
        }

        // Only show the pro-rate flag if the form is opened from Accounts Receivable.
        if (markupModule != MarkupModuleType::Cust && markupModule != MarkupModuleType::Delivery)
        {
            MarkupTable_MCRProRate.visible(false);
        }

        markupMaxAmountVisible = (markupModule == MarkupModuleType::Vend && (VendParameters::find().UseInvoiceMatching));
        markupTable_MaxAmount.visible(markupMaxAmountVisible);

        module.value(queryValue(markupModule));
        this.parmShowDocumentMatching(markupModule == MarkupModuleType::Vend && VendParameters::find().editUseInvoiceMatching());

        // <GSA>
        isCountryRegion_SA = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA]);
        if (isCountryRegion_SA)
        {
            isBankLCImportChargeFeatureEnabled_SA = BankLCImportChargeFeatureChecker_SA::construct().checkFeatureEnabled(false);

            if (isBankLCImportChargeFeatureEnabled_SA)
            {
                element.initBankDocumentControllers_SA(markupModule == MarkupModuleType::Vend);
            }
        }
        // </GSA>

        // <GEERU>
        markupTable_ds.object(fieldNum(MarkupTable, UseCustPostingTypeTransit_RU)).visible(markupModule == MarkupModuleType::Cust);
        // </GEERU>

        // <GIN>
        if (isRetailEnabled && markupModule != MarkupModuleType::Cust && markupModule != MarkupModuleType::Delivery)
        {
            markupTable_IN_ds.object(fieldNum(MarkupTable_IN, AllowTax)).visible(false);
        }
        // </GIN>

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            TaxInformation.visible(true);
        }
        // </GIN>

        if (RetailParameters::isRetailAutoChargesEnabledAndInUse()
            && (markupModule == MarkupModuleType::Cust || markupModule == MarkupModuleType::Delivery))
        {
            markupTable_ds.object(fieldNum(MarkupTable, IsShipping)).visible(true);
            markupTable_ds.object(fieldNum(MarkupTable, Refundable)).visible(true);
        }

        TaxRateTypeGroup.visible(TaxIntegrationUtils::isTaxInformationEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromCallerTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form based on the caller table.
    /// </summary>
    protected void initializeFromCallerTable()
    {
        switch (element.args().dataset())
        {
            case tableNum(MarkupTrans):
                MarkupTrans markupTrans = element.args().record();
                markupModule    = markupTrans.ModuleType;

                if (markupTrans.TransTableId == tableNum(InventTransferLine) ||
                    markupTrans.TransTableId == tableNum(InventTransferTable))
                {
                    originTransOrder = true;
                }
                break;

            case tableNum(MarkupAutoLine):
                MarkupAutoLine markupAutoLine = element.args().record();
                markupModule    = markupAutoLine.ModuleType;
                break;

            case tableNum(ShipCarrierCompany):
            case tableNum(MCRBrokerContractTable):
            case tableNum(MCRBrokerContractLine):
            case tableNum(RetailParameters):
                markupModule    = MarkupModuleType::Cust;
                break;

            case tableNum(MarkupTolerance):
                markupModule    = MarkupModuleType::Vend;
                break;

            case tableNum(PurchLine_W):
            case tableNum(InventTable):
                if (countryRegion_RU)
                {
                    markupTable_ds.query().dataSourceTable(tableNum(MarkupTable)).clearRange(fieldNum(MarkupTable, ModuleType));
                    markupModule = MarkupModuleType::Vend;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBankDocumentControllers_SA</Name>
				<Source><![CDATA[
    private void initBankDocumentControllers_SA(boolean _isAccountPayable)
    {
        // <GSA>
        if (_isAccountPayable)
        {
            groupBankLCCharge.visible(true);
            markupTable_ds.object(fieldNum(MarkupTable, IsLetterOfCredit_SA)).visible(true);
        }
        else
        {
            groupBankLCCharge.visible(false);
            markupTable_ds.object(fieldNum(MarkupTable, IsLetterOfCredit_SA)).visible(false);
        }
        // </GSA>
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDocumentMatching</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls when the document matching column is visible.
    /// </summary>
    /// <param name="_show">
    /// true if the document matching column is visible; otherwise, false.
    /// </param>
    /// <returns>
    /// true if the document matching column is visible; otherwise, false.
    /// </returns>
    public boolean parmShowDocumentMatching(boolean _show = showDocumentMatching)
    {
        showDocumentMatching = _show;
        documentMatching.visible(showDocumentMatching);
        return showDocumentMatching;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>MarkupTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            super();

            if (isMarkupTable_INEnabled)
            {
                markupTable_IN.SysExtensionSerializerExtensionMap::insertAfterBaseTable(markupTable);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.updateRange();
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateRange</Name>
						<Source><![CDATA[
        protected void updateRange()
        {
            if (element.args().dataset() && element.args().record())
            {
                switch (element.args().dataset())
                {
                    case tableNum(MarkupTable):
                        MarkupTable markupTableLocal = element.args().record() as MarkupTable;
                        this.queryBuildDataSource().clearDynalinks();
                        SysQuery::findOrCreateRange(this.queryBuildDataSource(), fieldNum(MarkupTable, RecId)).value(queryValue(markupTableLocal.RecId));
                        break;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the state of the form state when a new record is active.
        /// </summary>
        /// <returns>
        /// Always returns 1.
        /// </returns>
        public int active()
        {
            int ret = super();

            element.enableDocumentMatching();
            // <GSA>
            if (isBankLCImportChargeFeatureEnabled_SA)
            {
                element.configIsLetterOfCreditControl_SA();
            }
            // </GSA>

            // <GIN>
            if (isIndiaTaxMarked)
            {
                markupTable_ds.object(fieldNum(MarkupTable, TaxItemGroup)).enabled(markupTable_IN.AllowTax);
            }
            // </GIN>

            // <GEERU>
            if (countryRegion_RU)
            {
                element.enableTransit_RU();
                markupCustPosting_RU.visible(markupTable.ModuleType == MarkupModuleType::Cust);
            }
            // </GEERU>
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                && markupTable.CustType == MarkupType::Item
                && markupTable.VendType == MarkupType::LedgerAccount
                && (markupTable_IN.ServiceAccountingCodeTable || markupTable_IN.HSNCodeTable))
            {
                markupTable_IN.ServiceAccountingCodeTable = 0;
                markupTable_IN.HSNCodeTable = 0;
                ret = checkFailed("@TaxGST:ChargeCodeTypeItemToLedgerCannotCalcTax");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CustType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GSA>
                if (isBankLCImportChargeFeatureEnabled_SA)
                {
                    element.configIsLetterOfCreditControl_SA();
                }
                // </GSA>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IsLetterOfCredit_SA</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isBankLCImportChargeFeatureEnabled_SA)
                {
                    element.configIsLetterOfCreditControl_SA();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>MarkupTable_IN</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (isMarkupTable_INEnabled &&
                markupTable_IN.MarkupTable != 0)
            {
                // no-op because a record with an empty FK is not valid
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (isMarkupTable_INEnabled)
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AllowTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                markupTable_ds.object(fieldNum(MarkupTable, TaxItemGroup)).enabled(markupTable_IN.AllowTax);
                if (!markupTable_IN.AllowTax)
                {
                    markupTable.TaxItemGroup = '';
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CustType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        // Remove Customer/Vendor if originating from transfer orders.
        public void enter()
        {
            super();

            if (originTransOrder)
            {
                ttsbegin;
                this.delete(enum2str(MarkupType::CustVend));
                ttscommit;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            MarkupType markupType = this.selection();

            if (element.allowDebitTypeItem())
            {
                if (markupModule == MarkupModuleType::Invent
                    && markupType != MarkupType::LedgerAccount
                    && markupType != MarkupType::Item
                    && !countryRegion_RU)
                {
                    warning(strFmt("@SCM:ChargesCodeAccountTypeWarning", "@SYS8343"));
                    return false;
                }
            }
            else if (!element.checkCustVendTypeForModule(markupType))
            {
                return false;
            }

            boolean ret = super();
            markupTable.CustType = markupType;
            element.forceUseInMatching();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret = super();
            markupTable.CustType = this.selection();
            element.forceUseInMatching();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        // Remove Customer/Vendor if originating from transfer orders.
        public void enter()
        {
            super();

            if (originTransOrder)
            {
                ttsbegin;
                this.delete(enum2str(MarkupType::CustVend));
                ttscommit;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            MarkupType markupType = this.selection();
            if (!element.checkCustVendTypeForModule(markupType))
            {
                return false;
            }

            boolean ret = super();
            markupTable.VendType = markupType;
            element.forceUseInMatching();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret = super();
            markupTable.VendType = this.selection();
            element.forceUseInMatching();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>MarkupTable</Name>
			<Table>MarkupTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustomerLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomPaymType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Intrastat_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeIntoIntrastatInvoiceValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeIntoIntrastatStatisticalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsLetterOfCredit_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsShipping</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupClassification_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRBrokerContractFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRProRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Refundable</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SATProductCode_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SATUnitCode_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCustPostingTypeTransit_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseInMatching</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>MarkupTable_IN</Name>
			<Table>MarkupTable_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonGST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>MarkupTable</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SCM:MarkupTableCaption</Caption>
		<DataSource xmlns="">MarkupTable</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Left xmlns="">88</Left>
		<LeftMode xmlns="">Manual</LeftMode>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Top xmlns="">88</Top>
		<TopMode xmlns="">Manual</TopMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LanguageTxt</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>MarkupTable</DataSource>
								<MenuItemName>LanguageTxt</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ExtCodeValueTable</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>MarkupTable</DataSource>
								<MenuItemName>ExtCodeValueTable</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MarkupCustPosting_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>MarkupTable</DataSource>
								<MenuItemName>MarkupCustPosting_RU</MenuItemName>
								<Text>@SYS5943</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>MarkupTable</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>OverviewGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>OverviewGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyMarkupTable_MarkupCode</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>MarkupCode</DataField>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyMarkupTable_Txt</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:MarkupTable_GridReadOnlyMarkupTable_Txt</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Txt</DataField>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridReadOnlyClassificationGroup_BR</Name>
								<CountryRegionCodes>BR</CountryRegionCodes>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GridReadOnlyClassificationGroup_BR_MarkupClassification_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MarkupClassification_BR</DataField>
										<DataSource>MarkupTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataGroup>Classification_BR</DataGroup>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>MarkupTable</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>715827880</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MarkupTable_MarkupCode</Name>
						<ElementPosition>268435455</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>MarkupCode</DataField>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MarkupTable_Txt</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:MarkupTable_MarkupTable_Txt</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Txt</DataField>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>MarkupTable_IN_AllowTax</Name>
						<ElementPosition>603979773</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>AllowTax</DataField>
						<DataSource>MarkupTable_IN</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>MarkupTable_MarkupClassification_BR</Name>
						<ElementPosition>671088637</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>MarkupClassification_BR</DataField>
						<DataSource>MarkupTable</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>MarkupTable_TaxItemGroup</Name>
						<ElementPosition>677479958</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>TaxItemGroup</DataField>
						<DataSource>MarkupTable</DataSource>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>MarkupTable_MaxAmount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>958698054</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>MaxAmount</DataField>
						<DataSource>MarkupTable</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>MarkupTable_MCRProRate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Retail</ConfigurationKey>
						<ElementPosition>1418873121</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>MCRProRate</DataField>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>MarkupTable_CustomPaymType_RU</Name>
						<ElementPosition>1879048188</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustomPaymType_RU</DataField>
						<DataSource>MarkupTable</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>MarkupTable_IsShipping</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>IsShipping</DataField>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>MarkupTable_Refundable</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Refundable</DataField>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Posting</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Debit</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustType</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustType</DataField>
										<DataSource>MarkupTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustPosting</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustPosting</DataField>
										<DataSource>MarkupTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>MarkupTable</DataSource>
										<ReferenceField>CustomerLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS9512</Caption>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupBankLCCharge</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>BankDocument</ConfigurationKey>
								<CountryRegionCodes>SA</CountryRegionCodes>
								<ElementPosition>1932735281</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkupTable_IsLetterOfCredit_SA</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:MarkupTable_MarkupTable_IsLetterOfCredit_SA</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsLetterOfCredit_SA</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS332252</Caption>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Credit</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendType</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendType</DataField>
										<DataSource>MarkupTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendPosting</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendPosting</DataField>
										<DataSource>MarkupTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>VendAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>MarkupTable</DataSource>
										<ReferenceField>VendorLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@sys7084</Caption>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocumentMatching</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>DocumentMatching_UseInMatching</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PurchInvoiceMatching</ConfigurationKey>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:MarkupTable_DocumentMatching_UseInMatching</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editUseInMatching</DataMethod>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS25194</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Transit_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Transit_RU_UseCustPostingTypeTransit_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseCustPostingTypeTransit_RU</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Transit_RU</DataGroup>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12919</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ForeignTradeTab</Name>
						<ConfigurationKey>ForeignTrade</ConfigurationKey>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ForeignTradeGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignTradeGroup_IncludeIntoIntrastatInvoiceValue</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncludeIntoIntrastatInvoiceValue</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ForeignTradeGroup_IncludeIntoIntrastatStatisticalValue</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncludeIntoIntrastatStatisticalValue</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ForeignTrade</DataGroup>
								<DataSource>MarkupTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS27650</Caption>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>EInvoice_MX</Name>
						<CountryRegionCodes>MX</CountryRegionCodes>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EInvoiceGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EInvoice_MX_SATProductCode_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SATProductCode_MX</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EInvoice_MX_SATUnitCode_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SATUnitCode_MX</DataField>
										<DataSource>MarkupTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>EInvoice_MX</DataGroup>
								<DataSource>MarkupTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS341123</Caption>
						<DataSource>MarkupTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TaxInformation</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>IN</CountryRegionCodes>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxInformationGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TaxInformationGroup_Exempt</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Exempt</DataField>
										<DataSource>MarkupTable_IN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TaxInformationGroup_NonGST</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>NonGST</DataField>
										<DataSource>MarkupTable_IN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>TaxInformationGroup_ServiceAccountingCodeTable</Name>
										<Type>Int64</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ServiceAccountingCodeTable</DataField>
										<DataSource>MarkupTable_IN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TaxInformationGroup_ServiceCategory</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ServiceCategory</DataField>
										<DataSource>MarkupTable_IN</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>TaxInformationGroup_HSNCodeTable</Name>
										<Type>Int64</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>HSNCodeTable</DataField>
										<DataSource>MarkupTable_IN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TaxInformationGroup_ITCCategory</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ITCCategory</DataField>
										<DataSource>MarkupTable_IN</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>TaxInformation</DataGroup>
								<DataSource>MarkupTable_IN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxRateTypeGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxRateTypeGroup_TaxRateType</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>MarkupTable</DataSource>
										<ReferenceField>TaxRateType</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxRateTypeGroup</DataGroup>
								<DataSource>MarkupTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS33550</Caption>
						<DataSource>MarkupTable_IN</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>