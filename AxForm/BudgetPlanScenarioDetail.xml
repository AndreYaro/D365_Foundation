<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetPlanScenarioDetail</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetPlanScenarioDetail extends FormRun
{
    BudgetPlanInquiryRequest budgetPlanInquiryRequest;
    MenuItemName             menuItemName;
    BudgetPlanLayoutManager  layoutManager;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args().caller())
        {
            switch (element.args().caller().name())
            {
                case formstr(BudgetPlanOrganizationHierarchyView):
                    element.setFormControlsForOrganizationHierarchyView(element.args().record(), element.args().callerFormControl() as FormRealControl);
                    menuItemName = menuItemDisplayStr(BudgetPlanDetailInquiry);
                    break;

                case formstr(BudgetPlanHierarchyView):
                    element.setFormControlsForHierarchyView(element.args().record(), element.args().callerFormControl() as FormRealControl);
                    menuItemName = menuItemDisplayStr(BudgetPlanDetailInquiry);
                    break;

                case formStr(BudgetPlan):
                    layoutManager = element.args().caller().getBudgetPlanLayoutManager();
                    element.setFormControlsForBudgetPlanForm(element.args().record(), element.args().callerFormControl() as FormRealControl);
                    menuItemName = menuItemDisplayStr(BudgetPlanLineDetailInquiry);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormControlsForOrganizationHierarchyView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the values of the form controls using the object of the <c>BudgetPlanOrganizationHierarchySummaryTmp</c> buffer passed by the form's caller.
    /// </summary>
    /// <param name='_budgetPlanOrganizationHierarchySummaryTmp'>
    /// The buffer of the <c>BudgetPlanOrganizationHierarchySummaryTmp</c> table.
    /// </param>
    /// <param name='_formRealControl'>
    /// An instance of the <c>FormRealControl</c> object.
    /// </param>
    public void setFormControlsForOrganizationHierarchyView(BudgetPlanOrganizationHierarchySummaryTmp _budgetPlanOrganizationHierarchySummaryTmp, FormRealControl _formRealControl)
    {
        BudgetPlanDetailInquiryRequest budgetPlanDetailInquiryRequest = new BudgetPlanDetailInquiryRequest();

        budgetPlanDetailInquiryRequest.initFromBudgetPlanOrganizationHierarchySummaryTmp(_budgetPlanOrganizationHierarchySummaryTmp);

        budgetPlanDetailInquiryRequest.parmIsCalledByAmountControl(this.isCalledByAmountControl(_formRealControl.name()));
        budgetPlanInquiryRequest = budgetPlanDetailInquiryRequest;

        this.populateAmountQuantityField(_budgetPlanOrganizationHierarchySummaryTmp.AccountingCurrencyAmount, _budgetPlanOrganizationHierarchySummaryTmp.Quantity, _formRealControl, false);
        BudgetPlanScenario.value(_budgetPlanOrganizationHierarchySummaryTmp.Scenario);

        if (budgetPlanDetailInquiryRequest.parmIsCalledByAmountControl())
        {
            BudgetClass.setEditText(enum2Str(_budgetPlanOrganizationHierarchySummaryTmp.BudgetClass));
        }
        else
        {
            BudgetClass.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormControlsForHierarchyView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the values of the form controls using the object of the <c>BudgetPlanLineHierarchyViewSummaryTmp</c> buffer passed by the form's caller.
    /// </summary>
    /// <param name='_budgetPlanLineHierarchyViewSummaryTmp'>
    /// The buffer of the <c>BudgetPlanLineHierarchyViewSummaryTmp</c> table.
    /// </param>
    /// <param name='_formRealControl'>
    /// An instance of the <c>FormRealControl</c> object.
    /// </param>
    public void setFormControlsForHierarchyView(BudgetPlanLineHierarchyViewSummaryTmp _budgetPlanLineHierarchyViewSummaryTmp, FormRealControl _formRealControl)
    {
        BudgetPlanDetailInquiryRequest budgetPlanDetailInquiryRequest = new BudgetPlanDetailInquiryRequest();
        budgetPlanDetailInquiryRequest.initFromBudgetPlanLineHierarchyViewSummaryTmp(_budgetPlanLineHierarchyViewSummaryTmp);
        budgetPlanDetailInquiryRequest.parmIsCalledByAmountControl(this.isCalledByAmountControl(_formRealControl.name()));
        budgetPlanInquiryRequest = budgetPlanDetailInquiryRequest;

        this.populateAmountQuantityField(_budgetPlanLineHierarchyViewSummaryTmp.AccountingCurrencyAmount, _budgetPlanLineHierarchyViewSummaryTmp.Quantity, _formRealControl, false);

        BudgetPlanScenario.value(_budgetPlanLineHierarchyViewSummaryTmp.BudgetPlanScenario);

        if (budgetPlanDetailInquiryRequest.parmIsCalledByAmountControl())
        {
            BudgetClass.setEditText(enum2Str(_budgetPlanLineHierarchyViewSummaryTmp.BudgetClass));
        }
        else
        {
            BudgetClass.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCalledByAmountControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the type of the control that called this form.
    /// </summary>
    /// <param name = "_callerControlName">
    /// The name of the caller control.
    /// </param>
    /// <returns>
    /// true, if the caller is amount field, otherwise false.
    /// </returns>
    public boolean isCalledByAmountControl(Name _callerControlName)
    {
        return strContains(_callerControlName, BudgetPlanningConstants::Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateAmountQuantityField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the amount and quantity control conditionally based on the caller form and control.
    /// </summary>
    /// <param name='_amount'>
    /// The value of the amount field.
    /// </param>
    /// <param name='_budgetPlanLineHierarchyViewSummaryTmp'>
    /// The value of the quantity field.
    /// </param>
    /// <param name = "_formRealControl">
    /// An instance of the <c>FormRealControl</c> object.
    /// </param>
    /// <param name = "_isFromBudgetPlan">
    /// A boolean value which is true when the caller is budget plan form, otherwise false.
    /// </param>
    public void populateAmountQuantityField(
        BudgetPlanCurrencyAmount _amount,
        BudgetPlanQuantity       _quantity,
        FormRealControl          _formRealControl,
        boolean                  _isCalledFromBudgetPlan = true)
    {
        if (this.isCalledByAmountControl(_formRealControl.name()))
        {
            if (_isCalledFromBudgetPlan)
            {
                TransactionCurrencyAmount.realValue(_amount);
                TransactionCurrencyAmount.visible(true);
                AccountingCurrencyAmount.visible(false);
            }
            else
            {
                AccountingCurrencyAmount.realValue(_amount);
                AccountingCurrencyAmount.visible(true);
            }
        }
        else
        {
            if (_isCalledFromBudgetPlan)
            {
                Quantity.realValue(_quantity);
            }
            else
            {
                Quantity.realValue(_quantity);
            }

            Quantity.visible(true);
            TransactionCurrencyAmount.visible(false);
            AccountingCurrencyAmount.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormControlsForBudgetPlanForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the values of the form controls using the object of the <c>BudgetPlanLineActiveView</c> buffer and <c>FormRealControl</c> object passed by the form's caller.
    /// </summary>
    /// <param name='_budgetPlanLineActiveView'>
    /// The buffer of the <c>BudgetPlanLineActiveView</c> table.
    /// </param>
    /// <param name='_formRealControl'>
    /// An instance of the <c>FormRealControl</c> object.
    /// </param>
    public void setFormControlsForBudgetPlanForm(BudgetPlanLineActiveView _budgetPlanLineActiveView, FormRealControl _formRealControl)
    {
        BudgetPlanColumn budgetPlanColumn;

        select budgetPlanColumn
            where budgetPlanColumn.Name == _formRealControl.labelText();

        BudgetPlanLineDetailInquiryRequest budgetPlanLineDetailInquiryRequest = BudgetPlanLineDetailInquiryRequest::construct();
        budgetPlanLineDetailInquiryRequest.initFromActiveViewColumnLayoutManager(_budgetPlanLineActiveView, budgetPlanColumn, layoutManager);
        budgetPlanInquiryRequest = budgetPlanLineDetailInquiryRequest;

        BudgetPlanColumnControl.value(budgetPlanColumn.RecId);

        this.populateAmountQuantityField(_budgetPlanLineActiveView.getFieldValue(_formRealControl.name()), _budgetPlanLineActiveView.getFieldValue(_formRealControl.name()), _formRealControl);

        BudgetPlanScenario.value(budgetPlanColumn.Scenario);
        StartDateControl.dateValue(budgetPlanLineDetailInquiryRequest.parmStartDate());
        EndDateControl.dateValue(budgetPlanLineDetailInquiryRequest.parmEndDate());

        BudgetPlanColumnControl.visible(true);
        StartDateControl.visible(true);
        EndDateControl.visible(true);
        BudgetClass.visible(false);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>MoreDetails</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Display, menuItemName, budgetPlanInquiryRequest);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Budget:BudgetPlanScenarioDetail</Caption>
		<Pattern xmlns="">FormPartFactboxCard</Pattern>
		<PatternVersion xmlns="">UX7 1.0</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormReferenceGroupControl">
				<Name>BudgetPlanColumnControl</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ReferenceGroup</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ExtendedDataType>BudgetPlanColumnRecId</ExtendedDataType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormReferenceGroupControl">
				<Name>BudgetPlanScenario</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ReferenceGroup</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ExtendedDataType>BudgetPlanScenarioRecId</ExtendedDataType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormDateControl">
				<Name>StartDateControl</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Date</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Label>@SYS2168</Label>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormDateControl">
				<Name>EndDateControl</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Date</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Label>@SYS22882</Label>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormComboBoxControl">
				<Name>BudgetClass</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ComboBox</Type>
				<FormControlExtension
					i:nil="true" />
				<EnumType>BudgetClass</EnumType>
				<Items />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>AccountingCurrencyAmount</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Real</Type>
				<FormControlExtension
					i:nil="true" />
				<Alignment>Left</Alignment>
				<AllowNegative>Yes</AllowNegative>
				<ExtendedDataType>BudgetPlanAccountingCurrencyAmount</ExtendedDataType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>TransactionCurrencyAmount</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Real</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Alignment>Left</Alignment>
				<AllowNegative>Yes</AllowNegative>
				<ExtendedDataType>BudgetPlanCurrencyAmount</ExtendedDataType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormRealControl">
				<Name>Quantity</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Real</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Alignment>Left</Alignment>
				<ExtendedDataType>BudgetPlanQuantity</ExtendedDataType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>MoreLinkGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>MoreDetails</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoRight</LeftMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Alignment>Right</Alignment>
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Style>Link</Style>
						<Text>@Budget:BudgetPlanScenarioMoreDetails</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>