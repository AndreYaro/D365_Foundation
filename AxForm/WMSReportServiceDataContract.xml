<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WMSReportServiceDataContract</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WMSReportServiceDataContract extends FormRun
{
    #AOT
    #Properties
    #SRSFramework

    SRSPrintDestinationSettings srsPrintDestinationSettings;

    // members necessary to have a file name lookup control on the form
    FilenameFilter      filenameLookupFilter;
    str                 filenameLookupInitialPath;
    str                 filenameLookupTitle;
    str                 filenameLookupFilename;
    str                 folderLookupTitle;

    Object              dialogObj;
    WMSReportSetupType  reportSetupType;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Command control message called when the form's OK button is clicked.
    /// </summary>
    public void closeOk()
    {
        this.updateDataContract();

        if (this.controller().checkCloseDialog())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>controller</Name>
				<Source><![CDATA[
    public SysOperationServiceController controller()
    {
        return this.dialog().controller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public SysOperationDialog dialog()
    {
        if (dialogObj == null)
        {
            dialogObj = Dialog::getDialogFromCaller(this);
        }

        return dialogObj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filenameLookupFileName</Name>
				<Source><![CDATA[
    str filenameLookupFileName(str filter = filenameLookupFilename)
    {
        filenameLookupFilename = filter;

        return filenameLookupFilename;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filenameLookupFilter</Name>
				<Source><![CDATA[
    FilenameFilter filenameLookupFilter(container filter = filenameLookupFilter)
    {
        filenameLookupFilter = filter;

        return filenameLookupFilter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filenameLookupInitialPath</Name>
				<Source><![CDATA[
    str filenameLookupInitialPath(str path = filenameLookupInitialPath)
    {
        filenameLookupInitialPath   = path;

        return filenameLookupInitialPath;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filenameLookupTitle</Name>
				<Source><![CDATA[
    str filenameLookupTitle(str filter = filenameLookupTitle)
    {
        filenameLookupTitle = filter;

        return filenameLookupTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filePathLookupTitle</Name>
				<Source><![CDATA[
    str filePathLookupTitle(str title = folderLookupTitle)
    {
        return this.folderLookupTitle(title);
    }

]]></Source>
			</Method>
			<Method>
				<Name>folderLookupTitle</Name>
				<Source><![CDATA[
    str folderLookupTitle(str title = folderLookupTitle)
    {
        folderLookupTitle = title;

        return folderLookupTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        SysOperationServiceController serviceController = this.controller();
        if (serviceController.parmClassName() == classStr(WMSWorkLoadService))
        {
            reportSetupType = WMSReportSetupType::Workload;
        }
        else if (serviceController.parmClassName() == classStr(WMSSpaceUtilService))
        {
            reportSetupType = WMSReportSetupType::SpaceUtilization;
        }

        this.setFormCaption();
        this.setReportSetupIdCtrl();

        super();

        this.dialog().mainFormGroup(dialogStartGrp);
        this.dialog().curFormGroup(dialogStartGrp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when a control is selected on the form.
    /// </summary>
    /// <param name="_control">
    /// The control that gets selected.
    /// </param>
    /// <returns>
    /// Boolean value indicating if the selection is valid.
    /// </returns>
    public boolean selectControl(FormControl _control)
    {
        boolean ret;

        ret = super(_control);

        // check to see if selectCtrl messages need to be dispatched
        if (this.dialog().allowUpdateOnSelectCtrl())
        {
            this.controller().dialogSelectCtrl();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPrintDestination</Name>
				<Source><![CDATA[
    void selectPrintDestination()
    {
        FormRun formRun;
        Args args = new Args();
        container printerNameDestination;
        SRSPrintDestinationSettings printSettings = this.controller().getDataContractObject(classStr(SRSPrintDestinationSettings));

        if (printSettings)
        {
            args.caller(printSettings);
            args.name(formStr(SRSPrintDestinationSettingsForm));
            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait(true);

            if (formRun.closedOk())
            {
                printerNameDestination = SrsReportRunUtil::getPrinterNameDestination(printSettings);
                if (printerNameDestination != conNull())
                {
                    printerName.text(conPeek(printerNameDestination, 1));
                    printDestination.text(conPeek(printerNameDestination, 2));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormCaption</Name>
				<Source><![CDATA[
    private void setFormCaption()
    {
        this.design().caption(this.controller().parmDialogCaption());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportSetupIdCtrl</Name>
				<Source><![CDATA[
    private void setReportSetupIdCtrl()
    {
        WMSReportServiceController   serviceController;

        if (this.controller() is WMSReportServiceController)
        {
            serviceController = this.controller() as WMSReportServiceController;
            reportSetupId.text(serviceController.getDataContract().parmReportSetupId());
        }

        if (reportSetupType == WMSReportSetupType::Workload)
        {
            ReportSetupId.label("@SYS35735");
            ReportSetupId.helpText("@GLS180410");
        }
        else if (reportSetupType == WMSReportSetupType::SpaceUtilization)
        {
            ReportSetupId.label("@SYS121867");
            ReportSetupId.helpText("@GLS180392");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataContract</Name>
				<Source><![CDATA[
    private void updateDataContract()
    {
        WMSReportServiceController   serviceController;

        if (this.controller() is WMSReportServiceController)
        {
            serviceController = this.controller() as WMSReportServiceController;
            serviceController.getDataContract().parmReportSetupId(reportSetupId.valueStr());
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ReportSetupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            WMSReportSetup  reportSetup;
            Args            args = new Args();

            reportSetup.ReportSetupId = this.valueStr();
            args.lookupRecord(reportSetup);

            if (reportSetupType == WMSReportSetupType::Workload)
            {
                MenuFunction::runClient(menuitemDisplayStr(WMSWorkloadCapacity), MenuItemType::Display, false, args);
            }
            else if (reportSetupType == WMSReportSetupType::SpaceUtilization)
            {
                MenuFunction::runClient(menuitemDisplayStr(WMSSpaceUtilSetup), MenuItemType::Display, false, args);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WMSReportSetup::lookup(this, reportSetupType);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            DictField dictField;
            DictTable dictTable;

            ret = super();

            if (ret && !WMSReportSetup::exist(this.valueStr(), reportSetupType))
            {
                dictTable = new DictTable(tableNum(WMSReportSetup));
                dictField = new DictField(tableNum(WMSReportSetup), fieldNum(WMSReportSetup, ReportSetupId));
                ret = checkFailed(strFmt("@GLS180006", this.valueStr(), dictField.label(), dictTable.label()));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Destinations</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.selectPrintDestination();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AlignChild xmlns="">No</AlignChild>
		<AlignChildren xmlns="">No</AlignChildren>
		<AllowUserSetup xmlns="">No</AllowUserSetup>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@SYS15111</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<SaveSize xmlns="">No</SaveSize>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DialogStartGrp</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<Caption>@SYS28007</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReportSetupId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>WMSReportSetupId</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentPrintDestination</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PrinterName</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS131521</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS3723</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PrintDestination</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS131522</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS131519</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Destinations</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS131523</HelpText>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<Text>@SYS131520</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<HideIfEmpty>No</HideIfEmpty>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButtonCancel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
