<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SettlementView</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SettlementView extends FormRun
{
    CustVendTrans originatingCustVendTrans;
    ModuleCustVend moduleCustVend;
    Map transBalanceMap;
    private boolean shouldHideExchAdjTransactions = false;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().record())
        {
            originatingCustVendTrans = element.args().record();
        }

        switch (originatingCustVendTrans.TableId)
        {
            case tableNum(CustTrans):
                moduleCustVend = ModuleCustVend::Cust;
                break;

            case tableNum(VendTrans):
                moduleCustVend = ModuleCustVend::Vend;
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        super();

        this.populateSettlementView();

        this.findExchAdjState();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateSettlementView</Name>
				<Source><![CDATA[
    private void populateSettlementView(boolean _restrictSearchToOriginalDocument = NoYes::Yes)
    {
        NoYes includePaymentJournals;

        if (!_restrictSearchToOriginalDocument)
        {
            includePaymentJournals = NoYes::Yes;
        }

        SettlementViewBuilder settlementViewBuilder = SettlementViewBuilder::construct();
        settlementViewBuilder.parmIncludePaymentJournals(includePaymentJournals);
        settlementViewBuilder.parmRestrictSearchToOriginalDocument(_restrictSearchToOriginalDocument);

        SettlementView localSettlementView = settlementViewBuilder.createView(originatingCustVendTrans);

        SettlementView.linkPhysicalTableInstance(localSettlementView);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        this.setSettlementHeader();

        transBalanceMap = new Map(Types::Container, Types::Real);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSettlementHeader</Name>
				<Source><![CDATA[
    private void setSettlementHeader()
    {
        settlementHeader.text(strFmt("@SYS327590", SettlementView.Voucher, SettlementView.AccountName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setViewRelatedPaymentsControls</Name>
				<Source><![CDATA[
    private void setViewRelatedPaymentsControls(boolean _shouldShowRelatedJournalButton)
    {
        ViewRelatedPaymentJournals.visible(_shouldShowRelatedJournalButton);
        ViewSettlementsOnly.visible(!_shouldShowRelatedJournalButton);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOpenOrClosedSettlementByBalance</Name>
				<Source><![CDATA[
    private void setOpenOrClosedSettlementByBalance()
    {
        AmountCur transBalance;
        container transBalanceKey = [SettlementView.RecId, SettlementView.VoucherDataAreaId];

        if (SettlementView)
        {
            if (transBalanceMap.exists(transBalanceKey))
            {
                transBalance = transBalanceMap.lookup(transBalanceKey);
            }
            else
            {
                changecompany(SettlementView.VoucherDataAreaId)
                {
                    switch (SettlementView.RefTableId)
                    {
                        case tableNum(CustTrans):
                            CustTrans custTrans = CustTrans::find(SettlementView.RefRecId);
                            transBalance = custTrans.remainAmountCur();
                            break;

                        case tableNum(VendTrans):
                            VendTrans vendTrans = VendTrans::find(SettlementView.RefRecId);
                            transBalance = vendTrans.remainAmountCur();
                            break;
                    }
                }

                transBalanceMap.insert(transBalanceKey, transBalance);
            }
        }

        boolean doesOpenBalanceExist = transBalance != 0;

        OpenTransactions.visible(doesOpenBalanceExist);
        ClosedTransactions.visible(!doesOpenBalanceExist);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runMenuItem</Name>
				<Source><![CDATA[
    private void runMenuItem(str _menuItemStr, MenuItemType _menuItemType, Common _record, Common _lookupRecord = null)
    {
        MenuFunction mf = new MenuFunction(_menuItemStr, _menuItemType);
        Args args = new Args();
        args.caller(this);

        if (_record)
        {
            args.record(_record);
        }

        if (_lookupRecord)
        {
            args.lookupRecord(_lookupRecord);
        }

        if (mf && mf.checkAccessRights())
        {
            mf.run(args);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>findExchAdjState</Name>
				<Source><![CDATA[
    private void findExchAdjState()
    {
        if (element.args() && element.args().caller())
        {
            SettlementViewIExchAdjState iExchAdjState = element.args().caller() as SettlementViewIExchAdjState;

            if (iExchAdjState != null)
            {
                shouldHideExchAdjTransactions = iExchAdjState.shouldHideExchAdjTransactions();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideExchAdjTransactions</Name>
				<Source><![CDATA[
    private void hideExchAdjTransactions()
    {
        str notExchAdjTransactions = SysQuery::valueNot(queryValue(LedgerTransType::ExchAdjustment));

        SysQuery::findOrCreateRange(SettlementView_ds.queryBuildDataSource(), fieldnum(SettlementView, TransactionType)).value(notExchAdjTransactions);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SettlementView</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.setOpenOrClosedSettlementByBalance();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (shouldHideExchAdjTransactions)
            {
                element.hideExchAdjTransactions();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ViewRelatedPaymentJournals</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.populateSettlementView(NoYes::No);
            element.setViewRelatedPaymentsControls(false);
            SettlementView_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewSettlementsOnly</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.populateSettlementView();
            element.setViewRelatedPaymentsControls(true);
            SettlementView_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SettlementHistory</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            changecompany(SettlementView.VoucherDataAreaId)
            {
                if (moduleCustVend == ModuleCustVend::Cust)
                {
                    CustTrans custTrans = CustTrans::find(SettlementView.RefRecId);
                    element.runMenuItem(menuItemDisplayStr(CustSettlement), MenuItemType::Display, custTrans);
                }
                else if (moduleCustVend == ModuleCustVend::Vend)
                {
                    VendTrans vendTrans = VendTrans::find(SettlementView.RefRecId);
                    element.runMenuItem(menuItemDisplayStr(VendSettlement), MenuItemType::Display, vendTrans);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewAccounting</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            SettlementViewVoucherTmp voucherTmp;
            SettlementView selectedSettlementView;
            Set selectedVouchers = new Set(Types::Container);

            for (selectedSettlementView = getFirstSelection(SettlementView_ds); selectedSettlementView; selectedSettlementView = SettlementView_ds.getNext())
            {
                // The same voucher might appear multiple times for selection; reduce to the distinct set.
                container voucherKey = [selectedSettlementView.Voucher, selectedSettlementView.VoucherDataAreaId, selectedSettlementView.TransDate];

                if (selectedVouchers.add(voucherKey))
                {
                    voucherTmp.clear();

                    voucherTmp.Voucher = selectedSettlementView.Voucher;
                    voucherTmp.VoucherDataAreaId = selectedSettlementView.VoucherDataAreaId;
                    voucherTmp.TransDate = selectedSettlementView.TransDate;

                    voucherTmp.insert();
                }
            }

            element.runMenuItem(menuItemDisplayStr(SettlementAccountingView), MenuItemType::Display, voucherTmp);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Export</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            info("@CashManagement:SettlementViewExportDelimiter");

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenTransactions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            changecompany(SettlementView.VoucherDataAreaId)
            {
                if (moduleCustVend == ModuleCustVend::Cust)
                {
                    CustTable custTable = CustTable::find(originatingCustVendTrans.AccountNum);
                    CustTransOpen custTransOpen = CustTransOpen::findRefId(SettlementView.RefRecId);

                    element.runMenuItem(menuItemDisplayStr(CustOpenTrans), MenuItemType::Display, custTable, custTransOpen);
                }
                else if (moduleCustVend == ModuleCustVend::Vend)
                {
                    VendTable vendTable = VendTable::find(originatingCustVendTrans.AccountNum);
                    VendTransOpen vendTransOpen = VendTransOpen::findRefId(SettlementView.RefRecId);

                    element.runMenuItem(menuItemDisplayStr(VendOpenTrans), MenuItemType::Display, vendTable, vendTransOpen);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClosedTransactions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            changecompany(SettlementView.VoucherDataAreaId)
            {
                if (moduleCustVend == ModuleCustVend::Cust)
                {
                    CustTrans custTrans = CustTrans::find(SettlementView.RefRecId);
                    element.runMenuItem(menuItemDisplayStr(CustOpenTransReverse), MenuItemType::Display, custTrans, custTrans);
                }
                else if (moduleCustVend == ModuleCustVend::Vend)
                {
                    VendTrans vendTrans = VendTrans::find(SettlementView.RefRecId);
                    element.runMenuItem(menuItemDisplayStr(VendOpenTransReverse), MenuItemType::Display, vendTrans, vendTrans);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SettlementView</Name>
			<Table>SettlementView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSearchResult</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherDataAreaId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>SearchResultByTransDate</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:ViewSettlement</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SettlementHeader</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text></Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>SettlementTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SettlementTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>SettlementActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>SettlementButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ViewRelatedPaymentJournals</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@CashManagement:SettlementViewViewRelated</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ViewSettlementsOnly</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@CashManagement:ViewSettlement</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>SettlementHistory</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@CashManagement:SettlementViewViewHistory</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ViewAccounting</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@AccountingFramework:ViewSubledgerJournal</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>Export</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>SettlementView</DataSource>
												<MenuItemName>SettlementViewFileExport</MenuItemName>
												<MenuItemType>Action</MenuItemType>
												<MultiSelect>Yes</MultiSelect>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>OpenTransactions</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@CashManagement:SettleTransactions</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ClosedTransactions</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@CashManagement:UndoSettlement</Text>
											</AxFormControl>
										</Controls>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SettlementView</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SettlementGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementView_Voucher</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettlementView_DocumentAmount</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentAmount</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>SettlementView_SettleDate</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleDate</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettlementView_SettleAmountCur</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleAmountCur</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementView_CurrencyCode</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettlementView_SettleAmountMST</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleAmountMST</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Balance</Name>
										<AllowEdit>No</AllowEdit>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>balance</DataMethod>
										<DataSource>SettlementView</DataSource>
										<Label>@SYS6350</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettlementView_ReportingCurrencyAmount</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportingCurrencyAmount</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SettlementView_TransactionType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionType</DataField>
										<DataSource>SettlementView</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementView_PaymReference</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementView_Invoice</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementView_VoucherDataAreaId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherDataAreaId</DataField>
										<DataSource>SettlementView</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SettlementView</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:AllSettlements</Caption>
						<DataSource>SettlementView</DataSource>
					</AxFormControl>
				</Controls>
				<DataSource>SettlementView</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>