<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchAgreementChildCreate_PSN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class PurchAgreementChildCreate_PSN extends FormRun
    {
        PurchAgreementHeader parentPurchAgreementHeader;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        PurchAgreementChildCreator_PSN  purchAgreementChildCreator;
        VendTable                       vendTable;

        if (PurchAgreementHeader_VendAccount.text())
        {
            if (PurchAgreementSubcontractor::findSubContractor(PurchAgreementHeader_VendAccount.text(), parentPurchAgreementHeader.RecId)
                    || parentPurchAgreementHeader.VendAccount == PurchAgreementHeader_VendAccount.text())
            {
                super();

                purchAgreementChildCreator = new PurchAgreementChildCreator_PSN();
                purchAgreementChildCreator.parmPurchAgreementHeader(parentPurchAgreementHeader);

                vendTable = VendTable::find(PurchAgreementHeader_VendAccount.text());
                purchAgreementChildCreator.parmVendTableChildPurchAgreement(vendTable);

                if (purchAgreementChildCreator.createChildPurchaseAgreement())
                {
                    this.openPurchAgreementForm(purchAgreementChildCreator.parmChildPurchAgreementHeader());
                }
            }
            else
            {
                error("@SYS4000293");
            }
        }
        else
        {
            warning(strFmt("@SYS84753", "@SYS14048"));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createVendorLookUpQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a query for Vendor Account lookup.
    /// </summary>
    /// <returns>
    /// Vendor Account lookup Query.
    /// </returns>
    public Query createVendorLookUpQuery()
    {
        var lookupQuery = VendorDataInteractorFactory::constructDefaultBaseQuery();
        var vendTableQBDS = lookupQuery.dataSourceTable(tableNum(VendTable));

        var rangeValue = parentPurchAgreementHeader.VendAccount + ", ";

        PurchAgreementSubcontractor localpurchAgreementSubcontractor;
        while select SubcontractorID from localpurchAgreementSubcontractor
               where localpurchAgreementSubcontractor.PurchAgreementHeader == parentPurchAgreementHeader.RecId
        {
            rangeValue += localpurchAgreementSubcontractor.SubcontractorID;
            rangeValue += ", ";
        }

        // we can't specify a range on AccountNum on the root data source as it will cause problems when the resolver attempts to alter it,
        // so we add an exists join of the table to itself and place the range on that
        var vendTableFilterQBDS = vendTableQBDS.addDataSource(tableNum(VendTable));
        vendTableFilterQBDS.addLink(fieldNum(VendTable, RecId), fieldNum(VendTable, RecId));
        vendTableFilterQBDS.joinMode(JoinMode::ExistsJoin);
        vendTableFilterQBDS.addRange(fieldNum(VendTable, AccountNum)).value(rangeValue);

        return lookupQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        parentPurchAgreementHeader = element.args().record();

        if (!parentPurchAgreementHeader)
        {
            throw error("@SYS22996");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openPurchAgreementForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens PurchAgreement Form.
    /// </summary>
    /// <param name="_purchAgreementHeader">
    /// The PurchAgreementHeader object.
    /// </param>
    private void openPurchAgreementForm(PurchAgreementHeader _purchAgreementHeader)
    {
        MenuFunction    menuFunction;
        Args            args;

        args = new Args();
        args.name(formStr(PurchAgreement));
        args.caller(this);
        args.record(_purchAgreementHeader);

        menuFunction = new MenuFunction(menuitemDisplayStr(PurchAgreement), MenuItemType::Display);
        menuFunction.run(args);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PurchAgreementHeader_VendAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = element.createVendorLookUpQuery();

            SysTableLookup sysTableLookup = SysTableLookup::newParameters(TableNum(VendTable), this, true,
                    VendorDataInteractorFactory::useExistingOrCreateResolver(this, query));

            sysTableLookup.parmQuery(query);

            sysTableLookup.addLookupfield(fieldNum(VendTable, AccountNum), true);
            sysTableLookup.addLookupfield(fieldNum(VendTable, Party));
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return VendorDataInteractorFactory::resolveAmbiguousReferenceForControl(this, element.createVendorLookUpQuery());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SPS2053</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PurchAgreementHeader_VendAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>VendAccount</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>