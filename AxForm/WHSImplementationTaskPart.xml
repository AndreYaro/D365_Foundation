<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSImplementationTaskPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSImplementationTaskPart extends FormRun implements WHSImplementationTaskIList, WHSImplementationITaskFormPart, IRefreshable
{
    private boolean displayClosedTasks;
    private boolean fireDataChangeEvent = true;

    WHSImplementationTaskViewModel viewModel;
    private WHSImplementationIProjectFilterProvider callerAsFilterProvider;
      
}
]]></Source>
			</Method>
			<Method>
				<Name>dataRefreshed</Name>
				<Source><![CDATA[
    delegate void dataRefreshed(FormRun _parentFormRun, WHSImplementationProject _projectName) {}

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh the form with updated values.
    /// </summary>
    public void refresh()
    {
        WHSImplementationWorkspaceProject_DS.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        this.checkImplementationTaskTableForRecordsToBeMoved();

        viewModel = WHSImplementationTaskViewModel::construct(this, this.args().caller());

        callerAsFilterProvider = this.args().caller() as WHSImplementationIProjectFilterProvider;

        if (callerAsFilterProvider == null)
        {
            throw error(Error::missingParameter(this.args().caller()));
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjectDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the data source for a WHS Implementation Workspace project.
    /// </summary>
    /// <returns>The WHS implementation workspace project data source.</returns>
    public FormDataSource getProjectDataSource()
    {
        return WHSImplementationWorkspaceProject_DS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projectExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns whether there is a project created with the specified name.
    /// </summary>
    /// <returns>True if project exists, false if it does not.</returns>
    public boolean projectExists()
    {
        return WHSImplementationWorkspaceProject::findByName(this.parmProject()).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the project for the current context.
    /// </summary>
    /// <returns>Project name.</returns>
    public WHSImplementationProject parmProject()
    {
        return this.args().caller().getProjectName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaskDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the data source for the WHS implementation workspace tasks.
    /// </summary>
    /// <returns>The WHS implementation workspace task data source.</returns>
    public FormDataSource getTaskDataSource()
    {
        return WHSImplementationProjectTasks_DS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedTask</Name>
				<Source><![CDATA[
    public WHSImplementationProjectTasks selectedTask()
    {
        return WHSImplementationProjectTasks_DS.cursor() as WHSImplementationProjectTasks;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshRootDataSource</Name>
				<Source><![CDATA[
    public void refreshRootDataSource()
    {
        WHSImplementationProjectTasks_DS.research(true);

        callerAsFilterProvider.getProjectFilterControl().modified();        
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveGridRow</Name>
				<Source><![CDATA[
    private void moveGridRow(boolean _up)
    {
        fireDataChangeEvent = false;

        WHSImplementationProjectTasks taskLocal;
        taskLocal = WHSImplementationProjectTasks_DS.cursor();
        taskLocal = taskLocal.moveRows(_up);

        WHSImplementationProjectTasks_DS.executeQuery();
        WHSImplementationProjectTasks_DS.positionToRecord(taskLocal);

        fireDataChangeEvent = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkImplementationTaskTableForRecordsToBeMoved</Name>
				<Source><![CDATA[
    private void checkImplementationTaskTableForRecordsToBeMoved()
    {
        WHSImplementationTask implementationTask;
        select firstonly RecId from implementationTask;

        if (implementationTask)
        {
            WHSImplementationWorkspaceProjectEntity projectEntity;
            WHSImplementationProjectTasks implementationProjectTasks;
            WHSImplementationWorkspaceProject implementationProject;

            var defaultProjectName = WHSImplementationWorkspaceProject::defaultProjectName();
            var defaultProjectRecId = WHSImplementationWorkspaceProject::findByName(defaultProjectName).RecId;

            if (defaultProjectRecId == 0)
            {
                projectEntity.ImplementationProject = defaultProjectName;
                projectEntity.insert();

                defaultProjectRecId = WHSImplementationWorkspaceProject::findByName(defaultProjectName).RecId;
            }

            ttsbegin;
            insert_recordset implementationProjectTasks(Name,
                    Description,
                    Status,
                    CompletedDateTime,
                    CompletedByWorker,
                    MenuItem,
                    MenuItemType,
                    SequenceNumber,
                    ParentSequenceNumber,
                    Project)
                select Name,
                    Description,
                    Status,
                    CompletedDateTime,
                    CompletedByWorker,
                    MenuItem,
                    MenuItemType,
                    SequenceNumber,
                    ParentSequenceNumber
                from implementationTask
                    join RecId from implementationProject
                        where implementationProject.RecId == defaultProjectRecId;

            delete_from implementationTask;
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WHSImplementationProjectTasks</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbdsImplementationTask = WHSImplementationProjectTasks_q.dataSourceTable(tableNum(WHSImplementationProjectTasks));
            QueryBuildRange qbrImplementationTask = SysQuery::findOrCreateRange(qbdsImplementationTask, fieldNum(WHSImplementationProjectTasks, Status));

            if (displayClosedTasks)
            {
                qbrImplementationTask.value('');
            }
            else
            {
                qbrImplementationTask.value(SysQuery::valueNot(WHSImplementationTaskStatus::Complete));
            }

            super();

            if (fireDataChangeEvent)
            {
                element.dataRefreshed(element, element.parmProject());
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            MoveUp.enabled(true);
            MoveDown.enabled(true);

            WHSImplementationProjectTasks task = WHSImplementationProjectTasks_ds.cursor();

            if (task.ParentSequenceNumber > 0)
            {
                WHSImplementationProjectTasks prevTask = WHSImplementationProjectTasks::findPrevTaskAtSameLevel(task.Project, task.SequenceNumber, task.ParentSequenceNumber);
                
                if (!prevTask)
                {
                    MoveUp.enabled(false);
                }

                WHSImplementationProjectTasks nextTask = WHSImplementationProjectTasks::findNextTaskAtSameLevel(task.Project, task.SequenceNumber, task.ParentSequenceNumber);

                if (!nextTask)
                {
                    MoveDown.enabled(false);
                }
            }
                    
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbds = WHSImplementationProjectTasks_DS.query().dataSourceTable(tableNum(WHSImplementationProjectTasks));
            qbds.addSortField(fieldNum(WHSImplementationProjectTasks, SequenceNumber), SortOrder::Ascending);
            qbds.addSortField(fieldNum(WHSImplementationProjectTasks, Name), SortOrder::Ascending);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ShowClosedTasks</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!displayClosedTasks)
            {
                ShowClosedTasks.text("@WAX:WarehouseImplementationTaskStatusFilterHideCompleted");
                displayClosedTasks = true;
            }
            else
            {
                ShowClosedTasks.text("@WAX:WarehouseImplementationTaskStatusFilterShowCompleted");
                displayClosedTasks = false;
            }

            WHSImplementationProjectTasks_DS.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddTask</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Remove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (WHSImplementationProjectTasks_DS.anyMarked())
            {
                WHSImplementationProjectTasks_DS.deleteMarked();
            }
            else if (getFirstSelection(WHSImplementationProjectTasks_DS))
            {
                WHSImplementationProjectTasks_DS.delete();
            }

            WHSImplementationProjectTasks_DS.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ImportDefaultTasks</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.projectExists())
            {
                super();

                WHSImplementationTaskImporter importer = new WHSImplementationTaskImporter();
                importer.importDefaultTasks(element.parmProject());
                element.refreshRootDataSource();
            }
            else
            {
                Box::stop(strFmt("@WAX:ProjectDoesNotExist", element.parmProject()));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.moveGridRow(true);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.moveGridRow(false);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WHSWarehouseImplementationTask_IsComplete</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            int cursorPosition = WHSImplementationProjectTasks_ds.getPosition();
            WHSImplementationProjectTasks_ds.research();
            WHSImplementationProjectTasks_ds.setPosition(cursorPosition);

            callerAsFilterProvider.getProjectFilterControl().modified();            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WHSWarehouseImplementationTask_Name</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            WHSImplementationProjectTasks task = WHSImplementationProjectTasks_ds.cursor();
            WHSImplementationProjectTasks::jumpRef(task.MenuItem, task.MenuItemType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WHSImplementationProjectTasks</Name>
			<Table>WHSImplementationProjectTasks</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CompletedByWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompletedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MenuItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MenuItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentSequenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Project</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SequenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WHSImplementationWorkspaceProject</Name>
			<Table>WHSImplementationWorkspaceProject</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImplementationProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@WAX:WarehouseImplementationTaskTaskPart</Caption>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
				<Pattern>FiltersAndToolbarInline</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>QuickFilter</Name>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>Grid</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
											<Value>WHSWarehouseImplementationTask_Name</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupControl</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ShowClosedTasks</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@WAX:WarehouseImplementationTaskStatusFilterShowCompleted</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>EditTask</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>WHSImplementationProjectTasks</DataSource>
										<MenuItemName>WHSImplementationTaskEditorEdit</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AddTask</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>WHSImplementationProjectTasks</DataSource>
										<MenuItemName>WHSImplementationTaskEditorCreate</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Remove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@WAX1580</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ImportDefaultTasks</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@WAX:WHSWarehouseImplementationDefaultTasks</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MoveUp</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@WAX389</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>MoveDown</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@WAX390</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWarehouseImplementationTask_SequenceNumber</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>sequenceNumberStr</DataMethod>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskSeqNum</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>WHSWarehouseImplementationTask_IsComplete</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editIsComplete</DataMethod>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskStatusCompleted</Label>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWarehouseImplementationTask_Name</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskName</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWarehouseImplementationTask_Description</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskDescription</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>WHSWarehouseImplementationTask_Status</Name>
						<Type>Image</Type>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayStatusImage</DataMethod>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskStatus</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>WHSWarehouseImplementationTask_CompletedByWorker</Name>
						<HelpText>@FieldDescriptions_WHS:WarehouseImplementationTaskCompletedBy</HelpText>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskCompletedBy</Label>
						<ReferenceField>CompletedByWorker</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>WHSWarehouseImplementationTask_CompletedDateTime</Name>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CompletedDateTime</DataField>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Label>@WAX:WarehouseImplementationTaskCompletedDateTime</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWarehouseImplementationTask_MenuItem</Name>
						<Type>String</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>taskLinkLabelValue</DataMethod>
						<DataSource>WHSImplementationProjectTasks</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>WHSWarehouseImplementationTask_MenuItemType</Name>
						<Type>ComboBox</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>MenuItemType</DataField>
						<DataSource>WHSImplementationProjectTasks</DataSource>
						<Items />
					</AxFormControl>
				</Controls>
				<DataSource>WHSImplementationProjectTasks</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>