<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SalesQuickQuote</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SalesQuickQuote extends FormRun
{
    TmpFrmVirtual                   tmpFrmVirtual;

    InventDimCtrl_Frm_QuickQuote    inventDimFormSetup;
    InventDimId                     inventDimId;
    InventDimParm                   inventDimParm;
    InventDim                       inventDimCriteria;
    InventDim                       inventDimLocal;
    Map                             inventDimMap;
    SalesTable                      salesTable;

    Query                           origQuery;
    QueryRun                        queryFilter;
    container                       queryFilterValue;
    boolean                         queryFirst;

    InventAvailabilityFormCache     inventAvailabilityFormCache;

    Map                             inventSumQtyMap;
    Map                             inventDimCombinationQtyMap;
    Map                             inventDimCombinationAvailableQtyMap;
    Map                             inventDimCombinationQtyMap2;
    CustAccount                     custAccount;
    RefRecId                        retailChannel;
    boolean                         filterByCatalog;
    CatalogRefRecId                 selectedCatalogRecId;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        queryFilterValue
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>buildSavedQuery</Name>
				<Source><![CDATA[
    void  buildSavedQuery()
    {
        xSysLastValue::getLast(this);

        if (queryFilter)
        {
            inventTable_ds.query(queryFilter.query());
            element.inventDimSetupObject().buildQuery();
            inventTable_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInventDimLocal</Name>
				<Source><![CDATA[
    InventDim createInventDimLocal(InventDim  _inventDim)
    {
        select inventDimLocal
             where inventDimLocal.InventDimId == _inventDim.InventDimId;

        if (inventDimLocal)
        {
            return inventDimLocal;
        }
        else
        {
            buf2Buf(_inventDim,inventDimLocal);
            inventDimLocal.doInsert();
        }

        return inventDimLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSavedQuery</Name>
				<Source><![CDATA[
    void  deleteSavedQuery()
    {
        xSysLastValue::deleteLast(this);

        inventTable_ds.query(origQuery);
        inventTable_ds.executeQuery();

        element.inventDimSetupObject().initQuery(inventtable_ds);
        element.inventDimSetupObject().buildQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doApply</Name>
				<Source><![CDATA[
    void  doApply()
    {
        Object          callerDataSource;
        FormDataSource  formDataSource;
        Common          callerRecord;
        Common          callerRecordOfCallerRecord;

        switch (element.args().dataset())
        {
            case tableNum(SalesTable):
                callerRecord = element.args().record();
                formDataSource = FormDataUtil::getFormDataSource(callerRecord);
                using (var context = EcoResProductForceInitDimensionDefaultingContext::construct())
                {
                    element.doApplyToSalesTable(callerRecord, formDataSource);
                }

                break;

            case tableNum(SalesQuotationLine):
                callerRecord                = element.args().record();
                formDataSource              = FormDataUtil::getFormDataSource(callerRecord);
                callerRecordOfCallerRecord  = formDataSource.formRun().dataSource(1).cursor();           // callerRecordOfCallerRecord  = callerDataSource.callerRecord();
                element.doApplyToSalesQuotationTable(callerRecordOfCallerRecord,formDataSource.formRun().dataSource(1));
                break;

            case tableNum(SalesLine):
                callerRecord                = element.args().record();
                callerDataSource            = FormDataUtil::getFormDataSource(callerRecord);
                callerRecordOfCallerRecord  = callerDataSource.callerRecord();

                switch (callerRecordOfCallerRecord.TableId)
                {
                    case tableNum(SalesTable):
                        element.doApplyToSalesTable(callerRecordOfCallerRecord, callerDataSource);
                        break;

                    case tableNum(ProjTable):
                        element.doApplyToProjTable(callerRecordOfCallerRecord, callerDataSource);
                        break;
                }
                break;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>doApplyToProjTable</Name>
				<Source><![CDATA[
    void doApplyToProjTable(ProjTable _projTable, FormDataSource _callerDataSource)
    {
        SalesTable              salesTableLocal;
        SalesLine               salesLine;
        SMAServiceOrderTable    smaServiceOrderTable;

        if (_projTable.ProjId)
        {
            if (ProjItemRequirementMultipleFundingSourcesFeatureHelper::isFeatureEnabled())
            {
                salesTableLocal = SalesTable::findOrCreateSalesTable_ItemReqWhenMFSFeatureEnabled(_projTable.currencyId(), _projTable.ProjId);
            }
            else
            {
                salesTableLocal = _projTable.salesTable_ItemReq(_projTable.currencyId());

                if (!salesTableLocal)
                {
                    salesTableLocal = _projTable.createSalesTable_ItemReq(_projTable.currencyId());
                }
            }

            if (_callerDataSource.formRun().args().dataset() == tableNum(SMAServiceOrderTable))
            {
                smaServiceOrderTable = _callerDataSource.formRun().args().record();
            }

            // <GEERU>
            salesLine.createFromTmpFrmVirtual(salesTableLocal, tmpFrmVirtual, smaServiceOrderTable, inventDimFormSetup.parmDimParmVisibleGrid().data());
            // </GEERU>
            element.resetQtyMaps();
            inventsum_ds.executeQuery();

            _callerDataSource.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doApplyToSalesQuotationTable</Name>
				<Source><![CDATA[
    void doApplyToSalesQuotationTable(SalesQuotationTable _salesQuotationTable, Object _callerDataSource)
    {
        SalesQuotationLine   salesQuotationLine;

        if (_salesQuotationTable.checkUpdate())
        {
            salesQuotationLine.createFromTmpFrmVirtual(_salesQuotationTable,tmpFrmVirtual);
            element.resetQtyMaps();
            inventsum_ds.executeQuery();

            _callerDataSource.reRead();
            if (formDataSourceHasMethod(_callerDataSource, identifierStr(reReadLines)))
            {
                _callerDataSource.reReadLines();
            }

            MarkupTrans::updateCallerDatasource(_salesQuotationTable); // Has nothing to do with markup trans, but we'll reuse the functionality
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doApplyToSalesTable</Name>
				<Source><![CDATA[
    void doApplyToSalesTable(SalesTable _salesTable, object _callerDataSource)
    {
        SalesLine       salesLine;
        MCRInventTable  mcrInventTableLocal;
        boolean         isCallCenterOrder = _salesTable.mcrIsCallCenter();

        if (isCallCenterOrder)
        {
            mcrInventTableLocal = MCRInventTable::findByItemId(inventTable.ItemId);
        }

        //sell end date validation
        if (!isCallCenterOrder
            || !mcrInventTableLocal.SellEndDate
            || (mcrInventTableLocal.SellEndDate >= DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())))
        {
            //sell start date validation
            if (!isCallCenterOrder
                || mcrInventTableLocal.SellStartDate <= DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
            {
                // Skip intercompany check when creating new lines unless current order is intercompany sales order
                if (_salesTable.checkUpdate(true, _salesTable.isInterCompanyOrder()))
                {
                    // If the order is a Retail Channel sales order, then perform delivery mode validation.
                    if (RetailDeliveryOptionsValidationForProductToAddToggle::instance().IsEnabled() &&
                        _salesTable.retailSalesTable().RetailChannel &&
                        isConfigurationkeyEnabled(configurationKeyNum(TradeMultiShipTo)))
                    {
                        while select tmpFrmVirtual
                            where tmpFrmVirtual.Qty
                        {
                            boolean isValidDlvMode = RetailShippingDeliveryMode::validateDeliveryOptionForProductToAdd(_salesTable, tmpFrmVirtual.ItemId, tmpFrmVirtual.InventDimId);

                            if (!isValidDlvMode)
                            {
                                throw error("@SYS18447");
                            }
                        }
                    }

                    // <GEERU>
                    salesLine.createFromTmpFrmVirtual(_salesTable, tmpFrmVirtual, null, inventDimFormSetup.parmDimParmVisibleGrid().data());
                    // </GEERU>
                    element.resetQtyMaps();
                    inventsum_ds.executeQuery();

                    _callerDataSource.reRead();
                    if (formDataSourceHasMethod(_callerDataSource, identifierStr(reReadLines)))
                    {
                        _callerDataSource.reReadLines();
                    }

                    if (formDataSourceHasMethod(_callerDataSource, identifierStr(setTouched)))
                    {
                        _callerDataSource.setTouched();
                    }
                }
            }
            else
            {
                throw error(strFmt("@MCR34892", inventTable.ItemId, mcrInventTableLocal.SellStartDate));
            }
        }
        else
        {
            throw error(strFmt("@MCR34893", inventTable.ItemId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDimFromCombination</Name>
				<Source><![CDATA[
    InventDimId   findDimFromCombination(InventDimCombination _inventDimCombination)
    {
        InventDim   inventDimFind;
        InventDim   inventDimCreate;

        inventDimFind.initFromInventDim(inventDim);
        EcoResProductDimGroupSetup::copyProductDimensionsForItem(_inventDimCombination.ItemId, _inventDimCombination.inventDim(), inventDimFind);

        if (inventDimMap.exists(inventDimFind.xml()))
        {
            inventDimId = inventDimMap.lookup(inventDimFind.xml());
        }
        else
        {
            inventDimCreate = InventDim::findOrCreate(inventDimFind);
            inventDimId     = inventDimCreate.InventDimId;
            inventDimMap.insert(inventDimFind.xml(), inventDimId);
            element.createInventDimLocal(inventDimCreate);
        }

        return inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetQtyMaps</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the maps used for storing sales quantities.
    /// </summary>
    void resetQtyMaps()
    {
        inventSumQtyMap                     = new Map(Types::Container, Types::Container);
        inventDimCombinationAvailableQtyMap = new Map(Types::Int64, Types::Container);
        inventDimCombinationQtyMap          = new Map(Types::Int64, Types::Container);
        inventDimCombinationQtyMap2         = new Map(Types::Int64, Types::Container);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParams</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get parameter values.
    /// </summary>
    void getParams()
    {
        custAccount = salesTable.CustAccount;
        retailChannel = salesTable.retailSalesTable().RetailChannel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    void init()
    {
        // <GEERU>
        SalesTable_RU salesTableRU;
        // </GEERU>

        if (element.args() && element.args().dataset() == tableNum(SalesTable))
        {
            salesTable = element.args().record() as SalesTable;
        }

        if (salesTable && B2B2BDataHelper::shouldRespectCatalog(salesTable.RetailChannelTable))
        {
            filterByCatalog = true;
            element.getParams();
        }

        super();

        queryFirst = true;

        origQuery = new Query(inventSum_ds.query());

        element.inventDimSetupObject().initFromCaller();
        element.buildSavedQuery();
        element.updateDesign(InventDimFormDesignUpdate::Init);

        inventDimId = InventDim::inventDimIdBlank();

        inventDimMap                        = new Map(Types::String, Types::String);
        element.resetQtyMaps();

        inventDimLocal.setTmp();

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) &&
            salesTable)
        {
            salesTableRU = salesTable.salesTable_RU();
            inventProfileType_RU.visible(true);
            inventProfileType_RU.selection(salesTableRU.InventProfileType_RU);
            if (salesTableRU.InventProfileType_RU != InventProfileType_RU::NotSpecified)
            {
                inventProfileType_RU.enabled(false);
            }

            inventDimFormSetup.parmInventProfileType_RU(salesTableRU.InventProfileType_RU);
        }
        // </GEERU>

        inventAvailabilityFormCache = InventAvailabilityFormCache::construct();

        if (filterByCatalog)
        {
            element.initializeCatalogForRetailB2b2bOrders();
        }
        else
        {
            RetailCatalogProductIncludeMasterView_ds.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView)).enabled(false);
            RetailCatalogProductIncludeMasterView2_ds.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView)).enabled(false);
            CatalogProduct_ds.query().dataSourceTable(tableNum(CatalogProduct)).enabled(false);
            CatalogProduct2_ds.query().dataSourceTable(tableNum(CatalogProduct)).enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    void initParmDefault()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCatalogForRetailB2b2bOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the catalog selector and update the data source tables with catalog selector, for retail b2b2b orders.
    /// </summary>
    /// <remarks>
    /// The catalog filter is enabled only when the form is opened for a B2b2b sales order with multiple catalogs enabled.
    /// </remarks>
    void initializeCatalogForRetailB2b2bOrders()
    {
        CatalogSelector.visible(true);
        Catalog selectedCatalog = B2B2BDataHelper::getDefaultCatalogByCustAccountAndRetailChannel(retailChannel, custAccount);

        if (selectedCatalog)
        {
            selectedCatalogRecId = selectedCatalog.RecId;
            CatalogSelector.text(selectedCatalog.CatalogId);
        }

        RetailCatalogProductIncludeMasterView_ds.executeQuery();
        RetailCatalogProductIncludeMasterView2_ds.executeQuery();
        CatalogProduct_ds.executeQuery();
        CatalogProduct2_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        if (!inventDimFormSetup)
        {
            inventDimFormSetup  = InventDimCtrl_Frm_QuickQuote::newFromForm(element, element.validInventDimDataSources());
            inventDimFormSetup.parmLargeRightClickForm(NoYes::Yes);
            if (salesTable)
            {
                inventDimFormSetup.parmInventSiteId(salesTable.InventSiteId);
            }
        }
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    // Template method, mustn't be named lastValueElementName
    private IdentifierName lastValueElementName()
    {
        return formStr(SalesQuickQuote);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    // Template method, mustn't be named lastValueType
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    // Template method, mustn't be named lastValueUserId
    private UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        queryFilterValue = queryFilter.pack();

        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWEnableFieldOnExistingItem</Name>
				<Source><![CDATA[
    public void pdsCWEnableFieldOnExistingItem(boolean _hasProductDim = false)
    {
        if (PdsGlobal::pdsIsCWItem(inventTable.ItemId))
        {
            salesQty.allowEdit(false);
            salesQty4.allowEdit(false);

            pdsCWQty.allowEdit(!_hasProductDim);
            pdsCWQty4.allowEdit(_hasProductDim);
        }
        else
        {
            pdsCWQty.allowEdit(false);
            pdsCWQty4.allowEdit(false);

            salesQty.allowEdit(!_hasProductDim);
            salesQty4.allowEdit(_hasProductDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWEnableFieldOnNewItem</Name>
				<Source><![CDATA[
    public void pdsCWEnableFieldOnNewItem(boolean _hasProductDim = false)
    {
        if (PdsGlobal::pdsIsCWItem(inventTable2.ItemId))
        {
            salesQty2.allowEdit(false);
            salesQty3.allowEdit(false);

            pdsCWQty2.allowEdit(!_hasProductDim);
            pdsCWQty3.allowEdit(_hasProductDim);
        }
        else
        {
            pdsCWQty2.allowEdit(false);
            pdsCWQty3.allowEdit(false);

            salesQty2.allowEdit(!_hasProductDim);
            salesQty3.allowEdit(_hasProductDim);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rightClickModifyQuery</Name>
				<Source><![CDATA[
    void rightClickModifyQuery()
    {
        inventSum_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        super();

        salesQty.setFocus();

        element.inventDimSetupObject().initQuery(inventtable_ds);
        element.inventDimSetupObject().buildQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveUserQuery</Name>
				<Source><![CDATA[
    void  saveUserQuery()
    {
        queryFilter = inventTable_ds.queryRun();

        xSysLastValue::saveLast(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpFrmVirtualInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the inventory dimension ID to be used with the <c>tmpFrmVirtual</c> record.
    /// </summary>
    /// <param name="_inventDimIdLine">
    ///    The <c>InventDimId</c> that is used to determine the inventory dimension.
    /// </param>
    /// <param name="_itemId">
    ///    The ID of the Item.
    /// </param>
    /// <param name="_copyProductDimensions">
    ///    A Boolean value which determines if product dimensions would be copied from passed InventDim; optional.
    /// </param>
    /// <param name="_existingItemsTab">
    ///    A Boolean value which determines if request is coming from Existing Items tab on form; optional.
    /// </param>
    /// <returns>
    ///    A inventory dimension ID.
    /// </returns>
    public InventDimId tmpFrmVirtualInventDimId(InventDimId _inventDimIdLine, ItemId _itemId, boolean _copyProductDimensions = false, boolean _existingItemsTab = true)
    {
        InventDimId             inventDimIdLocal;
        InventDim               invDim;
        InventDim               tmpInventDim;
        InventItemSalesSetup    inventItemSalesSetupLocal;
        InventDimParm           inventDimParmLocal;
        InventDimGroupSetup     inventDimGroupSetup;

        if (_existingItemsTab && inventorydimensions_InventLocationId.visible()) // If warehouse is visible on the form
        {
            inventDimIdLocal = _inventDimIdLine;
        }
        else
        {
            tmpInventDim        = InventDim::find(_inventDimIdLine);

            if (_copyProductDimensions)
            {
                inventDimGroupSetup = InventDimGroupSetup::newItemId(_itemId);
                inventDimParmLocal.initProductDimensionsAllGroups();
                invDim.copyDimParmDim(inventDimGroupSetup, tmpInventDim, inventDimParmLocal);
            }

            invDim.InventSiteId = tmpInventDim.InventSiteId;
            inventDimIdLocal = InventDim::findDim(invDim).InventDimId;

            if (salesTable)
            {
                //If site on header and on line are equal and warehouse is defined on header, use location from header
                if (salesTable.InventSiteId == invDim.InventSiteId && salesTable.InventLocationId)
                {
                    invDim.InventLocationId = salesTable.InventLocationId;
                }
                else // Otherwise set default warehouse for the site from line
                {
                    inventItemSalesSetupLocal = InventItemSalesSetup::find(_itemId, _inventDimIdLine);

                    if (inventItemSalesSetupLocal.RecId)
                    {
                        tmpInventDim            = InventDim::find(inventItemSalesSetupLocal.InventDimIdDefault);
                        invDim.InventLocationId = tmpInventDim.InventLocationId;
                    }
                }

                inventDimIdLocal = InventDim::findOrCreate(invDim).InventDimId;
            }
        }

        return inventDimIdLocal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean  unpack(container  packedClass)
    {
        boolean         ret;
        Integer         version;

        if (typeOf(conPeek(packedClass,1)) != Types::Integer)
        {
            queryFilter = new QueryRun(packedClass);
            ret = true;
        }
        else
        {
            version = conPeek(packedClass,1);

            switch (version)
            {
                case #CurrentVersion:
                    [version, #CurrentList] = packedClass;
                    queryFilter = new QueryRun(queryFilterValue);
                    ret = true;
                    break;
                default:
                    ret = false;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        switch (mode)
        {
            case InventDimFormDesignUpdate::Init,
                 InventDimFormDesignUpdate::LinkActive  :
                element.inventDimSetupObject().initFromCaller();
                inventDimParm = inventDimFormSetup.parmDimParmVisibleGrid().data();

            case InventDimFormDesignUpdate::Active      :
                element.inventDimSetupObject().formActiveSetup();
                element.inventDimSetupObject().formSetControls(true,true);
                break;

            default :
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validInventDimDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a list of <c>InventDim</c> table data sources to be controlled by the InventDimCtrl framework.
    /// </summary>
    /// <returns>
    /// A set containing the valid datasources.
    /// </returns>
    /// <remarks>
    /// This form contains a number of <c>InventDim</c> table data sources which should not be controlled by the InventDimCtrl framework.
    /// </remarks>
    public Set validInventDimDataSources()
    {
        Set validDataSources = new Set(Types::String);

        validDataSources.add(inventdim_ds.name());

        return validDataSources;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectInventDimCombinationQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects a <c>TmpFrmVirtual</c> record with sales quantities related to inventory dimension combination.
    /// </summary>
    /// <param name = "_inventDimCombination">An inventory dimension combination to select sales quantities for.</param>
    protected void selectInventDimCombinationQuantities(InventDimCombination  _inventDimCombination)
    {
        InventDim       inventDimJoin;
        
        InventDimParm inventDimParmLocal = inventDimFormSetup.parmDimParmVisibleGrid().data();
        inventDimParmLocal.setActiveProductDim(EcoResProductDimGroupSetup::newItemId(_inventDimCombination.ItemId));

        select sum(Qty), sum(PdsCWQty) from tmpFrmVirtual
            where   tmpFrmVirtual.TableNum      == _inventDimCombination.TableId &&
                    tmpFrmVirtual.ItemId        == _inventDimCombination.ItemId
            #InventDimJoin(tmpFrmVirtual.inventDimId, inventDimJoin, inventDimCriteria, inventDimParmLocal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editInventDimCombinationQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets sales quantities related to inventory dimension combination.
    /// </summary>
    /// <param name = "_set">Specifies if should set new quantities.</param>
    /// <param name = "_inventDimCombination">An inventory dimension combination to set sales quantities for.</param>
    /// <param name = "_qty">A new sales quantity.</param>
    /// <param name = "_pdsCWQty">A new catch-weight quantity.</param>
    /// <returns>A container with sales quantities.</returns>
    protected container editInventDimCombinationQuantities( boolean               _set,
                                                            InventDimCombination  _inventDimCombination,
                                                            SalesQty              _qty,
                                                            PdsCWInventQty        _pdsCWQty)
    {
        InventDimId     inventDimIdLocal;
        InventDimParm   inventDimParmLocal;
        InventDim       inventDimJoin;

        if (_set
            || !inventDimCombinationQtyMap.exists(_inventDimCombination.RecId))
        {
            inventDimId         = element.findDimFromCombination(_inventDimCombination);
            inventDimIdLocal    = element.tmpFrmVirtualInventDimId(inventDimId, _inventDimCombination.ItemId, true);
            inventDimParmLocal.data(inventDimParm);
            inventDimParmLocal.setActiveProductDim(EcoResProductDimGroupSetup::newItemId(_inventDimCombination.ItemId));

            inventDimCriteria   = InventDim::find(inventDimId);

            if (_set)
            {
                inventDimCombinationQtyMap.remove(_inventDimCombination.RecId);

                select forupdate firstonly tmpFrmVirtual
                    where   tmpFrmVirtual.TableNum      == tableNum(InventDimCombination)   &&
                            tmpFrmVirtual.ItemId        == _inventDimCombination.ItemId     &&
                            tmpFrmVirtual.InventDimId   == inventDimIdLocal;

                tmpFrmVirtual.Qty           = _qty;
                tmpFrmVirtual.PdsCWQty      = _pdsCWQty;

                tmpFrmVirtual.TableNum      = tableNum(InventDimCombination);
                tmpFrmVirtual.ItemId        = _inventDimCombination.ItemId;
                tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                {
                    tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                }
                tmpFrmVirtual.write();
            }

            this.selectInventDimCombinationQuantities(_inventDimCombination);

            inventDimCombinationQtyMap.insert(_inventDimCombination.RecId, [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty]);

            return [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty];
        }

        return inventDimCombinationQtyMap.lookup(_inventDimCombination.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimCombinationSalesQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets sales quantity related to an inventory dimension.
    /// </summary>
    /// <param name = "_set">Specifies if should set new quantities.</param>
    /// <param name = "_inventDimCombination">An inventory dimension combination to set sales quantities for.</param>
    /// <param name = "_qty">A new sales quantity.</param>
    /// <returns>A sales quantity.</returns>
    protected SalesQty inventDimCombinationSalesQty(
        boolean                 _set,
        InventDimCombination    _inventDimCombination,
        SalesQty                _qty)
    {
        container con = element.editInventDimCombinationQuantities(_set, _inventDimCombination, _qty, pdsCWQty4.realValue());

        return conPeek(con, 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimCombinationPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets catch-weight sales quantity related to an inventory dimension.
    /// </summary>
    /// <param name = "_set">Specifies if should set new quantities.</param>
    /// <param name = "_inventDimCombination">An inventory dimension combination to set sales quantities for.</param>
    /// <param name = "_pdsCWQty">A new catch-weight quantity.</param>
    /// <returns>A catch-weight sales quantity.</returns>
    protected PdsCWInventQty inventDimCombinationPdsCWQty(
        boolean                 _set,
        InventDimCombination    _inventDimCombination,
        PdsCWInventQty          _pdsCWQty)
    {
        container con = element.editInventDimCombinationQuantities(_set, _inventDimCombination, salesQty4.realValue(), _pdsCWQty);

        return conPeek(con, 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDisplayOrderDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds product dispaly order related data sources in order to generate display order based on their combination.
    /// </summary>
    /// <param name = "_tmpProductDisplayOrderDataSource">The sales quick quote form data source.</param>
    protected void addDisplayOrderDataSources(FormDataSource _tmpProductDisplayOrderDataSource)
    {
        QueryBuildDataSource qbdsSizeVariant;

        qbdsSizeVariant = _tmpProductDisplayOrderDataSource.queryBuildDataSource().addDataSource(tableNum(EcoResProductVariantSize));
        qbdsSizeVariant.joinMode(JoinMode::OuterJoin);
        qbdsSizeVariant.addLink(fieldNum(inventDimCombination, DistinctProductVariant), fieldNum(EcoResProductVariantSize, DistinctProductVariant));

        qbdsSizeVariant.addOrderByField(fieldNum(EcoResProductVariantSize, RetailDisplayOrder));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventSum</Name>
				<Methods>
					<Method>
						<Name>getSetQuantyties</Name>
						<Source><![CDATA[
        private container getSetQuantyties( boolean         _set,
                                            InventSum       _inventSum,
                                            SalesQty        _qty,
                                            PdsCWInventQty  _pdsCWQty)
        {
            InventDimId     inventDimIdLocal;
            container       conKey = [_inventSum.InventDimId, _inventSum.ItemId];

            if (_set
                || !inventSumQtyMap.exists(conKey))
            {
                inventDimCriteria   = InventDim::find(element.tmpFrmVirtualInventDimId(_inventSum.InventDimId, _inventSum.ItemId));
                inventDimCriteria.clearNotSelectedDim(inventDimParm);
                inventDimCriteria   = InventDim::findOrCreate(inventDimCriteria);
                inventDimIdLocal    = inventDimCriteria.inventDimId;

                if (_set)
                {
                    inventSumQtyMap.remove(conKey);

                    select forupdate firstonly tmpFrmVirtual
                        where   tmpFrmVirtual.TableNum      == _inventSum.TableId   &&
                                tmpFrmVirtual.ItemId        == _inventSum.ItemId     &&
                                tmpFrmVirtual.InventDimId   == inventDimIdLocal;

                    tmpFrmVirtual.Qty           = _qty;
                    tmpFrmVirtual.PdsCWQty      = _pdsCWQty;

                    tmpFrmVirtual.TableNum      = _inventSum.TableId;
                    tmpFrmVirtual.ItemId        = _inventSum.ItemId;
                    tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                    if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                    {
                        tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                    }
                    tmpFrmVirtual.write();

                    element.createInventDimLocal(inventDimCriteria);
                }

                select sum(Qty), sum(PdsCWQty) from tmpFrmVirtual
                    where   tmpFrmVirtual.TableNum      == _inventSum.TableId &&
                            tmpFrmVirtual.ItemId        == _inventSum.ItemId
                    #InventDimJoin(tmpFrmVirtual.inventDimId, inventDimLocal, inventDimCriteria, inventDimParm);

                inventSumQtyMap.insert(conKey, [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty]);

                return [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty];
            }

            return inventSumQtyMap.lookup(conKey);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availPhysical</Name>
						<Source><![CDATA[
        /// <summary>
        ///    Display the physically available inventory.
        /// </summary>
        /// <param name="_inventSum">
        ///    The current <c>InventSum</c> table record.
        /// </param>
        /// <returns>
        ///    The physically available quantity.
        /// </returns>
        public display InventQtyAvailPhysical availPhysical(InventSum _inventSum)
        {
            return inventAvailabilityFormCache.availabilityFromSumJoinedWithDim(_inventSum, inventDim_ds).availPhysical();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesQty</Name>
						<Source><![CDATA[
        edit SalesQty  salesQty(boolean     _set,
                                InventSum   _inventSum,
                                SalesQty    _qty)
        {
            container con = this.getSetQuantyties(_set, _inventSum, _qty, pdsCWQty.realValue());

            return conPeek(con, 1);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        public edit PdsCWInventQty  pdsCWQty(
            boolean         _set,
            InventSum       _inventSum,
            PdsCWInventQty  _pdsCWQty)
        {
            container con = this.getSetQuantyties(_set, _inventSum, salesQty.realValue(), _pdsCWQty);

            return conPeek(con, 2);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTable</Name>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            //reset caches for invent dim combination grids
            inventDimCombinationAvailableQtyMap = new Map(Types::Int64, Types::Container);
            inventDimCombinationQtyMap          = new Map(Types::Int64, Types::Container);

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int             ret;
            InventTable     inventTableFind;

            ret = super();

            inventTableFind = InventTable::find(inventTable.ItemId);

            element.pdsCWEnableFieldOnExistingItem(inventTableFind.hasProductDimensions());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            inventTable_ds.query().dataSourceTable(tableNum(InventTable)).clearDynalinks();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            Query    query;

            if (inventTable_ds.queryRun())
            {
                query = inventTable_ds.queryRun().query();
            }
            else
            {
                query = inventTable_ds.query();
            }

            query.dataSourceTable(tableNum(InventDim)).addSortIndex(indexNum(InventDim, DimIdIdx));
            query.dataSourceTable(tableNum(InventDim)).indexIsHint(true);
            query.dataSourceTable(tableNum(InventSum)).addSortIndex(indexNum(InventSum, ItemDimIdx));
            query.dataSourceTable(tableNum(InventSum)).indexIsHint(true);

            if (!queryFirst)
            {
                //in case visible inventory dimension fields have been changed reread inventDimParm and reset cache
                inventDimParm = inventDimFormSetup.parmDimParmVisibleGrid().data();
                inventSumQtyMap = new Map(Types::Container, Types::Container);

                inventAvailabilityFormCache.refreshCache();

                super();
            }

            queryFirst = false;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        boolean validateWrite()
        {
            boolean ret = true;

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventTable2</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.pdsCWEnableFieldOnNewItem(inventTable2.hasProductDimensions());

            element.updateDesign(InventDimFormDesignUpdate::Active);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            inventTable2_ds.query().dataSourceTable(tableNum(InventTable)).clearDynalinks();
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesQty</Name>
						<Source><![CDATA[
        edit SalesQty  salesQty(boolean      set,
                                InventTable _inventTable,
                                PurchQty    _qty)
        {
            SalesQty                qty;
            InventDimId             inventDimIdLocal;

            inventDimIdLocal    = element.tmpFrmVirtualInventDimId(inventDimId, _inventTable.ItemId, false, false);

            select tmpFrmVirtual
                where   tmpFrmVirtual.TableNum      == tableNum(InventSum) &&
                        tmpFrmVirtual.ItemId        == _inventTable.ItemId &&
                        tmpFrmVirtual.InventDimId   == inventDimIdLocal;

            if (tmpFrmVirtual)
            {
                qty = tmpFrmVirtual.Qty;
            }
            else
            {
                tmpFrmVirtual.TableNum      = tableNum(InventSum);
                tmpFrmVirtual.ItemId        = _inventTable.ItemId;
                tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                {
                    tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                }
                tmpFrmVirtual.write();
            }

            if (set)
            {
                if (_qty)
                {
                    tmpFrmVirtual.Qty = _qty;
                }
                else
                {
                    tmpFrmVirtual.Qty = 0;
                }

                tmpFrmVirtual.TableNum      = tableNum(InventSum);
                tmpFrmVirtual.ItemId        = _inventTable.ItemId;
                tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                {
                    tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                }
                tmpFrmVirtual.write();

                qty = tmpFrmVirtual.Qty;
            }

            return qty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        public edit PdsCWInventQty pdsCWQty(
            boolean         _set,
            InventTable     _inventTable,
            PdsCWInventQty  _pdsCWQty)
        {
            PdsCWInventQty    pdsCWInventQty = 0;
            InventDimId             inventDimIdLocal;

            inventDimIdLocal    = element.tmpFrmVirtualInventDimId(inventDimId, _inventTable.ItemId, false, false);

            if (PdsGlobal::pdsIsCWItem(_inventTable.ItemId))
            {
                select firstonly tmpFrmVirtual
                    where   tmpFrmVirtual.TableNum      == tableNum(InventSum) &&
                            tmpFrmVirtual.ItemId        == _inventTable.ItemId &&
                            tmpFrmVirtual.InventDimId   == inventDimIdLocal;

                if (tmpFrmVirtual)
                {
                    pdsCWInventQty = tmpFrmVirtual.PdsCWQty;
                }
                else
                {
                    tmpFrmVirtual.TableNum      = tableNum(InventSum);
                    tmpFrmVirtual.ItemId        = _inventTable.ItemId;
                    tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                    if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                    {
                        tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                    }
                    tmpFrmVirtual.write();
                }

                if (_set)
                {
                    if (_pdsCWQty)
                    {
                        tmpFrmVirtual.PdsCWQty = _pdsCWQty;
                    }
                    else
                    {
                        tmpFrmVirtual.PdsCWQty = 0;
                    }

                    tmpFrmVirtual.TableNum      = tableNum(InventSum);
                    tmpFrmVirtual.ItemId        = _inventTable.ItemId;
                    tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                    if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                    {
                        tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                    }
                    tmpFrmVirtual.write();

                    pdsCWInventQty = tmpFrmVirtual.Qty;
                }
            }

            return pdsCWInventQty;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventSum2</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimCombination</Name>
				<Methods>
					<Method>
						<Name>getAvailablePhysicalQuantities</Name>
						<Source><![CDATA[
        private container getAvailablePhysicalQuantities(InventDimCombination _inventDimCombination)
        {
            InventDim       inventDimFind;
            InventDimParm   inventDimParmLocal;
            container       conValue;

            if (inventDimCombinationAvailableQtyMap.exists(_inventDimCombination.RecId))
            {
                conValue = inventDimCombinationAvailableQtyMap.lookup(_inventDimCombination.RecId);
            }
            else
            {
                inventDimFind.initFromInventDim(inventDim);
                EcoResProductDimGroupSetup::copyProductDimensionsForItem(_inventDimCombination.ItemId, _inventDimCombination.inventDim(), inventDimFind);

                inventDimParmLocal.data(inventDimParm);
                inventDimParmLocal.setActiveProductDim(EcoResProductDimGroupSetup::newItemId(_inventDimCombination.ItemId));

                inventDimFind.clearNotSelectedDim(inventDimParmLocal);
                inventDimFind = InventDim::findOrCreate(inventDimFind);

                conValue = [inventAvailabilityFormCache.availabilityByItemId(inventDimCombination.ItemId, inventDimFind).availPhysical(), inventAvailabilityFormCache.CWInventAvailabilitySnapshot().pdsCWAvailPhysical()];

                inventDimCombinationAvailableQtyMap.insert(_inventDimCombination.RecId, conValue);
            }

            return conValue;
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesQty</Name>
						<Source><![CDATA[
        public edit SalesQty salesQty(
            boolean                 _set,
            InventDimCombination    _inventDimCombination,
            SalesQty                _qty)
        {
            return element.inventDimCombinationSalesQty(_set, _inventDimCombination, _qty);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        public edit PdsCWInventQty pdsCWQty(
            boolean                 _set,
            InventDimCombination    _inventDimCombination,
            PdsCWInventQty          _pdsCWQty)
        {
            return element.inventDimCombinationPdsCWQty(_set, _inventDimCombination, _pdsCWQty);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availPhysical</Name>
						<Source><![CDATA[
        display InventQtyAvailPhysical availPhysical(InventDimCombination _inventDimCombination)
        {
            container con = this.getAvailablePhysicalQuantities(_inventDimCombination);

            return conPeek(con, 1);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWAvailPhysical</Name>
						<Source><![CDATA[
        public display PdsCWAvailPhysical pdsCWAvailPhysical(InventDimCombination _inventDimCombination)
        {
            container con = this.getAvailablePhysicalQuantities(_inventDimCombination);

            return conPeek(con, 2);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sorts the products based on size with its display order.
        /// </summary>
        public void init()
        {
            super();

            element.addDisplayOrderDataSources(this);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimCombination2</Name>
				<Methods>
					<Method>
						<Name>getSetQuantyties</Name>
						<Source><![CDATA[
        private container getSetQuantyties( boolean               _set,
                                            InventDimCombination  _inventDimCombination,
                                            SalesQty              _qty,
                                            PdsCWInventQty        _pdsCWQty)
        {
            InventDimId           inventDimIdLocal;

            if (_set
                || !inventDimCombinationQtyMap2.exists(_inventDimCombination.RecId))
            {
                inventDimId         = element.findDimFromCombination(_inventDimCombination);
                inventDimIdLocal    = element.tmpFrmVirtualInventDimId(inventDimId, _inventDimCombination.ItemId, true);

                select forupdate firstonly tmpFrmVirtual
                    where   tmpFrmVirtual.TableNum      == tableNum(InventDimCombination)   &&
                            tmpFrmVirtual.ItemId        == _inventDimCombination.ItemId     &&
                            tmpFrmVirtual.InventDimId   == inventDimIdLocal;

                if (_set)
                {
                    inventDimCombinationQtyMap2.remove(_inventDimCombination.RecId);

                    tmpFrmVirtual.Qty           = _qty;
                    tmpFrmVirtual.PdsCWQty      = _pdsCWQty;

                    tmpFrmVirtual.TableNum      = tableNum(InventDimCombination);
                    tmpFrmVirtual.ItemId        = _inventDimCombination.ItemId;
                    tmpFrmVirtual.InventDimId   = inventDimIdLocal;
                    if (RetailCatalogFromSalesQuickQuoteFlight::instance().isEnabled())
                    {
                        tmpFrmVirtual.Catalog   = selectedCatalogRecId;
                    }
                    tmpFrmVirtual.write();
                }

                inventDimCombinationQtyMap2.insert(_inventDimCombination.RecId, [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty]);

                return [tmpFrmVirtual.Qty, tmpFrmVirtual.PdsCWQty];
            }

            return inventDimCombinationQtyMap2.lookup(_inventDimCombination.RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesQty</Name>
						<Source><![CDATA[
        edit SalesQty  salesQty(boolean               _set,
                                InventDimCombination  _inventDimCombination,
                                SalesQty              _qty)
        {
            container con = this.getSetQuantyties(_set, _inventDimCombination, _qty, pdsCWQty3.realValue());

            return conPeek(con, 1);
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWQty</Name>
						<Source><![CDATA[
        public edit PdsCWInventQty pdsCWQty(
            boolean                 _set,
            InventDimCombination    _inventDimCombination,
            PdsCWInventQty          _pdsCWQty)
        {
            container con = this.getSetQuantyties(_set, _inventDimCombination, salesQty3.realValue(), _pdsCWQty);

            return conPeek(con, 2);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailCatalogProductIncludeMasterView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView));
            qbds.addLink(fieldNum(InventTable, Product), fieldNum(RetailCatalogProductIncludeMasterView, Product));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView)).clearRanges();

            if (CatalogSelector.valueStr())
            {
                this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView))
                    .addRange(fieldNum(RetailCatalogProductIncludeMasterView, Catalog)).value(any2Str(selectedCatalogRecId));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailCatalogProductIncludeMasterView2</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView));
            qbds.addLink(fieldNum(InventTable, Product), fieldNum(RetailCatalogProductIncludeMasterView, Product));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView)).clearRanges();

            if (CatalogSelector.valueStr())
            {
                this.query().dataSourceTable(tableNum(RetailCatalogProductIncludeMasterView))
                    .addRange(fieldNum(RetailCatalogProductIncludeMasterView, Catalog)).value(any2Str(selectedCatalogRecId));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CatalogProduct</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(CatalogProduct));
            qbds.addLink(fieldNum(InventDimCombination, DistinctProductVariant), fieldNum(CatalogProduct, Product));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(CatalogProduct)).clearRanges();

            if (CatalogSelector.valueStr())
            {
                this.query().dataSourceTable(tableNum(CatalogProduct))
                    .addRange(fieldNum(CatalogProduct, Catalog)).value(any2Str(selectedCatalogRecId));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CatalogProduct2</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(CatalogProduct));
            qbds.addLink(fieldNum(InventDimCombination, DistinctProductVariant), fieldNum(CatalogProduct, Product));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(CatalogProduct)).clearRanges();

            if (CatalogSelector.valueStr())
            {
                this.query().dataSourceTable(tableNum(CatalogProduct))
                    .addRange(fieldNum(CatalogProduct, Catalog)).value(any2Str(selectedCatalogRecId));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>saveQuery</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.saveUserQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>resetQuery</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.deleteSavedQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CatalogSelector</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup sysTableLookup = new SysTableLookup();
            sysTableLookup = SysTableLookup::newParameters(tableNum(Catalog), this);

            Query query = B2B2BDataHelper::buildQueryForB2bCatalogLookup(retailChannel, custAccount);

            sysTableLookup.addLookupfield(fieldNum(Catalog, CatalogId));
            sysTableLookup.addLookupMethod(tableMethodStr(Catalog, name));
            sysTableLookup.parmQuery(query);

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            RetailCatalogId selectedCatalogId = this.valueStr();

            Query query = B2B2BDataHelper::buildQueryForB2bCatalogLookup(retailChannel, custAccount);
            query.dataSourceTable(tableNum(Catalog)).addRange(fieldNum(Catalog, CatalogId)).value(any2Str(selectedCatalogId));
            query.topRows(1);
            QueryRun qr = new QueryRun(query);
            if (!qr.next())
            {
                return false;
            }

            boolean ret = super();

            if (ret)
            {
                Catalog catalogRecord = Catalog::FindByCatalogId(selectedCatalogId);
                this.text(catalogRecord.CatalogId);

                if (filterByCatalog && selectedCatalogRecId != catalogRecord.RecId)
                {
                    // If the catalog is changed, clear tmpFrmVirtual.
                    delete_from tmpFrmVirtual;

                    selectedCatalogRecId = catalogRecord.RecId;
                    RetailCatalogProductIncludeMasterView_ds.executeQuery();
                    RetailCatalogProductIncludeMasterView2_ds.executeQuery();
                    CatalogProduct_ds.executeQuery();
                    CatalogProduct2_ds.executeQuery();
                    inventTable_ds.executeQuery();
                    inventTable2_ds.executeQuery();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventProfileType_RU</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            inventDimFormSetup.parmInventProfileType_RU(inventProfileType_RU.selection());
            element.inventDimSetupObject().buildQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GridExistingItems</Name>
				<Type>Grid</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();

            inventDimParmFixed.enabled(true);
            menuButton.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsCWQty</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            inventSum_ds.salesQty(true, inventSum, PdsCatchWeight::inventQty(inventTable.ItemId, pdsCWQty.realValue(), inventTable.inventTableModuleSales().UnitId));
            
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SalesQty</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean     ret;
            SalesQty    tmpSalesQty;

            ret = super();

            tmpSalesQty = InventTable::calculateOrderQuantity(InventItemSalesSetup::find(inventSum.ItemId, inventSum.InventDimId),
															  inventSum.InventDimId,
														  	  this.realValue(), 
														  	  InventTable::find(inventSum.ItemId).salesUnitId());

            if (tmpSalesQty != this.realValue())
            {
                inventSum_ds.salesQty(true, inventSum, tmpSalesQty);
                inventSum_ds.research(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsCWQty4</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            inventDimCombination_ds.salesQty(true, inventDimCombination, PdsCatchWeight::inventQty(inventTable.ItemId, pdsCWQty4.realValue(), inventTable.inventTableModuleSales().UnitId));
            inventDimCombination_ds.research(true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SalesQty4</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean             ret;
            SalesQty            tmpSalesQty;

            ret = super();

            InventDim mergedInventoryDimension;
            mergedInventoryDimension.data(inventDimCombination.inventDim());
            mergedInventoryDimension.mergeUsedDim(InventDimGroupSetup::newItemId(inventTable.ItemId), inventDim);
            mergedInventoryDimension = InventDim::findOrCreate(mergedInventoryDimension);

            InventDimId mergedInventDimId = mergedInventoryDimension.InventDimId;

            tmpSalesQty = InventTable::calculateOrderQuantity(inventTable.inventItemSalesSetup(mergedInventDimId),
                                                              mergedInventDimId,
															  this.realValue(), 
															  inventTable.salesUnitId());

            if (tmpSalesQty != this.realValue())
            {
                inventDimCombination_ds.salesQty(true, inventDimCombination, tmpSalesQty);
                inventDimCombination_ds.research(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GridNewItems</Name>
				<Type>Grid</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();

            inventDimParmFixed.enabled(false);
            menuButton.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsCWQty2</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            inventTable2_ds.salesQty(true, inventTable2, PdsCatchWeight::inventQty(inventTable2.ItemId, pdsCWQty2.realValue(), inventTable2.inventTableModuleSales().UnitId));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SalesQty2</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean             ret;
            SalesQty            tmpSalesQty;

            ret = super();

            tmpSalesQty = InventTable::calculateOrderQuantity(inventTable2.inventItemSalesSetup(InventDimCombination2.InventDimId),
															  InventDimCombination2.InventDimId,
															  this.realValue(),
															  inventTable2.salesUnitId());

            if (tmpSalesQty != this.realValue())
            {
                inventTable2_ds.salesQty(true, inventTable2, tmpSalesQty);
                inventTable2_ds.research(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsCWQty3</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            inventDimCombination2_ds.salesQty(true, inventDimCombination2, PdsCatchWeight::inventQty(inventTable2.ItemId, pdsCWQty3.realValue(), inventTable.inventTableModuleSales().UnitId));
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SalesQty3</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean             ret;
            SalesQty            tmpSalesQty;

            ret = super();

            tmpSalesQty = InventTable::calculateOrderQuantity(inventTable2.inventItemSalesSetup(inventDimCombination2.InventDimId),
                                                              inventDimCombination2.InventDimId,
															  this.realValue(),
															  inventTable2.salesUnitId());

            if (tmpSalesQty != this.realValue())
            {
                inventDimCombination2_ds.salesQty(true, inventDimCombination2, tmpSalesQty);
                inventDimCombination2_ds.research(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventSum</Name>
			<Table>InventSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Arrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ordered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWArrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWDeducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPicked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Picked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Received</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Registered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>InventTable</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>inventdim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventSum</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTable</Name>
			<Table>InventTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ABCContributionMargin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCRevenue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCTieUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholManufacturerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholProductionTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholStrength_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproxTaxValue_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroupId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoReportFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchMergeDateCalculationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMCalcGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMManualReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsExportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsImportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Density</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Depth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPCManager</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EximProductGroupTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFOAvoidCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValueCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossDepth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossHeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossWidth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSOnService_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Intracode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatExclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatProcId_CZ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventFiscalLIFOGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProductType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemDimCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemPriceToleranceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTaggingLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NRTaxGroup_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackagingGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Packing_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSBaseAttributeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBestBefore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSMinimumPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSQtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSStandardPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAllocationGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSPotencyAttribRecording</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfAdvice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfLife</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSTargetFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendorCheckItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phantom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfPlanningItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfProductType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryVendorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdFlushingPrincip</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>projCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>qtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SADRateCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesContributionRatio</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPercentMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPriceModelBasic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapConst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapVar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SerialNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipIntraCompanySync_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>standardPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaraWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationOrigin_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxFiscalClassification_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPackagingQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitVolume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSArrivalHandlingTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPalletTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPickingQtyTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DSA_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventTable2</Name>
			<Table>InventTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ABCContributionMargin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCRevenue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCTieUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ABCValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholManufacturerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholProductionTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlcoholStrength_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproxTaxValue_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroupId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoReportFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchMergeDateCalculationMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMCalcGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMManualReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsExportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsImportTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Density</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Depth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPCManager</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EximProductGroupTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFOAvoidCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalLIFONormalValueCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossDepth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossHeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>grossWidth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSOnService_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Intracode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatExclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatProcId_CZ</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventFiscalLIFOGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProductType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemDimCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemPriceToleranceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemTaggingLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinimumPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameAlias</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NRTaxGroup_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackagingGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Packing_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSBaseAttributeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBestBefore</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSMinimumPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSQtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWWMSStandardPalletQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAllocationGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsItemRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSPotencyAttribRecording</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfAdvice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsShelfLife</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSTargetFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsVendorCheckItem</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phantom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfPlanningItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfProductType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryVendorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdFlushingPrincip</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>projCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>qtyPerLayer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SADRateCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesContributionRatio</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPercentMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPriceModelBasic</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapConst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScrapVar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SerialNumGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipIntraCompanySync_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sortCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardConfigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardInventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>standardPalletQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaraWeight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxationOrigin_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxFiscalClassification_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPackagingQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxServiceCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitVolume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAltItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSArrivalHandlingTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPalletTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WMSPickingQtyTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DSA_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventSum2</Name>
			<Table>InventSum</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Arrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClosedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Deducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDateExpected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ordered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWArrived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWDeducted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOnOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPicked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWPostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReceived</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRegistered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalInvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Picked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationIssue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuotationReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Received</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Registered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservOrdered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTable2</JoinSource>
			<LinkType>NotExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombination</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTable</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombination2</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTable2</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimFromInventDimCombination2</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimCombination2</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimFromInventDimCombination</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimCombination</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Catalog</Name>
			<Table>Catalog</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CatalogId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogTarget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnableSnapshot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Owner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PublishedValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFromDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCatalogProductIncludeMasterView</Name>
			<Table>RetailCatalogProductIncludeMasterView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTable</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCatalogProductIncludeMasterView2</Name>
			<Table>RetailCatalogProductIncludeMasterView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogProduct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventTable2</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatalogProduct</Name>
			<Table>CatalogProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseHierarchy</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimCombination</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatalogProduct2</Name>
			<Table>CatalogProduct</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Catalog</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseHierarchy</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimCombination2</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS26120</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>FormButtonGroupControl1</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS69449</HelpText>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>CommandButton</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Command>AdvancedFilterAndSort</Command>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>saveQuery</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS12229</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>resetQuery</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS3073</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS2163</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>InventDimParmFixed</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>InventDimParmFixed</MenuItemName>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FormGroupControl2</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CatalogSelector</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>RetailCatalogId</ExtendedDataType>
						<Label>@Retail:CatalogNumber</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageExistingItems</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarListDouble</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl1</Name>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>InventProfileType_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<EnumType>InventProfileType_RU</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridExistingItems</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventTable_ItemId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>InventTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Inventorydimensions</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventLocationId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1002159032</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Inventorydimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>inventdim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>inventdim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1312351117</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>SalesQty</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InventSum_PdsCWAvailPhysical</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsCWAvailPhysical</DataField>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InventSum_AvailPhysical</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availPhysical</DataMethod>
										<DataSource>InventSum</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventTable</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridExistingItemsCombinations</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions1_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDimFromInventDimCombination</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions1_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDimFromInventDimCombination</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions1_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDimFromInventDimCombination</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions1_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDimFromInventDimCombination</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions1_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDimFromInventDimCombination</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>ProductDimensions</DataGroup>
										<DataSource>InventDimFromInventDimCombination</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty4</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1145324610</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventDimCombination</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesQty4</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesqty</DataMethod>
										<DataSource>InventDimCombination</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWAvailPhysical</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1002159034</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWAvailphysical</DataMethod>
										<DataSource>InventDimCombination</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AvailPhysical</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availphysical</DataMethod>
										<DataSource>InventDimCombination</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventDimCombination</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS55425</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageNewItems</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarListDouble</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridNewItems</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventTable_ItemId1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>InventTable2</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177277</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventTable2</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesQty2</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>SalesQty</DataMethod>
										<DataSource>InventTable2</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventTable2</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridNewItemsCombinations</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions2</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions2_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDimFromInventDimCombination2</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions2_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDimFromInventDimCombination2</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions2_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDimFromInventDimCombination2</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions2_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDimFromInventDimCombination2</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions2_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDimFromInventDimCombination2</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>ProductDimensions</DataGroup>
										<DataSource>InventDimFromInventDimCombination2</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PdsCWQty3</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177277</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>pdsCWQty</DataMethod>
										<DataSource>InventDimCombination2</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesQty3</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>SalesQty</DataMethod>
										<DataSource>InventDimCombination2</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventDimCombination2</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS55423</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroupBottom</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ok</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS14364</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>apply</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Apply</Command>
						<Text>@SYS24973</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>