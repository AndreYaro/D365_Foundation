<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchRFQEditLinesPrintOptions</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class PurchRFQEditLinesPrintOptions extends FormRun
    {
        PurchRFQEditLinesForm   purchRFQEditLinesForm;

        // Print variables and objects:
        Printout                printout;
        boolean                 printFormLetter;
        boolean                 printReplySheet;
        boolean                 printPriceAmount;
        boolean                 usePrintManagement;
        PurchRFQFormLetter      purchRFQFormLetter;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>setPrintVariables</c> method in the <c>PurchRFQEditLines</c> form, when the OK button is clicked.
    /// </summary>
    public void closeOk()
    {
        // Set all print variables in parent form:
        this.args().caller().setPrintVariables(printout,printFormLetter,printReplySheet,printPriceAmount,usePrintManagement);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPrintFormletter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the print field, which indicates if the RFQ will be printed.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicated if the print field will be set.
    /// </param>
    /// <param name="_printFormletter">
    /// The value of the print field.
    /// </param>
    /// <returns>
    /// The value of the print field.
    /// </returns>
    public edit boolean editPrintFormletter(boolean _set,boolean _printFormletter)
    {
        if  (_set)
        {
            printFormletter = _printFormletter;
        }
        return printFormletter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPrintOut</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the print field, which indicates if the values before or after updated will be used.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicate if the print field is to be set.
    /// </param>
    /// <param name="_printout">
    /// An enum, to indicate if the values before or after updated will be used.
    /// </param>
    /// <returns>
    /// The value of the print field.
    /// </returns>
    public edit Printout editPrintOut(boolean _set,Printout _printout)
    {
        if  (_set)
        {
            printout = _printout;
        }
        return printout;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPrintPriceAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the price amount field, which indicates if the price amount will be printed or not.
    /// </summary>
    /// <param name="_set">
    /// A boolean to indicate if the price amount field is to be set.
    /// </param>
    /// <param name="_printPriceAmount">
    /// The price amount boolean value.
    /// </param>
    /// <returns>
    /// The price amount boolean value.
    /// </returns>
    public edit boolean editPrintPriceAmount(boolean _set,boolean _printPriceAmount)
    {
        if  (_set)
        {
            printPriceAmount = _printPriceAmount;
        }
        return printPriceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPrintReplySheet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the reply sheet value.
    /// </summary>
    /// <param name="_set">
    /// A boolean to indicate, if the reply sheet value is to be set.
    /// </param>
    /// <param name="_printReplySheet">
    /// A boolean value, to indicate if the reply sheet is to be printed.
    /// </param>
    /// <returns>
    /// True if the reply sheet is to be printed; otherwise false.
    /// </returns>
    public edit boolean editPrintReplySheet(boolean _set,boolean _printReplySheet)
    {
        if  (_set)
        {
            printReplySheet = _printReplySheet;
        }
        return printReplySheet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editUsePrintManagement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the print management variable, which indicates if a print management destination will be used or not.
    /// </summary>
    /// <param name="_set">
    /// A boolean, to indicate if the print variable is to be set.
    /// </param>
    /// <param name="_usePrintManagement">
    /// The value of print management variable.
    /// </param>
    /// <returns>
    /// The value of print management variable.
    /// </returns>
    public edit boolean editUsePrintManagement(boolean _set,boolean _usePrintManagement)
    {
        if  (_set)
        {
            usePrintManagement = _usePrintManagement;

            purchRFQFormLetter.getContract().parmUsePrintManagement(_usePrintManagement);
        }
        return usePrintManagement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form, and sets table buffer and objects from parent form.
    /// </summary>
    public void init()
    {
        super();

        purchRFQEditLinesForm = this.args().caller().parmPurchRFQEditLinesForm();
        purchRFQFormLetter    = this.args().caller().parmPurchRFQFormLetter();

        // Get all print variables:
        [printout,printFormletter,printReplySheet,printPriceAmount,usePrintManagement] = this.args().caller().getPrintVariables();

        this.updatePrintOut(purchRFQFormLetter.printerSettingsFormletter(PrintSetupOriginalCopy::Original));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Paints the form, and sets the default form fields.
    /// </summary>
    void  run()
    {
        super();

        formPrintFormletter.label(purchRFQEditLinesForm.printFormletterCaption());

        this.setFieldAccess();

        formPrintReplySheet.visible(purchRFQEditLinesForm.printReplySheet());
        formPrintPriceAmount.visible(purchRFQEditLinesForm.printPriceAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default form field properties and values.
    /// </summary>
    void setFieldAccess()
    {
        if  (!printFormletter)
        {
            usePrintManagement = false;
            printReplySheet    = false;
            printPriceAmount   = false;
            formUsePrintManagement.value(enum2int(NoYes::No));
            formPrintReplySheet.value(enum2int(NoYes::No));
            formPrintPriceAmount.value(enum2int(NoYes::No));
        }

        formUsePrintManagement.enabled(printFormletter);
        formPrintReplySheet.enabled(printFormletter);
        formPrintPriceAmount.enabled(printFormletter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrintOut</Name>
				<Source><![CDATA[
    void updatePrintOut(container _printerSettings)
    {
        if (formPrintOut.selection() == Printout::Current &&
                FormLetter::isClientOutput(_printerSettings))
        {
            formPrintOut.selection(Printout::After);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>FormPrintOut</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            ret = ret && purchRFQFormLetter.checkPrintOut(this.selection());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FormPrintFormletter</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls the <c>setFieldAccess</c> method, when clicked.
        /// </summary>
        /// <remarks>
        /// The <c>setFieldAccess</c> method will disable or enable dependent fields.
        /// </remarks>
        void clicked()
        {
            super();

            element.setFieldAccess();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FormUsePrintManagement</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls the <c>setFieldAccess</c> method, when clicked.
        /// </summary>
        /// <remarks>
        /// The <c>setFieldAccess</c> method will disable or enable dependent fields.
        /// </remarks>
        public void clicked()
        {
            super();

            element.setFieldAccess();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintOptions</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls the printer setup dialog.
        /// </summary>
        void clicked()
        {
            super();

            PurchRFQFormLetter::callPrintersettingsFormletter(purchRFQFormLetter,PrintSetupOriginalCopy::Original);
            element.updatePrintOut(purchRFQFormLetter.printerSettingsFormletter(PrintSetupOriginalCopy::Original));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS318966</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<ElementPosition>536870910</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS318966</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupPrint</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>FormPrintOut</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editPrintOut</DataMethod>
						<Label>@SYS920</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>FormPrintFormletter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS17200</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editPrintFormletter</DataMethod>
						<Label>@SYS12608</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>FormPrintReplySheet</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS105962</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editPrintReplySheet</DataMethod>
						<Label>@SYS105961</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>FormPrintPriceAmount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS105964</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editPrintPriceAmount</DataMethod>
						<Label>@SYS105963</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>FormUsePrintManagement</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS93923</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editUsePrintManagement</DataMethod>
						<Label>@SYS93922</Label>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroupParm</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>PrintOptions</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<Text>@SYS318967</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkCommandButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>80</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelCommandButton</Name>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
