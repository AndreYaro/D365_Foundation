<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TMSRateRouteWorkbench</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TMSRateRouteWorkbench extends FormRun
{
    #TMSXML
    #avifiles
    #resappl
    [SysObsolete('The fromAddress is deprecated, use fromTMSAddress instead.', false, 30\06\2020)]
    TMSAddressPhone             fromAddress;
    TMSAddressPhone             fromTMSAddress;
    TMSAddressPhone             toAddress;
    LogisticsPostalAddress      routeFromAddress;
    LogisticsPostalAddress      routeToAddress;
    SalesTable                  salesTable;
    PurchTable                  purchTable;
    WHSShipmentTable            shipmentTable;
    WHSLoadTable                loadTable;
    RecId                       parentRecId;
    InventTransType             parentInventTransType;
    [FormObservable]
    RefRecId                    refRecId;
    [FormObservable]
    RefTableId                  refTableId;
    QueryBuildRange             qbrTable;
    QueryBuildRange             qbrRec;
    QueryBuildRange             qbrRouteTable;
    QueryBuildRange             qbrRouteRec;
    QueryBuildRange             qbrSegErr;
    QueryBuildRange             qbrRateErr;
    QueryBuildRange             qbrRouteErr;
    TMSId                       tmsId;
    TMSRecordType               recordType;
    TMSCommunicationType        commType;
    boolean                     runFromCaller;
    boolean                     allowAssign;
    boolean                     showExceptions;
    DimensionDefault            dimension;
    LogisticsPostalAddress      defaultPostalAddress;
    LogisticsElectronicAddress  defaultPhone;
    TMSName                     defaultName;
    ShipCarrierResidentialDest  defaultResidential;
    InventTransferTable         transferTable;
    TMSRateRouteWorkbenchForm   rateRouteWorkbenchForm;
    [FormObservable]
    TMSName                     displayRecordCountValue;
    LogisticsPostalAddress      logisticsPostalAddress;
    [FormObservable]
    private container           imageContainerGoalGreen;

    #define.CurrentVersion(4)
    #localmacro.CurrentList
            defaultPostalAddress,
            defaultPhone,
            defaultName,
            defaultResidential,
            showExceptions
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>addressJumpRef</Name>
				<Source><![CDATA[
    public void addressJumpRef(TMSAddressType _addressType, TMSId _id)
    {
        Args args = new Args();

        args.caller(this);

        switch (_addressType)
        {
            case TMSAddressType::Customer:
                args.record(CustTable::find(_id));
                new MenuFunction(menuitemdisplaystr(CustTable), MenuItemType::Display).run(args);
                break;

            case TMSAddressType::Vendor:
                args.record(VendTable::find(_id));
                new MenuFunction(menuitemdisplaystr(VendTable), MenuItemType::Display).run(args);
                break;

            case TMSAddressType::Hub:
                args.record(TMSHubMaster::find(_id));
                new MenuFunction(menuitemdisplaystr(TMSHubMaster), MenuItemType::Display).run(args);
                break;

            case TMSAddressType::Warehouse:
                args.record(InventLocation::find(_id));
                new MenuFunction(menuitemdisplaystr(InventLocations), MenuItemType::Display).run(args);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        xSysLastValue::saveLast(element);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAddRec</Name>
				<Source><![CDATA[
    void createAddRec()
    {
        TMSRateRouteAddress rateRouteAddress = TMSRateRouteAddress::find(fromContact.text(), toContact.text(), fromZip.text(), toZip.text());

        if (rateRouteAddress.RecId == 0)
        {
            rateRouteAddress = TMSRateRouteAddress::insertFromParameters(fromContact.text(), toContact.text(), fromZip.text(), toZip.text());
        }

        refTableId = rateRouteAddress.TableId;
        refRecId = rateRouteAddress.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deletePreviousInformation</Name>
				<Source><![CDATA[
    void deletePreviousInformation()
    {
        utcdatetime             delDate;

        if (refTableId && refRecId)
        {
            delDate = utcDateTimeNull();
        }
        else
        {
            delDate = DateTimeUtil::addDays(DateTimeUtil::utcNow(), - 1);
        }

        TMSRouteTable::deleteFromParameters(refTableId, refRecId, delDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRecordCount</Name>
				<Source><![CDATA[
    display TMSName displayRecordCount()
    {
        if (displayRecordCountValue == '')
        {
            displayRecordCountValue = rateRouteWorkbenchForm.getRecordCountValue(refTableId, refRecId);
        }

        return displayRecordCountValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSTCCandLTL</Name>
				<Source><![CDATA[
    container findSTCCandLTL()
    {
        WHSSTCCCode     retSTCC;
        WHSLTLClassCode retLTL;

        switch (true)
        {
            case loadTable.RecId != 0:
                [retSTCC, retLTL] = TMSAutoRouteAssignment::findLoadSTCCandLTL(loadTable.LoadId);
                break;

            case shipmentTable.RecId != 0:
                [retSTCC, retLTL] = TMSAutoRouteAssignment::findShipSTCCandLTL(shipmentTable.ShipmentId);
                break;

            case salesTable.RecId != 0:
                [retSTCC, retLTL] = TMSAutoRouteAssignment::findSalesSTCCandLTL(salesTable.SalesId);
                break;

            case purchTable.RecId != 0:
                [retSTCC, retLTL] = TMSAutoRouteAssignment::findPurchSTCCandLTL(purchTable.PurchId);
                break;
        }

        return [retSTCC, retLTL];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDlvTerms</Name>
				<Source><![CDATA[
    DlvTermId getDlvTerms(Common _source)
    {
        DlvTermId        dlvTermId;

        dlvTermId = (select firstonly whsShipmentTable
                        where whsShipmentTable.LoadId == loadTable.LoadId).DlvTermId;

        if (!dlvTermId)
        {
            switch (_source.TableId)
            {
                case tableNum(SalesTable):
                    dlvTermId = salesTable.DlvTerm;
                    break;

                case tableNum(PurchTable):
                    dlvTermId = purchTable.DlvTerm;
                    break;

                case tableNum(InventTransferTable):
                    dlvTermId = transferTable.DlvTermId;
                    break;
            }
        }

        return dlvTermId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        WHSSTCCCode     whsSTCC;
        WHSLTLClassCode whsLTL;

        super();

        toAddress = new TMSAddressPhone();
        fromTMSAddress = new TMSAddressPhone();
        rateRouteWorkbenchForm = new TMSRateRouteWorkbenchForm();

        xSysLastValue::getLast(this);
        hideErrors.value(!showExceptions);

        if (element.args().record())
        {
            switch (element.args().dataset())
            {
                case tableNum(SalesTable):
                    this.initFromSalesTable();
                    break;

                case tableNum(WHSShipmentTable):
                    this.initFromShipmentTable();
                    break;

                case tableNum(WHSLoadTable):
                    this.initFromLoadTable();
                    break;

                case tableNum(PurchTable):
                    this.initFromPurchTable();
                    break;

                default:
                    this.initFromDefaultArgsRecord();
                    break;
            }
        }
        else
        {
            this.setFromAddressFromDefault();
            this.setFromFields(TMSAddressType::None, '');
        }

        this.deletePreviousInformation();

        this.enableRouteAssignment();

        if (loadTable.LoadStatus != WHSLoadStatus::Shipped)
        {
            this.validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo(RequestedDeliveryDateTime,
                                                                        true,
                                                                        "@TRX:RequestedDlvDateTimeSetToCurrentDateTime");

            this.validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo(RequestedShipDateTime,
                                                                        true,
                                                                        "@TRX:RequestedShipDateTimeSetToCurrentDateTime");
        }

        commType    = element.args().parmEnum();
        [whsSTCC,
        whsLTL]     = this.findSTCCandLTL();
        stcc.text(whsSTCC);
        ltlClass.text(whsLTL);

        if (commType && fromZip.valueStr() && toZip.valueStr())
        {
            if (commType == TMSCommunicationType::Route ||
                commType == TMSCommunicationType::RateRoute ||
                commType == TMSCommunicationType::Rate ||
                commType == TMSCommunicationType::RateShop)
            {
                this.updateRoutes(commType);
                runFromCaller = true;
            }
        }
        if (TMSSustainabilityIntegrationFeature::instance().isEnabled())
        {
            SustainabilityGreenHouseCheck.visible(true);
            imageContainerGoalGreen = element.createImageContainer(resourcestr(TMSSustainability_Checked), "");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createImageContainer</Name>
				<Source><![CDATA[
    private container createImageContainer(ResourceName _resourceName, str _tooltip)
    {
        container imageData = SysResource::getResourceNodeData(SysResource::getResourceNode(_resourceName));
        Image image = new Image();
        image.setData(imageData);

        return ImageReference::constructForImage(image, _tooltip).pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromDefaultArgsRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extension point to allow initialization on non base order type records.
    /// </summary>
    protected void initFromDefaultArgsRecord()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDateTimeIsBeforeUTCNowAndUpdateControl</Name>
				<Source><![CDATA[
    private boolean validateDateTimeIsBeforeUTCNowAndUpdateControl(FormDateTimeControl _dateTimeControl, boolean _updateControl)
    {
        boolean ret                     = true;
        var     dateTimeUTCNow          = DateTimeUtil::utcNow();
        var     dateTimeControlValue    = _dateTimeControl.dateTimeValue();
        var     dateTimeControlTimeZone = _dateTimeControl.timeZone();

        if (dateTimeControlValue != utcDateTimeNull()
           && this.customTimeZoneToUTCDateTime(dateTimeControlValue, dateTimeControlTimeZone) < dateTimeUTCNow)
        {
            if (_updateControl)
            {
                _dateTimeControl.dateTimeValue(this.utcToCustomTimeZoneDateTime(DateTimeUtil::addHours(dateTimeUTCNow, 1), dateTimeControlTimeZone));
            }

            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo</Name>
				<Source><![CDATA[
    private void validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo(
                                                    FormDateTimeControl _dateTimeControl,
                                                    boolean             _updateControl,
                                                    FieldLabel          _label)
    {
        if (!element.validateDateTimeIsBeforeUTCNowAndUpdateControl(_dateTimeControl, _updateControl))
        {
            info(_label);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLastShipmentOutbound</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the form record based on an outbound shipment
    /// </summary>
    /// <param name="_lastShipment">
    ///     The last shipment in the current load
    /// </param>
    protected void initFromLastShipmentOutbound(WHSShipmentTable _lastShipment)
    {
         WHSLoadLine loadLine = WHSLoadLine::findFirstForShipmentId(_lastShipment.ShipmentId);

        if (!parentRecId)
        {
            salesTable = loadLine.orderHeader() as SalesTable;
        }

        InventLocation warehouse = InventLocation::find(loadLine.warehouse());

        this.setWarehouseFields(
            warehouse.InventLocationId,
            warehouse.InventSiteId);

        fromTMSAddress = loadTable.originAddress();
        this.setFromFields(TMSAddressType::None, '');

        toAddress = _lastShipment.deliveryAddress();
        toAddress.parmResidential(salesTable.ShipCarrierResidential);
        this.setToFields(TMSAddressType::None,'');
        
        Amount amount = this.getAmountForSourceTable();

        this.setDataFieldsUsingDateTime(
            loadTable.effectiveGrossWeight(),
            loadTable.effectiveTotalVolumeInLoad(),
            amount,
            _lastShipment.DlvTermId,
            loadTable.loadArrivalDateTime(),
            loadTable.loadSchedShipDateTime(),
            loadTable.tmsDisplayEquipmentCode());

        this.setCarrierFields(
            _lastShipment.CarrierCode,
            loadTable.TransportationTemplateId,
            _lastShipment.CarrierServiceCode,
            _lastShipment.CarrierGroupCode,
            _lastShipment.ModeCode);

        this.setAccountFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLoadTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the record based on load table information.
    /// </summary>
    /// <param name="_loadId">
    ///     The load ID.
    /// </param>
    protected void initFromLoadTable(WHSLoadId _loadId = '')
    {
        WHSShipmentTable lastShipment;

        recordType  = TMSRecordType::Load;

        if (!prmisDefault(_loadId))
        {
            loadTable = WHSLoadTable::find(_loadId);

            if (loadTable.LoadDirection == WHSLoadDirection::Inbound)
            {
                this.setRefIdsForInboundLoad();
            }
            else
            {
                this.setRefIdsForOutboundLoad();
            }
        }
        else
        {
            loadTable  = element.args().record();
            refTableId = loadTable.TableId;
            refRecId   = loadTable.RecId;
        }

        tmsId = loadTable.LoadId;

        if (loadTable.LoadDirection == WHSLoadDirection::Inbound)
        {
            this.initFromLoadTableInbound();
        }
        else
        {
            select firstOnly lastShipment
                order by StopNum desc
                where lastShipment.LoadId == loadTable.LoadId;

            if (lastShipment.StopNum > 0 )
            {
                this.initFromLastShipmentOutbound(lastShipment);
            }
            else
            {
                this.initFromLoadTableOutbound();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefIdsForInboundLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the RefTableId and RefRecId values for inbound load order types.
    /// </summary>
    protected void setRefIdsForInboundLoad()
    {        
        refTableId = purchTable.TableId;
        refRecId   = purchTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRefIdsForOutboundLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the RefTableId and RefRecId values for outbound load order types.
    /// </summary>
    protected void setRefIdsForOutboundLoad()
    {        
        refTableId = salesTable.TableId;
        refRecId   = salesTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLoadTableInbound</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the record based on load table information if load is outbound
    /// </summary>
    protected void initFromLoadTableInbound()
    {
        InventLocation          warehouse;
        WHSLoadLine             loadLine;

        loadLine = WHSLoadLine::findFirstForLoadId(loadTable.LoadId);

        warehouse = InventLocation::find(loadLine.warehouse());

        if (!parentRecId)
        {
            this.setOrderHeaderFromLoadLine(loadLine);
        }

        fromTMSAddress = loadTable.originAddress();
        this.setFromFields(TMSAddressType::None, '');

        toAddress = loadTable.destinationAddress();
        this.setToFields(TMSAddressType::None, '');

        this.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

        this.setDataFieldsUsingDateTime(
            loadTable.effectiveGrossWeight(),
            loadTable.effectiveTotalVolumeInLoad(),
            loadTable.displayTotalAmount(),
            this.getDlvTerms(loadLine.orderHeader()),
            loadTable.loadArrivalDateTime(),
            loadTable.loadSchedShipDateTime(),
            loadTable.tmsDisplayEquipmentCode());

        this.setCarrierFields(loadTable.CarrierCode, loadTable.TransportationTemplateId, loadTable.CarrierServiceCode, loadTable.CarrierGroupCode, loadTable.ModeCode);

        this.setAccountFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderHeaderFromLoadLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the order header variable based on the load line being processed. Access point for extenders.
    /// </summary>
    /// <param name = "_loadLine">The load line being processed.</param>
    protected void setOrderHeaderFromLoadLine(WHSLoadLine _loadLine)
    {
        switch (_loadLine.InventTransType)
        {
            case (InventTransType::Purch):
                purchTable = _loadLine.orderHeader() as PurchTable;
                break;

            case (InventTransType::Sales):
                salesTable = _loadLine.orderHeader() as SalesTable;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLoadTableOutbound</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the record based on load table information if load is outbound.
    /// </summary>
    protected void initFromLoadTableOutbound()
    {
        WHSLoadLine    loadLine  = WHSLoadLine::findFirstForLoadId(loadTable.LoadId);
        InventLocation warehouse = InventLocation::find(loadLine.warehouse());

        this.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

        Common orderHeader = loadLine.orderHeader();

        if (orderHeader is InventTransferTable)
        {
            transferTable = orderHeader as InventTransferTable;
            this.initFromTransferOrder();
        }
        else
        {
            this.setActualOrderFromOrderHeader(orderHeader);

            fromTMSAddress = loadTable.originAddress();
            this.setFromFields(TMSAddressType::None, '');

            toAddress = loadTable.destinationAddress();
            if (salesTable)
            {
                toAddress.parmResidential(salesTable.ShipCarrierResidential);
            }
            
            this.setToFields(TMSAddressType::None, '');
            
            Amount amount = this.getAmountForSourceTable();            

            this.setDataFieldsUsingDateTime(
                loadTable.effectiveGrossWeight(),
                loadTable.effectiveTotalVolumeInLoad(),
                amount,
                this.getDlvTerms(loadLine.orderHeader()),
                loadTable.loadArrivalDateTime(),
                loadTable.loadSchedShipDateTime(),
                loadTable.tmsDisplayEquipmentCode());

            this.setCarrierFields(loadTable.CarrierCode, loadTable.TransportationTemplateId, loadTable.CarrierServiceCode, loadTable.CarrierGroupCode, loadTable.ModeCode);

            this.setAccountFields();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActualOrderFromOrderHeader</Name>
				<Source><![CDATA[
    protected void setActualOrderFromOrderHeader(Common _orderHeader)
    {
        if (!parentRecId && _orderHeader is SalesTable)
        {
            salesTable = _orderHeader as SalesTable;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountForSourceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amount of the source table record being rated/routed.
    /// </summary>
    /// <returns>The calculated amount.</returns>
    protected Amount getAmountForSourceTable()
    {
        Amount amount;

        if (refTableId == tableNum(SalesTable))
        {
            amount = TMSRateRoute::calcTotalValue(salesTable.SalesId) + TMSRateRoute::calcMiscCharges(salesTable.SalesId, TMSMiscCharges::SalesOrder);
        }
        else if (refTableId == tableNum(WHSLoadTable))
        {
            amount = loadTable.displayTotalAmount();
        }

        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the record based on purchase table information
    /// </summary>
    protected void initFromPurchTable()
    {
        InventLocation          warehouse;
        Weight                  totalWeight;
        Volume                  totalVolume;
        TMSPurchTable           tmsPurchTable;
        VendTable               vendTable;
        WHSLoadLine             loadLine;
        NumberOfRecords         counter;

        recordType      = TMSRecordType::Purch;
        purchTable      = element.args().record();

        counter = WHSLoadTable::numberOfLoadsForOrderNum(PurchTable.PurchId, InventTransType::Purch);

        if (counter == 1)
        {
            loadLine = WHSLoadLine::findFirstForOrderNum(purchTable.PurchId, InventTransType::Purch);

            parentRecId = purchTable.RecId;
            parentInventTransType = InventTransType::Purch;
            this.initFromLoadTable(loadLine.LoadId);
        }
        else
        {
            allowAssign = counter == 0;

            vendTable       = VendTable::find(purchTable.OrderAccount);
            tmsPurchTable   = TMSPurchTable::find(purchTable.PurchId);
            refTableId      = purchTable.TableId;
            refRecId        = purchTable.RecId;
            tmsId           = purchTable.PurchId;

            warehouse = InventLocation::find(purchTable.InventLocationId);

            this.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

            toAddress = TMSAddressPhone::initFromInventLocation(warehouse);
            if (warehouse)
            {
                this.setToFields(TMSAddressType::Warehouse, warehouse.InventLocationId);
            }
            else
            {
                this.setToFields(TMSAddressType::None, '');
            }

            fromTMSAddress = TMSAddressPhone::initFromVendAccount(vendTable.AccountNum);
            this.setFromFields(TMSAddressType::Vendor, vendTable.AccountNum);

            this.setCarrierFields(tmsPurchTable.CarrierCode, tmsPurchTable.TransportationTemplateId, tmsPurchTable.CarrierServiceCode, tmsPurchTable.CarrierGroupCode, tmsPurchTable.ModeCode);

            [totalWeight, totalVolume] = purchTable.totalWeightAndVolume();

            this.setDataFields(
                totalWeight,
                totalVolume,
                purchTable.amountRemainingMST() + TMSRateRoute::calcMiscCharges(purchTable.PurchId, TMSMiscCharges::PurchaseOrder),
                purchTable.DlvTerm,
                purchTable.DeliveryDate,
                dateNull(),
                '');

            this.setAccountFields();

            if (counter > 1)
            {
                info("@TRX873");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the record based on sales table information
    /// </summary>
    protected void initFromSalesTable()
    {
        InventLocation          warehouse;
        Weight                  totalWeight;
        Volume                  totalVolume;
        TMSSalesTable           tmsSalesTable;
        WHSLoadLine             loadLine;
        NumberOfRecords         counter;

        recordType      = TMSRecordType::Sales;
        salesTable      = element.args().record();

        counter = WHSLoadTable::numberOfLoadsForOrderNum(salesTable.salesId, InventTransType::Sales);

        if (counter == 1)
        {
            loadLine = WHSLoadLine::findFirstForOrderNum(salesTable.salesId, InventTransType::Sales);

            parentRecId = salesTable.RecId;
            parentInventTransType = InventTransType::Sales;
            this.initFromLoadTable(loadLine.LoadId);
        }
        else
        {
            allowAssign = counter == 0;

            refTableId      = salesTable.TableId;
            refRecId        = salesTable.RecId;
            tmsId           = salesTable.SalesId;

            tmsSalesTable   = TMSSalesTable::find(salesTable.SalesId);

            warehouse = InventLocation::find(salesTable.InventLocationId);

            this.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

            fromTMSAddress = TMSAddressPhone::initFromInventLocation(warehouse);
            if (warehouse)
            {
                this.setFromFields(TMSAddressType::Warehouse, warehouse.InventLocationId);
            }
            else
            {
                this.setFromFields(TMSAddressType::None, '');
            }

            toAddress = TMSAddressPhone::initFromSalesTable(salesTable);
            this.setToFields(TMSAddressType::None, '');

            [totalWeight, totalVolume] = salesTable.totalWeightAndVolume();

            this.setDataFields(
                totalWeight,
                totalVolume,
                salesTable.amountInvoiced() + salesTable.amountOrderedNotInvoiced() + TMSRateRoute::calcMiscCharges(salesTable.SalesId, TMSMiscCharges::SalesOrder),
                salesTable.DlvTerm,
                salesTable.ReceiptDateRequested,
                salesTable.ShippingDateRequested,
                '');

            this.setCarrierFields(tmsSalesTable.CarrierCode, tmsSalesTable.TransportationTemplateId, tmsSalesTable.CarrierServiceCode, tmsSalesTable.CarrierGroupCode, tmsSalesTable.ModeCode);

            this.setAccountFields();

            if (counter > 1)
            {
                info("@TRX873");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromShipmentTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the record based on shipment table information
    /// </summary>
    protected void initFromShipmentTable()
    {
        recordType      = TMSRecordType::Shipment;
        shipmentTable   = element.args().record();
        refTableId      = shipmentTable.TableId;
        refRecId        = shipmentTable.RecId;
        tmsId           = shipmentTable.ShipmentId;

        WHSLoadLine loadLine = WHSLoadLine::findFirstForShipmentId(shipmentTable.ShipmentId);

        this.setOrderHeaderFromLoadLine(loadLine);

        InventLocation warehouse = InventLocation::find(loadLine.warehouse());

        this.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

        fromTMSAddress = shipmentTable.getPickUpAddress();
        if (warehouse)
        {
            this.setFromFields(TMSAddressType::Warehouse, warehouse.InventLocationId);
        }
        else
        {
            this.setFromFields(TMSAddressType::None, '');
        }

        toAddress = shipmentTable.getDropOffAddress();
        this.setToFields(TMSAddressType::None, '');

        this.setDataFields(
            shipmentTable.displayTotalWeight(),
            shipmentTable.displayTotalVolume(),
            shipmentTable.displayTotalValue() + TMSRateRoute::calcMiscCharges(shipmentTable.LoadId, TMSMiscCharges::Load),
            shipmentTable.DlvTermId,
            shipmentTable.shipmentArrivalDate(),
            dateNull(),
            shipmentTable.tmsDisplayEquipmentCode());

        this.setCarrierFields(shipmentTable.CarrierCode, loadTable.TransportationTemplateId, shipmentTable.CarrierServiceCode, shipmentTable.CarrierGroupCode, shipmentTable.ModeCode);

        this.setAccountFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTransferOrder</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the record based on transfer table information
    /// </summary>
    protected void initFromTransferOrder()
    {
        InventLocation          toWarehouse = InventLocation::find(transferTable.InventLocationIdTo);

        toAddress = TMSAddressPhone::initFromInventLocation(toWarehouse);
        if (toWarehouse)
        {
            this.setToFields(TMSAddressType::Warehouse, toWarehouse.InventLocationId);
        }
        else
        {
            this.setToFields(TMSAddressType::None, '');
        }

        fromTMSAddress = loadTable.originAddress();
        this.setFromFields(TMSAddressType::None, '');

        this.setDataFields(
            loadTable.effectiveGrossWeight(),
            loadTable.effectiveTotalVolumeInLoad(),
            TMSRateRoute::calcMiscCharges(loadTable.LoadId, TMSMiscCharges::Load),
            element.getDlvTerms(transferTable),
            loadTable.loadArrivalDate(),
            loadTable.loadSchedShipDate(),
            loadTable.tmsDisplayEquipmentCode());

        this.setCarrierFields(loadTable.CarrierCode, loadTable.TransportationTemplateId, loadTable.CarrierServiceCode, loadTable.CarrierGroupCode, loadTable.ModeCode);

        this.setAccountFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    void initParmDefault()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    IdentifierName lastValueElementName()
    {
        return formStr(TMSRateRouteWorkbench);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the Rate Route Workbench
    /// </summary>
    public void run()
    {
        super();

        if (runFromCaller)
        {
            tabRouteResults.activatePage();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtons</Name>
				<Source><![CDATA[
    void setButtons(boolean _active)
    {
        rateShop.enabled(_active);
        rateButton.enabled(_active);
        route.enabled(_active);
        routeRate.enabled(_active);
        scheduledRoute.enabled(_active);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromAddressFromDefault</Name>
				<Source><![CDATA[
    protected void setFromAddressFromDefault()
    {
        fromTMSAddress.parmStreet(defaultPostalAddress.Street);
        fromTMSAddress.parmCity(defaultPostalAddress.City);
        fromTMSAddress.parmState(defaultPostalAddress.State);
        fromTMSAddress.parmPostalCode(defaultPostalAddress.ZipCode);
        fromTMSAddress.parmCountryRegion(defaultPostalAddress.CountryRegionId);
        fromTMSAddress.parmCounty(defaultPostalAddress.County);
        fromTMSAddress.parmPhone(defaultPhone.Locator);
        fromTMSAddress.parmName(defaultName);
        fromTMSAddress.parmResidential(defaultResidential);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean     ret;
        int         version;

        version = conPeek(_packedClass, 1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProcessXMLToUpdateRoutes</Name>
				<Source><![CDATA[
    protected TMSProcessXML_Base createProcessXMLToUpdateRoutes(
        TMSCommunicationType    _commType,
        boolean                 _isScheduledRoute)
    {
        TMSProcessXML_Base  processXML = TMSProcessXML_Base::construct(recordType);
        TMSAddressPhone     fromAdd    = new TMSAddressPhone();
        TMSAddressPhone     toAdd      = new TMSAddressPhone();

        fromAdd.parmName(fromContact.text());
        fromAdd.parmStreet(fromStreet.text());
        fromAdd.parmCounty(fromCounty.text());
        fromAdd.parmCity(fromCity.text());
        fromAdd.parmState(fromState.text());
        fromAdd.parmPostalCode(fromZip.text());
        fromAdd.parmCountryRegion(fromCountryRegion.text());
        fromAdd.parmResidential(fromResidential.value());
        processXML.parmOriginalOriginPostalAddress(fromTMSAddress.parmPostalAddressRecId());
        processXML.parmFromAddress(fromAdd);

        toAdd.parmName(toContact.text());
        toAdd.parmStreet(toStreet.text());
        toAdd.parmCounty(toCounty.text());
        toAdd.parmCity(toCity.text());
        toAdd.parmState(toState.text());
        toAdd.parmPostalCode(toZip.text());
        toAdd.parmCountryRegion(toCountryRegion.text());
        toAdd.parmResidential(toResidential.value());
        processXML.parmOriginalDestinationPostalAddress(toAddress.parmPostalAddressRecId());
        processXML.parmToAddress(toAdd);

        processXML.parmCommunicationType(_commType);
        processXML.initCarrierFields(carrier.text(), carrierService.text(), carrierGroup.text(), mode.valueStr(), transportationTemplateId.text());
        processXML.parmInventSiteId(inventSiteId.text());
        processXML.parmInventLocationId(inventLocationId.text());
        processXML.parmLTLClass(ltlClass.valueStr());
        processXML.parmSTCC(stcc.valueStr());
        processXML.parmDlvDateTime(this.customTimeZoneToUTCDateTime(RequestedDeliveryDateTime.dateTimeValue(), RequestedDeliveryDateTime.timeZone()));
        processXML.parmShipDateTime(this.customTimeZoneToUTCDateTime(RequestedShipDateTime.dateTimeValue(), RequestedShipDateTime.timeZone()));
        processXML.initShippingDimensions(weight.realValue(), volume.realValue(), value.realValue(), equipment.text());
        processXML.parmFreightTerm(dlvTerm.text());
        processXML.parmVendAccount(vendorCode.text());
        processXML.parmCustAccount(customerCode.text());
        processXML.parmParentRecId(parentRecId);
        processXML.parmParentInventTransType(parentInventTransType);

        processXML.parmCustInvoiceAccount(custInvoiceCode.text());
        processXML.parmVendInvoiceAccount(vendInvoiceCode.text());
        processXML.parmOrderDim(dimension);

        processXML.parmScheduledRoute(_isScheduledRoute);

        if (tmsId)
        {
            processXML.parmId(tmsId);
        }
        else
        {
            this.createAddRec();
            processXML.parmRecId(refRecId);
        }

        processXML.parmRecordType(recordType);
        
        this.createdProcessXMLToUpdateRoutes(element, processXML);

        return processXML;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdProcessXMLToUpdateRoutes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event raised when the <c>processXML</c> used to update routes has been created.
    /// </summary>
    /// <param name = "_processXML">The class updating the routes.</param>
    /// <param name = "_formRun">The calling form.</param>
    delegate void createdProcessXMLToUpdateRoutes(FormRun _formRun, TMSProcessXML_Base _processXML)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateRoutes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the routes.
    /// </summary>
    /// <param name="_commType">
    /// Communication type.
    /// </param>
    /// <param name="_isScheduledRoute">
    /// Ratings for a scheduled route.
    /// </param>
    public void updateRoutes(
        TMSCommunicationType    _commType,
        boolean                 _isScheduledRoute = false)
    {
        TMSProcessXML_Base processXML = this.createProcessXMLToUpdateRoutes(_commType, _isScheduledRoute);

        element.validateAddresses();
        element.validateDates();

        try
        {
            processXML.execute();
        }
        catch
        {
            this.setButtons(true);
        }

        tmsRouteTable_DS.executeQuery();

        // Update shipping and delivery dates for scheduled routes so that they reflect the date on the route instead of load
        if (_isScheduledRoute)
        {
            rateRouteWorkbenchForm.updateScheduledRouteTable(refRecId, refTableId);
            tmsRouteTable_DS.research();
        }

        tabRouteResults.activatePage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAddresses</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the address fields are filled in appropriately
    /// </summary>
    private void validateAddresses()
    {
        if (fromCountryRegion.text()    == ''
        &&  fromZip.text()              == '')
        {
            this.setButtons(true);
            throw error("@TRX2104");
        }
        else if (toCountryRegion.text() == ''
        &&       toZip.text()           == '')
        {
            this.setButtons(true);
            throw error("@TRX2105");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the requested shipping and delivery dates are not set before
    /// the current date and time and that the delivery date time is not before the ship date time
    /// </summary>
    private void validateDates()
    {
        if (!this.validateDateTimeIsBeforeUTCNowAndUpdateControl(RequestedDeliveryDateTime, false)
            || !this.validateDateTimeIsBeforeUTCNowAndUpdateControl(RequestedShipDateTime, false))
        {
            this.setButtons(true);
            throw error("@TRX:CannotProcessDateTimesInThePast");
        }

        if (RequestedDeliveryDateTime.dateTimeValue() != utcDateTimeNull()
            && RequestedShipDateTime.dateTimeValue() != utcDateTimeNull()
            && RequestedDeliveryDateTime.dateTimeValue() < RequestedShipDateTime.dateTimeValue())
        {
            this.setButtons(true);
            throw error("@TRX:DeliveryDateTimeNotBeforeShipDateTime");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addressElementJumpRef</Name>
				<Source><![CDATA[
    public void addressElementJumpRef(LogisticsAddressElement _addressElement, RefRecId _refRecId)
    {
        Args         args = new Args();
        MenuFunction mf = new MenuFunction(menuitemDisplayStr(LogisticsAddressFormat), MenuItemType::Display);

        args.parmEnumType(enumNum(LogisticsAddressElement));
        args.parmEnum(_addressElement);
        args.lookupValue(int642str(_refRecId));
        mf.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableAddSelections</Name>
				<Source><![CDATA[
    public void enableAddSelections()
    {
        toAddSelection.enabled(ToAddressType.selection() != TMSAddressType::None);
        fromAddSelection.enabled(FromAddressType.selection() != TMSAddressType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableRouteAssignment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable 'Assign route' and 'Add to existing route' buttons
    /// </summary>
    public void enableRouteAssignment()
    {
        routeAssign.enabled(
            !loadTable.isLoadShipped()
            &&  tmsRouteTable.Action != TMSAction::Restrict
            &&  (recordType          == TMSRecordType::Load
            ||  recordType           == TMSRecordType::Purch
            ||  allowAssign          == NoYes::Yes)
            &&  (TMSRouteTable.CarrierCode != ''
            ||  TMSRouteTable.RoutePlanName != '')
            &&  this.isRouteAssignedToLoad());

        addToExistingRoute.enabled(
            !loadTable.isLoadShipped()
            &&  tmsRouteTable.RecId  != 0
            &&  tmsRouteTable.Action != TMSAction::Restrict
            &&  (recordType          == TMSRecordType::Load
            ||  recordType           == TMSRecordType::Purch
            ||  allowAssign          == NoYes::Yes)
            &&  (TMSRouteTable.CarrierCode != ''
            ||  TMSRouteTable.RoutePlanName != ''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRouteAssignedToLoad</Name>
				<Source><![CDATA[
    private boolean isRouteAssignedToLoad()
    {
        boolean ret = false;

        if ((select firstOnly RecId from tmsRouteSegmentLoad where tmsRouteSegmentLoad.Id == loadTable.loadId).RecId == 0)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets account fields.
    /// </summary>
    protected void setAccountFields()
    {
        if (purchTable.RecId != 0)
        {
            vendorCode.text(purchTable.OrderAccount);
            vendInvoiceCode.text(purchTable.InvoiceAccount);
            customerCode.text('');
            custInvoiceCode.text('');

            dimension = purchTable.DefaultDimension;
        }

        if (salesTable.RecId != 0)
        {
            customerCode.text(salesTable.CustAccount);
            custInvoiceCode.text(salesTable.InvoiceAccount);
            vendorCode.text('');
            vendInvoiceCode.text('');

            dimension = salesTable.DefaultDimension;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCarrierFields</Name>
				<Source><![CDATA[
    protected void setCarrierFields(
        TMSCarrierCode              _carrierCode,
        TMSTransportationTemplateId _transportationTemplateId,
        TMSCarrierServiceCode       _carrierServiceCode,
        TMSCarrierGroupCode         _carrierGroupCode,
        TMSModeCode                 _modeCode)
    {
        carrier.text(_carrierCode);
        transportationTemplateId.text(_transportationTemplateId);
        carrierService.text(_carrierServiceCode);
        carrierGroup.text(_carrierGroupCode);
        mode.text(_modeCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDateTimeControlToUtcDateTime</Name>
				<Source><![CDATA[
    private void initializeDateTimeControlToUtcDateTime(FormDateTimeControl _control, utcdatetime _utcDateTime)
    {
        utcdatetime dateTimeAdjustedToUsersTimeZone = this.utcToCustomTimeZoneDateTime(_utcDateTime, _control.timeZone());
        _control.dateTimeValue(dateTimeAdjustedToUsersTimeZone);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDateTimeControlToEndOfDay</Name>
				<Source><![CDATA[
    private void initializeDateTimeControlToEndOfDay(FormDateTimeControl _control, date _date)
    {
        if (_date != datenull())
        {
            InventSite site = InventSite::find(inventSiteId.valueStr());

            if (site)
            {
                utcdatetime endOfDayAtSitesTimeZoneInUtc = DateTimeUtil::newDateTime(_date, timeMax(), site.Timezone);
                this.initializeDateTimeControlToUtcDateTime(_control, endOfDayAtSitesTimeZoneInUtc);
            }
            else
            {
                utcdatetime endOfDayAtUsersTimeZoneInUtc = DateTimeUtil::newDateTime(_date, timeMax(), _control.timeZone());
                this.initializeDateTimeControlToUtcDateTime(_control, endOfDayAtUsersTimeZoneInUtc);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataFields</Name>
				<Source><![CDATA[
    protected void setDataFields(
        Weight                      _weight,
        Volume                      _volume,
        Amount                      _value,
        DlvTermId                   _dlvTerm,
        date                        _dlvDate,
        date                        _shipDate,
        TMSEquipmentCode            _equipment)
    {
        weight.realValue(_weight);
        volume.realValue(_volume);
        value.realValue(_value);
        dlvTerm.text(_dlvTerm);
        equipment.text(_equipment);
                
        this.initializeDateTimeControlToEndOfDay(RequestedDeliveryDateTime, _dlvDate);
        this.initializeDateTimeControlToEndOfDay(RequestedShipDateTime, _shipDate);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataFieldsUsingDateTime</Name>
				<Source><![CDATA[
    protected void setDataFieldsUsingDateTime(
        Weight                      _weight,
        Volume                      _volume,
        Amount                      _value,
        DlvTermId                   _dlvTerm,
        utcdatetime                 _dlvDateTime,
        utcdatetime                 _shipDateTime,
        TMSEquipmentCode            _equipment)
    {
        weight.realValue(_weight);
        volume.realValue(_volume);
        value.realValue(_value);
        dlvTerm.text(_dlvTerm);
        equipment.text(_equipment);
                
        RequestedDeliveryDateTime.dateTimeValue(_dlvDateTime);
        RequestedShipDateTime.dateTimeValue(_shipDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFromFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets from address fields.
    /// </summary>
    /// <param name="_fromType">
    ///     Type of address.
    /// </param>
    /// <param name="_fromAddSelection">
    ///     Name of address.
    /// </param>
    public void setFromFields(
        TMSAddressType             _fromType,
        str                        _fromAddSelection)
    {
        FromCity.text(fromTMSAddress.parmCity());
        FromStreet.text(fromTMSAddress.parmStreet());
        FromCounty.text(fromTMSAddress.parmCounty());
        FromState.text(fromTMSAddress.parmState());
        FromZip.text(fromTMSAddress.parmPostalCode());
        FromCountryRegion.text(fromTMSAddress.parmCountryRegion());
        FromResidential.value(fromTMSAddress.parmResidential());

        FromContact.text(fromTMSAddress.parmName());

        FromAddSelection.text(_fromAddSelection);

        FromAddressType.selection(_fromType);
        this.enableAddSelections();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setToFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets to address fields.
    /// </summary>
    /// <param name="_toType">
    ///     Type of address.
    /// </param>
    /// <param name="_toAddSelection">
    ///     Name of address.
    /// </param>
    public void setToFields(
        TMSAddressType             _toType,
        str                        _toAddSelection)
    {
        ToCity.text(toAddress.parmCity());
        ToStreet.text(toAddress.parmStreet());
        ToCounty.text(toAddress.parmCounty());
        ToState.text(toAddress.parmState());
        ToZip.text(toAddress.parmPostalCode());
        ToCountryRegion.text(toAddress.parmCountryRegion());
        ToResidential.value(toAddress.parmResidential());
        ToContact.text(toAddress.parmName());

        ToAddSelection.text(_toAddSelection);

        ToAddressType.selection(_toType);
        this.enableAddSelections();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseFields</Name>
				<Source><![CDATA[
    public void setWarehouseFields(
        InventLocationId _inventLocationId,
        InventSiteId     _inventSiteId)
    {
        inventLocationId.text(_inventLocationId);
        inventSiteId.text(_inventSiteId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>utcToCustomTimeZoneDateTime</Name>
				<Source><![CDATA[
    private utcdatetime utcToCustomTimeZoneDateTime(utcdatetime _dateTime, Timezone _customTimeZone)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::applyTimeZoneOffset(dateTime, _customTimeZone);

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customTimeZoneToUTCDateTime</Name>
				<Source><![CDATA[
    private utcdatetime customTimeZoneToUTCDateTime(utcdatetime _dateTime, Timezone _customTimeZone)
    {
        utcdatetime dateTime = _dateTime;

        dateTime = DateTimeUtil::removeTimeZoneOffset(dateTime, _customTimeZone);

        return dateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupZipCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs ZIP code lookup.
    /// </summary>
    private void lookupZipCode(FormStringControl _formControl)
    {
        Args            args = new Args();
        Object          formRun;

        args.name(formStr(LogisticsAddressZipCodeLookup));
        args.caller(element);
        args.record(logisticsPostalAddress);

        formRun = ClassFactory::formRunClassOnClient(args);
        formRun.init();

        _formControl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TMSRouteSegmentTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (hideErrors.checked())
            {
                qbrSegErr.value(enum2str(NoYes::No));
            }
            else
            {
                qbrSegErr.value("");
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            qbrSegErr = this.query().dataSourceTable(tableNum(TMSRouteSegmentTable)).addRange(fieldNum(TMSRouteSegmentTable, HasErrors));
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayUsedWeight</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the calculated weight used.
        /// </summary>
        /// <returns>
        /// The used weight on the segment.
        /// </returns>
        [SysClientCacheDataMethod]
        display TMSWeight displayUsedWeight()
        {
            return TMSCarrierHelper::calculateWeightForCarrierService(
                Weight.realValue(),
                Volume.realValue(),
                tmsRouteSegmentTable.CarrierServiceCode,
                tmsRouteSegmentTable.CarrierCode,
                InventSiteId.valueStr(),
                InventLocationId.valueStr(),
                RequestedShipDateTime.dateTimeValue());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TMSRouteTable</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.enableRouteAssignment();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            qbrRouteTable.value(strFmt('=%1', refTableId));
            qbrRouteRec.value(strFmt('=%1', refRecId));

            if (hideErrors.checked())
            {
                qbrRouteErr.value(enum2str(NoYes::No));
            }
            else
            {
                qbrRouteErr.value("");
            }

            displayRecordCountValue = ''; // reset value for display method

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource tmsRouteDS;

            super();

            tmsRouteDS = this.query().dataSourceTable(tableNum(TMSRouteTable));
            tmsRouteDS.clearDynalinks();
            tmsRouteDS.addRange(fieldNum(TMSRouteTable, CreatedBy)).value(queryValue(curUserId()));

            qbrRouteTable = tmsRouteDS.addRange(fieldNum(TMSRouteTable, RefTableId));
            qbrRouteTable.status(RangeStatus::Hidden);

            qbrRouteRec = tmsRouteDS.addRange(fieldNum(TMSRouteTable, RefRecId));
            qbrRouteRec.status(RangeStatus::Hidden);

            qbrRouteErr = tmsRouteDS.addRange(fieldNum(TMSRouteTable, HasErrors));

            tmsRouteDS.addOrderByField(fieldNum(TMSRouteTable, TotalRate));

            this.cacheAddMethod(tableMethodStr(TMSRouteTable, displayTotalMiles));
            this.cacheAddMethod(tableMethodStr(TMSRouteTable, displayNumberOfSegments));
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayGoal</Name>
						<Source><![CDATA[
        [SysClientCacheDataMethodAttribute(false)]
        display container displayGoal(TMSRouteTable _record)
        {
            TMSParameters tmsParameters = TMSParameters::find();
            if (tmsParameters.SustainabilityEngineEnabled)
            {
                TMSRouteTable routeTable;
                select minof(CarbonEmission) from routeTable
                    where routeTable.CarbonEmission > 0
                       && routeTable.RefRecId == element.refRecId
                       && routeTable.RefTableId == element.refTableId;
                if (_record.CarbonEmission == routeTable.CarbonEmission && _record.CarbonEmission != 0)
                {
                    return imageContainerGoalGreen;
                }
            }

            return [''];
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setButtons(false);
            element.updateRoutes(TMSCommunicationType::Rate);
            element.setButtons(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RateShop</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setButtons(false);
            element.updateRoutes(TMSCommunicationType::RateShop);
            element.setButtons(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Route</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setButtons(false);
            element.updateRoutes(TMSCommunicationType::Route);
            element.setButtons(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RouteRate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.setButtons(false);
            element.updateRoutes(TMSCommunicationType::RateRoute);
            element.setButtons(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ScheduledRoute</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.setButtons(false);
            element.updateRoutes(TMSCommunicationType::RateRoute, true);
            element.setButtons(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            defaultPostalAddress.Street             = fromTMSAddress.parmStreet();
            defaultPostalAddress.City               = fromTMSAddress.parmCity();
            defaultPostalAddress.State              = fromTMSAddress.parmState();
            defaultPostalAddress.ZipCode            = fromTMSAddress.parmPostalCode();
            defaultPostalAddress.CountryRegionId    = fromTMSAddress.parmCountryRegion();
            defaultPostalAddress.County             = fromTMSAddress.parmCounty();
            defaultPhone.Locator                    = fromTMSAddress.parmPhone();
            defaultName                             = fromTMSAddress.parmName();
            defaultResidential                      = fromTMSAddress.parmResidential();

            xSysLastValue::saveLast(element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromAddressType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            boolean ret;

            ret = super();

            fromAddSelection.text('');
            element.enableAddSelections();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>fromAddSelection</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressJumpRef(FromAddressType.selection(), this.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TMSAddressType      tmsAddressType;

            if (FromAddressType.selection() == TMSAddressType::Warehouse)
            {
                TMSRouteTable::lookupWarehouseAddress(this);
            }
            else
            {
                TMSRouteTable::lookupAddress(this, str2enum(tmsAddressType, FromAddressType.valueStr()));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;
            InventLocation  warehouse;
            VendTable       vendTable;

            ret = super();

            switch (FromAddressType.selection())
            {
                case TMSAddressType::Customer:
                    fromTMSAddress = TMSAddressPhone::initFromCustAccount(CustTable::find(fromAddSelection.valueStr()).AccountNum);
                    break;

                case TMSAddressType::Vendor:
                    vendTable = VendTable::find(fromAddSelection.valueStr());
                    fromTMSAddress = TMSAddressPhone::initFromVendAccount(vendTable.AccountNum);
                    break;

                case TMSAddressType::Hub:
                    fromTMSAddress = TMSHubMaster::find(fromAddSelection.valueStr()).addressPhone();
                    break;

                case TMSAddressType::Warehouse:
                    // Try to get the warehouse first in case the user didn't use the lookup, but typed in the warehouse.
                    warehouse = InventLocation::find(fromAddSelection.valueStr());

                    RecId logisticsRecId;
                    
                    if (!warehouse)
                    {
                        logisticsRecId  = str2Int64(fromAddSelection.valueStr());
                        warehouse       = InventLocation::findByLogisticsPostalAddressRecId(logisticsRecId);
                    }

                    fromTMSAddress = TMSAddressPhone::initFromInventLocation(warehouse, false, logisticsRecId);
                    fromTMSAddress.parmName(strFmt("@SYS76785", warehouse.InventLocationId, warehouse.Name));

                    fromAddSelection.text(warehouse.InventLocationId);
                    break;
            }

            element.setFromFields(FromAddressType.selection(), FromAddSelection.text());
            element.setWarehouseFields(warehouse.InventLocationId, warehouse.InventSiteId);

            VendorCode.text(vendTable.AccountNum);
            VendInvoiceCode.text(vendTable.InvoiceAccount);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromResidential</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmResidential(this.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromContact</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmName(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromStreet</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmStreet(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromCity</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmCity(this.text());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::City, LogisticsAddressCity::findCityCountryRegion(fromCity.text(), fromCountryRegion.text()).RecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromCounty</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmCounty(this.text());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::County, LogisticsAddressCounty::find(fromCountryRegion.text(), fromState.text(), fromCounty.text()).RecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromState</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::State, LogisticsAddressState::find(fromCountryRegion.text(), fromState.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            fromTMSAddress.parmState(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromZip</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::ZipCode, LogisticsAddressZipCode::find(fromZip.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                         ret;
            LogisticsAddressZipCode logisticsAddressZipCode;

            ret = super();

            fromTMSAddress.parmPostalCode(this.text());
            
            if (logisticsPostalAddress.CountryRegionId || logisticsPostalAddress.City)
            {
                logisticsAddressZipCode = LogisticsAddressZipCode::findZipCodeByCountryRegionCity(this.text(),
                                                                                                  logisticsPostalAddress.CountryRegionId,
                                                                                                  logisticsPostalAddress.City);
            }
            else
            {
                logisticsAddressZipCode = LogisticsAddressZipCode::find(this.text());
            }
            
            fromCountryRegion.text(logisticsAddressZipCode.CountryRegionId);
            fromTMSAddress.parmCountryRegion(fromCountryRegion.text());

            fromState.text(logisticsAddressZipCode.State);
            fromTMSAddress.parmState(fromState.text());

            fromCity.text(logisticsAddressZipCode.City);
            fromTMSAddress.parmCity(fromCity.text());

            fromCounty.text(logisticsAddressZipCode.County);
            fromTMSAddress.parmCounty(fromCounty.text());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            logisticsPostalAddress.clear();
            logisticsPostalAddress.CountryRegionId = fromCountryRegion.text();
            element.lookupZipCode(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromCountryRegion</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                                 ret;

            ret = super();

            fromTMSAddress.parmCountryRegion(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToAddressType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            boolean ret;

            ret = super();

            toAddSelection.text('');
            element.enableAddSelections();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToAddSelection</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressJumpRef(ToAddressType.selection(), this.valueStr());
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TMSAddressType      tmsAddressType;

            if (ToAddressType.selection() == TMSAddressType::Warehouse)
            {
                TMSRouteTable::lookupWarehouseAddress(this);
            }
            else
            {
                TMSRouteTable::lookupAddress(this, str2enum(tmsAddressType, toAddressType.valueStr()));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;
            InventLocation  warehouse;
            CustTable       custTable;

            ret = super();

            switch (toAddressType.selection())
            {
                case TMSAddressType::Customer:
                    custTable = CustTable::find(toAddSelection.valueStr());
                    toAddress = TMSAddressPhone::initFromCustAccount(custTable.AccountNum);
                    break;

                case TMSAddressType::Vendor:
                    toAddress = TMSAddressPhone::initFromVendAccount(VendTable::find(toAddSelection.valueStr()).AccountNum);
                    break;

                case TMSAddressType::Hub:
                    toAddress = TMSHubMaster::find(toAddSelection.valueStr()).addressPhone();
                    break;

                case TMSAddressType::Warehouse:
                    // Try to get the warehouse first in case the user didn't use the lookup, but typed in the warehouse.
                    warehouse = InventLocation::find(toAddSelection.valueStr());

                    RecId logisticsRecId;
                    
                    if (!warehouse)
                    {
                        logisticsRecId = str2Int64(toAddSelection.valueStr());
                        warehouse = InventLocation::findByLogisticsPostalAddressRecId(logisticsRecId);
                    }

                    toAddress = TMSAddressPhone::initFromInventLocation(warehouse, false, logisticsRecId);
                    toAddress.parmName(strFmt("@SYS76785", warehouse.InventLocationId, warehouse.Name));

                    toAddSelection.text(warehouse.InventLocationId);
                    break;
            }

            element.setToFields(toAddressType.selection(), toAddSelection.text());

            customerCode.text(custTable.AccountNum);
            custInvoiceCode.text(custTable.InvoiceAccount);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToResidential</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmResidential(toResidential.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToContact</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmName(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToStreet</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmStreet(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToCity</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::City, LogisticsAddressCity::findCityCountryRegion(toCity.text(), toCountryRegion.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmCity(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToCounty</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::County, LogisticsAddressCounty::find(toCountryRegion.text(), toState.text(), toCounty.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmCounty(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToState</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::State, LogisticsAddressState::find(toCountryRegion.text(), toState.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmState(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToZip</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.addressElementJumpRef(LogisticsAddressElement::ZipCode, LogisticsAddressZipCode::find(toZip.text()).RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            LogisticsAddressZipCode logisticsAddressZipCode;

            ret = super();

            toAddress.parmPostalCode(this.text());

            if (logisticsPostalAddress.CountryRegionId || logisticsPostalAddress.City)
            {
                logisticsAddressZipCode = LogisticsAddressZipCode::findZipCodeByCountryRegionCity(this.text(),
                                                                                                  logisticsPostalAddress.CountryRegionId,
                                                                                                  logisticsPostalAddress.City);
            }
            else
            {
                logisticsAddressZipCode = LogisticsAddressZipCode::find(this.text());
            }
            
            toCountryRegion.text(logisticsAddressZipCode.CountryRegionId);
            toAddress.parmCountryRegion(toCountryRegion.text());

            toState.text(logisticsAddressZipCode.State);
            toAddress.parmState(toState.text());

            toCity.text(logisticsAddressZipCode.City);
            toAddress.parmCity(toCity.text());

            toCounty.text(logisticsAddressZipCode.County);
            toAddress.parmCounty(toCity.text());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            logisticsPostalAddress.clear();
            logisticsPostalAddress.CountryRegionId = toCountryRegion.text();
            element.lookupZipCode(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToCountryRegion</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            toAddress.parmCountryRegion(this.text());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestedShipDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            element.validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo(RequestedShipDateTime,
                                                                           true,
                                                                           "@TRX:RequestedShipDateTimeSetToCurrentDateTime");
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestedDeliveryDateTime</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            element.validateDateTimeIsBeforeUTCNowAndUpdateControlWithInfo(RequestedDeliveryDateTime,
                                                                           true,
                                                                           "@TRX:RequestedDlvDateTimeSetToCurrentDateTime");
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransportationTemplateId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args args = new Args();

            args.caller(this);
            args.lookupRecord(TMSTransportationTemplate::find(TransportationTemplateId.text()));
            new MenuFunction(menuitemDisplayStr(TMSTransportationTemplate), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TMSTransportationTemplate::lookupTransportationTemplate(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            rateRouteWorkbenchForm.parmInventSiteId(this.valueStr());

            inventLocationId.text(rateRouteWorkbenchForm.clearInvalidInventLocationIdFilter());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventLocationId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean         ret;

            ret = super();

            rateRouteWorkbenchForm.parmInventLocationId(this.valueStr());

            if (rateRouteWorkbenchForm.validateInventLocationId())
            {
                if (!inventSiteId.valueStr())
                {
                    inventSiteId.text(InventLocation::find(this.valueStr()).InventSiteId);
                }
            }
            else
            {
                rateRouteWorkbenchForm.parmInventLocationId(this.text(''));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CarrierService</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            TMSCarrierService::lookupCarrierServiceCode(this, carrier.text());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddToExistingRoute</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            rateRouteWorkbenchForm.openRouteToLoadOutbound(loadTable, tmsRouteTable.RecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RouteAssign</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Common  common;

            switch (recordType)
            {
                case TMSRecordType::Load:
                    common = loadTable;
                    break;

                case TMSRecordType::Sales:
                    common = salesTable;
                    break;
            }

            rateRouteWorkbenchForm.assignRoute(tmsRouteTable, recordType, common);

            element.args().record().reread();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HideErrors</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            showExceptions = !hideErrors.value();
            tmsRouteTable_ds.executeQuery();
            tmsRouteSegmentTable_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SegmentViewDetails</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Pass the Hide Exceptions value to the menu item as well.
        /// </summary>
        public void clicked()
        {
            Args args = new Args();

            args.record(TMSRouteSegmentTable);
            args.parmEnumType(enumNum(NoYes));
            args.parmEnum(HideErrors.checked() ? NoYes::Yes : NoYes::No);
            args.caller(this);

            new MenuFunction(menuItemDisplayStr(TMSRateRouteWorkbenchSegmentDetails), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TMSRouteTable_CarrierServiceCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args args = new Args();

            args.record(TMSCarrierService::find(tmsRouteSegmentTable.CarrierServiceCode, tmsRouteSegmentTable.CarrierCode));

            args.caller(this);

            new MenuFunction(menuItemDisplayStr(TMSCarrier), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TMSRouteSegmentTable</Name>
			<Table>TMSRouteSegmentTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Action</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarbonEmission</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarbonEmissionUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierServiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryUTCDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCountryRegionISOCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCounty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationHubCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationResidential</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationResponsibleForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationVendorCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationVendorInvoiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightTermCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasErrors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Miles</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalDestinationPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalOriginPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginCity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginCountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginCountryRegionISOCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginCounty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginHubCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginPostalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginResidential</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginResponsibleForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginVendorCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginVendorInvoiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResponsibleForPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Sequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipperRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipUTCDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TMSRouteSegmentConfig</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransitTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorInvoiceCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TMSRouteTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>RouteIdSequence</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TMSRouteTable</Name>
			<Table>TMSRouteTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Action</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarbonEmission</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarbonEmissionUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierServiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryUTCDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasErrors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsScheduledRoute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteConfigCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteGuideName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RoutePlanName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipperRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipUTCDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TMSSegmentLine</Name>
			<Table>TMSRateRouteLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HarmonizedCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LTLClassCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>STCCCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Volume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TMSRouteSegmentTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TMSChargeOverrideTable</Name>
			<Table>TMSChargeOverrideTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CarrierCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CarrierServiceCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TMSRouteTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@TRX518</Caption>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPaneHeader</Name>
				<ElementPosition>268435455</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@TRX609</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<ShowShortCut>No</ShowShortCut>
								<Text>@TRX509</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RateShop</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@TRX610</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<ShowShortCut>No</ShowShortCut>
								<Text>@TRX510</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Route</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@TRX611</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<ShowShortCut>No</ShowShortCut>
								<Text>@TRX519</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RouteRate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@TRX612</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<ShowShortCut>No</ShowShortCut>
								<Text>@TRX531</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ScheduledRoute</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@TRX:BtnCaptionScheduledRoute</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CriteriaTabPage</Name>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FromAddress</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AddressButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>DefaultButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@TRX608</HelpText>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<ShowShortCut>No</ShowShortCut>
												<Style>Standard</Style>
												<Text>@TRX2350</Text>
											</AxFormControl>
										</Controls>
										<Style>DialogCommitContainer</Style>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Criteria</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RateFrom</Name>
										<ElementPosition>769514972</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FromAddressType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>TMSAddressType</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>fromAddSelection</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>644245092</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCompanyName</ExtendedDataType>
												<Label>@SYS112132</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>FromResidential</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Left>0</Left>
												<LeftMode>RightEdge</LeftMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@TRX1069</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromContact</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993456</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSContact</ExtendedDataType>
												<Label>@SYS80991</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromStreet</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSAddress</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromCity</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1216907396</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCity</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromCounty</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1360072972</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>LogisticsAddressCountyId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromState</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ChangeCase>UpperCase</ChangeCase>
												<ExtendedDataType>AddressStateId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromZip</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>AddressZipCodeId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FromCountryRegion</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1932735279</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ChangeCase>UpperCase</ChangeCase>
												<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS4083</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RateTo</Name>
										<ElementPosition>1154272458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>ToAddressType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>429496728</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>TMSAddressType</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToAddSelection</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>644245092</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCompanyName</ExtendedDataType>
												<Label>@SYS112132</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ToResidential</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Left>0</Left>
												<LeftMode>RightEdge</LeftMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@TRX1069</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToContact</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>816043783</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSContact</ExtendedDataType>
												<Label>@SYS80991</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToStreet</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>987842474</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSAddress</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToCity</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1159641165</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCity</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToCounty</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1331439856</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>LogisticsAddressCountyId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToState</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ChangeCase>UpperCase</ChangeCase>
												<ExtendedDataType>AddressStateId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToZip</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>AddressZipCodeId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ToCountryRegion</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1932735279</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ChangeCase>UpperCase</ChangeCase>
												<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS53942</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RateData</Name>
										<ElementPosition>1539029946</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Weight</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>298261616</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSWeight</ExtendedDataType>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Volume</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>447392424</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSVolumeHigh</ExtendedDataType>
												<Label>@TRX377</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Value</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>596523233</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>LineAmount</ExtendedDataType>
												<Label>@TRX93</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LTLClass</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>656175556</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WHSLTLClassCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>DlvTerm</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1376974461</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>DlvTermId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>STCC</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1521134245</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WHSSTCCCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Equipment</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1677721595</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSEquipmentCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateTimeControl">
												<Name>RequestedShipDateTime</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@TRX:RateRouteWorkBenchRequestedShipDateTimeHelpText</HelpText>
												<Type>DateTime</Type>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSRequestedShipUTCDateTime</ExtendedDataType>
												<TimezonePreference>User</TimezonePreference>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateTimeControl">
												<Name>RequestedDeliveryDateTime</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@TRX:RateRouteWorkBenchRequestedDeliveryDateTimeHelpText</HelpText>
												<Type>DateTime</Type>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSRequestedDeliveryUTCDateTime</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransportationTemplateId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2069189970</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSTransportationTemplateId</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS55057</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GeneralWarehouse</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventSiteId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>InventSiteId</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventLocationId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>InventLocationId</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS6437</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GeneralAccounts</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CustomerCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCustomerCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CustInvoiceCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCustomerInvoiceCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendorCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSVendorCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendInvoiceCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSVendorInvoiceCode</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS11800</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RateShopData</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Carrier</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>800335337</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCarrierCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CarrierService</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>944495118</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCarrierServiceCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CarrierGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1088654899</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCarrierGroupCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Mode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1232814680</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSModeCode</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@TRX:RateAndRateShopFilters</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS8815</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabRouteResults</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup2</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AddToExistingRoute</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<Enabled>No</Enabled>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@TRX1210</HelpText>
														<NeededPermission>Delete</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@TRX1209</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>RouteAssign</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@TRX616</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@TRX532</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ViewExceptions</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TMSRouteSegmentTable</DataSource>
														<MenuItemName>TMSRateRouteWorkbenchExceptionDetails</MenuItemName>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>TMSRouteTable</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ResultParameters</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>HideErrors</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@TRX600</Label>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RouteGrid</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_RouteId</Name>
										<ElementPosition>238609294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RouteId</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_Name</Name>
										<ElementPosition>357913941</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RouteGuideName</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_RoutePlanName</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RoutePlanName</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRateTable_CarrierCode</Name>
										<ElementPosition>596523235</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierCode</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRateTable_CarrierServiceCode</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierServiceCode</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRateTable_ModeCode</Name>
										<ElementPosition>835132529</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ModeCode</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_TotalRate1</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalRate</DataField>
										<DataSource>TMSRouteTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_CustomerRate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomerRate</DataField>
										<DataSource>TMSRouteTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_ShipperRate</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ShipperRate</DataField>
										<DataSource>TMSRouteTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_CurrencyCode</Name>
										<ElementPosition>1312351117</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Miles</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTotalMiles</DataMethod>
										<DataSource>TMSRouteTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TMSRouteTable_ShipUTCDateTime</Name>
										<ElementPosition>1550960411</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ShipUTCDateTime</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TMSRouteTable_DeliveryUTCDateTime</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DeliveryUTCDateTime</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>RouteSegments</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayNumberOfSegments</DataMethod>
										<DataSource>TMSRouteTable</DataSource>
										<Label>@TRX560</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_TransitTime</Name>
										<ElementPosition>1491308087</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>transitTime</DataMethod>
										<DataSource>TMSRouteTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TMSRouteTable_Exceptions</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>hasErrors</DataField>
										<DataSource>TMSRouteTable</DataSource>
										<Label>@SYS89643</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>TMSRouteTable_ContraintImage</Name>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>constraintImage</DataMethod>
										<DataSource>TMSRouteTable</DataSource>
										<Label>@TRX450</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_CarbonEmission</Name>
										<FilterDataSource>TMSRouteTable</FilterDataSource>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarbonEmission</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_CarbonEmissionUnit</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarbonEmissionUnit</DataField>
										<DataSource>TMSRouteTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>SustainabilityGreenHouseCheck</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayGoal</DataMethod>
										<DataSource>TMSRouteTable</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<DataSource>TMSRouteTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FooterGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RecordCount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayRecordCount</DataMethod>
										<DisplayLength>100</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@TRX538</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Override</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverrideChargesActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>OverrideChargesActionPaneTab</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>OverrideChargesButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>OverrideChargesViewDetails</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TMSChargeOverrideTable</DataSource>
														<MenuItemName>TMSRateRouteWorkbenchOverrideChargeDetails</MenuItemName>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSChargeOverrideTable_CarrierCode</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierCode</DataField>
										<DataSource>TMSChargeOverrideTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSChargeOverrideTable_CarrierServiceCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierServiceCode</DataField>
										<DataSource>TMSChargeOverrideTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSChargeOverrideTable_TotalRate</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalRate</DataField>
										<DataSource>TMSChargeOverrideTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSChargeOverrideTable_CurrencyCode</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>TMSChargeOverrideTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TMSChargeOverrideTable</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@TRX1327</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Segment</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>SegmentActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>SegmentActionPaneTab</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>SegmentButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>SegmentViewDetails</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>TMSRouteSegmentTable</DataSource>
														<MenuItemName>TMSRateRouteWorkbenchSegmentDetails</MenuItemName>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SegmentGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_OriginName</Name>
										<ElementPosition>214748364</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginName</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_OriginPostalCode</Name>
										<ElementPosition>322122546</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginPostalCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_DestinationName</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DestinationName</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_DestinationPostalCode</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DestinationPostalCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_CarrierCode</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_CarrierServiceCode</Name>
										<ElementPosition>751619274</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarrierServiceCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteTable_ModeCode</Name>
										<ElementPosition>966367638</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ModeCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_UsedWeight</Name>
										<ElementPosition>1181116002</ElementPosition>
										<FilterDataSource>TMSRouteSegmentTable</FilterDataSource>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayUsedWeight</DataMethod>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<Label>@TRX:UsedWeight</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteSegmentTable_FreightTermCode</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FreightTermCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_Miles</Name>
										<ElementPosition>1181116002</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Miles</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_TransitTime</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransitTime</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteTable_TotalRate</Name>
										<ElementPosition>1395864366</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalRate</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<Label>@TRX619</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_CustomerRate</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomerRate</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_ShipperRate</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ShipperRate</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteSegmentTable_CurrencyCode</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TMSRouteSegmentTable_HasAccessorial</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>hasRateDetails</DataMethod>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<Label>@TRX412</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TMSRouteSegmentTable_HasErrors</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>hasErrors</DataMethod>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<Label>@SYS89643</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>TMSRouteSegmentTable_ContraintImage</Name>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>constraintImage</DataMethod>
										<DataSource>TMSRouteSegmentTable</DataSource>
										<Label>@TRX450</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSRouteSegmentTable_CarbonEmission</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarbonEmission</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSRouteSegmentTable_CarbonEmissionUnit</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CarbonEmissionUnit</DataField>
										<DataSource>TMSRouteSegmentTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TMSRouteSegmentTable</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@TRX560</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabSegmentLines</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>SegmentLineActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>SegmentLinesActionPaneTab</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>SegmentLinesButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SegmentLineGrid</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSSegmentLine_ItemId</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSSegmentLine_Weight</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Weight</DataField>
										<DataSource>TMSSegmentLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TMSSegmentLine_Volume</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Volume</DataField>
										<DataSource>TMSSegmentLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSSegmentLine_LTLClassCode</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LTLClassCode</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSSegmentLine_HarmonizedCode</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>HarmonizedCode</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TMSSegmentLine_STCCCode</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>STCCCode</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TMSSegmentLine</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SegmentLinesFooterGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>TMSSegmentLine_RefTableId</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>RefTableId</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>TMSSegmentLine_RefRecId</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>RefRecId</DataField>
										<DataSource>TMSSegmentLine</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@TRX671</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>