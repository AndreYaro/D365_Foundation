<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustOpenInvoicesLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class CustOpenInvoicesLookup extends FormRun
    {
        private AccountNum accountNum;
        private FormRun callerForm;
        private LedgerJournalTrans callerLedgerJournalTrans;

        private boolean interCompanyAccountEnabled;
        private CompanyId accountNumCompany;
        private DirPartyRecId accountNumParty;
        private str searchString;
        private boolean useCurrentCompanyTab;
        private Map tab2ComboBoxItemMap;
        private boolean filterLookupAccount = false;
        private boolean filterLookupInvoice = false;

}
]]></Source>
			</Method>
			<Method>
				<Name>accountNumCompany</Name>
				<Source><![CDATA[
    CompanyId accountNumCompany()
    {
        return accountNumCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyRanges</Name>
				<Source><![CDATA[
    private void applyRanges()
    {
        const str WildCardChar = '*';

        custOpenInvoices_ds.company(accountNumCompany);

        if (searchString != '')
        {
            // Adding the  wild card character if it isn't present
            if (subStr(searchString, strLen(searchString), 1) != WildCardChar)
            {
                searchString = searchString + WildCardChar;
            }
        }

        Query custOpenInvoicesDSQuery = custOpenInvoices_ds.query();
        QueryBuildDataSource custOpenInvoicesDSQueryBuildDataSource = custOpenInvoicesDSQuery.dataSourceTable(tableNum(CustOpenInvoices));

        Query custOpenInvoiceMCDSQuery = custOpenInvoicesMC_ds.query();
        QueryBuildDataSource custOpenInvoiceMCDSQueryBuildDataSource = custOpenInvoiceMCDSQuery.dataSourceTable(tableNum(CustOpenInvoices));

        if (filterLookupAccount == true)
        {
            custOpenInvoicesDSQueryBuildDataSource.addRange(fieldNum(CustOpenInvoices, Party)).value(queryValue(accountNumParty));

            if (interCompanyAccountEnabled)
            {
                custOpenInvoiceMCDSQueryBuildDataSource.addRange(fieldNum(CustOpenInvoices, Party)).value(queryValue(accountNumParty));
            }
        }

        if (filterLookupInvoice == true)
        {
            if (interCompanyAccountEnabled)
            {
                custOpenInvoiceMCDSQueryBuildDataSource.addRange(fieldNum(CustOpenInvoices, Invoice)).value(searchString);
            }
            else
            {
                custOpenInvoicesDSQueryBuildDataSource.addRange(fieldNum(CustOpenInvoices, Invoice)).value(searchString);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    public void closeSelect(str _selectString)
    {
        BankLCLineRefRecId bankLCLineRefRecId;

        super(_selectString);

        if (callerForm && callerForm.dataSource())
        {
            if (CustOpenInvoices.AmountCur > 0)
            {
                if (useCurrentCompanyTab)
                {
                    callerLedgerJournalTrans.MarkedInvoice          = custOpenInvoices.Invoice;
                    callerLedgerJournalTrans.MarkedInvoiceRecId     = custOpenInvoices.OpenRecId;
                    callerLedgerJournalTrans.MarkedInvoiceCompany   = custOpenInvoices.InvoiceCompany;

                    if (BankLCExportFeatureChecker::checkBankLCExportEnabled())
                    {
                        bankLCLineRefRecId = CustTransOpen::find(custOpenInvoices.OpenRecId).BankLCExportLine;
                        LedgerJournalTransBankLC::syncSettlement(callerLedgerJournalTrans, bankLCLineRefRecId);
                        if (bankLCLineRefRecId)
                        {
                            callerLedgerJournalTrans.PaymMode   = '';
                            callerLedgerJournalTrans.PaymSpec   = '';
                            callerLedgerJournalTrans.Prepayment = NoYes::No;
                        }
                    }
                }
                else
                {
                    callerLedgerJournalTrans.MarkedInvoice          = custOpenInvoicesMC.Invoice;
                    callerLedgerJournalTrans.MarkedInvoiceRecId     = custOpenInvoicesMC.OpenRecId;
                    callerLedgerJournalTrans.MarkedInvoiceCompany   = custOpenInvoicesMC.InvoiceCompany;
                }
            }
            else
            {
                if (callerLedgerJournalTrans.MarkedInvoice)
                {
                    callerLedgerJournalTrans.MarkedInvoice          = '';
                    callerLedgerJournalTrans.MarkedInvoiceRecId     = 0;
                    callerLedgerJournalTrans.MarkedInvoiceCompany   = '';
                    callerLedgerJournalTrans.AmountCurCredit        = 0;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (this.args())
        {
            if (this.args().record().TableId == tableNum(LedgerJournalTrans))
            {
                //Get the caller's LedgerJournalTrans record.
                callerLedgerJournalTrans = this.args().record();
                accountNum = callerLedgerJournalTrans.parmAccount();
                accountNumCompany = callerLedgerJournalTrans.Company;
                accountNumParty = CustTable::findByCompany(accountNumCompany, accountNum).Party;
                searchString = this.args().parm();
            }

            if (element.args().caller())
            {
                //Get the caller form.
                callerForm = element.args().caller();
            }
        }

        interCompanyAccountEnabled = isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        // Set the caption for the tabcontrol
        currentCompany.caption(strFmt("@SYS116204", accountNumCompany));

        // Specify which field we want the lookup to get its value from
        element.selectMode(custOpenInvoices_Invoice);
        useCurrentCompanyTab = true;

        if (accountNum != '')
        {
            filterLookupAccount = true;
        }

        if (searchString != '')
        {
            filterLookupInvoice = true;
        }

        // Display correct tabcontrol depending on if InterCompany accounting is visible
        if (interCompanyAccountEnabled)
        {
            // If searchString is present hide CurrentCompany
            if (filterLookupInvoice)
            {
                // Hide CurrentCompany tabcontrol
                currentCompany.visible(false);
                element.selectMode(custOpenInvoicesMC_Invoice);
                useCurrentCompanyTab = false;
            }
        }
        else
        {
            // Hide AllCompanies tabcontrol
            allCompanies.visible(false);
        }

        if (filterLookupAccount || filterLookupInvoice)
        {
            this.applyRanges();
        }

        super();

        // Generate view combobox based on tabs
        tab2ComboBoxItemMap = SysLookup::tab2ComboBox(Tab, switchView);
        switchView.visible(useCurrentCompanyTab);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustOpenInvoices</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            // Single company query plans reflect company data distributions.
            if (curExt() == element.accountNumCompany())
            {
                this.query().allowCrossCompany(false);
            }
            else
            {
                this.query().allowCrossCompany(true);
                this.query().addCompanyRange(element.accountNumCompany());
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustOpenInvoicesMC</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            container sharedCompanyList;
            CompanyId company;
            int i;

            sharedCompanyList = CustVendOpenTransManager::findSharedServiceCompanies(element.accountNumCompany());

            for (i = 1; i <= conLen(sharedCompanyList); i++)
            {
                company = conPeek(sharedCompanyList, i);

                this.query().addCompanyRange(company);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>switchView</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            Tab.tabChanged(Tab.tabValue(), tab2ComboBoxItemMap.lookup(this.selection()));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);

            switch (_toTab)
            {
                case 1:
                    element.selectMode(custOpenInvoices_invoice);
                    custOpenInvoices_Invoice.setFocus();
                    useCurrentCompanyTab = true;
                    break;
                case 2:
                    element.selectMode(custOpenInvoicesMC_Invoice);
                    custOpenInvoicesMC_Invoice.setFocus();
                    custOpenInvoicesMC_ds.executeQuery();
                    useCurrentCompanyTab = false;
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustOpenInvoices</Name>
			<Table>CustOpenInvoices</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustOpenInvoicesMC</Name>
			<Table>CustOpenInvoices</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoSearch>No</AutoSearch>
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupTab</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>View</Name>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>switchView</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS8335</Label>
						<ShowLabel>No</ShowLabel>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CurrentCompany</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CurrentCompanyGrid</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoices_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoices_CustAccount</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoices_CustName</Name>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustName</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CustOpenInvoices_DueDate</Name>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustOpenInvoices_AmountCur</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>CustOpenInvoices</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustOpenInvoices_DiscAmount</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscAmount</DataField>
										<DataSource>CustOpenInvoices</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoices_CurrencyCode</Name>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrentCompanyGrid_InvoiceCompany</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCompany</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>CurrentCompanyGrid_OpenRecId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OpenRecId</DataField>
										<DataSource>CustOpenInvoices</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>AutoLookup</DataGroup>
								<DataSource>CustOpenInvoices</DataSource>
								<MultiSelect>No</MultiSelect>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS79996</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AllCompanies</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>AllCompaniesGrid</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoicesMC_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoicesMC_InvoiceCompany</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCompany</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoicesMC_CustAccount</Name>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoicesMC_CustName</Name>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustName</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CustOpenInvoicesMC_DueDate</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustOpenInvoicesMC_AmountCur</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustOpenInvoicesMC_DiscAmount</Name>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscAmount</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustOpenInvoicesMC_CurrencyCode</Name>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormInt64Control">
										<Name>AllCompaniesGrid_OpenRecId</Name>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Int64</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OpenRecId</DataField>
										<DataSource>CustOpenInvoicesMC</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>AutoLookup</DataGroup>
								<DataSource>CustOpenInvoicesMC</DataSource>
								<MultiSelect>No</MultiSelect>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS107516</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>