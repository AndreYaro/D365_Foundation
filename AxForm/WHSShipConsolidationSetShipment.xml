<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSShipConsolidationSetShipment</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSShipConsolidationSetShipment extends FormRun
{
    private FormRun                             callerForm;
    private WHSShipConsolidationSessionRecId    shipConsolidationSessionId;
    private WHSShipConsolidationEngine          shipConsolidationEngine;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the dialog from the Shipment consolidation form.
    /// </summary>
    public void init()
    {
        if (!element.args())
        {
            throw error("@SYS22539");
        }

        callerForm = element.args().caller() as FormRun;

        if (!callerForm || !formHasMethod(callerForm, formMethodStr(WHSShipConsolidationProposal, getShipConsolidationEngine)))
        {
            throw error("@SYS132237");
        }

        shipConsolidationEngine = callerForm.getShipConsolidationEngine();

        if (!shipConsolidationEngine)
        {
            throw error("@SYS132237");
        }

        shipConsolidationSessionId = shipConsolidationEngine.parmShipConsolidationSessionId();

        if (!shipConsolidationSessionId)
        {
            throw error("@SYS132237");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        WHSShipmentId proposedShipmentId = ProposedShipment.valueStr();

        if (!this.isValidProposedShipmentId(proposedShipmentId))
        {
            return;
        }

        Set proposedShipmentContentIds = this.retrieveSelectedShipmentContents();

        if (proposedShipmentContentIds && !proposedShipmentContentIds.empty())
        {
            shipConsolidationEngine.setReferenceToProposedShipment(proposedShipmentContentIds, proposedShipmentId);

            if (formHasMethod(callerForm, formMethodStr(WHSShipConsolidationProposal, researchProposedShipments)))
            {
                callerForm.researchProposedShipments();
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSelectedShipmentContents</Name>
				<Source><![CDATA[
    private Set retrieveSelectedShipmentContents()
    {
        Set     proposedShipmentContentIds;
        Common  argsRecord = element.args().record();

        if (argsRecord)
        {
            proposedShipmentContentIds = WHSShipConsolidationWorkbenchForm::getFormDataSourceSelectedRecordIds(FormDataUtil::getFormDataSource(argsRecord));
        }

        return proposedShipmentContentIds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidProposedShipmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if provided shipment is valid.
    /// </summary>
    /// <param name = "_proposedShipmentId">The shipment Id.</param>
    /// <param name = "_showError">Determines whether error should be displayed.</param>
    /// <returns>Validation result.</returns>
    private boolean isValidProposedShipmentId(WHSShipmentId _proposedShipmentId, boolean _showError = true)
    {
        if (!WHSShipConsolidationProposedShipment::existByShipment(shipConsolidationSessionId, _proposedShipmentId))
        {
            return _showError ? checkFailed("@WAX:InvalidProposedShipment") : false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ProposedShipment</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WHSShipConsolidationProposedShipment::lookupShipmentId(this, shipConsolidationSessionId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            return element.isValidProposedShipmentId(ProposedShipment.valueStr(), false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@WAX:SelectProposedShipment</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProposedShipment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@WAX275</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>