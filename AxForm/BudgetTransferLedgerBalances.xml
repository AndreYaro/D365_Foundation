<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetTransferLedgerBalances</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetTransferLedgerBalances extends FormRun
{
    BudgetTransferLedgerBalances budgetTransferLedgerBalances;

    public boolean FiscalYearIsValid = false,
                   StartDateIsValid = true,
                   EndDateIsValid = true,
                   FactorIsValid = true;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the specified date is a valid date to set for the transfer.
    /// </summary>
    /// <param name="_date">
    /// The date to check if it is a valid date for the transfer.
    /// </param>
    /// <returns>
    /// True if the date is valid; otherwise, false.
    /// </returns>
    private boolean checkDate(TransDate _date)
    {
        // A blank date is valid because the user must be able to clear the date field after
        // a date was already entered.
        boolean ret = true;
        FiscalCalendarYear fiscalCalendarYear;

        if (_date)
        {
            fiscalCalendarYear = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(), _date);

            if (!fiscalCalendarYear || fiscalCalendarYear.Name != FiscalYear.valueStr())
            {
                // The date is not within the selected fiscal year.
                ret = checkFailed("@SYS309683");
            }

            if (ret && StartDate.dateValue() && EndDate.dateValue() && StartDate.dateValue() > EndDate.dateValue())
            {
                ret = checkFailed("@SYS30562");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains that logic to run with the user chooses to close the
    /// form using the Ok command.
    /// </summary>
    public void closeOk()
    {
        DialogRunbase dialog = element.args().caller();
        FiscalCalendarYear fiscalCalendarYear = FiscalCalendarYear::findByCalendarYearName(Ledger::fiscalCalendar(), FiscalYear.valueStr());

        if (!factor.realValue())
        {
            checkFailed("@SYS16901");
        }
        else
        {
            if (!StartDate.dateValue())
            {
                // The start date was not specified.  Set it to the start date of the selected fiscal year.
                StartDate.dateValue(fiscalCalendarYear.StartDate);
            }

            if (!EndDate.dateValue())
            {
                // The end date was not specified.  Set it to the end date of the selected fiscal year.
                EndDate.dateValue(fiscalCalendarYear.EndDate);
            }

            this.updateQueryDateRange();

            // Set the form's field values back into the RunBase class.
            budgetTransferLedgerBalances.initParameters(quantity.value(),
                                                        any2Enum(periodUnit.selection()),
                                                        transactionText.valueStr(),
                                                        factor.realValue(),
                                                        minimum.realValue(),
                                                        roundOff.realValue(),
                                                        transferCreditsRevenue.value());

            dialog.updateServer();

            if (budgetTransferLedgerBalances.checkCloseDialog())
            {
                super();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryDateRange</Name>
				<Source><![CDATA[
    private void updateQueryDateRange()
    {
        QueryBuildDataSource qbds = this.runBase().queryRun().query().dataSourceTable(tablenum(GeneralJournalEntry));
        QueryFilter filter = this.runBase().queryRun().query().findQueryFilter(qbds, fieldstr(GeneralJournalEntry, AccountingDate));
        filter.value(SysQuery::range(StartDate.dateValue(), EndDate.dateValue()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form and its field values.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Form was called with incorrect arguments.
    /// </exception>
    public void init()
    {
        if (!element.args() || !element.args().caller())
        {
            throw error("@SYS22539");
        }

        // Get the instance of the RunBase class we were called from.
        budgetTransferLedgerBalances = element.args().caller().runbase();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEditability</Name>
				<Source><![CDATA[
    private void updateEditability()
    {
        StartDate.enabled(FiscalYearIsValid);
        EndDate.enabled(FiscalYearIsValid);

        boolean isValid = FiscalYearIsValid && StartDateIsValid && EndDateIsValid && FactorIsValid;
        Transfer.enabled(isValid);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of the <c>RunBase</c> class that is associated with the form.
    /// </summary>
    /// <returns>
    /// The instance of the <c>BudgetTransferLedgerBalances</c> class associated with the form.
    /// </returns>
    RunBase runBase()
    {
        return budgetTransferLedgerBalances;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>FiscalYear</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          fiscalYearLookup;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildFiscalCalendar;

            fiscalYearLookup = SysTableLookup::newParameters(tablenum(FiscalCalendarYear), this, true);

            // Add the fields to be shown in the lookup form
            fiscalYearLookup.addLookupfield(fieldnum(FiscalCalendarYear, Name));
            fiscalYearLookup.addLookupfield(fieldnum(FiscalCalendarYear, StartDate));
            fiscalYearLookup.addLookupfield(fieldnum(FiscalCalendarYear, EndDate));

            // Create the query datasource
            queryBuildDataSource = query.addDataSource(tablenum(FiscalCalendarYear));

            // Restrict to fiscal years for the company fiscal calendar.
            queryBuildFiscalCalendar = queryBuildDataSource.addRange(fieldnum(FiscalCalendarYear, FiscalCalendar));
            queryBuildFiscalCalendar.value(int642str(Ledger::fiscalCalendar()));

            // Add the query to the lookup form
            fiscalYearLookup.parmQuery(query);

            // Perform lookup
            fiscalYearLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>isValidValue</Name>
						<Source><![CDATA[
        private boolean isValidValue()
        {
            boolean isValid = FiscalYear.valueStr() != '' &&
                              FiscalCalendarYear::existByCalendarYearName(Ledger::fiscalCalendar(), FiscalYear.valueStr());

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (ret && !this.isValidValue())
            {
                // Fiscal year wasn't found for the company fiscal calendar.
                ret = checkFailed(strfmt("@SYS112224",
                                     FiscalYear.valueStr(),
                                     fieldid2name(tablenum(FiscalCalendarYear), fieldnum(FiscalCalendarYear, Name)),
                                     tableid2name(tablenum(FiscalCalendarYear))));
            }

            element.FiscalYearIsValid = ret;
            element.updateEditability();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateQueryDateRange();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ret = element.checkDate(this.dateValue());
            }

            element.StartDateIsValid = ret;
            element.updateEditability();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EndDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateQueryDateRange();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ret = element.checkDate(this.dateValue());
            }

            element.EndDateIsValid = ret;
            element.updateEditability();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Factor</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            element.FactorIsValid = ret;
            element.updateEditability();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS17581</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Dates</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FiscalYear</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>FiscalYearName</ExtendedDataType>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>StartDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS2168</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>EndDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS22882</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS130801</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Shift</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Quantity</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetTransferLedgerBalances_Quantity</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>Periods</ExtendedDataType>
										<Label>@SYS14578</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PeriodUnit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>PeriodUnit</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS130651</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Rules</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Factor</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetTransferLedgerBalances_Factor</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>Factor</ExtendedDataType>
										<Mandatory>Yes</Mandatory>
										<RealValue>1</RealValue>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Minimum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetTransferLedgerBalances_Minimum</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>RealBase</ExtendedDataType>
										<Label>@SYS5330</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Roundoff</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetTransferLedgerBalances_Roundoff</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>RoundOff</ExtendedDataType>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>TransferCreditsRevenue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS130654</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS23052</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Text</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TransactionText</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_Budgeting:BudgetTransferLedgerBalances_TransactionText</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>TransTxt</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2595</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Transfer</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS8801</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>MenuItemButton</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>RunBaseQueryDialog</MenuItemName>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>