<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailPricingPropertyAdd</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailPricingPropertyAdd extends FormRun
{
    RetailPricingPropertyLevel propertyLevel;

}
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        RetailPricingPropertyDefinition_ds.create();

        if (!this.shouldShowExtensionPropertyType())
        {
            RetailPricingPropertyDefinition_PropertyType.delete(enum2Str(RetailPricingPropertyType::Extension));
        }

        propertyLevel = element.args().parmEnum();
        DictEnum de = new DictEnum(enumNum(RetailPricingPredefinedProperty));
        for (int i = 0; i < de.values(); i++)
        {
            RetailPricingPredefinedProperty property = de.index2Value(i);

            if (property == RetailPricingPredefinedProperty::None 
                || RetailPricingPredefinedPropertyHelper::getPredefinedPropertyLevel(property) != propertyLevel
                || RetailPricingPredefinedPropertyHelper::isMandatoryProperty(property))
            {
                RetailPricingPropertyDefinition_PredefinedProperty.delete(enum2Str(property));
            } 
        }
        
        RetailPricingPropertyDefinition.PropertyLevel = propertyLevel;

        if (propertyLevel == RetailPricingPropertyLevel::Header)
        {
            RetailPricingPropertyDefinition_PropertyTarget.delete(enum2Str(RetailPricingPropertySource::Product));
            RetailPricingPropertyDefinition_PropertyTarget.delete(enum2Str(RetailPricingPropertySource::SalesOrderLine));
        }
        else
        {
            RetailPricingPropertyDefinition_PropertyTarget.delete(enum2Str(RetailPricingPropertySource::Customer));
            RetailPricingPropertyDefinition_PropertyTarget.delete(enum2Str(RetailPricingPropertySource::SalesOrderHeader));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldShowExtensionPropertyType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extension should override this method to show extension property type in dialog.
    /// </summary>
    /// <returns>A boolean indicates if extension proproty should show in the add dialog.</returns>
    [Hookable(true), Replaceable(true)]
    public boolean shouldShowExtensionPropertyType()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailPricingPropertyDefinition</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            
            RetailPricingPropertyDefinition_EcoResAttribute.visible(0);
            RetailPricingPropertyDefinition_PropertyTarget.visible(0);
            RetailPricingPropertyDefinition_PredefinedProperty.visible(1);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Data source write is triggered multiple times when closing the form. In our scenario, we will only write once when Add button is clicked.
            // super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PropertyType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                switch (RetailPricingPropertyDefinition.PropertyType)
                {
                    case RetailPricingPropertyType::Predefined:
                        RetailPricingPropertyDefinition_EcoResAttribute.visible(0);
                        RetailPricingPropertyDefinition_PropertyTarget.visible(0);
                        RetailPricingPropertyDefinition_PredefinedProperty.visible(1);
                        break;
                    case RetailPricingPropertyType::EcoResAttribute:
                        RetailPricingPropertyDefinition_EcoResAttribute.visible(1);
                        RetailPricingPropertyDefinition_PropertyTarget.visible(1);
                        RetailPricingPropertyDefinition_PredefinedProperty.visible(0);
                        break;
                    default:
                        RetailPricingPropertyDefinition_EcoResAttribute.visible(0);
                        RetailPricingPropertyDefinition_PredefinedProperty.visible(0);
                        RetailPricingPropertyDefinition_PropertyTarget.visible(0);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RetailPricingPropertyDefinition_PredefinedProperty</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (RetailPricingPropertyDefinition.PredefinedProperty != RetailPricingPredefinedProperty::None)
            {
                RetailPricingPropertyDefinition.PropertySource = RetailPricingPredefinedPropertyHelper::getPredefinedPropertySource(RetailPricingPropertyDefinition.PredefinedProperty);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RetailPricingPropertyDefinition_EcoResAttribute</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(EcoResAttribute), this);
            
            sysTableLookup.addLookupfield(fieldNum(EcoResAttribute, Name));
            sysTableLookup.addLookupfield(fieldNum(EcoResAttribute, AttributeType));
            Query query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tableNum(EcoResAttribute));

            // This is what's shown in Attributes form. See EcoResAttribute::initValue().
            qbds.addRange(fieldNum(EcoResAttribute, AttributeModifier)).value(queryValue(EcoResAttributeModifier::Catalog));
            qbds = qbds.addDataSource(tableNum(EcoResAttributeType));
            qbds.relations(true);
            qbds.addRange(fieldNum(EcoResAttributeType, DataType)).value(strFmt('!%1,!%2,!%3', AttributeDataType::Currency, AttributeDataType::DateTime, AttributeDataType::Reference));

            sysTableLookup.parmQuery(query);
            return sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ttsbegin;

            RetailPricingPropertyDefinition existingDefinition = RetailPricingPropertyDefinition::findPropertyDefinitionCounterpart(
                RetailPricingPropertyDefinition, RetailPricingPropertyProcessStatus::Draft, NoYes::Yes, true);

            if (existingDefinition.RecId > 0)
            {
                // If it is adding back a property marked as delete, just remove the pending deletion flag instead of inserting a new record.
                existingDefinition.IsPendingDeletion = NoYes::No;
                existingDefinition.DisplayOrder = RetailPricingPropertyDefinition.DisplayOrder;
                existingDefinition.update();
            }
            else
            {
                RetailPricingPropertyDefinition.Status = RetailPricingPropertyProcessStatus::Draft;
                RetailPricingPropertyDefinition.insert();
            }

            RetailPricingSharedParameters retailPricingSharedParameters = RetailPricingSharedParameters::find(true);
            if (RetailPricingPropertyDefinition.PropertyLevel == RetailPricingPropertyLevel::Header
                && retailPricingSharedParameters.PriceGroupApplicabilityRuleProcessStatus == RetailPricingPropertyProcessStatus::Published)
            {
                retailPricingSharedParameters.PriceGroupApplicabilityRuleProcessStatus = RetailPricingPropertyProcessStatus::Draft;
                retailPricingSharedParameters.update();
            }
            
            if (RetailPricingPropertyDefinition.PropertyLevel == RetailPricingPropertyLevel::Line
                && retailPricingSharedParameters.DiscountApplicabilityRuleProcessStatus == RetailPricingPropertyProcessStatus::Published)
            {
                retailPricingSharedParameters.DiscountApplicabilityRuleProcessStatus = RetailPricingPropertyProcessStatus::Draft;
                retailPricingSharedParameters.update();
            }

            ttscommit;

            element.closeOk();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailPricingPropertyDefinition</Name>
			<Table>RetailPricingPropertyDefinition</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DisplayOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtendedPropertyRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PredefinedProperty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyTarget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<MaxAccessRight>Add</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RetailPricing:RetailPricingPredefinedPropertyAddLabel</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Content</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>RetailPricingPropertyDefinition_PropertyType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PropertyType</DataField>
						<DataSource>RetailPricingPropertyDefinition</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>RetailPricingPropertyDefinition_PredefinedProperty</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PredefinedProperty</DataField>
						<DataSource>RetailPricingPropertyDefinition</DataSource>
						<Label>@RetailPricing:RetailPricingPropertyLabelName</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>RetailPricingPropertyDefinition_EcoResAttribute</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>RetailPricingPropertyDefinition</DataSource>
						<ReferenceField>EcoResAttributeRecId</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>RetailPricingPropertyDefinition_PropertyTarget</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PropertySource</DataField>
						<DataSource>RetailPricingPropertyDefinition</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>RetailPricingPropertyDefinition_DisplayOrder</Name>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>DisplayOrder</DataField>
						<DataSource>RetailPricingPropertyDefinition</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>Submit</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>AddButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>