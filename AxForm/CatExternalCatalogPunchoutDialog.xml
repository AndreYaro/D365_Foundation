<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CatExternalCatalogPunchoutDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CatExternalCatalogPunchoutDialog extends FormRun
{
    private PurchReqInternalOrgManager_LegalEntity      purchReqInternalOrgManager_LegalEntity;
    private PurchReqInternalOrgManager_OperatingUnit    purchReqInternalOrgManager_OperatingUnit;
    private CatExternalCatalogPunchoutDialogHelper      catExternalCatalogPunchoutDialogHelper;
    private PurchReqTable                               purchReqTable;
    private Map                                         catExternalCategoriesMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!element.args().caller()
            || !element.args().record()
            || element.args().record().TableId != tableNum(PurchReqTable))
        {
            throw error(Error::missingFormActiveBuffer(element.name(), tableStr(PurchReqTable)));
        }

        purchReqTable = element.args().record();
        purchReqInternalOrgManager_LegalEntity   = new PurchReqInternalOrgManager_LegalEntity();
        purchReqInternalOrgManager_OperatingUnit = new PurchReqInternalOrgManager_OperatingUnit();
        catExternalCatalogPunchoutDialogHelper = CatExternalCatalogPunchoutDialogHelper::construct();

        CatExternalCatalogPolicyBasedFields_ds.initCatExternalCatalogPolicyBasedFields();

        element.refreshCatExternalCatalogSummary();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCatExternalCatalogSummary</Name>
				<Source><![CDATA[
    private void refreshCatExternalCatalogSummary()
    {
        catExternalCatalogPunchoutDialogHelper.refreshCatExternalCatalogSummaryDatasource(CatExternalCatalogSummary_ds.query().dataSourceTable(CatExternalCatalogSummary_ds.table()),
                                                                                        catExternalCatalogPolicyBasedFields.BuyingLegalEntity,
                                                                                        catExternalCatalogPolicyBasedFields.ReceivingOperatingUnit);
        CatExternalCatalogPolicyBasedFields_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearSearchText</Name>
				<Source><![CDATA[
    private void clearSearchText()
    {
        SearchString.text('');
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CatExternalCatalogPolicyBasedFields</Name>
				<Methods>
					<Method>
						<Name>initCatExternalCatalogPolicyBasedFields</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes fields of <c>CatExternalCatalogPolicyBasedFields</c> datasource.
        /// </summary>
        public void initCatExternalCatalogPolicyBasedFields()
        {
            ttsbegin;
            catExternalCatalogPolicyBasedFields.Originator = purchReqTable.Originator;
            catExternalCatalogPolicyBasedFields.Requisitioner = catExternalCatalogPolicyBasedFields.Originator;
            this.initOrganizationValues();
            this.setDefaultCompany();
            catExternalCatalogPolicyBasedFields.doInsert();
            ttscommit;

            this.research();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initOrganizationValues</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes Buying legal entity fields
        /// </summary>
        public void initOrganizationValues()
        {
            catExternalCatalogPolicyBasedFields.BuyingLegalEntity = HcmWorkerHelper::getLegalEntity(catExternalCatalogPolicyBasedFields.Requisitioner).DataArea;
            catExternalCatalogPolicyBasedFields.ReceivingOperatingUnit = HcmWorkerHelper::getPrimaryDepartmentRecId(catExternalCatalogPolicyBasedFields.Requisitioner);
            CatExternalCatalogPolicyBasedFields_ds.setDefaultCompany();
        }

]]></Source>
					</Method>
					<Method>
						<Name>setDefaultCompany</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set default company to the buying legal entity
        /// </summary>
        /// <param name="_dataAreaId">
        /// Data area id of the company to be defaulted to.
        /// </param>
       public void setDefaultCompany(DataAreaId _dataAreaId = curext())
        {
            DataAreaId dataAreaId = CatExternalCatalogPolicyBasedFields.BuyingLegalEntity ? CatExternalCatalogPolicyBasedFields.BuyingLegalEntity : _dataAreaId;

            if (dataAreaId != curext())
            {
                appl.setDefaultCompany(dataAreaId, false);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BuyingLegalEntity</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                CatExternalCatalogPolicyBasedFields_ds.setDefaultCompany();
                element.refreshCatExternalCatalogSummary();
                element.clearSearchText();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                purchReqInternalOrgManager_LegalEntity.lookup(catExternalCatalogPolicyBasedFields.Requisitioner, _formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                ret = ret & purchReqInternalOrgManager_LegalEntity.validate(catExternalCatalogPolicyBasedFields.Requisitioner, CompanyInfo::findDataArea(catExternalCatalogPolicyBasedFields.BuyingLegalEntity).RecId);
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReceivingOperatingUnit</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return  purchReqInternalOrgManager_OperatingUnit.lookup(catExternalCatalogPolicyBasedFields.Requisitioner, _formReferenceControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret = super(_formReferenceControl);

                if (ret)
                {
                    if (! purchReqInternalOrgManager_OperatingUnit.validate(catExternalCatalogPolicyBasedFields.Requisitioner, ret.RecId))
                    {
                        ret = null;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                CatExternalCatalogPolicyBasedFields_ds.setDefaultCompany();
                element.refreshCatExternalCatalogSummary();
                element.clearSearchText();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Requisitioner</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return PurchReqLine::lookupRequester(_formReferenceControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                CatExternalCatalogPolicyBasedFields_ds.initOrganizationValues();
                element.refreshCatExternalCatalogSummary();
                element.clearSearchText();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                if (catExternalCatalogPolicyBasedFields.Originator != catExternalCatalogPolicyBasedFields.Requisitioner)
                {
                    ret = PurchReqLine::checkOnBehalfAuthorization(catExternalCatalogPolicyBasedFields.Originator, catExternalCatalogPolicyBasedFields.Requisitioner, true);
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CatExternalCatalogSummary</Name>
				<Methods>
					<Method>
						<Name>catalogImage</Name>
						<Source><![CDATA[
        [SysClientCacheDataMethod]
        public display container catalogImage(CatExternalCatalogSummary _catExternalCatalogSummary)
        {
            ImageReference imageReference = ImageReference::constructForSymbol(ImageReferenceSymbol::Warning);

            if (_catExternalCatalogSummary.RecId)
            {
                imageReference = EcoResProductImage::externalCatalogImage(CatExternalCatalog::find(_catExternalCatalogSummary.Name));
            }            
            
            return imageReference.pack();
        }

]]></Source>
					</Method>
					<Method>
						<Name>getProcurementCategories</Name>
						<Source><![CDATA[
        [SysClientCacheDataMethod]
        public display str getProcurementCategories(CatExternalCatalogSummary _catExternalCatalogSummary)
        {
            return catExternalCatalogPunchoutDialogHelper.getCatExternalCatalogAvailableCategories(_catExternalCatalogSummary.RecId);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SearchButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            catExternalCatalogPunchoutDialogHelper.search(CatExternalCatalogSummary_ds.query().dataSourceTable(CatExternalCatalogSummary_ds.table()), SearchString.text());
            CatExternalCatalogPolicyBasedFields_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalogPolicyBasedFields</Name>
			<Table>CatExternalCatalogPolicyBasedFields</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BuyingLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Originator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceivingOperatingUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Requisitioner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CatExternalCatalogSummary</Name>
			<Table>CatExternalCatalogSummary</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorDataAreaId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>CatExternalCatalogPolicyBasedFields</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS135402</Caption>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>OrgFilterGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>CatExternalCatalogPolicyBasedFields_Requisitioner</Name>
						<HelpText>@FieldDescriptions_ProcurementAndSourcing:CatExternalCatalogs_Requisitioner</HelpText>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>CatExternalCatalogPolicyBasedFields</DataSource>
						<ReferenceField>Requisitioner</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CatExternalCatalogPolicyBasedFields_BuyingLegalEntity</Name>
						<HelpText>@FieldDescriptions_ProcurementAndSourcing:CatExternalCatalogs_BuyingLegalEntity</HelpText>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>BuyingLegalEntity</DataField>
						<DataSource>CatExternalCatalogPolicyBasedFields</DataSource>
						<Label>@SYS342437</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>CatExternalCatalogPolicyBasedFields_ReceivingOperatingUnit</Name>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>CatExternalCatalogPolicyBasedFields</DataSource>
						<ReferenceField>ReceivingOperatingUnit</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SearchGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SearchString</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SCM:CategorySearch</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>SearchButton</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>ImageOnly</ButtonDisplay>
								<NormalImage>Find</NormalImage>
								<Text>@SYS3340</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>CatalogsSection</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageCatalog</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FilterGroup</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>ExternalCatalogFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>GridItemCatalog</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>CatExternalCatalog_Name</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridItemCatalog</Name>
								<ElementPosition>1431655764</ElementPosition>
								<ExtendedStyle>cardList</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CardGroup</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>BusinessCard</ExtendedStyle>
										<Pattern>BusinessCardStatus</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormImageControl">
												<Name>CatExternalCatalogImage</Name>
												<ExtendedStyle>card_imageSquare</ExtendedStyle>
												<Type>Image</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>catalogImage</DataMethod>
												<DataSource>CatExternalCatalogSummary</DataSource>
												<Label>@SCM:CatExternalCatalogImage</Label>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CatExternalCatalog_Name</Name>
												<ExtendedStyle>Heading</ExtendedStyle>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>Name</DataField>
												<DataSource>CatExternalCatalogSummary</DataSource>
												<ShowLabel>No</ShowLabel>
												<ViewEditMode>View</ViewEditMode>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProcurementCategories</Name>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>getProcurementCategories</DataMethod>
												<DataSource>CatExternalCatalogSummary</DataSource>
												<Label>@SCM:CatExternalCatalogCategoriesLookup</Label>
												<ShowLabel>No</ShowLabel>
												<ViewEditMode>View</ViewEditMode>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>FormActionPaneControl</Name>
												<Skip>Yes</Skip>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>FormButtonGroupControl</Name>
														<Skip>Yes</Skip>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>NavigateButton</Name>
																<NeededPermission>Read</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Popout</NormalImage>
																<Text>@SYS340823</Text>
															</AxFormControl>
														</Controls>
													</AxFormControl>
												</Controls>
												<Style>Strip</Style>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>None</ArrangeMethod>
										<DataSource>CatExternalCatalogSummary</DataSource>
										<Style>Card</Style>
									</AxFormControl>
								</Controls>
								<DataSource>CatExternalCatalogSummary</DataSource>
								<MultiSelect>No</MultiSelect>
								<Style>List</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS89156</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitContainer</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Cancel</Name>
						<Type>Button</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS12778</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Close</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<MultiSelect>No</MultiSelect>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS15212</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>