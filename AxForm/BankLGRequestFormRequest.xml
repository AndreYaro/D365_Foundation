<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BankLGRequestFormRequest</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>displayCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///     The display method to display the currency code of Letter of Guarantee.
    /// </summary>
    /// <returns>
    ///     The currency code.
    /// </returns>
    display public BankLGCurrencyCode displayCurrencyCode()
    {
        return originDocument.BankLGDocumentMap::getCurrencyCode();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        public void init()
    {
        boolean isCallerLegal = false;

        if (element.args().caller())
        {
            isCallerLegal = (element.args().caller().name() == formstr(BankLGRequestForm));
            Debug::assert(isCallerLegal);
        }
        else
        {
            throw error("@SYS22539");
        }

        if (isCallerLegal)
        {
            bankLGType      = element.args().caller().getBankLGType();
            originDocument  = element.args().caller().getOriginDocument();

            Debug::assert(bankLGType != null);
            Debug::assert(originDocument.RecId != 0);

            originType      = originDocument.BankLGDocumentMap::getOriginDocumentType();
            originNum       = originDocument.DocumentId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>submitAction</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Uses the inputed parameters to submit the action.
    /// </summary>
    /// <returns>
    ///     True if action sucess; otherwise, false.
    /// </returns>
    public boolean submitAction()
    {
        boolean             ret = false;
        BankLGActionParms   actionParms;

        if (purposeCode.validate() && value.validate() && expiryDate.validate())
        {
            actionParms = BankLGActionParms::construct(BankLGAllActionType::Request);
            actionParms.parmOriginType(originType);
            actionParms.parmOriginNum(originNum);
            actionParms.parmPurposeCodeId(purposeCode.text());
            actionParms.parmValueCur(value.realValue());
            actionParms.parmExpiryDateTime(
                DateTimeUtil::removeTimeZoneOffset(
                    expiryDate.dateTimeValue(),
                    DateTimeUtil::getUserPreferredTimeZone()));

            ret = BankLGActionType::run(actionParms);

            if (ret)
            {
                originDocument.reread();
                element.args().caller().actionDone();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class BankLGRequestFormRequest extends FormRun
    {
        BankLGType          bankLGType;
        BankLGOriginNum     originNum;
        BankLGOriginType    originType;
        BankLGDocumentMap   originDocument;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PurposeCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
                public boolean validate()
        {
            boolean     ret;
            ReasonTable reasonTable;

            ret = super();

            if (ret)
            {
                reasonTable = ReasonTable::find(this.text());
                if (reasonTable.RecId == 0 || reasonTable.BankLGPurposeCode == NoYes::No)
                {
                    // '%1' is not a vaild purpose code.
                    ret = checkFailed(strfmt("@SYS321825", this.text()));
                    this.text('');
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ExpiryDate</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
                public boolean modified()
        {
            boolean                 ret;
            BankLGExpiryDateTime    expiryDateTime;

            ret = super();

            if (ret)
            {
                expiryDateTime = DateTimeUtil::removeTimeZoneOffset(
                    this.dateTimeValue(),
                    DateTimeUtil::getUserPreferredTimeZone());

                if (expiryDateTime < DateTimeUtil::getSystemDateTime())
                {
                    // It is not allowed to select a past time as expiry date.
                    ret = checkFailed("@SYS328174");
                    this.dateTimeValue(DateTimeUtil::minValue());
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommandButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
                void clicked()
        {
            if (element.submitAction())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS317939</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PurposeCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>BankLGPurposeCodeId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ValueAndCurrency</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Value</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>BankLGValueCur</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Currency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayCurrencyCode</DataMethod>
								<Label>@SYS7572</Label>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>ExpiryDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>DateTime</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>BankLGExpiryDateTime</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CommandButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>