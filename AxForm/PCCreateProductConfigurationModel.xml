<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PCCreateProductConfigurationModel</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PCCreateProductConfigurationModel extends FormRun
{
    Args args;
    PCProductConfigurationModel productModel;
    boolean editMode;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        FormRun         callerForm;
        FormDataSource  fds;
        int             numberOfDataSource;
        int             dataSource;
        int             ecoResTableId = tablenum(EcoResCategory);
        int             pcClassTableId = tablenum(PCClass);
        int             fdsTableId;

        if (!editMode)
        {
            PCModelingLibrary::loadForm(formstr(PCProductConfigurationModelDetails),productModel, this, true, false);

            super();
        }
        else
        {
            productModel.reread();
            super();
            if (args && args.caller())
            {
                // Enumerate the data-sources on the caller form and force a refresh on
                // EcoRescategory and PCClass
                callerForm = args.caller() as FormRun;
                if (callerForm)
                {
                    numberOfDatasource = callerForm.dataSourceCount();
                    for (dataSource=1; dataSource<=numberOfDataSource; dataSource++)
                    {
                        fds = callerForm.dataSource(dataSource);
                        fdsTableId = fds.table();
                        if (fdsTableId == ecoResTableId || fdsTableId == pcClassTableId)
                        {
                            fds.research();
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        PCProductConfigurationModel callerModel;

        args = element.args();
        super();

        //editing exiting product model
        if (args.record() != null && (args.openMode() == OpenMode::Edit))
        {
            editMode = true;
            callerModel = args.record() as PCProductConfigurationModel;
            // Pass on a copy of the buffer since the form does not support dyna links
            element.loadProductConfigurationModel(callerModel.data());
        }
        else
        {
            columnsEditControl.value(PcModelingLibrary::ColumnsDefault);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadProductConfigurationModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the details of the specified product configuration model.
    /// </summary>
    /// <param name="_model">
    /// The product configuration model to load.
    /// </param>
    public void loadProductConfigurationModel(PCProductConfigurationModel _model)
    {
        productModel = _model;

        this.design().caption("@SYS183807");
        nameEditControl.text(productModel.Name);
        columnsEditControl.value(productModel.Columns);
        solverStrategyComboBox.selection(productModel.SolverStrategy);
        descriptionEditControl.text(productModel.editDescription(false, ''));
        newSelecExistingRadioButton.selection(enum2int(PCNewSelectComponent::SelectExisting));
        selectComponentDropDown.enabled(true);
        selectComponentDropDown.mandatory(true);
        newComponentName.enabled(false);
        newComponentName.mandatory(false);
        selectComponentDropDown.text(productModel.getRootComponent().Name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProductModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the specified product configuration model with the details inserted into the form.
    /// </summary>
    /// <returns>
    /// true if the update was successful; otherwise, false.
    /// </returns>
    public boolean updateProductModel()
    {
        str modelName = nameEditControl.text();
        if (!modelName)
        {
            error(strfmt("@SYS26332", fieldpname(PCProductConfigurationModel, Name)));
            return false;
        }
        
        int columns = columnsEditControl.value();
        if (columns < PcModelingLibrary::ColumnsLowerLimit || columns > PcModelingLibrary::ColumnsUpperLimit)
        {
            error("@SCM:PCRuntimeDialogMaxNoOfColumnsRangeError");
            return false;
        }

        PCNewSelectComponent selection = any2Enum(newSelecExistingRadioButton.selection());
        str existingComponentName = selectComponentDropDown.text();
        str newComponentNameStr = newComponentName.text();
        if ( (selection == PCNewSelectComponent::SelectExisting) &&
            (!existingComponentName))
        {
            error(strfmt("@SYS26332", fieldpname(PCProductConfigurationModel, RootComponentClass)));
            return false;
        }
        else if (selection == PCNewSelectComponent::New)
        {
            existingComponentName = '';
            if (!newComponentNameStr)
            {
                error(strfmt("@SYS26332", fieldpname(EcoResCategory, Name)));
                return false;
            }
            else
            {
                EcoResCategoryHierarchy categoryHierarchy = PCModelingLibrary::findOrCreateCategoryHierarchy();
                if (EcoResCategory::existByName(newComponentNameStr, categoryHierarchy.RecId))
                {
                    error(strfmt("@SYS153389", tablepname(PCClass),  newComponentNameStr));
                    return false;
                }
            }
        }

        PCSolverStrategy solverStrategy = solverStrategyComboBox.selection();
        str modelDescription = descriptionEditControl.text();
        productModel = PCModelingLibrary::createEditProductConfigurationModel(modelName,
                                                                              modelDescription,
                                                                              existingComponentName,
                                                                              newComponentNameStr,
                                                                              productModel,
                                                                              solverStrategy,
                                                                              columns);

        if (productModel.RecId)
        {
            if (args && args.caller())
            {
                FormRun callerForm = args.caller();
                FormDataSource fds = callerForm.dataSource();
                fds.research(true);
            }
        }

        return (productModel.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>NewSelecExistingRadioButton</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedFormMethod', 'PostR1TODO')]
        public int selectionChange()
        {
            int     ret;
            boolean isSelection;
            PCNewSelectComponent selection;

            ret = super();

            //grab the selection and cast it to the enum
            selection = any2Enum(this.selection());
            isSelection = (selection == PCNewSelectComponent::SelectExisting);

            //setting the dropdown enabled or disabled
            selectComponentDropDown.enabled(isSelection);
            selectComponentDropDown.mandatory(isSelection);

            //setting the dropdown enabled or disabled
            newComponentName.enabled(!isSelection);
            newComponentName.mandatory(!isSelection);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NewComponentName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            //
            //allow leaving the control even if no value is entered
            //giving the user the chance to change new->existing component
            //
            if (this.text() == '')
            {
                return true;
            }
            else
            {
                return super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectComponentDropDown</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            new MenuFunction(menuitemdisplaystr(PCComponentList), MenuItemType::Display).run(new Args(this));
        }

]]></Source>
					</Method>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            //
            //allow leaving the control even if no value is entered
            //giving the user the chance to change existing->new component
            //
            if (this.text() == '')
            {
                return true;
            }
            else
            {
                return super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            PCModelingLibrary::componentLookup(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.updateProductModel())
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS183811</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<MaximizeBox xmlns="">No</MaximizeBox>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>General</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NameEditControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PCProductModelName</ExtendedDataType>
								<LookupButton>Never</LookupButton>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DescriptionEditControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PCDescription</ExtendedDataType>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SolverStrategyComboBox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>PCSolverStrategy</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>ColumnsEditControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@SCM:PCRuntimeDialogMaxNoOfColumnsHelpText</HelpText>
								<Type>Integer</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PCRuntimeDialogMaxNoOfColumns</ExtendedDataType>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>RootComponentGroup</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRadioButtonControl">
								<Name>NewSelecExistingRadioButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>RadioButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Caption>@SYS310580</Caption>
								<EnumType>PCNewSelectComponent</EnumType>
								<FrameType>None</FrameType>
								<Selection>1</Selection>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NewComponentName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<LeftMode>AutoRight</LeftMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PCName</ExtendedDataType>
								<LookupButton>Never</LookupButton>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SelectComponentDropDown</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<LeftMode>AutoRight</LeftMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PCName</ExtendedDataType>
								<LookupButton>Always</LookupButton>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>